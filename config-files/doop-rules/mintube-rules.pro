-keepclassmembers class java.lang.ThreadGroup { void <init>(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.Runnable); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class java.lang.ThreadGroup { void uncaughtException(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class java.security.PrivilegedActionException { void <init>(java.lang.Exception); }
-keepclassmembers class java.lang.ClassLoader { void <init>(); }
-keepclassmembers class java.lang.Object { java.lang.Object clone(); }
-keepclassmembers class java.lang.System { void arraycopy(java.lang.Object,int,java.lang.Object,int,int); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class sun.misc.Unsafe { void putObject(java.lang.Object,long,java.lang.Object); }
-keepclassmembers class java.lang.Thread { java.lang.Thread currentThread(); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock { void decOpenCountLocked(); }
-keepclassmembers class android.content.res.XmlBlock { android.content.res.XmlResourceParser newParser(); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void addCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass createClassDesc(java.lang.Class); }
-keepclassmembers class android.content.res.XmlBlock { int access$008(android.content.res.XmlBlock); }
-keepclassmembers class java.util.Hashtable { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Hashtable { boolean containsKey(java.lang.Object); }
-keepclassmembers class dalvik.system.DexPathList { void splitAndAdd(java.lang.String,boolean,java.util.ArrayList); }
-keepclassmembers class java.io.ObjectStreamClass { void buildFieldDescriptors(java.lang.reflect.Field[]); }
-keepclassmembers class java.util.Hashtable { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { java.lang.String decode(byte[],char[],int,int); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] makeTable(int); }
-keepclassmembers class android.util.MathUtils { float constrain(float,float,float); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String optimizedPathFor(java.io.File,java.io.File); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { long countBytes(java.lang.String,boolean); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] doubleCapacity(); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.Class findClass(java.lang.String,java.util.List); }
-keepclassmembers class java.io.ObjectStreamClass { long computeSerialVersionUID(java.lang.Class,java.lang.reflect.Field[]); }
-keepclassmembers class dalvik.system.DexPathList { java.net.URL findResource(java.lang.String); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { void encode(byte[],int,java.lang.String); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { byte[] encode(java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.util.MathUtils { float lerp(float,float,float); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { android.util.PathParser$PathDataNode[] evaluate(float,android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[]); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean nonfairTryAcquire(int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean tryRelease(int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class resolveConstructorClass(java.lang.Class); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper); }
-keepclassmembers class android.view.animation.TranslateAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService$4 { boolean a(float,float,float,float); }
-keepclassmembers class android.animation.Animator { void appendChangingConfigurations(int); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField getField(java.lang.String); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayedInternal(int,java.lang.Object,java.lang.Object,long); }
-keepclassmembers class java.io.ObjectStreamClass { void copyFieldAttributes(); }
-keepclassmembers class android.view.Choreographer { void scheduleFrameLocked(long); }
-keepclassmembers class android.support.a.a.b { void a(android.animation.Animator); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService$4 { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.support.a.a.b { boolean a(); }
-keepclassmembers class android.widget.PopupWindow { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.Certificate[] verifySignature(java.io.InputStream,java.io.InputStream); }
-keepclassmembers class android.support.a.a.b { int getChangingConfigurations(); }
-keepclassmembers class libcore.net.url.JarHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { int findTokenStart(int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class checkAndGetTcObjectClass(); }
-keepclassmembers class android.view.animation.Animation$Description { android.view.animation.Animation$Description parseValue(android.util.TypedValue); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { int findTokenEnd(int); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { int findTokenSeparator(int); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.X509Certificate findCert(java.security.Principal,java.security.cert.X509Certificate[]); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.X509Certificate[] createChain(java.security.cert.X509Certificate,java.security.cert.X509Certificate[]); }
-keepclassmembers class com.android.volley.i { void a(); }
-keepclassmembers class android.widget.PopupWindow { int computeFlags(int); }
-keepclassmembers class com.android.volley.i { void b(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { boolean findDropDownPosition(android.view.View,android.view.WindowManager$LayoutParams,int,int,int); }
-keepclassmembers class android.widget.PopupWindow { int getMaxAvailableHeight(android.view.View,int,boolean); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { int getBitmapId(android.graphics.Bitmap); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void writeBitmapsToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.ak$b { void <init>(android.view.View); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void addBitmapMemory(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void assimilate(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.support.v7.widget.ak$b { boolean a(android.view.View,float,float,float); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECGroupContext { com.android.org.conscrypt.OpenSSLECGroupContext getCurveByName(java.lang.String); }
-keepclassmembers class android.os.Handler { boolean sendMessageDelayed(android.os.Message,long); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECGroupContext { com.android.org.conscrypt.OpenSSLECGroupContext getInstance(int,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class android.net.Uri { java.lang.String toSafeString(); }
-keepclassmembers class org.apache.http.impl.io.HttpTransportMetricsImpl { void incrementBytesTransferred(long); }
-keepclassmembers class android.util.TypedValue { float complexToFloat(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { java.lang.String toString(); }
-keepclassmembers class android.util.TypedValue { float complexToDimension(int,android.util.DisplayMetrics); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelOffset(int,android.util.DisplayMetrics); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelSize(int,android.util.DisplayMetrics); }
-keepclassmembers class android.util.TypedValue { float applyDimension(int,float,android.util.DisplayMetrics); }
-keepclassmembers class android.util.TypedValue { float complexToFraction(int,float,float); }
-keepclassmembers class android.util.TypedValue { java.lang.String coerceToString(int,int); }
-keepclassmembers class android.util.Base64$Encoder { void <init>(int,byte[]); }
-keepclassmembers class android.net.Uri { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Calendar { void clear(); }
-keepclassmembers class android.util.Base64$Encoder { boolean process(byte[],int,int,boolean); }
-keepclassmembers class android.animation.StateListAnimator { void addState(int[],android.animation.Animator); }
-keepclassmembers class android.os.AsyncTask { void <clinit>(); }
-keepclassmembers class android.animation.StateListAnimator { void clearTarget(); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator clone(); }
-keepclassmembers class android.view.View { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { int getCapacity(); }
-keepclassmembers class android.animation.StateListAnimator { void setState(int[]); }
-keepclassmembers class java.util.Calendar { void setTimeInMillis(long); }
-keepclassmembers class android.animation.StateListAnimator { void appendChangingConfigurations(int); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { void dropEntry(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.util.AbstractSet { int hashCode(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.v4.app.an { android.os.Bundle[] a(android.support.v4.app.am$a[]); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getPropertyName(); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$ThreadPolicy allowThreadDiskReads(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.os.StrictMode { int parseViolationFromMessage(java.lang.String); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.os.StrictMode { boolean vmFileUriExposureEnabled(); }
-keepclassmembers class android.os.StrictMode { void onVmPolicyViolation(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.view.KeyEvent { int normalizeMetaState(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasNoModifiers(int); }
-keepclassmembers class android.view.KeyEvent { int metaStateFilterDirectionalModifiers(int,int,int,int,int); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasModifiers(int,int); }
-keepclassmembers class libcore.util.ZoneInfo { libcore.util.ZoneInfo makeTimeZone(java.lang.String,libcore.io.BufferIterator); }
-keepclassmembers class android.os.StrictMode { void readAndHandleBinderCallViolations(android.os.Parcel); }
-keepclassmembers class android.view.KeyEvent { boolean isShiftPressed(); }
-keepclassmembers class libcore.util.ZoneInfo { void <init>(java.lang.String,int[],byte[],int[],byte[]); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$Span enterCriticalSpan(java.lang.String); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void show(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHotspotX(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCursorOffset(); }
-keepclassmembers class android.animation.ObjectAnimator { boolean hasSameTargetAndProperties(android.animation.Animator); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffset(int,int,int,int,int,int); }
-keepclassmembers class android.animation.ObjectAnimator { void start(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffset(long); }
-keepclassmembers class libcore.util.ZoneInfo { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class android.animation.ObjectAnimator { void initAnimation(); }
-keepclassmembers class android.animation.ObjectAnimator { void setupEndValues(); }
-keepclassmembers class android.animation.ObjectAnimator { void setupStartValues(); }
-keepclassmembers class libcore.util.ZoneInfo { int hashCode(); }
-keepclassmembers class android.animation.ObjectAnimator { void animateValue(float); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String toString(); }
-keepclassmembers class android.support.a.a.b$a { void <init>(android.content.Context,android.support.a.a.b$a,android.graphics.drawable.Drawable$Callback,android.content.res.Resources); }
-keepclassmembers class android.view.KeyEvent { java.lang.String metaStateToString(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void init(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void nextFrame(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compateOids(org.apache.harmony.security.utils.ObjectIdentifier,org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.app.Activity { void stopManagingCursor(android.database.Cursor); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.v4.app.ad$a { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.lang.String,java.util.ArrayList,android.os.Bundle,int,int,android.app.Notification,java.lang.String,boolean,java.lang.String); }
-keepclassmembers class android.view.View { void saveAttributeData(android.util.AttributeSet,android.content.res.TypedArray); }
-keepclassmembers class android.support.v4.f.e { void d(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesCount(int); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { float viscousFluid(float); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <clinit>(); }
-keepclassmembers class android.view.View { java.lang.String toString(); }
-keepclassmembers class android.app.Activity { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class android.app.Activity { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.support.v4.f.e { void b(long,java.lang.Object); }
-keepclassmembers class android.app.Activity { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateVariant(java.lang.String); }
-keepclassmembers class android.app.Activity { boolean onSearchRequested(); }
-keepclassmembers class android.provider.Settings$NameValueCache { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.support.a.a.c { int a(java.lang.String,int); }
-keepclassmembers class android.view.View { boolean performButtonActionOnTouchDown(android.view.MotionEvent); }
-keepclassmembers class android.support.a.a.c { void a(java.lang.String,int,android.support.a.a.c$a); }
-keepclassmembers class android.widget.Editor { void destroyDisplayListsData(); }
-keepclassmembers class android.widget.Editor { void showError(); }
-keepclassmembers class android.view.View { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class android.support.a.a.c { android.support.a.a.c$b[] a(java.lang.String); }
-keepclassmembers class android.support.a.a.c { android.support.a.a.c$b[] a(android.support.a.a.c$b[]); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class android.widget.Editor { int getErrorX(); }
-keepclassmembers class android.support.a.a.c { float[] b(java.lang.String); }
-keepclassmembers class android.view.View { void clearFocusInternal(android.view.View,boolean,boolean); }
-keepclassmembers class android.widget.Editor { int getErrorY(); }
-keepclassmembers class android.support.a.a.c { float[] b(float[],int,int); }
-keepclassmembers class android.view.View { boolean hasFocus(); }
-keepclassmembers class android.view.View { boolean hasFocusable(); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.Editor { void adjustInputType(boolean,boolean,boolean,boolean); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator createStateListAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.Editor { void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView); }
-keepclassmembers class android.view.View { void getBoundsOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.Editor { boolean selectCurrentWord(); }
-keepclassmembers class java.io.DataInputStream { int readUnsignedShort(); }
-keepclassmembers class android.animation.AnimatorInflater { void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,float); }
-keepclassmembers class java.io.DataInputStream { int skipBytes(int); }
-keepclassmembers class android.widget.Editor { long getCharRange(int); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.view.View { int getAccessibilityViewId(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { int hashCode(); }
-keepclassmembers class android.view.View { void resetPressedState(); }
-keepclassmembers class android.view.View { boolean isFocused(); }
-keepclassmembers class android.view.View { android.view.View findFocus(); }
-keepclassmembers class android.widget.Editor { boolean isPositionOnText(float,float); }
-keepclassmembers class android.view.View { void setScrollContainer(boolean); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.nio.charset.Charset); }
-keepclassmembers class android.app.Activity { java.lang.String getLocalClassName(); }
-keepclassmembers class android.view.View { boolean isShown(); }
-keepclassmembers class android.view.View { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.view.View { boolean fitSystemWindowsInt(android.graphics.Rect); }
-keepclassmembers class android.view.View { android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class java.lang.String { void <init>(char[],int,int); }
-keepclassmembers class android.widget.Editor { void downgradeEasyCorrectionSpans(); }
-keepclassmembers class android.widget.Editor { void sendOnTextChanged(int,int); }
-keepclassmembers class android.view.View { android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class java.lang.String { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.app.Activity { void setProgress(int); }
-keepclassmembers class android.app.Activity { void setSecondaryProgress(int); }
-keepclassmembers class android.view.View { boolean computeFitSystemWindows(android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.widget.Editor { void beginBatchEdit(); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <init>(boolean[]); }
-keepclassmembers class android.content.ClipData { void prepareToLeaveProcess(); }
-keepclassmembers class android.widget.Editor { void endBatchEdit(); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { boolean getBit(int); }
-keepclassmembers class java.lang.String { char charAt(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void setBit(int,boolean); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int); }
-keepclassmembers class android.view.View { boolean getFitsSystemWindows(); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { boolean[] toBooleanArray(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.lang.String { char foldCase(char); }
-keepclassmembers class android.view.View { int getVisibility(); }
-keepclassmembers class android.view.View { boolean isEnabled(); }
-keepclassmembers class java.lang.String { int compareToIgnoreCase(java.lang.String); }
-keepclassmembers class android.content.ClipData { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class java.lang.String { java.lang.String concat(java.lang.String); }
-keepclassmembers class android.view.View { boolean isSoundEffectsEnabled(); }
-keepclassmembers class android.widget.Editor { boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText); }
-keepclassmembers class android.view.View { int getRawLayoutDirection(); }
-keepclassmembers class java.lang.String { boolean endsWith(java.lang.String); }
-keepclassmembers class android.view.View { void setLayoutDirection(int); }
-keepclassmembers class android.content.ClipData { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.View { int getLayoutDirection(); }
-keepclassmembers class java.lang.String { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { boolean hasTransientState(); }
-keepclassmembers class java.lang.String { boolean equalsIgnoreCase(java.lang.String); }
-keepclassmembers class android.content.ClipData { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.View { void setHasTransientState(boolean); }
-keepclassmembers class android.view.View { boolean isLaidOut(); }
-keepclassmembers class android.view.View { boolean isClickable(); }
-keepclassmembers class android.view.View { boolean isLongClickable(); }
-keepclassmembers class android.view.View { void setPressed(boolean); }
-keepclassmembers class java.lang.String { void getChars(int,int,char[],int); }
-keepclassmembers class android.view.View { boolean isPressed(); }
-keepclassmembers class java.lang.String { void _getChars(int,int,char[],int); }
-keepclassmembers class java.lang.String { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.view.menu.k$a { android.support.v7.view.menu.h a(int); }
-keepclassmembers class android.view.View { boolean isFocusable(); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String); }
-keepclassmembers class android.view.View { boolean isFocusableInTouchMode(); }
-keepclassmembers class android.support.v7.view.menu.k$a { void a(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v7.view.menu.k$a { int getCount(); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String,int); }
-keepclassmembers class java.lang.String { int lastIndexOf(int); }
-keepclassmembers class java.lang.String { int lastIndexOf(int,int); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.widget.Editor { void drawHardwareAccelerated(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String,int); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocused(); }
-keepclassmembers class android.view.View { boolean requestAccessibilityFocus(); }
-keepclassmembers class java.lang.String { boolean regionMatches(int,java.lang.String,int,int); }
-keepclassmembers class android.view.View { void clearAccessibilityFocusNoCallbacks(); }
-keepclassmembers class java.lang.String { boolean regionMatches(boolean,int,java.lang.String,int,int); }
-keepclassmembers class android.view.View { boolean requestFocusNoSearch(int,android.graphics.Rect); }
-keepclassmembers class android.support.v7.a.i { boolean d(int); }
-keepclassmembers class android.view.View { int getImportantForAccessibility(); }
-keepclassmembers class android.view.View { void setAccessibilityLiveRegion(int); }
-keepclassmembers class android.widget.Editor { int getAvailableDisplayListIndex(int[],int,int); }
-keepclassmembers class java.lang.String { java.lang.String replace(char,char); }
-keepclassmembers class android.view.View { int getAccessibilityLiveRegion(); }
-keepclassmembers class android.view.View { void setImportantForAccessibility(int); }
-keepclassmembers class android.widget.Editor { void drawCursor(android.graphics.Canvas,int); }
-keepclassmembers class android.view.View { boolean isImportantForAccessibility(); }
-keepclassmembers class android.widget.Editor { void invalidateTextDisplayList(); }
-keepclassmembers class android.view.View { boolean includeForAccessibility(); }
-keepclassmembers class android.widget.Editor { void updateCursorsPositions(); }
-keepclassmembers class android.view.View { void notifySubtreeAccessibilityStateChangedIfNeeded(); }
-keepclassmembers class android.view.View { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class java.lang.String { java.lang.String substring(int); }
-keepclassmembers class java.lang.String { java.lang.String substring(int,int); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void run(); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner { java.net.Proxy chooseProxy(java.util.List,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.widget.Editor { boolean isCursorInsideEasyCorrectionSpan(); }
-keepclassmembers class java.lang.String { java.lang.String trim(); }
-keepclassmembers class android.widget.Editor { void updateCursorPosition(int,int,int,float); }
-keepclassmembers class android.view.View { void onStartTemporaryDetach(); }
-keepclassmembers class android.widget.Editor { void makeBlink(); }
-keepclassmembers class java.lang.String { int codePointAt(int); }
-keepclassmembers class java.lang.String { int codePointBefore(int); }
-keepclassmembers class android.view.View { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean onFilterTouchEventForSecurity(android.view.MotionEvent); }
-keepclassmembers class java.lang.String { java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEventInternal(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.Editor { void onDrop(android.view.DragEvent); }
-keepclassmembers class android.support.v7.widget.d { void a(android.content.Context,android.support.v7.view.menu.f); }
-keepclassmembers class java.lang.String { void <clinit>(); }
-keepclassmembers class android.view.View { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.view.View { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.view.View { void getWindowVisibleDisplayFrame(android.graphics.Rect); }
-keepclassmembers class android.view.View { void performCollectViewAttributes(android.view.View$AttachInfo,int); }
-keepclassmembers class android.view.View { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.d { void b(boolean); }
-keepclassmembers class android.view.View { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { boolean isHoverable(); }
-keepclassmembers class android.view.View { void setHovered(boolean); }
-keepclassmembers class android.view.View { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { void removeUnsetPressCallback(); }
-keepclassmembers class android.view.View { void removeTapCallback(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { byte[][] encodeIssuerX509Principals(java.security.cert.X509Certificate[]); }
-keepclassmembers class android.view.View { void setFlags(int,int); }
-keepclassmembers class android.support.v7.widget.d { boolean f(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.OpenSSLX509Certificate[] createCertChain(long[]); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { long awaitNanos(long); }
-keepclassmembers class android.widget.Editor$PositionListener { void addSubscriber(android.widget.Editor$TextViewPositionListener,boolean); }
-keepclassmembers class android.os.Bundle { void putAll(android.os.Bundle); }
-keepclassmembers class android.widget.Editor$PositionListener { void removeSubscriber(android.widget.Editor$TextViewPositionListener); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { boolean awaitUntil(java.util.Date); }
-keepclassmembers class java.lang.Float { int floatToIntBits(float); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void setCertificate(long,java.lang.String); }
-keepclassmembers class android.view.View { int getWidth(); }
-keepclassmembers class java.lang.Float { boolean isInfinite(float); }
-keepclassmembers class android.view.View { int getHeight(); }
-keepclassmembers class java.io.ObjectOutputStream { void drain(); }
-keepclassmembers class java.lang.Float { boolean isNaN(float); }
-keepclassmembers class android.view.View { void getDrawingRect(android.graphics.Rect); }
-keepclassmembers class android.view.View { int getMeasuredWidth(); }
-keepclassmembers class android.view.View { int getMeasuredHeight(); }
-keepclassmembers class android.view.View { int getMeasuredState(); }
-keepclassmembers class java.io.ObjectOutputStream { int nextHandle(); }
-keepclassmembers class java.lang.Float { int compare(float,float); }
-keepclassmembers class android.view.View { void setRotation(float); }
-keepclassmembers class android.view.View { void setRotationY(float); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void setSSLParameters(long,long,com.android.org.conscrypt.SSLParametersImpl$AliasChooser,com.android.org.conscrypt.SSLParametersImpl$PSKCallbacks,java.lang.String); }
-keepclassmembers class java.lang.Float { java.lang.String toHexString(float); }
-keepclassmembers class android.view.View { void setRotationX(float); }
-keepclassmembers class android.view.View { void setScaleX(float); }
-keepclassmembers class android.view.View { void setScaleY(float); }
-keepclassmembers class android.view.View { void setPivotX(float); }
-keepclassmembers class android.view.View { void setPivotY(float); }
-keepclassmembers class android.view.View { void setAlpha(float); }
-keepclassmembers class java.io.ObjectOutputStream { int writeClassDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.view.View { void setTransitionAlpha(float); }
-keepclassmembers class android.view.View { float getFinalAlpha(); }
-keepclassmembers class android.view.View { void setTop(int); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFieldDescriptors(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.view.View { void setBottom(int); }
-keepclassmembers class java.util.jar.ManifestReader { void readName(); }
-keepclassmembers class android.view.View { void setLeft(int); }
-keepclassmembers class android.support.v4.f.i { void a(int[],java.lang.Object[],int); }
-keepclassmembers class android.view.View { void setRight(int); }
-keepclassmembers class java.util.jar.ManifestReader { void readValue(); }
-keepclassmembers class java.util.AbstractMap { int hashCode(); }
-keepclassmembers class android.support.v4.f.i { void e(int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void add(android.view.View); }
-keepclassmembers class android.view.View { float getZ(); }
-keepclassmembers class android.view.View { void setElevation(float); }
-keepclassmembers class android.support.v4.f.i { int a(); }
-keepclassmembers class android.view.View { void setTranslationX(float); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class java.util.AbstractMap { java.lang.String toString(); }
-keepclassmembers class android.view.View { void setTranslationY(float); }
-keepclassmembers class android.view.View { void setTranslationZ(float); }
-keepclassmembers class android.support.v4.f.i { int a(java.lang.Object,int); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFieldValues(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.OpenSSLSessionImpl getCachedClientSession(com.android.org.conscrypt.ClientSessionContext,java.lang.String,int); }
-keepclassmembers class android.view.View { void getHitRect(android.graphics.Rect); }
-keepclassmembers class android.view.View { boolean pointInView(float,float); }
-keepclassmembers class android.view.View { boolean pointInView(float,float,float); }
-keepclassmembers class java.io.ObjectOutputStream { void writeHierarchy(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509KeyManager findFirstX509KeyManager(javax.net.ssl.KeyManager[]); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.PSKKeyManager findFirstPSKKeyManager(javax.net.ssl.KeyManager[]); }
-keepclassmembers class android.view.View { void offsetTopAndBottom(int); }
-keepclassmembers class android.support.v4.f.i { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509TrustManager findFirstX509TrustManager(javax.net.ssl.TrustManager[]); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewArray(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass,java.lang.Class,boolean); }
-keepclassmembers class android.support.v4.f.i { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { void offsetLeftAndRight(int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.lang.String getServerX509KeyType(long); }
-keepclassmembers class android.view.View { void scrollBy(int,int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.lang.String[] concat(java.lang.String[][]); }
-keepclassmembers class android.view.View { boolean initialAwakenScrollBars(); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int,boolean); }
-keepclassmembers class android.view.View { boolean skipInvalidate(); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.String[][] create(java.util.Locale); }
-keepclassmembers class android.support.v4.app.ah$a { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean); }
-keepclassmembers class android.view.View { void invalidate(android.graphics.Rect); }
-keepclassmembers class android.view.View { void invalidate(int,int,int,int); }
-keepclassmembers class android.view.View { void invalidate(boolean); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void internStrings(java.lang.String[][]); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNewClassDesc(java.io.ObjectStreamClass); }
-keepclassmembers class android.view.View { void invalidateInternal(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.support.v7.view.menu.k { void <init>(android.content.Context,android.support.v7.view.menu.f,android.view.View,boolean,int,int); }
-keepclassmembers class android.view.View { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class android.view.View { void damageInParent(); }
-keepclassmembers class android.support.v7.view.menu.k { int g(); }
-keepclassmembers class android.view.View { void invalidateParentCaches(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewString(java.lang.String,boolean); }
-keepclassmembers class android.view.View { void invalidateParentIfNeededAndWasQuickRejected(); }
-keepclassmembers class android.view.View { boolean isOpaque(); }
-keepclassmembers class android.view.View { void computeOpaqueFlags(); }
-keepclassmembers class android.view.View { boolean hasOpaqueScrollbars(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeObjectInternal(java.lang.Object,boolean,boolean,boolean); }
-keepclassmembers class android.support.v4.app.al { android.app.RemoteInput[] a(android.support.v4.app.am$a[]); }
-keepclassmembers class java.nio.charset.Charset { void checkCharsetName(java.lang.String); }
-keepclassmembers class android.view.View { boolean isHorizontalFadingEdgeEnabled(); }
-keepclassmembers class android.content.ClipDescription { boolean toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.view.View { void setHorizontalFadingEdgeEnabled(boolean); }
-keepclassmembers class android.view.View { boolean isVerticalFadingEdgeEnabled(); }
-keepclassmembers class android.view.View { float getBottomFadingEdgeStrength(); }
-keepclassmembers class android.view.View { float getRightFadingEdgeStrength(); }
-keepclassmembers class android.view.View { boolean isHorizontalScrollBarEnabled(); }
-keepclassmembers class java.security.MessageDigest { void update(byte[],int,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarEnabled(); }
-keepclassmembers class java.security.MessageDigest { boolean isEqual(byte[],byte[]); }
-keepclassmembers class android.view.animation.RotateAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.view.View { int getScrollBarStyle(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int end(); }
-keepclassmembers class android.view.View { boolean canScrollVertically(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { java.lang.String toString(int[]); }
-keepclassmembers class android.support.v7.widget.d$d { boolean setFrame(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { int[] toIntArray(java.lang.String,boolean); }
-keepclassmembers class android.view.View { void onDrawScrollBars(android.graphics.Canvas); }
-keepclassmembers class java.util.zip.InflaterInputStream { long skip(long); }
-keepclassmembers class com.android.volley.f { void run(); }
-keepclassmembers class java.util.Vector { void addElement(java.lang.Object); }
-keepclassmembers class android.view.View { void onAttachedToWindow(); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean adjustNsp(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { boolean willOverlap(); }
-keepclassmembers class com.shapps.mintubeapp.CustomViews.CircularImageView { void b(); }
-keepclassmembers class android.view.View { boolean needRtlPropertiesResolution(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { android.view.animation.Animation getAnimationForView(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.View { boolean resolveLayoutDirection(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { boolean isDone(); }
-keepclassmembers class java.util.Vector { void growByOne(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String[] ensureCapacity(java.lang.String[],int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { long getDelayForView(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { boolean isPrintableString(java.lang.String); }
-keepclassmembers class android.view.View { void resetResolvedLayoutDirection(); }
-keepclassmembers class com.shapps.mintubeapp.CustomViews.CircularImageView { void c(); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionResolved(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters); }
-keepclassmembers class android.view.View { boolean isPaddingResolved(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String getHexString(); }
-keepclassmembers class android.view.View { void resolvePadding(); }
-keepclassmembers class android.view.View { void resetResolvedPaddingInternal(); }
-keepclassmembers class android.view.View { void onDetachedFromWindowInternal(); }
-keepclassmembers class com.shapps.mintubeapp.CustomViews.CircularImageView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onMeasure(int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readUntil(char[],boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void appendQEString(java.lang.StringBuilder); }
-keepclassmembers class android.view.View { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void e(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readXmlDeclaration(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String makeEscaped(java.lang.String); }
-keepclassmembers class android.view.View { void dispatchDetachedFromWindow(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readComment(boolean); }
-keepclassmembers class android.view.View { void dispatchCancelPendingInputEvents(); }
-keepclassmembers class android.view.View { void onCancelPendingInputEvents(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String makeCanonical(); }
-keepclassmembers class android.view.View { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { byte[] toBytes(javax.net.ssl.SSLSession); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readQuotedId(boolean); }
-keepclassmembers class android.view.View { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.android.volley.c { void a(com.android.volley.VolleyError); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readInternalSubset(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean onLongClick(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String getRFC2253String(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readContentSpec(); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { javax.net.ssl.SSLSession toSession(byte[],java.lang.String,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readAttributeListDeclaration(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onMeasure(int,int); }
-keepclassmembers class android.view.View { boolean isDrawingCacheEnabled(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int available(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int read(byte[],int,int); }
-keepclassmembers class android.animation.KeyframeSet { void <init>(android.animation.Keyframe[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntityDeclaration(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class libcore.io.Base64 { byte[] decode(byte[],int); }
-keepclassmembers class android.view.View { void updateDisplayListIfDirty(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long skip(long); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofInt(int[]); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int fill(java.util.zip.Inflater,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEndTag(); }
-keepclassmembers class android.view.animation.ScaleAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.view.View { android.graphics.Bitmap getDrawingCache(boolean); }
-keepclassmembers class org.apache.http.impl.HttpConnectionMetricsImpl { void incrementRequestCount(); }
-keepclassmembers class org.apache.http.impl.HttpConnectionMetricsImpl { void incrementResponseCount(); }
-keepclassmembers class android.view.View { void setDrawingCacheBackgroundColor(int); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofFloat(float[]); }
-keepclassmembers class android.view.View { void buildDrawingCache(boolean); }
-keepclassmembers class android.view.animation.ScaleAnimation { float resolveScale(float,int,int,int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekType(boolean); }
-keepclassmembers class android.view.View { void buildDrawingCacheImpl(boolean); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofObject(java.lang.Object[]); }
-keepclassmembers class android.support.v4.app.ac { void a(android.app.Notification$Builder,android.support.v4.app.ae$a); }
-keepclassmembers class java.net.JarURLConnection { void <init>(java.net.URL); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet clone(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void parseStartTag(boolean,boolean); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.support.v7.a.o { void a(long,double,double); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.String toString(); }
-keepclassmembers class android.view.View { int getFadeTop(boolean); }
-keepclassmembers class android.view.View { int getFadeHeight(boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntity(java.lang.StringBuilder,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toLowerCase(java.util.Locale,java.lang.String,char[],int,int); }
-keepclassmembers class com.android.internal.util.XmlUtils { int convertValueToInt(java.lang.CharSequence,int); }
-keepclassmembers class java.lang.reflect.ArtMethod { boolean equalConstructorParameters(java.lang.reflect.ArtMethod,java.lang.Class[]); }
-keepclassmembers class android.view.View { boolean drawAnimation(android.view.ViewGroup,long,android.view.animation.Animation,boolean); }
-keepclassmembers class android.view.animation.CycleInterpolator { float getInterpolation(float); }
-keepclassmembers class java.lang.CaseMapper { boolean isFinalSigma(char[],int,int,int); }
-keepclassmembers class java.lang.CaseMapper { int upperIndex(int); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toUpperCase(java.util.Locale,java.lang.String,char[],int,int); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readValue(char,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class android.view.View { void setDisplayListProperties(android.view.RenderNode); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char[]); }
-keepclassmembers class java.lang.Runtime { java.lang.String[] initLibPaths(); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean fillBuffer(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readName(); }
-keepclassmembers class android.view.View { boolean draw(android.graphics.Canvas,android.view.ViewGroup,long); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { int findNext(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void skip(); }
-keepclassmembers class java.lang.Runtime { void exit(int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicPathHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.lang.Runtime { void loadLibrary(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.InputStream,java.lang.String); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndIncrement(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndDecrement(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndAdd(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int incrementAndGet(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int decrementAndGet(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(java.lang.String); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getPositionDescription(); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(int[][],int[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getLineNumber(); }
-keepclassmembers class android.view.View { void draw(android.graphics.Canvas); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getColumnNumber(); }
-keepclassmembers class org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy { long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Matrix { void checkPointArrays(float[],int,float[],int,int); }
-keepclassmembers class android.view.View { void drawBackground(android.graphics.Canvas); }
-keepclassmembers class android.content.res.ColorStateList { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[]); }
-keepclassmembers class android.graphics.Matrix { void mapVectors(float[]); }
-keepclassmembers class android.view.View { boolean isLayoutRequested(); }
-keepclassmembers class android.view.View { boolean setOpticalFrame(int,int,int,int); }
-keepclassmembers class android.view.View { void layout(int,int,int,int); }
-keepclassmembers class android.content.res.ColorStateList { int getColorForState(int[],int); }
-keepclassmembers class android.view.View { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.view.Gravity { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.content.res.ColorStateList { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.View { void resolveDrawables(); }
-keepclassmembers class java.io.BufferedReader { int fillBuf(); }
-keepclassmembers class android.view.View { boolean areDrawablesResolved(); }
-keepclassmembers class android.view.View { void resetResolvedDrawablesInternal(); }
-keepclassmembers class android.view.View { void refreshDrawableState(); }
-keepclassmembers class android.view.View { int[] getDrawableState(); }
-keepclassmembers class java.io.BufferedReader { int readChar(); }
-keepclassmembers class android.view.View { int[] onCreateDrawableState(int); }
-keepclassmembers class java.lang.Double { long doubleToLongBits(double); }
-keepclassmembers class java.lang.Double { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Double { int hashCode(); }
-keepclassmembers class android.view.View { int[] mergeDrawableStates(int[],int[]); }
-keepclassmembers class java.lang.Double { boolean isInfinite(double); }
-keepclassmembers class java.lang.Double { boolean isNaN(double); }
-keepclassmembers class java.io.BufferedReader { void chompNewline(); }
-keepclassmembers class java.lang.Double { int compare(double,double); }
-keepclassmembers class java.lang.Double { java.lang.String toHexString(double); }
-keepclassmembers class android.view.View { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.BufferedReader { java.lang.String readLine(); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void checkValidJavaClassName(java.lang.String); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { char charAt(int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { int indexOfLevel(int); }
-keepclassmembers class android.view.View { void internalSetPadding(int,int,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void <init>(int); }
-keepclassmembers class android.view.View { void setSelected(boolean); }
-keepclassmembers class android.view.View { boolean isSelected(); }
-keepclassmembers class android.view.View { void setActivated(boolean); }
-keepclassmembers class java.lang.System { void arraycopy(char[],int,char[],int,int); }
-keepclassmembers class android.view.View { void getLocationOnScreen(int[]); }
-keepclassmembers class java.lang.System { void arraycopy(byte[],int,byte[],int,int); }
-keepclassmembers class android.view.View { void getLocationInWindow(int[]); }
-keepclassmembers class java.nio.Buffer { int remaining(); }
-keepclassmembers class java.lang.System { void arraycopy(int[],int,int[],int,int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicMaxAgeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { void start(); }
-keepclassmembers class java.lang.System { void arraycopy(long[],int,long[],int,int); }
-keepclassmembers class android.view.View { boolean isRootNamespace(); }
-keepclassmembers class android.view.RenderNodeAnimator { void notifyStartListeners(); }
-keepclassmembers class android.view.RenderNodeAnimator { void cancel(); }
-keepclassmembers class android.support.a.a.f$e { float a(float,float,float,float); }
-keepclassmembers class java.lang.System { void arraycopy(float[],int,float[],int,int); }
-keepclassmembers class android.support.a.a.f$e { float a(android.graphics.Matrix); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartDelay(long); }
-keepclassmembers class android.support.a.a.f$e { void a(android.support.a.a.f$c,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator setDuration(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void onFinished(); }
-keepclassmembers class android.support.a.a.f$e { void a(android.support.a.a.f$c,android.support.a.a.f$d,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class java.lang.System { void arraycopy(boolean[],int,boolean[],int,int); }
-keepclassmembers class org.apache.http.util.EntityUtils { byte[] toByteArray(org.apache.http.HttpEntity); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class android.support.a.a.f$e { void a(float); }
-keepclassmembers class android.view.View { void requestLayout(); }
-keepclassmembers class android.support.a.a.f$e { float b(); }
-keepclassmembers class android.view.View { void forceLayout(); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { boolean isOneOf(char,char[]); }
-keepclassmembers class android.view.View { void measure(int,int); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[]); }
-keepclassmembers class java.lang.System { void parsePropertyAssignments(java.util.Properties,java.lang.String[]); }
-keepclassmembers class android.view.View { void setMeasuredDimension(int,int); }
-keepclassmembers class android.view.GLES20Canvas { void setupFinalizer(); }
-keepclassmembers class android.view.View { void setMeasuredDimensionRaw(int,int); }
-keepclassmembers class android.view.View { int combineMeasuredStates(int,int); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { float getInterpolation(float); }
-keepclassmembers class android.view.View { int resolveSize(int,int); }
-keepclassmembers class android.view.View { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.view.View { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.View { void onAnimationStart(); }
-keepclassmembers class android.view.View { void onAnimationEnd(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void write(byte[],int,int); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void writeLine(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class android.view.GLES20Canvas { void translate(float,float); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void a(java.util.List); }
-keepclassmembers class java.lang.reflect.Method { int hashCode(); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void a(java.util.List,java.util.Comparator); }
-keepclassmembers class android.view.GLES20Canvas { int saveLayer(float,float,float,float,android.graphics.Paint,int); }
-keepclassmembers class android.view.View { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class android.view.View { boolean canAcceptDrag(); }
-keepclassmembers class android.view.GLES20Canvas { int saveLayerAlpha(float,float,float,float,int,int); }
-keepclassmembers class java.net.InterfaceAddress { short countPrefixLength(java.net.Inet4Address); }
-keepclassmembers class android.view.View { void checkForLongClick(int); }
-keepclassmembers class android.text.SpannableStringBuilder { char charAt(int); }
-keepclassmembers class android.text.SpannableStringBuilder { int length(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean a(android.view.MotionEvent,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void resizeFor(int); }
-keepclassmembers class java.net.InterfaceAddress { int hashCode(); }
-keepclassmembers class android.view.View { boolean overScrollBy(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.view.View { void setNestedScrollingEnabled(boolean); }
-keepclassmembers class android.view.View { boolean isNestedScrollingEnabled(); }
-keepclassmembers class android.text.SpannableStringBuilder { void moveGapTo(int); }
-keepclassmembers class java.io.ByteArrayOutputStream { void expand(int); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void b(android.view.View,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder delete(int,int); }
-keepclassmembers class android.view.View { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void <init>(java.lang.String[]); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void c(android.view.View,int); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readHeader(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void e(); }
-keepclassmembers class android.view.View { float getVerticalScrollFactor(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void f(); }
-keepclassmembers class android.view.View { int getRawTextDirection(); }
-keepclassmembers class android.view.View { int getTextDirection(); }
-keepclassmembers class android.text.SpannableStringBuilder { void change(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readIndex(libcore.io.BufferIterator,int,int); }
-keepclassmembers class android.view.View { boolean resolveTextDirection(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void a(); }
-keepclassmembers class android.view.View { void resetResolvedTextDirection(); }
-keepclassmembers class android.view.View { boolean isTextDirectionResolved(); }
-keepclassmembers class android.view.View { int getRawTextAlignment(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void a(android.view.View,int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.text.SpannableStringBuilder { int updatedIntervalBound(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.view.View { int getTextAlignment(); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(int); }
-keepclassmembers class android.view.View { boolean resolveTextAlignment(); }
-keepclassmembers class android.view.GLES20Canvas { void drawLines(float[],int,int,android.graphics.Paint); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.view.View { void resetResolvedTextAlignment(); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class android.view.View { boolean isTextAlignmentResolved(); }
-keepclassmembers class android.view.View { int generateViewId(); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean hasNonExclusiveExclusiveSpanAt(java.lang.CharSequence,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void a(boolean); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendToSpanWatchers(int,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(char[],int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(boolean,java.lang.Object,int,int,int); }
-keepclassmembers class android.text.method.TextKeyListener { void updatePrefs(android.content.ContentResolver); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void b(android.view.View,int); }
-keepclassmembers class android.text.method.TextKeyListener { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.view.GLES20Canvas { void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.view.GLES20Canvas { void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.view.View { void <clinit>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.text.SpannableStringBuilder { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.database.AbstractCursor { int getColumnIndex(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class android.animation.AnimatorSet { void playTogether(android.animation.Animator[]); }
-keepclassmembers class java.net.InetSocketAddress { int hashCode(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean e(android.view.View); }
-keepclassmembers class java.util.LinkedList { boolean addLastImpl(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int getSuggestedMinimumHeight(); }
-keepclassmembers class android.animation.AnimatorSet { void playSequentially(android.animation.Animator[]); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int getSuggestedMinimumWidth(); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendBeforeTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getOID(int[]); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendAfterTextChanged(android.text.TextWatcher[]); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onTouchEvent(android.view.MotionEvent,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void addOID(org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { android.view.MotionEvent$PointerCoords[] createArray(int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { int hashIntArray(int[]); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.animation.AnimatorSet { int getChangingConfigurations(); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class java.io.File { java.lang.String fixSlashes(java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onMeasure(int,int); }
-keepclassmembers class java.io.File { java.lang.String join(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.LinkedList { java.lang.Object get(int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onGenericMotionEvent(android.view.MotionEvent,int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onUnhandledEvent(android.view.InputEvent,int); }
-keepclassmembers class android.animation.AnimatorSet$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.text.SpannableStringBuilder { void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet setDuration(long); }
-keepclassmembers class java.net.DefaultFileNameMap { java.lang.String getContentTypeFor(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class java.util.LinkedList { java.lang.Object remove(int); }
-keepclassmembers class java.util.LinkedList { java.lang.Object removeFirstImpl(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class libcore.reflect.AnnotationAccess { int getAnnotationSetOffset(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class java.util.jar.Attributes$Name { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute,java.lang.Object,long,java.util.concurrent.TimeUnit,org.apache.http.impl.conn.tsccm.WaitingThreadAborter); }
-keepclassmembers class java.io.File { java.lang.String getName(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class java.io.File { java.lang.String getParent(); }
-keepclassmembers class android.text.SpannableStringBuilder { float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint); }
-keepclassmembers class java.io.File { int hashCode(); }
-keepclassmembers class android.animation.AnimatorSet { void start(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void finishEvent(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.text.SpannableStringBuilder { int getTextRunCursor(int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class java.io.File { long lastModified(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Object getDefaultValue(java.lang.reflect.Method); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.a.d { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class android.text.SpannableStringBuilder { int hashCode(); }
-keepclassmembers class java.io.File { java.io.File[] filenamesToFiles(java.lang.String[]); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet clone(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class java.io.File { boolean createNewFile(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry,boolean,long,java.util.concurrent.TimeUnit); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String nextAT(); }
-keepclassmembers class android.support.a.a.f$c { void <init>(android.support.a.a.f$c,android.support.v4.f.a); }
-keepclassmembers class android.animation.AnimatorSet { void sortNodes(); }
-keepclassmembers class java.io.File { java.lang.String getAbsoluteName(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.EncodedValueReader getAnnotationReader(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String,int); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String quotedAV(); }
-keepclassmembers class java.lang.reflect.Field { int getModifiers(); }
-keepclassmembers class android.support.a.a.f$c { void b(); }
-keepclassmembers class android.animation.AnimatorSet { boolean canReverse(); }
-keepclassmembers class java.lang.reflect.Field { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String hexAV(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.reflect.AccessibleObject indexToMethod(java.lang.Class,com.android.dex.Dex,int); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]); }
-keepclassmembers class android.app.RemoteInput$Builder { void setFlag(int,boolean); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(java.lang.Throwable,int); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String escapedAV(); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { int hashCode(); }
-keepclassmembers class java.util.ArrayList { boolean add(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { void add(int,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { char getEscaped(); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(android.os.Parcel,boolean); }
-keepclassmembers class java.util.ArrayList { boolean addAll(java.util.Collection); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { char getUTF8(); }
-keepclassmembers class java.util.ArrayList { int newCapacity(int); }
-keepclassmembers class java.util.ArrayList { void clear(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class,com.android.dex.Dex,java.lang.Class,com.android.dex.EncodedValueReader); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { int getByte(int); }
-keepclassmembers class java.util.ArrayList { void ensureCapacity(int); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.util.List parse(); }
-keepclassmembers class java.util.ArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { int lastIndexOf(java.lang.Object); }
-keepclassmembers class android.os.Message { android.os.Message obtain(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor(java.lang.Class[],boolean); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructorInternal(java.lang.Class[]); }
-keepclassmembers class java.util.ArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { java.lang.Object remove(int); }
-keepclassmembers class android.os.Message { void setAsynchronous(boolean); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void tunnelProxy(org.apache.http.HttpHost,boolean); }
-keepclassmembers class java.lang.Class { void getDeclaredConstructors(boolean,java.util.List); }
-keepclassmembers class java.util.ArrayList { void trimToSize(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[],boolean); }
-keepclassmembers class android.app.SearchableInfo { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.ArrayList { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { int hashCode(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getPublicMethodRecursive(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethodInternal(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.transition.TransitionValues { int hashCode(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method[] getDeclaredMethods(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void checkDNS(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils { java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date); }
-keepclassmembers class java.lang.Class { void getDeclaredMethodsUnchecked(boolean,java.util.List); }
-keepclassmembers class android.animation.ValueAnimator { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int[] oidStrToInts(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { void setValues(android.animation.PropertyValuesHolder[]); }
-keepclassmembers class android.animation.ValueAnimator { void initAnimation(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field[] getDeclaredFields(); }
-keepclassmembers class android.animation.ValueAnimator { void updateScaledDuration(); }
-keepclassmembers class java.lang.Class { void getDeclaredFieldsUnchecked(boolean,java.util.List); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isAbstract(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isFinal(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isInterface(int); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentPlayTime(long); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isPrivate(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isNative(int); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentFraction(float); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isProtected(int); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void setIdleDuration(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isStatic(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isPublic(int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.ArtField findByName(java.lang.String,java.lang.reflect.ArtField[]); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isStrict(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isSynchronized(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isTransient(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isVolatile(int); }
-keepclassmembers class java.lang.reflect.Modifier { java.lang.String toString(int); }
-keepclassmembers class android.animation.ValueAnimator { void setStartDelay(long); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isConstructor(int); }
-keepclassmembers class android.app.Application { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.text.InputFilter$LengthFilter { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.app.Application { void onTrimMemory(int); }
-keepclassmembers class android.app.Application { void onLowMemory(); }
-keepclassmembers class android.transition.Transition { boolean isValidTarget(android.view.View); }
-keepclassmembers class android.animation.ValueAnimator { void start(boolean); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getInterfaces(); }
-keepclassmembers class android.animation.ValueAnimator { void notifyStartListeners(); }
-keepclassmembers class java.lang.Class { java.lang.String getSimpleName(); }
-keepclassmembers class java.lang.Class { int getModifiers(); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { float getInterpolation(float); }
-keepclassmembers class java.lang.Class { boolean isAnnotation(); }
-keepclassmembers class java.lang.Class { boolean isProxy(); }
-keepclassmembers class android.animation.ValueAnimator { void reverse(); }
-keepclassmembers class android.animation.ValueAnimator { void endAnimation(android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class java.lang.Class { boolean isAssignableFrom(java.lang.Class); }
-keepclassmembers class libcore.io.IoUtils$FileReader { libcore.io.IoUtils$FileReader readFully(); }
-keepclassmembers class java.lang.Class { boolean isInterface(); }
-keepclassmembers class android.animation.ValueAnimator { void startAnimation(android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class java.lang.Class { boolean isEnum(); }
-keepclassmembers class com.android.volley.m$a { long a(); }
-keepclassmembers class com.android.volley.m$a { void a(java.lang.String); }
-keepclassmembers class android.transition.Transition { void captureValues(android.view.ViewGroup,boolean); }
-keepclassmembers class android.animation.ValueAnimator { void animateValue(float); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator clone(); }
-keepclassmembers class android.view.View$MeasureSpec { int makeMeasureSpec(int,int); }
-keepclassmembers class android.view.View$MeasureSpec { int getMode(int); }
-keepclassmembers class android.view.View$MeasureSpec { int getSize(int); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String toString(); }
-keepclassmembers class android.view.View$MeasureSpec { int adjust(int,int); }
-keepclassmembers class android.transition.Transition { void captureHierarchy(android.view.View,boolean); }
-keepclassmembers class java.util.TimSort { void <init>(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class java.util.TimSort { void sort(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object get(); }
-keepclassmembers class java.net.AddressCache { java.lang.Object get(java.lang.String,int); }
-keepclassmembers class java.util.TimSort { void binarySort(java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class java.util.TimSort { int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class java.util.TimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class java.util.TimSort { int minRunLength(int); }
-keepclassmembers class java.util.TimSort { void pushRun(int,int); }
-keepclassmembers class java.util.TimSort { void mergeCollapse(); }
-keepclassmembers class java.util.TimSort { void mergeForceCollapse(); }
-keepclassmembers class java.util.Date { int compareTo(java.util.Date); }
-keepclassmembers class java.util.Date { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.TimSort { void mergeAt(int); }
-keepclassmembers class java.util.Date { int hashCode(); }
-keepclassmembers class java.util.Date { int getYear(); }
-keepclassmembers class java.util.TimSort { int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.text.method.MultiTapKeyListener { android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class android.support.v4.app.ab$d { void a(int,boolean); }
-keepclassmembers class android.graphics.Region { void <init>(long); }
-keepclassmembers class java.util.TimSort { int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.transition.Transition { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class android.content.ComponentName { java.lang.String flattenToShortString(); }
-keepclassmembers class android.text.method.MultiTapKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(java.lang.String); }
-keepclassmembers class java.util.TimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class android.support.v7.view.a { int c(); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void removeTimeouts(android.text.Spannable); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { boolean next(); }
-keepclassmembers class java.util.TimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int start(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int limit(); }
-keepclassmembers class java.util.TimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class android.widget.AdapterView { int getPositionForView(android.view.View); }
-keepclassmembers class android.widget.AdapterView { int getLastVisiblePosition(); }
-keepclassmembers class android.support.v4.app.aj$a { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.io.InputStream getDirectoryListing(java.io.File); }
-keepclassmembers class java.util.TimeZone { java.lang.String getDisplayName(boolean,int,java.util.Locale); }
-keepclassmembers class java.util.TimeZone { java.lang.String createGmtOffsetString(boolean,boolean,int); }
-keepclassmembers class android.widget.AdapterView { boolean isScrollableForAccessibility(); }
-keepclassmembers class java.util.TimeZone { void appendNumber(java.lang.StringBuilder,int,int); }
-keepclassmembers class android.widget.AdapterView { void checkSelectionChanged(); }
-keepclassmembers class android.widget.AdapterView { int findSyncPosition(); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getCustomTimeZone(java.lang.String); }
-keepclassmembers class android.widget.AdapterView { void rememberSyncState(); }
-keepclassmembers class java.net.PlainSocketImpl { java.net.Socks4Message socksReadReply(); }
-keepclassmembers class android.transition.Visibility { void setMode(int); }
-keepclassmembers class java.net.PlainSocketImpl { void write(byte[],int,int); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher usePattern(java.util.regex.Pattern); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.regex.Matcher { void appendEvaluated(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class android.support.v4.g.b.d { void <init>(float[]); }
-keepclassmembers class android.support.v4.g.b.d { float getInterpolation(float); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String group(int); }
-keepclassmembers class java.util.regex.Matcher { int end(int); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { int type(java.lang.String); }
-keepclassmembers class libcore.io.Streams { int readSingleByte(java.io.InputStream); }
-keepclassmembers class java.util.regex.Matcher { int start(int); }
-keepclassmembers class java.net.Inet6Address { boolean isLinkLocalAddress(); }
-keepclassmembers class libcore.io.Streams { void readFully(java.io.InputStream,byte[],int,int); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class libcore.io.Streams { long skipByReading(java.io.InputStream,long); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void adjustDuration(int,int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <init>(android.content.Context); }
-keepclassmembers class org.apache.http.message.BufferedHeader { void <init>(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void <init>(java.net.URL); }
-keepclassmembers class java.math.Conversion { double bigInteger2Double(java.math.BigInteger); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fling(int,int,int,int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startSpringback(int,int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineFlingDistance(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int getSplineFlingDuration(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineDeceleration(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startBounceAfterEdge(int,int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fitOnBounceCurve(int,int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$h { int a(android.view.View,android.view.View); }
-keepclassmembers class libcore.net.url.FtpURLConnection { int getReply(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void port(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startAfterEdge(int,int,int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void onEdgeReached(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readBitString(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { java.lang.Object next(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <clinit>(); }
-keepclassmembers class android.text.Layout$Ellipsizer { char charAt(int); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void sendFile(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void init(android.view.ViewGroup,boolean); }
-keepclassmembers class android.text.Layout$Ellipsizer { void getChars(int,int,char[],int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void setup(int,float); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void onHotspotBoundsChanged(); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$Impl { void putSessionData(javax.net.ssl.SSLSession,byte[]); }
-keepclassmembers class android.graphics.Color { int red(int); }
-keepclassmembers class android.graphics.Color { int green(int); }
-keepclassmembers class android.graphics.Color { int blue(int); }
-keepclassmembers class android.graphics.Color { int alpha(int); }
-keepclassmembers class android.graphics.Color { int rgb(int,int,int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean shouldDraw(); }
-keepclassmembers class android.graphics.Color { int argb(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class java.util.Formatter { void doFormat(java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$Impl { void makeRoom(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void exit(); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$Impl { void indexFiles(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void getBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class android.graphics.Color { int parseColor(java.lang.String); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence insertGrouping(java.lang.CharSequence); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$Impl { void delete(java.io.File); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancelHardwareAnimations(boolean); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence localizeDigits(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void exitSoftware(int,int,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromString(); }
-keepclassmembers class java.text.SimpleDateFormat { void validatePattern(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { int hashCode(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence padding(java.lang.CharSequence,int); }
-keepclassmembers class java.util.Formatter { java.lang.StringBuilder wrapParentheses(java.lang.StringBuilder); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class android.content.res.Resources { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromInteger(); }
-keepclassmembers class android.content.res.Resources { void clearDrawableCachesLocked(android.util.ArrayMap,int); }
-keepclassmembers class android.animation.LayoutTransition { void runChangeTransition(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer formatImpl(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition,java.util.List); }
-keepclassmembers class android.content.res.Resources { void clearDrawableCacheLocked(android.util.LongSparseArray,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromBigInteger(); }
-keepclassmembers class android.content.res.Resources { boolean resourceHasPackage(int); }
-keepclassmembers class android.animation.LayoutTransition { void setupChangeAnimation(android.view.ViewGroup,int,android.animation.Animator,long,android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.support.v7.a.q { void a(android.view.View); }
-keepclassmembers class java.text.SimpleDateFormat { void append(java.lang.StringBuffer,java.text.FieldPosition,java.util.List,char,int); }
-keepclassmembers class android.content.res.Resources { boolean verifyPreloadConfig(int,int,int,java.lang.String); }
-keepclassmembers class java.util.Formatter { boolean appendT(java.lang.StringBuilder,char,java.util.Calendar); }
-keepclassmembers class android.widget.CheckedTextView { void updatePadding(); }
-keepclassmembers class android.content.res.Resources { void flushLayoutCache(); }
-keepclassmembers class android.widget.CheckedTextView { boolean isCheckMarkAtStart(); }
-keepclassmembers class android.support.v7.a.q { void a(int,int); }
-keepclassmembers class android.widget.CheckedTextView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class java.text.SimpleDateFormat { void appendMonth(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class android.widget.CheckedTextView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class android.content.res.Resources { void cacheDrawable(android.util.TypedValue,android.content.res.Resources$Theme,boolean,android.util.ArrayMap,long,android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromSpecialNumber(double); }
-keepclassmembers class java.util.Formatter { void appendLocalized(java.lang.StringBuilder,long,int); }
-keepclassmembers class android.animation.LayoutTransition { void layoutChange(android.view.ViewGroup); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void release(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.text.SimpleDateFormat { void appendNumericTimeZone(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class java.text.SimpleDateFormat { void appendMilliseconds(java.lang.StringBuffer,int,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromFloat(); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class java.util.Formatter { boolean startsWithMinusSign(java.lang.CharSequence,java.lang.String); }
-keepclassmembers class android.support.v7.a.q { void f(boolean); }
-keepclassmembers class java.text.SimpleDateFormat { int hashCode(); }
-keepclassmembers class android.view.animation.OvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class java.util.Formatter { void transformE(java.lang.StringBuilder); }
-keepclassmembers class java.text.SimpleDateFormat { int parse(java.lang.String,int,char,int); }
-keepclassmembers class android.animation.LayoutTransition { long access$314(android.animation.LayoutTransition,long); }
-keepclassmembers class java.util.Formatter { void transformG(java.lang.StringBuilder); }
-keepclassmembers class java.util.Formatter { void transformF(java.lang.StringBuilder); }
-keepclassmembers class android.view.textservice.TextInfo { void <init>(java.lang.CharSequence,int,int,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { java.util.Date parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class java.text.SimpleDateFormat { int parseFractionalSeconds(java.lang.String,int,int); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int); }
-keepclassmembers class java.util.Formatter { void transformA(java.lang.StringBuilder); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.Number parseNumber(int,java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.v4.c.a.j$a { int getChangingConfigurations(); }
-keepclassmembers class java.text.SimpleDateFormat { int parseText(java.lang.String,int,java.lang.String[],int); }
-keepclassmembers class java.text.SimpleDateFormat { int parseNumber(int,java.lang.String,int,int,int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginStart(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginEnd(); }
-keepclassmembers class java.text.SimpleDateFormat { int parseTimeZone(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void setLayoutDirection(int); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class java.lang.Thread { void create(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void doResolveMargins(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.view.InputEvent { boolean isFromSource(int); }
-keepclassmembers class java.lang.Thread { void interrupt(); }
-keepclassmembers class java.util.Hashtable$HashIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class java.lang.Thread { boolean isAlive(); }
-keepclassmembers class java.lang.Thread { void setDaemon(boolean); }
-keepclassmembers class java.util.Hashtable$HashIterator { java.util.Hashtable$HashtableEntry nextEntry(); }
-keepclassmembers class java.util.Hashtable$HashIterator { java.util.Hashtable$HashtableEntry nextEntryNotFailFast(); }
-keepclassmembers class android.support.v7.view.g$b { void b(android.util.AttributeSet); }
-keepclassmembers class android.database.MatrixCursor { void <init>(java.lang.String[],int); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService$1 { void onGlobalLayout(); }
-keepclassmembers class android.database.MatrixCursor { void addRow(java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void computeOpacity(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadius(float); }
-keepclassmembers class org.apache.http.impl.EnglishReasonPhraseCatalog { void setReason(int,java.lang.String); }
-keepclassmembers class java.lang.Thread { void parkUntil(long); }
-keepclassmembers class java.lang.Thread { void parkFor(long); }
-keepclassmembers class android.text.SpanSet { void init(android.text.Spanned,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.database.MatrixCursor { void ensureCapacity(int); }
-keepclassmembers class android.text.SpanSet { boolean hasSpansIntersecting(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.text.SpanSet { int getNextTransition(int,int); }
-keepclassmembers class android.text.SpanSet { void recycle(); }
-keepclassmembers class java.net.AddressCache$AddressCacheEntry { void <init>(java.lang.Object); }
-keepclassmembers class java.io.DataOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.io.DataOutputStream { void writeBoolean(boolean); }
-keepclassmembers class java.io.DataOutputStream { void writeByte(int); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { int hashCode(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean); }
-keepclassmembers class android.content.pm.ActivityInfo { int activityInfoConfigToNative(int); }
-keepclassmembers class java.io.DataOutputStream { void writeLong(long); }
-keepclassmembers class java.io.DataOutputStream { void writeInt(int); }
-keepclassmembers class java.io.DataOutputStream { void writeShort(int); }
-keepclassmembers class org.apache.http.impl.io.AbstractMessageParser { org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void parkNanos(java.lang.Object,long); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { int b(android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void readExternal(java.io.ObjectInput); }
-keepclassmembers class java.util.StringTokenizer { int countTokens(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.util.StringTokenizer { boolean hasMoreTokens(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onMeasure(int,int); }
-keepclassmembers class java.util.StringTokenizer { java.lang.String nextToken(); }
-keepclassmembers class java.util.SimpleTimeZone { int hashCode(); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(int,int,int,int,int,int); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(long); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.util.SimpleTimeZone { int mod7(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.util.SimpleTimeZone { boolean isLeapYear(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.AbsListView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class com.android.volley.a.c { int a(java.io.InputStream); }
-keepclassmembers class com.android.volley.a.c { void a(int); }
-keepclassmembers class com.android.volley.a.c { void a(java.io.OutputStream,int); }
-keepclassmembers class com.android.volley.a.a { java.util.Map a(org.apache.http.Header[]); }
-keepclassmembers class android.widget.AbsListView { void updateOnScreenCheckedViews(); }
-keepclassmembers class android.widget.AbsListView { boolean contentFits(); }
-keepclassmembers class com.android.volley.a.c { void a(java.io.OutputStream,long); }
-keepclassmembers class com.android.volley.a.a { void a(long,com.android.volley.h,byte[],org.apache.http.StatusLine); }
-keepclassmembers class com.android.volley.a.c { void a(java.lang.String,com.android.volley.a.c$a); }
-keepclassmembers class android.net.http.AndroidHttpClient { java.lang.String toCurl(org.apache.http.client.methods.HttpUriRequest,boolean); }
-keepclassmembers class com.android.volley.a.a { void a(java.util.Map,com.android.volley.a$a); }
-keepclassmembers class com.android.volley.a.c { byte[] a(java.io.InputStream,int); }
-keepclassmembers class android.net.http.AndroidHttpClient { boolean isBinaryContent(org.apache.http.client.methods.HttpUriRequest); }
-keepclassmembers class com.android.volley.a.c { long b(java.io.InputStream); }
-keepclassmembers class android.support.v4.widget.a$a { float a(float); }
-keepclassmembers class android.support.v4.widget.a$a { float a(long); }
-keepclassmembers class com.android.volley.a.c { java.lang.String d(java.lang.String); }
-keepclassmembers class android.support.v4.widget.a$a { void b(); }
-keepclassmembers class com.android.volley.a.c { java.util.Map d(java.io.InputStream); }
-keepclassmembers class com.android.volley.a.c { void e(java.lang.String); }
-keepclassmembers class android.support.v4.widget.a$a { int e(); }
-keepclassmembers class android.support.v4.widget.a$a { void d(); }
-keepclassmembers class android.support.v4.widget.a$a { boolean c(); }
-keepclassmembers class android.support.v4.widget.a$a { int f(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultResponseParser { org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer); }
-keepclassmembers class com.android.volley.a.a { com.android.volley.g a(com.android.volley.h); }
-keepclassmembers class android.app.ActivityTransitionState { int addExitTransitionCoordinator(android.app.ExitTransitionCoordinator); }
-keepclassmembers class com.android.volley.a.c { com.android.volley.a$a a(java.lang.String); }
-keepclassmembers class android.support.v4.app.aq { void a(android.os.Bundle); }
-keepclassmembers class android.widget.AbsListView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.widget.AbsListView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.android.volley.a.c { void a(); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.support.v4.app.ab$j { android.app.Notification a(android.support.v4.app.ab$d,android.support.v4.app.ab$e); }
-keepclassmembers class android.widget.AbsListView { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollRange(); }
-keepclassmembers class android.widget.AbsListView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class java.net.Socks4Message { int getLength(); }
-keepclassmembers class android.widget.AbsListView { void onMeasure(int,int); }
-keepclassmembers class android.widget.AbsListView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.net.Socks4Message { void setString(int,int,java.lang.String); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.File,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollDown(); }
-keepclassmembers class android.widget.AbsListView { android.view.View getSelectedView(); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View,boolean,float,float); }
-keepclassmembers class android.widget.AbsListView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$2 { void a(org.json.JSONArray); }
-keepclassmembers class android.widget.AbsListView { boolean isPaddingOffsetRequired(); }
-keepclassmembers class android.widget.AbsListView { int getTopPaddingOffset(); }
-keepclassmembers class android.widget.AbsListView { int getLeftPaddingOffset(); }
-keepclassmembers class android.widget.AbsListView { int getRightPaddingOffset(); }
-keepclassmembers class android.widget.AbsListView { int getBottomPaddingOffset(); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$CacheFile { int compareTo(java.io.File); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$CacheFile { long lastModified(); }
-keepclassmembers class android.graphics.RectF { boolean isEmpty(); }
-keepclassmembers class android.widget.AbsListView { void keyPressed(); }
-keepclassmembers class android.graphics.RectF { float width(); }
-keepclassmembers class android.graphics.RectF { float height(); }
-keepclassmembers class android.graphics.RectF { float centerY(); }
-keepclassmembers class android.widget.AbsListView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.graphics.RectF { void offset(float,float); }
-keepclassmembers class android.graphics.RectF { boolean intersect(float,float,float,float); }
-keepclassmembers class android.graphics.RectF { void inset(float,float); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenu(float,float,int); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.RectF { void union(float,float,float,float); }
-keepclassmembers class android.widget.AbsListView { int pointToPosition(int,int); }
-keepclassmembers class android.widget.AbsListView { boolean startScrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class com.android.volley.a.b$1 { int a(byte[],byte[]); }
-keepclassmembers class org.apache.http.impl.client.AbstractAuthenticationHandler { java.util.Map parseChallenges(org.apache.http.Header[]); }
-keepclassmembers class android.widget.AbsListView { void scrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class org.apache.http.impl.client.AbstractAuthenticationHandler { org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getOpacity(); }
-keepclassmembers class android.support.v4.f.d { void write(char[],int,int); }
-keepclassmembers class android.widget.AbsListView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean isStateful(); }
-keepclassmembers class android.widget.AbsListView { void onTouchDown(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canConstantState(); }
-keepclassmembers class android.widget.AbsListView { void onTouchMove(android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class java.net.URL { void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.AbsListView { void onTouchUp(android.view.MotionEvent); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class android.widget.AbsListView { void onTouchCancel(); }
-keepclassmembers class java.net.URL { void fixURL(boolean); }
-keepclassmembers class android.widget.AbsListView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.AbsListView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.AbsListView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.widget.AbsListView { void draw(android.graphics.Canvas); }
-keepclassmembers class java.net.URL { void setupStreamHandler(); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.DragEvent { void recycle(); }
-keepclassmembers class android.widget.AbsListView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollList(int); }
-keepclassmembers class android.widget.AbsListView { boolean trackMotionScroll(int,int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void removeVisibleSpans(android.text.Spannable); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.widget.AbsListView { int reconcileSelectedPosition(); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { int[] onCreateDrawableState(int); }
-keepclassmembers class android.widget.AbsListView { int findClosestMotionRow(int); }
-keepclassmembers class android.text.PackedObjectVector { java.lang.Object getValue(int,int); }
-keepclassmembers class android.text.PackedObjectVector { void setValue(int,int,java.lang.Object); }
-keepclassmembers class android.text.PackedObjectVector { void insertAt(int,java.lang.Object[]); }
-keepclassmembers class android.text.PackedObjectVector { void deleteAt(int,int); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelection(); }
-keepclassmembers class android.text.PackedObjectVector { int size(); }
-keepclassmembers class android.text.PackedObjectVector { void growBuffer(); }
-keepclassmembers class android.text.PackedObjectVector { void moveRowGapTo(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.widget.AbsListView { void handleDataChanged(); }
-keepclassmembers class android.widget.AbsListView { void confirmCheckedPositionsById(); }
-keepclassmembers class android.app.Dialog { void show(); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayName(java.util.Locale); }
-keepclassmembers class android.widget.AbsListView { void positionPopup(); }
-keepclassmembers class android.widget.AbsListView { int getDistance(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.util.Base64 { byte[] encode(byte[],int,int,int); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class java.util.Locale { java.lang.String[] splitIllformedVariant(java.lang.String); }
-keepclassmembers class java.util.Locale { java.lang.String concatenateRange(java.lang.String[],int,int); }
-keepclassmembers class java.util.Locale { int hashCode(); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class android.widget.AbsListView { void setCacheColorHint(int); }
-keepclassmembers class android.util.LruCache { void trimToSize(int); }
-keepclassmembers class android.widget.AbsListView { void setSelectionFromTop(int,int); }
-keepclassmembers class java.util.Locale { boolean isUnM49AreaCode(java.lang.String); }
-keepclassmembers class java.util.Locale { boolean isAsciiAlphaNum(java.lang.String); }
-keepclassmembers class android.text.AutoText { java.lang.String lookup(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.Locale { boolean isValidBcp47Alpha(java.lang.String,int,int); }
-keepclassmembers class java.util.Grego { boolean isLeapYear(int); }
-keepclassmembers class java.util.Locale { java.lang.String titleCaseAsciiWord(java.lang.String); }
-keepclassmembers class android.text.AutoText { void add(java.lang.String,char); }
-keepclassmembers class java.io.BufferedInputStream { int available(); }
-keepclassmembers class java.util.Locale { void parseUnicodeExtension(java.lang.String[],java.util.Map,java.util.Set); }
-keepclassmembers class android.text.AutoText { char newTrieNode(); }
-keepclassmembers class java.util.Locale { java.lang.String joinBcp47Subtags(java.util.List); }
-keepclassmembers class android.support.v4.app.ab$k { android.app.Notification a(android.support.v4.app.ab$d,android.support.v4.app.ab$e); }
-keepclassmembers class java.util.Grego { int[] dayToFields(long,int[]); }
-keepclassmembers class java.util.Locale { void extractVariantSubtags(java.lang.String[],int,int,java.util.List); }
-keepclassmembers class java.io.BufferedInputStream { int fillbuf(java.io.InputStream,byte[]); }
-keepclassmembers class java.util.Locale { int extractExtensions(java.lang.String[],int,int,java.util.Map); }
-keepclassmembers class java.util.Grego { long floorDivide(long,long,long[]); }
-keepclassmembers class java.io.BufferedInputStream { int read(); }
-keepclassmembers class android.animation.PathKeyframes { java.lang.Object getValue(float); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF interpolateInRange(float,int,int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean,int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { int detectDisplayOptions(); }
-keepclassmembers class java.io.BufferedInputStream { int read(byte[],int,int); }
-keepclassmembers class java.util.Locale { java.util.Locale forLanguageTag(java.lang.String,boolean); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF pointForIndex(int); }
-keepclassmembers class java.io.BufferedInputStream { long skip(long); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { boolean hasNext(); }
-keepclassmembers class android.animation.PathKeyframes { float interpolate(float,float,float); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitleInt(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ao { void A(); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { java.lang.Object next(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateToolbarLogo(); }
-keepclassmembers class android.support.v4.app.k { java.lang.String a(android.view.View); }
-keepclassmembers class android.support.v7.widget.ao { void F(); }
-keepclassmembers class java.util.logging.LogRecord { void <init>(java.util.logging.Level,java.lang.String); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDisplayOptions(int); }
-keepclassmembers class android.support.v7.widget.ao { void H(); }
-keepclassmembers class android.support.v4.app.k { void a(java.lang.String,java.io.PrintWriter,android.view.View); }
-keepclassmembers class java.security.cert.Certificate { int hashCode(); }
-keepclassmembers class android.graphics.drawable.Ripple { void setup(int,float); }
-keepclassmembers class android.support.v4.app.k { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setCustomView(android.view.View); }
-keepclassmembers class android.support.v7.widget.ao { void I(); }
-keepclassmembers class android.graphics.drawable.Ripple { void clampStartingPosition(); }
-keepclassmembers class android.graphics.drawable.Ripple { void onHotspotBoundsChanged(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateNavigationIcon(); }
-keepclassmembers class android.support.v4.app.k { void onCreate(android.os.Bundle); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateHomeAccessibility(); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { org.apache.http.NameValuePair getParameterByName(java.lang.String); }
-keepclassmembers class android.support.v4.app.k { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class java.math.BigInteger { void <init>(java.math.BigInt); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { int hashCode(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void highlight(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class android.support.v7.widget.ao { void a(float,float,float,float); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.Ripple { void enter(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { boolean updatePaint(); }
-keepclassmembers class android.support.v4.app.k { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.graphics.drawable.Ripple { void getBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.FontListParser { void skip(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v4.app.k { void onRequestPermissionsResult(int,java.lang.String[],int[]); }
-keepclassmembers class android.graphics.drawable.Ripple { void exit(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void invalidate(boolean); }
-keepclassmembers class libcore.io.HeapBufferIterator { void skip(int); }
-keepclassmembers class android.support.v7.widget.ao { void a(long,android.support.v7.widget.ao$v,android.support.v7.widget.ao$v); }
-keepclassmembers class libcore.io.HeapBufferIterator { int readInt(); }
-keepclassmembers class libcore.io.HeapBufferIterator { short readShort(); }
-keepclassmembers class android.graphics.drawable.Ripple { void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.k { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class java.math.BigInteger { void setJavaRepresentation(int,int,int[]); }
-keepclassmembers class java.lang.AbstractStringBuilder { void enlargeBuffer(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void appendNull(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger valueOf(long); }
-keepclassmembers class java.lang.StringToReal { java.lang.StringToReal$StringExponentPair initialParse(java.lang.String,int,boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char[]); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char[],int,int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(java.lang.CharSequence,int,int); }
-keepclassmembers class java.math.BigInteger { boolean testBit(int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.lang.StringToReal { float parseName(java.lang.String,boolean); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancelHardwareAnimations(boolean); }
-keepclassmembers class java.lang.StringToReal { double parseDouble(java.lang.String); }
-keepclassmembers class java.math.BigInteger { int getLowestSetBit(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void delete0(int,int); }
-keepclassmembers class java.math.BigInteger { int intValue(); }
-keepclassmembers class java.math.BigInteger { long longValue(); }
-keepclassmembers class java.lang.StringToReal { float parseFloat(java.lang.String); }
-keepclassmembers class org.json.JSONObject { java.lang.String numberToString(java.lang.Number); }
-keepclassmembers class java.lang.AbstractStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class java.math.BigInteger { int hashCode(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char[]); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char[],int,int); }
-keepclassmembers class android.support.v7.widget.ao { void a(int[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ao { boolean a(android.view.MotionEvent); }
-keepclassmembers class java.lang.AbstractStringBuilder { void move(int,int); }
-keepclassmembers class android.text.TextLine { android.text.TextLine obtain(); }
-keepclassmembers class android.text.TextLine { android.text.TextLine recycle(android.text.TextLine); }
-keepclassmembers class java.math.BigInteger { byte[] twosComplement(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void replace0(int,int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ao { void c(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.ao { boolean b(android.view.MotionEvent); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class); }
-keepclassmembers class android.text.TextLine { void set(android.text.TextPaint,java.lang.CharSequence,int,int,int,android.text.Layout$Directions,boolean,android.text.Layout$TabStops); }
-keepclassmembers class android.support.v7.widget.ao { float getScrollFactor(); }
-keepclassmembers class android.support.v7.widget.ao { void h(int,int); }
-keepclassmembers class java.math.BigInteger { int getFirstNonzeroDigit(); }
-keepclassmembers class android.support.v7.view.menu.e$a { void a(); }
-keepclassmembers class android.support.v7.view.menu.e$a { int getCount(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class android.support.v7.widget.ao { boolean j(int,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetterAndGetter(java.lang.Object); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String toString(); }
-keepclassmembers class android.view.ViewConfiguration { void <init>(android.content.Context); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class org.apache.http.util.LangUtils { int hashCode(int,int); }
-keepclassmembers class android.support.v7.widget.ao { boolean u(); }
-keepclassmembers class android.text.TextLine { void draw(android.graphics.Canvas,float,int,int,int); }
-keepclassmembers class android.view.ViewConfiguration { android.view.ViewConfiguration get(android.content.Context); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupEndValue(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ao { void z(); }
-keepclassmembers class android.support.v7.widget.ao { void w(); }
-keepclassmembers class org.apache.http.util.LangUtils { boolean equals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class android.text.TextLine { float measure(int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.support.v7.widget.ao { boolean a(int,int,android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.ao { void a(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Time { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.TextLine { float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean); }
-keepclassmembers class android.support.v7.widget.ao { boolean a(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int fixMethodFlags(int); }
-keepclassmembers class android.text.method.DialerKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.ao { void b(); }
-keepclassmembers class android.text.TextLine { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class android.support.v7.widget.ao { void d(int); }
-keepclassmembers class android.support.v7.widget.ao { void d(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.text.TextLine { int getOffsetBeforeAfter(int,int,int,boolean,int,boolean); }
-keepclassmembers class android.support.v7.widget.ao { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.animation.PathInterpolator { void initPath(android.graphics.Path); }
-keepclassmembers class android.view.animation.PathInterpolator { float getInterpolation(float); }
-keepclassmembers class libcore.reflect.AnnotationFactory { void <init>(java.lang.Class,libcore.reflect.AnnotationMember[]); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { long makeNodeId(int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { int getVirtualDescendantId(long); }
-keepclassmembers class libcore.reflect.AnnotationFactory { libcore.reflect.AnnotationMember[] getElementsDescription(java.lang.Class); }
-keepclassmembers class android.text.TextLine { float handleText(android.text.TextPaint,int,int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int read(); }
-keepclassmembers class android.util.ArraySet { int indexOf(java.lang.Object,int); }
-keepclassmembers class android.util.ArraySet { int indexOfNull(); }
-keepclassmembers class android.widget.SpellChecker { void resetSession(); }
-keepclassmembers class com.android.volley.m { java.lang.String e(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.ao { void e(); }
-keepclassmembers class android.util.ArraySet { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int read(byte[],int,int); }
-keepclassmembers class android.widget.SpellChecker { void closeSession(); }
-keepclassmembers class android.util.ArraySet { void allocArrays(int); }
-keepclassmembers class android.text.TextLine { float handleReplacement(android.text.style.ReplacementSpan,android.text.TextPaint,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class java.lang.HexStringParser { void <init>(int,int); }
-keepclassmembers class android.support.v7.widget.ao { void f(); }
-keepclassmembers class java.lang.HexStringParser { long parse(java.lang.String,boolean); }
-keepclassmembers class android.widget.SpellChecker { int nextSpellCheckSpanIndex(); }
-keepclassmembers class android.widget.SpellChecker { void addSpellCheckSpan(android.text.Editable,int,int); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(int,int); }
-keepclassmembers class java.lang.HexStringParser { void parseExponent(java.lang.String); }
-keepclassmembers class java.lang.HexStringParser { void parseMantissa(java.lang.String); }
-keepclassmembers class java.lang.HexStringParser { void processNormalNumber(); }
-keepclassmembers class java.lang.HexStringParser { void checkedAddExponent(long); }
-keepclassmembers class android.util.ArraySet { boolean add(java.lang.Object); }
-keepclassmembers class android.util.ArraySet { void addAll(android.util.ArraySet); }
-keepclassmembers class java.lang.HexStringParser { void processSubNormalNumber(); }
-keepclassmembers class java.lang.HexStringParser { void discardTrailingBits(long); }
-keepclassmembers class java.lang.HexStringParser { void fitMantissaInDesiredWidth(int); }
-keepclassmembers class java.lang.HexStringParser { void round(); }
-keepclassmembers class android.text.TextLine { float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class android.support.v7.widget.ao { void g(); }
-keepclassmembers class java.lang.HexStringParser { int getOffset(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(); }
-keepclassmembers class android.support.v7.widget.ao { void g(int,int); }
-keepclassmembers class android.text.TextLine { void drawTextRun(android.graphics.Canvas,android.text.TextPaint,int,int,int,int,boolean,float,int); }
-keepclassmembers class java.lang.HexStringParser { int countBitsLength(long); }
-keepclassmembers class android.text.TextLine { float ascent(int); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void <init>(java.util.AbstractList,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseArgumentIndexAndFlags(java.util.Formatter$FormatToken); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { char advance(); }
-keepclassmembers class android.support.v7.widget.ao { void l(); }
-keepclassmembers class java.util.DualPivotQuicksort { void sort(int[],int,int); }
-keepclassmembers class java.util.DualPivotQuicksort { void doSort(int[],int,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int nextInt(); }
-keepclassmembers class android.support.v7.widget.ao { void m(); }
-keepclassmembers class android.support.v7.widget.ao { void o(); }
-keepclassmembers class android.os.Build { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ao { void n(); }
-keepclassmembers class java.util.DualPivotQuicksort { void dualPivotQuicksort(int[],int,int); }
-keepclassmembers class android.support.v7.widget.ao { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ao { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class java.io.BufferedOutputStream { void write(byte[],int,int); }
-keepclassmembers class com.android.volley.a$a { boolean a(); }
-keepclassmembers class com.android.volley.a$a { boolean b(); }
-keepclassmembers class java.io.BufferedOutputStream { void write(int); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void flushCacheWithAppend(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.ao { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean add(java.lang.Object); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object remove(int); }
-keepclassmembers class java.io.FileInputStream { long skip(long); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void write(byte[],int,int); }
-keepclassmembers class com.android.volley.a.e { com.android.volley.a$a a(com.android.volley.g); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] emptyArray(java.lang.Class); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void removeRange(int,int); }
-keepclassmembers class com.android.volley.a.e { java.lang.String a(java.util.Map,java.lang.String); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int indexOf(java.lang.Object,java.lang.Object[],int,int); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class android.support.v7.widget.ao { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.Arrays { int binarySearch(long[],int,int,long); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int,int,int); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class com.android.org.conscrypt.util.Arrays { void checkOffsetAndCount(int,int,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setSharedElements(android.util.ArrayMap); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { int estimateProtocolVersionLen(org.apache.http.ProtocolVersion); }
-keepclassmembers class java.util.Arrays { void fill(char[],int,int,char); }
-keepclassmembers class java.util.Arrays { void fill(char[],char); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.transition.Transition setTargets(android.transition.Transition,boolean); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void stripOffscreenViews(); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { void doFormatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],java.lang.Object); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine); }
-keepclassmembers class java.util.Arrays { int hashCode(int[]); }
-keepclassmembers class java.util.Arrays { int hashCode(byte[]); }
-keepclassmembers class java.util.Arrays { boolean equals(byte[],byte[]); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header); }
-keepclassmembers class java.util.Arrays { boolean equals(char[],char[]); }
-keepclassmembers class java.util.Arrays { boolean equals(short[],short[]); }
-keepclassmembers class java.util.Arrays { boolean equals(int[],int[]); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.util.ArrayMap mapSharedElements(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class java.util.Arrays { boolean equals(float[],float[]); }
-keepclassmembers class java.util.Arrays { boolean equals(long[],long[]); }
-keepclassmembers class java.util.Arrays { boolean equals(double[],double[]); }
-keepclassmembers class java.util.Arrays { boolean equals(boolean[],boolean[]); }
-keepclassmembers class java.util.Arrays { boolean equals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setSharedElementMatrices(); }
-keepclassmembers class java.util.Arrays { boolean deepEquals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class java.util.Arrays { void checkOffsetAndCount(int,int,int); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { int estimateNameValuePairLen(org.apache.http.NameValuePair); }
-keepclassmembers class java.util.concurrent.FutureTask { int awaitDone(boolean,long); }
-keepclassmembers class android.support.v7.widget.s { void showAsDropDown(android.view.View,int,int); }
-keepclassmembers class android.support.v7.widget.s { void showAsDropDown(android.view.View,int,int,int); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { void doFormatValue(org.apache.http.util.CharArrayBuffer,java.lang.String,boolean); }
-keepclassmembers class android.support.v7.widget.s { void update(android.view.View,int,int,int,int); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toBigEndianUtf16Bytes(char[],int,int); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(byte[]); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(boolean[]); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(double[]); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(char[]); }
-keepclassmembers class android.support.v4.f.b { int a(int); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(float[]); }
-keepclassmembers class android.support.v4.f.b { int a(int[],int,int); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(int[]); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { float getPercent(android.content.res.TypedArray,int,float); }
-keepclassmembers class android.support.v4.f.b { int a(long[],int,long); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(long[]); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { boolean acceptableCountryWildcard(java.lang.String); }
-keepclassmembers class android.support.v4.f.b { int b(int); }
-keepclassmembers class android.support.v4.f.b { int c(int); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(short[]); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText obtain(); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(java.lang.Object[]); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { int countDots(java.lang.String); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean action(int,android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.Arrays { java.lang.String deepToString(java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText recycle(android.text.MeasuredText); }
-keepclassmembers class android.text.MeasuredText { void setPos(int); }
-keepclassmembers class android.text.MeasuredText { void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.net.NetworkInterface { void collectIpv6Addresses(java.lang.String,int,java.util.List,java.util.List,java.lang.String[]); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class java.util.Arrays { void deepToStringImpl(java.lang.Object[],java.lang.Object[],java.lang.StringBuilder); }
-keepclassmembers class android.text.method.LinkMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { int hashCode(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void moveSharedElementsToOverlay(); }
-keepclassmembers class java.util.Arrays { boolean deepToStringImplContains(java.lang.Object[],java.lang.Object); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(); }
-keepclassmembers class java.net.NetworkInterface { java.util.List getNetworkInterfacesList(); }
-keepclassmembers class java.util.Arrays { byte[] copyOfRange(byte[],int,int); }
-keepclassmembers class java.util.Arrays { char[] copyOfRange(char[],int,int); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class java.util.Arrays { int[] copyOfRange(int[],int,int); }
-keepclassmembers class java.util.Arrays { float[] copyOfRange(float[],int,int); }
-keepclassmembers class android.text.MeasuredText { int breakText(int,boolean,float); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void expand(int); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeSpansAt(android.text.Editable,int,java.lang.Object[]); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void append(byte[],int,int); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class); }
-keepclassmembers class com.android.volley.a.k { com.android.volley.i a(android.content.Context,com.android.volley.a.f); }
-keepclassmembers class android.text.MeasuredText { float measure(int,int); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void append(char[],int,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void expand(int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(char[],int,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(java.lang.String); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(char); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.widget.ao$e { int d(android.support.v7.widget.ao$v); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(byte[],int,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void ensureCapacity(int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { int indexOf(int,int,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { java.lang.String substring(int,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { java.lang.String substringTrimmed(int,int); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int); }
-keepclassmembers class android.view.MotionEvent { void ensureSharedTempPointerCapacity(int); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(); }
-keepclassmembers class android.support.v7.widget.av { int a(android.content.Context,int,float); }
-keepclassmembers class android.view.MotionEvent { boolean isTainted(); }
-keepclassmembers class android.view.MotionEvent { int getActionMasked(); }
-keepclassmembers class android.view.MotionEvent { int getActionIndex(); }
-keepclassmembers class android.view.MotionEvent { void recycle(); }
-keepclassmembers class android.view.MotionEvent { void setTainted(boolean); }
-keepclassmembers class android.view.MotionEvent { void setTargetAccessibilityFocus(boolean); }
-keepclassmembers class android.view.MotionEvent { boolean isTargetAccessibilityFocus(); }
-keepclassmembers class java.util.jar.JarVerifier { java.util.jar.JarVerifier$VerifierEntry initEntry(java.lang.String); }
-keepclassmembers class android.view.MotionEvent { long getDownTime(); }
-keepclassmembers class android.view.MotionEvent { long getEventTime(); }
-keepclassmembers class java.util.jar.JarVerifier { boolean verify(java.util.jar.Attributes,java.lang.String,byte[],int,int,boolean,boolean); }
-keepclassmembers class android.view.DisplayEventReceiver { void scheduleVsync(); }
-keepclassmembers class android.view.MotionEvent { void offsetLocation(float,float); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { android.view.ViewGroup$TouchTarget obtain(android.view.View,int); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void recycle(); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.TypedArray obtain(android.content.res.Resources,int); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getString(int); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence getText(int); }
-keepclassmembers class android.content.res.TypedArray { int getIndex(int); }
-keepclassmembers class android.system.OsConstants { boolean S_ISREG(int); }
-keepclassmembers class android.view.MotionEvent { int getPointerIdBits(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent split(int); }
-keepclassmembers class android.content.res.TypedArray { int getInt(int,int); }
-keepclassmembers class android.system.OsConstants { boolean S_ISDIR(int); }
-keepclassmembers class android.content.res.TypedArray { boolean getBoolean(int,boolean); }
-keepclassmembers class android.content.res.TypedArray { float getFloat(int,float); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toString(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost[]); }
-keepclassmembers class android.content.res.TypedArray { int getColor(int,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { int getHopCount(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String actionToString(int); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class android.content.res.TypedArray { int getInteger(int,int); }
-keepclassmembers class android.view.MotionEvent { java.lang.String buttonStateToString(int); }
-keepclassmembers class android.content.res.TypedArray { float getDimension(int,float); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { org.apache.http.HttpHost getHopTarget(int); }
-keepclassmembers class android.view.MotionEvent { boolean isButtonPressed(int); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { boolean equals(java.lang.Object); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelOffset(int,int); }
-keepclassmembers class android.support.v7.widget.ak$a { void d(); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelSize(int,int); }
-keepclassmembers class android.support.v7.widget.ak$a { void a(android.view.View,int,float,float); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { int hashCode(); }
-keepclassmembers class android.content.res.TypedArray { int getLayoutDimension(int,int); }
-keepclassmembers class android.content.res.TypedArray { int getResourceId(int,int); }
-keepclassmembers class android.support.v7.widget.ak$a { boolean a(android.view.MotionEvent,int); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { java.lang.String toString(); }
-keepclassmembers class android.content.res.TypedArray { boolean getValue(int,android.util.TypedValue); }
-keepclassmembers class android.content.res.TypedArray { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.content.res.TypedArray { int[] extractThemeAttrs(); }
-keepclassmembers class android.content.res.TypedArray { boolean hasValue(int); }
-keepclassmembers class android.content.res.TypedArray { android.util.TypedValue peekValue(int); }
-keepclassmembers class android.content.res.TypedArray { int getChangingConfigurations(); }
-keepclassmembers class java.io.InputStreamReader { int read(char[],int,int); }
-keepclassmembers class android.content.res.TypedArray { boolean getValueAt(int,android.util.TypedValue); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence loadStringValueAt(int); }
-keepclassmembers class java.util.WeakHashMap { void computeMaxSize(); }
-keepclassmembers class java.util.WeakHashMap { void clear(); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.m { boolean a(int[],int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { int hashCode(); }
-keepclassmembers class java.util.WeakHashMap { void removeEntry(java.util.WeakHashMap$Entry); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,int,int,boolean); }
-keepclassmembers class java.util.WeakHashMap { void rehash(); }
-keepclassmembers class android.app.FragmentManagerImpl { void startPendingDeferredFragments(); }
-keepclassmembers class android.support.v7.widget.m { android.graphics.drawable.Drawable c(android.content.Context,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.BoringLayout { void init(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(boolean); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics); }
-keepclassmembers class java.util.GregorianCalendar { void add(int,int); }
-keepclassmembers class java.util.GregorianCalendar { void fullFieldsCalc(); }
-keepclassmembers class android.content.res.Configuration { boolean isLayoutSizeAtLeast(int); }
-keepclassmembers class android.text.BoringLayout { void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class java.util.GregorianCalendar { void computeFields(); }
-keepclassmembers class android.support.v4.app.ac$a { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String); }
-keepclassmembers class org.json.JSONTokener { int nextCleanInternal(); }
-keepclassmembers class org.json.JSONTokener { java.lang.Object nextValue(); }
-keepclassmembers class android.text.BoringLayout { void ellipsized(int,int); }
-keepclassmembers class org.json.JSONTokener { void skipToEndOfLine(); }
-keepclassmembers class org.json.JSONTokener { char readEscapeCharacter(); }
-keepclassmembers class org.json.JSONTokener { java.lang.Object readLiteral(); }
-keepclassmembers class org.json.JSONTokener { java.lang.String nextString(char); }
-keepclassmembers class android.content.res.Configuration { int updateFrom(android.content.res.Configuration); }
-keepclassmembers class org.json.JSONTokener { org.json.JSONObject readObject(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void free(); }
-keepclassmembers class android.app.FragmentManagerImpl { void setBackStackIndex(int,android.app.BackStackRecord); }
-keepclassmembers class org.json.JSONTokener { java.lang.String nextToInternal(java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void a(int,int,int[]); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean execPendingActions(); }
-keepclassmembers class java.util.GregorianCalendar { void computeTime(); }
-keepclassmembers class org.json.JSONTokener { org.json.JSONArray readArray(); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.content.res.Configuration { boolean needNewResources(int,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void reportBackStackChanged(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean popBackStackState(android.os.Handler,java.lang.String,int,int); }
-keepclassmembers class java.util.GregorianCalendar { long daysFromBaseYear(long); }
-keepclassmembers class java.util.GregorianCalendar { int daysInMonth(boolean,int); }
-keepclassmembers class java.util.jar.JarFile { boolean endsWithIgnoreCase(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.GregorianCalendar { int computeYearAndDay(long,long); }
-keepclassmembers class java.util.GregorianCalendar { int daysInYear(int); }
-keepclassmembers class java.util.jar.JarFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class java.util.GregorianCalendar { int daysInYear(boolean,int); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String toString(); }
-keepclassmembers class android.view.WindowManagerGlobal { void changeCanvasOpacity(android.os.IBinder,boolean); }
-keepclassmembers class android.content.res.Configuration { void setLayoutDirection(java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int hashIntArray(int[]); }
-keepclassmembers class android.content.res.Configuration { int getScreenLayoutNoDirection(int); }
-keepclassmembers class java.util.GregorianCalendar { int getOffset(long); }
-keepclassmembers class android.content.res.Configuration { int getLayoutDirection(); }
-keepclassmembers class android.util.SizeF { boolean equals(java.lang.Object); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { int i(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void c(); }
-keepclassmembers class java.util.GregorianCalendar { int julianError(); }
-keepclassmembers class android.util.SizeF { int hashCode(); }
-keepclassmembers class java.util.GregorianCalendar { int mod7(long); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void j(); }
-keepclassmembers class java.util.GregorianCalendar { boolean isLeapYear(int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.app.FragmentManagerImpl { void restoreAllState(android.os.Parcelable,java.util.ArrayList); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTransition(android.transition.Transition); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setDuration(long); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(android.view.View); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void onDestroy(); }
-keepclassmembers class android.support.v4.g.af$a { boolean b(android.support.v4.g.ab,int); }
-keepclassmembers class android.transition.TransitionSet { void forceVisibility(int,boolean); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(android.view.View,boolean); }
-keepclassmembers class android.support.v4.g.af$a { float F(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { int a(int,int); }
-keepclassmembers class java.lang.Math { double abs(double); }
-keepclassmembers class java.lang.Math { float abs(float); }
-keepclassmembers class java.lang.Math { long abs(long); }
-keepclassmembers class android.support.v4.g.af$a { void a(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class java.lang.Math { double max(double,double); }
-keepclassmembers class java.lang.Math { float max(float,float); }
-keepclassmembers class java.lang.Math { long max(long,long); }
-keepclassmembers class java.lang.Math { float min(float,float); }
-keepclassmembers class java.lang.Math { long min(long,long); }
-keepclassmembers class java.lang.Math { long round(double); }
-keepclassmembers class java.lang.Math { int round(float); }
-keepclassmembers class android.support.v7.view.menu.h { void a(boolean); }
-keepclassmembers class java.lang.Math { float signum(float); }
-keepclassmembers class java.lang.Math { double toRadians(double); }
-keepclassmembers class android.transition.TransitionSet { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class android.support.v4.widget.g { void a(android.content.Context,android.database.Cursor,int); }
-keepclassmembers class android.support.v7.view.menu.h { void b(boolean); }
-keepclassmembers class android.support.v7.view.menu.h { boolean c(boolean); }
-keepclassmembers class android.support.v7.view.menu.h { boolean g(); }
-keepclassmembers class android.transition.TransitionSet { java.lang.String toString(java.lang.String); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet clone(); }
-keepclassmembers class java.lang.Character { int compare(char,char); }
-keepclassmembers class android.support.v7.view.menu.h { boolean isCheckable(); }
-keepclassmembers class java.lang.Character { int toCodePoint(char,char); }
-keepclassmembers class android.support.v7.view.menu.h { boolean isChecked(); }
-keepclassmembers class android.support.v7.view.menu.h { boolean isVisible(); }
-keepclassmembers class java.lang.Character { int codePointAt(java.lang.CharSequence,int); }
-keepclassmembers class android.support.v7.view.menu.h { boolean m(); }
-keepclassmembers class android.support.v7.view.menu.h { boolean j(); }
-keepclassmembers class android.support.v7.view.menu.h { boolean isEnabled(); }
-keepclassmembers class java.lang.Character { int codePointAt(char[],int); }
-keepclassmembers class java.lang.Character { int codePointAt(char[],int,int); }
-keepclassmembers class android.support.v7.view.menu.h { boolean n(); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setCheckable(boolean); }
-keepclassmembers class android.view.DisplayInfo { void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder,int,int); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setChecked(boolean); }
-keepclassmembers class java.lang.Character { int codePointBefore(java.lang.CharSequence,int); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setEnabled(boolean); }
-keepclassmembers class android.support.v7.view.menu.h { void setShowAsAction(int); }
-keepclassmembers class java.lang.Character { int codePointBefore(char[],int,int); }
-keepclassmembers class android.content.res.AssetManager { void makeStringBlocks(android.content.res.StringBlock[]); }
-keepclassmembers class java.lang.Character { char[] toChars(int); }
-keepclassmembers class java.lang.Long { int compare(long,long); }
-keepclassmembers class android.widget.ListView { int getMaxScrollAmount(); }
-keepclassmembers class android.widget.ListView { void adjustViewsUpOrDown(); }
-keepclassmembers class java.nio.CharArrayBuffer { char get(int); }
-keepclassmembers class java.lang.Long { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.lang.Long { int hashCode(); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.XmlBlock openXmlBlockAsset(int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.lang.Long { long parse(java.lang.String,int,int,boolean); }
-keepclassmembers class java.lang.Character { int digit(int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateDstRectAndInsetsIfDirty(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.ListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class java.lang.Long { int numberOfLeadingZeros(long); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class java.lang.Character { int getType(int); }
-keepclassmembers class android.widget.ListView { void clearRecycledState(java.util.ArrayList); }
-keepclassmembers class android.content.res.AssetManager { void incRefsLocked(long); }
-keepclassmembers class android.content.res.AssetManager { void decRefsLocked(long); }
-keepclassmembers class java.lang.Long { int numberOfTrailingZeros(long); }
-keepclassmembers class android.widget.ListView { boolean showingTopFadingEdge(); }
-keepclassmembers class android.widget.ListView { boolean showingBottomFadingEdge(); }
-keepclassmembers class java.lang.Long { int bitCount(long); }
-keepclassmembers class java.lang.Long { int signum(long); }
-keepclassmembers class android.widget.ListView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class java.lang.Long { java.lang.Long valueOf(long); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierPart(int); }
-keepclassmembers class android.widget.ListView { void fillGap(boolean); }
-keepclassmembers class java.lang.Long { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.ListView { android.view.View fillUp(int,int); }
-keepclassmembers class android.widget.ListView { android.view.View fillDown(int,int); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromTop(int); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromMiddle(int,int); }
-keepclassmembers class android.widget.ListView { void fillAboveAndBelow(android.view.View,int); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromSelection(int,int,int); }
-keepclassmembers class java.lang.Character { int toLowerCase(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeTag(int); }
-keepclassmembers class android.widget.ListView { int getBottomSelectionPixel(int,int,int); }
-keepclassmembers class java.lang.Character { int toUpperCase(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeBitString(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeANY(); }
-keepclassmembers class android.widget.ListView { int getTopSelectionPixel(int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeBoolean(); }
-keepclassmembers class java.lang.Character { void <clinit>(); }
-keepclassmembers class android.widget.ListView { android.view.View moveSelection(android.view.View,android.view.View,int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeGeneralizedTime(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeUTCTime(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeInteger(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeOctetString(); }
-keepclassmembers class android.widget.LinearLayout { void drawDividersVertical(android.graphics.Canvas); }
-keepclassmembers class android.widget.ListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.LinearLayout { void drawDividersHorizontal(android.graphics.Canvas); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeOID(); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { void incrementExecCount(); }
-keepclassmembers class android.widget.LinearLayout { void drawHorizontalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.widget.LinearLayout { void drawVerticalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.widget.ListView { void onMeasure(int,int); }
-keepclassmembers class android.widget.LinearLayout { int getBaseline(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeString(); }
-keepclassmembers class android.widget.ListView { void measureScrapChild(android.view.View,int,int); }
-keepclassmembers class android.widget.LinearLayout { boolean hasDividerBeforeChildAt(int); }
-keepclassmembers class android.widget.ListView { int measureHeightOfChildren(int,int,int,int,int); }
-keepclassmembers class android.widget.ListView { int findMotionRow(int); }
-keepclassmembers class android.app.Notification$Builder { void setFlag(int,boolean); }
-keepclassmembers class android.support.v7.widget.al { int a(int,int,int,int,int); }
-keepclassmembers class android.widget.ListView { android.view.View fillSpecific(int,int); }
-keepclassmembers class android.widget.ListView { void correctTooHigh(int); }
-keepclassmembers class android.text.Layout$TabStops { void reset(int,java.lang.Object[]); }
-keepclassmembers class android.text.Layout$TabStops { float nextTab(float); }
-keepclassmembers class android.text.Layout$TabStops { float nextDefaultStop(float,int); }
-keepclassmembers class android.support.v7.widget.al { void b(int,android.view.View); }
-keepclassmembers class android.widget.ListView { void correctTooLow(int); }
-keepclassmembers class android.widget.LinearLayout { void measureVertical(int,int); }
-keepclassmembers class android.view.KeyCharacterMap { void addDeadKey(int,int,int); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel); }
-keepclassmembers class java.lang.Throwable { int countDuplicates(java.lang.StackTraceElement[],java.lang.StackTraceElement[]); }
-keepclassmembers class java.util.concurrent.TimeUnit { long x(long,long,long); }
-keepclassmembers class android.view.KeyCharacterMap { int get(int,int); }
-keepclassmembers class android.view.KeyCharacterMap { int getDeadChar(int,int); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.lang.Appendable,java.lang.String,java.lang.StackTraceElement[]); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews applyStandardTemplate(int,boolean); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformWidth(int,int); }
-keepclassmembers class android.app.Notification$Builder { boolean showsTimeOrChronometer(); }
-keepclassmembers class android.app.Notification$Builder { int calculateTopPadding(android.content.Context,boolean,float); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109DomainHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews applyStandardTemplateWithActions(int); }
-keepclassmembers class android.widget.ListView { void layoutChildren(); }
-keepclassmembers class android.widget.LinearLayout { void measureHorizontal(int,int); }
-keepclassmembers class android.app.Notification$Builder { int sanitizeColor(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification buildUnstyled(); }
-keepclassmembers class android.widget.ListView { boolean isDirectChildHeaderOrFooter(android.view.View); }
-keepclassmembers class android.util.Size { int hashCode(); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformHeight(int,int); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.lang.String getName0(java.lang.String); }
-keepclassmembers class android.widget.LinearLayout { void layoutVertical(int,int,int,int); }
-keepclassmembers class android.widget.ListView { void setupChild(android.view.View,int,int,boolean,int,boolean,boolean); }
-keepclassmembers class android.widget.LinearLayout { void layoutHorizontal(int,int,int,int); }
-keepclassmembers class android.widget.ListView { void setSelectionInt(int); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class android.widget.LinearLayout { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.LinearLayout { void setGravity(int); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionAfter(int,int,boolean); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { java.lang.CharSequence invertCharSequenceColors(java.lang.CharSequence); }
-keepclassmembers class android.animation.LayoutTransition$3 { void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { android.text.style.TextAppearanceSpan processTextAppearanceSpan(android.text.style.TextAppearanceSpan); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { int processColor(int); }
-keepclassmembers class android.widget.ListView { boolean commonKey(int,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String getReplacement(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class android.widget.ListView { boolean pageScroll(int); }
-keepclassmembers class android.os.StrictMode$Span { void finish(); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { android.view.ViewGroup$HoverTarget obtain(android.view.View); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void recycle(); }
-keepclassmembers class android.widget.ListView { boolean fullScroll(int); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <clinit>(); }
-keepclassmembers class android.widget.ListView { int nextSelectedPositionForDirection(android.view.View,int,int); }
-keepclassmembers class android.widget.ListView { void handleNewSelectionChange(android.view.View,int,int,boolean); }
-keepclassmembers class android.widget.ListView { void measureAndAdjustDown(android.view.View,int,int); }
-keepclassmembers class android.widget.ListView { void measureItem(android.view.View); }
-keepclassmembers class android.widget.ListView { void relayoutMeasuredItem(android.view.View); }
-keepclassmembers class java.security.Security { void renumProviders(); }
-keepclassmembers class android.support.v7.widget.bd { int a(int,int); }
-keepclassmembers class android.widget.ListView { int amountToScroll(int,int); }
-keepclassmembers class java.util.LinkedHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.LinkedHashMap { void makeTail(java.util.LinkedHashMap$LinkedEntry); }
-keepclassmembers class org.apache.http.conn.routing.BasicRouteDirector { int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionOnScreen(int); }
-keepclassmembers class com.android.volley.a.j { void a(int); }
-keepclassmembers class android.widget.ListView { android.widget.ListView$ArrowScrollFocusResult arrowScrollFocused(int); }
-keepclassmembers class android.support.v4.widget.l { boolean f(int); }
-keepclassmembers class android.widget.ListView { int amountToScrollToNewFocus(int,android.view.View,int); }
-keepclassmembers class android.widget.ListView { int positionOfNewFocus(android.view.View); }
-keepclassmembers class android.widget.ListView { int distanceToView(android.view.View); }
-keepclassmembers class android.support.v7.widget.DialogTitle { void onMeasure(int,int); }
-keepclassmembers class android.widget.ListView { void scrollListItemsBy(int); }
-keepclassmembers class java.math.BigInt { void makeValid(); }
-keepclassmembers class android.widget.ListView { android.view.View addViewAbove(android.view.View,int); }
-keepclassmembers class android.widget.ListView { android.view.View addViewBelow(android.view.View,int); }
-keepclassmembers class java.math.BigInt { java.lang.String checkString(java.lang.String,int); }
-keepclassmembers class android.widget.ListView { boolean isOpaque(); }
-keepclassmembers class android.widget.ListView { void setCacheColorHint(int); }
-keepclassmembers class java.math.BigInt { java.lang.String toAscii(java.lang.String,int); }
-keepclassmembers class android.widget.ListView { void drawOverscrollHeader(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect); }
-keepclassmembers class android.widget.ListView { void drawOverscrollFooter(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect); }
-keepclassmembers class java.math.BigInt { boolean twosCompFitsIntoBytes(int); }
-keepclassmembers class android.widget.ListView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.os.Parcel { android.os.Parcel obtain(); }
-keepclassmembers class android.os.Parcel { void recycle(); }
-keepclassmembers class android.os.Parcel { void writeArrayMapInternal(android.util.ArrayMap); }
-keepclassmembers class java.text.DateFormatSymbols { int hashCode(); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart appendEncodedSegment(android.net.Uri$PathPart,java.lang.String); }
-keepclassmembers class android.widget.ListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.os.Parcel { void writeList(java.util.List); }
-keepclassmembers class android.os.Parcel { void writeArray(java.lang.Object[]); }
-keepclassmembers class android.os.Parcel { void writeSparseArray(android.util.SparseArray); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.os.Parcel { void writeBooleanArray(boolean[]); }
-keepclassmembers class android.widget.ListView { android.view.View findViewInHeadersOrFooters(java.util.ArrayList,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.os.Parcel { boolean[] createBooleanArray(); }
-keepclassmembers class android.os.Parcel { void writeIntArray(int[]); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateInHeadersOrFooters(java.util.ArrayList,com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.os.Parcel { int[] createIntArray(); }
-keepclassmembers class android.util.ArrayMap { int indexOf(java.lang.Object,int); }
-keepclassmembers class android.os.Parcel { void writeLongArray(long[]); }
-keepclassmembers class android.os.Parcel { long[] createLongArray(); }
-keepclassmembers class android.util.ArrayMap { int indexOfNull(); }
-keepclassmembers class android.os.Parcel { float[] createFloatArray(); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String normalizeNumber(java.lang.String); }
-keepclassmembers class android.view.animation.BounceInterpolator { float bounce(float); }
-keepclassmembers class android.util.ArrayMap { void allocArrays(int); }
-keepclassmembers class android.os.Parcel { void writeStringArray(java.lang.String[]); }
-keepclassmembers class android.view.animation.BounceInterpolator { float getInterpolation(float); }
-keepclassmembers class android.os.Parcel { void writeCharSequenceArray(java.lang.CharSequence[]); }
-keepclassmembers class android.os.Parcel { java.lang.String[] createStringArray(); }
-keepclassmembers class android.util.ArrayMap { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int read(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int fillBuffer(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int read(byte[],int,int); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int locateLF(); }
-keepclassmembers class android.os.Parcel { void writeTypedArray(android.os.Parcelable[],int); }
-keepclassmembers class android.util.ArrayMap { void erase(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int readLine(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class android.util.ArrayMap { void ensureCapacity(int); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class android.util.ArrayMap { int indexOfValue(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer wrap(byte[],int,int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object keyAt(int); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String convertKeypadLettersToDigits(java.lang.String); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object valueAt(int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.Parcel { byte readByte(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class android.util.ArrayMap { void append(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { void validate(); }
-keepclassmembers class android.util.ArrayMap { void putAll(android.util.ArrayMap); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence[] readCharSequenceArray(); }
-keepclassmembers class android.os.Parcel { java.lang.String[] readStringArray(); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object removeAt(int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.util.ArrayMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { int hashCode(); }
-keepclassmembers class android.util.ArrayMap { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onMeasure(int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void <init>(android.graphics.drawable.DrawableContainer$DrawableContainerState,android.graphics.drawable.DrawableContainer,android.content.res.Resources); }
-keepclassmembers class android.os.Parcel { void writeParcelableArray(android.os.Parcelable[],int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int addChild(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.text.PackedIntVector { void <init>(int); }
-keepclassmembers class android.os.Parcel { java.lang.Object readValue(java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void createAllFutures(); }
-keepclassmembers class android.text.PackedIntVector { int getValue(int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setLayoutDirection(int); }
-keepclassmembers class android.text.PackedIntVector { void setValueInternal(int,int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.text.PackedIntVector { void adjustValuesBelow(int,int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onWindowSystemUiVisibilityChanged(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void mutate(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void clearMutated(); }
-keepclassmembers class android.text.PackedIntVector { void insertAt(int,int[]); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.Rect getConstantPadding(); }
-keepclassmembers class android.text.PackedIntVector { void deleteAt(int,int); }
-keepclassmembers class java.util.TreeMap { void clear(); }
-keepclassmembers class android.text.PackedIntVector { int size(); }
-keepclassmembers class android.text.PackedIntVector { void growBuffer(); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader); }
-keepclassmembers class android.text.PackedIntVector { void moveValueGapTo(int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void computeConstantSize(); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node find(java.lang.Object,java.util.TreeMap$Relation); }
-keepclassmembers class java.util.LinkedList$LinkIterator { void <init>(java.util.LinkedList,int); }
-keepclassmembers class android.app.ActivityManager { int getLauncherLargeIconSizeInner(android.content.Context); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getOpacity(); }
-keepclassmembers class android.text.PackedIntVector { void moveRowGapTo(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isStateful(); }
-keepclassmembers class java.util.LinkedList$LinkIterator { java.lang.Object next(); }
-keepclassmembers class android.os.Parcel { void init(long); }
-keepclassmembers class java.util.LinkedList$LinkIterator { java.lang.Object previous(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canConstantState(); }
-keepclassmembers class java.util.LinkedList$LinkIterator { void remove(); }
-keepclassmembers class android.os.Parcel { void readMapInternal(java.util.Map,int,java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { void readArrayMapInternal(android.util.ArrayMap,int,java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { void readListInternal(java.util.List,int,java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { void readArrayInternal(java.lang.Object[],int,java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int); }
-keepclassmembers class java.util.TreeMap { void rebalance(java.util.TreeMap$Node,boolean); }
-keepclassmembers class android.net.Uri$StringUri { boolean isHierarchical(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.TreeMap { void rotateLeft(java.util.TreeMap$Node); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { int hashCode(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseSsp(); }
-keepclassmembers class java.util.TreeMap { void rotateRight(java.util.TreeMap$Node); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseQuery(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseFragment(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseAuthority(java.lang.String,int); }
-keepclassmembers class java.net.ProxySelectorImpl { boolean isNonProxyHost(java.lang.String,java.lang.String); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(java.lang.String,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { com.android.org.conscrypt.OpenSSLX509Certificate fromX509Der(byte[]); }
-keepclassmembers class java.util.logging.Logger { void setManager(java.util.logging.LogManager); }
-keepclassmembers class org.apache.http.impl.auth.RFC2617Scheme { void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.a.k { android.support.v7.a.k$d a(int,boolean); }
-keepclassmembers class android.support.v7.a.k { android.support.v7.a.k$d a(android.view.Menu); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { java.util.Collection alternativeNameArrayToList(java.lang.Object[][]); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.LogRecord); }
-keepclassmembers class android.support.v7.a.k { void a(android.support.v7.a.k$d,android.view.KeyEvent); }
-keepclassmembers class java.net.URLStreamHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String relativePath(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.a.k { void a(android.support.v7.view.menu.f,boolean); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { int[] parsePortAttribute(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { boolean portMatch(int,int[]); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String eventTypeToString(int); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int translateFieldId(java.text.FieldPosition); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { int hashCode(); }
-keepclassmembers class android.support.v7.a.k { void d(int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Integer { int parse(java.lang.String,int,int,boolean); }
-keepclassmembers class android.support.v7.widget.aj { void forceUniformHeight(int,int); }
-keepclassmembers class android.support.v7.widget.aj { void forceUniformWidth(int,int); }
-keepclassmembers class android.support.v7.widget.aj { void drawDividersHorizontal(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.aj { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class java.lang.Integer { int numberOfLeadingZeros(int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean offer(java.lang.Object); }
-keepclassmembers class java.lang.Integer { int numberOfTrailingZeros(int); }
-keepclassmembers class java.lang.Integer { int bitCount(int); }
-keepclassmembers class org.apache.http.impl.auth.AuthSchemeBase { void processChallenge(org.apache.http.Header); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.lang.Integer { int reverseBytes(int); }
-keepclassmembers class java.lang.Integer { int signum(int); }
-keepclassmembers class android.support.v7.widget.aj { void drawDividersVertical(android.graphics.Canvas); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(int); }
-keepclassmembers class android.support.v7.widget.aj { void drawHorizontalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.aj { void drawVerticalDivider(android.graphics.Canvas,int); }
-keepclassmembers class java.lang.Integer { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.widget.ScrollBarDrawable { void drawThumb(android.graphics.Canvas,android.graphics.Rect,int,int,boolean); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(int[],int,int); }
-keepclassmembers class android.support.v7.widget.aj { int getBaseline(); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(long[],int,long); }
-keepclassmembers class android.widget.RemoteViews { void recalculateMemoryUsage(); }
-keepclassmembers class android.widget.RemoteViews { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.support.v7.widget.aj { boolean hasDividerBeforeChildAt(int); }
-keepclassmembers class android.support.v7.widget.aj { void layoutHorizontal(int,int,int,int); }
-keepclassmembers class android.support.v7.widget.aj { void layoutVertical(int,int,int,int); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer close(org.json.JSONStringer$Scope,org.json.JSONStringer$Scope,java.lang.String); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer$Scope peek(); }
-keepclassmembers class org.json.JSONStringer { void replaceTop(org.json.JSONStringer$Scope); }
-keepclassmembers class java.lang.ThreadLocal$Values { void inheritValues(java.lang.ThreadLocal$Values); }
-keepclassmembers class java.lang.ThreadLocal$Values { void initializeTable(int); }
-keepclassmembers class org.apache.http.impl.entity.LaxContentLengthStrategy { long determineLength(org.apache.http.HttpMessage); }
-keepclassmembers class org.json.JSONStringer { void string(java.lang.String); }
-keepclassmembers class org.json.JSONStringer { void newline(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void cleanUp(); }
-keepclassmembers class java.lang.ThreadLocal$Values { boolean rehash(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void add(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class java.lang.ThreadLocal$Values { java.lang.Object getAfterMiss(java.lang.ThreadLocal); }
-keepclassmembers class android.text.Selection { boolean moveUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class java.lang.ThreadLocal$Values { void put(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.aj { void measureHorizontal(int,int); }
-keepclassmembers class android.text.Selection { boolean moveDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class java.lang.ThreadLocal$Values { int next(int); }
-keepclassmembers class android.text.Selection { boolean extendUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean extendDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { int chooseHorizontal(android.text.Layout,int,int,int); }
-keepclassmembers class android.text.Selection { int findEdge(android.text.Spannable,android.text.Layout,int); }
-keepclassmembers class android.widget.RemoteViews { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class java.util.AbstractList { int hashCode(); }
-keepclassmembers class android.support.v7.widget.aj { void measureVertical(int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { float getPixelSize(); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.support.design.widget.v { void a(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int applyAlpha(int,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.util.StateSet { boolean stateSetMatches(int[],int[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.aj { void setGravity(int); }
-keepclassmembers class android.support.v4.g.s { int a(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.g.s { int b(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.os.Trace { boolean isTagEnabled(long); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.protocol.RequestContent { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.impl.conn.IdleConnectionHandler$TimeValues { void <init>(long,long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.view.InputDevice { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.HashMap { void <init>(int,float); }
-keepclassmembers class java.util.HashMap { int capacityForInitSize(int); }
-keepclassmembers class android.widget.ImageView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.view.InputDevice { java.lang.String toString(); }
-keepclassmembers class android.view.InputDevice { void appendSourceDescriptionIfApplicable(java.lang.StringBuilder,int,java.lang.String); }
-keepclassmembers class android.widget.ImageView { android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType); }
-keepclassmembers class java.util.HashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.HashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.widget.ImageView { void onMeasure(int,int); }
-keepclassmembers class java.util.HashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { void <init>(int,int); }
-keepclassmembers class java.util.HashMap { java.lang.Object putValueForNullKey(java.lang.Object); }
-keepclassmembers class java.util.HashMap { void constructorPut(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean cancelExitingRipples(); }
-keepclassmembers class android.widget.ImageView { void configureBounds(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.support.v4.widget.n { void a(android.widget.ListView,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.String toString(); }
-keepclassmembers class java.util.HashMap { void ensureCapacity(int); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry[] makeTable(int); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry[] doubleCapacity(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class java.util.HashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.util.HashMap { java.lang.Object removeNullKey(); }
-keepclassmembers class android.widget.ImageView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch find(int); }
-keepclassmembers class java.io.SerializationHandleMap { void <init>(); }
-keepclassmembers class java.util.HashMap { void clear(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class java.io.SerializationHandleMap { void resizeArrays(int); }
-keepclassmembers class android.widget.ImageView { void setAlpha(int); }
-keepclassmembers class java.io.SerializationHandleMap { int findIndex(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.io.SerializationHandleMap { int getModuloHash(java.lang.Object,int); }
-keepclassmembers class android.widget.ImageView { void applyColorMod(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getCount(); }
-keepclassmembers class android.widget.ImageView { boolean isOpaque(); }
-keepclassmembers class java.io.SerializationHandleMap { int put(java.lang.Object,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleExit(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractMatch(java.lang.CharSequence,int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEnabled(int); }
-keepclassmembers class android.widget.ImageView { boolean isFilledByImage(); }
-keepclassmembers class java.io.SerializationHandleMap { void rehash(); }
-keepclassmembers class android.hardware.input.InputManager { void populateInputDevicesLocked(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onHotspotBoundsChanged(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { long getItemId(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractInnerMatch(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.io.SerializationHandleMap { int remove(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getMaskType(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getItemViewType(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void removeRipple(android.graphics.drawable.Ripple); }
-keepclassmembers class android.util.DisplayMetrics { void setToDefaults(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch parseAndVerify(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawContent(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getRippleIndex(android.graphics.drawable.Ripple); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeChoice(org.apache.harmony.security.asn1.ASN1Choice); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeExplicit(org.apache.harmony.security.asn1.ASN1Explicit); }
-keepclassmembers class android.support.v7.widget.bb { void <init>(android.support.v7.widget.Toolbar,boolean,int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawBackgroundAndRipples(android.graphics.Canvas); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.support.v7.a.b { void a(android.view.ViewGroup,android.view.View,int,int); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int next(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class android.support.v7.a.b { boolean a(android.view.View); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void push(int[],java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.bb { void e(java.lang.CharSequence); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[],int,int); }
-keepclassmembers class android.support.v7.widget.bb { void t(); }
-keepclassmembers class android.support.v7.widget.bb { void v(); }
-keepclassmembers class android.support.v7.widget.bb { void u(); }
-keepclassmembers class java.nio.CharBuffer { char charAt(int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSequenceLength(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int runStateOf(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int workerCountOf(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int ctlOf(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getValueOfLength(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class android.support.v7.a.b { void c(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndIncrementWorkerCount(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndDecrementWorkerCount(int); }
-keepclassmembers class java.lang.Byte { java.lang.Byte valueOf(byte); }
-keepclassmembers class java.lang.Byte { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.bb { void a(android.view.View); }
-keepclassmembers class android.support.v7.widget.bb { void c(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.a.b { void d(android.view.ViewGroup); }
-keepclassmembers class android.support.v7.widget.bb { void c(int); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String createDigest(org.apache.http.auth.Credentials); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void close(); }
-keepclassmembers class com.android.internal.util.ImageUtils { boolean isGrayscale(android.graphics.Bitmap); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] append(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class com.android.internal.util.ImageUtils { boolean isGrayscale(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void processWorkerExit(java.util.concurrent.ThreadPoolExecutor$Worker,boolean); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] append(int[],int,int); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] append(boolean[],int,boolean); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] append(long[],int,long); }
-keepclassmembers class com.android.volley.a.b { void a(); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String encode(byte[]); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] insert(int[],int,int,int); }
-keepclassmembers class com.android.volley.a.b { void a(byte[]); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class com.android.volley.a.b { byte[] a(int); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] fastSplit(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void runWorker(java.util.concurrent.ThreadPoolExecutor$Worker); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] insert(long[],int,int,long); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String convertInt(java.lang.AbstractStringBuilder,int); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] split(java.util.regex.Pattern,java.lang.String,java.lang.String,int); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] insert(boolean[],int,int,boolean); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int growSize(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] finishSplit(java.util.List,java.lang.String,int,int); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String nextAT(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String convertLong(java.lang.AbstractStringBuilder,long); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String quotedAV(); }
-keepclassmembers class android.text.method.Touch { void scrollTo(android.widget.TextView,android.text.Layout,int,int); }
-keepclassmembers class java.lang.IntegralToString { int intIntoCharArray(char[],int,int); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String hexAV(); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String escapedAV(); }
-keepclassmembers class android.text.method.Touch { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String byteToHexString(byte,boolean); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToHexString(int,boolean,int); }
-keepclassmembers class android.database.DataSetObservable { void notifyChanged(); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { char getEscaped(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToHexString(long); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { char getUTF8(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToOctalString(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.lang.String toString(); }
-keepclassmembers class android.text.SpannableStringInternal { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.view.View$ScrollabilityCache { void setFadeColor(int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToOctalString(long); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { int getByte(int); }
-keepclassmembers class android.text.DynamicLayout { void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void findColumns(android.database.Cursor,java.lang.String[]); }
-keepclassmembers class android.text.SpannableStringInternal { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class java.util.ComparableTimSort { void sort(java.lang.Object[],int,int); }
-keepclassmembers class java.util.ComparableTimSort { void <init>(java.lang.Object[]); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String findMostSpecific(java.lang.String); }
-keepclassmembers class java.util.ComparableTimSort { void binarySort(java.lang.Object[],int,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { void removeSpan(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanFlags(java.lang.Object); }
-keepclassmembers class java.util.ComparableTimSort { int countRunAndMakeAscending(java.lang.Object[],int,int); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.util.List getAllMostSpecificFirst(java.lang.String); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void remove(); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { java.lang.Object next(); }
-keepclassmembers class java.util.ComparableTimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class java.util.ComparableTimSort { int minRunLength(int); }
-keepclassmembers class android.text.DynamicLayout { void reflow(java.lang.CharSequence,int,int,int); }
-keepclassmembers class java.util.ComparableTimSort { void pushRun(int,int); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class java.util.ComparableTimSort { void mergeCollapse(); }
-keepclassmembers class java.util.ComparableTimSort { void mergeForceCollapse(); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class java.util.ComparableTimSort { void mergeAt(int); }
-keepclassmembers class android.text.DynamicLayout { void createBlocks(); }
-keepclassmembers class android.text.DynamicLayout { void addBlockAtOffset(int); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.util.ComparableTimSort { int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class android.text.DynamicLayout { void updateBlocks(int,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.ComparableTimSort { int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { int hashCode(); }
-keepclassmembers class android.text.DynamicLayout { int getLineCount(); }
-keepclassmembers class android.view.GhostView { void setGhostedVisibility(int); }
-keepclassmembers class android.text.DynamicLayout { int getParagraphDirection(int); }
-keepclassmembers class android.text.DynamicLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.view.GhostView { android.view.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix); }
-keepclassmembers class android.text.DynamicLayout { int getLineStart(int); }
-keepclassmembers class java.util.ComparableTimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class android.widget.FastScroller { void updateAppearance(); }
-keepclassmembers class android.util.PathParser { android.util.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String); }
-keepclassmembers class android.view.GhostView { int moveGhostViewsToTop(android.view.ViewGroup,java.util.ArrayList); }
-keepclassmembers class android.util.PathParser { android.util.PathParser$PathDataNode[] deepCopyNodes(android.util.PathParser$PathDataNode[]); }
-keepclassmembers class android.widget.FastScroller { void setStyle(int); }
-keepclassmembers class java.util.ComparableTimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class android.util.PathParser { boolean canMorph(android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[]); }
-keepclassmembers class android.view.GhostView { int getInsertIndex(android.view.ViewGroup,java.util.ArrayList,java.util.ArrayList,int); }
-keepclassmembers class android.util.PathParser { float[] getFloats(java.lang.String); }
-keepclassmembers class java.util.ComparableTimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class android.util.PathParser { int nextStart(java.lang.String,int); }
-keepclassmembers class android.util.PathParser { void extract(java.lang.String,int,android.util.PathParser$ExtractFloatResult); }
-keepclassmembers class android.widget.FastScroller { void updateLongList(int,int); }
-keepclassmembers class android.widget.FastScroller { void onItemCountChanged(int,int); }
-keepclassmembers class android.view.GhostView { boolean isOnTop(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.util.PathParser$PathDataNode { void nodesToPath(android.util.PathParser$PathDataNode[],android.graphics.Path); }
-keepclassmembers class android.view.GhostView { boolean isOnTop(android.view.View,android.view.View); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { java.util.List doFormatOneHeader(java.util.List); }
-keepclassmembers class android.widget.FastScroller { void updateLayout(); }
-keepclassmembers class android.widget.FastScroller { void applyLayout(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.widget.FastScroller { void measureViewToSide(android.view.View,android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.graphics.RadialGradient { void <init>(float,float,float,int,int,android.graphics.Shader$TileMode); }
-keepclassmembers class android.util.PathParser$PathDataNode { void interpolatePathDataNode(android.util.PathParser$PathDataNode,android.util.PathParser$PathDataNode,float); }
-keepclassmembers class android.graphics.RadialGradient { void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class java.net.URI { java.lang.String validateScheme(java.lang.String,int); }
-keepclassmembers class libcore.io.IoUtils { void setBlocking(java.io.FileDescriptor,boolean); }
-keepclassmembers class java.net.URI { void parseAuthority(boolean); }
-keepclassmembers class java.net.URI { void parseURI(java.lang.String,boolean); }
-keepclassmembers class android.widget.FastScroller { void measureFloating(android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.net.URI { void validateUserInfo(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.widget.FastScroller { void updateContainerRect(); }
-keepclassmembers class android.widget.FastScroller { void layoutTrack(); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String canonicalizePath(java.lang.String,boolean); }
-keepclassmembers class android.util.PathParser$PathDataNode { void addCommand(android.graphics.Path,float[],char,char,float[]); }
-keepclassmembers class java.net.URI { boolean isValidHost(boolean,java.lang.String); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String getSchemePrefix(java.lang.String); }
-keepclassmembers class libcore.net.url.UrlUtils { int findFirstOf(java.lang.String,java.lang.String,int,int); }
-keepclassmembers class java.net.URI { boolean isValidDomainName(java.lang.String); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Enum); }
-keepclassmembers class java.net.URI { int compareTo(java.net.URI); }
-keepclassmembers class android.widget.FastScroller { void onScroll(int,int,int); }
-keepclassmembers class java.lang.Enum { java.lang.Enum valueOf(java.lang.Class,java.lang.String); }
-keepclassmembers class java.lang.Enum { int hashCode(); }
-keepclassmembers class java.net.URI { java.lang.String convertHexToLowerCase(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void scrollTo(float); }
-keepclassmembers class java.net.URI { boolean escapedEquals(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TextView$Marquee { void <init>(android.widget.TextView); }
-keepclassmembers class android.widget.TextView$Marquee { void start(int); }
-keepclassmembers class android.widget.TextView$Marquee { boolean shouldDrawLeftFade(); }
-keepclassmembers class android.widget.TextView$Marquee { boolean shouldDrawGhost(); }
-keepclassmembers class android.widget.FastScroller { boolean transitionPreviewLayout(int); }
-keepclassmembers class android.util.PathParser$PathDataNode { void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean); }
-keepclassmembers class android.widget.FastScroller { void setThumbPos(float); }
-keepclassmembers class android.widget.FastScroller { float getPosFromMotionEvent(float); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { void setStacked(boolean); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void tryGrow(java.lang.Object[],int); }
-keepclassmembers class android.widget.FastScroller { float getPosFromItemCount(int,int,int); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { void onMeasure(int,int); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { java.lang.Object dequeue(); }
-keepclassmembers class android.util.PathParser$PathDataNode { void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void siftUpComparable(int,java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void siftUpUsingComparator(int,java.lang.Object,java.lang.Object[],java.util.Comparator); }
-keepclassmembers class android.widget.FastScroller { void startPendingDrag(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void siftDownComparable(int,java.lang.Object,java.lang.Object[],int); }
-keepclassmembers class java.net.URI { java.net.URI resolve(java.net.URI); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void siftDownUsingComparator(int,java.lang.Object,java.lang.Object[],int,java.util.Comparator); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { boolean offer(java.lang.Object); }
-keepclassmembers class java.util.ArrayDeque { void doubleCapacity(); }
-keepclassmembers class android.widget.FastScroller { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.ArrayDeque { void addLast(java.lang.Object); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object pollFirst(); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { java.util.List formatCookies(java.util.List); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideX(float); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideY(float); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { float[] createLUT(android.animation.TimeInterpolator,long); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator groupAnimatorOfFloat(android.util.Property,float,android.view.View[]); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress parseNumericAddressNoThrow(java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] lookupHostByName(java.lang.String,int); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean isScalingRequired(); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean supportsScreen(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToDisplayMetrics(android.util.DisplayMetrics); }
-keepclassmembers class android.support.v7.a.n { void a(int,int); }
-keepclassmembers class java.net.InetAddress { boolean isIPv4MappedAddress(byte[]); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToConfiguration(int,android.content.res.Configuration); }
-keepclassmembers class java.net.InetAddress { byte[] ipv4MappedToIPv4(byte[]); }
-keepclassmembers class android.content.res.CompatibilityInfo { float computeCompatibleScaling(android.util.DisplayMetrics,android.util.DisplayMetrics); }
-keepclassmembers class android.support.v7.a.n { void f(boolean); }
-keepclassmembers class android.support.v7.view.menu.b { void b(boolean); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.http.ProtocolVersion { int hashCode(); }
-keepclassmembers class org.apache.http.ProtocolVersion { int compareToVersion(org.apache.http.ProtocolVersion); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface,int); }
-keepclassmembers class android.widget.TextView { int getLineHeight(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void updateMinAndMaxOffsets(android.view.MotionEvent); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { void <init>(org.apache.http.HttpEntity); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingTop(); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingBottom(); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthInputStream { void <init>(org.apache.http.io.SessionInputBuffer,long); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingLeft(); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingRight(); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthInputStream { int read(byte[],int,int); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingTop(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingTop(); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingBottom(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingBottom(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void setStateLocked(int); }
-keepclassmembers class android.util.LogWriter { void write(char[],int,int); }
-keepclassmembers class libcore.internal.StringPool { boolean contentEquals(java.lang.String,char[],int,int); }
-keepclassmembers class libcore.internal.StringPool { java.lang.String get(char[],int,int); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void closeExpiredConnections(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void closeIdleConnections(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromStream(java.io.InputStream); }
-keepclassmembers class android.widget.TextView { void setTextScaleX(float); }
-keepclassmembers class android.widget.TextView { void setRawTextSize(float); }
-keepclassmembers class android.app.AppOpsManager { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setLetterSpacing(float); }
-keepclassmembers class android.app.TaskStackBuilder { android.content.Intent[] getIntents(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void a(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean a(android.view.View,int,int); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void increment(int); }
-keepclassmembers class android.support.v4.c.a.j { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int b(int,int,int); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void addBitmapMemory(android.graphics.Bitmap); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { int getIndex(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int getScrollRange(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int a(android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getVerticalScrollFactorCompat(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean c(int,int); }
-keepclassmembers class android.widget.TextView { void setGravity(int); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Float evaluate(float,java.lang.Number,java.lang.Number); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void a(int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean a(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.widget.TextView { void removeMisspelledSpans(android.text.Spannable); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { char charAt(int); }
-keepclassmembers class android.graphics.Canvas { void drawText(char[],int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class android.graphics.Canvas { void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verifyHostName(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void computeScroll(); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollRange(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void d(int); }
-keepclassmembers class android.graphics.Canvas { void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class libcore.io.DeleteOnExit { void run(); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { int readLine(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class libcore.util.Objects { java.lang.String toString(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { boolean isMultilineInputType(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.os.Build$VERSION { void <clinit>(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void onConfigurationChange(int); }
-keepclassmembers class android.widget.TextView { void setInputType(int,boolean); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void onConfigurationChangeInt(android.util.LongSparseArray,int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void setEnabledProtocols(long,java.lang.String[]); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void init(android.view.View); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean isStarted(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onMeasure(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void start(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.String[] checkEnabledProtocols(java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void stop(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void reverse(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canReverse(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void setEnabledCipherSuites(long,java.lang.String[]); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.animation.AnimationSet { android.view.animation.AnimationSet clone(); }
-keepclassmembers class android.view.animation.AnimationSet { void setFlag(int,boolean); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.String[] checkEnabledCipherSuites(java.lang.String[]); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillAfter(boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillBefore(boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void setRepeatMode(int); }
-keepclassmembers class android.view.animation.AnimationSet { void setStartOffset(long); }
-keepclassmembers class android.view.animation.AnimationSet { boolean hasAlpha(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.view.animation.AnimationSet { void setDuration(long); }
-keepclassmembers class android.view.animation.AnimationSet { void addAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.animation.AnimationSet { void setStartTime(long); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayOptions(int,int); }
-keepclassmembers class android.text.util.Linkify$1 { boolean acceptMatch(java.lang.CharSequence,int,int); }
-keepclassmembers class android.view.animation.AnimationSet { long getStartTime(); }
-keepclassmembers class android.view.animation.AnimationSet { long getDuration(); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.Editable,android.text.InputFilter[]); }
-keepclassmembers class android.widget.TextView { int getBoxHeight(android.text.Layout); }
-keepclassmembers class android.view.animation.AnimationSet { void initializeInvalidateRegion(int,int,int,int); }
-keepclassmembers class android.support.v4.widget.z { void a(float); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(float); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.widget.TextView { int getVerticalOffset(boolean); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.widget.TextView { int getBottomVerticalOffset(boolean); }
-keepclassmembers class android.view.animation.AnimationSet { boolean getTransformation(long,android.view.animation.Transformation); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { java.lang.String toString(); }
-keepclassmembers class android.view.animation.AnimationSet { void initialize(int,int,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { void invalidateRegion(int,int,boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void restoreChildrenStartOffset(); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeTransformationMatrix(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void <clinit>(); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeBounds(); }
-keepclassmembers class android.support.v4.widget.z { void b(float); }
-keepclassmembers class android.support.v4.widget.z { void b(); }
-keepclassmembers class android.widget.TextView { boolean onPreDraw(); }
-keepclassmembers class android.widget.TextView { boolean isPaddingOffsetRequired(); }
-keepclassmembers class android.widget.TextView { int getLeftPaddingOffset(); }
-keepclassmembers class android.support.v4.widget.a { void <init>(android.view.View); }
-keepclassmembers class android.widget.TextView { int getTopPaddingOffset(); }
-keepclassmembers class android.widget.TextView { int getBottomPaddingOffset(); }
-keepclassmembers class android.widget.TextView { int getFudgedPaddingRight(); }
-keepclassmembers class org.apache.http.impl.DefaultConnectionReuseStrategy { boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.widget.TextView { int getRightPaddingOffset(); }
-keepclassmembers class android.support.v4.widget.a { float a(int,float,float,float); }
-keepclassmembers class android.support.v4.widget.a { float a(float,float,float,float); }
-keepclassmembers class android.support.v4.widget.z { void g(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void scrollTo(int,int); }
-keepclassmembers class android.support.v4.widget.a { float b(float,float,float); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { java.lang.String parseHost(); }
-keepclassmembers class android.support.v4.widget.z { void setAnimationProgress(float); }
-keepclassmembers class android.support.v4.widget.z { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.support.v4.widget.a { float f(float,float); }
-keepclassmembers class android.support.v4.widget.a { android.support.v4.widget.a a(float,float); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { void <init>(android.text.method.MultiTapKeyListener,android.text.Editable); }
-keepclassmembers class android.support.v4.widget.a { android.support.v4.widget.a b(float,float); }
-keepclassmembers class android.support.v4.widget.a { android.support.v4.widget.a c(float,float); }
-keepclassmembers class org.apache.harmony.security.utils.Array { java.lang.String getBytesAsString(byte[]); }
-keepclassmembers class org.apache.harmony.security.utils.Array { java.lang.String toString(byte[],java.lang.String); }
-keepclassmembers class android.support.v4.widget.z { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int); }
-keepclassmembers class android.widget.TextView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingLeftWithForeground(); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingRightWithForeground(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingTopWithForeground(); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingBottomWithForeground(); }
-keepclassmembers class android.widget.TextView { android.graphics.Path getUpdatedHighlightPath(); }
-keepclassmembers class android.support.v4.widget.z { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[]); }
-keepclassmembers class android.widget.FrameLayout { void onMeasure(int,int); }
-keepclassmembers class android.support.v4.widget.z { void onMeasure(int,int); }
-keepclassmembers class android.support.v4.widget.z { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.widget.FrameLayout { void layoutChildren(int,int,int,int,boolean); }
-keepclassmembers class android.support.v4.widget.z { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.TextView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.widget.z { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class java.lang.reflect.Proxy { void getMethodsRecursive(java.lang.Class[],java.util.List); }
-keepclassmembers class android.support.v4.widget.z { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.widget.z { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.widget.FrameLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$112(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$212(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List deduplicateAndGetExceptions(java.util.List); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$312(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$412(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$120(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class[] intersectExceptions(java.lang.Class[],java.lang.Class[]); }
-keepclassmembers class android.support.v4.app.ai$a { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,int,java.lang.CharSequence,boolean,android.os.Bundle,java.lang.String,boolean,java.lang.String); }
-keepclassmembers class android.support.v4.widget.z { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$220(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.TextView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class android.support.design.widget.p { void c(); }
-keepclassmembers class android.support.design.widget.p { void a(int[]); }
-keepclassmembers class android.widget.TextView { int getFadeTop(boolean); }
-keepclassmembers class android.widget.TextView { int getBaseline(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class android.widget.RelativeLayout { void sortChildren(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class android.text.StaticLayout { void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.TextDirectionHeuristic,float,float,boolean,boolean,float,android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.widget.TextView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class java.util.HashMap$HashMapEntry { int hashCode(); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnEnter(); }
-keepclassmembers class android.widget.RelativeLayout { void onMeasure(int,int); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnTab(); }
-keepclassmembers class android.support.v4.f.j { void d(); }
-keepclassmembers class android.widget.TextView { int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.f.j { void b(int,java.lang.Object); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean getBooleanProperty(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setBooleanProperty(int,boolean); }
-keepclassmembers class android.text.method.WordIterator { void setCharSequence(java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.method.WordIterator { int preceding(int); }
-keepclassmembers class org.apache.commons.codec.binary.Base64 { byte[] encodeBase64(byte[],boolean); }
-keepclassmembers class android.text.method.WordIterator { int following(int); }
-keepclassmembers class android.text.method.WordIterator { int getBeginning(int); }
-keepclassmembers class android.widget.RelativeLayout { void alignBaseline(android.view.View,android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.widget.TextView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.WordIterator { int getEnd(int); }
-keepclassmembers class android.widget.TextView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.text.method.WordIterator { void checkOffsetIsValid(int); }
-keepclassmembers class org.apache.http.protocol.RequestExpectContinue { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.widget.RelativeLayout { void measureChildHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int,int); }
-keepclassmembers class android.widget.RelativeLayout { int getChildMeasureSpec(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void setAlpha(float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { float getAlpha(); }
-keepclassmembers class org.apache.commons.codec.binary.Base64 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.RelativeLayout { boolean positionChildHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int,boolean); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class android.widget.TextView { void assumeLayout(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { boolean recursiveCanApplyTheme(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.widget.TextView { android.text.Layout$Alignment getLayoutAlignment(); }
-keepclassmembers class android.animation.ArgbEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void recursiveApplyTheme(android.graphics.drawable.VectorDrawable$VGroup,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.RelativeLayout { boolean positionChildVertical(android.view.View,android.widget.RelativeLayout$LayoutParams,int,boolean); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { int read(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void drawGroupTree(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.widget.RelativeLayout { void applyHorizontalSizeRules(android.widget.RelativeLayout$LayoutParams,int,int[]); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$FairSync { boolean tryAcquire(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(android.graphics.drawable.VectorDrawable$VGroup,android.util.ArrayMap); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void drawPath(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.drawable.VectorDrawable$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.widget.RelativeLayout { void applyVerticalSizeRules(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { void <init>(byte[],java.lang.String,int,java.security.cert.X509Certificate[],com.android.org.conscrypt.AbstractSessionContext); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getChangingConfigurations(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { long getCreationTime(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float o(float,float); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getAlpha(); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float a(float,float); }
-keepclassmembers class java.util.Properties { void load(java.io.Reader); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void updateLocalMatrix(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getOpacity(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { boolean isValid(); }
-keepclassmembers class android.widget.RelativeLayout { void centerHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.RelativeLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.RelativeLayout { void centerVertical(android.view.View,android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.TextView { boolean compressText(float); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.http.impl.conn.IdleConnectionHandler { boolean remove(org.apache.http.HttpConnection); }
-keepclassmembers class android.widget.TextView { int desired(android.text.Layout); }
-keepclassmembers class java.net.Proxy { int hashCode(); }
-keepclassmembers class android.support.v7.a.k$c { boolean a(int,int); }
-keepclassmembers class android.util.SparseArray { void gc(); }
-keepclassmembers class android.util.SparseArray { void put(int,java.lang.Object); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.FloatKeyframeSet clone(); }
-keepclassmembers class android.util.SparseArray { void clear(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.animation.FloatKeyframeSet { float getFloatValue(float); }
-keepclassmembers class android.text.StaticLayout { int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean); }
-keepclassmembers class android.widget.TextView { void onMeasure(int,int); }
-keepclassmembers class android.util.SparseArray { void append(int,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.util.SparseArray { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int[] extractStateSet(android.util.AttributeSet); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(android.text.Layout,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addTransition(int,int,android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class libcore.io.NioBufferIterator { void readByteArray(byte[],int,int); }
-keepclassmembers class libcore.io.NioBufferIterator { void skip(int); }
-keepclassmembers class libcore.io.NioBufferIterator { int readInt(); }
-keepclassmembers class libcore.io.NioBufferIterator { byte readByte(); }
-keepclassmembers class android.app.Notification$BigTextStyle { int calculateMaxLines(); }
-keepclassmembers class libcore.io.NioBufferIterator { void readIntArray(int[],int,int); }
-keepclassmembers class android.widget.TextView { void checkForRelayout(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean isTransitionReversed(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean transitionHasReversibleFlag(int,int); }
-keepclassmembers class android.widget.TextView { boolean bringTextIntoView(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { long generateTransitionKey(int,int); }
-keepclassmembers class android.text.StaticLayout { void calculateEllipsis(int,int,float[],int,float,android.text.TextUtils$TruncateAt,int,float,android.text.TextPaint,boolean); }
-keepclassmembers class android.widget.TextView { boolean bringPointIntoView(int); }
-keepclassmembers class org.apache.http.message.BasicLineParser { org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void checkCacheVersion(); }
-keepclassmembers class android.widget.TextView { boolean moveCursorToVisibleOffset(); }
-keepclassmembers class android.widget.TextView { void getInterestingRect(android.graphics.Rect,int); }
-keepclassmembers class android.widget.TextView { int viewportToContentHorizontalOffset(); }
-keepclassmembers class android.widget.TextView { void convertFromViewportToContentCoordinates(android.graphics.Rect); }
-keepclassmembers class android.widget.TextView { int viewportToContentVerticalOffset(); }
-keepclassmembers class android.text.StaticLayout { int getLineForVertical(int); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void selectEntries(java.security.Provider); }
-keepclassmembers class android.text.StaticLayout { int getLineTop(int); }
-keepclassmembers class org.apache.http.message.BasicLineParser { boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class android.view.animation.Animation { void setDuration(long); }
-keepclassmembers class android.text.StaticLayout { int getLineDescent(int); }
-keepclassmembers class android.support.v4.app.ag { android.app.Notification a(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap); }
-keepclassmembers class android.text.StaticLayout { int getLineStart(int); }
-keepclassmembers class android.widget.TextView { void setInputTypeSingleLine(boolean); }
-keepclassmembers class android.text.StaticLayout { int getParagraphDirection(int); }
-keepclassmembers class android.text.StaticLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisCount(int); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisStart(int); }
-keepclassmembers class com.android.volley.h { int a(com.android.volley.h); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void <clinit>(); }
-keepclassmembers class java.math.BitLevel { int bitLength(java.math.BigInteger); }
-keepclassmembers class android.widget.TextView { boolean canMarquee(); }
-keepclassmembers class android.widget.TextView { void startMarquee(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class java.math.BitLevel { boolean nonZeroDroppedBits(int,int[]); }
-keepclassmembers class java.math.BitLevel { void shiftLeftOneBit(int[],int[],int); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftLeftOneBit(java.math.BigInteger); }
-keepclassmembers class android.widget.TextView { void sendBeforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAlpha(int); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftRight(java.math.BigInteger,int); }
-keepclassmembers class android.view.animation.Animation { boolean getTransformation(long,android.view.animation.Transformation); }
-keepclassmembers class android.widget.TextView { void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class); }
-keepclassmembers class android.widget.TextView { void removeAdjacentSuggestionSpans(int); }
-keepclassmembers class android.widget.TextView { void sendOnTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.widget.TextView { void sendAfterTextChanged(android.text.Editable); }
-keepclassmembers class android.widget.TextView { void updateAfterEdit(); }
-keepclassmembers class org.apache.http.auth.AuthScope { int match(org.apache.http.auth.AuthScope); }
-keepclassmembers class java.math.BitLevel { boolean shiftRight(int[],int,int[],int,int); }
-keepclassmembers class com.android.volley.h { java.lang.String toString(); }
-keepclassmembers class android.view.animation.Transformation { void compose(android.view.animation.Transformation); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void jumpToCurrentState(); }
-keepclassmembers class android.view.animation.Animation { float resolveSize(int,float,int,int); }
-keepclassmembers class org.apache.http.message.BasicLineParser { void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { boolean willOverlap(); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { long getDelayForView(android.view.View); }
-keepclassmembers class android.widget.TextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean selectDrawable(int); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int updateFrames(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { float getInterpolation(float); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters); }
-keepclassmembers class android.widget.TextView { float getLeftFadingEdgeStrength(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void animate(boolean); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String validate(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.widget.TextView { float getRightFadingEdgeStrength(); }
-keepclassmembers class libcore.net.UriCodec { void validateSimple(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TextView { int computeHorizontalScrollRange(); }
-keepclassmembers class java.lang.RealToString { java.lang.String convertDouble(java.lang.AbstractStringBuilder,double); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollExtent(); }
-keepclassmembers class libcore.net.UriCodec { void appendEncoded(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset,boolean); }
-keepclassmembers class android.widget.TextView { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String encode(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,android.view.KeyEvent); }
-keepclassmembers class java.lang.RealToString { java.lang.String convertFloat(java.lang.AbstractStringBuilder,float); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String decode(java.lang.String,boolean,java.nio.charset.Charset,boolean); }
-keepclassmembers class java.lang.RealToString { void freeFormatExponential(java.lang.AbstractStringBuilder,boolean); }
-keepclassmembers class java.lang.RealToString { void freeFormat(java.lang.AbstractStringBuilder,boolean); }
-keepclassmembers class libcore.net.UriCodec { int hexToInt(char); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class libcore.net.UriCodec { void appendHex(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(long,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { int a(android.view.View,int,int,int,int); }
-keepclassmembers class java.lang.RealToString { void longDigitGenerator(long,int,boolean,boolean,int); }
-keepclassmembers class android.widget.TextView { boolean isSuggestionsEnabled(); }
-keepclassmembers class java.lang.RealToString { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ax { android.content.Context a(android.content.Context); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint); }
-keepclassmembers class android.widget.TextView { void paste(int,int); }
-keepclassmembers class android.widget.TextView { float convertToLocalHorizontalCoordinate(float); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void a(int,int); }
-keepclassmembers class android.widget.TextView { int getLineAtCoordinate(float); }
-keepclassmembers class android.util.SparseBooleanArray { void put(int,boolean); }
-keepclassmembers class android.system.StructTimeval { android.system.StructTimeval fromMillis(long); }
-keepclassmembers class org.apache.http.message.HeaderGroup { void updateHeader(org.apache.http.Header); }
-keepclassmembers class android.util.SparseBooleanArray { void append(int,boolean); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspaceOrForwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent,boolean); }
-keepclassmembers class android.util.SparseBooleanArray { java.lang.String toString(); }
-keepclassmembers class org.apache.http.message.HeaderGroup { void setHeaders(org.apache.http.Header[]); }
-keepclassmembers class org.apache.http.message.HeaderGroup { org.apache.http.Header getFirstHeader(java.lang.String); }
-keepclassmembers class org.apache.http.message.HeaderGroup { org.apache.http.Header[] getHeaders(java.lang.String); }
-keepclassmembers class android.text.method.BaseKeyListener { int makeTextContentType(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class org.apache.http.message.HeaderGroup { boolean containsHeader(java.lang.String); }
-keepclassmembers class libcore.io.Memory { int peekInt(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class android.text.Layout { void drawText(android.graphics.Canvas,int,int); }
-keepclassmembers class libcore.io.Memory { long peekLong(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class android.graphics.Rect { int hashCode(); }
-keepclassmembers class libcore.io.Memory { short peekShort(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class android.support.design.widget.AppBarLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class libcore.io.Memory { void pokeLong(byte[],int,long,java.nio.ByteOrder); }
-keepclassmembers class android.content.Intent { android.content.Intent addFlags(int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean a(int); }
-keepclassmembers class libcore.io.Memory { void pokeInt(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class android.graphics.Rect { int width(); }
-keepclassmembers class android.graphics.Rect { int height(); }
-keepclassmembers class android.graphics.Rect { int centerY(); }
-keepclassmembers class android.graphics.Rect { int centerX(); }
-keepclassmembers class libcore.io.Memory { void pokeShort(byte[],int,short,java.nio.ByteOrder); }
-keepclassmembers class android.graphics.Rect { float exactCenterX(); }
-keepclassmembers class android.graphics.FontFamily { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Rect { void offset(int,int); }
-keepclassmembers class android.graphics.Rect { float exactCenterY(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.graphics.Rect { void offsetTo(int,int); }
-keepclassmembers class java.util.Collections { int binarySearch(java.util.List,java.lang.Object); }
-keepclassmembers class android.text.Layout { void drawBackground(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.util.Collections { int binarySearch(java.util.List,java.lang.Object,java.util.Comparator); }
-keepclassmembers class android.support.v4.g.e$b { int a(int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.text.Layout { int getLineStartPos(int,int,int); }
-keepclassmembers class libcore.io.IoBridge { void connectErrno(java.io.FileDescriptor,java.net.InetAddress,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflateLayers(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.Layout { boolean isLevelBoundary(int); }
-keepclassmembers class android.content.Intent { void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable,android.content.res.TypedArray); }
-keepclassmembers class android.text.Layout { boolean isRtlCharAt(int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onMeasure(int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.text.Layout { boolean primaryIsTrailingPrevious(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isProjected(); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,int,boolean); }
-keepclassmembers class java.util.Collections { void sort(java.util.List); }
-keepclassmembers class android.text.Layout { float getLineLeft(int); }
-keepclassmembers class java.util.Collections { void sort(java.util.List,java.util.Comparator); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class android.text.Layout { float getLineRight(int); }
-keepclassmembers class android.text.Layout { float getLineMax(int); }
-keepclassmembers class android.text.Layout { float getLineWidth(int); }
-keepclassmembers class libcore.io.IoBridge { java.io.FileDescriptor open(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable findDrawableByLayerId(int); }
-keepclassmembers class android.content.Intent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.Layout { int getLineForVertical(int); }
-keepclassmembers class android.text.Layout { int getLineForOffset(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int a(int); }
-keepclassmembers class android.text.Layout { int getOffsetForHorizontal(int,float); }
-keepclassmembers class android.util.LongSparseArray { void gc(); }
-keepclassmembers class android.util.LongSparseArray { void put(long,java.lang.Object); }
-keepclassmembers class android.content.Intent { void readFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.Toolbar { int a(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int a(android.view.View,int,int,int,int,int[]); }
-keepclassmembers class libcore.io.IoBridge { void write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int); }
-keepclassmembers class android.text.Layout { int getLineEnd(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int,int,int); }
-keepclassmembers class android.text.Layout { int getLineBottom(int); }
-keepclassmembers class android.util.LongSparseArray { void clear(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int a(android.view.View,int,int[],int); }
-keepclassmembers class android.text.Layout { int getLineBaseline(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int a(java.util.List,int[]); }
-keepclassmembers class android.util.LongSparseArray { java.lang.String toString(); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar { void a(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeNestedPadding(android.graphics.Rect); }
-keepclassmembers class android.text.Layout { int getOffsetAtStartOf(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void a(java.util.List,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class libcore.reflect.InternalNames { java.lang.Class getClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class android.text.Layout { void getCursorPath(int,android.graphics.Path,java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeStackedPadding(android.graphics.Rect); }
-keepclassmembers class android.widget.CursorAdapter { void init(android.content.Context,android.database.Cursor,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspot(float,float); }
-keepclassmembers class android.text.method.NumberKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int b(android.view.View); }
-keepclassmembers class android.support.v7.widget.Toolbar { int b(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int b(android.view.View,int,int[],int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean ok(char[],char); }
-keepclassmembers class android.support.v7.widget.Toolbar { int c(android.view.View); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class java.util.Collections { boolean addAll(java.util.Collection,java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setDither(boolean); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.Layout { void addSelection(int,int,int,int,int,android.graphics.Path); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAlpha(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void o(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void n(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.util.Collections { int secondaryHash(int); }
-keepclassmembers class android.text.Layout { void getSelectionPath(int,int,android.graphics.Path); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean r(); }
-keepclassmembers class java.util.Collections { int roundUpToPowerOfTwo(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.content.Intent { boolean migrateExtraStreamToClipData(); }
-keepclassmembers class android.text.Layout { android.text.Layout$Alignment getParagraphAlignment(int); }
-keepclassmembers class android.text.Layout { int getParagraphRight(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.text.Layout { int getParagraphLeadingMargin(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.text.Layout { float measurePara(android.text.TextPaint,java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.util.TreeMap$Node { int hashCode(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.text.Layout { void ellipsize(int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void clearMutated(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamilies(android.graphics.FontFamily[]); }
-keepclassmembers class android.content.res.ColorStateList$1 { android.content.res.ColorStateList createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.Typeface { void <init>(long); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamiliesWithDefault(android.graphics.FontFamily[]); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onMeasure(int,int); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.IntKeyframeSet clone(); }
-keepclassmembers class java.util.AbstractCollection { java.lang.String toString(); }
-keepclassmembers class android.graphics.Typeface { void init(); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { android.view.MotionEvent$PointerProperties[] createArray(int); }
-keepclassmembers class android.graphics.Typeface { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.Typeface { int hashCode(); }
-keepclassmembers class android.animation.IntKeyframeSet { int getIntValue(float); }
-keepclassmembers class android.view.WindowManager$LayoutParams { int copyFrom(android.view.WindowManager$LayoutParams); }
-keepclassmembers class java.lang.Short { short reverseBytes(short); }
-keepclassmembers class libcore.reflect.Types { java.lang.String toString(java.lang.Class[]); }
-keepclassmembers class java.lang.Short { java.lang.Short valueOf(short); }
-keepclassmembers class libcore.reflect.Types { void appendTypeName(java.lang.StringBuilder,java.lang.Class); }
-keepclassmembers class java.lang.Short { void <clinit>(); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class android.text.TextUtils { void getChars(java.lang.CharSequence,int,int,char[],int); }
-keepclassmembers class android.view.animation.AlphaAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.text.TextUtils { boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.text.TextUtils { java.lang.String substring(java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.TextUtils { void writeToParcel(java.lang.CharSequence,android.os.Parcel,int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.support.v7.widget.m$b { int b(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class android.widget.EdgeEffect { void <init>(android.content.Context); }
-keepclassmembers class android.widget.EdgeEffect { void setSize(int,int); }
-keepclassmembers class android.support.a.a.f { void a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.widget.EdgeEffect { void onPull(float,float); }
-keepclassmembers class android.widget.AbsoluteLayout { void onMeasure(int,int); }
-keepclassmembers class android.widget.EdgeEffect { void onAbsorb(int); }
-keepclassmembers class android.widget.AbsoluteLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.support.a.a.f { int b(int,float); }
-keepclassmembers class android.text.TextUtils { int getOffsetBefore(java.lang.CharSequence,int); }
-keepclassmembers class java.io.ByteArrayInputStream { void <init>(byte[],int,int); }
-keepclassmembers class android.widget.EdgeEffect { boolean draw(android.graphics.Canvas); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.text.TextUtils { int getOffsetAfter(java.lang.CharSequence,int); }
-keepclassmembers class java.io.ByteArrayInputStream { int available(); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getMovementMetaState(android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class android.widget.EdgeEffect { int getMaxHeight(); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(byte[],int,int); }
-keepclassmembers class android.widget.EdgeEffect { void update(); }
-keepclassmembers class android.support.a.a.f { void b(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.io.ByteArrayInputStream { long skip(long); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void appendLocked(java.lang.String,int,int); }
-keepclassmembers class android.text.TextUtils { void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerWidth(android.widget.TextView); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getBottomLine(android.widget.TextView); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerHeight(android.widget.TextView); }
-keepclassmembers class android.support.a.a.f { void draw(android.graphics.Canvas); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback,android.text.TextDirectionHeuristic,java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsLeft(android.widget.TextView); }
-keepclassmembers class com.android.volley.a.c$b { int read(); }
-keepclassmembers class com.android.volley.a.c$b { int read(byte[],int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsRight(android.widget.TextView); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLeft(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushLocked(); }
-keepclassmembers class android.support.a.a.f { int getChangingConfigurations(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollRight(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollUp(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollDown(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollBottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.nio.ByteArrayBuffer { void <init>(int,byte[],int,boolean); }
-keepclassmembers class android.util.LongSparseLongArray { void put(long,long); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer compact(); }
-keepclassmembers class android.util.LongSparseLongArray { void append(long,long); }
-keepclassmembers class java.util.HashSet { void <init>(java.util.Collection); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterList { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterList { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.TextUtils { boolean doesNotNeedBidi(char[],int,int); }
-keepclassmembers class android.text.TextUtils { float setPara(android.text.MeasuredText,android.text.TextPaint,java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic); }
-keepclassmembers class android.text.TextUtils { int getCapsMode(java.lang.CharSequence,int,int); }
-keepclassmembers class android.util.ArrayMap$1 { java.lang.Object colGetEntry(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.StringBuilder normalizeDigits(java.lang.String,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeHelper(java.lang.String,java.util.Map,boolean); }
-keepclassmembers class android.text.TextUtils { long packRangeInLong(int,int); }
-keepclassmembers class android.text.TextUtils { boolean delimitedStringContains(java.lang.String,char,java.lang.String); }
-keepclassmembers class android.text.TextUtils { int unpackRangeStartFromLong(long); }
-keepclassmembers class android.text.TextUtils { int unpackRangeEndFromLong(long); }
-keepclassmembers class org.apache.http.impl.entity.EntityDeserializer { org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage); }
-keepclassmembers class android.text.TextUtils { java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class); }
-keepclassmembers class java.lang.Object { int hashCode(); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(boolean,boolean); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(boolean,boolean); }
-keepclassmembers class android.text.method.DigitsKeyListener { int getInputType(); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(byte[],java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class android.text.method.DigitsKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class java.util.zip.ZipEntry { boolean containsNulByte(byte[]); }
-keepclassmembers class android.support.v7.widget.a { int a(int,int,boolean); }
-keepclassmembers class android.support.v7.widget.ak { int b(); }
-keepclassmembers class android.support.v7.widget.a { int a(android.view.View,int,int,int); }
-keepclassmembers class android.support.v7.widget.a { int a(android.view.View,int,int,int,boolean); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByTenPow(java.math.BigInteger,long); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger powerOf10(long); }
-keepclassmembers class java.math.Multiplication { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ak { void f(int); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <init>(java.lang.Object); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence get(int); }
-keepclassmembers class android.support.v7.a.k$1 { void run(); }
-keepclassmembers class android.util.Pools$SimplePool { java.lang.Object acquire(); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence applyStyles(java.lang.String,int[],android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.util.Pools$SimplePool { boolean isInPool(java.lang.Object); }
-keepclassmembers class android.util.Pools$SimplePool { boolean release(java.lang.Object); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { int read(byte[],int,int); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingLeft(); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { int available(); }
-keepclassmembers class android.widget.CompoundButton { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingRight(); }
-keepclassmembers class android.widget.CompoundButton { int[] onCreateDrawableState(int); }
-keepclassmembers class android.support.a.a.c$b { void a(android.graphics.Path,double,double,double,double,double,double,double,double,double); }
-keepclassmembers class com.shapps.mintubeapp.YTubeView { void onCreate(android.os.Bundle); }
-keepclassmembers class android.content.res.StringBlock { void addParagraphSpan(android.text.Spannable,java.lang.Object,int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.a.p { void a(android.location.Location); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String subtag(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.a.a.c$b { void a(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean); }
-keepclassmembers class android.support.v7.a.p { boolean a(android.support.v7.a.p$a); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class java.util.Stack { java.lang.Object peek(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.support.v7.a.p { android.location.Location b(); }
-keepclassmembers class android.util.SparseIntArray { void put(int,int); }
-keepclassmembers class java.util.Stack { java.lang.Object pop(); }
-keepclassmembers class android.util.SparseIntArray { void append(int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.a.a.c$b { void a(android.graphics.Path,float[],char,char,float[]); }
-keepclassmembers class android.view.ViewGroup { void initViewGroup(); }
-keepclassmembers class com.android.internal.util.FastMath { int round(float); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int extractCountryCode(java.lang.StringBuilder,java.lang.StringBuilder); }
-keepclassmembers class android.view.ViewGroup { int getDescendantFocusability(); }
-keepclassmembers class android.view.ViewGroup { void initFromAttributes(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.view.ViewGroup { void setDescendantFocusability(int); }
-keepclassmembers class android.support.a.a.c$b { void a(android.support.a.a.c$b[],android.graphics.Path); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStrokeInternal(int,int,float,float); }
-keepclassmembers class java.io.RandomAccessFile { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class dalvik.system.DalvikLogging { java.lang.String loggerNameToTag(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void childHasTransientStateChanged(android.view.View,boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int modulateAlpha(int); }
-keepclassmembers class java.nio.FileChannelImpl$1 { int compare(java.nio.channels.FileLock,java.nio.channels.FileLock); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocus(); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocusable(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onWriteToDisk(); }
-keepclassmembers class android.app.Notification$InboxStyle { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String maybeStripExtension(java.lang.StringBuilder); }
-keepclassmembers class java.io.RandomAccessFile { void readFully(byte[],int,int); }
-keepclassmembers class android.view.ViewGroup { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onReadFromDisk(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onNetwork(); }
-keepclassmembers class android.view.ViewGroup { void setTouchscreenBlocksFocus(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean getTouchscreenBlocksFocus(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolationWithTimingAttempt(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class java.io.RandomAccessFile { void seek(long); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setItalianLeadingZerosForPhoneNumber(java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolation(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.view.ViewGroup { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void buildNationalNumberForParsing(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { org.apache.http.HttpResponse receiveResponseHeader(); }
-keepclassmembers class android.view.ViewGroup { boolean notifyChildOfDrag(android.view.View); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void sendRequestHeader(org.apache.http.HttpRequest); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean ensureValidRect(); }
-keepclassmembers class android.support.v4.app.p { boolean a(android.view.animation.Animation); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.regex.Pattern { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class java.util.regex.Pattern { void compile(); }
-keepclassmembers class android.graphics.Paint { void <init>(int); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String quote(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawablePadding(android.content.res.TypedArray); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateDrawableCorners(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.Paint { void setCompatibilityScaling(float); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View); }
-keepclassmembers class android.graphics.Paint { boolean isAntiAlias(); }
-keepclassmembers class android.graphics.Paint { boolean isDither(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableStroke(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSolid(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.Paint { boolean isFilterBitmap(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableGradient(android.content.res.Resources,android.content.res.TypedArray); }
-keepclassmembers class android.support.v4.app.p { void a(int,int,int,boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSize(android.content.res.TypedArray); }
-keepclassmembers class android.support.v4.app.p { void a(int,android.support.v4.app.g); }
-keepclassmembers class android.graphics.Paint { float measureText(char[],int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaque(int); }
-keepclassmembers class android.graphics.Paint { float measureText(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void resetTouchState(); }
-keepclassmembers class android.view.ViewGroup { boolean resetCancelNextUpFlag(android.view.View); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.support.v4.app.p { void a(android.os.Parcelable,java.util.List); }
-keepclassmembers class android.view.ViewGroup { void removePointersFromTouchTargets(int); }
-keepclassmembers class android.view.ViewGroup { boolean canViewReceivePointerEvents(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void transformPointToViewLocal(float[],android.view.View); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedTouchEvent(android.view.MotionEvent,boolean,android.view.View,int); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { java.util.List formatCookies(java.util.List); }
-keepclassmembers class android.view.ViewGroup { void setMotionEventSplittingEnabled(boolean); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.view.ViewGroup { boolean isTransitionGroup(); }
-keepclassmembers class android.view.ViewGroup { void setTransitionGroup(boolean); }
-keepclassmembers class android.view.ViewGroup { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(java.lang.String,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { void dispatchStartTemporaryDetach(); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(char[],int,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class android.view.ViewGroup { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.String,int,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setViewTypeCount(int); }
-keepclassmembers class android.view.ViewGroup { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void markChildrenDirty(); }
-keepclassmembers class android.view.ViewGroup { void dispatchDetachedFromWindow(); }
-keepclassmembers class android.view.ViewGroup { void internalSetPadding(int,int,int,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clear(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void fillActiveViews(int,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getActiveView(int); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawingCacheEnabled(boolean); }
-keepclassmembers class android.view.ViewGroup { void onAnimationStart(); }
-keepclassmembers class android.view.ViewGroup { void onAnimationEnd(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearTransientStateViews(); }
-keepclassmembers class android.view.ViewGroup { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeSkippedScrap(); }
-keepclassmembers class android.support.design.internal.a { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void scrapActiveViews(); }
-keepclassmembers class android.view.ViewGroup { void drawCorner(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { int dipsToPixels(int); }
-keepclassmembers class android.support.design.internal.a { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void pruneScrapViews(); }
-keepclassmembers class android.view.ViewGroup { void fillDifference(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class android.text.AndroidBidi { int bidi(int,char[],byte[],int,boolean); }
-keepclassmembers class android.view.ViewGroup { void onDebugDrawMargins(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.view.ViewGroup { void onDebugDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setCacheColorHint(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View retrieveFromScrap(java.util.ArrayList,int); }
-keepclassmembers class android.os.UserHandle { int getUserId(int); }
-keepclassmembers class android.text.AndroidBidi { android.text.Layout$Directions directions(int,byte[],int,char[],int,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearScrap(java.util.ArrayList); }
-keepclassmembers class android.view.ViewGroup { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.app.p { void a(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.v7.view.menu.f { int a(java.util.ArrayList,int); }
-keepclassmembers class android.view.ViewGroup { boolean hasChildWithZ(); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList buildOrderedChildList(); }
-keepclassmembers class android.support.v7.view.menu.f { int d(int); }
-keepclassmembers class android.view.ViewGroup { void dispatchGetDisplayList(); }
-keepclassmembers class android.view.ViewGroup { void recreateChildDisplayList(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean getClipChildren(); }
-keepclassmembers class android.view.ViewGroup { void setClipChildren(boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetSelected(boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetActivated(boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetPressed(boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.view.ViewGroup { void dispatchCancelPendingInputEvents(); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewTraversal(int); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void startIfReady(android.animation.Animator); }
-keepclassmembers class android.support.v7.view.menu.f { void a(android.os.Bundle); }
-keepclassmembers class android.widget.Editor$HandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.app.p { boolean a(android.os.Handler,java.lang.String,int,int); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.widget.Editor$HandleView { void addPositionToTouchUpFilter(int); }
-keepclassmembers class android.support.v7.view.menu.f { void a(android.view.MenuItem); }
-keepclassmembers class android.widget.Editor$HandleView { void filterOnTouchUp(); }
-keepclassmembers class android.view.ViewGroup { boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class android.view.ViewGroup { void cleanupLayoutState(android.view.View); }
-keepclassmembers class android.support.v7.view.menu.f { boolean a(android.view.MenuItem,android.support.v7.view.menu.l,int); }
-keepclassmembers class android.widget.Editor$HandleView { void positionAtCursorOffset(int,boolean); }
-keepclassmembers class android.view.ViewGroup { void addViewInner(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class android.widget.Editor$HandleView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewGroup { void addInArray(android.view.View,int); }
-keepclassmembers class android.support.v4.app.p { android.support.v4.app.Fragment b(java.lang.String); }
-keepclassmembers class android.widget.Editor$HandleView { int getHorizontalOffset(); }
-keepclassmembers class android.widget.Editor$HandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int,int); }
-keepclassmembers class android.support.v7.view.menu.f { void b(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.p { void c(); }
-keepclassmembers class android.view.ViewGroup { void removeAllViewsInLayout(); }
-keepclassmembers class android.support.v7.view.menu.f { android.view.MenuItem findItem(int); }
-keepclassmembers class android.view.ViewGroup { void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.view.menu.f { java.util.ArrayList i(); }
-keepclassmembers class android.view.ViewGroup { void detachAllViewsFromParent(); }
-keepclassmembers class android.support.v4.app.p { boolean d(); }
-keepclassmembers class android.support.v7.view.menu.f { void j(); }
-keepclassmembers class android.support.v4.app.p { void e(); }
-keepclassmembers class android.view.ViewGroup { void invalidateChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void nextFrame(boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setFrame(int,boolean,boolean); }
-keepclassmembers class java.util.zip.Inflater { void end(); }
-keepclassmembers class org.apache.http.impl.entity.EntitySerializer { java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.ViewGroup { void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class java.io.ObjectInputStream { int nextHandle(); }
-keepclassmembers class java.util.zip.Inflater { void checkOpen(); }
-keepclassmembers class java.io.ObjectInputStream { byte[] readBlockData(); }
-keepclassmembers class android.view.ViewGroup { void offsetChildrenTopAndBottom(int); }
-keepclassmembers class java.util.zip.ZipFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class java.io.ObjectInputStream { java.io.StreamCorruptedException corruptStream(byte); }
-keepclassmembers class java.util.zip.ZipFile { void readCentralDir(); }
-keepclassmembers class android.view.ViewGroup { boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class android.support.v7.widget.ag { boolean b(android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.ObjectInputStream { void readFieldDescriptors(java.io.ObjectStreamClass); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String formatClassSig(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void setLayoutAnimation(android.view.animation.LayoutAnimationController); }
-keepclassmembers class android.view.ViewGroup { boolean isChildrenDrawingOrderEnabled(); }
-keepclassmembers class android.view.ViewGroup { boolean hasBooleanFlag(int); }
-keepclassmembers class android.view.ViewGroup { void setBooleanFlag(int,boolean); }
-keepclassmembers class android.view.ViewGroup { void setPersistentDrawingCache(int); }
-keepclassmembers class android.view.ViewGroup { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class android.support.v4.f.f { java.lang.Object a(java.lang.Object); }
-keepclassmembers class android.support.v4.f.f { java.lang.Object a(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectInputStream { void readFieldValues(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.view.ViewGroup { int indexOfChild(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void measureChildren(int,int); }
-keepclassmembers class android.view.ViewGroup { void measureChild(android.view.View,int,int); }
-keepclassmembers class android.support.v4.f.f { void a(int); }
-keepclassmembers class android.view.ViewGroup { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class android.app.Notification { void cloneInto(android.app.Notification,boolean); }
-keepclassmembers class java.io.ObjectInputStream { void readHierarchy(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.view.ViewGroup { int getChildMeasureSpec(int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { int findStreamSuperclass(java.lang.Class,java.util.List,int); }
-keepclassmembers class android.view.ViewGroup { void clearDisappearingChildren(); }
-keepclassmembers class android.view.ViewGroup { void finishAnimatingView(android.view.View,android.view.animation.Animation); }
-keepclassmembers class java.io.ObjectInputStream { void readObjectForClass(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.view.ViewGroup { void requestTransparentRegion(android.view.View); }
-keepclassmembers class android.view.ViewGroup { android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewArray(boolean); }
-keepclassmembers class java.math.BigDecimal { void <init>(char[],int,int); }
-keepclassmembers class android.view.ViewGroup { void drawableStateChanged(); }
-keepclassmembers class android.view.ViewGroup { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.app.Notification { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { int[] onCreateDrawableState(int); }
-keepclassmembers class android.view.ViewGroup { void setAddStatesFromChildren(boolean); }
-keepclassmembers class android.view.ViewGroup { void childDrawableStateChanged(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class android.view.ViewGroup { boolean resolveLayoutDirection(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readEnumDescInternal(); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextDirection(); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextAlignment(); }
-keepclassmembers class java.math.BigDecimal { void <init>(double); }
-keepclassmembers class android.view.ViewGroup { void resolvePadding(); }
-keepclassmembers class android.view.ViewGroup { void resolveDrawables(); }
-keepclassmembers class android.view.ViewGroup { void resolveLayoutParams(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedLayoutDirection(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextDirection(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextAlignment(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readNewClassDesc(boolean); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedPadding(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedDrawables(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class readNewProxyClassDesc(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long,int); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveProxyClass(java.lang.String[]); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewObject(boolean); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object registeredObjectRead(int); }
-keepclassmembers class java.io.ObjectInputStream { void registerObjectRead(java.lang.Object,int,boolean); }
-keepclassmembers class android.view.MenuInflater$MenuState { void readItem(android.util.AttributeSet); }
-keepclassmembers class android.os.BaseBundle { void writeToParcelInner(android.os.Parcel,int); }
-keepclassmembers class java.io.ObjectInputStream { void verifyAndInit(java.io.ObjectStreamClass); }
-keepclassmembers class android.os.BaseBundle { void readFromParcelInner(android.os.Parcel,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String getBaseName(java.lang.String); }
-keepclassmembers class android.widget.ExpandableListView { long getPackedPositionForGroup(int); }
-keepclassmembers class android.text.util.Linkify { boolean addLinks(android.text.Spannable,int); }
-keepclassmembers class java.util.Random { void <init>(); }
-keepclassmembers class java.util.Random { int next(int); }
-keepclassmembers class java.util.Random { float nextFloat(); }
-keepclassmembers class java.util.Random { void setSeed(long); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthOutputStream { void <init>(org.apache.http.io.SessionOutputBuffer,long); }
-keepclassmembers class android.text.util.Linkify { java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class java.io.ObjectStreamField { void resolve(java.lang.ClassLoader); }
-keepclassmembers class java.util.HashMap$HashIterator { void <init>(java.util.HashMap); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.util.HashMap$HashIterator { java.util.HashMap$HashMapEntry nextEntry(); }
-keepclassmembers class android.text.util.Linkify { void gatherMapLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class android.text.util.Linkify { void pruneOverlaps(java.util.ArrayList); }
-keepclassmembers class java.math.BigDecimal { boolean isZero(); }
-keepclassmembers class java.math.BigDecimal { int precision(); }
-keepclassmembers class java.math.BigDecimal { int decimalDigitsInLong(long); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal movePoint(long); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal movePointRight(int); }
-keepclassmembers class android.support.v4.c.a { int b(int,int); }
-keepclassmembers class android.support.v4.c.a { int a(int,int,int,int,int); }
-keepclassmembers class android.support.v4.c.a { int c(int,int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInRelativeDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class java.math.BigDecimal { double doubleValue(); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class java.math.BigDecimal { void inplaceRound(java.math.MathContext); }
-keepclassmembers class android.view.FocusFinder { void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class android.view.FocusFinder { android.view.View getNextFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class java.math.BigDecimal { int longCompareTo(long,long); }
-keepclassmembers class android.view.FocusFinder { android.view.View getPreviousFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class java.math.BigDecimal { void smallRound(java.math.MathContext,int); }
-keepclassmembers class java.math.BigDecimal { int roundingBehavior(int,int,java.math.RoundingMode); }
-keepclassmembers class java.math.BigDecimal { int approxPrecision(); }
-keepclassmembers class android.view.FocusFinder { int getWeightedDistanceFor(int,int); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal zeroScaledBy(long); }
-keepclassmembers class java.math.BigDecimal { int safeLongToInt(long); }
-keepclassmembers class java.math.BigDecimal { int bitLength(long); }
-keepclassmembers class java.math.BigDecimal { int bitLength(int); }
-keepclassmembers class java.math.BigDecimal { void <clinit>(); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class com.android.internal.app.AlertController { boolean canTextInput(android.view.View); }
-keepclassmembers class android.view.FocusFinder { int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class com.android.internal.app.AlertController { boolean setupButtons(); }
-keepclassmembers class com.android.internal.app.AlertController { void setBackground(android.content.res.TypedArray,android.view.View,android.view.View,android.view.View,android.view.View,boolean,boolean,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { int getCacheVersion(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void <clinit>(); }
-keepclassmembers class java.lang.VMClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class java.lang.VMClassLoader { java.util.List getResources(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext$HostAndPort { int hashCode(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int indexOfStateSet(int[]); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void mutate(); }
-keepclassmembers class android.support.v4.app.ai { android.util.SparseArray a(java.util.List); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void runOrPost(int); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { java.lang.Object next(); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { void remove(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(android.view.ViewGroup$ViewLocationHolder); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class android.graphics.Bitmap { int scaleFromDensity(int,int,int); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(byte[],int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int next(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readUTCTime(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readGeneralizedTime(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readEnumerated(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int strToInt(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readInteger(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readOID(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void decodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { byte[] getEncoded(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int read(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readContent(); }
-keepclassmembers class java.util.Hashtable { void <init>(); }
-keepclassmembers class java.text.DateFormat { int hashCode(); }
-keepclassmembers class java.util.Hashtable { void <init>(int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Field checkAndGetReflectionField(java.io.ObjectStreamField); }
-keepclassmembers class org.apache.http.entity.ByteArrayEntity { long getContentLength(); }
-keepclassmembers class dalvik.system.DexPathList { void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.io.File); }
-keepclassmembers class dalvik.system.DexPathList { java.io.File[] splitLibraryPath(java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexPathList$Element[] makeDexElements(java.util.ArrayList,java.io.File,java.util.ArrayList); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.volley.a.d { void a(org.apache.http.client.methods.HttpUriRequest,java.util.Map); }
-keepclassmembers class android.animation.Animator { android.animation.Animator clone(); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer getInstance(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getFields(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int,boolean); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass lookupStreamClass(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.WeakHashMap getCache(); }
-keepclassmembers class android.widget.PopupWindow { void setContentView(android.view.View); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void scheduleNext(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean apply(java.lang.Object); }
-keepclassmembers class android.widget.PopupWindow { void setLayoutDirectionFromAnchor(); }
-keepclassmembers class com.android.volley.i { com.android.volley.h a(com.android.volley.h); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { org.apache.harmony.security.x509.CRLDistributionPoints decode(byte[]); }
-keepclassmembers class com.android.volley.i { void b(com.android.volley.h); }
-keepclassmembers class android.widget.PopupWindow { void dismiss(); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { android.graphics.Bitmap getBitmapForId(int); }
-keepclassmembers class android.support.v7.widget.ak$b { boolean a(android.view.MotionEvent); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int,boolean); }
-keepclassmembers class android.support.v7.widget.ak$b { boolean a(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.ak$b { boolean b(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,boolean,int,int,boolean,int,int,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { org.apache.harmony.security.pkcs7.SignedData getSignedData(); }
-keepclassmembers class android.widget.PopupWindow { void unregisterForScrollChanged(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECGroupContext { com.android.org.conscrypt.OpenSSLECGroupContext getInstance(java.security.spec.ECParameterSpec); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void showStrictModeViolation(boolean); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.http.conn.params.ConnManagerParams { org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void <init>(byte[]); }
-keepclassmembers class android.animation.StateListAnimator { android.view.View getTarget(); }
-keepclassmembers class android.animation.PathKeyframes$3 { int getIntValue(float); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object); }
-keepclassmembers class javax.security.auth.x500.X500Principal { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { org.apache.http.impl.conn.tsccm.WaitingThread nextThread(); }
-keepclassmembers class java.util.TreeMap$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.StrictMode { void setBlockGuardPolicy(int); }
-keepclassmembers class java.util.AbstractSet { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.Service { void attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object); }
-keepclassmembers class android.os.StrictMode { boolean tooManyViolationsThisLoop(); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node clone(); }
-keepclassmembers class java.util.zip.ZipFile$1 { java.util.zip.ZipEntry nextElement(); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean setFlag(int); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updateSelection(int); }
-keepclassmembers class libcore.util.ZoneInfo { boolean hasSameRules(java.util.TimeZone); }
-keepclassmembers class libcore.util.ZoneInfo { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator clone(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.GLES20RecordingCanvas { android.view.GLES20RecordingCanvas obtain(android.view.RenderNode); }
-keepclassmembers class android.app.Activity { boolean showDialog(int,android.os.Bundle); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { android.view.View$AttachInfo$InvalidateInfo obtain(); }
-keepclassmembers class android.app.Activity { void removeDialog(int); }
-keepclassmembers class android.app.Activity { void dismissDialog(int); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int,float); }
-keepclassmembers class android.widget.Editor { void prepareCursorControllers(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int); }
-keepclassmembers class java.io.DataInputStream { byte readByte(); }
-keepclassmembers class android.widget.Editor { void setFrame(); }
-keepclassmembers class android.animation.AnimatorInflater { void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float); }
-keepclassmembers class com.android.volley.b { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void <init>(byte[]); }
-keepclassmembers class android.app.Activity { android.net.Uri getReferrer(); }
-keepclassmembers class java.io.DataInputStream { char readChar(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorInflater { void setupValues(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,boolean,int,boolean,int); }
-keepclassmembers class org.apache.http.client.protocol.RequestTargetAuthentication { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class java.net.Socket { int getSoTimeout(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ValueAnimator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float); }
-keepclassmembers class android.widget.Editor { void onFocusChanged(boolean,int); }
-keepclassmembers class java.net.Socket { void bind(java.net.SocketAddress); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieSpec { org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String); }
-keepclassmembers class android.widget.Editor { void sendUpdateSelection(); }
-keepclassmembers class java.net.Socket { void connect(java.net.SocketAddress,int); }
-keepclassmembers class android.support.v7.view.menu.k$a { long getItemId(int); }
-keepclassmembers class android.support.v7.view.menu.k$a { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity { boolean a(android.content.Context); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void mutate(); }
-keepclassmembers class android.view.View { void sendAccessibilityHoverEvent(int); }
-keepclassmembers class android.support.v7.a.i { int c(int); }
-keepclassmembers class android.view.View { boolean hasAncestorThatBlocksDescendantFocus(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner { org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.view.View { android.view.ViewParent getParentForAccessibility(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner { org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.widget.Editor { void onTouchUpEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.d { android.view.View a(android.support.v7.view.menu.h,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.d { void a(android.support.v7.view.menu.h,android.support.v7.view.menu.m$a); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.view.View { boolean isInScrollingContainer(); }
-keepclassmembers class android.support.v7.widget.d { boolean d(); }
-keepclassmembers class android.support.v7.widget.d { boolean e(); }
-keepclassmembers class java.io.ObjectOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class org.apache.http.client.protocol.RequestProxyAuthentication { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class java.lang.Float { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Float { double doubleValue(); }
-keepclassmembers class android.widget.ImageView$ScaleType { android.widget.ImageView$ScaleType[] values(); }
-keepclassmembers class java.lang.Float { long longValue(); }
-keepclassmembers class java.lang.Float { int intValue(); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Object); }
-keepclassmembers class java.util.jar.ManifestReader { void readEntries(java.util.Map,java.util.Map); }
-keepclassmembers class java.util.AbstractMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.os.Bundle { android.os.Parcelable getParcelable(java.lang.String); }
-keepclassmembers class android.os.Bundle { android.util.SparseArray getSparseParcelableArray(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965SpecFactory { org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class java.util.AbstractMap { void putAll(java.util.Map); }
-keepclassmembers class android.os.Bundle { android.os.IBinder getBinder(java.lang.String); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object clone(); }
-keepclassmembers class com.shapps.mintubeapp.f { void a(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.lang.String[] getDefaultProtocols(); }
-keepclassmembers class android.view.View { void setLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.view.View { android.view.View getProjectionReceiver(); }
-keepclassmembers class android.view.View { void damageShadowReceiver(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewObject(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.view.View { void transformRect(android.graphics.Rect); }
-keepclassmembers class android.view.View { void invalidateParentIfNeeded(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(byte[]); }
-keepclassmembers class java.security.MessageDigest { java.security.MessageDigest getInstance(java.lang.String); }
-keepclassmembers class android.content.ClipDescription { void <init>(android.os.Parcel); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset cacheCharset(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forName(java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewEnum(java.lang.Object,java.lang.Class,boolean); }
-keepclassmembers class android.support.v4.g.p { android.view.MenuItem a(android.view.MenuItem,android.support.v4.g.d); }
-keepclassmembers class android.support.v4.g.p { android.view.MenuItem a(android.view.MenuItem,android.view.View); }
-keepclassmembers class android.support.v4.g.p { android.view.View a(android.view.MenuItem); }
-keepclassmembers class android.support.v4.g.p { void a(android.view.MenuItem,int); }
-keepclassmembers class android.support.v4.g.p { android.view.MenuItem b(android.view.MenuItem,int); }
-keepclassmembers class android.support.v4.g.p { boolean b(android.view.MenuItem); }
-keepclassmembers class android.support.v4.g.p { boolean c(android.view.MenuItem); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpecFactory { org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class java.util.Vector { java.lang.Object[] newElementArray(int); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(byte[],int,int); }
-keepclassmembers class java.util.zip.InflaterInputStream { void fill(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,byte[]); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965VersionAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.util.Collection getValues(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.client.protocol.RequestAddCookies { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.harmony.security.x509.AlternativeName { void <init>(boolean,byte[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { void defineAttributeDefault(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View$2 { boolean apply(java.lang.Object); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { boolean filterHeader(int); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { org.apache.http.Header nextHeader(); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { void bufferHeaderValue(); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.lang.Runtime { java.lang.String doLoad(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class java.security.KeyFactory { java.security.KeyFactory getInstance(java.lang.String); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.Runtime { int availableProcessors(); }
-keepclassmembers class java.util.jar.Attributes { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String getValue(java.util.jar.Attributes$Name); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.graphics.Matrix { boolean equals(java.lang.Object); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList valueOf(int); }
-keepclassmembers class android.view.View { void setBackgroundRenderNodeProperties(android.view.RenderNode); }
-keepclassmembers class android.view.View { android.view.RenderNode getDrawableRenderNode(android.graphics.drawable.Drawable,android.view.RenderNode); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.View { boolean isLayoutModeOptical(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.lang.Double { int intValue(); }
-keepclassmembers class java.lang.Double { long longValue(); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { java.lang.Object next(); }
-keepclassmembers class android.support.v7.widget.ak$f { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void readClass(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void mutate(); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass$2 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { android.view.View getRootView(); }
-keepclassmembers class android.view.View { void transformMatrixToGlobal(android.graphics.Matrix); }
-keepclassmembers class android.view.View { void transformMatrixToLocal(android.graphics.Matrix); }
-keepclassmembers class android.view.RenderNodeAnimator { void applyInterpolator(); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateInsideOut(android.view.View,com.android.internal.util.Predicate); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.graphics.Canvas); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class android.view.RenderNodeAnimator { java.util.ArrayList cloneListeners(); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator$DelayedAnimationHelper getHelper(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.style.SpellCheckSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.content.IIntentSender$Stub { android.content.IIntentSender asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.app.n { void a(java.lang.String); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void flushBuffer(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void a(android.view.View,android.view.View,int); }
-keepclassmembers class org.apache.http.client.params.HttpClientParams { java.lang.String getCookiePolicy(org.apache.http.params.HttpParams); }
-keepclassmembers class java.net.InterfaceAddress { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.GLES20Canvas { void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.view.View { boolean startNestedScroll(int); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class android.view.View$3 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.view.View$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.support.design.widget.CoordinatorLayout$e a(android.view.View); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void a(android.view.View,int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.util.ZoneInfo makeTimeZone(java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager { void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.view.View { boolean inLiveRegion(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String getInstructionSet(java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.DefaultRedirectHandler { java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void b(android.view.View,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getObjectIdentifier(java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void c(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.net.InetSocketAddress { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList getChildAnimations(); }
-keepclassmembers class android.animation.AnimatorSet { void setTarget(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet { void cancel(); }
-keepclassmembers class android.animation.AnimatorSet { void end(); }
-keepclassmembers class android.animation.AnimatorSet { boolean isRunning(); }
-keepclassmembers class java.io.File { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes$Name { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <clinit>(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class[] getExceptions(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.g.k { void a(android.view.LayoutInflater,android.support.v4.g.m); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.String getInnerClassName(java.lang.Class); }
-keepclassmembers class java.io.File { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet { void reverse(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { void deleteLeastUsedEntry(); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class java.lang.Class { java.lang.String getDexCacheString(com.android.dex.Dex,int); }
-keepclassmembers class java.util.ArrayList { java.lang.Object clone(); }
-keepclassmembers class java.lang.Class { java.lang.Class getDexCacheType(com.android.dex.Dex,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor[] getDeclaredConstructors(); }
-keepclassmembers class com.shapps.mintubeapp.a.b { java.lang.String a(java.lang.String[]); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpecFactory { org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class com.shapps.mintubeapp.a.b { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpRequestRetryHandler { boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { java.util.regex.Pattern getPatternForRegex(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.String toString(); }
-keepclassmembers class android.transition.TransitionValues { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void checkURI(java.lang.String); }
-keepclassmembers class android.transition.TransitionValues { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { javax.net.ssl.SSLSession getSSLSession(); }
-keepclassmembers class android.support.v7.a.g$a { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.net.http.AndroidHttpClient$CurlLogger { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.animation.ValueAnimator { void cancel(); }
-keepclassmembers class libcore.io.IoUtils$FileReader { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.animation.ValueAnimator { int getCurrentAnimationsCount(); }
-keepclassmembers class android.transition.Transition { void addViewValues(android.transition.TransitionValuesMaps,android.view.View,android.transition.TransitionValues); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator$AnimationHandler getOrCreateAnimationHandler(); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object); }
-keepclassmembers class android.transition.Transition { android.transition.Transition clone(); }
-keepclassmembers class java.util.Date { int compareTo(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getDefault(); }
-keepclassmembers class java.net.PlainSocketImpl { void accept(java.net.SocketImpl); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { java.util.List getExtendedKeyUsage(); }
-keepclassmembers class java.net.PlainSocketImpl { int socksGetServerPort(); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getTimeZone(java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl { java.net.InetAddress socksGetServerAddress(); }
-keepclassmembers class java.net.PlainSocketImpl { void connect(java.net.SocketAddress,int); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { int getIndex(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.org.conscrypt.ByteArray { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void connect(); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { android.view.View a(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$h { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext); }
-keepclassmembers class libcore.net.url.FtpURLConnection { java.lang.String readLine(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.ViewGroup$ChildListForAccessibility obtain(android.view.ViewGroup,boolean); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void setVisibility(int); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.View getChildAt(int); }
-keepclassmembers class java.math.RoundingMode { java.math.RoundingMode[] values(); }
-keepclassmembers class android.support.v7.a.b$a { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.Path { void detectSimplePath(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class java.util.Formatter { libcore.icu.NativeDecimalFormat getDecimalFormat(java.lang.String); }
-keepclassmembers class android.support.v7.a.b$a { void b(android.support.v7.a.b); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle handleGetBundle(boolean,java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$Impl { byte[] getSessionData(java.lang.String,int); }
-keepclassmembers class java.util.ResourceBundle { java.util.Hashtable getLoaderCache(java.lang.Object); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transform(java.util.Formatter$FormatToken,java.lang.Object); }
-keepclassmembers class android.graphics.Color { int getHtmlColor(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int); }
-keepclassmembers class android.content.res.Resources { android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromCharacter(); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.text.SimpleDateFormat { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Formatter { java.lang.StringBuilder toStringBuilder(java.lang.CharSequence); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromDateTime(); }
-keepclassmembers class android.os.AsyncTask$Status { android.os.AsyncTask$Status[] values(); }
-keepclassmembers class android.animation.PathKeyframes$1 { float getFloatValue(float); }
-keepclassmembers class android.support.v7.a.q { android.support.v7.widget.ae b(android.view.View); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(); }
-keepclassmembers class android.animation.LayoutTransition { void runAppearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.animation.LayoutTransition { void runDisappearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(int); }
-keepclassmembers class java.text.SimpleDateFormat { void appendTimeZone(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getCachedDrawable(android.util.ArrayMap,long,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable$ConstantState getConstantStateLocked(android.util.LongSparseArray,long); }
-keepclassmembers class android.view.IWindowManager$Stub { android.view.IWindowManager asInterface(android.os.IBinder); }
-keepclassmembers class android.graphics.Bitmap$Config { android.graphics.Bitmap$Config[] values(); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void wire(java.lang.String,java.io.InputStream); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache { com.android.org.conscrypt.SSLClientSessionCache usingDirectory(java.io.File); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getCachedColorStateList(long); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void input(int); }
-keepclassmembers class android.animation.LayoutTransition$6 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.text.SimpleDateFormat { void set2DigitYearStart(java.util.Date); }
-keepclassmembers class android.support.v7.view.g$b { void a(android.view.MenuItem); }
-keepclassmembers class android.graphics.SweepGradient { android.graphics.Shader copy(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.support.a.a.f$g { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.a.a.f$g { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.d$c { void run(); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.WebViewFactoryProvider getProvider(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { org.apache.harmony.security.x509.SubjectKeyIdentifier decode(byte[]); }
-keepclassmembers class org.apache.http.HttpHost { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String getAttribute(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { int toIntValue(java.lang.Object); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { javax.net.ssl.KeyManagerFactory getInstance(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object fromIntValue(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.math.BigInteger toBigIntegerValue(java.lang.Object); }
-keepclassmembers class java.util.SimpleTimeZone { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.SimpleTimeZone { java.lang.Object clone(); }
-keepclassmembers class android.support.v4.widget.j { void a(java.lang.Object,int,int); }
-keepclassmembers class android.support.v4.g.j { android.support.v4.g.m a(android.view.LayoutInflater); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.BufferIterator bigEndianIterator(); }
-keepclassmembers class android.support.v4.widget.j { boolean a(java.lang.Object,float); }
-keepclassmembers class android.support.v4.widget.j { boolean a(java.lang.Object,int); }
-keepclassmembers class android.support.v4.widget.j { boolean a(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class android.support.v4.widget.j { boolean a(java.lang.Object); }
-keepclassmembers class com.android.volley.a.c { void a(java.io.OutputStream,java.lang.String); }
-keepclassmembers class com.android.volley.a.c { void a(java.util.Map,java.io.OutputStream); }
-keepclassmembers class android.support.v4.widget.j { boolean b(java.lang.Object); }
-keepclassmembers class com.android.volley.a.c { java.lang.String c(java.io.InputStream); }
-keepclassmembers class com.android.volley.a.a { byte[] a(org.apache.http.HttpEntity); }
-keepclassmembers class android.text.style.EasyEditSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.app.aq { android.support.v4.app.aq a(android.app.Activity); }
-keepclassmembers class android.widget.AbsListView { boolean acceptFilter(); }
-keepclassmembers class android.widget.AbsListView { void setFilterText(java.lang.String); }
-keepclassmembers class java.net.Socks4Message { void setCommandOrResult(int); }
-keepclassmembers class java.net.Socks4Message { void setPort(int); }
-keepclassmembers class android.app.ActivityTransitionState { void startExitOutTransition(android.app.Activity,android.os.Bundle); }
-keepclassmembers class org.apache.http.protocol.RequestTargetHost { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class java.net.Socks4Message { void setVersionNumber(int); }
-keepclassmembers class android.widget.AbsListView { android.view.View getAccessibilityFocusedChild(android.view.View); }
-keepclassmembers class java.text.Normalizer$Form { java.text.Normalizer$Form[] values(); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void <init>(byte[]); }
-keepclassmembers class android.widget.AbsListView { android.view.View obtainView(int,boolean[]); }
-keepclassmembers class java.io.FileOutputStream { void write(int); }
-keepclassmembers class android.widget.AbsListView { void setItemViewLayoutParams(android.view.View,int); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$2 { void a(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.io.ObjectStreamClass$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$CacheFile { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <init>(android.view.View,boolean); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.RectF { void set(android.graphics.Rect); }
-keepclassmembers class android.widget.AbsListView { void onWindowFocusChanged(boolean); }
-keepclassmembers class com.android.volley.a.b$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.ActivityThread { android.content.Intent getIntentBeingBroadcast(); }
-keepclassmembers class android.animation.LayoutTransition$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class java.net.URL { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment valueOf(java.lang.String); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment[] values(); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { java.net.URL nextElement(); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void initContentView(); }
-keepclassmembers class java.util.Locale { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.util.Map$Entry next(); }
-keepclassmembers class java.util.Locale { java.lang.String makeLanguageTag(); }
-keepclassmembers class android.widget.AbsListView { android.widget.EditText getTextFilterInput(); }
-keepclassmembers class java.util.Locale { java.lang.String serializeExtensions(java.util.Map); }
-keepclassmembers class android.text.AutoText { void init(android.content.res.Resources); }
-keepclassmembers class android.widget.AbsListView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class java.util.Locale { void addUnicodeExtensionToExtensionsMap(java.util.Set,java.util.Map,java.util.Map); }
-keepclassmembers class java.util.Locale { java.lang.String convertGrandfatheredTag(java.lang.String); }
-keepclassmembers class java.util.Grego { int[] timeToFields(long,int[]); }
-keepclassmembers class org.json.JSONArray { void <init>(org.json.JSONTokener); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void <init>(byte[]); }
-keepclassmembers class java.security.cert.Certificate { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { org.apache.harmony.security.x509.AuthorityKeyIdentifier decode(byte[]); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { org.apache.http.NameValuePair[] getParameters(); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class org.json.JSONObject { void <init>(org.json.JSONTokener); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void draw(android.graphics.Canvas,int); }
-keepclassmembers class org.json.JSONArray { boolean equals(java.lang.Object); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject put(java.lang.String,java.lang.Object); }
-keepclassmembers class org.apache.http.impl.client.DefaultUserTokenHandler { java.lang.Object getUserToken(org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.view.ViewRootImpl { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class android.graphics.drawable.Ripple { void exitSoftware(int,int); }
-keepclassmembers class com.shapps.mintubeapp.FullscreenWebPlayer { void onCreate(android.os.Bundle); }
-keepclassmembers class com.shapps.mintubeapp.FullscreenWebPlayer { void onBackPressed(); }
-keepclassmembers class org.json.JSONObject { void writeTo(org.json.JSONStringer); }
-keepclassmembers class android.view.View$13 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.math.BigInteger { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketFactoryImpl { java.net.Socket createSocket(); }
-keepclassmembers class android.app.Notification$Action$Builder { android.app.Notification$Action build(); }
-keepclassmembers class android.view.View$13 { void setValue(java.lang.Object,float); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketFactoryImpl { java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes); }
-keepclassmembers class android.support.v7.widget.ao { android.support.v7.widget.ao$v c(android.view.View); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub { android.webkit.IWebViewUpdateService asInterface(android.os.IBinder); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class); }
-keepclassmembers class android.animation.PathKeyframes$2 { float getFloatValue(float); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterIntent { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setCharAt(int,char); }
-keepclassmembers class java.math.BigInteger { int compareTo(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object convertBack(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupStartValue(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ao { long a(android.support.v7.widget.ao$v); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void <init>(byte[]); }
-keepclassmembers class java.lang.reflect.AbstractMethod { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.widget.ao { boolean b(int,int); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.view.ViewRootImpl { android.view.ViewRootImpl$RunQueue getRunQueue(); }
-keepclassmembers class android.widget.ArrayAdapter { void init(android.content.Context,int,int,java.util.List); }
-keepclassmembers class android.widget.ArrayAdapter { long getItemId(int); }
-keepclassmembers class libcore.reflect.AnnotationFactory { java.lang.annotation.Annotation createAnnotation(java.lang.Class,libcore.reflect.AnnotationMember[]); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View createViewFromResource(int,android.view.View,android.view.ViewGroup,int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class android.support.v4.e.c { java.lang.String a(java.lang.String); }
-keepclassmembers class java.lang.HexStringParser { float parseFloat(java.lang.String); }
-keepclassmembers class android.support.v4.e.c { java.lang.String b(java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.x509.InhibitAnyPolicy { void <init>(byte[]); }
-keepclassmembers class android.support.v4.e.b { java.lang.String a(java.util.Locale); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableColorFilterAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class com.android.internal.util.ArrayUtils { byte[] newUnpaddedByteArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { int[] newUnpaddedIntArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { char[] newUnpaddedCharArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { boolean[] newUnpaddedBooleanArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { float[] newUnpaddedFloatArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { long[] newUnpaddedLongArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedObjectArray(int); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { boolean isNested(android.view.View,android.util.ArrayMap); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setEpicenter(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.view.ViewGroup getDecor(); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header); }
-keepclassmembers class java.util.concurrent.FutureTask { java.lang.Object report(int); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeSetup(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.transition.TransitionManager { android.util.ArrayMap getRunningTransitions(); }
-keepclassmembers class java.util.Arrays { boolean deepEqualsElements(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.s { void a(android.widget.PopupWindow); }
-keepclassmembers class android.support.v4.g.ag { void a(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.g.ag { android.content.res.ColorStateList a(android.view.View); }
-keepclassmembers class android.support.v4.g.ag { void a(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.g.ag { android.graphics.PorterDuff$Mode b(android.view.View); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { void verify(java.lang.String,javax.net.ssl.SSLSocket); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext { javax.net.ssl.SSLSession getSession(java.lang.String,int); }
-keepclassmembers class android.support.v4.g.ag { int d(android.view.View); }
-keepclassmembers class android.support.v4.g.ag { int e(android.view.View); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.CertificateFactory getInstance(java.lang.String); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void showView(android.view.View,boolean); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { boolean isFinished(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(int,int); }
-keepclassmembers class java.net.NetworkInterface { void collectIpv4Address(java.lang.String,java.util.List,java.util.List); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { boolean isInTransitionGroup(android.view.ViewParent,android.view.ViewGroup); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void stop(); }
-keepclassmembers class java.net.NetworkInterface { java.net.NetworkInterface getByInetAddress(java.net.InetAddress); }
-keepclassmembers class java.net.NetworkInterface { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.NetworkInterface { java.lang.String toString(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePattern(java.lang.String,java.util.Locale); }
-keepclassmembers class android.graphics.LinearGradient { android.graphics.Shader copy(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void <init>(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$1 { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void createListView(com.android.internal.app.AlertController); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { int getIntParameter(java.lang.String,int); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { long getLongParameter(java.lang.String,long); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { boolean getBooleanParameter(java.lang.String,boolean); }
-keepclassmembers class java.util.jar.JarVerifier { boolean readCertificates(); }
-keepclassmembers class android.support.v7.widget.av { android.util.TypedValue a(); }
-keepclassmembers class java.util.jar.JarVerifier { void verifyCertificate(java.lang.String); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toolTypeToString(int); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.util.Locale); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.lang.String); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.Fragment getFragment(android.os.Bundle,java.lang.String); }
-keepclassmembers class android.support.v7.widget.m { android.graphics.drawable.Drawable a(android.content.Context,int,boolean,android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.m { android.graphics.drawable.Drawable a(android.content.Context,long); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.support.v7.widget.m { void a(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager getDefault(); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(android.app.Fragment,int,int,int,boolean); }
-keepclassmembers class android.app.Instrumentation { void checkStartActivityResult(int,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.m { boolean a(android.content.Context,long,android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean selectTransition(int); }
-keepclassmembers class java.util.WeakHashMap { void poll(); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void startHandshake(); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void notifyHandshakeCompletedListeners(); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList d(android.content.Context,int); }
-keepclassmembers class android.content.res.Configuration { void setTo(android.content.res.Configuration); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { android.text.method.TextKeyListener$Capitalize[] values(); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder with(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder before(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$Builder { void <init>(android.animation.AnimatorSet,android.animation.Animator); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(java.lang.Object,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setSoWriteTimeout(int); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void a(android.content.Intent); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object findRealOwner(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class org.apache.http.conn.params.ConnRouteParams { org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.conn.params.ConnRouteParams { java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.io.File,boolean,int); }
-keepclassmembers class java.util.jar.JarFile { java.util.HashMap readMetaEntries(java.util.zip.ZipFile,boolean); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.JarEntry getJarEntry(java.lang.String); }
-keepclassmembers class java.util.jar.JarFile { java.util.List getMetaEntries(java.util.zip.ZipFile); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.logging.Level { java.util.logging.Level parse(java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void a(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void c(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void b(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void d(); }
-keepclassmembers class java.util.logging.Level { boolean equals(java.lang.Object); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void onClick(android.view.View); }
-keepclassmembers class android.widget.ResourceCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void onMeasure(int,int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { java.lang.String getUserAgent(org.apache.http.params.HttpParams); }
-keepclassmembers class android.graphics.PorterDuff$Mode { android.graphics.PorterDuff$Mode valueOf(java.lang.String); }
-keepclassmembers class android.graphics.PorterDuff$Mode { android.graphics.PorterDuff$Mode[] values(); }
-keepclassmembers class android.support.v4.g.af$a { boolean b(android.view.View,int); }
-keepclassmembers class android.transition.TransitionSet { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.TransitionSet { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.support.design.widget.f { android.view.animation.Animation a(android.view.animation.Animation); }
-keepclassmembers class android.content.res.AssetManager { boolean getResourceValue(int,int,android.util.TypedValue,boolean); }
-keepclassmembers class org.apache.http.util.VersionInfo { org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <init>(int,java.lang.Object[],org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.pkcs7.AuthenticatedAttributes,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],java.util.List); }
-keepclassmembers class java.lang.Long { double doubleValue(); }
-keepclassmembers class libcore.net.MimeUtils { void applyOverrides(); }
-keepclassmembers class android.content.res.AssetManager { void xmlBlockGone(int); }
-keepclassmembers class libcore.net.MimeUtils { java.lang.String guessMimeTypeFromExtension(java.lang.String); }
-keepclassmembers class java.lang.Long { int intValue(); }
-keepclassmembers class java.lang.Character { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData get(java.util.Locale); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String,int); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub { android.view.accessibility.IAccessibilityManager asInterface(android.os.IBinder); }
-keepclassmembers class android.os.Looper { android.os.Looper myLooper(); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.Character { char toLowerCase(char); }
-keepclassmembers class java.lang.Character { char toUpperCase(char); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { void <init>(org.apache.http.HttpRequest); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Object); }
-keepclassmembers class android.app.Notification$Builder { void unshrinkLine3Text(android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { void shrinkLine3Text(android.widget.RemoteViews); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getStackTrace(); }
-keepclassmembers class android.support.v7.widget.al { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.Boolean { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Object); }
-keepclassmembers class android.app.Notification$Builder { void populateExtras(android.os.Bundle); }
-keepclassmembers class android.view.RenderNode { void end(android.view.HardwareCanvas); }
-keepclassmembers class com.android.volley.a.c$a { void <init>(java.lang.String,com.android.volley.a$a); }
-keepclassmembers class android.util.Size { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { boolean isGrayscaleIcon(android.graphics.Bitmap); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { boolean isGrayscaleIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class javax.net.ssl.HttpsURLConnection$NoPreloadHolder { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.RippleDrawable,android.content.res.Resources); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { void waitForRelroCreationCompleted(boolean); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean showCharacterPicker(android.view.View,android.text.Editable,char,boolean,int); }
-keepclassmembers class android.media.AudioAttributes$Builder { void <init>(android.media.AudioAttributes); }
-keepclassmembers class android.widget.ListView { boolean handleHorizontalFocusWithinListItem(int); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub { com.android.internal.widget.ILockSettings asInterface(android.os.IBinder); }
-keepclassmembers class android.media.AudioAttributes$Builder { android.media.AudioAttributes build(); }
-keepclassmembers class java.security.Security { java.security.Provider[] getProviders(); }
-keepclassmembers class java.util.TreeMap$Relation { java.util.TreeMap$Relation[] values(); }
-keepclassmembers class android.widget.TextView$Drawables { void setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView); }
-keepclassmembers class java.util.LinkedHashMap { void preModify(java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.util.LinkedHashMap { void postRemove(java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.widget.ListView { boolean isViewAncestorOf(android.view.View,android.view.View); }
-keepclassmembers class java.math.BigInt { java.math.BigInt exp(java.math.BigInt,int); }
-keepclassmembers class java.text.DateFormatSymbols { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { android.app.SearchableInfo getSearchableInfo(android.content.ComponentName); }
-keepclassmembers class android.os.Parcel { void writeMapInternal(java.util.Map); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.os.Parcel { void writeValue(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.support.v7.widget.ae a(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean a(float,float); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean a(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence readCharSequence(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void c(); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { int getActionBarHideOffset(); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable readParcelable(java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable getChild(int); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.Map); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable$Creator readParcelableCreator(java.lang.ClassLoader); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void setActionBarHideOffset(int); }
-keepclassmembers class android.os.Parcel { java.io.Serializable readSerializable(java.lang.ClassLoader); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class java.util.logging.Logger { void updateDalvikLogHandler(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { com.android.org.conscrypt.OpenSSLX509Certificate fromCertificate(java.security.cert.Certificate); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Handler[] getHandlers(); }
-keepclassmembers class org.apache.http.impl.auth.RFC2617Scheme { java.lang.String getParameter(java.lang.String); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { org.apache.http.HttpResponse receiveResponseHeader(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { boolean isStale(); }
-keepclassmembers class android.support.v4.c.a.c { void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.c.a.c { void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(); }
-keepclassmembers class android.support.v7.a.k { void a(android.support.v7.a.k$d,boolean); }
-keepclassmembers class android.support.design.widget.Snackbar { void <init>(android.view.ViewGroup); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeAccessibilityRecordToParcel(android.view.accessibility.AccessibilityRecord,android.os.Parcel,int); }
-keepclassmembers class android.support.design.widget.Snackbar { android.view.ViewGroup a(android.view.View); }
-keepclassmembers class java.util.logging.Logger { void reset(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Integer { double doubleValue(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class java.lang.Integer { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Integer { float floatValue(); }
-keepclassmembers class android.support.v7.a.k { boolean c(android.support.v7.a.k$d); }
-keepclassmembers class java.lang.Integer { long longValue(); }
-keepclassmembers class android.support.v7.view.g$a { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String,int); }
-keepclassmembers class sun.misc.Unsafe { long objectFieldOffset(java.lang.reflect.Field); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpecFactory { org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Object); }
-keepclassmembers class sun.misc.Unsafe { void unpark(java.lang.Object); }
-keepclassmembers class android.support.v7.a.k { android.view.ViewGroup s(); }
-keepclassmembers class android.support.v7.a.k { void t(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <init>(java.lang.ThreadLocal$Values); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer value(java.lang.Object); }
-keepclassmembers class android.text.Selection { int getSelectionStart(java.lang.CharSequence); }
-keepclassmembers class android.text.Selection { int getSelectionEnd(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.a.k { void a(int); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest); }
-keepclassmembers class android.support.v7.a.k { void a(android.os.Bundle); }
-keepclassmembers class android.support.v7.a.k { void a(android.support.v7.widget.Toolbar); }
-keepclassmembers class java.util.AbstractList { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.support.v7.a.k { void j(); }
-keepclassmembers class android.support.design.widget.v { void a(android.view.ViewParent,android.view.View,android.graphics.Matrix); }
-keepclassmembers class android.app.ActivityOptions { void <init>(android.os.Bundle); }
-keepclassmembers class android.os.ServiceManager { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { org.apache.harmony.security.x509.NameConstraints decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel); }
-keepclassmembers class android.os.ServiceManagerNative { android.os.IServiceManager asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.c.a.f { int a(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.view.g { java.lang.Object a(java.lang.Object); }
-keepclassmembers class java.util.HashMap { void <init>(); }
-keepclassmembers class java.util.HashMap { void <init>(int); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void processChallenges(java.util.Map,org.apache.http.auth.AuthState,org.apache.http.client.AuthenticationHandler,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { org.apache.harmony.security.x509.CertificatePolicies decode(byte[]); }
-keepclassmembers class java.util.HashMap { void constructorPutAll(java.util.Map); }
-keepclassmembers class java.util.HashMap { java.lang.Object clone(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.a.a { android.graphics.Bitmap a(java.lang.Void[]); }
-keepclassmembers class com.shapps.mintubeapp.a.a { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.hardware.input.InputManager { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class org.apache.http.auth.params.AuthParams { java.lang.String getCredentialCharset(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllListInfosSelectable(java.util.ArrayList); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void write(int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.a.b { android.view.ViewGroup a(android.view.View,android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.v7.a.b { void a(android.view.ViewGroup); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void setActionView(android.view.View); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v7.a.b { void b(android.view.ViewGroup); }
-keepclassmembers class java.lang.Byte { double doubleValue(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.lang.Byte { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.a.b { void c(android.view.ViewGroup); }
-keepclassmembers class java.lang.Byte { long longValue(); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void interruptIdleWorkers(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void addIdentifier(java.util.TreeMap,int,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void startExitTransition(); }
-keepclassmembers class java.beans.PropertyChangeSupport { void firePropertyChange(java.beans.PropertyChangeEvent); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.lang.Runnable getTask(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { org.apache.harmony.security.x509.IssuingDistributionPoint decode(byte[]); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollY(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.Touch { boolean isActivelySelecting(android.text.Spannable); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollX(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.Touch { boolean isSelectionStarted(android.text.Spannable); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { void addToFamilyTree(java.util.logging.Logger,java.lang.String); }
-keepclassmembers class android.support.v4.app.f { int a(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { void readConfigurationImpl(java.io.InputStream); }
-keepclassmembers class java.util.logging.LogManager { void setLevelRecursively(java.util.logging.Logger,java.util.logging.Level); }
-keepclassmembers class java.util.logging.LogManager { void reset(); }
-keepclassmembers class java.util.logging.LogManager { void <clinit>(); }
-keepclassmembers class android.view.GhostView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.GhostView { void <init>(android.view.View); }
-keepclassmembers class android.view.GhostView { void calculateMatrix(android.view.View,android.view.ViewGroup,android.graphics.Matrix); }
-keepclassmembers class android.view.GhostView { void onDetachedFromWindow(); }
-keepclassmembers class android.text.DynamicLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.view.GhostView { boolean isGhostWrapper(android.view.View); }
-keepclassmembers class android.util.Xml { android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.view.GhostView { void getParents(android.view.View,java.util.ArrayList); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void <init>(java.lang.String[],boolean); }
-keepclassmembers class android.widget.FastScroller { void setScrollbarPosition(int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { java.util.List doFormatManyHeaders(java.util.List); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class android.graphics.RadialGradient { android.graphics.Shader copy(); }
-keepclassmembers class android.widget.FastScroller { void transitionToHidden(); }
-keepclassmembers class java.lang.Enum { java.lang.Enum[] getSharedConstants(java.lang.Class); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller { void getSectionsFromIndexer(); }
-keepclassmembers class java.net.URI { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.TextView$Marquee { void resetScroll(); }
-keepclassmembers class android.animation.PathKeyframes$4 { int getIntValue(float); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { void <init>(java.lang.String[]); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.net.InetAddress { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.InetAddress { byte[] getAddress(); }
-keepclassmembers class java.net.URI { int compareTo(java.lang.Object); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] getAllByName(java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] getAllByNameImpl(java.lang.String,int); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftHeaderParser { org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class android.widget.FastScroller { void <clinit>(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getHostByAddrImpl(java.net.InetAddress); }
-keepclassmembers class android.support.v7.view.menu.b { android.view.View a(android.support.v7.view.menu.h,android.view.View,android.view.ViewGroup); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void findJarFile(); }
-keepclassmembers class android.support.v7.view.menu.b { void a(android.view.View,int); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[],int); }
-keepclassmembers class android.support.v7.view.menu.b { android.support.v7.view.menu.m$a b(android.view.ViewGroup); }
-keepclassmembers class android.support.v7.a.n { void j(); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { java.util.List formatCookies(java.util.List); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext$1 { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class org.apache.http.ProtocolVersion { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.TextView { android.text.Editable getEditableText(); }
-keepclassmembers class android.widget.TextView { void setKeyListenerOnly(android.text.method.KeyListener); }
-keepclassmembers class org.apache.http.conn.scheme.SchemeRegistry { org.apache.http.conn.scheme.Scheme get(java.lang.String); }
-keepclassmembers class org.apache.http.conn.scheme.SchemeRegistry { org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme); }
-keepclassmembers class android.widget.TextView { void setTransformationMethod(android.text.method.TransformationMethod); }
-keepclassmembers class android.view.LayoutInflater { android.view.LayoutInflater from(android.content.Context); }
-keepclassmembers class dalvik.system.BlockGuard { dalvik.system.BlockGuard$Policy getThreadPolicy(); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { long getContentLength(); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object[] create(java.lang.Class); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.app.ab { void b(android.support.v4.app.aa,android.support.v4.app.ab$p); }
-keepclassmembers class android.support.v4.app.ab { void b(android.support.v4.app.z,java.util.ArrayList); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(android.graphics.Rect); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(int,int,int,int); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(java.lang.Object,int); }
-keepclassmembers class com.android.volley.a.g { java.net.HttpURLConnection a(java.net.URL,com.android.volley.h); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.android.volley.a.g { org.apache.http.HttpEntity a(java.net.HttpURLConnection); }
-keepclassmembers class com.android.volley.a.g { java.net.HttpURLConnection a(java.net.URL); }
-keepclassmembers class android.graphics.Interpolator { android.graphics.Interpolator$Result timeToValues(float[]); }
-keepclassmembers class com.android.volley.a.g { org.apache.http.HttpResponse a(com.android.volley.h,java.util.Map); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class java.net.Proxy$Type { java.net.Proxy$Type[] values(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean a(android.view.View,android.view.View); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.support.v4.widget.k { boolean a(java.lang.Object,float,float); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void f(int); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verify(java.lang.String,javax.net.ssl.SSLSession); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.View$4 { void setValue(java.lang.Object,float); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.widget.TextView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.view.View$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub { android.hardware.display.IDisplayManager asInterface(android.os.IBinder); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void put(long,android.content.res.Resources$Theme,android.content.res.ConstantState); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[][] getZoneStrings(java.util.Locale); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { java.lang.Object get(long,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { com.android.internal.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class java.security.Signature { java.security.Signature getSignature(java.lang.String,java.security.Provider); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithm(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class java.text.NumberFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.security.Signature { void initVerify(java.security.cert.Certificate); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.design.widget.o { void a(android.support.design.widget.o$b); }
-keepclassmembers class android.support.design.widget.o { boolean a(android.support.design.widget.o$b,int); }
-keepclassmembers class android.support.design.widget.o { void b(); }
-keepclassmembers class android.support.v4.widget.z { void c(int,android.view.animation.Animation$AnimationListener); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.a { void b(); }
-keepclassmembers class android.support.v4.widget.z { boolean a(); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.commons.logging.LogFactory { java.util.Hashtable createFactoryStore(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.widget.a { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.lang.reflect.Proxy { void validateReturnTypes(java.util.List); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(android.util.Property,float[]); }
-keepclassmembers class android.support.design.widget.p { android.view.View a(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class com.shapps.mintubeapp.GetPermission { void onCreate(android.os.Bundle); }
-keepclassmembers class java.util.HashMap$HashMapEntry { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.app.ai$a { android.app.Notification b(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.widget.TextView { void nullLayouts(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class org.json.JSON { java.lang.String toString(java.lang.Object); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.client.protocol.RequestDefaultHeaders { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.widget.TextView { void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean); }
-keepclassmembers class android.widget.RelativeLayout { android.view.View getRelatedView(int[],int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { java.lang.String getCipherSuite(); }
-keepclassmembers class android.widget.RelativeLayout { android.widget.RelativeLayout$LayoutParams getRelatedViewParams(int[],int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.widget.TextView { android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean); }
-keepclassmembers class java.net.Proxy { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.SparseArray { android.util.SparseArray clone(); }
-keepclassmembers class android.support.v7.a.k$c { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfTransition(int,int); }
-keepclassmembers class java.security.Signature$SignatureImpl { java.security.SignatureSpi getSpi(java.security.Key); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { java.lang.String map2AlgName(java.lang.String); }
-keepclassmembers class android.view.animation.Animation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.ViewStub { void setVisibility(int); }
-keepclassmembers class android.view.ViewStub { android.view.View inflate(); }
-keepclassmembers class android.view.animation.Animation { android.view.animation.Animation clone(); }
-keepclassmembers class org.apache.http.impl.io.AbstractMessageWriter { void write(org.apache.http.HttpMessage); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.volley.h { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet); }
-keepclassmembers class org.apache.http.auth.AuthScope { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.animation.Animation { void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.animation.Animation { void initializeInvalidateRegion(int,int,int,int); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.TextView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.app.INotificationManager$Stub { android.app.INotificationManager asInterface(android.os.IBinder); }
-keepclassmembers class android.widget.TextView { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class com.shapps.mintubeapp.RateOrStar { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.TextView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.ISearchManager$Stub { android.app.ISearchManager asInterface(android.os.IBinder); }
-keepclassmembers class java.lang.RealToString { java.lang.RealToString getInstance(); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean apply(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void updateTextServicesLocaleLocked(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getActive(java.lang.CharSequence,java.lang.Object,int,int); }
-keepclassmembers class android.widget.TextView { boolean selectAllText(); }
-keepclassmembers class android.widget.TextView { boolean canPaste(); }
-keepclassmembers class android.widget.TextView { void setPrimaryClip(android.content.ClipData); }
-keepclassmembers class android.widget.TextView { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class android.widget.TextView { void deleteText_internal(int,int); }
-keepclassmembers class android.widget.TextView { void replaceText_internal(int,int,java.lang.CharSequence); }
-keepclassmembers class org.apache.http.cookie.CookieSpecRegistry { org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteLine(android.view.View,android.text.Editable); }
-keepclassmembers class org.apache.http.message.HeaderGroup { org.apache.http.Header[] getAllHeaders(); }
-keepclassmembers class android.graphics.Rect { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$c a(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class libcore.io.IoBridge { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class libcore.io.IoBridge { boolean isConnected(java.io.FileDescriptor,java.net.InetAddress,int,int,int); }
-keepclassmembers class org.apache.http.client.protocol.ResponseProcessCookies { void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.widget.Toast { android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { android.animation.Keyframes clone(); }
-keepclassmembers class org.apache.http.client.protocol.ResponseProcessCookies { void processCookies(org.apache.http.HeaderIterator,org.apache.http.cookie.CookieSpec,org.apache.http.cookie.CookieOrigin,org.apache.http.client.CookieStore); }
-keepclassmembers class libcore.io.IoBridge { java.lang.Object getSocketOptionErrno(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.io.IoBridge { void setSocketOptionErrno(java.io.FileDescriptor,int,java.lang.Object); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.Object); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar { void a(android.view.View,boolean); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.conn.ClientConnectionManager createClientConnectionManager(); }
-keepclassmembers class libcore.io.IoBridge { java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.IoBridge { int getSocketLocalPort(java.io.FileDescriptor); }
-keepclassmembers class android.support.v7.widget.Toolbar { void m(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.Toolbar$b a(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.text.Layout { int getParagraphLeft(int); }
-keepclassmembers class android.content.Intent { android.content.ClipData$Item makeClipItem(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void <init>(byte[]); }
-keepclassmembers class java.util.TreeMap$Node { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.Layout { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109SpecFactory { org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(java.lang.String,int); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { java.util.jar.JarEntry nextElement(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.FontFamily makeFamilyFromParsed(android.graphics.FontListParser$Family); }
-keepclassmembers class org.apache.http.auth.AuthSchemeRegistry { org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(android.graphics.Typeface,int); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickFillInIntent { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class java.lang.Short { double doubleValue(); }
-keepclassmembers class java.lang.Short { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Short { long longValue(); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.Short { short parseShort(java.lang.String,int); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable$Callback getCallback(); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils$DateFormatHolder { java.text.SimpleDateFormat formatFor(java.lang.String); }
-keepclassmembers class android.support.v7.widget.m$b { android.graphics.PorterDuffColorFilter a(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.m$b { android.graphics.PorterDuffColorFilter a(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class javax.net.ssl.SSLSocketFactory { javax.net.SocketFactory getDefault(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { int getIndex(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.EdgeEffect { void <clinit>(); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getCharacterWidth(android.widget.TextView); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.a.a.f { int getIntrinsicHeight(); }
-keepclassmembers class android.support.a.a.f { int getIntrinsicWidth(); }
-keepclassmembers class android.transition.Scene { android.transition.Scene getCurrentScene(android.view.View); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.LongSparseLongArray { android.util.LongSparseLongArray clone(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1ValueCollection { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class java.util.HashSet { java.lang.Object clone(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <init>(java.lang.String,com.android.i18n.phonenumbers.MetadataLoader,java.util.Map); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void loadMetadataFromFile(java.lang.String,java.lang.String,int,com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Package getPackage(java.lang.String); }
-keepclassmembers class android.support.v7.a.g { java.lang.CharSequence p(); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Attributes getAttributes(java.lang.String); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Manifest$Chunk getChunk(java.lang.String); }
-keepclassmembers class android.text.TextUtils { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class android.hardware.input.IInputManager$Stub { android.hardware.input.IInputManager asInterface(android.os.IBinder); }
-keepclassmembers class java.text.DecimalFormat { boolean equals(java.lang.Object); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.text.DecimalFormat { java.text.DecimalFormatSymbols getDecimalFormatSymbols(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivity(android.os.IBinder,int,android.content.Intent,boolean); }
-keepclassmembers class java.text.DecimalFormat { java.lang.Number parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.support.v7.widget.ak { int a(android.view.View,int,boolean); }
-keepclassmembers class android.support.v7.view.menu.e { android.support.v7.view.menu.m a(android.view.ViewGroup); }
-keepclassmembers class android.support.v7.widget.ak { void a(); }
-keepclassmembers class android.view.VelocityTracker { android.view.VelocityTracker obtain(); }
-keepclassmembers class com.android.org.conscrypt.Platform { java.io.FileDescriptor getFileDescriptorFromSSLSocket(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.android.org.conscrypt.Platform { void logEvent(java.lang.String); }
-keepclassmembers class java.lang.ThreadGroup { void setMaxPriority(int); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean moveActivityTaskToBack(android.os.IBinder,boolean); }
-keepclassmembers class android.app.ActivityManagerProxy { int getTaskForActivity(android.os.IBinder,boolean); }
-keepclassmembers class com.shapps.mintubeapp.YTubeView { boolean a(java.lang.Class); }
-keepclassmembers class java.text.DecimalFormatSymbols { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.CompoundButton { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String); }
-keepclassmembers class android.support.v7.a.p { void <init>(android.content.Context); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int); }
-keepclassmembers class com.android.internal.policy.PolicyManager { void <clinit>(); }
-keepclassmembers class android.util.SparseIntArray { android.util.SparseIntArray clone(); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger { void setThreadSocketStatsTag(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getRegionCodeForCountryCode(int); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLContext getInstance(java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.SettingsActivity { void j(); }
-keepclassmembers class com.shapps.mintubeapp.SettingsActivity { void onClick(android.view.View); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { com.android.org.conscrypt.OpenSSLKey fromPrivateKey(java.security.PrivateKey); }
-keepclassmembers class com.shapps.mintubeapp.SettingsActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { com.android.org.conscrypt.OpenSSLKey wrapPrivateKey(java.security.PrivateKey); }
-keepclassmembers class android.app.Notification$InboxStyle { void addExtras(android.os.Bundle); }
-keepclassmembers class java.nio.FileChannelImpl$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { android.view.View getDeepestFocusedChild(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo); }
-keepclassmembers class org.apache.http.impl.io.HttpRequestWriter { void writeHeadLine(org.apache.http.HttpMessage); }
-keepclassmembers class android.app.ActivityManagerProxy { void setImmersive(android.os.IBinder,boolean); }
-keepclassmembers class android.support.v4.app.p { void b(android.view.View,android.view.animation.Animation); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { javax.security.auth.x500.X500Principal getIssuer(); }
-keepclassmembers class android.support.v4.app.p { android.support.v4.app.Fragment a(android.os.Bundle,java.lang.String); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { android.view.View findChildWithAccessibilityFocus(); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { void <init>(java.lang.String[]); }
-keepclassmembers class java.util.TreeMap$Bound { java.util.TreeMap$Bound[] values(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean requestVisibleBehind(android.os.IBinder,boolean); }
-keepclassmembers class java.lang.Thread$State { java.lang.Thread$State[] values(); }
-keepclassmembers class android.support.v4.app.p { void a(android.support.v4.app.Fragment,int,int,int,boolean); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getTransientStateView(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void addScrapView(android.view.View,int); }
-keepclassmembers class android.view.ViewGroup { void fillRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroupOverlay getOverlay(); }
-keepclassmembers class org.apache.http.cookie.CookiePathComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.f { boolean a(android.support.v7.view.menu.p,android.support.v7.view.menu.l); }
-keepclassmembers class android.support.v7.view.menu.f { void d(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.view.menu.f { void a(boolean); }
-keepclassmembers class android.widget.Editor$HandleView { void showActionPopupWindow(int); }
-keepclassmembers class android.support.v7.view.menu.f { android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.support.v7.view.menu.f { void b(android.support.v7.view.menu.l); }
-keepclassmembers class android.support.v7.view.menu.f { boolean c(android.support.v7.view.menu.h); }
-keepclassmembers class android.support.v7.view.menu.f { boolean d(android.support.v7.view.menu.h); }
-keepclassmembers class android.support.v7.view.menu.f { android.view.MenuItem getItem(int); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.ViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { boolean damageChildDeferred(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { org.apache.harmony.security.x509.InfoAccessSyntax decode(byte[]); }
-keepclassmembers class java.io.ObjectInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.io.ObjectInputStream { void checkReadPrimitiveTypes(); }
-keepclassmembers class java.util.zip.ZipFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { android.graphics.drawable.GradientDrawable$Orientation[] values(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDesc(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Exception readException(); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { void verifyHostname(java.net.Socket,java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { void readObjectNoData(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass); }
-keepclassmembers class org.apache.http.impl.client.BasicCredentialsProvider { org.apache.http.auth.Credentials matchCredentials(java.util.HashMap,org.apache.http.auth.AuthScope); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { javax.net.ssl.SSLSocketFactory makeSocketFactory(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[]); }
-keepclassmembers class java.math.BigDecimal { void <init>(int,int); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readEnumDesc(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readEnum(boolean); }
-keepclassmembers class android.os.BaseBundle { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class android.widget.RemoteViews$SetDrawableParameters { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { void drawRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int); }
-keepclassmembers class android.os.BaseBundle { java.lang.String getString(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewLongString(boolean); }
-keepclassmembers class android.os.BaseBundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.os.BaseBundle { int[] getIntArray(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { java.lang.String[] getStringArray(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.Class getTypeInternal(); }
-keepclassmembers class java.io.ObjectStreamField { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.MenuInflater$MenuState { void setItem(android.view.MenuItem); }
-keepclassmembers class android.os.IRemoteCallback$Stub { android.os.IRemoteCallback asInterface(android.os.IBinder); }
-keepclassmembers class android.text.util.Linkify { void gatherTelLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Array { void set(java.lang.Object,int,java.lang.Object); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { javax.net.ssl.TrustManagerFactory getInstance(java.lang.String); }
-keepclassmembers class java.lang.reflect.Array { void setByte(java.lang.Object,int,byte); }
-keepclassmembers class java.lang.reflect.Array { void setChar(java.lang.Object,int,char); }
-keepclassmembers class java.lang.reflect.Array { void setBoolean(java.lang.Object,int,boolean); }
-keepclassmembers class java.lang.reflect.Array { void setDouble(java.lang.Object,int,double); }
-keepclassmembers class java.lang.reflect.Array { void setFloat(java.lang.Object,int,float); }
-keepclassmembers class java.lang.reflect.Array { void setInt(java.lang.Object,int,int); }
-keepclassmembers class java.lang.reflect.Array { void setLong(java.lang.Object,int,long); }
-keepclassmembers class java.lang.reflect.Array { void setShort(java.lang.Object,int,short); }
-keepclassmembers class android.view.FocusFinder { android.view.FocusFinder getInstance(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger toBigInteger(); }
-keepclassmembers class com.android.internal.app.AlertController { void setupView(); }
-keepclassmembers class com.android.internal.app.AlertController { boolean setupTitle(android.view.ViewGroup); }
-keepclassmembers class com.android.internal.app.AlertController { void setupContent(android.view.ViewGroup); }
-keepclassmembers class com.android.internal.app.AlertController { void centerButton(android.widget.Button); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void appendServiceLocked(java.lang.String,java.security.Provider$Service); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void initServiceInfo(java.security.Provider); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.util.ArrayList getServices(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext$HostAndPort { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.app.ai { android.os.Bundle a(android.app.Notification); }
-keepclassmembers class android.support.v4.app.ai { void a(android.support.v4.app.aa,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { android.view.ViewGroup$ViewLocationHolder obtain(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(android.util.Property,int[]); }
-keepclassmembers class java.text.DateFormat { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder$IntPropertyValuesHolder clone(); }
-keepclassmembers class java.text.DateFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.animation.ObjectAnimator { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509TrustManager createDefaultX509TrustManager(); }
-keepclassmembers class android.animation.LayoutTransition { void <init>(); }
-keepclassmembers class java.io.PrintWriter { void print(java.lang.String); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(); }
-keepclassmembers class android.graphics.Typeface { void <clinit>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { void <init>(); }
-keepclassmembers class android.widget.Editor$InputMethodState { void <init>(); }
-keepclassmembers class org.apache.http.entity.ByteArrayEntity { void <init>(byte[]); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void log(java.util.logging.Level,java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.http.entity.ByteArrayEntity { void writeTo(java.io.OutputStream); }
-keepclassmembers class java.io.ObjectStreamClass { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock { void <init>(android.content.res.AssetManager,long); }
-keepclassmembers class org.apache.http.impl.client.ClientParamsStack { java.lang.Object getParameter(java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.client.ClientParamsStack { org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object); }
-keepclassmembers class dalvik.system.DexPathList { java.util.ArrayList splitPaths(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.graphics.PointF { void <clinit>(); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexFile loadDexFile(java.io.File,java.io.File); }
-keepclassmembers class java.util.Hashtable { java.util.Set entrySet(); }
-keepclassmembers class java.util.Hashtable { java.util.Collection values(); }
-keepclassmembers class java.util.Hashtable { java.util.Enumeration keys(); }
-keepclassmembers class java.lang.StringBuffer { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String descriptorForSignature(java.lang.String); }
-keepclassmembers class android.animation.Animator { void addListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Field fieldSerialPersistentFields(java.lang.Class); }
-keepclassmembers class com.android.volley.a.d { void a(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,com.android.volley.h); }
-keepclassmembers class com.android.volley.a.d { org.apache.http.client.methods.HttpUriRequest b(com.android.volley.h,java.util.Map); }
-keepclassmembers class android.util.MathUtils { void <clinit>(); }
-keepclassmembers class android.animation.Animator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject newCondition(); }
-keepclassmembers class android.animation.Animator { void reverse(); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession$DefaultHolder { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.i { void <clinit>(); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayed(int,java.lang.Runnable,java.lang.Object,long); }
-keepclassmembers class java.util.Hashtable { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.List makeHierarchy(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void <clinit>(); }
-keepclassmembers class android.support.a.a.b { void <init>(android.content.Context,android.support.a.a.b$a,android.content.res.Resources); }
-keepclassmembers class android.view.Choreographer { void postFrameCallbackDelayed(android.view.Choreographer$FrameCallback,long); }
-keepclassmembers class libcore.util.ZoneInfoDB { void <clinit>(); }
-keepclassmembers class android.support.a.a.b { android.support.a.a.b a(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.Choreographer { void removeFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDomainHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.io.ObjectStreamClass { void resolveProperties(); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDomainHandler { boolean isSpecialDomain(java.lang.String); }
-keepclassmembers class android.support.a.a.b { void a(java.lang.String,android.animation.Animator); }
-keepclassmembers class java.io.Reader { void <init>(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDomainHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord obtainCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.Choreographer { void <clinit>(); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { void <init>(org.apache.http.HeaderIterator); }
-keepclassmembers class android.support.a.a.b { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.io.Writer { void <init>(java.lang.Object); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { java.lang.String nextToken(); }
-keepclassmembers class libcore.net.url.JarHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class android.support.a.a.b { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String toString(); }
-keepclassmembers class java.io.ObjectStreamClass { int primitiveSize(java.lang.Class); }
-keepclassmembers class libcore.net.url.JarHandler { java.lang.String toExternalForm(java.net.URL); }
-keepclassmembers class android.widget.PopupWindow { void preparePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class checkAndGetTcEnumClass(); }
-keepclassmembers class android.support.a.a.b { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.apache.http.message.BasicStatusLine { void <init>(org.apache.http.ProtocolVersion,int,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { void <clinit>(); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { boolean isHttpSeparator(char); }
-keepclassmembers class android.widget.PopupWindow { android.view.WindowManager$LayoutParams createPopupLayout(android.os.IBinder); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { void <clinit>(); }
-keepclassmembers class com.android.volley.i { void <init>(com.android.volley.a,com.android.volley.e,int); }
-keepclassmembers class com.android.volley.i { void <init>(com.android.volley.a,com.android.volley.e,int,com.android.volley.k); }
-keepclassmembers class android.support.v4.g.a$a { java.lang.Object a(android.support.v4.g.a); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <init>(java.util.List,byte[]); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1 { java.lang.ref.SoftReference initialValue(); }
-keepclassmembers class com.shapps.mintubeapp.b { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.b { java.lang.String a(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <clinit>(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void addRequestInterceptor(org.apache.http.HttpRequestInterceptor); }
-keepclassmembers class java.lang.IntegralToString$1 { char[] initialValue(); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void <init>(); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Handler$Callback,boolean); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void addResponseInterceptor(org.apache.http.HttpResponseInterceptor); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <clinit>(); }
-keepclassmembers class java.util.Formatter$1 { java.util.Formatter$CachedDecimalFormat initialValue(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { org.apache.http.protocol.BasicHttpProcessor copy(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void copyInterceptors(org.apache.http.protocol.BasicHttpProcessor); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtTime(android.os.Message,long); }
-keepclassmembers class android.net.Uri { android.net.Uri parse(java.lang.String); }
-keepclassmembers class android.support.v4.app.e { void <clinit>(); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtFrontOfQueue(android.os.Message); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { float getCurrentAnimatorScale(); }
-keepclassmembers class android.widget.PopupWindow { void registerForScrollChanged(android.view.View,int,int,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <clinit>(); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class android.os.Handler { java.lang.String toString(); }
-keepclassmembers class android.view.View { void <init>(android.content.Context); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class android.widget.PopupWindow { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.SettingsActivity$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.util.Calendar { void <init>(java.util.TimeZone); }
-keepclassmembers class org.apache.http.conn.params.ConnManagerParams { long getTimeout(org.apache.http.params.HttpParams); }
-keepclassmembers class android.util.TypedValue { java.lang.String toString(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService$2 { void onGlobalLayout(); }
-keepclassmembers class android.util.TypedValue { void <clinit>(); }
-keepclassmembers class android.support.v7.a.c { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor); }
-keepclassmembers class android.support.v7.a.c { int a(android.content.Context,int); }
-keepclassmembers class org.apache.http.conn.params.ConnManagerParams { int getMaxTotalConnections(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.conn.params.ConnManagerParams { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask { android.os.Handler getHandler(); }
-keepclassmembers class android.net.Uri { boolean isAllowed(char,java.lang.String); }
-keepclassmembers class android.os.AsyncTask { void <init>(); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable newEditable(java.lang.CharSequence); }
-keepclassmembers class android.os.AsyncTask { java.lang.Object postResult(java.lang.Object); }
-keepclassmembers class android.text.Editable$Factory { void <clinit>(); }
-keepclassmembers class android.net.Uri { void checkFileUriExposed(java.lang.String); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.IllegalArgumentException incorrectInputEncoding(java.io.IOException); }
-keepclassmembers class android.animation.StateListAnimator { void <init>(); }
-keepclassmembers class android.os.AsyncTask { android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]); }
-keepclassmembers class android.animation.StateListAnimator { void initAnimatorListener(); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(java.util.Locale); }
-keepclassmembers class android.net.Uri { void <clinit>(); }
-keepclassmembers class java.util.Calendar { java.util.Date getTime(); }
-keepclassmembers class android.animation.StateListAnimator { void setTarget(android.view.View); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { boolean hasNavigationBar(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getCanonicalName(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getName(java.lang.String); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getName(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { void <init>(org.apache.http.conn.routing.HttpRoute,int); }
-keepclassmembers class android.animation.StateListAnimator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String toString(); }
-keepclassmembers class android.util.Base64$Encoder { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread); }
-keepclassmembers class android.widget.BaseAdapter { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Calendar { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.util.AbstractQueue { boolean addAll(java.util.Collection); }
-keepclassmembers class android.support.v4.app.an { android.os.Bundle a(android.support.v4.app.am$a); }
-keepclassmembers class android.app.Service { void stopSelf(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Service { boolean stopSelfResult(int); }
-keepclassmembers class android.app.Service { void setForeground(boolean); }
-keepclassmembers class android.app.Service { void startForeground(int,android.app.Notification); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]); }
-keepclassmembers class android.os.StrictMode { void executeDeathPenalty(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.app.Service { void stopForeground(boolean); }
-keepclassmembers class android.os.StrictMode { void dropboxViolationAsync(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.animation.AnimatorSet$Node { void addDependency(android.animation.AnimatorSet$Dependency); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int); }
-keepclassmembers class android.support.design.widget.u { void <clinit>(); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeAction(android.view.KeyEvent,int); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]); }
-keepclassmembers class java.io.ObjectStreamClass$5 { java.util.WeakHashMap initialValue(); }
-keepclassmembers class android.app.Activity { void <init>(); }
-keepclassmembers class android.os.StrictMode { void onFileUriExposed(java.lang.String); }
-keepclassmembers class android.app.Activity { android.app.LoaderManager getLoaderManager(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[]); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[]); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <clinit>(); }
-keepclassmembers class android.animation.ObjectAnimator { void setIntValues(int[]); }
-keepclassmembers class android.view.SoundEffectConstants { int getContantForFocusDirection(int); }
-keepclassmembers class android.os.StrictMode { java.lang.Object trackActivity(java.lang.Object); }
-keepclassmembers class android.animation.ObjectAnimator { void setFloatValues(float[]); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void hideAfterDelay(); }
-keepclassmembers class java.util.Formatter$FormatToken { void checkFlags(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.os.StrictMode { void <clinit>(); }
-keepclassmembers class android.animation.ObjectAnimator { void setTarget(java.lang.Object); }
-keepclassmembers class java.util.Formatter$FormatToken { java.util.UnknownFormatConversionException unknownFormatConversionException(); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.String toString(); }
-keepclassmembers class libcore.util.ZoneInfo { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources); }
-keepclassmembers class android.view.KeyEvent { void <clinit>(); }
-keepclassmembers class android.support.v4.c.a.a { void <clinit>(); }
-keepclassmembers class android.app.Activity { void startManagingCursor(android.database.Cursor); }
-keepclassmembers class android.app.Activity { void setActionBar(android.widget.Toolbar); }
-keepclassmembers class android.app.Activity { void initWindowDecorActionBar(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Activity { void setDefaultKeyMode(int); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <clinit>(); }
-keepclassmembers class android.app.Activity { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.CursorAdapter$ChangeObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class android.view.View { android.util.SparseArray getAttributeMap(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.f.e { void <clinit>(); }
-keepclassmembers class android.support.v4.f.e { void <init>(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateLanguage(java.lang.String,boolean); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateRegion(java.lang.String,boolean); }
-keepclassmembers class android.app.Activity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class javax.net.SocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateScript(java.lang.String,boolean); }
-keepclassmembers class android.app.Activity { boolean onNavigateUp(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void <clinit>(); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <init>(java.lang.String,android.net.Uri,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.params.BasicHttpParams { org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object); }
-keepclassmembers class android.view.View { void initializeScrollbarsInternal(android.content.res.TypedArray); }
-keepclassmembers class android.view.View { void initScrollCache(); }
-keepclassmembers class android.support.v4.c.a.h { android.graphics.drawable.Drawable a(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.View { android.view.View$ListenerInfo getListenerInfo(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController$ButtonHandler { void <init>(android.content.DialogInterface); }
-keepclassmembers class android.view.View { void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <clinit>(); }
-keepclassmembers class android.support.a.a.b$b { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.a.a.b$b { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.app.Activity { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class android.widget.Editor { void <init>(android.widget.TextView); }
-keepclassmembers class android.app.Activity { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class org.apache.http.auth.AuthState { java.lang.String toString(); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <clinit>(); }
-keepclassmembers class android.support.a.a.c { void a(java.util.ArrayList,char,float[]); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.support.v4.g.l { void a(android.view.LayoutInflater,android.support.v4.g.m); }
-keepclassmembers class android.widget.Editor { void setErrorIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.net.Uri$HierarchicalUri { android.net.Uri readFrom(android.os.Parcel); }
-keepclassmembers class android.app.Activity { void startActivityAsCaller(android.content.Intent,android.os.Bundle,int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String makeSchemeSpecificPart(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void appendSspTo(java.lang.StringBuilder); }
-keepclassmembers class android.widget.Editor { void createInputContentTypeIfNeeded(); }
-keepclassmembers class android.widget.Editor { void createInputMethodStateIfNeeded(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String makeUriString(); }
-keepclassmembers class android.widget.Editor { void updateSpellCheckSpans(int,int,boolean); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.io.DataInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class java.io.DataInputStream { boolean readBoolean(); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.TypeEvaluator setupAnimatorForPath(android.animation.ValueAnimator,android.content.res.TypedArray); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { void <init>(java.lang.String,char); }
-keepclassmembers class java.io.DataInputStream { java.lang.String decodeUTF(int,java.io.DataInput); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { java.lang.String getMessage(); }
-keepclassmembers class android.widget.Editor { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.view.View { android.view.View findLabelForView(android.view.View,int); }
-keepclassmembers class java.net.Socket { void <init>(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener getPositionListener(); }
-keepclassmembers class java.net.Socket { void <init>(java.net.Proxy); }
-keepclassmembers class android.app.Activity { void recreate(); }
-keepclassmembers class android.widget.Button { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.Button { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.app.Activity { void finishAffinity(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.net.Socket { void checkDestination(java.net.InetAddress,int); }
-keepclassmembers class android.app.Activity { android.app.PendingIntent createPendingResult(int,android.content.Intent,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.net.Socket { java.io.InputStream getInputStream(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ObjectAnimator loadObjectAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float); }
-keepclassmembers class java.net.Socket { java.io.OutputStream getOutputStream(); }
-keepclassmembers class android.content.ClipData { void <init>(java.lang.CharSequence,java.lang.String[],android.content.ClipData$Item); }
-keepclassmembers class android.app.Activity { void ensureSearchManager(); }
-keepclassmembers class android.content.ClipData { void <init>(android.content.ClipData); }
-keepclassmembers class android.app.Activity { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class java.nio.ByteOrder { void <clinit>(); }
-keepclassmembers class org.apache.http.client.methods.HttpDelete { java.lang.String getMethod(); }
-keepclassmembers class android.animation.AnimatorInflater { void <clinit>(); }
-keepclassmembers class java.net.Socket { void setSoLinger(boolean,int); }
-keepclassmembers class java.net.Socket { void setSoTimeout(int); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void <init>(); }
-keepclassmembers class android.app.Activity { void setTaskDescription(android.app.ActivityManager$TaskDescription); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void postDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri); }
-keepclassmembers class java.nio.charset.CoderResult { void throwException(); }
-keepclassmembers class android.content.ClipData { void addItem(android.content.ClipData$Item); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <init>(byte[],int); }
-keepclassmembers class java.net.Socket { void shutdownInput(); }
-keepclassmembers class java.nio.charset.CoderResult { void <clinit>(); }
-keepclassmembers class java.net.Socket { void shutdownOutput(); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException indexAndLength(int); }
-keepclassmembers class android.app.Activity { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException failedBoundsCheck(int,int,int); }
-keepclassmembers class java.net.Socket { void checkOpenAndCreate(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieSpec { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieSpec { void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler); }
-keepclassmembers class android.content.ClipData { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.client.DefaultTargetAuthenticationHandler { boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.impl.client.DefaultTargetAuthenticationHandler { java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.nio.charset.Charset); }
-keepclassmembers class java.lang.String { int indexOfSupplementary(int,int); }
-keepclassmembers class android.view.View { android.view.View findUserSetNextFocus(android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity { void a(int); }
-keepclassmembers class android.view.View { android.view.View findViewInsideOutShouldExist(android.view.View,int); }
-keepclassmembers class android.app.Activity { boolean navigateUpTo(android.content.Intent); }
-keepclassmembers class java.lang.String { int lastIndexOfSupplementary(int,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.graphics.drawable.AnimationDrawable,android.content.res.Resources); }
-keepclassmembers class java.text.NumberFormat$Field { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.app.Activity { android.content.Intent getParentActivityIntent(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity { boolean a(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void growArray(int,int); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity { boolean b(java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.database.Observable { void <init>(); }
-keepclassmembers class android.database.Observable { void registerObserver(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner { void <init>(org.apache.http.conn.scheme.SchemeRegistry,java.net.ProxySelector); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity { void onBackPressed(); }
-keepclassmembers class android.database.Observable { void unregisterObserver(java.lang.Object); }
-keepclassmembers class android.support.v7.a.i { android.support.v7.a.p s(); }
-keepclassmembers class android.support.v7.a.i { android.view.Window$Callback a(android.view.Window$Callback); }
-keepclassmembers class android.support.v7.a.i { void a(android.os.Bundle); }
-keepclassmembers class android.view.View { void notifyViewAccessibilityStateChangedIfNeeded(int); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.widget.Editor { boolean startSelectionActionMode(); }
-keepclassmembers class java.lang.String { char[] toCharArray(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[]); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[],int,int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$SelectionModifierCursorController getSelectionController(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$InsertionPointCursorController getInsertionController(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(java.lang.Object); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(boolean); }
-keepclassmembers class android.support.v7.widget.d { void <init>(android.content.Context); }
-keepclassmembers class android.media.AudioAttributes { void <clinit>(); }
-keepclassmembers class android.widget.Editor { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.String { boolean contains(java.lang.CharSequence); }
-keepclassmembers class android.app.Activity { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void <init>(org.apache.harmony.security.x509.DistributionPointName,org.apache.harmony.security.x509.ReasonFlags,org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class android.widget.Editor { void addSpanWatchers(android.text.Spannable); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void <clinit>(); }
-keepclassmembers class java.net.URLEncoder { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLContextImpl { void <init>(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.widget.Editor { void <clinit>(); }
-keepclassmembers class android.support.v4.app.w$b { android.content.Intent a(android.app.Activity); }
-keepclassmembers class android.support.v4.app.w$b { java.lang.String a(android.content.Context,android.content.pm.ActivityInfo); }
-keepclassmembers class android.support.v4.app.w$b { boolean a(android.app.Activity,android.content.Intent); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLContextImpl { void engineInit(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLContextImpl { javax.net.ssl.SSLSocketFactory engineGetSocketFactory(); }
-keepclassmembers class org.apache.http.client.methods.HttpPut { java.lang.String getMethod(); }
-keepclassmembers class android.net.Uri$AbstractPart { void writeTo(android.os.Parcel); }
-keepclassmembers class android.support.v7.a.j { android.view.Window$Callback a(android.view.Window$Callback); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.URLEncoder$1 { boolean isRetained(char); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addConditionWaiter(); }
-keepclassmembers class com.android.volley.d { void <init>(android.os.Handler); }
-keepclassmembers class android.support.v4.g.a$c { java.lang.Object a(android.support.v4.g.a); }
-keepclassmembers class com.android.volley.d { void a(com.android.volley.h,com.android.volley.VolleyError); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signal(); }
-keepclassmembers class com.android.volley.d { void a(com.android.volley.h,com.android.volley.j,java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signalAll(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void reportInterruptAfterWait(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void await(); }
-keepclassmembers class com.google.android.collect.Lists { java.util.ArrayList newArrayList(); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void setTlsChannelId(long,com.android.org.conscrypt.OpenSSLKey); }
-keepclassmembers class java.io.ObjectOutputStream { void checkWritePrimitiveTypes(); }
-keepclassmembers class java.io.ObjectOutputStream { void defaultWriteObject(); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <clinit>(); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class android.view.View { void ensureTransformationInfo(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109VersionHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class android.view.View { android.graphics.Matrix getInverseMatrix(); }
-keepclassmembers class java.lang.Float { java.lang.Float valueOf(float); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109VersionHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.io.ObjectOutputStream { void resetSeenObjects(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class java.lang.Float { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.HttpHost determineTarget(org.apache.http.client.methods.HttpUriRequest); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean isSniEnabledByDefault(); }
-keepclassmembers class java.util.jar.ManifestReader { void <init>(byte[],java.util.jar.Attributes); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void setCertificateValidation(long); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.OpenSSLSessionImpl setupSession(long,long,com.android.org.conscrypt.OpenSSLSessionImpl,java.lang.String,int,boolean); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.params.HttpParams determineParams(org.apache.http.HttpRequest); }
-keepclassmembers class android.support.v4.g.n { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.f { void <init>(android.content.Context); }
-keepclassmembers class android.os.Bundle { java.lang.String toString(); }
-keepclassmembers class android.os.Bundle { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.lang.Object clone(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509KeyManager createDefaultX509KeyManager(); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void enqueueToast(java.lang.String,android.app.ITransientNotification,int); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class android.widget.RemoteViews$4 { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.lang.String[] getDefaultCipherSuites(boolean,boolean); }
-keepclassmembers class android.support.a.a.f$a { void a(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.lang.String toString(); }
-keepclassmembers class dalvik.system.DexPathList$Element { void maybeInit(); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.net.URL findResource(java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void <init>(boolean); }
-keepclassmembers class android.content.ClipDescription { void <init>(java.lang.CharSequence,java.lang.String[]); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.k { boolean d(); }
-keepclassmembers class org.apache.http.impl.client.DefaultProxyAuthenticationHandler { boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.impl.client.DefaultProxyAuthenticationHandler { java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.view.View { void postSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <clinit>(); }
-keepclassmembers class android.content.ClipDescription { void <clinit>(); }
-keepclassmembers class android.view.DisplayAdjustments { void setCompatibilityInfo(android.content.res.CompatibilityInfo); }
-keepclassmembers class java.security.MessageDigest { void update(byte[]); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence,java.lang.String,android.content.Intent,android.net.Uri); }
-keepclassmembers class android.view.DisplayAdjustments { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObjectOverride(java.lang.Object); }
-keepclassmembers class org.apache.http.message.BasicRequestLine { void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forNameUEE(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { void <init>(int,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class java.security.MessageDigest { void <clinit>(); }
-keepclassmembers class android.support.v4.g.p { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.d$d { void <init>(android.support.v7.widget.d,android.content.Context); }
-keepclassmembers class java.util.zip.InflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater,int); }
-keepclassmembers class java.util.Vector { void <init>(int,int); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset getDefaultCharset(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <clinit>(); }
-keepclassmembers class java.nio.charset.Charset { void <clinit>(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { com.android.internal.view.ActionBarPolicy get(android.content.Context); }
-keepclassmembers class android.support.v4.b.e { void <clinit>(); }
-keepclassmembers class java.util.zip.InflaterInputStream { void checkClosed(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <init>(); }
-keepclassmembers class org.apache.http.client.methods.HttpTrace { java.lang.String getMethod(); }
-keepclassmembers class android.view.View { void assignParent(android.view.ViewParent); }
-keepclassmembers class android.content.ClipData$Item { java.lang.String toString(); }
-keepclassmembers class android.content.ClipData$Item { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class org.kxml2.io.KXmlParser { void checkRelaxed(java.lang.String); }
-keepclassmembers class android.view.View { boolean canResolveLayoutDirection(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965VersionAttributeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { void <init>(int); }
-keepclassmembers class android.support.a.a.d { boolean a(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { java.lang.String toString(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readDoctype(boolean); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void a(android.support.v7.view.menu.h,int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <clinit>(); }
-keepclassmembers class android.view.View { void setLayerType(int,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.x509.AlternativeName { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.view.View { void setLayerPaint(android.graphics.Paint); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { android.text.method.SingleLineTransformationMethod getInstance(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { void putSession(javax.net.ssl.SSLSession); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.BasicPoolEntryRef { void <init>(org.apache.http.impl.conn.tsccm.BasicPoolEntry,java.lang.ref.ReferenceQueue); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { void log(java.lang.Throwable); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readNotationDeclaration(); }
-keepclassmembers class libcore.io.Base64 { void <clinit>(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.PathKeyframes ofPath(android.graphics.Path,float); }
-keepclassmembers class java.net.JarURLConnection { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void <clinit>(); }
-keepclassmembers class android.support.v7.a.o { android.support.v7.a.o a(); }
-keepclassmembers class android.support.v7.a.b$b { void <init>(android.content.DialogInterface); }
-keepclassmembers class android.view.View { android.graphics.Rect getClipBounds(); }
-keepclassmembers class com.android.internal.util.XmlUtils { boolean convertValueToBoolean(java.lang.CharSequence,boolean); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <clinit>(); }
-keepclassmembers class java.util.logging.Logger$1 { void publish(java.util.logging.Logger,java.lang.String,java.util.logging.Level,java.lang.String); }
-keepclassmembers class android.app.SharedElementCallback { void <clinit>(); }
-keepclassmembers class java.lang.CaseMapper { void <clinit>(); }
-keepclassmembers class java.lang.Runtime { void <init>(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParser { void <clinit>(); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { void <init>(java.util.List,java.lang.String); }
-keepclassmembers class java.text.StringCharacterIterator { char setIndex(int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicPathHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { void <init>(org.apache.http.HeaderIterator,org.apache.http.message.HeaderValueParser); }
-keepclassmembers class org.apache.http.impl.cookie.BasicPathHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { org.apache.http.HeaderElement nextElement(); }
-keepclassmembers class java.util.jar.Attributes { void <init>(); }
-keepclassmembers class java.util.jar.Attributes { void <init>(int); }
-keepclassmembers class java.lang.Runtime { void addShutdownHook(java.lang.Thread); }
-keepclassmembers class java.security.KeyFactory { void <clinit>(); }
-keepclassmembers class java.lang.Runtime { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.q { void <clinit>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <clinit>(); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String getValue(java.lang.String); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <clinit>(); }
-keepclassmembers class java.lang.Character$Subset { void <init>(java.lang.String); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getNamespaceCount(int); }
-keepclassmembers class android.support.v4.widget.g$a { void <init>(android.support.v4.widget.g); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getText(); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class org.kxml2.io.KXmlParser { int nextTag(); }
-keepclassmembers class android.graphics.Matrix { boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String nextText(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void require(int,java.lang.String,java.lang.String); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setFeature(java.lang.String,boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { void pushContentSource(char[]); }
-keepclassmembers class android.graphics.Matrix { void getValues(float[]); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class android.graphics.Matrix { java.lang.String toString(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <clinit>(); }
-keepclassmembers class android.graphics.Matrix { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.Comparator); }
-keepclassmembers class java.util.TreeSet { void <init>(); }
-keepclassmembers class android.graphics.Matrix { void <clinit>(); }
-keepclassmembers class java.util.IllegalFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class android.content.res.ColorStateList { java.lang.String toString(); }
-keepclassmembers class android.content.res.ColorStateList { void <clinit>(); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader,int); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void <init>(java.util.ServiceLoader,java.util.ServiceLoader); }
-keepclassmembers class java.io.BufferedReader { void checkNotClosed(); }
-keepclassmembers class java.lang.Double { java.lang.Double valueOf(double); }
-keepclassmembers class org.apache.http.impl.DefaultHttpResponseFactory { void <init>(org.apache.http.ReasonPhraseCatalog); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress { void <clinit>(); }
-keepclassmembers class android.view.View { void setBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.graphics.drawable.LevelListDrawable,android.content.res.Resources); }
-keepclassmembers class android.view.View { void setBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.http.impl.DefaultHttpResponseFactory { org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext); }
-keepclassmembers class java.lang.Double { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void growArray(int,int); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { void <init>(java.lang.String,int,java.lang.String,boolean); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { java.lang.String toString(); }
-keepclassmembers class android.view.View { android.view.ViewTreeObserver getViewTreeObserver(); }
-keepclassmembers class com.android.internal.util.XmlUtils { void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class java.nio.Buffer { void <init>(int,int,long); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <clinit>(); }
-keepclassmembers class java.nio.Buffer { void checkIndex(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream { void <init>(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream { int read(byte[],int,int); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer limit(int); }
-keepclassmembers class android.view.RenderNodeAnimator { void init(long); }
-keepclassmembers class java.nio.Buffer { void positionImpl(int); }
-keepclassmembers class android.view.RenderNodeAnimator { void checkMutable(); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isNativeInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.support.a.a.f$e { void <clinit>(); }
-keepclassmembers class android.support.a.a.f$e { void <init>(); }
-keepclassmembers class org.apache.http.impl.client.RedirectLocations { void <init>(); }
-keepclassmembers class android.support.a.a.f$e { void <init>(android.support.a.a.f$e); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.view.RenderNode); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator clone(); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.HeaderElement createHeaderElement(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]); }
-keepclassmembers class android.view.RenderNodeAnimator { void <clinit>(); }
-keepclassmembers class java.lang.System { java.lang.String getenv(java.lang.String); }
-keepclassmembers class java.lang.System { java.util.Properties initUnchangeableSystemProperties(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void <clinit>(); }
-keepclassmembers class android.support.v4.c.a.m$a { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.lang.System { void setDefaultChangeableProperties(java.util.Properties); }
-keepclassmembers class java.lang.System { java.util.Properties createSystemProperties(); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { void <clinit>(); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.NameValuePair createNameValuePair(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Interpolator$Result { void <clinit>(); }
-keepclassmembers class java.lang.System { void checkPropertyName(java.lang.String); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler); }
-keepclassmembers class com.android.volley.j { com.android.volley.j a(com.android.volley.VolleyError); }
-keepclassmembers class com.android.volley.j { com.android.volley.j a(java.lang.Object,com.android.volley.a$a); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int a(int); }
-keepclassmembers class java.lang.System { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <clinit>(); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void <clinit>(); }
-keepclassmembers class android.support.v4.app.n { void <init>(android.app.Activity,android.content.Context,android.os.Handler,int); }
-keepclassmembers class android.view.GLES20Canvas { float[] getLineStorage(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void <init>(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void init(java.io.OutputStream,int,org.apache.http.params.HttpParams); }
-keepclassmembers class android.support.v4.app.n { void b(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.util.Pair { android.util.Pair create(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.client.params.HttpClientParams { boolean isRedirecting(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.client.params.HttpClientParams { void setRedirecting(org.apache.http.params.HttpParams,boolean); }
-keepclassmembers class org.apache.http.client.params.HttpClientParams { boolean isAuthenticating(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(); }
-keepclassmembers class java.net.InterfaceAddress { java.lang.String toString(); }
-keepclassmembers class java.lang.reflect.Method { void <clinit>(); }
-keepclassmembers class android.view.View { void setOverScrollMode(int); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.String toString(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(int); }
-keepclassmembers class java.io.ByteArrayOutputStream { byte[] toByteArray(); }
-keepclassmembers class java.io.ByteArrayOutputStream { java.lang.String toString(); }
-keepclassmembers class android.support.v4.c.a.n$a { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.io.ByteArrayOutputStream { java.lang.String toString(java.lang.String); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { boolean loadData(java.lang.String); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readZoneTab(libcore.io.BufferIterator,int,int); }
-keepclassmembers class android.provider.Settings$System { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void <clinit>(); }
-keepclassmembers class android.provider.Settings$System { android.net.Uri getUriFor(java.lang.String); }
-keepclassmembers class android.view.View { boolean canResolveTextDirection(); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { java.lang.String getSchemeName(); }
-keepclassmembers class org.apache.http.protocol.RequestUserAgent { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { org.apache.http.Header authenticate(org.apache.http.auth.Credentials,java.lang.String,boolean); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager { void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager { org.apache.http.impl.conn.tsccm.AbstractConnPool createConnectionPool(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager { org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager { org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object); }
-keepclassmembers class android.view.View { boolean canResolveTextAlignment(); }
-keepclassmembers class org.apache.http.impl.client.DefaultRedirectHandler { boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.text.method.TextKeyListener { void initPrefs(android.content.Context); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void b(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitInstructionSet(java.lang.String); }
-keepclassmembers class dalvik.system.VMRuntime { void <clinit>(); }
-keepclassmembers class android.net.SSLSessionCache { void <init>(android.content.Context); }
-keepclassmembers class android.provider.Settings$System { void <clinit>(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int,java.lang.String); }
-keepclassmembers class android.database.AbstractCursor { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(int[],org.apache.harmony.security.x501.AttributeValue); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.net.InetAddress,int); }
-keepclassmembers class android.net.http.AndroidHttpClient$2 { org.apache.http.protocol.BasicHttpProcessor createHttpProcessor(); }
-keepclassmembers class android.net.http.AndroidHttpClient$2 { org.apache.http.protocol.HttpContext createHttpContext(); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetSocketAddress createUnresolved(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void appendName(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class java.util.LinkedList { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet { void <init>(); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String toString(); }
-keepclassmembers class android.database.AbstractCursor { int getColumnIndexOrThrow(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { java.util.Queue createFreeConnQueue(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { java.util.Queue createWaitingThreadQueue(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { java.util.Map createRouteToPoolMap(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onAttachedToWindow(); }
-keepclassmembers class java.util.IllegalFormatConversionException { void <init>(char,java.lang.Class); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool); }
-keepclassmembers class java.util.IllegalFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class java.io.File { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute { org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute,java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet$Builder play(android.animation.Animator); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String region(int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void checkRange(java.lang.String,int,int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureMetaStateIsNormalized(int); }
-keepclassmembers class java.util.LinkedList { java.util.ListIterator listIterator(int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensurePointerCountIsOneForThisAction(android.view.MotionEvent); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent); }
-keepclassmembers class java.io.File { java.lang.String getAbsolutePath(); }
-keepclassmembers class java.io.File { java.io.File getAbsoluteFile(); }
-keepclassmembers class java.util.jar.Attributes$Name { void <clinit>(); }
-keepclassmembers class java.io.File { java.io.File getParentFile(); }
-keepclassmembers class java.util.LinkedList { boolean removeFirstOccurrenceImpl(java.lang.Object); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void appendEvent(java.lang.StringBuilder,int,android.view.InputEvent,boolean); }
-keepclassmembers class android.support.v7.a.d { android.content.res.Resources getResources(); }
-keepclassmembers class android.text.SpannableStringBuilder { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void problem(java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class getEnclosingClass(java.lang.Class); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.reflect.AccessibleObject getEnclosingMethodOrConstructor(java.lang.Class); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicCommentHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationAccess { int getInnerClassFlags(java.lang.Class,int); }
-keepclassmembers class android.support.a.a.f$c { void <init>(); }
-keepclassmembers class java.io.File { java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isAnonymousClass(java.lang.Class); }
-keepclassmembers class java.io.File { java.net.URI toURI(); }
-keepclassmembers class android.text.SpannableStringBuilder { void <clinit>(); }
-keepclassmembers class java.io.File { java.net.URL toURL(); }
-keepclassmembers class android.support.v4.g.k { void a(android.view.LayoutInflater,android.view.LayoutInflater$Factory2); }
-keepclassmembers class android.support.a.a.f$c { void a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.lang.reflect.Field { void <init>(java.lang.reflect.ArtField); }
-keepclassmembers class java.io.File { void <clinit>(); }
-keepclassmembers class android.app.RemoteInput$Builder { void <init>(java.lang.String); }
-keepclassmembers class java.util.ArrayList { void <init>(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLDSAPrivateKey { com.android.org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.DSAPrivateKey); }
-keepclassmembers class java.util.ArrayList { void <init>(java.util.Collection); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput build(); }
-keepclassmembers class android.transition.Transition { void <init>(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void <init>(float,java.lang.Object); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe$ObjectKeyframe clone(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.String toString(); }
-keepclassmembers class android.app.SearchableInfo { void addActionKey(android.app.SearchableInfo$ActionKeyInfo); }
-keepclassmembers class java.util.ArrayList { java.lang.IndexOutOfBoundsException throwIndexOutOfBoundsException(int,int); }
-keepclassmembers class java.lang.reflect.Field { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(int,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { java.util.Iterator iterator(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Message); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(byte[]); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri build(); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void <init>(org.apache.http.HttpHost,java.net.InetAddress); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner$1 { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void connectProxy(org.apache.http.HttpHost,boolean); }
-keepclassmembers class com.shapps.mintubeapp.a.b { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void connectTarget(boolean); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void tunnelTarget(boolean); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void layerProtocol(boolean); }
-keepclassmembers class android.os.Message { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { void <init>(int); }
-keepclassmembers class java.util.ArrayList { java.util.Iterator iterator(); }
-keepclassmembers class android.app.SearchableInfo { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { org.apache.http.conn.routing.HttpRoute toRoute(); }
-keepclassmembers class android.support.v7.view.d { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.transition.TransitionValues { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicSecureHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.BasicSecureHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils { java.lang.String formatDate(java.util.Date,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils { void <clinit>(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator ofFloat(float[]); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils { java.lang.String formatDate(java.util.Date); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void assertNotAborted(); }
-keepclassmembers class android.animation.ValueAnimator { void setIntValues(int[]); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void assertValid(org.apache.http.conn.OperatedClientConnection); }
-keepclassmembers class android.animation.ValueAnimator { void setFloatValues(float[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getDeclaredField(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] ipStrToBytes(java.lang.String); }
-keepclassmembers class android.graphics.Paint$Cap { void <clinit>(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getDeclaredFieldInternal(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.String ipBytesToStr(byte[]); }
-keepclassmembers class java.lang.Class { boolean classNameImpliesTopLevel(); }
-keepclassmembers class android.os.ResultReceiver { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.Application { void <init>(); }
-keepclassmembers class android.os.ResultReceiver { void <clinit>(); }
-keepclassmembers class android.animation.ValueAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.app.Application { void registerOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class java.lang.Class { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { java.io.InputStream loadMetadata(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <clinit>(); }
-keepclassmembers class libcore.io.IoUtils$FileReader { java.lang.String toString(java.nio.charset.Charset); }
-keepclassmembers class com.android.volley.m$a { void <init>(); }
-keepclassmembers class android.os.ServiceManagerProxy { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class java.lang.Class { java.lang.Object cast(java.lang.Object); }
-keepclassmembers class com.android.volley.m$a { void a(java.lang.String,long); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener); }
-keepclassmembers class java.lang.Class { java.lang.String toString(); }
-keepclassmembers class android.view.ViewTreeObserver { void checkIsAlive(); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class java.lang.ThreadLocal { void <init>(); }
-keepclassmembers class android.view.View$MeasureSpec { java.lang.String toString(int); }
-keepclassmembers class android.animation.ValueAnimator { void <clinit>(); }
-keepclassmembers class java.net.AddressCache { void <init>(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$Values initializeValues(java.lang.Thread); }
-keepclassmembers class java.net.AddressCache { void put(java.lang.String,int,java.net.InetAddress[]); }
-keepclassmembers class java.lang.ThreadLocal { void <clinit>(); }
-keepclassmembers class org.apache.http.util.EncodingUtils { byte[] getBytes(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.AddressCache { void putUnknownHost(java.lang.String,int,java.lang.String); }
-keepclassmembers class org.apache.http.util.EncodingUtils { byte[] getAsciiBytes(java.lang.String); }
-keepclassmembers class java.util.Date { java.lang.Object clone(); }
-keepclassmembers class android.support.v4.app.ab$d { void <init>(android.content.Context); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.app.ab$d { android.support.v4.app.ab$e b(); }
-keepclassmembers class android.util.Pools$SynchronizedPool { void <init>(int); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class android.graphics.Region { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.security.Provider$Service,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { java.util.ArrayList getServices(java.lang.String); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(); }
-keepclassmembers class android.content.ComponentName { java.lang.String toShortString(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { java.security.NoSuchAlgorithmException notFound(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <clinit>(); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void <init>(); }
-keepclassmembers class android.support.v7.view.a { android.support.v7.view.a a(android.content.Context); }
-keepclassmembers class android.content.ComponentName { android.content.ComponentName readFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.Paint$Join { void <clinit>(); }
-keepclassmembers class android.content.ComponentName { void <clinit>(); }
-keepclassmembers class android.transition.Transition { void <clinit>(); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { libcore.icu.NativeDecimalFormat$FieldPositionIterator forFieldPosition(java.text.FieldPosition); }
-keepclassmembers class java.util.Date { java.lang.String toString(); }
-keepclassmembers class android.app.PendingIntent { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { void <init>(); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setExtension(java.lang.String); }
-keepclassmembers class java.util.Date { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AdapterView { void removeView(android.view.View); }
-keepclassmembers class dalvik.system.SocketTagger { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setRawInput(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearRawInput(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setPreferredDomesticCarrierCode(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCodeSource(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource); }
-keepclassmembers class android.support.v4.g.ad { void <clinit>(); }
-keepclassmembers class android.provider.Settings { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearPreferredDomesticCarrierCode(); }
-keepclassmembers class android.provider.Settings { boolean canDrawOverlays(android.content.Context); }
-keepclassmembers class libcore.net.url.FtpHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class libcore.net.url.FileURLConnection { void <init>(java.net.URL); }
-keepclassmembers class libcore.net.url.FtpHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.widget.AdapterView { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class libcore.net.url.FileURLConnection { void connect(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpContext { java.lang.Object getAttribute(java.lang.String); }
-keepclassmembers class org.apache.http.protocol.BasicHttpContext { void setAttribute(java.lang.String,java.lang.Object); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.lang.String getContentTypeForPlainFiles(); }
-keepclassmembers class java.util.TimeZone { java.lang.Object clone(); }
-keepclassmembers class android.widget.AdapterView { void selectionChanged(); }
-keepclassmembers class java.net.Inet4Address { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void assertAttached(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService$3 { void onGlobalLayout(); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(java.io.FileDescriptor); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(java.net.Proxy); }
-keepclassmembers class libcore.net.url.FileURLConnection { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.net.PlainSocketImpl { void checkNotClosed(); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class java.net.PlainSocketImpl { java.io.OutputStream getOutputStream(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksConnect(java.net.InetAddress,int,int); }
-keepclassmembers class android.widget.TextView$SavedState { void <clinit>(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksRequestConnection(java.net.InetAddress,int); }
-keepclassmembers class java.net.PlainSocketImpl { void socksAccept(); }
-keepclassmembers class android.support.v4.app.aj$a { android.app.Notification b(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.util.TimeZone { void setID(java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl { void socksSendRequest(int,java.net.InetAddress,int); }
-keepclassmembers class java.net.PlainSocketImpl { void socksBind(); }
-keepclassmembers class java.util.TimeZone { void <clinit>(); }
-keepclassmembers class android.transition.Visibility { void captureValues(android.transition.TransitionValues,int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicExpiresHandler { void <init>(java.lang.String[]); }
-keepclassmembers class java.net.PlainSocketImpl { int read(byte[],int,int); }
-keepclassmembers class android.graphics.DashPathEffect { void <init>(float[],float); }
-keepclassmembers class org.apache.http.impl.cookie.BasicExpiresHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.CharSequence createFromParcel(android.os.Parcel); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder { void <clinit>(); }
-keepclassmembers class android.text.SpannableString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.util.ServiceLoader { void <init>(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class java.util.ServiceLoader { java.util.Iterator iterator(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.ServiceLoader { void internalLoad(); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceFirst(java.lang.String); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceAll(java.lang.String); }
-keepclassmembers class java.util.regex.Matcher { boolean find(int); }
-keepclassmembers class com.shapps.mintubeapp.GetPermission$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.net.HttpURLConnection { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void <clinit>(); }
-keepclassmembers class android.transition.Visibility { void <clinit>(); }
-keepclassmembers class java.util.regex.Matcher { void ensureMatch(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { void <clinit>(); }
-keepclassmembers class android.transition.AutoTransition { void init(); }
-keepclassmembers class java.net.Inet6Address { java.net.Inet6Address getByAddress(java.lang.String,byte[],int); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(java.lang.Throwable); }
-keepclassmembers class com.android.volley.a.i { void <clinit>(); }
-keepclassmembers class com.android.volley.a.i { byte[] o(); }
-keepclassmembers class libcore.io.Streams { byte[] readFullyNoClose(java.io.InputStream); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { boolean canResponseHaveBody(org.apache.http.HttpRequest,org.apache.http.HttpResponse); }
-keepclassmembers class libcore.io.Streams { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { void <clinit>(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void cd(); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext); }
-keepclassmembers class java.net.Inet6Address { void <clinit>(); }
-keepclassmembers class java.net.Inet6Address { java.lang.String toString(); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <clinit>(); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.message.BufferedHeader { org.apache.http.HeaderElement[] getElements(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void getFile(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void connectInternal(); }
-keepclassmembers class java.math.Conversion { void <clinit>(); }
-keepclassmembers class java.math.BigDecimal$1 { void <clinit>(); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { org.apache.http.HttpResponse doReceiveResponse(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void login(); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.content.res.Resources { void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder); }
-keepclassmembers class android.content.res.Resources { android.content.res.Resources getSystem(); }
-keepclassmembers class android.graphics.Path { void <init>(android.graphics.Path); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence getText(int); }
-keepclassmembers class javax.net.ssl.SSLSocket { void shutdownInput(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { int next(); }
-keepclassmembers class javax.net.ssl.SSLSocket { void shutdownOutput(); }
-keepclassmembers class android.widget.TextView$4 { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readBoolean(); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readOctetString(); }
-keepclassmembers class android.content.res.Resources { java.lang.String getString(int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readString(org.apache.harmony.security.asn1.ASN1StringType); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <init>(); }
-keepclassmembers class java.util.ResourceBundle { java.util.MissingResourceException missingResourceException(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void setType(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readUTCTime(); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class org.json.JSONObject$1 { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readGeneralizedTime(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <clinit>(); }
-keepclassmembers class android.text.Layout$Ellipsizer { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <clinit>(); }
-keepclassmembers class android.graphics.Bitmap$2 { void <clinit>(); }
-keepclassmembers class java.math.RoundingMode { void <clinit>(); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { int getDimensionPixelSize(int); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.app.Notification$BuilderRemoteViews { android.app.Notification$BuilderRemoteViews clone(); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$Impl { java.util.Map newAccessOrder(); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$Impl { void <init>(java.io.File); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$Impl { java.lang.String fileName(java.lang.String,int); }
-keepclassmembers class java.util.Formatter { void <init>(java.lang.Appendable,java.util.Locale); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$Impl { void logReadError(java.lang.String,java.io.File,java.lang.Throwable); }
-keepclassmembers class android.content.res.Resources { int getColor(int); }
-keepclassmembers class java.util.Formatter { void checkNotClosed(); }
-keepclassmembers class android.graphics.Path { void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction); }
-keepclassmembers class android.graphics.Path { void addRoundRect(float,float,float,float,float[],android.graphics.Path$Direction); }
-keepclassmembers class android.ddm.DdmHandleHeap { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class android.content.res.Resources { boolean getBoolean(int); }
-keepclassmembers class java.util.ResourceBundle { java.util.Locale strip(java.util.Locale); }
-keepclassmembers class java.util.ResourceBundle { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void enter(boolean); }
-keepclassmembers class android.content.res.Resources { int getInteger(int); }
-keepclassmembers class android.content.res.Resources { float getFloat(int); }
-keepclassmembers class java.util.Formatter { java.lang.Object getArgument(java.lang.Object[],int,java.util.Formatter$FormatSpecifierParser,java.lang.Object,boolean); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$Impl { void logWriteError(java.lang.String,java.io.File,java.lang.Throwable); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getXml(int); }
-keepclassmembers class android.graphics.Path { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getLayout(int); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getAnimation(int); }
-keepclassmembers class android.graphics.Color { void <clinit>(); }
-keepclassmembers class java.util.Formatter { java.util.IllegalFormatConversionException badArgumentType(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromBoolean(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromHashCode(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.graphics.Paint getTempPaint(android.graphics.Paint); }
-keepclassmembers class android.content.res.Resources { java.io.InputStream openRawResource(int,android.util.TypedValue); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <clinit>(); }
-keepclassmembers class android.app.Notification$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.net.http.AndroidHttpClient$1 { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.app.Notification$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[]); }
-keepclassmembers class android.content.res.Resources { void getValue(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.app.Notification$Action { android.app.Notification$Action clone(); }
-keepclassmembers class java.text.SimpleDateFormat { void validatePatternCharacter(char); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.util.Locale); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <clinit>(); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromPercent(); }
-keepclassmembers class android.view.KeyCharacterMap$KeyData { void <init>(); }
-keepclassmembers class android.content.res.Resources { android.content.res.Resources$Theme newTheme(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <clinit>(); }
-keepclassmembers class android.app.Notification$Action { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void <init>(); }
-keepclassmembers class android.support.v7.a.q { void <clinit>(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromNull(); }
-keepclassmembers class android.support.v7.a.q { void <init>(android.app.Activity,boolean); }
-keepclassmembers class android.support.v7.a.q { void <init>(android.app.Dialog); }
-keepclassmembers class android.view.ViewDebug { java.lang.String formatIntToHexString(int); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { void <init>(); }
-keepclassmembers class android.content.res.Resources { java.lang.String adjustLanguageTag(java.lang.String); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { void <init>(); }
-keepclassmembers class android.content.res.Resources { int getIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceName(int); }
-keepclassmembers class org.apache.harmony.security.x509.Time { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask$Status { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourcePackageName(int); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceEntryName(int); }
-keepclassmembers class android.content.res.Resources { void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceTypeName(int); }
-keepclassmembers class android.content.res.Resources { void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.support.v7.a.q { android.content.Context c(); }
-keepclassmembers class android.widget.CheckedTextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.CheckedTextView { void <clinit>(); }
-keepclassmembers class android.widget.CheckedTextView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.v7.a.q { void c(boolean); }
-keepclassmembers class java.text.SimpleDateFormat { void appendNumber(java.lang.StringBuffer,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void <clinit>(); }
-keepclassmembers class android.animation.LayoutTransition { void addTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable loadDrawableForCookie(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.textservice.TextInfo { void <clinit>(); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { void <init>(android.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback); }
-keepclassmembers class android.graphics.Bitmap$Config { void <clinit>(); }
-keepclassmembers class java.util.Formatter { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.Runnable); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void output(byte[],int,int); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.Runnable,java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void input(byte[],int,int); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void output(byte[]); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void input(byte[]); }
-keepclassmembers class android.view.ViewDebug { java.lang.Object resolveId(android.content.Context,int); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void output(java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void input(java.lang.String); }
-keepclassmembers class android.view.InputEvent { void recycle(); }
-keepclassmembers class android.app.SearchableInfo$1 { android.app.SearchableInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.res.Resources { void <init>(); }
-keepclassmembers class android.view.InputEvent { void <clinit>(); }
-keepclassmembers class java.text.SimpleDateFormat { void <clinit>(); }
-keepclassmembers class libcore.util.EmptyArray { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void checkNotStarted(); }
-keepclassmembers class android.support.v7.view.g$b { java.lang.Object a(java.lang.String,java.lang.Class[],java.lang.Object[]); }
-keepclassmembers class java.lang.Thread { void setName(java.lang.String); }
-keepclassmembers class android.support.v7.widget.bb$1 { void <init>(android.support.v7.widget.bb); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.SweepGradient { void <init>(float,float,int[],float[]); }
-keepclassmembers class java.lang.Thread { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.EnglishReasonPhraseCatalog { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.routing.RouteInfo$LayerType { void <clinit>(); }
-keepclassmembers class android.support.v4.g.a.a { void <clinit>(); }
-keepclassmembers class android.support.v4.b.e$b { android.content.Intent a(android.content.ComponentName); }
-keepclassmembers class android.support.v4.g.c { java.lang.Object a(android.support.v4.g.c$a); }
-keepclassmembers class java.io.DataOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.Class getFactoryClass(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.http.impl.io.AbstractMessageParser { void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <clinit>(); }
-keepclassmembers class org.apache.http.HttpHost { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String[] getWebViewNativeLibraryPaths(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.HttpHost { java.lang.String toURI(); }
-keepclassmembers class android.webkit.WebViewFactory { void loadNativeLibrary(); }
-keepclassmembers class org.apache.http.HttpHost { java.lang.String toHostString(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void <clinit>(); }
-keepclassmembers class android.webkit.WebViewFactory { void <clinit>(); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.IWebViewUpdateService getUpdateService(); }
-keepclassmembers class android.view.ViewOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String toString(); }
-keepclassmembers class android.content.pm.ActivityInfo { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.io.AbstractMessageParser { org.apache.http.HttpMessage parse(); }
-keepclassmembers class java.util.Formatter$CachedDecimalFormat { libcore.icu.NativeDecimalFormat update(libcore.icu.LocaleData,java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$3 { android.widget.RemoteViews createFromParcel(android.os.Parcel); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { java.lang.String getDefaultAlgorithm(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void <clinit>(); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RefQueueWorker { void <init>(java.lang.ref.ReferenceQueue,org.apache.http.impl.conn.tsccm.RefQueueHandler); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.AbsListView { void setOverScrollMode(int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.widget.AbsListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <clinit>(); }
-keepclassmembers class android.net.http.AndroidHttpClient { android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context); }
-keepclassmembers class java.util.SimpleTimeZone { void checkRange(int,int,int); }
-keepclassmembers class java.util.SimpleTimeZone { void checkDay(int,int); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.MemoryMappedFile mmapRO(java.lang.String); }
-keepclassmembers class android.support.v4.widget.j { java.lang.Object a(android.content.Context); }
-keepclassmembers class android.net.http.AndroidHttpClient { void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams); }
-keepclassmembers class android.support.v4.g.j { void a(android.view.LayoutInflater,android.support.v4.g.m); }
-keepclassmembers class com.android.volley.a.c { void <init>(java.io.File,int); }
-keepclassmembers class com.android.volley.a.a { void <init>(com.android.volley.a.f); }
-keepclassmembers class android.widget.AbsListView { void setChoiceMode(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources); }
-keepclassmembers class org.apache.http.conn.HttpHostConnectException { void <init>(org.apache.http.HttpHost,java.net.ConnectException); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerEnabledUiThread(boolean); }
-keepclassmembers class com.android.volley.a.a { void a(java.lang.String,com.android.volley.h,com.android.volley.VolleyError); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollEnabled(boolean); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollAlwaysVisible(boolean); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.net.http.AndroidHttpClient { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultResponseParser { void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams); }
-keepclassmembers class com.android.volley.a.c { int e(java.io.InputStream); }
-keepclassmembers class android.support.v4.app.aq { void <init>(android.content.Context); }
-keepclassmembers class java.util.SimpleTimeZone { void <clinit>(); }
-keepclassmembers class android.support.v4.app.aq { void <clinit>(); }
-keepclassmembers class android.support.v4.app.aq { android.support.v4.app.aq a(android.content.Context); }
-keepclassmembers class android.support.v4.app.aq { android.support.v4.app.aq a(android.content.ComponentName); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { void <clinit>(); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { java.util.Locale constructLocaleFromString(java.lang.String); }
-keepclassmembers class android.app.ActivityTransitionState { boolean startExitBackTransition(android.app.Activity); }
-keepclassmembers class com.android.volley.a.c { void a(java.lang.String,com.android.volley.a$a); }
-keepclassmembers class java.net.Socks4Message { void <init>(); }
-keepclassmembers class android.support.v4.g.e { void <clinit>(); }
-keepclassmembers class com.android.volley.a.c { void b(java.lang.String); }
-keepclassmembers class android.text.SpannedString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class com.android.volley.a.c { java.io.File c(java.lang.String); }
-keepclassmembers class java.net.Socks4Message { java.lang.String getErrorString(int); }
-keepclassmembers class android.text.style.LocaleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.text.Normalizer$Form { void <clinit>(); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.lang.String,boolean); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void <clinit>(); }
-keepclassmembers class android.util.Patterns { void <clinit>(); }
-keepclassmembers class java.io.FileOutputStream { void close(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { void <init>(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <clinit>(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { org.apache.http.RequestLine getRequestLine(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger); }
-keepclassmembers class android.preference.PreferenceManager { java.lang.String getDefaultSharedPreferencesName(android.content.Context); }
-keepclassmembers class android.widget.AbsListView { void setSelector(android.graphics.drawable.Drawable); }
-keepclassmembers class android.util.IntProperty { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void onAttachedToWindow(); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { java.lang.String getString(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView { android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long); }
-keepclassmembers class android.support.v4.app.ab$o { android.app.Notification a(android.support.v4.app.ab$d,android.support.v4.app.ab$e); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void <init>(android.text.DynamicLayout); }
-keepclassmembers class android.text.Layout$1 { void <clinit>(); }
-keepclassmembers class android.graphics.RectF { void <clinit>(); }
-keepclassmembers class android.app.Dialog$ListenersHandler { void <init>(android.app.Dialog); }
-keepclassmembers class java.lang.RealToString$1 { java.lang.RealToString initialValue(); }
-keepclassmembers class android.ddm.DdmHandleHello { void <clinit>(); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <clinit>(); }
-keepclassmembers class android.transition.ChangeBounds { void <init>(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.client.AbstractAuthenticationHandler { void <clinit>(); }
-keepclassmembers class android.transition.ChangeBounds { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.v4.f.d { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v4.app.ab$h { android.app.Notification a(android.support.v4.app.ab$d,android.support.v4.app.ab$e); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setFixedLine(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void <init>(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.LevelListDrawable$LevelListState cloneConstantState(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setGeneralDesc(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobile(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setTollFree(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPersonalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSharedCost(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPremiumRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoip(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPager(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setEmergency(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoicemail(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setShortCode(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setUan(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.transition.ChangeBounds { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setStandardRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCarrierSpecific(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.shapps.mintubeapp.CustomVolley.AppController { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { boolean isSecure(java.net.Socket); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(java.net.Proxy); }
-keepclassmembers class java.net.URL { java.net.URI toURI(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNoInternationalDialling(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class java.net.URL { java.lang.String toExternalForm(); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { void <clinit>(); }
-keepclassmembers class android.view.DragEvent { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView { void clearScrollingCache(); }
-keepclassmembers class android.view.DragEvent { void <clinit>(); }
-keepclassmembers class java.net.URL { void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { android.text.method.PasswordTransformationMethod getInstance(); }
-keepclassmembers class java.net.URL { void <clinit>(); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.String getMessage(); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String); }
-keepclassmembers class android.text.Layout$Alignment { void <clinit>(); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.util.Locale { java.util.Locale forLanguageTag(java.lang.String); }
-keepclassmembers class java.util.Locale { void <init>(boolean,java.lang.String,java.lang.String); }
-keepclassmembers class dalvik.system.DexFile { dalvik.system.DexFile loadDex(java.lang.String,java.lang.String,int); }
-keepclassmembers class dalvik.system.DexFile { long openDexFile(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Map,java.util.Map,boolean); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void createPopupWindow(); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Locale { java.lang.Object clone(); }
-keepclassmembers class java.io.InvalidClassException { java.lang.String getMessage(); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayLanguage(java.util.Locale); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayCountry(java.util.Locale); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void tunnelTarget(boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class android.util.Base64 { java.lang.String encodeToString(byte[],int); }
-keepclassmembers class android.util.Base64 { void <clinit>(); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayScript(java.util.Locale); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayVariant(java.util.Locale); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createFloat(float); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor tagSocket(java.io.FileDescriptor); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createPaint(android.graphics.Paint); }
-keepclassmembers class libcore.io.BlockGuardOs { void untagSocket(java.io.FileDescriptor); }
-keepclassmembers class android.graphics.CanvasProperty { void <init>(long); }
-keepclassmembers class org.apache.http.util.ExceptionUtils { java.lang.reflect.Method getInitCauseMethod(); }
-keepclassmembers class org.apache.http.util.ExceptionUtils { void initCause(java.lang.Throwable,java.lang.Throwable); }
-keepclassmembers class android.widget.AbsListView { boolean sendToTextFilter(int,int,android.view.KeyEvent); }
-keepclassmembers class java.util.MissingFormatArgumentException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class java.util.MissingFormatArgumentException { java.lang.String getMessage(); }
-keepclassmembers class android.widget.AbsListView { void createTextFilter(boolean); }
-keepclassmembers class android.util.LruCache { void <init>(int); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECPrivateKey { com.android.org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.ECPrivateKey); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECPrivateKey { com.android.org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.ECPrivateKey,com.android.org.conscrypt.OpenSSLECGroupContext); }
-keepclassmembers class java.util.Locale { java.lang.String toNewString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map); }
-keepclassmembers class android.util.LruCache { int safeSizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.text.BreakIterator { void setText(java.lang.String); }
-keepclassmembers class java.text.BreakIterator { java.text.BreakIterator getWordInstance(java.util.Locale); }
-keepclassmembers class android.text.AutoText { android.text.AutoText getInstance(android.view.View); }
-keepclassmembers class android.app.Dialog { void setOnCancelListener(android.content.DialogInterface$OnCancelListener); }
-keepclassmembers class android.app.Dialog { void setOnDismissListener(android.content.DialogInterface$OnDismissListener); }
-keepclassmembers class android.graphics.FontListParser$Config { void <init>(); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class android.widget.AbsListView { void <clinit>(); }
-keepclassmembers class java.io.BufferedInputStream { java.io.IOException streamClosed(); }
-keepclassmembers class android.text.AutoText { void <clinit>(); }
-keepclassmembers class java.util.Locale { java.lang.String adjustLanguageCode(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes { void <init>(android.graphics.Path,float); }
-keepclassmembers class android.support.v7.widget.ao { void <clinit>(); }
-keepclassmembers class java.util.Grego { void <clinit>(); }
-keepclassmembers class org.apache.http.client.utils.URIUtils { java.net.URI createURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.io.BufferedInputStream { void reset(); }
-keepclassmembers class com.android.internal.os.BinderInternal { void <clinit>(); }
-keepclassmembers class android.support.v4.g.af { void <clinit>(); }
-keepclassmembers class org.apache.http.client.utils.URIUtils { java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createXFloatKeyframes(); }
-keepclassmembers class org.json.JSONArray { void <init>(); }
-keepclassmembers class org.apache.http.client.utils.URIUtils { java.net.URI resolve(java.net.URI,java.net.URI); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createYFloatKeyframes(); }
-keepclassmembers class org.json.JSONArray { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.e.d { void <clinit>(); }
-keepclassmembers class android.animation.PathKeyframes { void <clinit>(); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createYIntKeyframes(); }
-keepclassmembers class android.support.v4.app.k { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createXIntKeyframes(); }
-keepclassmembers class org.json.JSONArray { java.lang.Object get(int); }
-keepclassmembers class java.util.Locale { void <clinit>(); }
-keepclassmembers class java.util.logging.LogRecord { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,float,float); }
-keepclassmembers class android.support.v4.app.k { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { void <init>(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void <clinit>(); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config readFamilies(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Family readFamily(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.json.JSONObject { void <init>(); }
-keepclassmembers class java.math.BigInteger { void <init>(int,long); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void <init>(android.widget.Editor); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Alias readAlias(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.json.JSONObject { void <init>(java.lang.String); }
-keepclassmembers class org.json.JSONArray { java.lang.String toString(); }
-keepclassmembers class java.math.BigInteger { void <init>(java.lang.String); }
-keepclassmembers class java.util.TreeMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v4.app.k { java.lang.Object onRetainNonConfigurationInstance(); }
-keepclassmembers class org.json.JSONObject { java.lang.String checkName(java.lang.String); }
-keepclassmembers class java.lang.StringToReal { java.lang.NumberFormatException invalidReal(java.lang.String,boolean); }
-keepclassmembers class java.math.BigInteger { void <init>(byte[]); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(int); }
-keepclassmembers class org.json.JSONObject { java.lang.Object get(java.lang.String); }
-keepclassmembers class libcore.io.HeapBufferIterator { libcore.io.BufferIterator iterator(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler { boolean domainMatch(java.lang.String,java.lang.String); }
-keepclassmembers class java.math.BigInteger { java.math.BigInt getBigInt(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger abs(); }
-keepclassmembers class java.math.BigInteger { void prepareJavaRepresentation(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger add(java.math.BigInteger); }
-keepclassmembers class android.graphics.drawable.Ripple { android.graphics.Paint getTempPaint(android.graphics.Paint); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void assertNotOpen(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeft(int); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void assertOpen(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(java.lang.String,int[]); }
-keepclassmembers class org.json.JSONObject { java.lang.String getString(java.lang.String); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(android.util.Property,int[]); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void bind(java.net.Socket,org.apache.http.params.HttpParams); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]); }
-keepclassmembers class android.net.TrafficStats { void <clinit>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.StringIndexOutOfBoundsException indexAndLength(int); }
-keepclassmembers class libcore.reflect.AnnotationMember$DefaultValues { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[]); }
-keepclassmembers class android.graphics.drawable.Ripple { void <clinit>(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void <init>(android.hardware.display.IDisplayManager); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.hardware.display.DisplayManagerGlobal getInstance(); }
-keepclassmembers class org.json.JSONObject { java.lang.String toString(); }
-keepclassmembers class android.app.Notification$Action$Builder { void <init>(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments); }
-keepclassmembers class java.io.PrintWriter { java.io.PrintWriter append(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Action$Builder { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[]); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger pow(int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger multiply(java.math.BigInteger); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class android.app.Notification$Action$Builder { android.app.Notification$Action$Builder addRemoteInput(android.app.RemoteInput); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger divide(java.math.BigInteger); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger[] divideAndRemainder(java.math.BigInteger); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void registerCallbackIfNeededLocked(); }
-keepclassmembers class org.json.JSONObject { void <clinit>(); }
-keepclassmembers class android.text.TextLine { void <init>(); }
-keepclassmembers class libcore.icu.NativePluralRules { libcore.icu.NativePluralRules forLocale(java.util.Locale); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setLength(int); }
-keepclassmembers class java.nio.charset.IllegalCharsetNameException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.c.a.d { android.graphics.drawable.Drawable a(android.graphics.drawable.Drawable); }
-keepclassmembers class java.math.BigInteger { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupGetter(java.lang.Class); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupValue(java.lang.Object,android.animation.Keyframe); }
-keepclassmembers class android.view.ViewConfiguration { int getLongPressTimeout(); }
-keepclassmembers class android.support.v7.widget.ao { void t(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ao { android.support.v7.widget.ao$v a(android.view.View); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String toString(); }
-keepclassmembers class android.view.ViewConfiguration { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getMethodName(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.g.s$a { int b(android.view.MotionEvent,int); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.support.v4.g.s$a { float c(android.view.MotionEvent,int); }
-keepclassmembers class java.lang.reflect.AbstractMethod { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.support.v4.g.s$a { float d(android.view.MotionEvent,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <clinit>(); }
-keepclassmembers class android.text.method.DialerKeyListener { android.text.method.DialerKeyListener getInstance(); }
-keepclassmembers class android.support.v7.a.l { int a(android.content.Context,int); }
-keepclassmembers class android.text.method.DialerKeyListener { void <clinit>(); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,java.lang.Object[]); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,int,java.lang.Object[]); }
-keepclassmembers class android.app.ActivityThread { void <clinit>(); }
-keepclassmembers class android.view.animation.PathInterpolator { void initQuad(float,float); }
-keepclassmembers class android.view.animation.PathInterpolator { void parseInterpolatorFromTypeArray(android.content.res.TypedArray); }
-keepclassmembers class android.view.animation.PathInterpolator { void initCubic(float,float,float,float); }
-keepclassmembers class android.view.ViewRootImpl { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.widget.ArrayAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class java.net.ProxySelector { void <clinit>(); }
-keepclassmembers class com.android.volley.m { void <clinit>(); }
-keepclassmembers class android.widget.SpellChecker { void <init>(android.widget.TextView); }
-keepclassmembers class android.widget.SpellChecker { void setLocale(java.util.Locale); }
-keepclassmembers class java.lang.HexStringParser { double parseDouble(java.lang.String); }
-keepclassmembers class java.lang.HexStringParser { void parseHexSign(java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationFactory { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.lang.HexStringParser { java.lang.String getNormalizedSignificand(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class java.lang.HexStringParser { void <clinit>(); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void set(java.lang.Object); }
-keepclassmembers class android.support.v4.e.c { void <clinit>(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseFormatToken(int); }
-keepclassmembers class android.text.TextLine { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ao { void k(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.UnknownFormatConversionException unknownFormatConversionException(); }
-keepclassmembers class android.os.Build { java.lang.String deriveFingerprint(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask$1 { void <init>(); }
-keepclassmembers class android.os.Build { java.lang.String[] getStringList(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Build { java.lang.String getString(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.InhibitAnyPolicy { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.os.AsyncTask$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.support.v4.e.b { void <clinit>(); }
-keepclassmembers class java.io.BufferedOutputStream { void <init>(java.io.OutputStream,int); }
-keepclassmembers class java.io.BufferedOutputStream { void checkNotClosed(); }
-keepclassmembers class android.widget.SpellChecker { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void <init>(org.apache.http.io.SessionOutputBuffer,int); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void writeClosingChunk(); }
-keepclassmembers class android.graphics.Paint$Style { void <clinit>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.util.Iterator iterator(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void flushCache(); }
-keepclassmembers class java.util.Collections$1 { java.lang.Object next(); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.lang.String); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.File); }
-keepclassmembers class android.support.v7.widget.ao { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class java.io.FileInputStream { void close(); }
-keepclassmembers class org.apache.http.HttpVersion { org.apache.http.ProtocolVersion forVersion(int,int); }
-keepclassmembers class org.apache.http.HttpVersion { void <clinit>(); }
-keepclassmembers class org.apache.http.HttpVersion { void <init>(int,int); }
-keepclassmembers class android.support.design.widget.h { void <init>(android.support.design.widget.aa,android.support.design.widget.n); }
-keepclassmembers class android.support.design.widget.h { void l(); }
-keepclassmembers class android.support.design.widget.h { void <clinit>(); }
-keepclassmembers class com.android.volley.a.d$a { java.lang.String getMethod(); }
-keepclassmembers class android.support.v4.c.a.l { android.support.v4.c.a.j$a b(); }
-keepclassmembers class libcore.icu.NativeNormalizer$1 { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void <clinit>(); }
-keepclassmembers class java.util.Arrays { java.util.List asList(java.lang.Object[]); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void <init>(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { void <clinit>(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void <init>(android.view.Window,java.util.ArrayList,android.app.SharedElementCallback,boolean); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion); }
-keepclassmembers class java.util.Arrays { void checkBinarySearchBounds(int,int,int); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setEpicenter(android.view.View); }
-keepclassmembers class android.support.design.widget.a { void <clinit>(); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine); }
-keepclassmembers class com.android.internal.util.Preconditions { float checkArgumentFinite(float,java.lang.String); }
-keepclassmembers class java.util.concurrent.FutureTask { void <init>(java.util.concurrent.Callable); }
-keepclassmembers class android.net.Uri$OpaqueUri { android.net.Uri readFrom(android.os.Parcel); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { void <clinit>(); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String toString(); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeRunTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.transition.TransitionManager { void <clinit>(); }
-keepclassmembers class java.util.Arrays { void checkStartAndEnd(int,int,int); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { boolean isUnsafe(char); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { boolean isSeparator(char); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext { void <init>(); }
-keepclassmembers class java.util.concurrent.FutureTask { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext { void sessionRemoved(javax.net.ssl.SSLSession); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext { void putSession(javax.net.ssl.SSLSession); }
-keepclassmembers class android.support.v4.f.b { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { java.lang.String[] getCNs(java.security.cert.X509Certificate); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.text.MeasuredText { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.net.NetworkInterface { void <init>(java.lang.String,int,java.util.List,java.util.List); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { void <clinit>(); }
-keepclassmembers class java.net.NetworkInterface { java.net.NetworkInterface getByNameInternal(java.lang.String,java.lang.String[]); }
-keepclassmembers class java.security.cert.CertificateFactory { void <clinit>(); }
-keepclassmembers class java.net.NetworkInterface { java.lang.String[] readIfInet6Lines(); }
-keepclassmembers class android.support.v4.app.ab$m { android.app.Notification a(android.support.v4.app.ab$d,android.support.v4.app.ab$e); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker); }
-keepclassmembers class android.text.method.LinkMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <clinit>(); }
-keepclassmembers class java.util.Arrays { float[] copyOf(float[],int); }
-keepclassmembers class java.util.Arrays { int[] copyOf(int[],int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources); }
-keepclassmembers class java.net.NetworkInterface { int readIntFile(java.lang.String); }
-keepclassmembers class java.net.NetworkInterface { java.net.SocketException rethrowAsSocketException(java.lang.Exception); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class); }
-keepclassmembers class android.text.MeasuredText { void <clinit>(); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class java.net.NetworkInterface { void <clinit>(); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void <init>(int); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { byte[] toByteArray(); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void setLength(int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void <init>(int); }
-keepclassmembers class java.text.ParseException { void <init>(java.lang.String,int); }
-keepclassmembers class libcore.icu.ICU { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.BasicPoolEntry { void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute,java.lang.ref.ReferenceQueue); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper$1 { void <init>(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { java.lang.String toString(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(boolean); }
-keepclassmembers class android.graphics.Path$FillType { void <clinit>(); }
-keepclassmembers class android.support.v4.g.b.a { void <clinit>(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { int addClient(android.view.accessibility.IAccessibilityManagerClient,int); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { org.apache.http.params.HttpParams setIntParameter(java.lang.String,int); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(android.view.MotionEvent); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException invalidDigest(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.av { void <clinit>(); }
-keepclassmembers class android.widget.Filter { void <init>(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtainNoHistory(android.view.MotionEvent); }
-keepclassmembers class java.util.jar.JarVerifier { void <init>(java.lang.String,java.util.jar.Manifest,java.util.HashMap); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException failedVerification(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence,android.widget.Filter$FilterListener); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(int,int,int,int); }
-keepclassmembers class android.view.DisplayEventReceiver { void <init>(android.os.Looper); }
-keepclassmembers class android.graphics.Insets { void <clinit>(); }
-keepclassmembers class android.support.v4.c.a.n { android.support.v4.c.a.j$a b(); }
-keepclassmembers class android.os.StrictMode$4 { android.os.StrictMode$AndroidBlockGuardPolicy initialValue(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class java.util.jar.JarVerifier { void <clinit>(); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { int getInt(java.lang.String,int); }
-keepclassmembers class android.os.SystemProperties { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class android.os.SystemProperties { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { void transform(android.graphics.Matrix); }
-keepclassmembers class android.os.SystemProperties { long getLong(java.lang.String,long); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void throwException(java.lang.RuntimeException); }
-keepclassmembers class android.app.FragmentManagerImpl { void <init>(); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.Resources getResources(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { void <init>(java.net.InetAddress,org.apache.http.HttpHost,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType); }
-keepclassmembers class android.content.res.TypedArray { int length(); }
-keepclassmembers class android.content.res.TypedArray { int getIndexCount(); }
-keepclassmembers class android.system.OsConstants { java.lang.String errnoName(int); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost,boolean); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost); }
-keepclassmembers class org.apache.http.impl.auth.DigestSchemeFactory { org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String axisToString(int); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { java.security.PublicKey getPublicKey(); }
-keepclassmembers class android.view.MotionEvent { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.m { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.m { void <init>(); }
-keepclassmembers class java.util.Currency { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList a(android.content.Context); }
-keepclassmembers class android.support.v7.widget.m { android.graphics.PorterDuffColorFilter a(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.Currency { java.lang.String getSymbol(java.util.Locale); }
-keepclassmembers class java.util.Currency { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void <init>(com.android.org.conscrypt.SSLParametersImpl); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getPositionDescription(); }
-keepclassmembers class java.lang.RuntimePermission { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.m { android.support.v7.widget.m a(); }
-keepclassmembers class android.content.res.TypedArray { void recycle(); }
-keepclassmembers class java.util.WeakHashMap { void <init>(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void <init>(java.net.Socket,java.lang.String,int,boolean,com.android.org.conscrypt.SSLParametersImpl); }
-keepclassmembers class android.support.v7.widget.m { void a(android.graphics.drawable.Drawable,android.support.v7.widget.ay,int[]); }
-keepclassmembers class java.util.WeakHashMap { java.util.WeakHashMap$Entry[] newEntryArray(int); }
-keepclassmembers class android.support.v7.widget.m { void a(java.lang.String,android.support.v7.widget.m$c); }
-keepclassmembers class android.support.v7.widget.m { void a(android.support.v7.widget.m); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void checkOpen(); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.content.res.TypedArray { void <init>(android.content.res.Resources,int[],int[],int); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList b(android.content.Context); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList c(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseTransition(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList d(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void decodeExtensionValue(); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList e(android.content.Context); }
-keepclassmembers class android.app.FragmentManagerImpl { void makeInactive(android.app.Fragment); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseItem(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList e(android.content.Context,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.io.OutputStream getOutputStream(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState cloneConstantState(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList i(android.content.Context); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void waitForHandshake(); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList h(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <clinit>(); }
-keepclassmembers class android.view.WindowManagerGlobal { void <init>(); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowManager getWindowManagerService(); }
-keepclassmembers class android.text.BoringLayout { void <clinit>(); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowSession peekWindowSession(); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.WindowManagerGlobal getInstance(); }
-keepclassmembers class android.app.FragmentManagerImpl { void checkStateLoss(); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <clinit>(); }
-keepclassmembers class org.json.JSONTokener { void <init>(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setChannelIdPrivateKey(java.security.PrivateKey); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void a(int); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context,java.lang.Object); }
-keepclassmembers class android.view.MenuInflater { void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu); }
-keepclassmembers class android.view.MenuInflater { void inflate(int,android.view.Menu); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setNpnProtocols(byte[]); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setAlpnProtocols(byte[]); }
-keepclassmembers class libcore.net.url.FileHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class org.json.JSONTokener { org.json.JSONException syntaxError(java.lang.String); }
-keepclassmembers class org.json.JSONTokener { java.lang.String toString(); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <clinit>(); }
-keepclassmembers class libcore.net.url.FileHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class android.view.MenuInflater { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.params.ConnRouteParams { void <clinit>(); }
-keepclassmembers class java.util.jar.JarFile { java.util.Enumeration entries(); }
-keepclassmembers class android.app.FragmentManagerImpl { void saveFragmentViewState(android.app.Fragment); }
-keepclassmembers class android.graphics.Paint$Align { void <clinit>(); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.Manifest getManifest(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void <init>(int[],java.lang.String,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String toOIDString(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void validateOid(int[]); }
-keepclassmembers class java.util.jar.JarFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void g(); }
-keepclassmembers class android.util.SizeF { java.lang.String toString(); }
-keepclassmembers class android.util.SizeF { void <init>(float,float); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void a(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getPageHeight(android.widget.TextView); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void k(); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void l(); }
-keepclassmembers class android.transition.TransitionSet { void <init>(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <clinit>(); }
-keepclassmembers class java.util.logging.Level { void <clinit>(); }
-keepclassmembers class java.util.GregorianCalendar { void <clinit>(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setOrdering(int); }
-keepclassmembers class android.support.v7.widget.m$a { android.graphics.drawable.Drawable a(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { void setContentCharset(org.apache.http.params.HttpParams,java.lang.String); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { int onStartCommand(android.content.Intent,int,int); }
-keepclassmembers class android.content.res.Configuration { void <clinit>(); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { boolean useExpectContinue(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { void setUseExpectContinue(org.apache.http.params.HttpParams,boolean); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { void setUserAgent(org.apache.http.params.HttpParams,java.lang.String); }
-keepclassmembers class android.app.ActivityManagerNative { void <clinit>(); }
-keepclassmembers class android.content.Intent$1 { android.content.Intent createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.h { android.support.v4.d.a.b a(int); }
-keepclassmembers class android.support.v7.view.menu.h { android.support.v4.d.a.b a(android.support.v4.g.d); }
-keepclassmembers class android.app.AlertDialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class android.support.v4.g.ar { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.h { boolean b(); }
-keepclassmembers class android.app.AlertDialog { int resolveDialogTheme(android.content.Context,int); }
-keepclassmembers class java.nio.charset.UnsupportedCharsetException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.h { java.lang.String e(); }
-keepclassmembers class java.lang.Character { java.lang.Character valueOf(char); }
-keepclassmembers class android.support.design.widget.f { void <init>(android.support.design.widget.aa,android.support.design.widget.n); }
-keepclassmembers class android.content.res.AssetManager { void ensureSystemAssets(); }
-keepclassmembers class java.lang.Character { void checkValidCodePoint(int); }
-keepclassmembers class org.apache.http.util.VersionInfo { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { void <init>(boolean); }
-keepclassmembers class android.transition.TransitionValuesMaps { void <init>(); }
-keepclassmembers class org.apache.http.impl.io.IdentityInputStream { void <init>(org.apache.http.io.SessionInputBuffer); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setActionProvider(android.view.ActionProvider); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap); }
-keepclassmembers class org.apache.http.util.VersionInfo { org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class org.apache.http.message.ParserCursor { void <init>(int,int); }
-keepclassmembers class org.apache.http.message.ParserCursor { void updatePos(int); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharArrayBuffer copy(java.nio.CharArrayBuffer,int,boolean); }
-keepclassmembers class android.view.DisplayInfo { void <clinit>(); }
-keepclassmembers class java.lang.Long { java.lang.NumberFormatException invalidLong(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String toString(); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class libcore.net.MimeUtils { void <clinit>(); }
-keepclassmembers class libcore.net.MimeUtils { java.io.InputStream getContentTypesPropertiesStream(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateMirrorMatrix(float); }
-keepclassmembers class libcore.icu.LocaleData { java.util.Locale mapInvalidAndNullLocales(java.util.Locale); }
-keepclassmembers class android.os.Looper { android.os.Looper getMainLooper(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <clinit>(); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData initLocaleData(java.util.Locale); }
-keepclassmembers class android.content.res.AssetManager { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.os.Looper { void <clinit>(); }
-keepclassmembers class libcore.icu.LocaleData { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void verifyState(android.content.res.TypedArray); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 { org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources); }
-keepclassmembers class android.database.ContentObserver { void <init>(android.os.Handler); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Notification$Builder { void <init>(android.content.Context); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { org.apache.http.RequestLine getRequestLine(); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.URISyntaxException { java.lang.String getMessage(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.support.v7.widget.al { void <clinit>(); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.drawable.Drawable getProfileBadgeDrawable(); }
-keepclassmembers class android.support.v7.widget.al { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.Bitmap getProfileBadge(); }
-keepclassmembers class android.app.Notification$Builder { void resetStandardTemplate(android.widget.RemoteViews); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintStream); }
-keepclassmembers class android.support.v7.widget.al { void setSelector(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintWriter); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyCharacterMap load(int); }
-keepclassmembers class android.view.KeyCharacterMap { char getMatch(int,char[],int); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109DomainHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { boolean getKeyData(int,android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class java.lang.Throwable { java.lang.String toString(); }
-keepclassmembers class android.view.KeyCharacterMap { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable initCause(java.lang.Throwable); }
-keepclassmembers class java.lang.Boolean { void <clinit>(); }
-keepclassmembers class android.view.KeyCharacterMap { void <clinit>(); }
-keepclassmembers class java.lang.Throwable { void addSuppressed(java.lang.Throwable); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set entrySet(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set keySet(); }
-keepclassmembers class android.support.v4.c.a.k { android.support.v4.c.a.j$a b(); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews generateActionButton(android.app.Notification$Action); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109DomainHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.app.Notification$Builder { void applyLargeIconBackground(android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { void removeLargeIconBackground(android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { void processSmallRightIcon(int,android.widget.RemoteViews); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.Name { javax.security.auth.x500.X500Principal getX500Principal(); }
-keepclassmembers class android.view.RenderNode { android.view.RenderNode create(java.lang.String,android.view.View); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.lang.String getName(java.lang.String); }
-keepclassmembers class android.view.RenderNode { long getNativeDisplayList(); }
-keepclassmembers class com.android.volley.a.c$a { com.android.volley.a.c$a a(java.io.InputStream); }
-keepclassmembers class android.util.Size { java.lang.String toString(); }
-keepclassmembers class com.android.volley.a.c$a { com.android.volley.a$a a(byte[]); }
-keepclassmembers class android.view.RenderNode { boolean setOutline(android.graphics.Outline); }
-keepclassmembers class com.android.volley.a.c$a { boolean a(java.io.OutputStream); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <clinit>(); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { com.android.internal.util.NotificationColorUtil getInstance(android.content.Context); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.Bitmap$1 { android.graphics.Bitmap createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.InputDevice$1 { android.view.InputDevice createFromParcel(android.os.Parcel); }
-keepclassmembers class android.app.Notification$Builder { void setBuilderContentView(android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { void setBuilderBigContentView(android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class java.nio.FileChannelImpl { void <init>(java.io.Closeable,java.io.FileDescriptor,int); }
-keepclassmembers class android.app.Notification$Builder { void setBuilderHeadsUpContentView(android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class android.view.RenderNode { void addAnimator(android.view.RenderNodeAnimator); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { boolean isGrayscaleIcon(android.content.Context,int); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$3 { void a(com.android.volley.VolleyError); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.LinearLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.LinearLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { void <clinit>(); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstanceForFullKeyboard(); }
-keepclassmembers class org.apache.http.impl.io.SocketInputBuffer { void <init>(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.String toString(); }
-keepclassmembers class java.nio.FileChannelImpl { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <clinit>(); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String toTitleCase(java.lang.String); }
-keepclassmembers class android.media.AudioAttributes$Builder { void <init>(); }
-keepclassmembers class org.json.JSONStringer$Scope { void <clinit>(); }
-keepclassmembers class java.security.Security { void registerDefaultProviders(); }
-keepclassmembers class android.app.RemoteInput { void <clinit>(); }
-keepclassmembers class android.widget.TextView$Drawables { void <init>(android.content.Context); }
-keepclassmembers class java.util.TreeMap$Relation { void <clinit>(); }
-keepclassmembers class java.util.LinkedHashMap { void init(); }
-keepclassmembers class java.security.Security { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class java.util.LinkedHashMap { void addNewEntry(java.lang.Object,java.lang.Object,int,int); }
-keepclassmembers class android.graphics.Path$Direction { void <clinit>(); }
-keepclassmembers class java.security.Security { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.bd { void <clinit>(); }
-keepclassmembers class java.util.LinkedHashMap { void addNewEntryForNullKey(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.bd { void a(android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.util.LinkedHashMap { java.util.HashMap$HashMapEntry constructorNewEntry(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class org.apache.http.conn.routing.BasicRouteDirector { int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo); }
-keepclassmembers class android.support.v7.widget.bd { void b(android.view.View); }
-keepclassmembers class org.apache.http.message.BasicHttpRequest { void <init>(org.apache.http.RequestLine); }
-keepclassmembers class org.apache.http.message.BasicHttpRequest { org.apache.http.RequestLine getRequestLine(); }
-keepclassmembers class org.apache.http.message.BasicHttpRequest { void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newKeyIterator(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newValueIterator(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newEntryIterator(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$1 { void <clinit>(); }
-keepclassmembers class java.nio.charset.UnmappableCharacterException { java.lang.String getMessage(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt copy(); }
-keepclassmembers class android.view.Choreographer$1 { android.view.Choreographer initialValue(); }
-keepclassmembers class java.math.BigInt { java.lang.NumberFormatException invalidBigInteger(java.lang.String); }
-keepclassmembers class java.math.BigInt { java.math.BigInt newBigInt(); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void <init>(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void setHeader(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.params.HttpParams getParams(); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void setParams(org.apache.http.params.HttpParams); }
-keepclassmembers class java.text.DateFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <init>(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Method); }
-keepclassmembers class android.net.Uri$PathPart { java.lang.String getEncoded(); }
-keepclassmembers class org.apache.http.protocol.RequestConnControl { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart readFrom(android.os.Parcel); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart from(java.lang.String,java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart makeAbsolute(android.net.Uri$PathPart); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void <clinit>(); }
-keepclassmembers class android.net.Uri$PathPart { void <clinit>(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String getTimeZoneDisplayName(java.util.TimeZone,boolean,int); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { void <init>(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { void init(java.io.InputStream,int,org.apache.http.params.HttpParams); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.graphics.Point { void <clinit>(); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer allocate(int); }
-keepclassmembers class android.os.Parcel { void writeSerializable(java.io.Serializable); }
-keepclassmembers class android.os.Parcel { int readExceptionCode(); }
-keepclassmembers class java.util.Arrays$ArrayList { void <init>(java.lang.Object[]); }
-keepclassmembers class android.os.Parcel { void readException(int,java.lang.String); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { java.lang.String getMessage(); }
-keepclassmembers class android.os.Parcel { java.util.HashMap readHashMap(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { android.os.Bundle readBundle(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { android.util.Size readSize(); }
-keepclassmembers class android.os.Parcel { android.util.SizeF readSizeF(); }
-keepclassmembers class android.os.Parcel { java.util.ArrayList readArrayList(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { android.util.SparseArray readSparseArray(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { android.util.SparseBooleanArray readSparseBooleanArray(); }
-keepclassmembers class android.os.Parcel { java.lang.Object[] readArray(java.lang.ClassLoader); }
-keepclassmembers class android.util.ArrayMap { void <clinit>(); }
-keepclassmembers class android.util.ArrayMap { android.util.MapCollections getCollection(); }
-keepclassmembers class android.support.v4.widget.aa { void <clinit>(); }
-keepclassmembers class android.telephony.PhoneNumberUtils { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$9 { android.view.IWindowManager create(); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String a(); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String a(java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String b(); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String c(); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String b(java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String c(java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String d(); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String e(); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String f(); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String h(); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String i(); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String j(); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String k(); }
-keepclassmembers class com.shapps.mintubeapp.c { java.lang.String g(); }
-keepclassmembers class android.widget.Toast$TN { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void growArray(int,int); }
-keepclassmembers class android.os.PersistableBundle { java.lang.String toString(); }
-keepclassmembers class android.app.ActivityManager { void <clinit>(); }
-keepclassmembers class android.os.Parcel { void <clinit>(); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri readFrom(android.os.Parcel); }
-keepclassmembers class java.text.RuleBasedBreakIterator { void checkOffset(int); }
-keepclassmembers class android.support.v4.c.a.j$b { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.os.PersistableBundle { void <clinit>(); }
-keepclassmembers class org.apache.http.message.BasicHeader { org.apache.http.HeaderElement[] getElements(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.http.message.BasicHeader { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.ProxySelectorImpl { void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void <clinit>(); }
-keepclassmembers class java.net.ProxySelectorImpl { java.net.Proxy selectOneProxy(java.net.URI); }
-keepclassmembers class java.net.ProxySelectorImpl { java.net.Proxy lookupProxy(java.lang.String,java.lang.String,java.net.Proxy$Type,int); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Builder buildUpon(); }
-keepclassmembers class android.graphics.Region$Op { void <clinit>(); }
-keepclassmembers class java.util.TreeMap { java.util.Set keySet(); }
-keepclassmembers class java.util.logging.Logger { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.TreeMap { java.util.Set entrySet(); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { void <init>(org.apache.http.HttpEntity,org.apache.http.conn.ManagedClientConnection,boolean); }
-keepclassmembers class java.util.logging.Logger { java.util.ResourceBundle loadResourceBundle(java.lang.String); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { java.io.InputStream getContent(); }
-keepclassmembers class java.util.logging.Logger { void initResourceBundle(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.X509PublicKey { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.auth.RFC2617Scheme { java.lang.String getRealm(); }
-keepclassmembers class org.apache.http.impl.auth.RFC2617Scheme { java.util.Map getParameters(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { android.support.design.widget.h a(); }
-keepclassmembers class java.util.logging.Logger { void setParent(java.util.logging.Logger); }
-keepclassmembers class java.util.TreeMap { void <clinit>(); }
-keepclassmembers class java.net.ServerSocket { void <init>(int,int,java.net.InetAddress); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { org.apache.http.impl.entity.EntitySerializer createEntitySerializer(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { org.apache.http.HttpResponseFactory createHttpResponseFactory(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams); }
-keepclassmembers class java.net.ServerSocket { java.net.Socket accept(); }
-keepclassmembers class java.net.ServerSocket { void checkListen(int); }
-keepclassmembers class android.text.TextDirectionHeuristics { void <clinit>(); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList add(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void sendRequestHeader(org.apache.http.HttpRequest); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest); }
-keepclassmembers class com.android.volley.d$a { void run(); }
-keepclassmembers class java.net.ServerSocket { void setSoTimeout(int); }
-keepclassmembers class android.support.v7.a.k { void <init>(android.content.Context,android.view.Window,android.support.v7.a.e); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void receiveResponseEntity(org.apache.http.HttpResponse); }
-keepclassmembers class libcore.io.Libcore { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { javax.security.auth.x500.X500Principal getSubjectX500Principal(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void appendRecord(android.view.accessibility.AccessibilityRecord); }
-keepclassmembers class java.net.URLStreamHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.c.a.c { android.graphics.drawable.Drawable a(android.graphics.drawable.Drawable); }
-keepclassmembers class java.net.ServerSocket { void checkOpen(); }
-keepclassmembers class java.util.logging.Logger { void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.EventObject { void <init>(java.lang.Object); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void <clinit>(); }
-keepclassmembers class java.util.logging.Logger { void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.net.URLStreamHandler { void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String toExternalForm(java.net.URL,boolean); }
-keepclassmembers class android.support.design.widget.Snackbar { void <clinit>(); }
-keepclassmembers class android.support.v7.a.k { boolean a(android.support.v7.a.k$d); }
-keepclassmembers class android.support.v7.a.k$d { android.support.v7.view.menu.m a(android.support.v7.view.menu.l$a); }
-keepclassmembers class android.support.design.widget.Snackbar { android.support.design.widget.Snackbar a(android.view.View,java.lang.CharSequence,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String toString(); }
-keepclassmembers class java.util.logging.Logger { void <clinit>(); }
-keepclassmembers class android.support.v7.a.k$d { void a(android.content.Context); }
-keepclassmembers class android.support.v7.a.k { boolean b(android.support.v7.a.k$d,android.view.KeyEvent); }
-keepclassmembers class java.lang.Integer { java.lang.NumberFormatException invalidInt(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <clinit>(); }
-keepclassmembers class android.support.v7.a.k { boolean b(android.support.v7.a.k$d); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <init>(java.lang.String,java.text.DecimalFormatSymbols); }
-keepclassmembers class android.support.v7.view.g$a { void <clinit>(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe$FloatKeyframe clone(); }
-keepclassmembers class android.support.v7.view.g$a { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void <init>(int); }
-keepclassmembers class android.support.v7.a.k { void e(int); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class org.apache.http.impl.auth.BasicSchemeFactory { org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class android.widget.ScrollBarDrawable { void <init>(); }
-keepclassmembers class sun.misc.Unsafe { sun.misc.Unsafe getUnsafe(); }
-keepclassmembers class android.support.v7.a.k { int g(int); }
-keepclassmembers class sun.misc.Unsafe { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews { void addAction(android.widget.RemoteViews$Action); }
-keepclassmembers class android.widget.RemoteViews { android.widget.RemoteViews clone(); }
-keepclassmembers class android.widget.RemoteViews { void addView(int,android.widget.RemoteViews); }
-keepclassmembers class android.widget.RemoteViews { void removeAllViews(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewText(int,java.lang.CharSequence); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewTextSize(int,int,float); }
-keepclassmembers class android.widget.RemoteViews { void setViewVisibility(int,int); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewCompoundDrawablesRelative(int,int,int,int,int); }
-keepclassmembers class android.widget.RemoteViews { void setImageViewResource(int,int); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewCompoundDrawablesRelativeColorFilter(int,int,int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.security.cert.X509Certificate { void <init>(); }
-keepclassmembers class org.json.JSONStringer { void <init>(); }
-keepclassmembers class android.widget.RemoteViews { void setImageViewBitmap(int,android.graphics.Bitmap); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer array(); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer endArray(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPattern(long,boolean,java.lang.String); }
-keepclassmembers class android.widget.RemoteViews { void setProgressBar(int,int,int,boolean); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer object(); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer endObject(); }
-keepclassmembers class android.widget.RemoteViews { void setOnClickPendingIntent(int,android.app.PendingIntent); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer open(org.json.JSONStringer$Scope,java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void <init>(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams); }
-keepclassmembers class android.widget.RemoteViews { void setProgressTintList(int,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.RemoteViews { void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int); }
-keepclassmembers class android.support.v7.a.k { void v(); }
-keepclassmembers class android.widget.RemoteViews { void setProgressBackgroundTintList(int,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.RemoteViews { void setProgressIndeterminateTintList(int,android.content.res.ColorStateList); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews { void setViewPadding(int,int,int,int,int); }
-keepclassmembers class android.widget.RemoteViews { void setBoolean(int,java.lang.String,boolean); }
-keepclassmembers class android.widget.RemoteViews { void setLong(int,java.lang.String,long); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer key(java.lang.String); }
-keepclassmembers class org.json.JSONStringer { void beforeKey(); }
-keepclassmembers class android.widget.RemoteViews { void setInt(int,java.lang.String,int); }
-keepclassmembers class org.json.JSONStringer { void beforeValue(); }
-keepclassmembers class java.util.Collections$SingletonList { java.lang.Object get(int); }
-keepclassmembers class android.widget.RemoteViews { void setCharSequence(int,java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.widget.RemoteViews { void setContentDescription(int,java.lang.CharSequence); }
-keepclassmembers class android.widget.RemoteViews { void setBitmap(int,java.lang.String,android.graphics.Bitmap); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <clinit>(); }
-keepclassmembers class android.text.Selection { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews { android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class java.util.AbstractList { void add(int,java.lang.Object); }
-keepclassmembers class android.support.v4.app.ab$i { android.app.Notification a(android.support.v4.app.ab$d,android.support.v4.app.ab$e); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(); }
-keepclassmembers class android.widget.RemoteViews { void <clinit>(); }
-keepclassmembers class java.util.AbstractList { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View$TransformationInfo { void <init>(); }
-keepclassmembers class android.support.v7.a.k { void g(); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <clinit>(); }
-keepclassmembers class android.support.design.widget.v { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void <clinit>(); }
-keepclassmembers class android.view.View$1 { void onClick(android.view.View); }
-keepclassmembers class android.support.v7.widget.aj { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.util.StateSet { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.aj { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.util.StateSet { int[] trimStateSet(int[],int); }
-keepclassmembers class android.app.ActivityOptions { android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.app.ExitTransitionCoordinator,java.util.ArrayList,int,android.content.Intent); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void releaseConnection(); }
-keepclassmembers class android.support.v4.g.s { void <clinit>(); }
-keepclassmembers class android.os.ServiceManager { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <clinit>(); }
-keepclassmembers class java.util.Hashtable$Values { java.util.Iterator iterator(); }
-keepclassmembers class android.app.ActivityOptions { android.os.Bundle toBundle(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$8 { android.os.StrictMode$ThreadSpanState initialValue(); }
-keepclassmembers class android.os.Trace { void beginSection(java.lang.String); }
-keepclassmembers class android.os.Trace { void <clinit>(); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLRSAPrivateKey { com.android.org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.RSAPrivateKey); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.ImageView { void initImageView(); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.Bitmap); }
-keepclassmembers class org.apache.http.client.methods.HttpGet { java.lang.String getMethod(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.text.method.TextKeyListener$SettingsObserver { void <init>(android.text.method.TextKeyListener); }
-keepclassmembers class android.widget.ImageView { void setScaleType(android.widget.ImageView$ScaleType); }
-keepclassmembers class android.view.InputDevice { void addMotionRange(int,int,float,float,float,float,float); }
-keepclassmembers class android.support.v7.view.g { void <clinit>(); }
-keepclassmembers class android.support.v7.view.g { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.view.g { void a(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu); }
-keepclassmembers class android.widget.ImageView { void resolveUri(); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void abortConnection(); }
-keepclassmembers class android.view.InputDevice { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void updateAuthState(org.apache.http.auth.AuthState,org.apache.http.HttpHost,org.apache.http.client.CredentialsProvider); }
-keepclassmembers class android.hardware.input.InputManager { void <init>(android.hardware.input.IInputManager); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <clinit>(); }
-keepclassmembers class android.hardware.input.InputManager { android.hardware.input.InputManager getInstance(); }
-keepclassmembers class android.support.v4.g.i { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(); }
-keepclassmembers class android.support.v7.view.g { void inflate(int,android.view.Menu); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$9 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { byte[] encode(java.lang.Object); }
-keepclassmembers class java.util.HashMap { void addNewEntry(java.lang.Object,java.lang.Object,int,int); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry constructorNewEntry(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.util.HashMap { void addNewEntryForNullKey(java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.String limit(int,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.util.HashMap { java.util.Set keySet(); }
-keepclassmembers class java.util.HashMap { java.util.Collection values(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.HashMap { java.util.Set entrySet(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundEnter(boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleEnter(); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newKeyIterator(); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newValueIterator(); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newEntryIterator(); }
-keepclassmembers class android.widget.ImageView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.ImageView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.ImageView { void <clinit>(); }
-keepclassmembers class android.support.v4.c.a.m { android.support.v4.c.a.j$a b(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateMaskShaderIfNeeded(); }
-keepclassmembers class android.support.v7.a.b { void <init>(android.content.Context,android.support.v7.a.l,android.view.Window); }
-keepclassmembers class android.support.v4.g.b { java.lang.Object a(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getPositionDescription(); }
-keepclassmembers class android.support.v4.g.b { java.lang.Object a(android.support.v4.g.b$a); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <clinit>(); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void verify(); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void <clinit>(); }
-keepclassmembers class java.util.HashMap { void <clinit>(); }
-keepclassmembers class android.support.v4.g.a { void <clinit>(); }
-keepclassmembers class android.widget.TextView$BufferType { void <clinit>(); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void <init>(org.apache.harmony.security.asn1.ASN1Type,java.lang.Object); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Paint getRipplePaint(); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { android.graphics.drawable.StateListDrawable b(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.RippleDrawable$RippleState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getChoiceLength(org.apache.harmony.security.asn1.ASN1Choice); }
-keepclassmembers class android.util.DisplayMetrics { int getDeviceDensity(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources); }
-keepclassmembers class android.view.KeyCharacterMap$1 { android.view.KeyCharacterMap createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.res.XmlBlock$Parser { float getAttributeFloatValue(int,float); }
-keepclassmembers class android.support.v7.widget.m$d { android.graphics.drawable.Drawable a(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { void processChallenge(org.apache.http.Header); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { boolean isComplete(); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String getSchemeName(); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.security.MessageDigest createMessageDigest(java.lang.String); }
-keepclassmembers class android.support.v7.a.b { void a(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message); }
-keepclassmembers class com.android.internal.util.ImageUtils { void <init>(); }
-keepclassmembers class java.beans.PropertyChangeSupport { void <init>(java.lang.Object); }
-keepclassmembers class java.beans.PropertyChangeSupport { void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void wtf(java.lang.String,java.lang.Throwable,boolean); }
-keepclassmembers class com.android.internal.util.ImageUtils { void ensureBufferSize(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean addWorker(java.lang.Runnable,boolean); }
-keepclassmembers class android.support.v7.a.b { int c(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch next(); }
-keepclassmembers class com.android.volley.a.b { void <clinit>(); }
-keepclassmembers class com.android.volley.a.b { void <init>(int); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String getQopVariantString(); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String createCnonce(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.style.SuggestionSpan { void <clinit>(); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { void <init>(javax.security.auth.x500.X500Principal); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void startExit(int,android.content.Intent); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { void <clinit>(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void fadeOutBackground(); }
-keepclassmembers class java.beans.PropertyChangeSupport { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.transition.Transition getExitTransition(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class android.support.v4.e.a { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void <clinit>(); }
-keepclassmembers class android.app.Notification$BigPictureStyle { void addExtras(android.os.Bundle); }
-keepclassmembers class android.ddm.DdmHandleExit { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.GetPermission$1 { void onClick(android.view.View); }
-keepclassmembers class android.widget.CheckBox { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <init>(android.view.ViewConfiguration,android.view.View); }
-keepclassmembers class android.widget.CheckBox { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String stringOf(char[]); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <clinit>(); }
-keepclassmembers class java.lang.IntegralToString { void <clinit>(); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <clinit>(); }
-keepclassmembers class java.util.logging.LogManager { void <init>(); }
-keepclassmembers class android.R$styleable { void <clinit>(); }
-keepclassmembers class android.support.v4.c.a.e { android.graphics.drawable.Drawable b(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.logging.LogManager { java.lang.Object getInstanceByClass(java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger getOrCreate(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.EntityEnclosingRequestWrapper { boolean expectContinue(); }
-keepclassmembers class libcore.util.CollectionUtils { java.lang.Iterable dereferenceIterable(java.lang.Iterable,boolean); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String region(int,int); }
-keepclassmembers class android.text.SpannableStringInternal { void checkRange(java.lang.String,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { void <init>(android.widget.AbsListView,int); }
-keepclassmembers class android.text.DynamicLayout { void <clinit>(); }
-keepclassmembers class android.graphics.Shader { void copyLocalMatrix(android.graphics.Shader); }
-keepclassmembers class android.view.FocusFinder$1 { android.view.FocusFinder initialValue(); }
-keepclassmembers class android.util.PathParser { android.graphics.Path createPathFromPathData(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <clinit>(); }
-keepclassmembers class android.view.GhostView { void insertIntoOverlay(android.view.ViewGroup,android.view.ViewGroup,android.view.GhostView,java.util.ArrayList,int); }
-keepclassmembers class android.util.Xml { org.xmlpull.v1.XmlPullParser newPullParser(); }
-keepclassmembers class android.util.PathParser { void addNode(java.util.ArrayList,char,float[]); }
-keepclassmembers class android.util.Xml { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { android.widget.TextView createPreviewTextView(android.content.Context); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.util.PathParser { void <clinit>(); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void formatParamAsVer(org.apache.http.util.CharArrayBuffer,java.lang.String,java.lang.String,int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { java.util.List formatCookies(java.util.List); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void <clinit>(); }
-keepclassmembers class libcore.io.IoUtils { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.io.SocketOutputBuffer { void <init>(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class libcore.io.IoUtils { java.lang.String readFileAsString(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void transitionToDragging(); }
-keepclassmembers class android.widget.FastScroller { void transitionToVisible(); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String authoritySafePath(java.lang.String,java.lang.String); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void registerCallback(android.hardware.display.IDisplayManagerCallback); }
-keepclassmembers class java.lang.Enum { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.d { void <clinit>(); }
-keepclassmembers class java.net.URI { java.net.URI create(java.lang.String); }
-keepclassmembers class java.net.URI { java.net.URI duplicate(); }
-keepclassmembers class org.apache.http.entity.HttpEntityWrapper { void <init>(org.apache.http.HttpEntity); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger$1 { com.android.server.NetworkManagementSocketTagger$SocketTags initialValue(); }
-keepclassmembers class java.math.MathContext { void checkValid(); }
-keepclassmembers class java.math.MathContext { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { int hashCode(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void <init>(int,java.util.Comparator); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { boolean isSecure(java.net.Socket); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void <init>(int,org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { void <clinit>(); }
-keepclassmembers class android.support.v7.view.i { void <init>(android.view.Window$Callback); }
-keepclassmembers class java.net.URI { int getEffectivePort(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.CountryCodeToRegionCodeMap { java.util.Map getCountryCodeToRegionCodeMap(); }
-keepclassmembers class java.net.URI { java.lang.String normalize(java.lang.String,boolean); }
-keepclassmembers class java.net.URI { void setSchemeSpecificPart(); }
-keepclassmembers class java.net.URI { java.lang.String toASCIIString(); }
-keepclassmembers class java.net.URI { java.lang.String getHashString(); }
-keepclassmembers class java.net.URI { java.lang.String toString(); }
-keepclassmembers class java.util.ArrayDeque { void <init>(); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { android.text.method.TextKeyListener$NullKeyListener getInstance(); }
-keepclassmembers class android.provider.Settings$Global { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class java.net.URI { java.net.URL toURL(); }
-keepclassmembers class java.nio.charset.StandardCharsets { void <clinit>(); }
-keepclassmembers class java.net.URI { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateScaleX(android.view.View,float); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress makeInetAddress(byte[],java.lang.String); }
-keepclassmembers class android.support.v4.app.ab$n { android.app.Notification a(android.support.v4.app.ab$d,android.support.v4.app.ab$e); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateAlpha(android.view.View,float); }
-keepclassmembers class android.provider.Settings$Global { void <clinit>(); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateBounds(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.v7.a.n { void <init>(android.support.v7.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftHeaderParser { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$MapIterator { java.util.TreeMap$Node stepForward(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void <clinit>(); }
-keepclassmembers class java.net.InetAddress { java.lang.String toString(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress parseNumericAddress(java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] loopbackAddresses(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { java.util.LinkedHashMap$LinkedEntry nextEntry(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { java.util.jar.JarFile openJarFile(); }
-keepclassmembers class android.support.v7.a.n { android.view.Menu k(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void remove(); }
-keepclassmembers class java.net.InetAddress { java.net.UnknownHostException badAddressLength(byte[]); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { org.apache.http.impl.cookie.RFC2965Spec getStrict(); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { org.apache.http.impl.cookie.BrowserCompatSpec getCompat(); }
-keepclassmembers class java.net.InetAddress { void <clinit>(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void findJarEntry(); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { org.apache.http.impl.cookie.NetscapeDraftSpec getNetscape(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.http.ProtocolVersion { void <init>(java.lang.String,int,int); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <clinit>(); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part from(java.lang.String,java.lang.String); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part readFrom(android.os.Parcel); }
-keepclassmembers class android.net.Uri$Part { void <clinit>(); }
-keepclassmembers class android.view.WindowInsets { android.graphics.Rect getSystemWindowInsets(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <init>(android.content.Context,android.view.accessibility.IAccessibilityManager,int); }
-keepclassmembers class java.text.Format { java.lang.String format(java.lang.Object); }
-keepclassmembers class android.util.MapCollections$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.AccessibilityManager getInstance(android.content.Context); }
-keepclassmembers class org.apache.http.ProtocolVersion { java.lang.String toString(); }
-keepclassmembers class android.view.WindowInsets { android.view.WindowInsets consumeSystemWindowInsets(); }
-keepclassmembers class org.apache.http.conn.scheme.SchemeRegistry { void <init>(); }
-keepclassmembers class org.apache.http.conn.scheme.SchemeRegistry { org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost); }
-keepclassmembers class org.apache.http.conn.scheme.SchemeRegistry { org.apache.http.conn.scheme.Scheme getScheme(java.lang.String); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { java.io.InputStream getContent(); }
-keepclassmembers class dalvik.system.BlockGuard { void setThreadPolicy(dalvik.system.BlockGuard$Policy); }
-keepclassmembers class dalvik.system.BlockGuard { void <clinit>(); }
-keepclassmembers class android.view.WindowInsets { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthInputStream { void close(); }
-keepclassmembers class android.graphics.Canvas { void <init>(android.graphics.Bitmap); }
-keepclassmembers class android.graphics.Canvas { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void setBitmap(android.graphics.Bitmap); }
-keepclassmembers class java.util.PropertyResourceBundle { void <init>(java.io.Reader); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void assertStillUp(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void tryConnectToServiceLocked(); }
-keepclassmembers class android.support.v4.app.ab { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object); }
-keepclassmembers class android.util.LogWriter { void <init>(int,java.lang.String); }
-keepclassmembers class libcore.internal.StringPool { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <clinit>(); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <clinit>(); }
-keepclassmembers class java.net.URLConnection { void <init>(java.net.URL); }
-keepclassmembers class com.android.volley.a.g { void a(java.net.HttpURLConnection,com.android.volley.h); }
-keepclassmembers class java.net.URLConnection { java.net.FileNameMap getFileNameMap(); }
-keepclassmembers class android.transition.ChangeBounds$1 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.p { java.lang.String a(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void revokeConnection(); }
-keepclassmembers class com.android.volley.a.g { void b(java.net.HttpURLConnection,com.android.volley.h); }
-keepclassmembers class android.graphics.Interpolator { android.graphics.Interpolator$Result timeToValues(int,float[]); }
-keepclassmembers class java.util.Collections$EmptyList { java.lang.Object get(int); }
-keepclassmembers class android.support.v4.app.y { android.view.ViewGroup a(android.view.View); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablePadding(int); }
-keepclassmembers class android.app.TaskStackBuilder { android.app.TaskStackBuilder create(android.content.Context); }
-keepclassmembers class android.app.TaskStackBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.Canvas { void drawOval(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void <clinit>(); }
-keepclassmembers class android.app.AppOpsManager { java.lang.String permissionToOp(java.lang.String); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle); }
-keepclassmembers class java.net.URLConnection { void <clinit>(); }
-keepclassmembers class android.graphics.Canvas { void throwIfCannotDraw(android.graphics.Bitmap); }
-keepclassmembers class android.widget.TextView { void setTextColor(android.content.res.ColorStateList); }
-keepclassmembers class java.net.Proxy$Type { void <clinit>(); }
-keepclassmembers class android.support.v4.c.a.j { android.support.v4.c.a.j$a b(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class android.support.v4.g.b.c { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void g(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.view.LayoutInflater { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.system.ErrnoException { java.lang.String getMessage(); }
-keepclassmembers class android.system.ErrnoException { java.net.SocketException rethrowAsSocketException(); }
-keepclassmembers class android.widget.TextView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.String toString(); }
-keepclassmembers class android.view.ContextThemeWrapper { void applyOverrideConfiguration(android.content.res.Configuration); }
-keepclassmembers class android.view.ContextThemeWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.content.res.Resources$Theme { void applyStyle(int,boolean); }
-keepclassmembers class android.support.v4.app.p$a { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray resolveAttributes(int[],int[]); }
-keepclassmembers class android.support.v4.app.p$a { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class libcore.io.DeleteOnExit { libcore.io.DeleteOnExit getInstance(); }
-keepclassmembers class android.content.res.Resources$Theme { void <init>(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources); }
-keepclassmembers class libcore.io.DeleteOnExit { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { int[] getInputDeviceIds(); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.BootClassLoader getInstance(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String getDisplayName(java.lang.String[][],java.lang.String,boolean,int); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Package getPackage(java.lang.String); }
-keepclassmembers class libcore.icu.TimeZoneNames { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeNormalizer { int toUNormalizationMode(java.text.Normalizer$Form); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <init>(android.app.Activity); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <init>(android.app.Dialog); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void <init>(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setupAnimatorsForTarget(java.lang.String,android.animation.Animator); }
-keepclassmembers class java.lang.Package { java.lang.String toString(); }
-keepclassmembers class java.lang.Package { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream { void <init>(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class android.widget.TextView { void onEditorAction(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStreamInternal(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.support.v4.widget.z { void <clinit>(); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(boolean); }
-keepclassmembers class android.widget.TextView { void setInputExtras(int); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener); }
-keepclassmembers class android.support.v4.widget.z { android.view.animation.Animation a(int,int); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <clinit>(); }
-keepclassmembers class android.support.a.a.f$f { void <init>(); }
-keepclassmembers class java.security.Signature { java.security.Signature getInstance(java.lang.String); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.a.a.f$f { void <init>(android.support.a.a.f$f); }
-keepclassmembers class android.support.a.a.f$f { android.graphics.Paint a(android.graphics.ColorFilter); }
-keepclassmembers class android.os.StrictMode$3 { android.os.Handler initialValue(); }
-keepclassmembers class android.support.a.a.f$f { void a(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.text.NumberFormat { java.lang.String format(long); }
-keepclassmembers class android.support.a.a.f$f { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.a.a.f$f { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHideOnContentScrollEnabled(boolean); }
-keepclassmembers class android.app.Notification$Style { void checkBuilder(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getIntegerInstance(java.util.Locale); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void <init>(); }
-keepclassmembers class java.util.MissingFormatWidthException { void <init>(java.lang.String); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.lang.String,java.util.Locale); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getNumberInstance(java.util.Locale); }
-keepclassmembers class android.app.Notification$Style { android.widget.RemoteViews getStandardView(int); }
-keepclassmembers class android.app.Notification$Style { void addExtras(android.os.Bundle); }
-keepclassmembers class java.security.Signature { boolean verify(byte[]); }
-keepclassmembers class java.security.Signature { void update(byte[]); }
-keepclassmembers class android.support.v4.widget.z { void b(android.view.animation.Animation$AnimationListener); }
-keepclassmembers class java.security.Signature { void <clinit>(); }
-keepclassmembers class android.support.design.widget.o { void <init>(); }
-keepclassmembers class com.android.volley.h$a { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int); }
-keepclassmembers class android.support.design.widget.o { android.support.design.widget.o a(); }
-keepclassmembers class java.text.NumberFormat { void <clinit>(); }
-keepclassmembers class android.support.design.widget.o { void a(int,android.support.design.widget.o$a); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.DefaultConnectionReuseStrategy { org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <clinit>(); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context); }
-keepclassmembers class android.view.DisplayInfo$1 { android.view.DisplayInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.FrameLayout { android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$7 { void onClick(android.view.View); }
-keepclassmembers class android.widget.FrameLayout { void setForeground(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.AsyncTask$3 { void done(); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler); }
-keepclassmembers class android.widget.ImageButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.ImageButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class org.apache.commons.logging.LogFactory { org.apache.commons.logging.Log getLog(java.lang.String); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List getMethods(java.lang.Class[]); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.FrameLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.text.method.DateTimeKeyListener { android.text.method.DateTimeKeyListener getInstance(); }
-keepclassmembers class android.widget.FrameLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <clinit>(); }
-keepclassmembers class org.apache.commons.logging.LogFactory { java.lang.ClassLoader getClassLoader(java.lang.Class); }
-keepclassmembers class android.support.design.widget.p { void <init>(); }
-keepclassmembers class java.lang.reflect.Proxy { void <clinit>(); }
-keepclassmembers class android.support.design.widget.p { void a(android.view.View); }
-keepclassmembers class com.shapps.mintubeapp.GetPermission { void a(int); }
-keepclassmembers class com.shapps.mintubeapp.GetPermission { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.support.design.widget.p { void a(int[],android.view.animation.Animation); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <init>(); }
-keepclassmembers class java.io.FileDescriptor { void <clinit>(); }
-keepclassmembers class android.support.v4.g.b.b { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class org.json.JSON { double checkDouble(double); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.String toString(); }
-keepclassmembers class android.support.v4.f.j { void <init>(int); }
-keepclassmembers class android.support.v4.f.j { void <clinit>(); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context,int); }
-keepclassmembers class org.json.JSON { org.json.JSONException typeMismatch(java.lang.Object,java.lang.Object,java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void enforceNotSealed(); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { void setContentEncoding(java.lang.String); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { void setContentType(java.lang.String); }
-keepclassmembers class org.json.JSON { org.json.JSONException typeMismatch(java.lang.Object,java.lang.String); }
-keepclassmembers class org.apache.commons.logging.LogFactory { void initDiagnostics(); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator,boolean); }
-keepclassmembers class android.widget.OverScroller { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class org.apache.commons.logging.LogFactory { void logClassLoaderEnvironment(java.lang.Class); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <init>(); }
-keepclassmembers class org.apache.commons.logging.LogFactory { void logHierarchy(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <init>(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class org.apache.commons.logging.LogFactory { void <clinit>(); }
-keepclassmembers class org.apache.commons.logging.LogFactory { java.lang.String objectId(java.lang.Object); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { void <init>(org.apache.http.io.SessionInputBuffer); }
-keepclassmembers class android.animation.ArgbEvaluator { void <clinit>(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog create(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { int getChunkSize(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { void nextChunk(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.lang.String toString(); }
-keepclassmembers class java.text.DateFormat$Field { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { void parseTrailerHeaders(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { void exhaustInputStream(java.io.InputStream); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { void <init>(long,java.security.cert.X509Certificate[],java.security.cert.X509Certificate[],java.lang.String,int,com.android.org.conscrypt.AbstractSessionContext); }
-keepclassmembers class java.util.Properties { void load(java.io.InputStream); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.WaitingThread { void <init>(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { void checkPeerCertificatesPresent(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.WaitingThread { boolean await(java.util.Date); }
-keepclassmembers class java.net.Proxy { void <init>(java.net.Proxy$Type,java.net.SocketAddress); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.WaitingThread { void wakeup(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void <clinit>(); }
-keepclassmembers class java.net.Proxy { java.lang.String toString(); }
-keepclassmembers class android.widget.RelativeLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.net.Proxy { void <clinit>(); }
-keepclassmembers class android.widget.RelativeLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.RelativeLayout { void <clinit>(); }
-keepclassmembers class android.util.SparseArray { void <init>(int); }
-keepclassmembers class org.apache.http.impl.conn.IdleConnectionHandler { void <init>(); }
-keepclassmembers class org.apache.http.impl.conn.IdleConnectionHandler { void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Intent); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,int,java.util.Map,boolean); }
-keepclassmembers class android.util.SparseArray { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.graphics.drawable.AnimatedStateListDrawable,android.content.res.Resources); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class android.app.Notification$BigTextStyle { void addExtras(android.os.Bundle); }
-keepclassmembers class android.content.Intent { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.StateListDrawable$StateListState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <clinit>(); }
-keepclassmembers class java.security.Signature$SignatureImpl { void <init>(java.lang.String,java.security.Provider); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void <init>(long,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setText(java.lang.String); }
-keepclassmembers class android.view.animation.Animation { void <init>(); }
-keepclassmembers class android.support.v4.c.a.l$a { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class libcore.icu.NativeBreakIterator { libcore.icu.NativeBreakIterator getWordInstance(java.util.Locale); }
-keepclassmembers class android.webkit.WebView { void ensureProviderCreated(); }
-keepclassmembers class dalvik.system.CloseGuard { dalvik.system.CloseGuard get(); }
-keepclassmembers class android.webkit.WebView { void checkThread(); }
-keepclassmembers class dalvik.system.CloseGuard { void open(java.lang.String); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable newSpannable(java.lang.CharSequence); }
-keepclassmembers class java.util.TreeMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class dalvik.system.CloseGuard { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.io.AbstractMessageWriter { void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter,org.apache.http.params.HttpParams); }
-keepclassmembers class android.text.Spannable$Factory { void <clinit>(); }
-keepclassmembers class android.view.animation.Animation { void setListenerHandler(android.os.Handler); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { java.lang.String normalize(java.lang.String); }
-keepclassmembers class com.android.volley.h { void <init>(int,java.lang.String,com.android.volley.j$a); }
-keepclassmembers class android.webkit.WebView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.webkit.WebView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.animation.Animation { void ensureInterpolator(); }
-keepclassmembers class android.util.FloatProperty { void <init>(java.lang.String); }
-keepclassmembers class com.android.volley.h { void b(java.lang.String); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation loadAnimation(android.content.Context,int); }
-keepclassmembers class org.apache.http.message.BasicLineParser { org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class android.content.Intent { java.lang.String resolveType(android.content.ContentResolver); }
-keepclassmembers class android.view.animation.Transformation { void <init>(); }
-keepclassmembers class org.apache.http.message.BasicLineParser { org.apache.http.StatusLine createStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String); }
-keepclassmembers class android.view.animation.Transformation { void clear(); }
-keepclassmembers class org.apache.http.message.BasicLineParser { org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class org.apache.http.auth.AuthScope { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class org.apache.http.message.BasicLineParser { void <clinit>(); }
-keepclassmembers class org.apache.http.auth.AuthScope { void <clinit>(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int); }
-keepclassmembers class android.view.animation.Animation { void <clinit>(); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { void <init>(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { void <init>(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.Context,int); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class com.shapps.mintubeapp.RateOrStar { void onClick(android.view.View); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator createInterpolatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.lang.RealToString { void <init>(); }
-keepclassmembers class org.apache.http.client.methods.HttpHead { java.lang.String getMethod(); }
-keepclassmembers class android.content.Intent { android.os.Bundle getExtras(); }
-keepclassmembers class com.shapps.mintubeapp.a { void <clinit>(); }
-keepclassmembers class android.content.Intent { android.content.ComponentName resolveActivity(android.content.pm.PackageManager); }
-keepclassmembers class com.shapps.mintubeapp.a { java.lang.String a(); }
-keepclassmembers class com.shapps.mintubeapp.a { java.lang.String b(); }
-keepclassmembers class android.widget.TextView { void updateTextServicesLocaleAsync(); }
-keepclassmembers class android.ddm.DdmHandleThread { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void <clinit>(); }
-keepclassmembers class android.widget.TextView { boolean shouldSpeakPasswordsForAccessibility(); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { void <init>(); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <init>(int,java.util.HashMap); }
-keepclassmembers class android.content.Intent { android.content.Intent addCategory(java.lang.String); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <clinit>(); }
-keepclassmembers class android.view.WindowCallbackWrapper { void <init>(android.view.Window$Callback); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.AbstractConnPool { void <init>(); }
-keepclassmembers class java.lang.ref.FinalizerReference { void finalizeAllEnqueued(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.AbstractConnPool { void enableConnectionGC(); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean enqueueSentinelReference(java.lang.ref.FinalizerReference$Sentinel); }
-keepclassmembers class android.support.v7.widget.ax { void <clinit>(); }
-keepclassmembers class java.lang.ref.FinalizerReference { void <clinit>(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ax { android.content.res.Resources getResources(); }
-keepclassmembers class com.android.org.conscrypt.ServerSessionContext { void <init>(); }
-keepclassmembers class android.util.SparseBooleanArray { void <init>(int); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.AbstractConnPool { void closeConnection(org.apache.http.conn.OperatedClientConnection); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class org.apache.http.client.methods.HttpOptions { java.lang.String getMethod(); }
-keepclassmembers class android.widget.TextView { void createEditorIfNeeded(); }
-keepclassmembers class android.text.Layout { void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class org.apache.http.message.HeaderGroup { void <init>(); }
-keepclassmembers class org.apache.http.cookie.CookieSpecRegistry { void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory); }
-keepclassmembers class org.apache.http.cookie.CookieSpecRegistry { void <init>(); }
-keepclassmembers class android.widget.TextView { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { void <init>(java.net.Socket,java.lang.String,int,boolean,com.android.org.conscrypt.SSLParametersImpl); }
-keepclassmembers class org.apache.http.message.HeaderGroup { org.apache.http.HeaderIterator iterator(); }
-keepclassmembers class org.apache.http.message.HeaderGroup { org.apache.http.HeaderIterator iterator(java.lang.String); }
-keepclassmembers class android.text.method.BaseKeyListener { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { java.lang.String toString(); }
-keepclassmembers class android.graphics.Rect { java.lang.String toShortString(); }
-keepclassmembers class android.graphics.Rect { java.lang.String toString(); }
-keepclassmembers class android.graphics.Rect { java.lang.String toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void <init>(android.widget.RemoteViews,android.os.Parcel,android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$c b(); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { void <init>(java.io.InputStream,org.apache.http.conn.EofSensorWatcher); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { boolean isReadAllowed(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void reverse(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.Menu getMenu(); }
-keepclassmembers class libcore.io.IoBridge { int available(java.io.FileDescriptor); }
-keepclassmembers class android.content.Intent { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class libcore.io.IoBridge { void connect(java.io.FileDescriptor,java.net.InetAddress,int,int); }
-keepclassmembers class libcore.io.IoBridge { java.lang.String connectDetail(java.net.InetAddress,int,int,android.system.ErrnoException); }
-keepclassmembers class libcore.io.IoBridge { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.widget.Toast { void <init>(android.content.Context); }
-keepclassmembers class java.util.Collections { java.util.Enumeration enumeration(java.util.Collection); }
-keepclassmembers class libcore.io.IoBridge { void closeAndSignalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class android.text.Layout { void increaseWidthTo(int); }
-keepclassmembers class android.widget.Toast { void show(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setPopupTheme(int); }
-keepclassmembers class android.graphics.Rect { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { void <clinit>(); }
-keepclassmembers class org.apache.http.client.protocol.ResponseProcessCookies { java.lang.String cookieToString(org.apache.http.cookie.Cookie); }
-keepclassmembers class android.widget.Toast { android.app.INotificationManager getService(); }
-keepclassmembers class java.util.Collections { java.util.ArrayList list(java.util.Enumeration); }
-keepclassmembers class java.util.Collections { java.util.List singletonList(java.lang.Object); }
-keepclassmembers class libcore.io.IoBridge { int getGroupSourceReqOp(int); }
-keepclassmembers class java.util.Collections { java.util.Map synchronizedMap(java.util.Map); }
-keepclassmembers class android.util.LongSparseArray { void <clinit>(); }
-keepclassmembers class java.util.Collections { java.util.List unmodifiableList(java.util.List); }
-keepclassmembers class java.util.Collections { java.util.Map unmodifiableMap(java.util.Map); }
-keepclassmembers class java.util.Collections { java.util.Collection unmodifiableCollection(java.util.Collection); }
-keepclassmembers class libcore.io.IoBridge { int recvfrom(boolean,java.io.FileDescriptor,byte[],int,int,int,java.net.DatagramPacket,boolean); }
-keepclassmembers class org.apache.http.client.methods.HttpPost { java.lang.String getMethod(); }
-keepclassmembers class java.util.Collections { java.util.Set unmodifiableSet(java.util.Set); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.protocol.HttpRequestExecutor createRequestExecutor(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$GhostViewListeners { void <init>(android.view.View,android.view.View,android.view.ViewGroup); }
-keepclassmembers class libcore.io.IoBridge { int maybeThrowAfterRecvfrom(boolean,boolean,android.system.ErrnoException); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.params.HttpParams createHttpParams(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicDomainHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node enq(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v7.widget.Toolbar { void l(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.content.Intent { void prepareToLeaveProcess(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicDomainHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.protocol.BasicHttpProcessor createHttpProcessor(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicDomainHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.RedirectHandler createRedirectHandler(); }
-keepclassmembers class java.util.Collections { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.CredentialsProvider createCredentialsProvider(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler(); }
-keepclassmembers class android.support.v4.c.a.k$a { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node predecessor(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.UserTokenHandler createUserTokenHandler(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void <clinit>(); }
-keepclassmembers class android.content.Intent { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.Toolbar$b i(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.ae getWrapper(); }
-keepclassmembers class org.apache.http.message.BasicHttpResponse { void <init>(org.apache.http.StatusLine,org.apache.http.ReasonPhraseCatalog,java.util.Locale); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.r { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doAcquireInterruptibly(int); }
-keepclassmembers class android.support.v4.widget.r { void a(android.widget.PopupWindow,boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquireInterruptibly(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void ensurePadding(); }
-keepclassmembers class android.app.SearchManager { void <init>(android.content.Context,android.os.Handler); }
-keepclassmembers class android.widget.RadioButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.RadioButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.graphics.Rect$1 { android.graphics.Rect createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(); }
-keepclassmembers class org.apache.http.auth.AuthSchemeRegistry { void <init>(); }
-keepclassmembers class android.net.Uri$1 { android.net.Uri createFromParcel(android.os.Parcel); }
-keepclassmembers class org.apache.http.auth.AuthSchemeRegistry { void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.lang.String toString(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(int,int); }
-keepclassmembers class java.io.StringWriter { void <init>(); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { java.io.InputStream getContent(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(int,int,int,int,int); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(int,int,int,int,int,int,int); }
-keepclassmembers class android.support.v4.app.w { void <clinit>(); }
-keepclassmembers class android.app.SearchManager { android.app.SearchableInfo getSearchableInfo(android.content.ComponentName); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void setTitle(java.lang.CharSequence); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { int fullyRelease(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v4.app.w { android.content.Intent a(android.content.Context,android.content.ComponentName); }
-keepclassmembers class android.support.v4.app.w { java.lang.String b(android.app.Activity); }
-keepclassmembers class android.support.v4.widget.t { void a(android.widget.PopupWindow,int); }
-keepclassmembers class android.support.v7.widget.h { void c(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.AbstractCollection { java.util.ArrayList toArrayList(); }
-keepclassmembers class android.support.v7.widget.h { void a(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.h { void a(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <clinit>(); }
-keepclassmembers class android.graphics.Typeface { java.io.File getSystemFontConfigLocation(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.h { void b(android.content.res.ColorStateList); }
-keepclassmembers class com.android.volley.a.h { com.android.volley.j a(com.android.volley.g); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void close(); }
-keepclassmembers class libcore.reflect.Types { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setPopupTheme(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(int,int,int,int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { void <init>(java.lang.String[],boolean); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { org.apache.http.impl.cookie.BasicClientCookie createCookie(java.lang.String,java.lang.String,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.support.design.widget.o$b { void <init>(int,android.support.design.widget.o$a); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { org.apache.http.impl.cookie.BasicClientCookie createCookie2(java.lang.String,java.lang.String,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.text.method.BaseKeyListener$1 { void <clinit>(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getBounds(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setCallback(android.graphics.drawable.Drawable$Callback); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.Drawable { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class javax.net.ssl.DefaultSSLSocketFactory { java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.text.TextUtils { java.lang.String join(java.lang.CharSequence,java.lang.Iterable); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils$DateFormatHolder { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { org.apache.http.Header getVersionHeader(); }
-keepclassmembers class android.support.a.a.f { void <init>(); }
-keepclassmembers class android.support.a.a.f { void <init>(android.support.a.a.f$f); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.support.a.a.f { android.support.a.a.f a(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class android.support.a.a.f { android.support.a.a.f a(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.Paint getPaint(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void updateCachedBitmap(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void <init>(java.io.Writer,boolean,int); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession { java.security.cert.Certificate[] getPeerCertificates(); }
-keepclassmembers class android.support.a.a.f { android.graphics.PorterDuffColorFilter a(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable drawableFromBitmap(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class org.apache.http.protocol.DefaultedHttpContext { void <init>(org.apache.http.protocol.HttpContext,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.support.a.a.f { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.Drawable { void <clinit>(); }
-keepclassmembers class android.support.a.a.f { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.Void { java.lang.Class lookupType(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(int); }
-keepclassmembers class android.support.a.a.f { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(int); }
-keepclassmembers class android.os.StrictMode$2 { java.util.ArrayList initialValue(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { java.io.PrintWriter append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.util.Slog { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.nio.ByteArrayBuffer { byte[] protectedArray(); }
-keepclassmembers class java.nio.ByteArrayBuffer { int protectedArrayOffset(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String createExtnPattern(java.lang.String); }
-keepclassmembers class android.text.method.DateKeyListener { android.text.method.DateKeyListener getInstance(); }
-keepclassmembers class com.android.volley.AuthFailureError { java.lang.String getMessage(); }
-keepclassmembers class java.util.HashSet { void <init>(); }
-keepclassmembers class java.util.HashSet { void <init>(int); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.util.Iterator iterator(); }
-keepclassmembers class android.text.method.DateKeyListener { void <clinit>(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader createSystemClassLoader(); }
-keepclassmembers class android.support.v7.widget.q { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.ClassLoader,boolean); }
-keepclassmembers class android.app.ActivityManagerProxy { int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle); }
-keepclassmembers class java.lang.ClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class android.support.v7.a.g { void <init>(android.content.Context,android.view.Window,android.support.v7.a.e); }
-keepclassmembers class android.support.v7.a.g { android.view.Window$Callback a(android.view.Window$Callback); }
-keepclassmembers class android.support.v7.a.g { android.view.MenuInflater b(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection loadMetadataAndCloseInput(java.io.ObjectInputStream); }
-keepclassmembers class android.graphics.Canvas$EdgeType { void <clinit>(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL); }
-keepclassmembers class java.nio.charset.MalformedInputException { java.lang.String getMessage(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String extractPossibleNumber(java.lang.String); }
-keepclassmembers class java.util.jar.Manifest { void <init>(byte[],boolean); }
-keepclassmembers class java.util.jar.Manifest { void <init>(); }
-keepclassmembers class java.util.jar.Manifest { void read(byte[]); }
-keepclassmembers class java.util.TreeMap$2 { void <clinit>(); }
-keepclassmembers class java.lang.CaseMapper$1 { libcore.icu.Transliterator initialValue(); }
-keepclassmembers class java.util.jar.Manifest { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil createInstance(com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class android.text.TextUtils { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegionOrCallingCode(int,java.lang.String); }
-keepclassmembers class java.text.DecimalFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class java.net.URI$PartEncoder { boolean isRetained(char); }
-keepclassmembers class java.text.DecimalFormat { void initNative(java.lang.String); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.view.AbsSavedState { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.entity.EntityDeserializer { void <init>(org.apache.http.entity.ContentLengthStrategy); }
-keepclassmembers class java.text.DecimalFormat { void checkBufferAndFieldPosition(java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class org.apache.http.impl.entity.EntityDeserializer { org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle); }
-keepclassmembers class java.lang.Object { java.lang.String toString(); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ak { void <clinit>(); }
-keepclassmembers class android.graphics.TemporaryBuffer { char[] obtain(int); }
-keepclassmembers class android.graphics.TemporaryBuffer { void recycle(char[]); }
-keepclassmembers class android.support.v7.widget.ak { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { void finishSubActivity(android.os.IBinder,java.lang.String,int); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivityAffinity(android.os.IBinder); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <clinit>(); }
-keepclassmembers class android.support.v4.g.ap { void a(android.view.View,android.support.v4.g.aa); }
-keepclassmembers class android.support.v7.view.menu.e { android.widget.ListAdapter a(); }
-keepclassmembers class android.support.v7.view.menu.e { void a(android.content.Context,android.support.v7.view.menu.f); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean releaseActivityInstance(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v7.b.a$k { void <clinit>(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void add(java.lang.ref.Reference); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ak { void b(boolean); }
-keepclassmembers class java.text.DecimalFormat { void <clinit>(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void <init>(); }
-keepclassmembers class android.support.v7.widget.ak { void a(android.widget.ListAdapter); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByPositiveInt(java.math.BigInteger,int); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void start(int); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.util.Log { int i(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.ThreadGroup { void add(java.lang.ThreadGroup); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.ComponentName getCallingActivity(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { java.lang.String getCallingPackage(android.os.IBinder); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getNationalSignificantNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.util.Log { java.lang.String getStackTraceString(java.lang.Throwable); }
-keepclassmembers class android.util.Log { void <clinit>(); }
-keepclassmembers class android.util.Log { int wtf(int,java.lang.String,java.lang.String,java.lang.Throwable,boolean,boolean); }
-keepclassmembers class org.apache.http.impl.io.IdentityOutputStream { void <init>(org.apache.http.io.SessionOutputBuffer); }
-keepclassmembers class android.view.VelocityTracker { void addMovement(android.view.MotionEvent); }
-keepclassmembers class android.view.VelocityTracker { void <clinit>(); }
-keepclassmembers class java.io.PrintStream { void <init>(java.io.OutputStream); }
-keepclassmembers class org.apache.http.impl.io.IdentityOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { android.widget.Editor$InsertionHandleView getHandle(); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <clinit>(); }
-keepclassmembers class android.util.Pools$SimplePool { void <init>(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <clinit>(); }
-keepclassmembers class java.io.PrintStream { void print(java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class java.lang.ThreadGroup { void addThread(java.lang.Thread); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.Object clone(); }
-keepclassmembers class java.io.PrintStream { java.io.PrintStream append(java.lang.CharSequence); }
-keepclassmembers class android.widget.CompoundButton { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.shapps.mintubeapp.YTubeView { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.widget.CompoundButton { void <clinit>(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void <init>(); }
-keepclassmembers class android.content.res.StringBlock { android.text.style.CharacterStyle getColor(java.lang.String,boolean); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { java.util.ArrayList getArray(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void computeBitmapSize(); }
-keepclassmembers class android.support.v7.a.p { void <clinit>(); }
-keepclassmembers class android.support.v7.a.p { android.location.Location a(java.lang.String); }
-keepclassmembers class java.lang.reflect.AccessibleObject { void setAccessible(boolean); }
-keepclassmembers class java.util.Hashtable$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.content.Context { java.lang.Object getSystemService(java.lang.Class); }
-keepclassmembers class libcore.math.MathUtils { void <clinit>(); }
-keepclassmembers class android.util.SparseIntArray { void <init>(int); }
-keepclassmembers class android.support.v7.a.p { boolean a(); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLContext getDefault(); }
-keepclassmembers class android.support.v7.a.c$a { void <init>(android.content.Context,int); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger { void <clinit>(); }
-keepclassmembers class android.support.v7.a.c$a { android.support.v7.a.c b(); }
-keepclassmembers class javax.net.ssl.SSLContext { void <clinit>(); }
-keepclassmembers class android.text.method.TimeKeyListener { void <clinit>(); }
-keepclassmembers class android.text.method.TimeKeyListener { android.text.method.TimeKeyListener getInstance(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { int getRequestedOrientation(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { void setRequestedOrientation(android.os.IBinder,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult isPossibleNumberWithReason(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void initializeWithState(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int maybeExtractCountryCode(java.lang.String,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class org.apache.http.impl.entity.StrictContentLengthStrategy { long determineLength(org.apache.http.HttpMessage); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean parsePrefixAsIdd(java.util.regex.Pattern,java.lang.StringBuilder); }
-keepclassmembers class android.app.Notification$InboxStyle { void <init>(android.app.Notification$Builder); }
-keepclassmembers class java.io.RandomAccessFile { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean maybeStripNationalPrefixAndCarrierCode(java.lang.StringBuilder,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void startHandlingViolationException(dalvik.system.BlockGuard$BlockGuardPolicyException); }
-keepclassmembers class android.view.ViewGroup { boolean shouldBlockFocusForTouchscreen(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parseAndKeepRawInput(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void <init>(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void opening(java.net.Socket,org.apache.http.HttpHost); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void openCompleted(boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class android.view.ViewGroup { void onChildVisibilityChanged(android.view.View,int,int); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void shutdown(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void close(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseHelper(java.lang.String,java.lang.String,boolean,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class android.app.ActivityManagerProxy { void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.view.ViewGroup { android.graphics.PointF getLocalPoint(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class android.support.v4.app.p { void <clinit>(); }
-keepclassmembers class android.support.v4.app.p { void <init>(); }
-keepclassmembers class android.support.v4.app.p { android.view.animation.Animation a(android.content.Context,float,float); }
-keepclassmembers class android.app.ActivityManagerProxy { void overridePendingTransition(android.os.IBinder,java.lang.String,int,int); }
-keepclassmembers class android.support.v4.app.p { android.view.animation.Animation a(android.content.Context,float,float,float,float); }
-keepclassmembers class android.support.design.widget.q { void <clinit>(); }
-keepclassmembers class android.support.design.widget.q { void a(android.content.Context); }
-keepclassmembers class android.support.v4.app.p { void a(java.lang.RuntimeException); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertFromTranslucent(android.os.IBinder); }
-keepclassmembers class android.view.ViewOutlineProvider { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions); }
-keepclassmembers class android.support.a.a.a { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isImmersive(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isTopOfTask(android.os.IBinder); }
-keepclassmembers class android.support.v4.app.m { android.support.v4.app.m a(android.support.v4.app.n); }
-keepclassmembers class android.support.v4.app.p { void t(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyThemeChildElements(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String,int); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Matcher matcher(java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Pattern { boolean matches(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String); }
-keepclassmembers class android.graphics.Paint { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class android.graphics.Paint { void setTextLocale(java.util.Locale); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$FontMetricsInt getFontMetricsInt(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.app.ActivityManagerProxy { void reportActivityFullyDrawn(android.os.IBinder); }
-keepclassmembers class android.view.ViewGroup { float[] getTempPoint(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.app.ActivityManagerProxy { void startLockTaskMode(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { void stopLockTaskMode(); }
-keepclassmembers class android.app.ActivityManagerProxy { void setTaskDescription(android.os.IBinder,android.app.ActivityManager$TaskDescription); }
-keepclassmembers class java.util.TreeMap$Bound { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isBackgroundVisibleBehind(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerNative$1 { android.app.IActivityManager create(); }
-keepclassmembers class android.view.ViewGroup { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class java.lang.Thread$State { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.view.ViewGroup { void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int); }
-keepclassmembers class android.graphics.Paint { void <clinit>(); }
-keepclassmembers class android.support.v4.app.p { void a(android.support.v4.app.n,android.support.v4.app.l,android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v7.view.menu.f { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.f { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.view.menu.f { android.support.v7.view.menu.h a(int,int,int,int,java.lang.CharSequence,int); }
-keepclassmembers class android.os.UserHandle { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask$4 { void <clinit>(); }
-keepclassmembers class org.apache.http.cookie.CookiePathComparator { java.lang.String normalizePath(org.apache.http.cookie.Cookie); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { void writeLine(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { void writeLine(java.lang.String); }
-keepclassmembers class libcore.util.BasicLruCache { void <init>(int); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { android.view.animation.Transformation getChildTransformation(); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.f { java.lang.String a(); }
-keepclassmembers class android.support.v7.view.menu.f { void a(android.support.v7.view.menu.l,android.content.Context); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.Display { void <init>(android.hardware.display.DisplayManagerGlobal,int,android.view.DisplayInfo,android.view.DisplayAdjustments); }
-keepclassmembers class android.view.ViewGroup { void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup$LayoutParams,int,int); }
-keepclassmembers class android.support.v4.app.p { void d(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.p { void e(android.support.v4.app.Fragment); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { int getSoTimeout(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { void setSoTimeout(org.apache.http.params.HttpParams,int); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { boolean getTcpNoDelay(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { int getSocketBufferSize(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { void setSocketBufferSize(org.apache.http.params.HttpParams,int); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { int getLinger(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.entity.EntitySerializer { void <init>(org.apache.http.entity.ContentLengthStrategy); }
-keepclassmembers class java.util.zip.Inflater { void <init>(boolean); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { int getConnectionTimeout(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { void setConnectionTimeout(org.apache.http.params.HttpParams,int); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.entity.EntitySerializer { void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { void setStaleCheckingEnabled(org.apache.http.params.HttpParams,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <init>(java.util.List,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { java.lang.String toString(); }
-keepclassmembers class java.util.zip.Inflater { int inflate(byte[],int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.util.zip.ZipFile { void checkNotClosed(); }
-keepclassmembers class java.util.zip.ZipFile { java.util.Enumeration entries(); }
-keepclassmembers class java.io.ObjectInputStream { void defaultReadObject(); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <clinit>(); }
-keepclassmembers class java.util.UnknownFormatConversionException { void <init>(java.lang.String); }
-keepclassmembers class java.util.UnknownFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class java.io.ObjectInputStream { byte[] readBlockDataLong(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.AnimationDrawable$AnimationState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.c.a.g { android.graphics.drawable.Drawable b(android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readContent(byte); }
-keepclassmembers class android.support.a.a.f$b { void a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v7.widget.ag { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNonPrimitiveContent(boolean); }
-keepclassmembers class android.support.v7.widget.ag { android.graphics.PorterDuff$Mode a(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.ag { void a(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.zip.ZipFile { void throwZipException(java.lang.String,int); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <init>(java.lang.String,android.graphics.Bitmap,int); }
-keepclassmembers class android.app.Notification { void <init>(); }
-keepclassmembers class android.support.v4.f.f { void <init>(int); }
-keepclassmembers class android.support.v4.f.f { int c(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { java.util.List cacheSuperclassesFor(java.lang.Class); }
-keepclassmembers class android.app.Notification { void lightenPayload(); }
-keepclassmembers class org.apache.http.impl.client.BasicCredentialsProvider { void <init>(); }
-keepclassmembers class android.app.Notification { java.lang.CharSequence safeCharSequence(java.lang.CharSequence); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache); }
-keepclassmembers class android.os.BaseBundle { void <init>(java.lang.ClassLoader,int); }
-keepclassmembers class android.view.ViewGroup { void addDisappearingView(android.view.View); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { boolean isSslCheckRelaxed(); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.BaseBundle); }
-keepclassmembers class org.apache.http.impl.client.BasicCredentialsProvider { org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { javax.net.ssl.SSLSocketFactory getDelegate(); }
-keepclassmembers class android.os.BaseBundle { void unparcel(); }
-keepclassmembers class android.view.ViewGroup { void startViewTransition(android.view.View); }
-keepclassmembers class android.app.Notification { void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.app.Notification { java.lang.String visibilityToString(int); }
-keepclassmembers class com.android.internal.R$styleable { void <clinit>(); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { void <clinit>(); }
-keepclassmembers class android.app.Notification { void <clinit>(); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger,int); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDescriptor(); }
-keepclassmembers class android.view.ViewGroup { android.graphics.Paint getDebugPaint(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.InvalidClassException missingClassDescriptor(); }
-keepclassmembers class android.view.ViewGroup { void <clinit>(); }
-keepclassmembers class java.nio.NioUtils { java.nio.channels.FileChannel newFileChannel(java.io.Closeable,java.io.FileDescriptor,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObjectOverride(); }
-keepclassmembers class java.io.ObjectInputStream { void readStreamHeader(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { void resetSeenObjects(); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class,boolean); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View$BaseSavedState { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { void checkedSetSuperClassDesc(java.io.ObjectStreamClass,java.io.ObjectStreamClass); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.Class getType(); }
-keepclassmembers class java.io.ObjectInputStream { void <clinit>(); }
-keepclassmembers class android.view.MenuInflater$MenuState { java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getTypeString(); }
-keepclassmembers class android.widget.ExpandableListView { void <clinit>(); }
-keepclassmembers class android.text.util.Linkify { void applyLink(java.lang.String,int,int,android.text.Spannable); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String toString(); }
-keepclassmembers class org.apache.http.conn.routing.RouteInfo$TunnelType { void <clinit>(); }
-keepclassmembers class android.text.util.Linkify { void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class java.io.ObjectStreamField { boolean defaultResolve(); }
-keepclassmembers class java.util.HashMap$HashIterator { void remove(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe$IntKeyframe clone(); }
-keepclassmembers class android.text.util.Linkify { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.IllegalArgumentException notAnArray(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Array { java.lang.IllegalArgumentException incompatibleType(java.lang.Object); }
-keepclassmembers class org.apache.http.conn.util.InetAddressUtils { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.RuntimeException badArray(java.lang.Object); }
-keepclassmembers class android.app.ITransientNotification$Stub { void <init>(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object newInstance(java.lang.Class,int); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void <clinit>(); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { java.lang.String getDefaultAlgorithm(); }
-keepclassmembers class android.support.v4.c.a { void <clinit>(); }
-keepclassmembers class android.view.FocusFinder { void <init>(); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int,java.util.ArrayList); }
-keepclassmembers class java.util.logging.LoggingPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float,int); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float,float); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float,java.lang.Object); }
-keepclassmembers class android.view.FocusFinder { boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.view.FocusFinder { boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class com.android.internal.app.AlertController { void <init>(android.content.Context,android.content.DialogInterface,android.view.Window); }
-keepclassmembers class com.android.internal.app.AlertController { boolean shouldCenterSingleButton(android.content.Context); }
-keepclassmembers class android.view.FocusFinder { boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class com.android.internal.app.AlertController { int getIconAttributeResId(int); }
-keepclassmembers class com.android.internal.app.AlertController { void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message); }
-keepclassmembers class android.graphics.Shader$TileMode { void <clinit>(); }
-keepclassmembers class com.android.internal.app.AlertController { void setupDecor(); }
-keepclassmembers class android.view.FocusFinder { void <clinit>(); }
-keepclassmembers class java.security.spec.EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { void <clinit>(); }
-keepclassmembers class android.provider.Settings$Secure { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.provider.Settings$Secure { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class android.provider.Settings$Secure { boolean isLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.provider.Settings$Secure { void <clinit>(); }
-keepclassmembers class android.provider.Settings$Secure { int getLocationModeForUser(android.content.ContentResolver,int); }
-keepclassmembers class android.support.v4.app.ai { void <clinit>(); }
-keepclassmembers class android.util.MapCollections { java.util.Set getKeySet(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.graphics.drawable.StateListDrawable,android.content.res.Resources); }
-keepclassmembers class android.support.v4.app.ai { android.os.Bundle a(android.app.Notification$Builder,android.support.v4.app.ae$a); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void growArray(int,int); }
-keepclassmembers class android.support.v4.app.ai { void a(android.support.v4.app.aa,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.ai { void a(android.support.v4.app.aa,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { void <init>(org.apache.http.conn.scheme.SchemeRegistry); }
-keepclassmembers class android.graphics.Bitmap { void checkXYSign(int,int); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { org.apache.http.conn.OperatedClientConnection createConnection(); }
-keepclassmembers class android.graphics.Bitmap { void checkWidthHeight(int,int); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <init>(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <clinit>(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ba { android.support.v7.widget.ba a(android.content.Context,android.util.AttributeSet,int[],int,int); }
-keepclassmembers class android.graphics.Bitmap { void <clinit>(); }
-keepclassmembers class android.support.v7.a.f { android.support.v7.a.f a(android.content.Context,android.view.Window,android.support.v7.a.e); }
-keepclassmembers class android.graphics.BitmapShader { android.graphics.Shader copy(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readBitString(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readBoolean(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readOctetString(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { org.apache.harmony.security.asn1.ASN1Exception expected(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class java.text.DateFormat { java.lang.String format(java.util.Date); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readString(org.apache.harmony.security.asn1.ASN1StringType); }
-keepclassmembers class java.text.DateFormat { java.util.Date parse(java.lang.String); }
-keepclassmembers class android.widget.Editor { boolean hasPasswordTransformationMethod(); }
-keepclassmembers class android.widget.Editor { boolean extractedTextModeWillBeStarted(); }
-keepclassmembers class android.support.v7.a.g$a { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class android.widget.AbsListView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.c.a.n { boolean c(); }
-keepclassmembers class android.widget.LinearLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.view.menu.h { java.lang.CharSequence getTitleCondensed(); }
-keepclassmembers class org.apache.http.impl.io.SocketInputBuffer { boolean isDataAvailable(int); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <init>(java.lang.String,java.lang.Object); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress disallowDeprecatedFormats(java.lang.String,java.net.InetAddress); }
-keepclassmembers class android.widget.TextView { void setMovementMethod(android.text.method.MovementMethod); }
-keepclassmembers class android.widget.TextView { boolean hasPasswordTransformationMethod(); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithmWithProvider(java.security.Key,java.security.Provider$Service); }
-keepclassmembers class android.widget.TextView { boolean hasOverlappingRendering(); }
-keepclassmembers class android.widget.FrameLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView { boolean isTextEditable(); }
-keepclassmembers class android.widget.TextView { boolean textCanBeSelected(); }
-keepclassmembers class android.support.v7.widget.ax { boolean b(android.content.Context); }
-keepclassmembers class android.widget.TextView { boolean canCut(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.h { boolean b(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$3 { void <init>(int); }
-keepclassmembers class org.apache.http.impl.client.ClientParamsStack { void <init>(org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams); }
-keepclassmembers class android.support.v7.widget.ak$b$a { void <init>(android.support.v7.widget.ak$b); }
-keepclassmembers class android.support.v7.widget.ak$b$a { void <init>(android.support.v7.widget.ak$b,android.support.v7.widget.ak$1); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer); }
-keepclassmembers class android.support.v7.widget.ak$b$a { void run(); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.f.a { void <init>(); }
-keepclassmembers class android.support.v4.f.a { void <init>(int); }
-keepclassmembers class android.content.res.XmlBlock { void close(); }
-keepclassmembers class org.apache.http.entity.ByteArrayEntity { boolean isRepeatable(); }
-keepclassmembers class java.lang.StringBuffer { void <init>(int); }
-keepclassmembers class java.lang.StringBuffer { void <init>(); }
-keepclassmembers class android.graphics.PointF { void <init>(); }
-keepclassmembers class java.lang.StringBuffer { void <init>(java.lang.String); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void debug(java.lang.Object); }
-keepclassmembers class java.util.Hashtable$EntryIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char); }
-keepclassmembers class java.util.Hashtable$EntryIterator { java.lang.Object next(); }
-keepclassmembers class java.util.Hashtable$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void debug(java.lang.Object,java.lang.Throwable); }
-keepclassmembers class java.util.Hashtable$EntryIterator { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void error(java.lang.Object); }
-keepclassmembers class android.graphics.PointF { void set(float,float); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(int); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void removeCallbacksLocked(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.conn.ssl.AllowAllHostnameVerifier { void <init>(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.String); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer,android.view.Choreographer$1); }
-keepclassmembers class java.util.Hashtable { boolean isEmpty(); }
-keepclassmembers class java.nio.ReadOnlyBufferException { void <init>(); }
-keepclassmembers class java.util.Hashtable { int size(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[]); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { java.util.logging.Logger getLogger(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[],int,int); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void info(java.lang.Object); }
-keepclassmembers class dalvik.system.DexPathList { java.util.ArrayList splitDexPath(java.lang.String); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { boolean isDebugEnabled(); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { boolean isErrorEnabled(); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { boolean isInfoEnabled(); }
-keepclassmembers class android.content.res.XmlBlock { int access$100(long); }
-keepclassmembers class java.io.FilterInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.content.res.XmlBlock { int access$200(long); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { boolean isWarnEnabled(); }
-keepclassmembers class java.io.FilterInputStream { void close(); }
-keepclassmembers class java.io.FilterInputStream { int available(); }
-keepclassmembers class java.io.InvalidObjectException { void <init>(java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock { int access$600(long); }
-keepclassmembers class android.graphics.Xfermode { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock { int access$700(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int access$800(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int access$900(long,int); }
-keepclassmembers class java.io.FilterInputStream { int read(); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void warn(java.lang.Object); }
-keepclassmembers class android.content.res.XmlBlock { int access$1000(long,java.lang.String,java.lang.String); }
-keepclassmembers class java.io.FilterInputStream { int read(byte[],int,int); }
-keepclassmembers class android.content.res.XmlBlock { int access$1100(long,int); }
-keepclassmembers class java.io.FilterInputStream { long skip(long); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.content.res.XmlBlock { void access$1600(android.content.res.XmlBlock); }
-keepclassmembers class android.content.res.XmlBlock { void access$1500(long); }
-keepclassmembers class android.util.MathUtils { int constrain(int,int,int); }
-keepclassmembers class java.util.Hashtable { void rehash(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$5 { void <init>(com.shapps.mintubeapp.MainActivity); }
-keepclassmembers class java.util.MissingResourceException { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { void <init>(android.util.PathParser$PathDataNode[]); }
-keepclassmembers class java.lang.StringBuffer { java.lang.String toString(); }
-keepclassmembers class java.util.Collections$UnmodifiableRandomAccessList { void <init>(java.util.List); }
-keepclassmembers class java.lang.StringBuffer { int length(); }
-keepclassmembers class android.animation.Animator { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String descriptorForFieldSignature(java.lang.String); }
-keepclassmembers class android.view.animation.TranslateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.volley.a.d { void <init>(org.apache.http.client.HttpClient); }
-keepclassmembers class android.animation.Animator { void removeListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class forClass(); }
-keepclassmembers class android.animation.Animator { java.util.ArrayList getListeners(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object newInstance(java.lang.Class); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { void <init>(); }
-keepclassmembers class android.animation.Animator { int getChangingConfigurations(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean isHeldExclusively(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService$4 { void <init>(com.shapps.mintubeapp.PlayerService,boolean[],com.shapps.mintubeapp.CustomViews.CircularImageView); }
-keepclassmembers class android.support.v7.widget.ao$n { java.util.ArrayList a(android.support.v7.widget.ao$n); }
-keepclassmembers class java.io.ObjectStreamClass { boolean inSamePackage(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.view.KeyCharacterMap$UnavailableException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.Animator { boolean canReverse(); }
-keepclassmembers class android.animation.Animator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.animation.Animator { void setTarget(java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$2 { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.volley.a.d { org.apache.http.HttpResponse a(com.android.volley.h,java.util.Map); }
-keepclassmembers class android.view.Choreographer { long getFrameIntervalNanos(); }
-keepclassmembers class android.animation.Animator { android.animation.Animator$AnimatorConstantState access$002(android.animation.Animator,android.animation.Animator$AnimatorConstantState); }
-keepclassmembers class android.view.animation.TranslateAnimation { void initialize(int,int,int,int); }
-keepclassmembers class com.android.volley.a.d { void a(org.apache.http.client.methods.HttpUriRequest); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] fields(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void <init>(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context); }
-keepclassmembers class java.util.Hashtable { int access$500(java.util.Hashtable); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] access$600(java.util.Hashtable); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.widget.i { void <init>(android.content.Context); }
-keepclassmembers class android.view.Choreographer { void postCallback(int,java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.i { void a(int,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.List getHierarchy(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.widget.i { boolean a(); }
-keepclassmembers class android.support.v4.widget.i { boolean a(float,float); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.widget.i { boolean a(int); }
-keepclassmembers class android.support.v4.widget.i { boolean a(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.widget.i { boolean b(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.a.a.b { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.a.a.b { void <init>(android.content.Context); }
-keepclassmembers class android.support.a.a.b { void <init>(android.support.a.a.b$1); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getLoadFields(); }
-keepclassmembers class java.io.ObjectStreamClass { byte getFlags(); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDomainHandler { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$OnClickHandler { void <init>(); }
-keepclassmembers class android.view.Choreographer { void removeCallbacksInternal(int,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.a.a.b { android.content.res.TypedArray a(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getName(); }
-keepclassmembers class java.io.ObjectStreamClass { long getSerialVersionUID(); }
-keepclassmembers class android.support.a.a.b { android.graphics.drawable.Drawable$Callback a(android.support.a.a.b); }
-keepclassmembers class android.view.Choreographer { void postFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isExternalizable(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass getSuperclass(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isSerializable(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isPrimitiveType(char); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isSerializable(); }
-keepclassmembers class android.widget.PopupWindow { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isExternalizable(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isProxy(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass lookup(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isEnum(); }
-keepclassmembers class android.widget.PopupWindow { void setAnimationStyle(int); }
-keepclassmembers class android.widget.PopupWindow { android.view.View getContentView(); }
-keepclassmembers class android.support.a.a.b { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.PopupWindow { void setTouchInterceptor(android.view.View$OnTouchListener); }
-keepclassmembers class android.support.a.a.b { boolean canApplyTheme(); }
-keepclassmembers class android.support.a.a.b { void clearColorFilter(); }
-keepclassmembers class android.widget.PopupWindow { void setFocusable(boolean); }
-keepclassmembers class android.widget.PopupWindow { int getInputMethodMode(); }
-keepclassmembers class android.support.a.a.b { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.PopupWindow { void setInputMethodMode(int); }
-keepclassmembers class android.view.Choreographer { boolean isRunningOnLooperThreadLocked(); }
-keepclassmembers class android.widget.PopupWindow { void setTouchable(boolean); }
-keepclassmembers class android.view.Choreographer { void scheduleVsyncLocked(); }
-keepclassmembers class android.view.Choreographer { void recycleCallbackLocked(android.view.Choreographer$CallbackRecord); }
-keepclassmembers class android.support.a.a.b { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.widget.PopupWindow { void setOutsideTouchable(boolean); }
-keepclassmembers class android.widget.PopupWindow { void setClippingEnabled(boolean); }
-keepclassmembers class android.support.a.a.b { int getIntrinsicHeight(); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper,android.view.Choreographer$1); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method findPrivateMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.support.a.a.b { int getIntrinsicWidth(); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord access$500(android.view.Choreographer,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.PopupWindow { boolean isSplitTouchEnabled(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodWriteReplace(); }
-keepclassmembers class android.support.a.a.b { int getLayoutDirection(); }
-keepclassmembers class android.support.a.a.b { int getMinimumHeight(); }
-keepclassmembers class android.view.Choreographer { void access$600(android.view.Choreographer,android.view.Choreographer$CallbackRecord); }
-keepclassmembers class android.widget.PopupWindow { void setSplitTouchEnabled(boolean); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodWriteReplace(); }
-keepclassmembers class android.support.a.a.b { int getMinimumWidth(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodReadResolve(); }
-keepclassmembers class android.support.a.a.b { int getOpacity(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadResolve(); }
-keepclassmembers class java.io.Writer { void <init>(); }
-keepclassmembers class android.widget.PopupWindow { void setAttachedInDecor(boolean); }
-keepclassmembers class android.support.a.a.b { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.a.a.b { int[] getState(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodWriteObject(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodWriteObject(); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { boolean hasNext(); }
-keepclassmembers class android.widget.PopupWindow { void setWindowLayoutType(int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadObject(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodReadObjectNoData(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadObjectNoData(); }
-keepclassmembers class android.widget.PopupWindow { int getHeight(); }
-keepclassmembers class android.widget.PopupWindow { void setHeight(int); }
-keepclassmembers class java.io.ObjectStreamClass { void initPrivateFields(java.io.ObjectStreamClass); }
-keepclassmembers class android.widget.PopupWindow { int getWidth(); }
-keepclassmembers class android.widget.PopupWindow { void setWidth(int); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { int findNext(int); }
-keepclassmembers class java.io.ObjectStreamClass { void setClass(java.lang.Class); }
-keepclassmembers class android.widget.PopupWindow { boolean isShowing(); }
-keepclassmembers class java.io.ObjectStreamClass { void setFields(java.io.ObjectStreamField[]); }
-keepclassmembers class java.util.LinkedList$Link { void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link); }
-keepclassmembers class java.io.ObjectStreamClass { void setLoadFields(java.io.ObjectStreamField[]); }
-keepclassmembers class java.io.ObjectStreamClass { void setFlags(byte); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.view.View,int,int,int); }
-keepclassmembers class java.io.ObjectStreamClass { void setName(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { void setSerialVersionUID(long); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { java.lang.String createToken(java.lang.String,int,int); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.os.IBinder,int,int,int); }
-keepclassmembers class libcore.net.url.JarHandler { void <init>(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(android.os.AsyncTask$1); }
-keepclassmembers class java.io.ObjectStreamClass { void setSuperclass(java.io.ObjectStreamClass); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int,int); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean apply(android.view.View); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(android.view.View); }
-keepclassmembers class android.widget.PopupWindow { boolean isAboveAnchor(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.widget.PopupWindow { void updateAboveAnchor(boolean); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { int access$902(android.view.View$MatchLabelForPredicate,int); }
-keepclassmembers class android.view.animation.Animation$Description { void <init>(); }
-keepclassmembers class android.support.a.a.b { boolean isStateful(); }
-keepclassmembers class android.widget.PopupWindow { void invokePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.support.a.a.b { void jumpToCurrentState(); }
-keepclassmembers class android.support.a.a.b { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { boolean isTokenSeparator(char); }
-keepclassmembers class android.support.a.a.b { boolean onLevelChange(int); }
-keepclassmembers class android.support.a.a.b { boolean onStateChange(int[]); }
-keepclassmembers class android.support.a.a.b { void setAlpha(int); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void <init>(android.widget.RemoteViews,int,android.app.PendingIntent); }
-keepclassmembers class android.support.a.a.b { void setChangingConfigurations(int); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { boolean isWhitespace(char); }
-keepclassmembers class android.support.a.a.b { void setAutoMirrored(boolean); }
-keepclassmembers class org.apache.http.message.BasicStatusLine { int getStatusCode(); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { boolean isTokenChar(char); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class org.apache.http.message.BasicStatusLine { java.lang.String getReasonPhrase(); }
-keepclassmembers class android.support.a.a.b { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class org.apache.http.message.BasicStatusLine { org.apache.http.ProtocolVersion getProtocolVersion(); }
-keepclassmembers class org.apache.http.message.BasicStatusLine { java.lang.String toString(); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.a.a.b { void setHotspot(float,float); }
-keepclassmembers class com.android.volley.i { void <init>(com.android.volley.a,com.android.volley.e); }
-keepclassmembers class android.support.a.a.b { boolean setState(int[]); }
-keepclassmembers class android.support.a.a.b { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.a.a.b { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$3 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.support.a.a.b { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.support.v7.a.n$1 { void <init>(android.support.v7.a.n); }
-keepclassmembers class android.widget.PopupWindow { int computeAnimationResource(); }
-keepclassmembers class android.support.a.a.b { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.a.n$1 { void run(); }
-keepclassmembers class android.support.v4.g.a$a { void <init>(); }
-keepclassmembers class android.support.v4.g.a$a { java.lang.Object a(); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1 { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1 { java.lang.Object initialValue(); }
-keepclassmembers class java.util.Collections$EmptyMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(); }
-keepclassmembers class java.util.Collections$EmptyMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Collections$EmptyMap { java.util.Set entrySet(); }
-keepclassmembers class java.util.Collections$EmptyMap { java.util.Set keySet(); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(java.util.Collections$1); }
-keepclassmembers class com.android.volley.i { int c(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.CRLDistributionPoints$1); }
-keepclassmembers class java.lang.NoSuchMethodException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.a { int getItemId(); }
-keepclassmembers class android.support.v7.view.menu.a { void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void addInterceptor(org.apache.http.HttpRequestInterceptor); }
-keepclassmembers class java.lang.IntegralToString$1 { void <init>(); }
-keepclassmembers class java.lang.IntegralToString$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v7.view.menu.a { java.lang.CharSequence getTitleCondensed(); }
-keepclassmembers class android.widget.PopupWindow { int getMaxAvailableHeight(android.view.View,int); }
-keepclassmembers class android.os.Handler { void <init>(); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper,android.os.Handler$Callback); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void addInterceptor(org.apache.http.HttpResponseInterceptor); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper,android.os.Handler$Callback,boolean); }
-keepclassmembers class java.util.Formatter$1 { void <init>(); }
-keepclassmembers class java.util.Formatter$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.PopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.support.v7.widget.ak$b { android.view.View a(android.support.v7.widget.ak$b); }
-keepclassmembers class android.os.Handler { boolean post(java.lang.Runnable); }
-keepclassmembers class android.os.ResultReceiver$MyResultReceiver { void <init>(android.os.ResultReceiver); }
-keepclassmembers class android.os.Handler { boolean postAtTime(java.lang.Runnable,long); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int); }
-keepclassmembers class android.os.Handler { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.net.Uri { void <init>(); }
-keepclassmembers class android.os.Handler { boolean postAtFrontOfQueue(java.lang.Runnable); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECGroupContext { void <init>(long); }
-keepclassmembers class android.os.Handler { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.support.v7.widget.ak$b { void b(android.support.v7.widget.ak$b); }
-keepclassmembers class android.os.Handler { boolean sendMessage(android.os.Message); }
-keepclassmembers class android.support.v7.widget.ak$b { boolean b(android.view.MotionEvent); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessage(int); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessageDelayed(int,long); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.v7.widget.ak$b { void d(); }
-keepclassmembers class android.support.v7.widget.ak$b { void e(); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.ak$b { boolean c(); }
-keepclassmembers class android.support.v7.widget.ak$b { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.e { int a(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <init>(int[],java.lang.Object,byte[]); }
-keepclassmembers class android.support.v4.app.e { java.lang.String a(java.lang.String); }
-keepclassmembers class android.os.Handler { boolean enqueueMessage(android.os.MessageQueue,android.os.Message,long); }
-keepclassmembers class org.apache.http.impl.io.HttpTransportMetricsImpl { void <init>(); }
-keepclassmembers class android.os.Handler { void removeMessages(int); }
-keepclassmembers class android.os.Handler { void removeMessages(int,java.lang.Object); }
-keepclassmembers class android.os.Handler { void removeCallbacksAndMessages(java.lang.Object); }
-keepclassmembers class android.util.TypedValue { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECGroupContext { long getContext(); }
-keepclassmembers class android.util.TypedValue { float getFloat(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.os.Handler { android.os.Looper getLooper(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { int[] access$000(org.apache.harmony.security.pkcs7.ContentInfo); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { java.lang.Object access$100(org.apache.harmony.security.pkcs7.ContentInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <init>(int[],java.lang.Object,byte[],org.apache.harmony.security.pkcs7.ContentInfo$1); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableAction { void <init>(android.widget.RemoteViews,int,boolean,int,int,int,int); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.util.TypedValue { float getDimension(android.util.DisplayMetrics); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$3 { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.PopupWindow { boolean access$700(android.widget.PopupWindow); }
-keepclassmembers class android.util.TypedValue { float getFraction(float,float); }
-keepclassmembers class android.widget.PopupWindow { android.view.View$OnTouchListener access$900(android.widget.PopupWindow); }
-keepclassmembers class android.util.TypedValue { java.lang.CharSequence coerceToString(); }
-keepclassmembers class android.widget.PopupWindow { android.view.View access$1000(android.widget.PopupWindow); }
-keepclassmembers class android.os.Handler { android.os.Message getPostMessage(java.lang.Runnable); }
-keepclassmembers class com.shapps.mintubeapp.SettingsActivity$2 { void <init>(com.shapps.mintubeapp.SettingsActivity,int[]); }
-keepclassmembers class java.net.SocketImpl { void <init>(); }
-keepclassmembers class java.security.KeyManagementException { void <init>(java.lang.String); }
-keepclassmembers class java.net.SocketImpl { java.net.InetAddress getInetAddress(); }
-keepclassmembers class java.security.KeyManagementException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.net.SocketImpl { int getPort(); }
-keepclassmembers class java.net.SocketImpl { int getLocalPort(); }
-keepclassmembers class android.net.Uri { void writeToParcel(android.os.Parcel,android.net.Uri); }
-keepclassmembers class android.net.Uri { java.lang.String encode(java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService$2 { void <init>(com.shapps.mintubeapp.PlayerService); }
-keepclassmembers class android.support.v7.a.c { android.support.v7.a.b a(android.support.v7.a.c); }
-keepclassmembers class java.util.Calendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class android.support.v7.a.c { void onCreate(android.os.Bundle); }
-keepclassmembers class android.app.Notification$Action$1 { void <init>(); }
-keepclassmembers class java.util.Calendar { void complete(); }
-keepclassmembers class android.net.Uri { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.text.Editable$Factory { void <init>(); }
-keepclassmembers class android.net.Uri { android.net.Uri withAppendedPath(android.net.Uri,java.lang.String); }
-keepclassmembers class android.view.HardwareCanvas { void <init>(); }
-keepclassmembers class android.os.AsyncTask { void postResultIfNotInvoked(java.lang.Object); }
-keepclassmembers class android.view.HardwareCanvas { boolean isHardwareAccelerated(); }
-keepclassmembers class java.util.Calendar { int get(int); }
-keepclassmembers class android.os.AsyncTask { void onPreExecute(); }
-keepclassmembers class android.view.HardwareCanvas { void drawRenderNode(android.view.RenderNode); }
-keepclassmembers class android.os.AsyncTask { java.lang.Object get(); }
-keepclassmembers class android.os.AsyncTask { android.os.AsyncTask execute(java.lang.Object[]); }
-keepclassmembers class java.util.Calendar { int getFirstDayOfWeek(); }
-keepclassmembers class android.net.Uri { void <init>(android.net.Uri$1); }
-keepclassmembers class android.os.AsyncTask { void execute(java.lang.Runnable); }
-keepclassmembers class android.animation.PathKeyframes$3 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.os.AsyncTask { java.util.concurrent.atomic.AtomicBoolean access$200(android.os.AsyncTask); }
-keepclassmembers class java.util.Calendar { int getMinimalDaysInFirstWeek(); }
-keepclassmembers class android.os.AsyncTask { java.lang.Object access$300(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class android.os.AsyncTask { void access$400(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { void <init>(java.lang.String,int,java.util.ArrayList); }
-keepclassmembers class java.util.Calendar { long getTimeInMillis(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { java.lang.String access$100(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class java.util.Calendar { java.util.TimeZone getTimeZone(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { int access$200(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { java.util.ArrayList access$300(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class java.util.Calendar { boolean isLenient(); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <init>(java.util.List); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { void <init>(java.lang.String,int,java.util.ArrayList,org.apache.harmony.security.fortress.Engine$1); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { int size(); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.Calendar { void set(int,int); }
-keepclassmembers class java.util.Calendar { void set(int,int,int); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { org.apache.http.conn.routing.HttpRoute getRoute(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { boolean isUnused(); }
-keepclassmembers class java.util.Calendar { void set(int,int,int,int,int); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { int getMaxEntries(); }
-keepclassmembers class java.util.Calendar { void set(int,int,int,int,int,int); }
-keepclassmembers class java.util.Calendar { void setFirstDayOfWeek(int); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object); }
-keepclassmembers class android.animation.StateListAnimator { void start(android.animation.StateListAnimator$Tuple); }
-keepclassmembers class java.util.Calendar { void setMinimalDaysInFirstWeek(int); }
-keepclassmembers class java.util.Calendar { void setLenient(boolean); }
-keepclassmembers class android.animation.StateListAnimator { void cancel(); }
-keepclassmembers class java.util.Calendar { void setTime(java.util.Date); }
-keepclassmembers class android.animation.StateListAnimator { int getChangingConfigurations(); }
-keepclassmembers class android.animation.StateListAnimator { void jumpToCurrentState(); }
-keepclassmembers class java.util.Calendar { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class android.animation.StateListAnimator { void setChangingConfigurations(int); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$000(android.animation.StateListAnimator); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$002(android.animation.StateListAnimator,android.animation.Animator); }
-keepclassmembers class javax.security.auth.x500.X500Principal { int hashCode(); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.String); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.Exception); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator$StateListAnimatorConstantState access$202(android.animation.StateListAnimator,android.animation.StateListAnimator$StateListAnimatorConstantState); }
-keepclassmembers class java.util.zip.ZipException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { boolean hasThread(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { int hashCode(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.RouteSpecificPool { void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread); }
-keepclassmembers class java.net.SocketException { void <init>(); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.String); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { java.util.List access$000(org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class android.support.v4.g.af$f { void <init>(); }
-keepclassmembers class android.widget.BaseAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.BaseAdapter { boolean hasStableIds(); }
-keepclassmembers class android.widget.BaseAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(); }
-keepclassmembers class android.widget.BaseAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.widget.BaseAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEnabled(int); }
-keepclassmembers class android.support.v4.g.af$f { boolean b(android.view.View,int); }
-keepclassmembers class android.widget.BaseAdapter { int getItemViewType(int); }
-keepclassmembers class android.widget.BaseAdapter { int getViewTypeCount(); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEmpty(); }
-keepclassmembers class java.util.TreeMap$1 { void <init>(); }
-keepclassmembers class java.util.TreeMap$1 { int compare(java.lang.Comparable,java.lang.Comparable); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.net.BindException { void <init>(java.lang.String); }
-keepclassmembers class java.net.BindException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(android.os.StrictMode$1); }
-keepclassmembers class java.util.AbstractSet { void <init>(); }
-keepclassmembers class android.app.Service { void <init>(); }
-keepclassmembers class java.lang.UnsatisfiedLinkError { void <init>(java.lang.String); }
-keepclassmembers class android.view.KeyEvent { int getDeadChar(int,int); }
-keepclassmembers class java.util.AbstractQueue { void <init>(); }
-keepclassmembers class android.app.Service { android.app.Application getApplication(); }
-keepclassmembers class android.app.Service { void onCreate(); }
-keepclassmembers class android.app.Service { void onStart(android.content.Intent,int); }
-keepclassmembers class android.app.Service { void onDestroy(); }
-keepclassmembers class android.app.Service { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.animation.ObjectAnimator { void setPropertyName(java.lang.String); }
-keepclassmembers class android.app.Service { void onLowMemory(); }
-keepclassmembers class android.app.Service { void onTrimMemory(int); }
-keepclassmembers class android.app.Service { boolean onUnbind(android.content.Intent); }
-keepclassmembers class android.app.Service { void onTaskRemoved(android.content.Intent); }
-keepclassmembers class android.app.Service { void onRebind(android.content.Intent); }
-keepclassmembers class android.animation.ObjectAnimator { void setProperty(android.util.Property); }
-keepclassmembers class android.app.Service { void stopSelf(); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicy(android.os.StrictMode$ThreadPolicy); }
-keepclassmembers class android.view.KeyEvent { void <init>(long,long,int,int,int,int,int,int,int); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicyMask(int); }
-keepclassmembers class android.support.v4.app.p$1 { void <init>(android.support.v4.app.p); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.support.v4.app.p$1 { void run(); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,android.util.Property); }
-keepclassmembers class android.os.Binder { void <init>(); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,long,int); }
-keepclassmembers class android.app.PendingIntent$1 { void <init>(); }
-keepclassmembers class android.os.Binder { void attachInterface(android.os.IInterface,java.lang.String); }
-keepclassmembers class android.animation.AnimatorSet$Node { void <init>(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.design.widget.u { void b(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,int); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$202(android.animation.AnimatorSet$Node,android.animation.AnimatorSet$Node); }
-keepclassmembers class android.support.design.widget.u { void a(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$200(android.animation.AnimatorSet$Node); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setAlpha(int); }
-keepclassmembers class java.io.ObjectStreamClass$5 { void <init>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.os.StrictMode { void onWebViewMethodCalledOnWrongThread(java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.io.ObjectStreamClass$5 { java.lang.Object initialValue(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getOpacity(); }
-keepclassmembers class android.view.KeyEvent { boolean isConfirmKey(int); }
-keepclassmembers class android.support.v4.widget.ab { void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.graphics.drawable.ClipDrawable,android.content.res.Resources); }
-keepclassmembers class android.app.Activity { android.content.Intent getIntent(); }
-keepclassmembers class android.app.Activity { void setIntent(android.content.Intent); }
-keepclassmembers class android.app.Activity { boolean isChild(); }
-keepclassmembers class android.app.Activity { android.app.Application getApplication(); }
-keepclassmembers class java.util.zip.ZipFile$1 { void <init>(java.util.zip.ZipFile,java.util.Iterator); }
-keepclassmembers class android.view.KeyEvent { int getMetaState(); }
-keepclassmembers class android.app.Activity { android.app.Activity getParent(); }
-keepclassmembers class java.util.zip.ZipFile$1 { boolean hasMoreElements(); }
-keepclassmembers class android.app.Activity { android.view.WindowManager getWindowManager(); }
-keepclassmembers class android.view.KeyEvent { int getFlags(); }
-keepclassmembers class android.app.Activity { android.view.Window getWindow(); }
-keepclassmembers class android.view.KeyEvent { boolean isModifierKey(int); }
-keepclassmembers class java.util.zip.ZipFile$1 { java.lang.Object nextElement(); }
-keepclassmembers class java.util.Formatter$FormatToken { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { boolean canApplyTheme(); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean isDefault(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean isPrecisionSet(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { int getChangingConfigurations(); }
-keepclassmembers class java.util.Formatter$FormatToken { int getArgIndex(); }
-keepclassmembers class android.app.Activity { android.view.View getCurrentFocus(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { boolean canConstantState(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setArgIndex(int); }
-keepclassmembers class java.util.Formatter$FormatToken { int getWidth(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void clearMutated(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setWidth(int); }
-keepclassmembers class java.util.Formatter$FormatToken { int getPrecision(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setPrecision(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources,android.graphics.drawable.InsetDrawable$1); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { boolean verify(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class android.view.KeyEvent { boolean hasNoModifiers(); }
-keepclassmembers class android.view.KeyEvent { boolean hasModifiers(int); }
-keepclassmembers class java.util.Formatter$FormatToken { char getConversionType(); }
-keepclassmembers class android.app.Activity { void onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class java.util.Formatter$FormatToken { void setConversionType(char); }
-keepclassmembers class java.util.Formatter$FormatToken { char getDateSuffix(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setDateSuffix(char); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean requireArgument(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <init>(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { boolean defaultIsRtl(); }
-keepclassmembers class android.view.KeyEvent { int getAction(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void showWithActionPopup(); }
-keepclassmembers class android.animation.ObjectAnimator { void setAutoCancel(boolean); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void removeHiderCallback(); }
-keepclassmembers class android.app.Activity { void onPostCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.view.KeyEvent { int getRepeatCount(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHorizontalGravity(boolean); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.app.Activity { boolean isVoiceInteraction(); }
-keepclassmembers class android.view.KeyEvent { int getUnicodeChar(int); }
-keepclassmembers class android.app.Activity { android.app.VoiceInteractor getVoiceInteractor(); }
-keepclassmembers class android.view.KeyEvent { boolean getKeyData(android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class android.os.StrictMode { int access$1000(java.lang.String); }
-keepclassmembers class android.os.StrictMode { void access$1100(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.os.StrictMode { void access$1200(int); }
-keepclassmembers class android.os.StrictMode { void access$1300(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.view.KeyEvent { char getNumber(); }
-keepclassmembers class android.view.KeyEvent { char getMatch(char[],int); }
-keepclassmembers class android.app.Activity { void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCurrentCursorOffset(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator setDuration(long); }
-keepclassmembers class libcore.util.ZoneInfo { int getRawOffset(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updatePosition(float,float); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.Object getTarget(); }
-keepclassmembers class android.app.Activity { void onPause(); }
-keepclassmembers class libcore.util.ZoneInfo { int getDSTSavings(); }
-keepclassmembers class android.app.Activity { boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void onDetached(); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence onCreateDescription(); }
-keepclassmembers class java.util.Formatter$FormatToken { void <init>(java.util.Formatter$1); }
-keepclassmembers class android.app.Activity { void onProvideAssistData(android.os.Bundle); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.Object clone(); }
-keepclassmembers class android.app.Activity { void reportFullyDrawn(); }
-keepclassmembers class android.app.Activity { int getChangingConfigurations(); }
-keepclassmembers class android.app.Activity { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.app.Activity { java.lang.Object getLastNonConfigurationInstance(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class android.app.Activity { java.lang.Object onRetainNonConfigurationInstance(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator clone(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { void <init>(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compare(org.apache.harmony.security.x501.AttributeTypeAndValue,org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class android.app.Activity { void onLowMemory(); }
-keepclassmembers class android.app.Activity { void onTrimMemory(int); }
-keepclassmembers class android.app.Activity { android.app.FragmentManager getFragmentManager(); }
-keepclassmembers class android.support.v4.g.ad$a { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void start(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void stop(); }
-keepclassmembers class android.support.v4.g.ad$a { float a(android.view.VelocityTracker,int); }
-keepclassmembers class android.app.Activity { void onAttachFragment(android.app.Fragment); }
-keepclassmembers class android.support.v4.g.ad$a { float b(android.view.VelocityTracker,int); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class android.support.v4.c.a.a { void a(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setAlpha(int); }
-keepclassmembers class android.support.v4.c.a.a { void a(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.c.a.a { void a(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.app.Activity { void setPersistent(boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getOpacity(); }
-keepclassmembers class android.app.Activity { android.view.View findViewById(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.support.v4.c.a.a { void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.app.Activity { android.app.ActionBar getActionBar(); }
-keepclassmembers class android.support.v4.c.a.a { void a(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.c.a.a { void a(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean isStateful(); }
-keepclassmembers class android.support.v4.c.a.a { void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.c.a.a { void a(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.app.Activity { void setContentView(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.app.Activity { void setContentView(android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.support.v4.c.a.a { boolean d(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.app.Activity { void setContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.app.Activity { void addContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.c.a.a { android.graphics.drawable.Drawable f(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { android.transition.TransitionManager getContentTransitionManager(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.c.a.a { int g(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void setContentTransitionManager(android.transition.TransitionManager); }
-keepclassmembers class java.io.InputStream { void <init>(); }
-keepclassmembers class android.app.Activity { android.transition.Scene getContentScene(); }
-keepclassmembers class java.io.InputStream { void close(); }
-keepclassmembers class android.app.Activity { void setFinishOnTouchOutside(boolean); }
-keepclassmembers class java.io.InputStream { int read(byte[]); }
-keepclassmembers class java.io.InputStream { long skip(long); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <init>(); }
-keepclassmembers class android.app.Activity { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class android.app.Activity { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.app.Activity { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.app.Activity { void onBackPressed(); }
-keepclassmembers class android.app.Activity { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.app.Activity { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.f.e { void <init>(); }
-keepclassmembers class android.app.Activity { void onUserInteraction(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void <init>(android.graphics.drawable.Animatable); }
-keepclassmembers class android.app.Activity { void onWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void start(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void stop(); }
-keepclassmembers class android.app.Activity { void onContentChanged(); }
-keepclassmembers class android.app.Activity { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.app.Activity { void onAttachedToWindow(); }
-keepclassmembers class android.app.Activity { void onDetachedFromWindow(); }
-keepclassmembers class android.app.Activity { boolean hasWindowFocus(); }
-keepclassmembers class android.app.Activity { void onWindowDismissed(); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesDuration(int); }
-keepclassmembers class android.support.v4.f.e { java.lang.Object a(long); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyShortcutEvent(android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void clearMutated(); }
-keepclassmembers class android.app.Activity { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.f.e { java.lang.Object a(long,java.lang.Object); }
-keepclassmembers class android.view.View$TintInfo { void <init>(); }
-keepclassmembers class android.view.View$TintInfo { void <init>(android.view.View$1); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources,android.graphics.drawable.AnimatedRotateDrawable$1); }
-keepclassmembers class android.app.Activity { boolean dispatchTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <init>(); }
-keepclassmembers class android.app.Activity { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.f.e { void b(long); }
-keepclassmembers class android.app.Activity { android.view.View onCreatePanelView(int); }
-keepclassmembers class android.view.View$14 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.ad$a { android.app.Notification$Builder a(); }
-keepclassmembers class android.support.v4.app.ad$a { void a(android.support.v4.app.ae$a); }
-keepclassmembers class android.support.v4.app.ad$a { android.app.Notification b(); }
-keepclassmembers class android.widget.PopupWindow$1 { void <init>(android.widget.PopupWindow); }
-keepclassmembers class java.util.Locale$Builder { boolean isValidVariantSubtag(java.lang.String); }
-keepclassmembers class android.app.Activity { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class javax.net.SocketFactory { void <init>(); }
-keepclassmembers class android.app.Activity { void invalidateOptionsMenu(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$b { void <init>(android.support.design.widget.FloatingActionButton); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$b { void <init>(android.support.design.widget.FloatingActionButton,android.support.design.widget.FloatingActionButton$1); }
-keepclassmembers class android.app.Activity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.app.Activity { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.support.v7.a.b$1 { void <init>(android.support.v7.a.b); }
-keepclassmembers class android.app.Activity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void <init>(); }
-keepclassmembers class android.view.View { void initializeFadingEdgeInternal(android.content.res.TypedArray); }
-keepclassmembers class android.app.Activity { boolean onNavigateUpFromChild(android.app.Activity); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void recycle(); }
-keepclassmembers class android.app.Activity { void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class android.app.Activity { void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class android.view.GLES20RecordingCanvas { long finishRecording(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$4 { void <init>(com.shapps.mintubeapp.MainActivity); }
-keepclassmembers class android.view.View { int getVerticalFadingEdgeLength(); }
-keepclassmembers class android.app.Activity { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.view.GLES20RecordingCanvas { boolean isRecordingFor(java.lang.Object); }
-keepclassmembers class android.app.Activity { void openOptionsMenu(); }
-keepclassmembers class android.view.View { int getHorizontalFadingEdgeLength(); }
-keepclassmembers class android.app.Activity { void closeOptionsMenu(); }
-keepclassmembers class android.view.View { int getVerticalScrollbarWidth(); }
-keepclassmembers class android.app.Activity { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.app.Activity { void registerForContextMenu(android.view.View); }
-keepclassmembers class android.view.View { int getHorizontalScrollbarHeight(); }
-keepclassmembers class org.apache.http.params.BasicHttpParams { void <init>(); }
-keepclassmembers class android.app.Activity { void unregisterForContextMenu(android.view.View); }
-keepclassmembers class java.lang.IllegalThreadStateException { void <init>(); }
-keepclassmembers class org.apache.http.params.BasicHttpParams { java.lang.Object getParameter(java.lang.String); }
-keepclassmembers class android.app.Activity { void openContextMenu(android.view.View); }
-keepclassmembers class android.app.Activity { void closeContextMenu(); }
-keepclassmembers class java.lang.IllegalThreadStateException { void <init>(java.lang.String); }
-keepclassmembers class android.provider.Settings$NameValueCache { android.content.IContentProvider lazyGetProvider(android.content.ContentResolver); }
-keepclassmembers class android.view.View$11 { void <init>(java.lang.String); }
-keepclassmembers class android.app.Activity { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.app.Activity { void onContextMenuClosed(android.view.Menu); }
-keepclassmembers class android.app.Activity { void showDialog(int); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.String); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.c.a.h { void a(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.view.View { int getVerticalScrollbarPosition(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <init>(org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1000(java.lang.String,boolean); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1100(java.lang.String,boolean); }
-keepclassmembers class android.support.v4.c.a.h { void a(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <init>(org.apache.harmony.security.x501.Name); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1200(java.lang.String); }
-keepclassmembers class java.util.Locale$Builder { boolean access$1300(java.lang.String); }
-keepclassmembers class android.support.v4.c.a.h { void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.c.a.h { void a(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1400(java.lang.String,boolean); }
-keepclassmembers class android.app.Activity { void startSearch(java.lang.String,boolean,android.os.Bundle,boolean); }
-keepclassmembers class android.support.v4.c.a.h { void a(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { org.apache.harmony.security.x509.GeneralNames access$000(org.apache.harmony.security.x509.DistributionPointName); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { org.apache.harmony.security.x501.Name access$100(org.apache.harmony.security.x509.DistributionPointName); }
-keepclassmembers class android.view.View { void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.app.Activity { void triggerSearch(java.lang.String,android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.c.a.h { void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.c.a.h { boolean b(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void takeKeyEvents(boolean); }
-keepclassmembers class android.app.Activity { boolean requestWindowFeature(int); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableResource(int,int); }
-keepclassmembers class android.support.a.a.b$b { void <init>(android.graphics.drawable.Drawable$ConstantState); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableUri(int,android.net.Uri); }
-keepclassmembers class android.support.a.a.b$b { int getChangingConfigurations(); }
-keepclassmembers class android.app.Activity { void setFeatureDrawable(int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableAlpha(int,int); }
-keepclassmembers class android.view.View { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.app.Activity { android.view.LayoutInflater getLayoutInflater(); }
-keepclassmembers class android.view.View { boolean hasOnClickListeners(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$5 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.view.View { void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener); }
-keepclassmembers class org.apache.http.auth.AuthState { void <init>(); }
-keepclassmembers class android.widget.AbsListView$2 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class org.apache.http.auth.AuthState { void invalidate(); }
-keepclassmembers class org.apache.http.auth.AuthState { boolean isValid(); }
-keepclassmembers class android.widget.Editor { void onAttachedToWindow(); }
-keepclassmembers class android.view.View { boolean performClick(); }
-keepclassmembers class org.apache.http.auth.AuthState { void setAuthScheme(org.apache.http.auth.AuthScheme); }
-keepclassmembers class org.apache.http.auth.AuthState { org.apache.http.auth.AuthScheme getAuthScheme(); }
-keepclassmembers class org.apache.http.auth.AuthState { org.apache.http.auth.Credentials getCredentials(); }
-keepclassmembers class org.apache.http.auth.AuthState { void setCredentials(org.apache.http.auth.Credentials); }
-keepclassmembers class org.apache.http.auth.AuthState { org.apache.http.auth.AuthScope getAuthScope(); }
-keepclassmembers class org.apache.http.auth.AuthState { void setAuthScope(org.apache.http.auth.AuthScope); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class android.widget.Editor { void onDetachedFromWindow(); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.view.View { boolean showContextMenu(); }
-keepclassmembers class android.view.View { boolean showContextMenu(float,float,int); }
-keepclassmembers class android.view.View { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.view.View { void setOnKeyListener(android.view.View$OnKeyListener); }
-keepclassmembers class android.view.View { void setOnTouchListener(android.view.View$OnTouchListener); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.UserHandle); }
-keepclassmembers class android.support.a.a.c { float[] a(float[],int,int); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toNanos(long); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.Context,int); }
-keepclassmembers class android.support.v4.g.af$e { void <init>(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class android.widget.Editor { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect); }
-keepclassmembers class android.widget.Editor { void hideError(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.RemoteViews$TextViewSizeAction { void <init>(android.widget.RemoteViews,int,int,float); }
-keepclassmembers class android.widget.RemoteViews$TextViewSizeAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getScheme(); }
-keepclassmembers class android.view.View { void clearFocus(); }
-keepclassmembers class android.widget.RemoteViews$TextViewSizeAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { android.net.Uri$Part getSsp(); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class android.view.View { void notifyGlobalFocusCleared(android.view.View); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.view.View { boolean rootViewRequestFocus(); }
-keepclassmembers class android.view.View { void unFocus(android.view.View); }
-keepclassmembers class android.widget.Editor { boolean isCursorVisible(); }
-keepclassmembers class android.view.View { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.view.View { void sendAccessibilityEvent(int); }
-keepclassmembers class android.support.v7.widget.ao$v { int f(android.support.v7.widget.ao$v); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String toString(); }
-keepclassmembers class android.view.View { void sendAccessibilityEventInternal(int); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.widget.Editor { void hideInsertionPointCursorController(); }
-keepclassmembers class android.database.ContentObservable { void <init>(); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[]); }
-keepclassmembers class android.widget.Editor { void hideControllers(); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.database.ContentObservable { void registerObserver(android.database.ContentObserver); }
-keepclassmembers class android.widget.Editor { void hideSpanControllers(); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.Editor { void hideCursorControllers(); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(); }
-keepclassmembers class android.widget.Editor { void onScreenStateChanged(int); }
-keepclassmembers class android.widget.Editor { void suspendBlink(); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int); }
-keepclassmembers class android.widget.Editor { void resumeBlink(); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.View { void getBoundsOnScreen(android.graphics.Rect); }
-keepclassmembers class java.io.DataInputStream { int read(byte[],int,int); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setAlpha(int); }
-keepclassmembers class java.io.DataInputStream { double readDouble(); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int); }
-keepclassmembers class java.io.DataInputStream { float readFloat(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.io.DataInputStream { void readFully(byte[]); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.io.DataInputStream { void readFully(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.widget.Editor { boolean canSelectText(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getOpacity(); }
-keepclassmembers class java.io.DataInputStream { int readInt(); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int); }
-keepclassmembers class com.android.volley.b { void <init>(java.util.concurrent.BlockingQueue,java.util.concurrent.BlockingQueue,com.android.volley.a,com.android.volley.k); }
-keepclassmembers class com.android.volley.b { java.util.concurrent.BlockingQueue a(com.android.volley.b); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class com.android.volley.b { void a(); }
-keepclassmembers class java.io.DataInputStream { long readLong(); }
-keepclassmembers class java.io.DataInputStream { short readShort(); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class java.io.DataInputStream { java.lang.String readUTF(); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class java.io.DataInputStream { java.lang.String decodeUTF(int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.app.Activity { void overridePendingTransition(int,int); }
-keepclassmembers class android.app.Activity { void setResult(int); }
-keepclassmembers class android.app.Activity { void setResult(int,android.content.Intent); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class java.util.TreeMap$Bound$3 { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.app.Activity { java.lang.String getCallingPackage(); }
-keepclassmembers class android.widget.TextView$CharWrapper { char[] access$002(android.widget.TextView$CharWrapper,char[]); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getCallingActivity(); }
-keepclassmembers class android.app.Activity { void setVisible(boolean); }
-keepclassmembers class android.view.View { android.view.View$AccessibilityDelegate getAccessibilityDelegate(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.view.View { void setAccessibilityDelegate(android.view.View$AccessibilityDelegate); }
-keepclassmembers class android.app.Activity { boolean isFinishing(); }
-keepclassmembers class android.app.Activity { boolean isDestroyed(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.view.View { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(); }
-keepclassmembers class android.app.Activity { boolean isChangingConfigurations(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void <init>(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setColor(int); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.View { int getAccessibilityWindowId(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void update(); }
-keepclassmembers class android.view.View { java.lang.CharSequence getContentDescription(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float); }
-keepclassmembers class android.app.Activity { void finish(boolean); }
-keepclassmembers class android.view.View { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.app.Activity { void finish(); }
-keepclassmembers class java.io.UnsupportedEncodingException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalBefore(int); }
-keepclassmembers class org.apache.http.client.protocol.RequestTargetAuthentication { void <init>(); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalAfter(int); }
-keepclassmembers class android.app.Activity { void finishFromChild(android.app.Activity); }
-keepclassmembers class android.app.Activity { void finishAfterTransition(); }
-keepclassmembers class android.app.Activity { void finishActivity(int); }
-keepclassmembers class android.view.View { void setLabelFor(int); }
-keepclassmembers class android.app.Activity { void finishActivityFromChild(android.app.Activity,int); }
-keepclassmembers class android.view.View { void onFocusLost(); }
-keepclassmembers class android.app.Activity { void finishAndRemoveTask(); }
-keepclassmembers class android.app.Activity { boolean releaseInstance(); }
-keepclassmembers class android.app.Activity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.app.Activity { void onActivityReenter(int,android.content.Intent); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.widget.aa$d { void <init>(); }
-keepclassmembers class android.support.v4.widget.aa$d { void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class java.net.Socket { void close(); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.lang.String); }
-keepclassmembers class java.lang.String { void <init>(byte[],java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void lock(); }
-keepclassmembers class android.app.Activity { void setRequestedOrientation(int); }
-keepclassmembers class java.net.Socket { java.net.InetAddress getInetAddress(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { boolean tryAcquire(int); }
-keepclassmembers class android.app.Activity { int getRequestedOrientation(); }
-keepclassmembers class android.app.Activity { int getTaskId(); }
-keepclassmembers class android.util.Property { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.app.Activity { boolean isTaskRoot(); }
-keepclassmembers class java.net.Socket { java.net.InetAddress getLocalAddress(); }
-keepclassmembers class android.app.Activity { boolean moveTaskToBack(boolean); }
-keepclassmembers class java.net.Socket { int getPort(); }
-keepclassmembers class android.util.Property { java.lang.String getName(); }
-keepclassmembers class android.widget.Editor { long getLastTouchOffsets(); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getComponentName(); }
-keepclassmembers class java.nio.charset.CoderResult { void <init>(int,int); }
-keepclassmembers class android.app.Activity { android.content.SharedPreferences getPreferences(int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v7.f.a { void a(android.view.ViewGroup); }
-keepclassmembers class java.nio.ByteOrder { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources,android.graphics.drawable.RotateDrawable$1); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm); }
-keepclassmembers class android.app.Activity { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Activity { void setTitle(int); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(char[],int,int); }
-keepclassmembers class android.app.Activity { void setTitleColor(int); }
-keepclassmembers class org.apache.http.client.methods.HttpDelete { void <init>(java.lang.String); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.animation.AnimatorInflater { int getChangingConfigs(android.content.res.Resources,int); }
-keepclassmembers class android.app.Activity { int getTitleColor(); }
-keepclassmembers class java.lang.String { void <init>(byte[],java.nio.charset.Charset); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void <init>(int); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean doCheck(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.String { void <init>(char[]); }
-keepclassmembers class android.content.res.ConstantState { void <init>(); }
-keepclassmembers class java.net.Socket { void setTcpNoDelay(boolean); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isMalformed(); }
-keepclassmembers class java.lang.String { void <init>(int,int,char[]); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void post(java.lang.Runnable); }
-keepclassmembers class android.app.Activity { void setProgressBarVisibility(boolean); }
-keepclassmembers class android.widget.Editor { int getLastTapPosition(); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminateVisibility(boolean); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isUnmappable(); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminate(boolean); }
-keepclassmembers class android.widget.Editor { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.support.v4.app.i { void <init>(); }
-keepclassmembers class android.app.Activity { void setVolumeControlStream(int); }
-keepclassmembers class android.widget.Editor { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.i { void onCreate(android.os.Bundle); }
-keepclassmembers class android.app.Activity { int getVolumeControlStream(); }
-keepclassmembers class android.app.Activity { void setMediaController(android.media.session.MediaController); }
-keepclassmembers class java.net.Socket { boolean usingSocks(); }
-keepclassmembers class android.app.Activity { android.media.session.MediaController getMediaController(); }
-keepclassmembers class android.app.Activity { void runOnUiThread(java.lang.Runnable); }
-keepclassmembers class android.app.Activity { android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.a.n$b { void <init>(android.support.v7.a.n); }
-keepclassmembers class android.support.v7.a.n$b { void <init>(android.support.v7.a.n,android.support.v7.a.n$1); }
-keepclassmembers class android.widget.Editor { void ensureEndedBatchEdit(); }
-keepclassmembers class android.widget.Editor { void finishBatchEdit(android.widget.Editor$InputMethodState); }
-keepclassmembers class android.support.v7.a.n$b { void a(android.support.v7.view.menu.f); }
-keepclassmembers class android.view.View { void setFitsSystemWindows(boolean); }
-keepclassmembers class android.view.View { void requestFitSystemWindows(); }
-keepclassmembers class android.app.Activity { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.view.View { void requestApplyInsets(); }
-keepclassmembers class android.view.View { void setVisibility(int); }
-keepclassmembers class android.app.Activity$1 { void <init>(android.app.Activity); }
-keepclassmembers class android.support.v4.widget.a$b { void <init>(android.support.v4.widget.a); }
-keepclassmembers class android.support.v4.widget.a$b { void <init>(android.support.v4.widget.a,android.support.v4.widget.a$1); }
-keepclassmembers class android.view.View { void setEnabled(boolean); }
-keepclassmembers class android.view.View { void setFocusable(boolean); }
-keepclassmembers class java.net.Socket { boolean isBound(); }
-keepclassmembers class android.support.v4.widget.a$b { void run(); }
-keepclassmembers class java.net.Socket { boolean isConnected(); }
-keepclassmembers class android.view.View { void setFocusableInTouchMode(boolean); }
-keepclassmembers class java.net.Socket { boolean isClosed(); }
-keepclassmembers class android.app.Activity { boolean isImmersive(); }
-keepclassmembers class android.view.View { boolean isLayoutRtl(); }
-keepclassmembers class android.support.v4.g.a$a$1 { void <init>(android.support.v4.g.a$a,android.support.v4.g.a); }
-keepclassmembers class android.app.Activity { boolean isTopOfTask(); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieSpec { java.util.Collection getAttribHandlers(); }
-keepclassmembers class android.app.Activity { void convertFromTranslucent(); }
-keepclassmembers class android.text.style.TtsSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.Editor { boolean reportExtractedText(); }
-keepclassmembers class android.app.Activity { boolean convertToTranslucent(android.app.Activity$TranslucentConversionListener,android.app.ActivityOptions); }
-keepclassmembers class android.view.View { boolean isAttachedToWindow(); }
-keepclassmembers class android.view.View { void setWillNotDraw(boolean); }
-keepclassmembers class java.lang.String { byte[] getBytes(); }
-keepclassmembers class android.view.View { void setWillNotCacheDrawing(boolean); }
-keepclassmembers class org.apache.http.impl.client.DefaultTargetAuthenticationHandler { void <init>(); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.lang.String); }
-keepclassmembers class java.net.Socket { boolean isInputShutdown(); }
-keepclassmembers class java.net.Socket { boolean isOutputShutdown(); }
-keepclassmembers class android.app.Activity { void onNewActivityOptions(android.app.ActivityOptions); }
-keepclassmembers class android.view.View { void setClickable(boolean); }
-keepclassmembers class android.view.View { void setLongClickable(boolean); }
-keepclassmembers class android.view.View { void setPressed(boolean,float,float); }
-keepclassmembers class android.widget.Editor { void onDraw(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.app.Activity { boolean requestVisibleBehind(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void <init>(); }
-keepclassmembers class android.view.View { void dispatchSetPressed(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.app.Activity { void onVisibleBehindCanceled(); }
-keepclassmembers class android.support.v7.view.menu.k$a { void <init>(android.support.v7.view.menu.k,android.support.v7.view.menu.f); }
-keepclassmembers class android.app.Activity { boolean isBackgroundVisibleBehind(); }
-keepclassmembers class android.support.v7.view.menu.k$a { android.support.v7.view.menu.f a(android.support.v7.view.menu.k$a); }
-keepclassmembers class android.app.Activity { void onBackgroundVisibleBehindChanged(boolean); }
-keepclassmembers class android.app.Activity { void onEnterAnimationComplete(); }
-keepclassmembers class java.lang.String { int indexOf(int); }
-keepclassmembers class android.app.Activity { void dispatchEnterAnimationComplete(); }
-keepclassmembers class java.net.Socket { void accepted(); }
-keepclassmembers class java.net.Socket { void cacheLocalAddress(); }
-keepclassmembers class java.lang.String { int indexOf(int,int); }
-keepclassmembers class android.app.Activity { void setImmersive(boolean); }
-keepclassmembers class java.net.Socket { java.io.FileDescriptor getFileDescriptor$(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.app.Activity { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.app.Activity { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.app.Activity { void onActionModeStarted(android.view.ActionMode); }
-keepclassmembers class android.view.View { android.view.View focusSearch(int); }
-keepclassmembers class android.app.Activity { void onActionModeFinished(android.view.ActionMode); }
-keepclassmembers class android.app.Activity { boolean shouldUpRecreateTask(android.content.Intent); }
-keepclassmembers class android.support.v7.view.menu.k$a { java.lang.Object getItem(int); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity { void <init>(); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int); }
-keepclassmembers class java.lang.String { boolean isEmpty(); }
-keepclassmembers class android.graphics.PointF$1 { void <init>(); }
-keepclassmembers class java.text.NumberFormat$Field { void <init>(java.lang.String); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String); }
-keepclassmembers class android.app.Activity { boolean navigateUpToFromChild(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.os.StrictMode$1 { void <init>(); }
-keepclassmembers class android.os.StrictMode$1 { java.util.ArrayList initialValue(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void addFrame(android.graphics.drawable.Drawable,int); }
-keepclassmembers class java.lang.String { int length(); }
-keepclassmembers class android.os.StrictMode$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.app.Activity { void setEnterSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class android.view.View { void clearAccessibilityFocus(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.app.Activity { void setExitSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$100(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.app.Activity { void postponeEnterTransition(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$102(android.graphics.drawable.AnimationDrawable$AnimationState,boolean); }
-keepclassmembers class android.app.Activity { void startPostponedEnterTransition(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void access$200(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.view.View { boolean requestFocus(); }
-keepclassmembers class android.view.View { boolean requestFocus(int); }
-keepclassmembers class android.support.v7.a.i { void <init>(android.content.Context,android.view.Window,android.support.v7.a.e); }
-keepclassmembers class android.view.View { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class android.media.AudioAttributes { void <init>(); }
-keepclassmembers class android.support.v7.a.i { int r(); }
-keepclassmembers class android.support.v7.a.i { boolean h(); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.View { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class android.view.View { boolean isActionableForAccessibility(); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String); }
-keepclassmembers class android.view.View { boolean hasListenersForAccessibility(); }
-keepclassmembers class android.widget.Editor { float getPrimaryHorizontal(android.text.Layout,android.text.Layout,int,boolean); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String,int); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner { java.lang.String getHost(java.net.InetSocketAddress); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.app.Activity { android.os.IBinder getActivityToken(); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(java.util.Locale); }
-keepclassmembers class java.lang.String { java.lang.String toString(); }
-keepclassmembers class android.support.v4.e.a$c { void <init>(); }
-keepclassmembers class android.support.v4.e.a$c { java.lang.String a(java.util.Locale); }
-keepclassmembers class android.text.Annotation { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(java.util.Locale); }
-keepclassmembers class android.widget.Editor { void stopSelectionActionMode(); }
-keepclassmembers class android.widget.Editor { boolean hasInsertionController(); }
-keepclassmembers class android.widget.Editor { boolean hasSelectionController(); }
-keepclassmembers class android.media.AudioAttributes { int access$000(android.media.AudioAttributes); }
-keepclassmembers class android.view.Choreographer$FrameHandler { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class android.media.AudioAttributes { int access$100(android.media.AudioAttributes); }
-keepclassmembers class android.media.AudioAttributes { int access$200(android.media.AudioAttributes); }
-keepclassmembers class android.text.Annotation { void <init>(android.os.Parcel); }
-keepclassmembers class android.media.AudioAttributes { java.util.HashSet access$300(android.media.AudioAttributes); }
-keepclassmembers class android.media.AudioAttributes { void <init>(android.media.AudioAttributes$1); }
-keepclassmembers class android.media.AudioAttributes { int access$102(android.media.AudioAttributes,int); }
-keepclassmembers class android.media.AudioAttributes { int access$002(android.media.AudioAttributes,int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(long); }
-keepclassmembers class android.media.AudioAttributes { int access$502(android.media.AudioAttributes,int); }
-keepclassmembers class android.media.AudioAttributes { int access$202(android.media.AudioAttributes,int); }
-keepclassmembers class android.media.AudioAttributes { java.lang.String access$602(android.media.AudioAttributes,java.lang.String); }
-keepclassmembers class android.media.AudioAttributes { java.util.HashSet access$302(android.media.AudioAttributes,java.util.HashSet); }
-keepclassmembers class android.view.View { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionStart(); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionEnd(); }
-keepclassmembers class android.support.v4.app.aq$d { void <init>(); }
-keepclassmembers class java.lang.String { boolean matches(java.lang.String); }
-keepclassmembers class android.support.v7.widget.d { android.support.v7.widget.d$c a(android.support.v7.widget.d,android.support.v7.widget.d$c); }
-keepclassmembers class android.support.v7.widget.d { android.support.v7.widget.d$e a(android.support.v7.widget.d); }
-keepclassmembers class java.lang.String { java.lang.String replaceAll(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.d { android.support.v7.widget.d$e a(android.support.v7.widget.d,android.support.v7.widget.d$e); }
-keepclassmembers class java.lang.String { java.lang.String replaceFirst(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { void dispatchStartTemporaryDetach(); }
-keepclassmembers class android.widget.Editor { void onScrollChanged(); }
-keepclassmembers class android.view.View { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String); }
-keepclassmembers class android.view.View { void onFinishTemporaryDetach(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$1 { void <init>(); }
-keepclassmembers class android.view.View { android.view.KeyEvent$DispatcherState getKeyDispatcherState(); }
-keepclassmembers class android.widget.Editor { boolean shouldBlink(); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.d { android.support.v7.widget.d$c b(android.support.v7.widget.d); }
-keepclassmembers class android.support.v7.widget.d { android.support.v7.view.menu.f c(android.support.v7.widget.d); }
-keepclassmembers class java.lang.String { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.support.v7.widget.d { android.support.v7.view.menu.f d(android.support.v7.widget.d); }
-keepclassmembers class android.support.v7.widget.d { android.support.v7.view.menu.f g(android.support.v7.widget.d); }
-keepclassmembers class android.support.v7.widget.d { android.support.v7.view.menu.m h(android.support.v7.widget.d); }
-keepclassmembers class android.support.v7.widget.d { android.support.v7.widget.d$a i(android.support.v7.widget.d); }
-keepclassmembers class android.app.Activity { boolean isResumed(); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocusedViewOrHost(); }
-keepclassmembers class java.lang.String { java.lang.String format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.app.Activity { void startLockTask(); }
-keepclassmembers class android.app.Activity { void stopLockTask(); }
-keepclassmembers class android.webkit.WebChromeClient { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$2 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$2 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class android.view.View { boolean hasHoveredChild(); }
-keepclassmembers class android.view.View { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean hasWindowFocus(); }
-keepclassmembers class android.view.View { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.widget.Editor { android.widget.TextView access$700(android.widget.Editor); }
-keepclassmembers class android.view.View { void onWindowVisibilityChanged(int); }
-keepclassmembers class android.support.v7.widget.d { void a(android.support.v7.widget.ActionMenuView); }
-keepclassmembers class java.lang.NegativeArraySizeException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { int getWindowVisibility(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener access$1400(android.widget.Editor); }
-keepclassmembers class android.support.v7.widget.d { boolean a(int,android.support.v7.view.menu.h); }
-keepclassmembers class android.widget.Editor { android.graphics.Rect access$2300(android.widget.Editor); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.DistributionPointName access$000(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class android.view.View { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$2800(android.widget.Editor); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.ReasonFlags access$100(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void <init>(); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$2802(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.GeneralNames access$200(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class android.support.v7.widget.d { boolean a(android.view.ViewGroup,int); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.graphics.drawable.TransitionDrawable,android.content.res.Resources); }
-keepclassmembers class java.net.URLEncoder { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { void needGlobalAttributesUpdate(boolean); }
-keepclassmembers class android.widget.Editor { boolean access$3200(android.widget.Editor,float,float); }
-keepclassmembers class android.text.style.SuggestionSpan$1 { void <init>(); }
-keepclassmembers class android.view.View { boolean isInTouchMode(); }
-keepclassmembers class android.support.v4.app.w$b { void <init>(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { int getChangingConfigurations(); }
-keepclassmembers class android.view.View { android.content.Context getContext(); }
-keepclassmembers class android.view.View { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class android.net.Uri$AbstractPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.net.Uri$AbstractPart { java.lang.String getDecoded(); }
-keepclassmembers class android.support.v4.app.w$b { void b(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.view.View { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class org.apache.http.client.methods.HttpPut { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.view.View { boolean onCheckIsTextEditor(); }
-keepclassmembers class android.support.v7.a.j { void <init>(android.content.Context,android.view.Window,android.support.v7.a.e); }
-keepclassmembers class android.view.View { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLContextImpl { com.android.org.conscrypt.ClientSessionContext engineGetClientSessionContext(); }
-keepclassmembers class android.view.View { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void <init>(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom,com.android.org.conscrypt.ClientSessionContext,com.android.org.conscrypt.ServerSessionContext); }
-keepclassmembers class java.net.URLEncoder$1 { void <init>(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { void <init>(java.util.Set); }
-keepclassmembers class android.view.View { void onHoverChanged(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage$1 { void <init>(); }
-keepclassmembers class libcore.net.url.FileURLConnection$1 { void <init>(); }
-keepclassmembers class android.widget.Toast$TN$2 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void <init>(java.util.concurrent.locks.AbstractQueuedSynchronizer); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.AbstractSessionContext getSessionContext(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.widget.AbsListView$3 { void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView$PerformClick); }
-keepclassmembers class android.widget.RemoteViews$ViewPaddingAction { void <init>(android.widget.RemoteViews,int,int,int,int,int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509KeyManager getX509KeyManager(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.PSKKeyManager getPSKKeyManager(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignalAll(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509TrustManager getX509TrustManager(); }
-keepclassmembers class android.widget.AbsListView$3 { void run(); }
-keepclassmembers class android.widget.RemoteViews$ViewPaddingAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.support.v4.g.a$c { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$ViewPaddingAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.security.SecureRandom getSecureRandomMember(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void unlinkCancelledWaiters(); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanStart(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.params.HttpParams getParams(); }
-keepclassmembers class com.android.volley.d { void a(com.android.volley.h,com.android.volley.j); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.view.View { void removeLongPressCallback(); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.view.View { void removePerformClickCallback(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.conn.ClientConnectionManager getConnectionManager(); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.os.Bundle { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean getUseClientMode(); }
-keepclassmembers class android.view.View { void cancelLongPress(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.protocol.HttpRequestExecutor getRequestExecutor(); }
-keepclassmembers class android.support.v7.widget.d { void c(boolean); }
-keepclassmembers class android.view.View { void removeSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean getNeedClientAuth(); }
-keepclassmembers class android.support.v7.widget.d { void d(boolean); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.auth.AuthSchemeRegistry getAuthSchemes(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean getWantClientAuth(); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { int checkInterruptWhileWaiting(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean getEnableSessionCreation(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.cookie.CookieSpecRegistry getCookieSpecs(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean getUseSni(); }
-keepclassmembers class android.support.v4.widget.z$8 { void <init>(android.support.v4.widget.z); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy(); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Bundle); }
-keepclassmembers class org.apache.http.client.protocol.RequestProxyAuthentication { void <init>(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy(); }
-keepclassmembers class android.support.v7.widget.d { boolean g(); }
-keepclassmembers class android.os.Bundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler(); }
-keepclassmembers class android.support.v7.widget.d { boolean h(); }
-keepclassmembers class android.os.Bundle { boolean setAllowFds(boolean); }
-keepclassmembers class android.os.Bundle { void clear(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.RedirectHandler getRedirectHandler(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.OpenSSLSessionImpl getSessionToReuse(long,java.lang.String,int); }
-keepclassmembers class java.lang.Float { void <init>(float); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler(); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Float); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler(); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateClass(java.lang.Class); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateProxyClass(java.lang.Class); }
-keepclassmembers class android.view.View { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionX(); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionY(); }
-keepclassmembers class java.io.ObjectOutputStream { void close(); }
-keepclassmembers class android.view.View { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.View { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.lang.Float { float floatValue(); }
-keepclassmembers class android.view.View { android.view.ViewParent getParent(); }
-keepclassmembers class java.lang.Float { int hashCode(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.CredentialsProvider getCredentialsProvider(); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.view.View { int getScrollX(); }
-keepclassmembers class android.view.View { int getScrollY(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner(); }
-keepclassmembers class android.widget.Editor$PositionListener { void updatePosition(); }
-keepclassmembers class android.widget.Editor$PositionListener { void onScrollChanged(); }
-keepclassmembers class java.lang.Float { float parseFloat(java.lang.String); }
-keepclassmembers class android.view.View { int getMeasuredWidthAndState(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.UserTokenHandler getUserTokenHandler(); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { void <init>(); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class java.io.ObjectOutputStream { int dumpCycle(java.lang.Object); }
-keepclassmembers class java.lang.Float { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109VersionHandler { void <init>(); }
-keepclassmembers class android.view.View { android.graphics.Matrix getMatrix(); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class java.lang.Float { java.lang.String toString(float); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.protocol.BasicHttpProcessor getHttpProcessor(); }
-keepclassmembers class android.view.View { boolean hasIdentityMatrix(); }
-keepclassmembers class java.io.ObjectOutputStream { void flush(); }
-keepclassmembers class java.io.ObjectOutputStream { int registerObjectWritten(java.lang.Object); }
-keepclassmembers class android.os.Bundle { void putFloat(java.lang.String,float); }
-keepclassmembers class java.io.ObjectOutputStream { void removeUnsharedReference(java.lang.Object,int); }
-keepclassmembers class android.view.View { float getRotation(); }
-keepclassmembers class android.os.Bundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class java.io.ObjectOutputStream { java.lang.Object replaceObject(java.lang.Object); }
-keepclassmembers class android.os.Bundle { void putParcelable(java.lang.String,android.os.Parcelable); }
-keepclassmembers class android.view.View { float getRotationY(); }
-keepclassmembers class java.io.ObjectOutputStream { void resetState(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.view.View { float getRotationX(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.os.Bundle { void putParcelableArray(java.lang.String,android.os.Parcelable[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.View { float getScaleX(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.View { float getScaleY(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeBoolean(boolean); }
-keepclassmembers class android.os.Bundle { void putSparseParcelableArray(java.lang.String,android.util.SparseArray); }
-keepclassmembers class android.view.View { float getPivotX(); }
-keepclassmembers class android.os.Bundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class android.view.View { float getPivotY(); }
-keepclassmembers class android.view.View { float getAlpha(); }
-keepclassmembers class android.view.View { boolean hasOverlappingRendering(); }
-keepclassmembers class android.os.Bundle { void putCharSequenceArray(java.lang.String,java.lang.CharSequence[]); }
-keepclassmembers class android.os.Bundle { void putBundle(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.os.Bundle { void putBinder(java.lang.String,android.os.IBinder); }
-keepclassmembers class android.view.View { float getTransitionAlpha(); }
-keepclassmembers class android.view.View { int getTop(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeCyclicReference(int); }
-keepclassmembers class java.util.AbstractMap { void <init>(); }
-keepclassmembers class android.view.View { int getBottom(); }
-keepclassmembers class java.util.jar.ManifestReader { int getEndOfMainSection(); }
-keepclassmembers class android.os.AsyncTask$WorkerRunnable { void <init>(); }
-keepclassmembers class java.util.jar.ManifestReader { boolean readHeader(); }
-keepclassmembers class android.os.AsyncTask$WorkerRunnable { void <init>(android.os.AsyncTask$1); }
-keepclassmembers class android.view.View { int getLeft(); }
-keepclassmembers class android.support.v4.f.i { void <init>(); }
-keepclassmembers class android.support.v4.f.i { void <init>(int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.view.View { int getRight(); }
-keepclassmembers class java.util.AbstractMap { boolean isEmpty(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965SpecFactory { void <init>(); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class android.view.View { float getElevation(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { boolean isEmpty(); }
-keepclassmembers class android.support.v4.g.n { int a(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v4.g.n { int b(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.view.View { float getTranslationX(); }
-keepclassmembers class java.util.AbstractMap { int size(); }
-keepclassmembers class android.view.View { float getTranslationY(); }
-keepclassmembers class android.support.v4.f.i { int a(java.lang.Object); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.View { float getTranslationZ(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(android.graphics.Rect); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(int,int,int,int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(); }
-keepclassmembers class android.support.v4.g.am { void a(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.os.Bundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.os.Parcel$2 { void <init>(android.os.Parcel,java.io.InputStream,java.lang.ClassLoader); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(boolean); }
-keepclassmembers class java.util.concurrent.TimeUnit$6 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.g.am { void a(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class android.view.View { void setStateListAnimator(android.animation.StateListAnimator); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class android.os.Parcel$2 { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class android.support.v4.g.am { void b(android.view.View); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentCaches(); }
-keepclassmembers class android.support.v4.g.am { int d(android.view.View); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentIfNeeded(); }
-keepclassmembers class android.support.v4.g.am { int e(android.view.View); }
-keepclassmembers class com.shapps.mintubeapp.f { void a(java.lang.String); }
-keepclassmembers class android.view.View { void setOutlineProviderFromAttribute(int); }
-keepclassmembers class android.support.v4.g.am { void f(android.view.View); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.v4.g.am { boolean g(android.view.View); }
-keepclassmembers class android.support.v4.g.am { boolean h(android.view.View); }
-keepclassmembers class android.view.View { void setOutlineProvider(android.view.ViewOutlineProvider); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$PoolEntry { void <init>(org.apache.http.impl.conn.SingleClientConnManager); }
-keepclassmembers class android.view.View { android.view.ViewOutlineProvider getOutlineProvider(); }
-keepclassmembers class android.view.View { void invalidateOutline(); }
-keepclassmembers class android.graphics.drawable.Ripple$1 { void <init>(android.graphics.drawable.Ripple); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$PoolEntry { void close(); }
-keepclassmembers class com.shapps.mintubeapp.f { void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.view.View { void rebuildOutline(); }
-keepclassmembers class com.shapps.mintubeapp.f { void c(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$PoolEntry { void shutdown(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$b { void <init>(); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509KeyManager getDefaultX509KeyManager(); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype$1 { void <init>(); }
-keepclassmembers class java.net.PortUnreachableException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class java.io.ObjectOutputStream { void writeInt(int); }
-keepclassmembers class java.util.concurrent.TimeUnit$5 { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509TrustManager getDefaultX509TrustManager(); }
-keepclassmembers class android.support.v4.f.i { boolean isEmpty(); }
-keepclassmembers class android.app.Dialog$1 { void <init>(android.app.Dialog); }
-keepclassmembers class android.view.View { android.view.ViewGroup$LayoutParams getLayoutParams(); }
-keepclassmembers class android.view.View { void resolveLayoutParams(); }
-keepclassmembers class android.view.View { void scrollTo(int,int); }
-keepclassmembers class android.support.a.a.f$a { void <init>(); }
-keepclassmembers class android.support.a.a.f$a { void <init>(android.support.a.a.f$a); }
-keepclassmembers class android.support.a.a.f$a { void a(android.content.res.TypedArray); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(); }
-keepclassmembers class android.support.a.a.f$a { boolean a(); }
-keepclassmembers class dalvik.system.DexPathList$Element { void <init>(java.io.File,boolean,java.io.File,dalvik.system.DexFile); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewClass(java.lang.Class,boolean); }
-keepclassmembers class android.view.View { void invalidate(); }
-keepclassmembers class dalvik.system.DexPathList$Element { dalvik.system.DexFile access$000(dalvik.system.DexPathList$Element); }
-keepclassmembers class android.support.v7.widget.d$e { void <init>(android.support.v7.widget.d,android.content.Context,android.support.v7.view.menu.f,android.view.View,boolean); }
-keepclassmembers class java.io.ObjectOutputStream { void writeClassDescriptor(java.io.ObjectStreamClass); }
-keepclassmembers class android.support.v4.app.ah$a { android.app.Notification b(); }
-keepclassmembers class android.graphics.Region$1 { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNewException(java.lang.Exception); }
-keepclassmembers class android.support.v7.widget.d$e { void onDismiss(); }
-keepclassmembers class android.support.v7.view.menu.k { void <init>(android.content.Context,android.support.v7.view.menu.f,android.view.View,boolean,int); }
-keepclassmembers class com.shapps.mintubeapp.GetPermission$3 { void <init>(com.shapps.mintubeapp.GetPermission); }
-keepclassmembers class com.shapps.mintubeapp.GetPermission$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Exception { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.view.View { boolean isProjectionReceiver(); }
-keepclassmembers class android.support.v7.view.menu.k { boolean a(android.support.v7.view.menu.k); }
-keepclassmembers class android.support.v7.view.menu.k { android.view.LayoutInflater b(android.support.v7.view.menu.k); }
-keepclassmembers class android.support.v7.view.menu.k { android.support.v7.view.menu.f c(android.support.v7.view.menu.k); }
-keepclassmembers class android.support.v4.g.a.a$c { void <init>(); }
-keepclassmembers class android.support.v4.g.a.a$c { int a(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.g.a.a$c { void a(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void lock(); }
-keepclassmembers class javax.net.ssl.SSLHandshakeException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void lockInterruptibly(); }
-keepclassmembers class android.support.v7.view.menu.k { void a(int); }
-keepclassmembers class android.support.v7.view.menu.k { void a(android.content.Context,android.support.v7.view.menu.f); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void unlock(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { java.util.concurrent.locks.Condition newCondition(); }
-keepclassmembers class android.support.v7.view.menu.k { void a(android.support.v7.view.menu.l$a); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNull(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { void writeUnshared(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject(java.lang.Object,boolean); }
-keepclassmembers class android.view.View { android.view.ViewRootImpl getViewRootImpl(); }
-keepclassmembers class android.view.View { boolean post(java.lang.Runnable); }
-keepclassmembers class android.support.v7.view.menu.k { android.support.v7.widget.ak c(); }
-keepclassmembers class android.view.View { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class android.view.View { void postOnAnimation(java.lang.Runnable); }
-keepclassmembers class android.view.View { void postOnAnimationDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.view.View { boolean removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.support.v7.view.menu.k { void e(); }
-keepclassmembers class android.view.View { void postInvalidate(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class android.support.v7.view.menu.k { boolean f(); }
-keepclassmembers class android.view.View { void postInvalidate(int,int,int,int); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long); }
-keepclassmembers class android.support.v7.view.menu.k { void onDismiss(); }
-keepclassmembers class org.apache.http.impl.client.DefaultProxyAuthenticationHandler { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger,byte[]); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long,int,int,int,int); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[]); }
-keepclassmembers class android.support.v7.view.menu.k { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(int,int,int,int); }
-keepclassmembers class java.security.MessageDigest { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { void computeScroll(); }
-keepclassmembers class java.nio.charset.Charset { boolean isValidCharsetNameStart(char); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger,byte[],org.apache.harmony.security.x509.PolicyConstraints$1); }
-keepclassmembers class java.nio.charset.Charset { boolean isValidCharsetNamePart(char); }
-keepclassmembers class android.content.ClipDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.View { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(android.widget.Filter$1); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.io.ObjectOutputStream { java.io.ObjectStreamClass writeEnumDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.view.DisplayAdjustments); }
-keepclassmembers class android.view.View { float getLeftFadingEdgeStrength(); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.content.res.CompatibilityInfo,android.os.IBinder); }
-keepclassmembers class java.security.MessageDigest { void update(byte); }
-keepclassmembers class android.view.DisplayAdjustments { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class android.content.ClipData$Item { void <init>(android.net.Uri); }
-keepclassmembers class android.view.DisplayAdjustments { android.os.IBinder getActivityToken(); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(); }
-keepclassmembers class android.view.View { void recomputePadding(); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(byte[]); }
-keepclassmembers class android.view.animation.RotateAnimation { void initializePivotPoint(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeStreamHeader(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class org.apache.http.message.BasicRequestLine { java.lang.String getMethod(); }
-keepclassmembers class java.io.StreamCorruptedException { void <init>(); }
-keepclassmembers class org.apache.http.message.BasicRequestLine { org.apache.http.ProtocolVersion getProtocolVersion(); }
-keepclassmembers class java.io.StreamCorruptedException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.message.BasicRequestLine { java.lang.String getUri(); }
-keepclassmembers class org.apache.http.message.BasicRequestLine { java.lang.String toString(); }
-keepclassmembers class android.view.animation.RotateAnimation { void initialize(int,int,int,int); }
-keepclassmembers class java.security.MessageDigest { java.security.Provider access$102(java.security.MessageDigest,java.security.Provider); }
-keepclassmembers class android.view.View { int computeHorizontalScrollRange(); }
-keepclassmembers class android.support.design.widget.Snackbar$1 { void <init>(); }
-keepclassmembers class android.view.View { int computeHorizontalScrollOffset(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$2$1$2 { void onClick(android.view.View); }
-keepclassmembers class android.view.View { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.view.View { int computeVerticalScrollRange(); }
-keepclassmembers class android.view.View { int computeVerticalScrollOffset(); }
-keepclassmembers class android.support.v7.a.k$e { void <init>(android.support.v7.a.k); }
-keepclassmembers class android.view.View { int computeVerticalScrollExtent(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[],org.apache.harmony.security.x509.TBSCertificate$1); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int start(); }
-keepclassmembers class android.support.v7.a.k$e { void <init>(android.support.v7.a.k,android.support.v7.a.k$1); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { java.lang.String rawString(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { int access$100(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { java.math.BigInteger access$200(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x501.Name access$400(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class android.support.v7.widget.d$d { boolean c(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.Validity access$500(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class android.support.v7.widget.d$d { boolean d(); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpecFactory { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class android.support.v7.widget.d$d { boolean performClick(); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { int[] toIntArray(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.SubjectPublicKeyInfo access$700(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class java.util.Vector { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { boolean isOID(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { boolean[] access$800(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { boolean[] access$900(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class com.android.volley.f { void <init>(java.util.concurrent.BlockingQueue,com.android.volley.e,com.android.volley.a,com.android.volley.k); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(); }
-keepclassmembers class com.android.volley.f { void a(com.android.volley.h); }
-keepclassmembers class com.android.volley.f { void a(com.android.volley.h,com.android.volley.VolleyError); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { void <init>(android.content.Context); }
-keepclassmembers class com.android.volley.f { void a(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean hasEmbeddedTabs(); }
-keepclassmembers class android.support.v4.g.af$k { void <init>(); }
-keepclassmembers class android.support.v4.g.af$k { android.content.res.ColorStateList B(android.view.View); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean enableHomeButtonByDefault(); }
-keepclassmembers class android.support.v4.g.af$k { android.graphics.PorterDuff$Mode C(android.view.View); }
-keepclassmembers class java.util.zip.InflaterInputStream { int available(); }
-keepclassmembers class android.support.v4.g.af$k { float F(android.view.View); }
-keepclassmembers class java.util.zip.InflaterInputStream { void close(); }
-keepclassmembers class android.support.v4.b.e { android.content.Intent a(android.content.ComponentName); }
-keepclassmembers class android.support.v4.g.af$k { void a(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.g.af$k { void a(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.g.af$k { void a(android.view.View,android.support.v4.g.aa); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class android.support.v4.g.af$k { void f(android.view.View,float); }
-keepclassmembers class android.support.v4.g.af$k { void u(android.view.View); }
-keepclassmembers class android.view.View { void onDrawHorizontalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.View { void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class org.apache.http.client.methods.HttpTrace { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.animation.LayoutAnimationController { int getOrder(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,boolean,org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.animation.LayoutAnimationController { android.view.animation.Animation getAnimation(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.content.Context,int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.view.View { void resetRtlProperties(); }
-keepclassmembers class android.view.View { void onScreenStateChanged(int); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.view.View { boolean hasRtlSupport(); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class android.view.View { boolean isRtlCompatibilityMode(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void start(); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class android.view.View { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void <init>(); }
-keepclassmembers class android.view.View { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,byte[],int); }
-keepclassmembers class android.support.v7.a.n$d { void <init>(android.support.v7.a.n,android.view.Window$Callback); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965VersionAttributeHandler { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionInherited(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { int getTag(); }
-keepclassmembers class android.support.v7.a.n$d { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965VersionAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.view.View { void resetResolvedPadding(); }
-keepclassmembers class android.view.View { void onDetachedFromWindow(); }
-keepclassmembers class android.support.a.a.d { float a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float); }
-keepclassmembers class android.view.View { void cleanupDraw(); }
-keepclassmembers class android.view.View { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class android.view.View { int getWindowAttachCount(); }
-keepclassmembers class android.view.View { android.os.IBinder getWindowToken(); }
-keepclassmembers class android.support.a.a.d { int a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int); }
-keepclassmembers class android.support.a.a.d { boolean a(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean); }
-keepclassmembers class android.view.View { android.os.IBinder getApplicationWindowToken(); }
-keepclassmembers class com.shapps.mintubeapp.CustomViews.CircularImageView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { android.support.v7.view.menu.ActionMenuItemView$b a(android.support.v7.view.menu.ActionMenuItemView); }
-keepclassmembers class android.support.a.a.d { int b(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { int getSessionTimeout(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { android.support.v7.view.menu.f$b b(android.support.v7.view.menu.ActionMenuItemView); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { android.support.v7.view.menu.h c(android.support.v7.view.menu.ActionMenuItemView); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[]); }
-keepclassmembers class org.apache.http.client.protocol.RequestAddCookies { void <init>(); }
-keepclassmembers class android.view.View { void cancelPendingInputEvents(); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean a(); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.String[],java.lang.String[]); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean b(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[],org.apache.harmony.security.x509.CertificateList$1); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { org.apache.harmony.security.x509.TBSCertList access$100(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean d(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean c(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { org.apache.harmony.security.x509.AlgorithmIdentifier access$200(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { android.support.v7.view.menu.h getItemData(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { byte[] access$300(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onClick(android.view.View); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean readExternalId(boolean,boolean); }
-keepclassmembers class com.android.volley.c { void <init>(); }
-keepclassmembers class com.android.volley.c { void <init>(int,int,float); }
-keepclassmembers class com.android.volley.c { int a(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void setVisibility(int); }
-keepclassmembers class com.android.volley.c { int b(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.ao$h { boolean a(android.support.v7.widget.ao$h); }
-keepclassmembers class android.support.v7.a.b$a$2 { void <init>(android.support.v7.a.b$a,android.content.Context,android.database.Cursor,boolean,android.widget.ListView,android.support.v7.a.b); }
-keepclassmembers class com.android.volley.c { boolean c(); }
-keepclassmembers class android.view.View { long getDrawingTime(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readElementDeclaration(); }
-keepclassmembers class android.support.v7.widget.ao$h { boolean a(android.support.v7.widget.ao$h,boolean); }
-keepclassmembers class android.content.res.StringBlock$Height { void <init>(int); }
-keepclassmembers class android.app.ActivityManager$TaskDescription$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.ao$h { boolean b(android.support.v7.widget.ao$h); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.ab$e { void <init>(); }
-keepclassmembers class android.support.v4.app.ab$e { android.app.Notification a(android.support.v4.app.ab$d,android.support.v4.app.aa); }
-keepclassmembers class android.view.View { boolean hasStaticLayer(); }
-keepclassmembers class android.view.View { int getLayerType(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <init>(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getOriginal(); }
-keepclassmembers class android.view.View { android.view.HardwareLayer getHardwareLayer(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getReplacement(); }
-keepclassmembers class android.view.View { void setDrawingCacheEnabled(boolean); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { void <init>(java.io.RandomAccessFile,long,long); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { void <init>(java.io.RandomAccessFile,long); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int read(); }
-keepclassmembers class libcore.io.Base64 { byte[] decode(byte[]); }
-keepclassmembers class android.view.View { void dispatchGetDisplayList(); }
-keepclassmembers class android.view.View { boolean canHaveDisplayList(); }
-keepclassmembers class android.animation.KeyframeSet { void invalidateCache(); }
-keepclassmembers class android.animation.KeyframeSet { java.util.List getKeyframes(); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(float,float,float,float,int,float,int,float); }
-keepclassmembers class android.view.animation.ScaleAnimation { void initializePivotPoint(); }
-keepclassmembers class org.apache.http.impl.HttpConnectionMetricsImpl { void <init>(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setItemInvoker(android.support.v7.view.menu.f$b); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long access$102(java.util.zip.ZipFile$RAFStream,long); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setPadding(int,int,int,int); }
-keepclassmembers class android.view.View { android.view.RenderNode getDisplayList(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long access$200(java.util.zip.ZipFile$RAFStream); }
-keepclassmembers class android.view.View { void resetDisplayList(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setPopupCallback(android.support.v7.view.menu.ActionMenuItemView$b); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.view.View$2 { void <init>(android.view.View,int); }
-keepclassmembers class android.view.View { void destroyDrawingCache(); }
-keepclassmembers class android.view.View$2 { boolean apply(android.view.View); }
-keepclassmembers class android.view.animation.ScaleAnimation { void initialize(int,int,int,int); }
-keepclassmembers class android.animation.KeyframeSet { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class java.net.JarURLConnection { java.lang.String getEntryName(); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.net.JarURLConnection { java.net.URL getJarFileURL(); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.inputmethod.ExtractedText$1 { void <init>(); }
-keepclassmembers class android.support.v7.a.o { void <init>(); }
-keepclassmembers class android.view.View { boolean isInEditMode(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class android.view.View { boolean isPaddingOffsetRequired(); }
-keepclassmembers class android.view.View { int getLeftPaddingOffset(); }
-keepclassmembers class android.view.View { int getRightPaddingOffset(); }
-keepclassmembers class android.view.View { int getTopPaddingOffset(); }
-keepclassmembers class android.view.View { int getBottomPaddingOffset(); }
-keepclassmembers class android.view.View { boolean isHardwareAccelerated(); }
-keepclassmembers class com.android.internal.util.XmlUtils { void skipCurrentTag(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.view.inputmethod.ComposingText { void <init>(); }
-keepclassmembers class android.app.SharedElementCallback { void <init>(); }
-keepclassmembers class java.lang.reflect.ArtMethod { java.lang.String getMethodName(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.app.SharedElementCallback { void onMapSharedElements(java.util.List,java.util.Map); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.view.animation.CycleInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class java.util.logging.Logger$1 { void <init>(); }
-keepclassmembers class java.lang.reflect.ArtMethod { boolean equalMethodParameters(java.lang.reflect.ArtMethod,java.lang.Class[]); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void <init>(); }
-keepclassmembers class java.net.PlainServerSocketImpl { void create(boolean); }
-keepclassmembers class java.net.PlainServerSocketImpl { void <init>(); }
-keepclassmembers class android.support.v4.app.p$a$1 { void <init>(android.support.v4.app.p$a); }
-keepclassmembers class android.support.v4.app.p$a$1 { void run(); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void <init>(android.widget.AbsListView); }
-keepclassmembers class com.android.volley.TimeoutError { void <init>(); }
-keepclassmembers class java.text.StringCharacterIterator { void <init>(java.lang.String); }
-keepclassmembers class android.text.Layout$Directions { void <init>(int[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekCharacter(); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class java.text.StringCharacterIterator { int getBeginIndex(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicPathHandler { void <init>(); }
-keepclassmembers class java.text.StringCharacterIterator { int getEndIndex(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.Reader); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { boolean hasNext(); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { void <init>(org.apache.http.HeaderIterator); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { java.lang.Object next(); }
-keepclassmembers class com.android.volley.g { void <init>(int,byte[],java.util.Map,boolean,long); }
-keepclassmembers class android.support.v4.g.af$j { void <init>(); }
-keepclassmembers class com.android.volley.g { void <init>(byte[],java.util.Map); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { void parseNextElement(); }
-keepclassmembers class android.widget.FastScroller$4 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.g.af$j { boolean G(android.view.View); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(android.view.View,int); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { boolean hasNext(); }
-keepclassmembers class android.support.design.widget.i { void <init>(android.support.design.widget.aa,android.support.design.widget.n); }
-keepclassmembers class java.security.KeyFactory { void <init>(java.security.KeyFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class java.lang.Runtime { void runFinalization(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int get(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void set(int); }
-keepclassmembers class java.util.jar.Attributes { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes { java.util.Set entrySet(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { boolean compareAndSet(int,int); }
-keepclassmembers class android.support.design.widget.i { void b(); }
-keepclassmembers class android.support.design.widget.i { void a(int[]); }
-keepclassmembers class java.security.KeyFactory { java.security.PublicKey generatePublic(java.security.spec.KeySpec); }
-keepclassmembers class java.util.jar.Attributes { int size(); }
-keepclassmembers class android.support.v4.widget.q { void a(android.widget.PopupWindow,int); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <init>(java.lang.String); }
-keepclassmembers class java.util.jar.Attributes { int hashCode(); }
-keepclassmembers class android.support.v4.widget.q { void a(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class android.support.design.widget.i { boolean d(); }
-keepclassmembers class android.support.v4.widget.q { void a(android.widget.PopupWindow,boolean); }
-keepclassmembers class java.lang.Character$Subset { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$5 { void <init>(int); }
-keepclassmembers class android.support.v7.a.h { void <init>(android.content.Context,android.view.Window,android.support.v7.a.e); }
-keepclassmembers class java.security.Permission { void <init>(java.lang.String); }
-keepclassmembers class android.util.Log$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.app.ae { android.app.Notification a(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.graphics.Matrix { void <init>(); }
-keepclassmembers class android.util.Log$1 { void onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure,boolean); }
-keepclassmembers class android.graphics.Matrix { void <init>(android.graphics.Matrix); }
-keepclassmembers class android.graphics.Matrix { boolean isIdentity(); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(); }
-keepclassmembers class android.graphics.Matrix { boolean rectStaysRect(); }
-keepclassmembers class android.graphics.Matrix { void set(android.graphics.Matrix); }
-keepclassmembers class android.graphics.Matrix { int hashCode(); }
-keepclassmembers class android.graphics.Matrix { void setTranslate(float,float); }
-keepclassmembers class android.graphics.Matrix { void reset(); }
-keepclassmembers class android.graphics.Matrix { void setScale(float,float,float,float); }
-keepclassmembers class android.support.v4.g.ar$b { void <init>(); }
-keepclassmembers class android.graphics.Matrix { void setScale(float,float); }
-keepclassmembers class android.graphics.Matrix { void setRotate(float,float,float); }
-keepclassmembers class android.graphics.Matrix { void setRotate(float); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(); }
-keepclassmembers class android.content.ClipData$1 { void <init>(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl$JarURLConnectionInputStream { void <init>(libcore.net.url.JarURLConnectionImpl,java.io.InputStream,java.util.jar.JarFile); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl$JarURLConnectionInputStream { void close(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getName(); }
-keepclassmembers class org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy { void <init>(); }
-keepclassmembers class android.support.v4.g.aj { int a(int,int); }
-keepclassmembers class android.support.v4.g.aj { int a(int,int,int); }
-keepclassmembers class android.graphics.Matrix { boolean preTranslate(float,float); }
-keepclassmembers class android.graphics.Matrix { boolean preScale(float,float); }
-keepclassmembers class android.support.v4.g.aj { void a(android.view.View,boolean); }
-keepclassmembers class android.graphics.Matrix { boolean preConcat(android.graphics.Matrix); }
-keepclassmembers class android.support.v4.g.aj { void b(android.view.View,float); }
-keepclassmembers class android.support.v4.g.aj { void a(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.support.v4.g.aj { int b(android.view.View); }
-keepclassmembers class android.graphics.Matrix { boolean postTranslate(float,float); }
-keepclassmembers class android.graphics.Matrix { boolean postScale(float,float); }
-keepclassmembers class android.support.v4.g.aj { int c(android.view.View); }
-keepclassmembers class android.graphics.PorterDuffXfermode { void <init>(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float,float,float); }
-keepclassmembers class android.support.v4.g.aj { void d(android.view.View,float); }
-keepclassmembers class android.support.v4.g.aj { int d(android.view.View); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getEventType(); }
-keepclassmembers class android.graphics.Matrix { boolean postConcat(android.graphics.Matrix); }
-keepclassmembers class android.support.v4.g.aj { void e(android.view.View,float); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.support.v4.g.aj { float g(android.view.View); }
-keepclassmembers class android.support.v4.g.aj { float f(android.view.View); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.support.v4.g.f { int a(int,int); }
-keepclassmembers class android.support.v4.g.aj { void h(android.view.View); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[],int,float[],int,int); }
-keepclassmembers class android.support.v4.g.f { void a(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.graphics.Matrix { void mapVectors(float[],int,float[],int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void popContentSource(); }
-keepclassmembers class android.view.View { int getSolidColor(); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { void <init>(int); }
-keepclassmembers class android.graphics.Matrix { long ni(); }
-keepclassmembers class android.content.res.ColorStateList { boolean isStateful(); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.Collection); }
-keepclassmembers class java.util.TreeSet { boolean add(java.lang.Object); }
-keepclassmembers class android.content.res.ColorStateList { int getDefaultColor(); }
-keepclassmembers class java.util.TreeSet { boolean addAll(java.util.Collection); }
-keepclassmembers class java.util.TreeSet { void clear(); }
-keepclassmembers class java.util.TreeSet { boolean isEmpty(); }
-keepclassmembers class android.view.View { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.util.TreeSet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.TreeSet { int size(); }
-keepclassmembers class android.view.View { void sizeChange(int,int,int,int); }
-keepclassmembers class android.view.View { void onFinishInflate(); }
-keepclassmembers class android.view.View { android.content.res.Resources getResources(); }
-keepclassmembers class java.util.IllegalFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader); }
-keepclassmembers class java.util.HashMap$ValueIterator { void <init>(java.util.HashMap); }
-keepclassmembers class java.util.HashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class java.io.BufferedReader { void close(); }
-keepclassmembers class java.util.HashMap$ValueIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.view.View { void unscheduleDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.View { void onResolveDrawables(int); }
-keepclassmembers class android.view.View { void resetResolvedDrawables(); }
-keepclassmembers class android.view.View { void drawableStateChanged(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$b { void <init>(android.support.v7.widget.ActionMenuView); }
-keepclassmembers class java.io.BufferedReader { boolean isClosed(); }
-keepclassmembers class android.view.View { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$b { void <init>(android.support.v7.widget.ActionMenuView,android.support.v7.widget.ActionMenuView$1); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$b { boolean a(android.support.v7.view.menu.f); }
-keepclassmembers class android.view.View { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class java.io.BufferedReader { int read(); }
-keepclassmembers class java.lang.Double { void <init>(double); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Double); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(android.app.Activity$1); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.lang.Double { double doubleValue(); }
-keepclassmembers class android.widget.FastScroller$1 { void <init>(android.widget.FastScroller); }
-keepclassmembers class android.view.View { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View); }
-keepclassmembers class java.lang.Double { double parseDouble(java.lang.String); }
-keepclassmembers class java.lang.Double { java.lang.String toString(); }
-keepclassmembers class android.view.View$CheckForLongPress { void rememberWindowAttachCount(); }
-keepclassmembers class android.text.BoringLayout$Metrics { void <init>(); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.view.View { void setBackgroundResource(int); }
-keepclassmembers class java.lang.Double { java.lang.String toString(double); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { boolean hasNext(); }
-keepclassmembers class java.lang.Double { java.lang.Double valueOf(java.lang.String); }
-keepclassmembers class android.view.View { void setBackground(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.ak$f { void <init>(android.support.v7.widget.ak); }
-keepclassmembers class android.support.v7.widget.ak$f { void <init>(android.support.v7.widget.ak,android.support.v7.widget.ak$1); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$4 { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.BufferedReader { void maybeSwallowLF(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { int length(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress { void <init>(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$SpiAndProvider { void <init>(java.lang.Object,java.security.Provider); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$SpiAndProvider { void <init>(java.lang.Object,java.security.Provider,org.apache.harmony.security.fortress.Engine$1); }
-keepclassmembers class org.apache.http.impl.DefaultHttpResponseFactory { void <init>(); }
-keepclassmembers class android.view.View { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.String toString(); }
-keepclassmembers class android.view.View { android.content.res.ColorStateList getBackgroundTintList(); }
-keepclassmembers class android.view.View { android.graphics.PorterDuff$Mode getBackgroundTintMode(); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { void applyBackgroundTint(); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.DragEvent$1 { void <init>(); }
-keepclassmembers class android.view.View { void setPadding(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void addLevel(int,int,android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.http.impl.DefaultHttpResponseFactory { java.util.Locale determineLocale(org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.view.View$12 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.e.d$a { void <init>(); }
-keepclassmembers class android.support.v4.e.d$a { void <init>(android.support.v4.e.d$1); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void access$000(android.graphics.drawable.LevelListDrawable$LevelListState); }
-keepclassmembers class android.support.v4.e.d$a { int b(java.util.Locale); }
-keepclassmembers class android.view.View { int getPaddingTop(); }
-keepclassmembers class android.view.View { int getPaddingBottom(); }
-keepclassmembers class android.view.View { int getPaddingLeft(); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(); }
-keepclassmembers class android.support.v4.e.d$a { int a(java.util.Locale); }
-keepclassmembers class android.view.View { int getPaddingRight(); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void awaitFinalization(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(java.lang.ref.FinalizerReference$1); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class android.text.style.MetricAffectingSpan { void <init>(); }
-keepclassmembers class android.view.View { void resetPaddingToInitialValues(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { int access$000(com.android.i18n.phonenumbers.RegexCache$LRUCache); }
-keepclassmembers class android.view.View { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { int getIndex(java.lang.Object); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { java.lang.String getHost(); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { java.lang.String getPath(); }
-keepclassmembers class android.view.View { void dispatchSetSelected(boolean); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { int getPort(); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { boolean isSecure(); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <init>(); }
-keepclassmembers class android.view.View { void dispatchSetActivated(boolean); }
-keepclassmembers class java.io.ObjectStreamClass$2 { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$2 { int compare(java.lang.reflect.Field,java.lang.reflect.Field); }
-keepclassmembers class org.json.JSONException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.util.XmlUtils { void nextElement(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.nio.Buffer { boolean hasRemaining(); }
-keepclassmembers class java.nio.Buffer { int capacity(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream { void awaitPendingOps(); }
-keepclassmembers class java.nio.Buffer { int limit(); }
-keepclassmembers class java.nio.Buffer { int position(); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer position(int); }
-keepclassmembers class android.view.View { android.view.View findViewTraversal(int); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,float); }
-keepclassmembers class android.view.View { android.view.View findViewById(int); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,int,float); }
-keepclassmembers class org.apache.http.impl.cookie.BasicMaxAgeHandler { void <init>(); }
-keepclassmembers class java.lang.reflect.Field$1 { void <init>(); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicate(com.android.internal.util.Predicate); }
-keepclassmembers class android.view.View { void setId(int); }
-keepclassmembers class java.lang.NoClassDefFoundError { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.RedirectLocations { boolean contains(java.net.URI); }
-keepclassmembers class org.apache.http.impl.client.RedirectLocations { void add(java.net.URI); }
-keepclassmembers class android.support.v4.widget.i$a { void <init>(); }
-keepclassmembers class android.view.RenderNodeAnimator { void doStart(); }
-keepclassmembers class android.support.v4.widget.i$a { java.lang.Object a(android.content.Context); }
-keepclassmembers class android.view.RenderNodeAnimator { void moveToRunningState(); }
-keepclassmembers class android.view.View { int getId(); }
-keepclassmembers class android.support.v4.widget.i$a { void a(java.lang.Object,int,int); }
-keepclassmembers class android.support.v4.widget.i$a { boolean a(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.i$a { boolean a(java.lang.Object,float,float); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { void <init>(); }
-keepclassmembers class android.support.v4.widget.i$a { boolean a(java.lang.Object,int); }
-keepclassmembers class android.support.v4.widget.i$a { boolean a(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class android.support.v4.widget.i$a { boolean b(java.lang.Object); }
-keepclassmembers class android.view.RenderNodeAnimator { void end(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void <init>(); }
-keepclassmembers class android.support.a.a.f$e { android.graphics.Paint a(android.support.a.a.f$e,android.graphics.Paint); }
-keepclassmembers class android.support.a.a.f$e { android.support.a.a.f$c a(android.support.a.a.f$e); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartValue(float); }
-keepclassmembers class android.view.RenderNodeAnimator { long getStartDelay(); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isRunning(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isStarted(); }
-keepclassmembers class android.support.v4.widget.z$5 { void <init>(android.support.v4.widget.z); }
-keepclassmembers class android.view.RenderNodeAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.view.RenderNodeAnimator { void releaseNativePtr(); }
-keepclassmembers class android.support.v4.widget.i$b { void <init>(); }
-keepclassmembers class android.support.v4.widget.i$b { java.lang.Object a(android.content.Context); }
-keepclassmembers class android.view.RenderNodeAnimator { long getNativeAnimator(); }
-keepclassmembers class android.support.v4.widget.i$b { boolean a(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.i$b { boolean a(java.lang.Object,float,float); }
-keepclassmembers class android.support.v4.widget.i$b { void a(java.lang.Object,int,int); }
-keepclassmembers class android.support.v4.widget.i$b { boolean a(java.lang.Object,int); }
-keepclassmembers class android.view.RenderNodeAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.support.v4.widget.i$b { boolean a(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class android.support.v4.widget.i$b { boolean b(java.lang.Object); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class java.lang.System { void exit(int); }
-keepclassmembers class android.support.a.a.f$e { android.graphics.Paint b(android.support.a.a.f$e); }
-keepclassmembers class android.support.a.a.f$e { android.graphics.Paint b(android.support.a.a.f$e,android.graphics.Paint); }
-keepclassmembers class android.view.View { int getBaseline(); }
-keepclassmembers class android.support.a.a.f$e { android.graphics.Paint c(android.support.a.a.f$e); }
-keepclassmembers class android.support.a.a.f$e { int a(); }
-keepclassmembers class android.support.a.a.f$e { void a(int); }
-keepclassmembers class android.support.a.a.f$e { void a(android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class android.support.v4.c.a.m$a { void <init>(android.support.v4.c.a.j$a,android.content.res.Resources); }
-keepclassmembers class android.view.View { void onMeasure(int,int); }
-keepclassmembers class android.view.GLES20Canvas { void <init>(); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class android.graphics.Interpolator$Result { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { void <init>(); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { void <init>(android.graphics.drawable.Ripple$1); }
-keepclassmembers class java.lang.System { void loadLibrary(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void setViewport(int,int); }
-keepclassmembers class android.view.View { int getDefaultSize(int,int); }
-keepclassmembers class android.view.GLES20Canvas { void setHighContrastText(boolean); }
-keepclassmembers class java.lang.System { void logE(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void insertReorderBarrier(); }
-keepclassmembers class java.lang.System { void logE(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.View { int getSuggestedMinimumHeight(); }
-keepclassmembers class android.view.GLES20Canvas { void insertInorderBarrier(); }
-keepclassmembers class java.lang.System { void logI(java.lang.String); }
-keepclassmembers class com.android.volley.j { void <init>(com.android.volley.VolleyError); }
-keepclassmembers class android.view.View { int getSuggestedMinimumWidth(); }
-keepclassmembers class android.view.GLES20Canvas { int onPreDraw(android.graphics.Rect); }
-keepclassmembers class java.lang.System { void logW(java.lang.String); }
-keepclassmembers class com.android.volley.j { void <init>(java.lang.Object,com.android.volley.a$a); }
-keepclassmembers class android.support.v4.g.a$d { void <init>(); }
-keepclassmembers class android.view.View { int getMinimumHeight(); }
-keepclassmembers class android.view.View { void setMinimumHeight(int); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void registrationComplete(); }
-keepclassmembers class android.view.View { int getMinimumWidth(); }
-keepclassmembers class android.support.v4.g.a$d { java.lang.Object a(); }
-keepclassmembers class android.view.GLES20Canvas { void onPostDraw(); }
-keepclassmembers class com.android.volley.j { boolean a(); }
-keepclassmembers class android.view.View { void setMinimumWidth(int); }
-keepclassmembers class android.support.v4.g.a$d { java.lang.Object a(android.support.v4.g.a); }
-keepclassmembers class android.view.View { android.view.animation.Animation getAnimation(); }
-keepclassmembers class android.view.GLES20Canvas { int drawRenderNode(android.view.RenderNode,android.graphics.Rect,int); }
-keepclassmembers class android.view.View { void clearAnimation(); }
-keepclassmembers class android.view.GLES20Canvas { void drawHardwareLayer(android.view.HardwareLayer,float,float,android.graphics.Paint); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View { boolean onSetAlpha(int); }
-keepclassmembers class android.app.ActionBar { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void <init>(java.net.PlainSocketImpl); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipPath(android.graphics.Path,android.graphics.Region$Op); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(); }
-keepclassmembers class android.view.View { void playSoundEffect(int); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(float,float,float,float); }
-keepclassmembers class android.text.style.SpellCheckSpan { void setSpellCheckInProgress(boolean); }
-keepclassmembers class android.support.v4.app.n { void <init>(android.support.v4.app.k); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(int,int,int,int); }
-keepclassmembers class android.text.style.SpellCheckSpan { boolean isSpellCheckInProgress(); }
-keepclassmembers class android.support.v4.app.n { void a(android.support.v4.f.i); }
-keepclassmembers class java.security.spec.X509EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(android.graphics.Rect); }
-keepclassmembers class android.view.View { int getWindowSystemUiVisibility(); }
-keepclassmembers class android.view.View { void onWindowSystemUiVisibilityChanged(int); }
-keepclassmembers class android.util.Pair { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void flush(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void write(byte[]); }
-keepclassmembers class android.view.GLES20Canvas { boolean getClipBounds(android.graphics.Rect); }
-keepclassmembers class android.view.GLES20Canvas { boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void writeLine(java.lang.String); }
-keepclassmembers class android.support.v4.app.n { android.content.Context g(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { org.apache.http.io.HttpTransportMetrics getMetrics(); }
-keepclassmembers class android.support.v4.app.n { android.os.Handler h(); }
-keepclassmembers class java.lang.reflect.Method { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.support.v4.app.n { android.support.v4.app.p i(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.reflect.ArtMethod getArtMethod(); }
-keepclassmembers class android.view.GLES20Canvas { void rotate(float); }
-keepclassmembers class android.view.GLES20Canvas { void scale(float,float); }
-keepclassmembers class java.lang.reflect.Method { int getModifiers(); }
-keepclassmembers class android.view.GLES20Canvas { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class java.lang.reflect.Method { java.lang.String getName(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.view.GLES20Canvas { void concat(android.graphics.Matrix); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getExceptionTypes(); }
-keepclassmembers class android.view.GLES20Canvas { int save(); }
-keepclassmembers class android.view.GLES20Canvas { int save(int); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class getReturnType(); }
-keepclassmembers class java.lang.reflect.Method { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Method { boolean equalNameAndParameters(java.lang.reflect.Method); }
-keepclassmembers class android.view.View { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class android.view.View { void onCloseSystemDialogs(java.lang.String); }
-keepclassmembers class java.net.InterfaceAddress { void <init>(java.net.Inet4Address,java.net.Inet4Address,java.net.Inet4Address); }
-keepclassmembers class android.view.GLES20Canvas { void restore(); }
-keepclassmembers class java.net.InterfaceAddress { void <init>(java.net.Inet6Address,short); }
-keepclassmembers class android.view.GLES20Canvas { void restoreToCount(int); }
-keepclassmembers class android.view.GLES20Canvas { int getSaveCount(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object getDefaultValue(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object invoke(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int b(int); }
-keepclassmembers class android.view.View { int getOverScrollMode(); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint); }
-keepclassmembers class java.io.ByteArrayOutputStream { void close(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { void <init>(); }
-keepclassmembers class android.view.View { void stopNestedScroll(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void reset(); }
-keepclassmembers class android.view.View { boolean hasNestedScrollingParent(); }
-keepclassmembers class android.view.View$3 { void <init>(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder insert(int,java.lang.CharSequence); }
-keepclassmembers class android.view.View$3 { void setValue(android.view.View,float); }
-keepclassmembers class android.view.View$3 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int c(int); }
-keepclassmembers class android.support.v4.c.a.n$a { void <init>(android.support.v4.c.a.j$a,android.content.res.Resources); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int d(int); }
-keepclassmembers class android.view.View { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { java.lang.Object get(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void set(java.lang.Object); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { boolean compareAndSet(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { java.lang.Object getAndSet(java.lang.Object); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void a(android.view.View,int,int,int,int); }
-keepclassmembers class org.apache.http.protocol.RequestUserAgent { void <init>(); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { void drawCircle(float,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.View { boolean isTextDirectionInherited(); }
-keepclassmembers class android.provider.Settings$System { int getInt(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { void processChallenge(org.apache.http.Header); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { boolean isComplete(); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { boolean isConnectionBased(); }
-keepclassmembers class android.view.GLES20Canvas { void drawCircle(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty); }
-keepclassmembers class android.provider.Settings$System { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { java.lang.String[] access$000(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { int[] access$200(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.io.MemoryMappedFile access$100(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class android.view.GLES20Canvas { void drawLine(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence); }
-keepclassmembers class android.view.GLES20Canvas { void drawLines(float[],android.graphics.Paint); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void a(android.view.View,android.graphics.Rect); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager { org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void a(android.view.View,boolean,android.graphics.Rect); }
-keepclassmembers class android.view.GLES20Canvas { void drawOval(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.text.method.TextKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class org.apache.http.impl.client.DefaultRedirectHandler { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { void drawPath(android.graphics.Path,android.graphics.Paint); }
-keepclassmembers class android.view.View { boolean isTextAlignmentInherited(); }
-keepclassmembers class android.text.method.TextKeyListener { boolean shouldCap(android.text.method.TextKeyListener$Capitalize,java.lang.CharSequence,int); }
-keepclassmembers class android.text.method.TextKeyListener { int getInputType(); }
-keepclassmembers class dalvik.system.VMRuntime { void <init>(); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { void setTransitionName(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { java.lang.String getTransitionName(); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class android.view.GLES20Canvas { void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.KeyListener getKeyListener(android.view.KeyEvent); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager { org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitAbi(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(java.lang.String,float,float,android.graphics.Paint); }
-keepclassmembers class android.text.method.TextKeyListener { int getPrefs(android.content.Context); }
-keepclassmembers class android.view.View { int access$2400(android.view.View); }
-keepclassmembers class android.view.View { boolean access$2500(android.view.View); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int); }
-keepclassmembers class java.io.UTFDataFormatException { void <init>(java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void c(); }
-keepclassmembers class android.support.v4.app.k$1 { void <init>(android.support.v4.app.k); }
-keepclassmembers class android.support.v4.widget.aa$e { void <init>(); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(org.apache.harmony.security.utils.ObjectIdentifier,org.apache.harmony.security.x501.AttributeValue); }
-keepclassmembers class android.net.http.AndroidHttpClient$2 { void <init>(android.net.http.AndroidHttpClient,org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.InetSocketAddress { int getPort(); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetAddress getAddress(); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String getHostName(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void drawableStateChanged(); }
-keepclassmembers class java.net.InetSocketAddress { boolean isUnresolved(); }
-keepclassmembers class android.database.AbstractCursor { void registerContentObserver(android.database.ContentObserver); }
-keepclassmembers class java.util.LinkedList { boolean add(java.lang.Object); }
-keepclassmembers class android.database.AbstractCursor { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$a { android.support.v7.widget.ak a(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$a { void <init>(android.support.v7.view.menu.ActionMenuItemView); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$a { boolean b(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getType(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.x501.AttributeValue getValue(); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.transition.ChangeBounds$3 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void <init>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void clear(); }
-keepclassmembers class java.io.File { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class java.io.File { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(int[],org.apache.harmony.security.x501.AttributeValue,org.apache.harmony.security.x501.AttributeTypeAndValue$1); }
-keepclassmembers class android.animation.AnimatorSet { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier access$100(org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.x501.AttributeValue access$200(org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class android.animation.AnimatorSet$1 { void <init>(android.animation.AnimatorSet,java.util.ArrayList); }
-keepclassmembers class java.util.LinkedList { boolean contains(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet { boolean isStarted(); }
-keepclassmembers class android.animation.AnimatorSet { long getStartDelay(); }
-keepclassmembers class java.net.DefaultFileNameMap { void <init>(); }
-keepclassmembers class java.io.File { boolean doAccess(int); }
-keepclassmembers class android.widget.RemoteViews$MutablePair { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.q$a { void <init>(); }
-keepclassmembers class java.io.File { int compareTo(java.io.File); }
-keepclassmembers class android.support.v4.widget.q$a { void a(android.widget.PopupWindow,boolean); }
-keepclassmembers class java.lang.IllegalAccessError { void <init>(); }
-keepclassmembers class java.io.File { void deleteOnExit(); }
-keepclassmembers class java.io.File { boolean delete(); }
-keepclassmembers class java.util.LinkedList { boolean remove(java.lang.Object); }
-keepclassmembers class java.lang.IllegalAccessError { void <init>(java.lang.String); }
-keepclassmembers class java.io.File { boolean exists(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean startEvent(android.view.InputEvent,int,java.lang.String); }
-keepclassmembers class java.util.jar.Attributes$Name { int hashCode(); }
-keepclassmembers class java.util.jar.Attributes$Name { java.lang.String toString(); }
-keepclassmembers class android.support.v7.a.d { void <init>(); }
-keepclassmembers class android.support.v7.a.d { android.content.Intent a(); }
-keepclassmembers class android.support.v7.a.d { android.support.v7.view.b a(android.support.v7.view.b$a); }
-keepclassmembers class android.support.v7.a.d { void a(android.support.v4.app.aq); }
-keepclassmembers class android.support.v7.a.d { void a(android.support.v7.view.b); }
-keepclassmembers class android.support.v7.a.d { boolean a(android.content.Intent); }
-keepclassmembers class android.support.v7.a.d { void a(android.support.v7.widget.Toolbar); }
-keepclassmembers class java.io.File { java.lang.String getPath(); }
-keepclassmembers class java.util.LinkedList { boolean removeOneOccurrence(java.lang.Object,java.util.Iterator); }
-keepclassmembers class java.io.File { boolean isAbsolute(); }
-keepclassmembers class android.support.v7.a.d { void b(android.content.Intent); }
-keepclassmembers class android.support.v7.a.d { void addContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.a.d { void b(android.support.v4.app.aq); }
-keepclassmembers class android.support.v7.a.d { void b(android.support.v7.view.b); }
-keepclassmembers class android.support.v7.a.d { void d(); }
-keepclassmembers class java.io.File { boolean isDirectory(); }
-keepclassmembers class java.io.File { boolean isFile(); }
-keepclassmembers class android.support.v7.a.d { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class java.util.LinkedList { int size(); }
-keepclassmembers class android.support.v7.a.d { android.support.v7.a.a f(); }
-keepclassmembers class android.support.v7.a.d { boolean g(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object peekFirstImpl(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object remove(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object peek(); }
-keepclassmembers class android.support.v7.a.d { void h(); }
-keepclassmembers class android.support.v7.a.d { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class android.support.v7.a.d { android.support.v7.a.f i(); }
-keepclassmembers class android.support.v7.a.d { void invalidateOptionsMenu(); }
-keepclassmembers class android.support.v7.a.d { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.a.d { void onContentChanged(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { android.view.InputEventConsistencyVerifier$KeyState findKeyState(int,int,int,boolean); }
-keepclassmembers class android.support.v7.a.d { void onCreate(android.os.Bundle); }
-keepclassmembers class java.io.File { java.lang.String[] list(); }
-keepclassmembers class java.io.File { java.io.File[] listFiles(); }
-keepclassmembers class android.os.IRemoteCallback$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.io.File { long length(); }
-keepclassmembers class java.util.concurrent.TimeUnit$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.a.d { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.support.v7.a.d { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class java.io.File { void mkdirErrno(); }
-keepclassmembers class java.io.File { boolean mkdir(); }
-keepclassmembers class java.io.File { boolean mkdirs(); }
-keepclassmembers class java.io.File { boolean mkdirs(boolean); }
-keepclassmembers class android.support.v7.a.d { void setContentView(android.view.View); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable delete(int,int); }
-keepclassmembers class android.support.v7.a.d { void setContentView(int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicCommentHandler { void <init>(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView$1 { void <init>(android.widget.Editor$InsertionHandleView); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable insert(int,java.lang.CharSequence); }
-keepclassmembers class android.support.v7.a.d { void setContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.a.d { void setTheme(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { void <init>(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.a.a.f$c { int a(android.support.a.a.f$c); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String); }
-keepclassmembers class java.io.File { java.lang.String toString(); }
-keepclassmembers class android.support.a.a.f$c { android.graphics.Matrix b(android.support.a.a.f$c); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void setVisibility(int); }
-keepclassmembers class android.support.a.a.f$c { java.lang.String a(); }
-keepclassmembers class android.support.a.a.f$c { android.graphics.Matrix c(android.support.a.a.f$c); }
-keepclassmembers class java.lang.reflect.Field { java.lang.String getName(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.lang.reflect.Field { int getOffset(); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator clone(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Class getType(); }
-keepclassmembers class android.graphics.RectF$1 { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator setDuration(long); }
-keepclassmembers class android.support.a.a.f$c { void a(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$000(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$400(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.ValueAnimator access$102(android.animation.AnimatorSet,android.animation.ValueAnimator); }
-keepclassmembers class android.animation.AnimatorSet { java.util.HashMap access$300(android.animation.AnimatorSet); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder setLabel(java.lang.CharSequence); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$502(android.animation.AnimatorSet,boolean); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder setAllowFreeFormInput(boolean); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$702(android.animation.AnimatorSet,boolean); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder addExtras(android.os.Bundle); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$600(android.animation.AnimatorSet); }
-keepclassmembers class java.lang.reflect.Field { boolean getBoolean(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$4 { void <init>(android.widget.AbsListView); }
-keepclassmembers class java.util.ArrayList { void <init>(); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.Hashtable$HashtableEntry); }
-keepclassmembers class java.lang.reflect.Field { char getChar(java.lang.Object); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getValue(); }
-keepclassmembers class java.lang.reflect.Field { byte getByte(java.lang.Object); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getKey(); }
-keepclassmembers class java.lang.reflect.Field { double getDouble(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { int getInt(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { long getLong(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { float getFloat(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { short getShort(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { void setBoolean(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setByte(java.lang.Object,byte); }
-keepclassmembers class java.lang.reflect.Field { void setChar(java.lang.Object,char); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String); }
-keepclassmembers class java.lang.reflect.Field { void setFloat(java.lang.Object,float); }
-keepclassmembers class java.lang.reflect.Field { void setDouble(java.lang.Object,double); }
-keepclassmembers class java.lang.reflect.Field { void setLong(java.lang.Object,long); }
-keepclassmembers class java.lang.reflect.Field { void setInt(java.lang.Object,int); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { java.lang.Object getValue(); }
-keepclassmembers class java.lang.reflect.Field { void setShort(java.lang.Object,short); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder opaquePart(android.net.Uri$Part); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder scheme(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class java.util.ArrayList { java.lang.Object get(int); }
-keepclassmembers class java.util.ArrayList { int size(); }
-keepclassmembers class android.net.Uri$Builder { void <init>(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(android.net.Uri$Part); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(java.lang.String); }
-keepclassmembers class java.util.ArrayList { boolean isEmpty(); }
-keepclassmembers class java.lang.Class { java.lang.ClassLoader getClassLoaderImpl(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder path(android.net.Uri$PathPart); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class java.lang.Class { java.lang.Class getComponentType(); }
-keepclassmembers class org.apache.http.impl.cookie.DateParseException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Class { com.android.dex.Dex getDex(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x501.Name); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.ORAddress); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder fragment(android.net.Uri$Part); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor(java.lang.Class[]); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder appendEncodedPath(java.lang.String); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setDuration(long); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[]); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder query(android.net.Uri$Part); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class android.net.Uri$Builder { boolean hasSchemeOrAuthority(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int hashCode(); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void <init>(org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.Object getName(); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(); }
-keepclassmembers class android.os.Message { void sendToTarget(); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(android.widget.ListView$1); }
-keepclassmembers class android.os.Message { void <init>(); }
-keepclassmembers class java.util.ArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpRequestRetryHandler { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpecFactory { void <init>(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpRequestRetryHandler { void <init>(int,boolean); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { boolean isTunnelled(); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { boolean isConnected(); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { org.apache.http.HttpHost getTargetHost(); }
-keepclassmembers class android.support.v7.view.d { void b(); }
-keepclassmembers class android.support.v7.view.d { void <init>(android.content.Context,int); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { boolean isLayered(); }
-keepclassmembers class android.support.v7.view.d { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.support.v7.view.d { void a(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] getEncoded(); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils { java.util.Date parseDate(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils { java.util.Date parseDate(java.lang.String,java.lang.String[]); }
-keepclassmembers class java.lang.ClassCastException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { void setDurationScale(float); }
-keepclassmembers class org.apache.http.impl.cookie.BasicSecureHandler { void <init>(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray$Access { void <init>(); }
-keepclassmembers class android.view.animation.LinearInterpolator { void <init>(); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class android.view.animation.LinearInterpolator { long createNativeInterpolator(); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(); }
-keepclassmembers class android.view.animation.LinearInterpolator { float getInterpolation(float); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.conn.OperatedClientConnection); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void detach(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { org.apache.http.conn.ClientConnectionManager getManager(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { org.apache.http.conn.OperatedClientConnection getWrappedConnection(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { boolean isOpen(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { boolean isStale(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void setSocketTimeout(int); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void flush(); }
-keepclassmembers class android.graphics.Paint$Cap { void <init>(java.lang.String,int,int); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { boolean isResponseAvailable(int); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void receiveResponseEntity(org.apache.http.HttpResponse); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.PropertyValuesHolder[] getValues(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { org.apache.http.HttpResponse receiveResponseHeader(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.Object access$000(org.apache.harmony.security.x509.GeneralName); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int access$100(org.apache.harmony.security.x509.GeneralName); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] access$202(org.apache.harmony.security.x509.GeneralName,byte[]); }
-keepclassmembers class android.support.v7.a.g$a { void <init>(android.support.v7.a.g,android.view.Window$Callback); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void sendRequestHeader(org.apache.http.HttpRequest); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { int getRemotePort(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { java.net.InetAddress getRemoteAddress(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void markReusable(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void unmarkReusable(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { boolean isSecure(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { boolean isMarkedReusable(); }
-keepclassmembers class android.support.v7.a.g$a { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.support.v7.a.g$a { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void releaseConnection(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void abortConnection(); }
-keepclassmembers class android.animation.ValueAnimator { long getStartDelay(); }
-keepclassmembers class java.lang.Class { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatCount(int); }
-keepclassmembers class android.net.http.AndroidHttpClient$CurlLogger { void <init>(android.net.http.AndroidHttpClient); }
-keepclassmembers class android.os.ResultReceiver { void <init>(android.os.Handler); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatMode(int); }
-keepclassmembers class android.net.http.AndroidHttpClient$CurlLogger { void <init>(android.net.http.AndroidHttpClient,android.net.http.AndroidHttpClient$1); }
-keepclassmembers class android.app.Application { void onTerminate(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$f { void <init>(android.support.design.widget.CoordinatorLayout); }
-keepclassmembers class android.app.Application { void onCreate(); }
-keepclassmembers class android.text.InputFilter$LengthFilter { void <init>(int); }
-keepclassmembers class android.animation.ValueAnimator { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.app.Application { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.app.Application { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.app.Application { void unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class android.app.Application { void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class java.lang.Class { java.lang.String getName(); }
-keepclassmembers class java.lang.Class { java.lang.String getInnerClassName(); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.app.Application { void unregisterOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class android.animation.ValueAnimator { void end(); }
-keepclassmembers class android.animation.ValueAnimator { void start(); }
-keepclassmembers class android.animation.ValueAnimator { boolean isStarted(); }
-keepclassmembers class android.animation.ValueAnimator { boolean isRunning(); }
-keepclassmembers class android.support.v4.g.af$i { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController$5 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { void <init>(); }
-keepclassmembers class java.lang.Class { java.lang.Class getSuperclass(); }
-keepclassmembers class android.os.ServiceManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.animation.ValueAnimator { boolean canReverse(); }
-keepclassmembers class java.lang.Class { boolean isArray(); }
-keepclassmembers class java.lang.Class { boolean isAnonymousClass(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(android.view.View,boolean); }
-keepclassmembers class android.transition.Transition { java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <init>(java.lang.String); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.ViewTreeObserver { void <init>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.g.e$c { void <init>(); }
-keepclassmembers class android.support.v4.g.e$c { int a(int,int); }
-keepclassmembers class java.lang.Class { boolean isInstance(java.lang.Object); }
-keepclassmembers class android.support.v4.g.e$c { void a(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class java.lang.Class { boolean isMemberClass(); }
-keepclassmembers class java.lang.Class { boolean isLocalClass(); }
-keepclassmembers class java.lang.Class { boolean isPrimitive(); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.view.ViewTreeObserver { void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class java.lang.Class { java.lang.Package getPackage(); }
-keepclassmembers class java.lang.Class { java.lang.String getPackageName$(); }
-keepclassmembers class java.lang.Class { boolean desiredAssertionStatus(); }
-keepclassmembers class android.support.a.a.f$d { void <init>(); }
-keepclassmembers class android.support.a.a.f$d { void a(android.graphics.Path); }
-keepclassmembers class android.support.a.a.f$d { void <init>(android.support.a.a.f$d); }
-keepclassmembers class android.support.a.a.f$d { boolean a(); }
-keepclassmembers class java.lang.Class { int getDexClassDefIndex(); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class android.support.a.a.f$d { java.lang.String b(); }
-keepclassmembers class android.transition.Transition { void clearValues(boolean); }
-keepclassmembers class java.lang.Class { int getDexAnnotationDirectoryOffset(); }
-keepclassmembers class java.util.TreeMap$KeySet$1 { void <init>(java.util.TreeMap$KeySet,java.util.TreeMap$Node); }
-keepclassmembers class android.view.ViewTreeObserver { boolean isAlive(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator clone(); }
-keepclassmembers class android.animation.ValueAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class java.util.TreeMap$KeySet$1 { java.lang.Object next(); }
-keepclassmembers class java.util.TimSort { void sort(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class android.support.v7.widget.ab { void drawableStateChanged(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object initialValue(); }
-keepclassmembers class java.lang.ThreadLocal { void set(java.lang.Object); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$Values values(java.lang.Thread); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$1 { void <init>(org.apache.http.impl.conn.SingleClientConnManager,org.apache.http.conn.routing.HttpRoute,java.lang.Object); }
-keepclassmembers class java.lang.ThreadLocal { int access$200(java.lang.ThreadLocal); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ref.Reference access$300(java.lang.ThreadLocal); }
-keepclassmembers class org.apache.http.NoHttpResponseException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.l { void <init>(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$1 { org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.util.Date { void <init>(); }
-keepclassmembers class android.graphics.Region { void <init>(); }
-keepclassmembers class android.graphics.Region { void <init>(android.graphics.Region); }
-keepclassmembers class java.util.Date { void <init>(long); }
-keepclassmembers class android.graphics.Region { void setEmpty(); }
-keepclassmembers class dalvik.system.PathClassLoader { void <init>(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class java.util.Date { long getTime(); }
-keepclassmembers class android.graphics.Region { boolean op(int,int,int,int,android.graphics.Region$Op); }
-keepclassmembers class android.content.res.Resources$NotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.os.g { void a(java.lang.String); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class android.support.v4.app.ab$d { android.app.Notification a(); }
-keepclassmembers class android.support.v4.app.ab$d { android.support.v4.app.ab$d a(android.widget.RemoteViews); }
-keepclassmembers class android.support.v4.app.ab$d { android.support.v4.app.ab$d a(int); }
-keepclassmembers class android.content.ComponentName { java.lang.String getPackageName(); }
-keepclassmembers class android.support.v4.app.ab$d { android.support.v4.app.ab$d a(boolean); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.support.v4.app.ab$d { android.support.v4.app.ab$d b(int); }
-keepclassmembers class android.util.Pools$SynchronizedPool { java.lang.Object acquire(); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void onDetachedFromWindow(); }
-keepclassmembers class android.content.ComponentName { void appendShortClassName(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { boolean a(android.support.v7.view.menu.h); }
-keepclassmembers class android.util.Pools$SynchronizedPool { boolean release(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { boolean sameWindow(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void rememberWindowAttachCount(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[]); }
-keepclassmembers class android.content.ComponentName { void appendShortString(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { byte[] getEncoded(); }
-keepclassmembers class android.transition.Transition { void forceVisibility(int,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[],org.apache.harmony.security.x509.Certificate$1); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { org.apache.harmony.security.x509.TBSCertificate access$100(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { org.apache.harmony.security.x509.AlgorithmIdentifier access$200(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class android.widget.TextView$SavedState$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { byte[] access$300(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class android.support.v7.view.a { void <init>(android.content.Context); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void start(); }
-keepclassmembers class android.support.v7.view.a { int a(); }
-keepclassmembers class android.support.v7.view.a { boolean b(); }
-keepclassmembers class android.support.v7.view.a { boolean d(); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.content.ComponentName,android.os.Parcel); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,android.os.Parcel); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.Paint$Join { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.view.a { boolean f(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void scheduleAnimation(); }
-keepclassmembers class android.support.v4.widget.z$3 { void <init>(android.support.v4.widget.z); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void <init>(android.animation.ValueAnimator$1); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$1 { void <init>(android.graphics.drawable.AnimatedVectorDrawable); }
-keepclassmembers class org.apache.http.client.CircularRedirectException { void <init>(java.lang.String); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { void <init>(); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.AdapterView { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class android.app.PendingIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.widget.q$b { void <init>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int fieldId(); }
-keepclassmembers class android.support.v4.widget.q$b { void a(android.widget.PopupWindow,int); }
-keepclassmembers class android.support.v4.widget.q$b { void a(android.widget.PopupWindow,boolean); }
-keepclassmembers class java.util.Date { void appendTwoDigits(java.lang.StringBuilder,int); }
-keepclassmembers class android.app.SharedElementCallback$1 { void <init>(); }
-keepclassmembers class android.widget.AdapterView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class android.app.PendingIntent { void <init>(android.content.IIntentSender); }
-keepclassmembers class android.widget.AbsListView$SavedState$1 { void <init>(); }
-keepclassmembers class android.app.PendingIntent { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getCountryCode(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCode(int); }
-keepclassmembers class android.widget.AdapterView { void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { long getNationalNumber(); }
-keepclassmembers class android.system.StructAddrinfo { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNationalNumber(long); }
-keepclassmembers class dalvik.system.SocketTagger { void <init>(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel$1 { void <init>(java.nio.channels.spi.AbstractInterruptibleChannel); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void <init>(); }
-keepclassmembers class dalvik.system.SocketTagger { void tag(java.net.Socket); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class dalvik.system.SocketTagger { void untag(java.net.Socket); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { boolean isItalianLeadingZero(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setItalianLeadingZero(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNumberOfLeadingZeros(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v7.a.b$a$1 { void <init>(android.support.v7.a.b$a,android.content.Context,int,int,java.lang.CharSequence[],android.widget.ListView); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getNumberOfLeadingZeros(); }
-keepclassmembers class android.widget.AdapterView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.AdapterView { int getSelectedItemPosition(); }
-keepclassmembers class android.text.style.ScaleXSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.security.Security$SecurityDoor { void <init>(); }
-keepclassmembers class android.widget.AdapterView { int getCount(); }
-keepclassmembers class java.security.Security$SecurityDoor { void renumProviders(); }
-keepclassmembers class android.support.v4.g.an { int a(android.view.View); }
-keepclassmembers class java.security.Security$SecurityDoor { java.util.List getAliases(java.security.Provider$Service); }
-keepclassmembers class java.security.Security$SecurityDoor { void <init>(java.security.Security$1); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCodeSource(); }
-keepclassmembers class org.apache.http.client.ClientProtocolException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v4.g.an { int d(android.view.View); }
-keepclassmembers class android.widget.AdapterView { int getFirstVisiblePosition(); }
-keepclassmembers class org.apache.http.impl.auth.UnsupportedDigestAlgorithmException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.g.ad { float a(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v4.g.ad { float b(android.view.VelocityTracker,int); }
-keepclassmembers class android.view.View$7 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AdapterView { void setFocusable(boolean); }
-keepclassmembers class android.widget.AdapterView { void setFocusableInTouchMode(boolean); }
-keepclassmembers class libcore.net.url.FtpHandler { void <init>(); }
-keepclassmembers class android.widget.AdapterView { void checkFocus(); }
-keepclassmembers class android.widget.Editor$InputContentType { void <init>(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpContext { void <init>(org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.widget.AdapterView { void updateEmptyStatus(boolean); }
-keepclassmembers class org.apache.http.protocol.BasicHttpContext { void <init>(); }
-keepclassmembers class java.net.Inet4Address { void <init>(byte[],java.lang.String); }
-keepclassmembers class android.widget.AdapterView { long getItemIdAtPosition(int); }
-keepclassmembers class java.net.Inet4Address { boolean isAnyLocalAddress(); }
-keepclassmembers class android.widget.AdapterView { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.CompoundButton$SavedState$1 { void <init>(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$11 { void <init>(com.shapps.mintubeapp.MainActivity); }
-keepclassmembers class java.util.TimeZone { void <init>(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$11 { void run(); }
-keepclassmembers class android.widget.AdapterView { void dispatchOnItemSelected(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.impl.conn.AbstractPoolEntry); }
-keepclassmembers class android.widget.AdapterView { void fireOnSelected(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService$3 { void <init>(com.shapps.mintubeapp.PlayerService); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.AdapterView { void performAccessibilityActionsOnSelected(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void detach(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { org.apache.http.conn.routing.HttpRoute getRoute(); }
-keepclassmembers class android.widget.AdapterView { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class android.widget.AdapterView { boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.design.widget.aa { void a(int,boolean); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void tunnelTarget(boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class android.support.design.widget.aa { void setVisibility(int); }
-keepclassmembers class java.util.TimeZone { java.lang.String getDisplayName(boolean,int); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$6 { void <init>(com.shapps.mintubeapp.MainActivity); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$6 { void onClick(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void <init>(byte[]); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class java.net.PlainSocketImpl { boolean usingSocks(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { byte[] getEncoded(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void close(); }
-keepclassmembers class java.net.PlainSocketImpl { int available(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void shutdown(); }
-keepclassmembers class java.net.PlainSocketImpl { void bind(java.net.InetAddress,int); }
-keepclassmembers class android.widget.TextView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class java.util.Collections$UnmodifiableSet { void <init>(java.util.Set); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void setState(java.lang.Object); }
-keepclassmembers class java.net.PlainSocketImpl { void close(); }
-keepclassmembers class android.widget.AdapterView { boolean canAnimate(); }
-keepclassmembers class java.net.PlainSocketImpl { void connect(java.net.InetAddress,int,int); }
-keepclassmembers class java.util.TimeZone { java.lang.String getID(); }
-keepclassmembers class java.net.PlainSocketImpl { void create(boolean); }
-keepclassmembers class java.net.PlainSocketImpl { java.lang.Object getOption(int); }
-keepclassmembers class java.net.PlainSocketImpl { void listen(int); }
-keepclassmembers class java.net.PlainSocketImpl { void setOption(int,java.lang.Object); }
-keepclassmembers class android.support.v4.app.aj$a { void a(android.support.v4.app.ae$a); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(android.graphics.drawable.ColorDrawable$ColorState); }
-keepclassmembers class android.support.v4.app.aj$a { android.app.Notification$Builder a(); }
-keepclassmembers class libcore.util.CollectionUtils$1 { void <init>(java.lang.Iterable,boolean); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { boolean canApplyTheme(); }
-keepclassmembers class java.net.PlainSocketImpl { void shutdownInput(); }
-keepclassmembers class com.android.org.conscrypt.AddressUtils { boolean isValidSniHostname(java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl { void shutdownOutput(); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.util.zip.ZipEntry,java.util.jar.JarFile); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { int getChangingConfigurations(); }
-keepclassmembers class android.widget.AdapterView { void setNextSelectedPositionInt(int); }
-keepclassmembers class android.transition.Visibility { void <init>(); }
-keepclassmembers class android.widget.AdapterView { void access$000(android.widget.AdapterView,android.os.Parcelable); }
-keepclassmembers class java.net.PlainSocketImpl { int access$000(java.net.PlainSocketImpl,byte[],int,int); }
-keepclassmembers class android.widget.AdapterView { void setSelectedPositionInt(int); }
-keepclassmembers class android.os.StrictMode$5 { void <init>(java.lang.String,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class java.net.PlainSocketImpl { void access$100(java.net.PlainSocketImpl,byte[],int,int); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.transition.Visibility { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Visibility { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Visibility { void forceVisibility(int,boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { boolean checkTag(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.TextUtils$1 { void <init>(); }
-keepclassmembers class java.util.regex.Matcher { void <init>(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class android.text.SpannableString { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class android.text.SpannableString { void removeSpan(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { int hashCode(); }
-keepclassmembers class android.text.SpannableString { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.SpannableString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.text.SpannableString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class org.apache.http.conn.ssl.StrictHostnameVerifier { void <init>(); }
-keepclassmembers class android.text.SpannableString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { int getSpanStart(java.lang.Object); }
-keepclassmembers class java.util.ServiceLoader { void reload(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence); }
-keepclassmembers class java.util.ServiceLoader { java.lang.ClassLoader access$000(java.util.ServiceLoader); }
-keepclassmembers class java.util.ServiceLoader { java.lang.Class access$100(java.util.ServiceLoader); }
-keepclassmembers class java.util.ServiceLoader { java.util.Set access$200(java.util.ServiceLoader); }
-keepclassmembers class java.util.regex.Matcher { void resetForInput(); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class); }
-keepclassmembers class android.support.v7.widget.p { void <init>(android.widget.ImageView,android.support.v7.widget.m); }
-keepclassmembers class android.support.v7.widget.p { void a(android.util.AttributeSet,int); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void <init>(android.transition.Transition,android.view.ViewGroup); }
-keepclassmembers class com.shapps.mintubeapp.GetPermission$2 { void <init>(com.shapps.mintubeapp.GetPermission); }
-keepclassmembers class java.util.regex.Matcher { java.lang.StringBuffer appendTail(java.lang.StringBuffer); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAt(); }
-keepclassmembers class java.util.regex.Matcher { boolean find(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void <init>(org.apache.harmony.security.x509.GeneralName,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.regex.Matcher { boolean matches(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { int access$200(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { org.apache.harmony.security.x509.GeneralName access$000(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { void <init>(); }
-keepclassmembers class java.net.Inet6Address { void <init>(byte[],java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { int access$100(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class android.transition.AutoTransition { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.ByteArray { int hashCode(); }
-keepclassmembers class com.android.org.conscrypt.ByteArray { void <init>(byte[]); }
-keepclassmembers class java.util.regex.Matcher { int end(); }
-keepclassmembers class java.util.regex.Matcher { int start(); }
-keepclassmembers class android.support.v7.a.b$2 { void <init>(android.support.v7.a.b,android.view.View,android.view.View); }
-keepclassmembers class java.net.Inet6Address { boolean isAnyLocalAddress(); }
-keepclassmembers class java.util.regex.Matcher { int groupCount(); }
-keepclassmembers class com.android.volley.a.i { void <init>(int,java.lang.String,java.lang.String,com.android.volley.j$b,com.android.volley.j$a); }
-keepclassmembers class com.android.volley.a.i { void b(java.lang.Object); }
-keepclassmembers class com.android.volley.a.i { java.lang.String j(); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.volley.a.i { byte[] k(); }
-keepclassmembers class android.system.Os { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class libcore.io.Streams { byte[] readFully(java.io.InputStream); }
-keepclassmembers class com.android.volley.a.i { java.lang.String n(); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { void <init>(); }
-keepclassmembers class java.net.Inet6Address { int getScopeId(); }
-keepclassmembers class android.support.v7.widget.az { android.graphics.drawable.Drawable a(int); }
-keepclassmembers class android.support.v7.widget.az { void <init>(android.content.Context,android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.az { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date access$000(org.apache.harmony.security.x509.Validity); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { void <init>(java.util.Date,java.util.Date); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date getNotAfter(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date getNotBefore(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date access$100(org.apache.harmony.security.x509.Validity); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void finish(); }
-keepclassmembers class java.util.zip.DataFormatException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float getDeceleration(int); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void <init>(java.net.URL,java.net.Proxy); }
-keepclassmembers class org.apache.http.message.BufferedHeader { java.lang.String getValue(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean springback(int,int,int); }
-keepclassmembers class org.apache.http.message.BufferedHeader { java.lang.String getName(); }
-keepclassmembers class org.apache.http.message.BufferedHeader { int getValuePos(); }
-keepclassmembers class org.apache.http.message.BufferedHeader { java.lang.String toString(); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.d$d$1 { android.support.v7.widget.ak a(); }
-keepclassmembers class android.support.v7.widget.d$d$1 { boolean b(); }
-keepclassmembers class org.apache.http.message.BufferedHeader { org.apache.http.util.CharArrayBuffer getBuffer(); }
-keepclassmembers class android.support.v7.c.a.a { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.d$d$1 { void <init>(android.support.v7.widget.d$d,android.view.View,android.support.v7.widget.d); }
-keepclassmembers class android.support.v7.widget.d$d$1 { boolean c(); }
-keepclassmembers class android.support.v7.c.a.a { void a(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.c.a.a { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.content.res.Resources { int selectDefaultTheme(int,int); }
-keepclassmembers class android.support.v7.c.a.a { void draw(android.graphics.Canvas); }
-keepclassmembers class android.content.res.Resources { int selectSystemTheme(int,int,int,int,int,int); }
-keepclassmembers class android.support.v7.c.a.a { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.content.res.Resources { android.content.res.ConfigurationBoundResourceCache getStateListAnimatorCache(); }
-keepclassmembers class android.content.res.Resources { android.content.res.ConfigurationBoundResourceCache getAnimatorCache(); }
-keepclassmembers class android.content.res.Resources { void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration); }
-keepclassmembers class android.support.v7.c.a.a { void jumpToCurrentState(); }
-keepclassmembers class android.support.v7.c.a.a { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class libcore.net.url.FtpURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.ClassNotFoundException { java.lang.Throwable getCause(); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class com.android.volley.m$a$a { void <init>(java.lang.String,long,long); }
-keepclassmembers class android.support.v7.c.a.a { void setHotspot(float,float); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$h { void <init>(); }
-keepclassmembers class android.support.v7.c.a.a { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.support.v7.c.a.a { boolean setState(int[]); }
-keepclassmembers class javax.net.ssl.SSLSocket { void <init>(); }
-keepclassmembers class android.graphics.Path { void <init>(); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <init>(byte[]); }
-keepclassmembers class java.util.ResourceBundle { void <init>(); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void onMeasure(int,int); }
-keepclassmembers class android.graphics.Path { void reset(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { boolean readMultiLine(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean access$000(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.support.v4.g.af$h { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { void <init>(java.lang.Object[],int,int); }
-keepclassmembers class android.graphics.Path { android.graphics.Path$FillType getFillType(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float access$200(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.os.NetworkOnMainThreadException { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class android.graphics.Path { void setFillType(android.graphics.Path$FillType); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void write(java.lang.String); }
-keepclassmembers class org.json.JSONObject$1 { void <init>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { boolean hasNext(); }
-keepclassmembers class android.support.v4.g.af$h { int h(android.view.View); }
-keepclassmembers class android.graphics.Path { boolean isEmpty(); }
-keepclassmembers class android.support.v4.g.af$h { int t(android.view.View); }
-keepclassmembers class org.json.JSONObject$1 { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void <init>(java.io.InputStream,java.net.Socket); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int read(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void recycle(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int read(byte[],int,int); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { int getChildCount(); }
-keepclassmembers class android.graphics.Path { void computeBounds(android.graphics.RectF,boolean); }
-keepclassmembers class android.graphics.Path { void moveTo(float,float); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void close(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int available(); }
-keepclassmembers class android.graphics.Path { void rMoveTo(float,float); }
-keepclassmembers class android.graphics.Path { void lineTo(float,float); }
-keepclassmembers class android.graphics.Path { void rLineTo(float,float); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { long skip(long); }
-keepclassmembers class android.graphics.Path { void rQuadTo(float,float,float,float); }
-keepclassmembers class android.graphics.Path { void quadTo(float,float,float,float); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void clear(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void sort(java.util.ArrayList); }
-keepclassmembers class android.text.Layout$Ellipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.graphics.Path { void cubicTo(float,float,float,float,float,float); }
-keepclassmembers class java.math.RoundingMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.text.Layout$Ellipsizer { int length(); }
-keepclassmembers class android.graphics.Path { void rCubicTo(float,float,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void arcTo(float,float,float,float,float,float,boolean); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$1 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],com.android.internal.app.AlertController$RecycleListView); }
-keepclassmembers class android.graphics.Path { void arcTo(android.graphics.RectF,float,float,boolean); }
-keepclassmembers class android.graphics.Path { void close(); }
-keepclassmembers class android.ddm.DdmHandleHeap { void <init>(); }
-keepclassmembers class android.app.Notification$BuilderRemoteViews { void <init>(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class android.app.Notification$BuilderRemoteViews { android.widget.RemoteViews clone(); }
-keepclassmembers class android.app.Notification$BuilderRemoteViews { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.Path { void addRect(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class android.graphics.Path { void addOval(android.graphics.RectF,android.graphics.Path$Direction); }
-keepclassmembers class libcore.io.Posix { void <init>(); }
-keepclassmembers class android.graphics.Path { void addOval(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class android.support.v7.a.b$a { void a(android.support.v7.a.b); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator); }
-keepclassmembers class android.os.BadParcelableException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator,android.animation.StateListAnimator$1); }
-keepclassmembers class java.util.ResourceBundle { void setParent(java.util.ResourceBundle); }
-keepclassmembers class android.graphics.Path { void addPath(android.graphics.Path,android.graphics.Matrix); }
-keepclassmembers class java.util.Formatter { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.util.ResourceBundle { void setLocale(java.util.Locale); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.graphics.Path { long ni(); }
-keepclassmembers class libcore.io.Posix { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class libcore.io.Posix { int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class android.graphics.Path { float[] approximate(float); }
-keepclassmembers class libcore.io.Posix { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class java.util.Formatter { void outputCharSequence(java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void endSoftwareAnimations(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void jump(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void createPendingHardwareExit(int,int,int); }
-keepclassmembers class org.apache.http.conn.ConnectionPoolTimeoutException { void <init>(java.lang.String); }
-keepclassmembers class libcore.io.Posix { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancelSoftwareAnimations(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancel(); }
-keepclassmembers class android.graphics.Point$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <init>(int,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,java.util.Date,java.util.Date,java.util.List,org.apache.harmony.security.x509.Extensions,byte[]); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.AnimatorListenerAdapter access$100(android.graphics.drawable.RippleBackground); }
-keepclassmembers class android.net.http.AndroidHttpClient$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.ObjectAnimator access$202(android.graphics.drawable.RippleBackground,android.animation.ObjectAnimator); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void invalidateSelf(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter { void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager,org.apache.http.impl.conn.AbstractPoolEntry); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter { org.apache.http.impl.conn.AbstractPoolEntry getPoolEntry(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter { void detach(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean access$302(android.graphics.drawable.RippleBackground,boolean); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter { org.apache.http.conn.ClientConnectionManager getManager(); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { void <init>(); }
-keepclassmembers class android.app.Notification$Action { android.app.RemoteInput[] getRemoteInputs(); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <init>(int,int,boolean,int); }
-keepclassmembers class android.app.Notification$Action { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.content.res.Resources { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics); }
-keepclassmembers class android.app.Notification$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[],android.app.Notification$1); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <init>(int,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,java.util.Date,java.util.Date,java.util.List,org.apache.harmony.security.x509.Extensions,byte[],org.apache.harmony.security.x509.TBSCertList$1); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setPattern(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { int access$400(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x509.AlgorithmIdentifier access$500(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.Date access$800(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setFormat(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.List access$900(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.Date access$700(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { int leadingDigitsPatternSize(); }
-keepclassmembers class android.view.animation.BaseInterpolator { int getChangingConfiguration(); }
-keepclassmembers class android.view.animation.BaseInterpolator { void <init>(); }
-keepclassmembers class android.view.animation.BaseInterpolator { void setChangingConfiguration(int); }
-keepclassmembers class android.graphics.PathEffect { void <init>(); }
-keepclassmembers class java.util.AbstractSequentialList { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixFormattingRule(java.lang.String); }
-keepclassmembers class java.util.AbstractSequentialList { java.util.Iterator iterator(); }
-keepclassmembers class android.content.res.Resources { int calcConfigChanges(android.content.res.Configuration); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixOptionalWhenFormatting(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setDomesticCarrierCodeFormattingRule(java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.util.DisplayMetrics getDisplayMetrics(); }
-keepclassmembers class android.content.res.Resources { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class android.content.res.Resources { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.os.AsyncTask$Status { void <init>(java.lang.String,int); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class java.net.UnknownHostException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes$1 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.animation.LayoutTransition { boolean isChangingLayout(); }
-keepclassmembers class android.widget.CheckedTextView { boolean isChecked(); }
-keepclassmembers class android.animation.LayoutTransition { boolean isRunning(); }
-keepclassmembers class android.widget.CheckedTextView { void setChecked(boolean); }
-keepclassmembers class android.widget.CheckedTextView { void setVisibility(int); }
-keepclassmembers class android.content.res.Resources { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.support.v7.a.q { void k(boolean); }
-keepclassmembers class android.widget.CheckedTextView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.widget.CheckedTextView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.widget.CheckedTextView { void setBasePadding(boolean); }
-keepclassmembers class android.widget.CheckedTextView { void internalSetPadding(int,int,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { void appendDayOfWeek(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class android.support.v7.a.q { void a(float); }
-keepclassmembers class android.widget.CheckedTextView { void drawableStateChanged(); }
-keepclassmembers class java.util.Formatter { int to12Hour(int); }
-keepclassmembers class android.support.v7.a.q { void a(java.lang.CharSequence); }
-keepclassmembers class android.widget.CheckedTextView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.a.q { void b(boolean); }
-keepclassmembers class android.support.v7.a.q { void a(boolean); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { long get(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void <init>(long); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.animation.LayoutTransition { boolean hasListeners(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void <init>(boolean[]); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { boolean[] access$000(org.apache.harmony.security.x509.ReasonFlags); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.support.v7.a.q { void d(boolean); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.animation.LayoutTransition { void showChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class java.text.SimpleDateFormat { java.util.Date error(java.text.ParsePosition,int,java.util.TimeZone); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.util.MutableInt { void <init>(int); }
-keepclassmembers class android.view.animation.OvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.animation.LayoutTransition { void hideChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.support.v7.a.b$3 { void run(); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$000(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { void removeTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class android.support.v7.a.b$3 { void <init>(android.support.v7.a.b,android.view.View,android.view.View); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { android.view.Window$Callback getWrappedWindowCallback(); }
-keepclassmembers class android.animation.LayoutTransition { long access$200(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$100(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$300(android.animation.LayoutTransition); }
-keepclassmembers class android.support.v7.a.q { int j(); }
-keepclassmembers class android.animation.LayoutTransition { long access$400(android.animation.LayoutTransition); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getCachedDrawableLocked(android.util.LongSparseArray,long); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$500(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$700(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$800(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$900(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$1100(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1500(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1300(android.animation.LayoutTransition); }
-keepclassmembers class java.text.SimpleDateFormat { int parseDayOfWeek(java.lang.String,int,boolean); }
-keepclassmembers class android.animation.LayoutTransition { long access$1200(android.animation.LayoutTransition); }
-keepclassmembers class android.graphics.Bitmap$Config { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.animation.LayoutTransition { java.util.ArrayList access$1700(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { boolean access$1600(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1800(android.animation.LayoutTransition); }
-keepclassmembers class java.text.SimpleDateFormat { int parseMonth(java.lang.String,int,int,int,boolean); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1900(android.animation.LayoutTransition); }
-keepclassmembers class android.support.v4.c.a.j$a { void <init>(android.support.v4.c.a.j$a,android.content.res.Resources); }
-keepclassmembers class android.support.v4.c.a.j$a { boolean a(); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void <init>(org.apache.commons.logging.Log); }
-keepclassmembers class android.support.v4.c.a.j$a { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class org.apache.http.impl.conn.Wire { boolean enabled(); }
-keepclassmembers class android.animation.LayoutTransition$6 { void <init>(android.animation.LayoutTransition,android.view.View,float,android.view.ViewGroup); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { boolean isMarginRelative(); }
-keepclassmembers class android.view.InputEvent { void <init>(); }
-keepclassmembers class java.lang.Thread { long getId(); }
-keepclassmembers class java.lang.Thread { java.lang.String getName(); }
-keepclassmembers class java.lang.Thread { java.lang.ClassLoader getContextClassLoader(); }
-keepclassmembers class java.lang.Thread { int getPriority(); }
-keepclassmembers class android.app.SearchableInfo$1 { void <init>(); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$State getState(); }
-keepclassmembers class java.lang.Thread { java.lang.ThreadGroup getThreadGroup(); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler(); }
-keepclassmembers class android.support.v7.view.g$b { void <init>(android.support.v7.view.g,android.view.Menu); }
-keepclassmembers class android.view.InputEvent { void prepareForReuse(); }
-keepclassmembers class android.support.v7.view.g$b { char a(java.lang.String); }
-keepclassmembers class android.app.SearchableInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.view.g$b { android.support.v4.g.d a(android.support.v7.view.g$b); }
-keepclassmembers class android.view.InputEvent { int getSequenceNumber(); }
-keepclassmembers class java.lang.Thread { void join(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid$1 { void <init>(); }
-keepclassmembers class java.util.Hashtable$HashIterator { boolean hasNext(); }
-keepclassmembers class android.support.v7.view.g$b { void a(); }
-keepclassmembers class android.support.v7.view.g$b { void a(android.util.AttributeSet); }
-keepclassmembers class android.support.v7.view.g$b { void b(); }
-keepclassmembers class android.support.v7.widget.bb$1 { void onClick(android.view.View); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { boolean canApplyTheme(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService$1 { void <init>(com.shapps.mintubeapp.PlayerService); }
-keepclassmembers class android.database.MatrixCursor { void <init>(java.lang.String[]); }
-keepclassmembers class android.support.v7.view.g$b { boolean d(); }
-keepclassmembers class java.lang.Thread { void start(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.view.g$b { android.view.SubMenu c(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setColors(int[]); }
-keepclassmembers class android.system.StructPollfd { void <init>(); }
-keepclassmembers class android.view.RenderNodeAnimator$1 { void <init>(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setColorStateList(android.content.res.ColorStateList); }
-keepclassmembers class java.lang.Thread { void unpark(); }
-keepclassmembers class org.apache.http.impl.EnglishReasonPhraseCatalog { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadii(float[]); }
-keepclassmembers class android.graphics.SweepGradient { void <init>(float,float,int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void access$000(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager); }
-keepclassmembers class android.text.SpanSet { void <init>(java.lang.Class); }
-keepclassmembers class org.apache.http.conn.routing.RouteInfo$LayerType { void <init>(java.lang.String,int); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager,android.hardware.input.InputManager$1); }
-keepclassmembers class android.webkit.WebView$PrivateAccess { void <init>(android.webkit.WebView); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.g.a.a { void a(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class android.support.v4.g.a.a { int b(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.database.MatrixCursor { java.lang.String[] getColumnNames(); }
-keepclassmembers class android.support.v4.b.e$b { void <init>(); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object); }
-keepclassmembers class android.support.a.a.f$g { void <init>(android.graphics.drawable.Drawable$ConstantState); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.view.Choreographer$FrameDisplayEventReceiver { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class android.support.v7.widget.d$c { void <init>(android.support.v7.widget.d,android.support.v7.widget.d$e); }
-keepclassmembers class android.support.a.a.f$g { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.FontListParser$Family { void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String); }
-keepclassmembers class java.io.DataOutputStream { void flush(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { java.lang.String getAlgorithm(); }
-keepclassmembers class android.os.Message$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { void <init>(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { java.lang.String getAlgorithmName(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { byte[] getParameters(); }
-keepclassmembers class java.io.DataOutputStream { void writeChar(int); }
-keepclassmembers class java.io.DataOutputStream { void writeDouble(double); }
-keepclassmembers class java.io.DataOutputStream { void writeFloat(float); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void start(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { boolean canReverse(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void reverse(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void setBlocker(java.lang.Thread,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void stop(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void unpark(java.lang.Thread); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void park(java.lang.Object); }
-keepclassmembers class org.apache.http.HttpHost { java.lang.String getHostName(); }
-keepclassmembers class org.apache.http.HttpHost { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.http.HttpHost { int getPort(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void parkUntil(java.lang.Object,long); }
-keepclassmembers class java.io.DataOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String getValue(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String getName(); }
-keepclassmembers class org.apache.http.HttpHost { java.lang.String getSchemeName(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { void <init>(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setComment(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setExpiryDate(java.util.Date); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.util.Date getExpiryDate(); }
-keepclassmembers class org.apache.http.HttpHost { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String getDomain(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setDomain(java.lang.String); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.app.k$a { void <init>(android.support.v4.app.k); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String getPath(); }
-keepclassmembers class android.support.v4.app.k$a { android.view.View a(int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setPath(java.lang.String); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.app.k$a { void a(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { boolean isSecure(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setSecure(boolean); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { int[] getPorts(); }
-keepclassmembers class org.apache.http.HttpHost { int hashCode(); }
-keepclassmembers class android.support.v4.app.k$a { boolean a(android.support.v4.app.Fragment); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { int getVersion(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setVersion(int); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.String); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.app.k$a { void b(android.support.v4.app.Fragment); }
-keepclassmembers class android.widget.RemoteViews$Action { void <init>(); }
-keepclassmembers class android.support.v4.app.k$a { void c(); }
-keepclassmembers class android.support.v4.app.k$a { boolean d(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.app.k$a { int e(); }
-keepclassmembers class android.widget.RemoteViews$Action { void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.Selection$END { void <init>(); }
-keepclassmembers class android.text.Selection$END { void <init>(android.text.Selection$1); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$7 { void <init>(int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setAttribute(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$Action { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.ViewOverlay { android.view.ViewGroup getOverlayView(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { boolean containsAttribute(java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$Action { void <init>(android.widget.RemoteViews$1); }
-keepclassmembers class java.util.logging.LogManager$1 { void <init>(java.util.logging.LogManager); }
-keepclassmembers class java.util.logging.LogManager$1 { void run(); }
-keepclassmembers class android.view.ViewOverlay { boolean isEmpty(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.Formatter$CachedDecimalFormat { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$3 { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$3 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.text.FieldPosition { void <init>(int); }
-keepclassmembers class java.text.FieldPosition { void <init>(java.text.Format$Field); }
-keepclassmembers class java.text.FieldPosition { int getField(); }
-keepclassmembers class java.text.FieldPosition { int getEndIndex(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { java.util.List getMetadataList(); }
-keepclassmembers class java.text.FieldPosition { java.text.Format$Field getFieldAttribute(); }
-keepclassmembers class java.text.FieldPosition { void setBeginIndex(int); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean a(android.view.View); }
-keepclassmembers class java.text.FieldPosition { void setEndIndex(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void drawableStateChanged(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { android.view.View getTabContainer(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { void <init>(javax.net.ssl.KeyManagerFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController$1 { void <init>(com.android.internal.app.AlertController); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void jumpDrawablesToCurrentState(); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { void init(java.security.KeyStore,char[]); }
-keepclassmembers class android.support.a.a.e { android.content.res.TypedArray b(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class android.support.a.a.e { void <init>(); }
-keepclassmembers class android.app.AppGlobals { int getIntCoreSetting(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onFinishInflate(); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { javax.net.ssl.KeyManager[] getKeyManagers(); }
-keepclassmembers class android.support.a.a.e { void clearColorFilter(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.util.LinkSpec { void <init>(); }
-keepclassmembers class android.support.a.a.e { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.a.a.e { int getLayoutDirection(); }
-keepclassmembers class java.util.SimpleTimeZone { void <init>(int,java.lang.String); }
-keepclassmembers class android.support.a.a.e { int getMinimumHeight(); }
-keepclassmembers class android.support.a.a.e { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.a.a.e { int getMinimumWidth(); }
-keepclassmembers class android.support.a.a.e { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.support.a.a.e { int[] getState(); }
-keepclassmembers class android.support.a.a.e { void jumpToCurrentState(); }
-keepclassmembers class android.app.ActivityThread { android.app.Application currentApplication(); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.a.a.e { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.a.a.e { void setAutoMirrored(boolean); }
-keepclassmembers class android.support.a.a.e { boolean onLevelChange(int); }
-keepclassmembers class android.support.a.a.e { void setChangingConfigurations(int); }
-keepclassmembers class java.lang.NullPointerException { void <init>(); }
-keepclassmembers class java.lang.NullPointerException { void <init>(java.lang.String); }
-keepclassmembers class android.os.Bundle$1 { void <init>(); }
-keepclassmembers class java.util.SimpleTimeZone { int getDSTSavings(); }
-keepclassmembers class android.support.a.a.e { void setHotspot(float,float); }
-keepclassmembers class android.support.a.a.e { boolean setState(int[]); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(); }
-keepclassmembers class android.support.a.a.e { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$2$1 { void <init>(com.shapps.mintubeapp.MainActivity$2,android.content.Context,android.database.Cursor,boolean); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.graphics.drawable.RotateDrawable,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.AbsListView { void initAbsListView(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void setVisibility(int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { boolean canApplyTheme(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void <init>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { boolean canConstantState(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEvent(android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class android.widget.AbsListView { boolean isItemChecked(int); }
-keepclassmembers class java.util.SimpleTimeZone { int getRawOffset(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[],byte[],org.apache.harmony.security.x509.OtherName$1); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { java.lang.String access$100(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.os.StrictMode$7 { void <init>(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { byte[] access$200(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class android.os.StrictMode$7 { void finish(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$3 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View$AccessibilityDelegate { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.widget.AbsListView { void clearChoices(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class libcore.io.MemoryMappedFile { void <init>(long,long); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.net.http.AndroidHttpClient { android.net.http.AndroidHttpClient newInstance(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getOpacity(); }
-keepclassmembers class java.util.SimpleTimeZone { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean onLevelChange(int); }
-keepclassmembers class libcore.io.MemoryMappedFile { long size(); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean); }
-keepclassmembers class android.net.http.AndroidHttpClient { org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.lang.OutOfMemoryError { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.support.v4.e.e { int a(java.util.Locale); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.widget.AbsListView { int getChoiceMode(); }
-keepclassmembers class com.android.volley.a.a { void <init>(com.android.volley.a.f,com.android.volley.a.b); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources,android.graphics.drawable.ClipDrawable$1); }
-keepclassmembers class com.android.volley.a.c { void <init>(java.io.File); }
-keepclassmembers class java.util.EmptyStackException { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollStyle(int); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerAlwaysVisibleUiThread(boolean); }
-keepclassmembers class android.support.design.widget.f$a { void <init>(android.support.design.widget.f); }
-keepclassmembers class android.widget.AbsListView { boolean isOwnerThread(); }
-keepclassmembers class android.support.design.widget.f$a { void <init>(android.support.design.widget.f,android.support.design.widget.f$1); }
-keepclassmembers class android.widget.AbsListView { boolean isFastScrollEnabled(); }
-keepclassmembers class android.widget.AbsListView { int getVerticalScrollbarWidth(); }
-keepclassmembers class java.util.SimpleTimeZone { boolean useDaylightTime(); }
-keepclassmembers class java.security.InvalidParameterException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void setSmoothScrollbarEnabled(boolean); }
-keepclassmembers class android.widget.AbsListView { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class android.widget.AbsListView { void invokeOnItemScrollListener(); }
-keepclassmembers class android.widget.AbsListView { void setOnScrollListener(android.widget.AbsListView$OnScrollListener); }
-keepclassmembers class android.widget.AbsListView { void sendAccessibilityEvent(int); }
-keepclassmembers class android.support.v4.widget.a$a { void <init>(); }
-keepclassmembers class android.net.http.AndroidHttpClient { java.lang.String access$500(org.apache.http.client.methods.HttpUriRequest,boolean); }
-keepclassmembers class android.net.http.AndroidHttpClient { android.net.http.AndroidHttpClient$LoggingConfiguration access$300(android.net.http.AndroidHttpClient); }
-keepclassmembers class android.widget.AbsListView { int getSelectionModeForAccessibility(); }
-keepclassmembers class android.support.v4.widget.a$a { void a(float,float); }
-keepclassmembers class android.support.v4.widget.a$a { void a(); }
-keepclassmembers class android.widget.AbsListView { void setScrollingCacheEnabled(boolean); }
-keepclassmembers class android.support.v4.widget.a$a { void a(int); }
-keepclassmembers class android.widget.AbsListView { void setTextFilterEnabled(boolean); }
-keepclassmembers class android.widget.AbsListView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.a$a { void b(int); }
-keepclassmembers class android.widget.AbsListView { void useDefaultSelector(); }
-keepclassmembers class android.widget.AbsListView { void setStackFromBottom(boolean); }
-keepclassmembers class android.widget.AbsListView { void requestLayoutIfNecessary(); }
-keepclassmembers class android.support.v4.widget.a$a { int g(); }
-keepclassmembers class android.support.v4.widget.a$a { int h(); }
-keepclassmembers class android.app.ActivityTransitionState { void <init>(); }
-keepclassmembers class android.support.v4.g.c$1 { void <init>(android.support.v4.g.c$a); }
-keepclassmembers class android.support.v4.app.aq { void a(); }
-keepclassmembers class android.support.v4.app.aq { android.support.v4.app.aq a(android.content.Intent); }
-keepclassmembers class android.support.v4.widget.q$e { void a(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class android.support.v4.widget.q$e { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class java.io.NotSerializableException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityTransitionState { void clear(); }
-keepclassmembers class android.widget.AbsListView { void resetList(); }
-keepclassmembers class android.widget.AbsListView { void requestLayout(); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.ab$j { void <init>(); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v7.a.b$c { void <init>(android.content.Context,int,int,java.lang.CharSequence[]); }
-keepclassmembers class android.support.v4.g.e { int a(int,int); }
-keepclassmembers class android.support.v4.g.e { void a(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class java.net.Socks4Message { int getCommandOrResult(); }
-keepclassmembers class android.text.SpannedString { int hashCode(); }
-keepclassmembers class android.text.SpannedString { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.Socks4Message { int getPort(); }
-keepclassmembers class android.text.SpannedString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.text.SpannedString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class java.net.Socks4Message { void setIP(byte[]); }
-keepclassmembers class java.net.Socks4Message { int getIP(); }
-keepclassmembers class android.text.SpannedString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class java.net.Socks4Message { void setUserId(java.lang.String); }
-keepclassmembers class android.text.SpannedString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.text.SpannedString { int getSpanStart(java.lang.Object); }
-keepclassmembers class org.apache.http.protocol.RequestTargetHost { void <init>(); }
-keepclassmembers class android.support.v4.g.k$a { void <init>(android.support.v4.g.m); }
-keepclassmembers class java.net.Socks4Message { byte[] getBytes(); }
-keepclassmembers class android.support.v4.b.h { int a(android.content.Context,java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.support.v4.b.h { int a(android.content.Context,java.lang.String); }
-keepclassmembers class android.content.res.CompatibilityInfo$1 { void <init>(); }
-keepclassmembers class android.widget.AbsListView { boolean setFrame(int,int,int,int); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.File); }
-keepclassmembers class android.widget.AbsListView { void layoutChildren(); }
-keepclassmembers class android.widget.AbsListView { void updateScrollIndicators(); }
-keepclassmembers class java.text.Normalizer$Form { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollUp(); }
-keepclassmembers class android.os.AsyncTask$AsyncTaskResult { void <init>(android.os.AsyncTask,java.lang.Object[]); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingTop(); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingBottom(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { org.apache.http.ProtocolVersion getProtocolVersion(); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingLeft(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { java.net.URI getURI(); }
-keepclassmembers class android.system.StructLinger { void <init>(int,int); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingRight(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { void setURI(java.net.URI); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int,com.android.i18n.phonenumbers.PhoneNumberUtil$1); }
-keepclassmembers class java.io.FileOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.support.v4.b.a.a { android.graphics.drawable.Drawable a(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.app.aq$c { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void positionSelectorLikeFocus(int,android.view.View); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$2 { void <init>(com.shapps.mintubeapp.MainActivity); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.graphics.RectF { void <init>(); }
-keepclassmembers class android.graphics.RectF { void <init>(float,float,float,float); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.io.ObjectStreamClass$1 { void <init>(); }
-keepclassmembers class android.graphics.RectF { void <init>(android.graphics.RectF); }
-keepclassmembers class com.android.org.conscrypt.FileClientSessionCache$CacheFile { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { boolean touchModeDrawsInPressedState(); }
-keepclassmembers class java.io.ObjectStreamClass$1 { int compare(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void <init>(android.graphics.drawable.RippleBackground,int); }
-keepclassmembers class android.widget.AbsListView { boolean shouldShowSelector(); }
-keepclassmembers class android.preference.PreferenceManager { android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context); }
-keepclassmembers class android.widget.AbsListView { void drawSelector(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.support.v4.e.a$b { void <init>(); }
-keepclassmembers class android.support.v4.e.a$b { java.lang.String a(java.util.Locale); }
-keepclassmembers class java.nio.BufferOverflowException { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl { boolean isInTouchMode(); }
-keepclassmembers class android.widget.AbsListView { android.graphics.drawable.Drawable getSelector(); }
-keepclassmembers class java.lang.IllegalMonitorStateException { void <init>(); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.widget.AbsListView { void updateSelectorState(); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Integer); }
-keepclassmembers class android.widget.AbsListView { void drawableStateChanged(); }
-keepclassmembers class android.graphics.RectF { void setEmpty(); }
-keepclassmembers class android.util.XmlPullAttributes { void <init>(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeCount(); }
-keepclassmembers class android.graphics.RectF { void set(android.graphics.RectF); }
-keepclassmembers class android.graphics.RectF { void set(float,float,float,float); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanStart(android.text.Spannable); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getAttributeValue(int); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeNameResource(int); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanEnd(android.text.Spannable); }
-keepclassmembers class android.widget.AbsListView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.widget.AbsListView { void onDetachedFromWindow(); }
-keepclassmembers class android.util.XmlPullAttributes { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeResourceValue(int,int); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeIntValue(int,int); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getCursorCapsMode(int); }
-keepclassmembers class android.util.XmlPullAttributes { float getAttributeFloatValue(int,float); }
-keepclassmembers class android.widget.AbsListView { void onCancelPendingInputEvents(); }
-keepclassmembers class android.widget.AbsListView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.support.v4.app.ab$o { void <init>(); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.AbsListView { void dispatchSetPressed(boolean); }
-keepclassmembers class android.widget.AbsListView { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.graphics.RectF { void union(android.graphics.RectF); }
-keepclassmembers class android.ddm.DdmHandleHello { void <init>(); }
-keepclassmembers class android.database.DataSetObserver { void <init>(); }
-keepclassmembers class org.apache.http.impl.client.AbstractAuthenticationHandler { void <init>(); }
-keepclassmembers class com.android.volley.a.b$1 { void <init>(); }
-keepclassmembers class org.apache.http.impl.client.AbstractAuthenticationHandler { java.util.List getAuthPreferences(); }
-keepclassmembers class java.lang.RealToString$1 { void <init>(); }
-keepclassmembers class java.lang.RealToString$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.http.ParseException { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(int); }
-keepclassmembers class android.transition.ChangeBounds { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.transition.ChangeBounds { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.support.v7.a.b$4 { void <init>(android.support.v7.a.b,android.view.View,android.view.View); }
-keepclassmembers class android.support.v4.f.d { void a(); }
-keepclassmembers class android.widget.AbsListView { void onTouchModeChanged(boolean); }
-keepclassmembers class android.support.v4.f.d { void flush(); }
-keepclassmembers class android.support.v4.widget.u { void a(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getChangingConfigurations(); }
-keepclassmembers class com.android.volley.VolleyError { void <init>(); }
-keepclassmembers class com.android.volley.VolleyError { void <init>(com.android.volley.g); }
-keepclassmembers class com.android.volley.VolleyError { void <init>(java.lang.Throwable); }
-keepclassmembers class com.android.volley.VolleyError { void a(long); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void invalidateCache(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$000(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$002(android.graphics.drawable.LayerDrawable$LayerState,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$102(android.graphics.drawable.LayerDrawable$LayerState,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$100(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.support.v4.app.ab$h { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition$5 { void <init>(android.animation.LayoutTransition,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class javax.net.ssl.HandshakeCompletedEvent { void <init>(javax.net.ssl.SSLSocket,javax.net.ssl.SSLSession); }
-keepclassmembers class android.view.ViewGroup$1 { void <init>(android.view.ViewGroup); }
-keepclassmembers class android.view.View$9 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.view.GLES20Canvas$CanvasFinalizer { void <init>(long); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources,android.graphics.drawable.LevelListDrawable$1); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void clearMutated(); }
-keepclassmembers class android.widget.AbsListView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getGeneralDesc(); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { void <init>(javax.net.ssl.SSLSocketFactory); }
-keepclassmembers class java.net.URL { void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { void <init>(); }
-keepclassmembers class java.net.URL { int hashCode(); }
-keepclassmembers class android.widget.AbsListView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator$8 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator$8 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.AbsListView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.widget.AbsListView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.widget.AbsListView { void recycleVelocityTracker(); }
-keepclassmembers class android.view.DragEvent { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.DragEvent { void init(int,float,float,android.content.ClipDescription,android.content.ClipData,java.lang.Object,boolean); }
-keepclassmembers class java.net.URL { java.io.InputStream openStream(); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(); }
-keepclassmembers class com.shapps.mintubeapp.CustomVolley.AppController { void <init>(); }
-keepclassmembers class com.shapps.mintubeapp.CustomVolley.AppController { void a(com.android.volley.h); }
-keepclassmembers class com.shapps.mintubeapp.CustomVolley.AppController { com.android.volley.i b(); }
-keepclassmembers class com.shapps.mintubeapp.CustomVolley.AppController { void onCreate(); }
-keepclassmembers class java.net.URL { java.lang.String toString(); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(android.view.DragEvent); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { void <init>(org.apache.http.conn.ssl.SSLSocketFactory$1); }
-keepclassmembers class android.view.DragEvent { int getAction(); }
-keepclassmembers class android.view.DragEvent { float getY(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setId(java.lang.String); }
-keepclassmembers class android.view.DragEvent { float getX(); }
-keepclassmembers class android.view.DragEvent { android.content.ClipData getClipData(); }
-keepclassmembers class android.view.DragEvent { java.lang.Object getLocalState(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int getCountryCode(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCountryCode(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setInternationalPrefix(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getInternationalPrefix(); }
-keepclassmembers class android.widget.AbsListView { void reportScrollStateChange(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredInternationalPrefix(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefix(java.lang.String); }
-keepclassmembers class java.net.URL { java.lang.String getAuthority(); }
-keepclassmembers class java.net.URL { java.lang.String getProtocol(); }
-keepclassmembers class java.net.URL { int getEffectivePort(); }
-keepclassmembers class java.net.URL { java.lang.String getUserInfo(); }
-keepclassmembers class java.net.URL { java.lang.String getHost(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredExtnPrefix(java.lang.String); }
-keepclassmembers class java.net.URL { java.lang.String getFile(); }
-keepclassmembers class java.net.URL { int getPort(); }
-keepclassmembers class java.net.URL { java.lang.String getPath(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixForParsing(); }
-keepclassmembers class java.net.URL { java.lang.String getRef(); }
-keepclassmembers class java.net.URL { java.lang.String getQuery(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixTransformRule(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixForParsing(java.lang.String); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixTransformRule(); }
-keepclassmembers class android.widget.AbsListView { void createScrollingCache(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSameMobileAndFixedLinePattern(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int numberFormatSize(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int intlNumberFormatSize(); }
-keepclassmembers class android.widget.AbsListView { void scrollListBy(int); }
-keepclassmembers class android.widget.RemoteViews$ReflectionActionWithoutParams { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMainCountryForCode(boolean); }
-keepclassmembers class android.widget.RemoteViews$ReflectionActionWithoutParams { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.TreeMap$Bound$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.widget.ac { void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.WriteAbortedException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingDigits(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingZeroPossible(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobileNumberPortableRegion(boolean); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.Throwable getCause(); }
-keepclassmembers class java.net.ProtocolException { void <init>(java.lang.String); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.io.File); }
-keepclassmembers class android.support.v7.widget.FitWindowsFrameLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { void <init>(android.widget.PopupWindow,android.content.Context); }
-keepclassmembers class android.text.Layout$Alignment { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.view.menu.h$1 { void <init>(android.support.v7.view.menu.h); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String getName(); }
-keepclassmembers class android.widget.AbsListView { void hideSelector(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String toString(); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.PackedObjectVector { void <init>(int); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class loadClassBinaryName(java.lang.String,java.lang.ClassLoader,java.util.List); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClass(java.lang.String,java.lang.ClassLoader,long,java.util.List); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelectionIfNeeded(); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { void sendAccessibilityEvent(int); }
-keepclassmembers class android.support.v4.app.p$a$2 { void run(); }
-keepclassmembers class android.support.v4.app.p$a$2 { void <init>(android.support.v4.app.p$a); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { boolean hasMoreElements(); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { void <init>(java.util.Enumeration,java.util.Enumeration); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { java.lang.Object nextElement(); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { java.lang.Object getState(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void setState(java.lang.Object); }
-keepclassmembers class java.util.Locale { java.lang.String getCountry(); }
-keepclassmembers class android.widget.AbsListView { void dismissPopup(); }
-keepclassmembers class android.app.Dialog { android.content.Context getContext(); }
-keepclassmembers class android.app.Dialog { void sendShowMessage(); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.app.Dialog { void dispatchOnCreate(android.os.Bundle); }
-keepclassmembers class android.app.Dialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet); }
-keepclassmembers class android.app.Dialog { void onStart(); }
-keepclassmembers class android.util.Base64 { byte[] encode(byte[],int); }
-keepclassmembers class android.app.Dialog { android.view.View findViewById(int); }
-keepclassmembers class android.app.Dialog { void setContentView(int); }
-keepclassmembers class android.app.Dialog { android.view.Window getWindow(); }
-keepclassmembers class java.util.Locale { java.lang.String getLanguage(); }
-keepclassmembers class android.widget.AbsListView { boolean isInFilterMode(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.Locale { java.lang.String getScript(); }
-keepclassmembers class java.util.Locale { java.lang.String getVariant(); }
-keepclassmembers class android.support.v4.g.i$c { void <init>(); }
-keepclassmembers class java.util.Locale { java.lang.String toLanguageTag(); }
-keepclassmembers class android.support.v4.g.i$c { void a(android.view.LayoutInflater,android.support.v4.g.m); }
-keepclassmembers class libcore.io.BlockGuardOs { void <init>(libcore.io.Os); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void shutdownEntry(); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskWriteViolation { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress); }
-keepclassmembers class android.graphics.CanvasProperty { long getNativeContainer(); }
-keepclassmembers class libcore.io.BlockGuardOs { void close(java.io.FileDescriptor); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.lang.Object next(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { boolean hasNext(); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean access(java.lang.String,int); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean isLingerSocket(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.BlockGuardOs { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.view.KeyEvent$1 { void <init>(); }
-keepclassmembers class libcore.io.BlockGuardOs { long lseek(java.io.FileDescriptor,long,int); }
-keepclassmembers class android.widget.AbsListView { void onFilterComplete(int); }
-keepclassmembers class android.widget.AbsListView { void onGlobalLayout(); }
-keepclassmembers class android.support.v7.a.q$1 { void <init>(android.support.v7.a.q); }
-keepclassmembers class libcore.io.BlockGuardOs { void mkdir(java.lang.String,int); }
-keepclassmembers class libcore.io.BlockGuardOs { int poll(android.system.StructPollfd[],int); }
-keepclassmembers class java.util.Locale { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView { int getSolidColor(); }
-keepclassmembers class android.widget.AbsListView { void setTranscriptMode(int); }
-keepclassmembers class android.widget.AbsListView { int getCacheColorHint(); }
-keepclassmembers class android.widget.AbsListView { boolean onRemoteAdapterConnected(); }
-keepclassmembers class libcore.io.BlockGuardOs { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class java.text.BreakIterator { void <init>(libcore.icu.NativeBreakIterator); }
-keepclassmembers class android.widget.AbsListView { void setVisibleRangeHint(int,int); }
-keepclassmembers class android.widget.AbsListView { void onRemoteAdapterDisconnected(); }
-keepclassmembers class android.util.LruCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.io.BlockGuardOs { int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class libcore.io.BlockGuardOs { void remove(java.lang.String); }
-keepclassmembers class android.app.Dialog { void setCancelable(boolean); }
-keepclassmembers class android.text.AutoText { void <init>(android.content.res.Resources); }
-keepclassmembers class android.app.Dialog { void setCanceledOnTouchOutside(boolean); }
-keepclassmembers class android.util.LruCache { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.LruCache { void evictAll(); }
-keepclassmembers class com.android.internal.app.AlertController$2 { void <init>(com.android.internal.app.AlertController,android.view.View); }
-keepclassmembers class android.widget.AbsListView { int access$500(android.widget.AbsListView); }
-keepclassmembers class android.text.AutoText { java.lang.String get(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class android.widget.AbsListView { int access$400(android.widget.AbsListView); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor socket(int,int,int); }
-keepclassmembers class libcore.io.BlockGuardOs { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.widget.AbsListView { java.lang.Runnable access$1202(android.widget.AbsListView,java.lang.Runnable); }
-keepclassmembers class android.widget.AbsListView { boolean access$1300(android.widget.AbsListView); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$1900(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$1902(android.widget.AbsListView,android.os.StrictMode$Span); }
-keepclassmembers class android.widget.AbsListView { int access$2000(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { int access$2100(android.widget.AbsListView); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$1 { void <init>(com.shapps.mintubeapp.MainActivity); }
-keepclassmembers class java.util.Locale { boolean isValidBcp47Alphanum(java.lang.String,int,int); }
-keepclassmembers class android.app.Dialog { void setOnKeyListener(android.content.DialogInterface$OnKeyListener); }
-keepclassmembers class android.widget.AbsListView { void access$2600(android.widget.AbsListView); }
-keepclassmembers class libcore.io.BlockGuardOs { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECPointContext { void <init>(com.android.org.conscrypt.OpenSSLECGroupContext,long); }
-keepclassmembers class java.util.Collections$SynchronizedMap { void <init>(java.util.Map); }
-keepclassmembers class android.support.v4.app.j { void <init>(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECPointContext { long getContext(); }
-keepclassmembers class java.lang.CloneNotSupportedException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { android.widget.FastScroller access$4100(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { void access$4200(android.widget.AbsListView,android.view.View,boolean); }
-keepclassmembers class android.support.v4.app.ab$k { void <init>(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.os.ResultReceiver$1 { void <init>(); }
-keepclassmembers class java.io.BufferedInputStream { void close(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue$Node { void <init>(java.lang.Object); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.conn.ConnectTimeoutException { void <init>(java.lang.String); }
-keepclassmembers class java.io.BufferedInputStream { void mark(int); }
-keepclassmembers class android.widget.Filter$RequestHandler { void <init>(android.widget.Filter,android.os.Looper); }
-keepclassmembers class java.io.BufferedInputStream { boolean markSupported(); }
-keepclassmembers class android.text.Selection$START { void <init>(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.content.Context getContext(); }
-keepclassmembers class android.text.Selection$START { void <init>(android.text.Selection$1); }
-keepclassmembers class android.support.v7.widget.ao { void B(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDefaultNavigationContentDescription(int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { void <init>(java.util.AbstractList); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowCallback(android.view.Window$Callback); }
-keepclassmembers class org.apache.http.client.utils.URIUtils { java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost); }
-keepclassmembers class android.support.v7.widget.ao { void C(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ao { boolean D(); }
-keepclassmembers class android.support.v4.e.d { int a(java.util.Locale); }
-keepclassmembers class java.util.Locale { boolean access$000(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.ao { void E(); }
-keepclassmembers class android.support.v4.g.af { boolean E(android.view.View); }
-keepclassmembers class java.util.Locale { boolean access$200(java.lang.String); }
-keepclassmembers class android.support.v4.g.af { float D(android.view.View); }
-keepclassmembers class java.util.Locale { java.lang.String access$400(java.lang.String); }
-keepclassmembers class java.util.Locale { boolean access$300(java.lang.String); }
-keepclassmembers class android.support.v4.g.af { int a(int,int); }
-keepclassmembers class android.support.v4.g.af { int a(int,int,int); }
-keepclassmembers class android.support.v4.g.af { int a(android.view.View); }
-keepclassmembers class android.support.v4.g.af { void a(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.g.af { void a(android.view.View,int,int); }
-keepclassmembers class android.support.v7.a.a { void <init>(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.g.af { void a(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class org.json.JSONArray { org.json.JSONArray put(java.lang.Object); }
-keepclassmembers class android.support.v4.g.af { void a(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.logging.LogRecord { java.util.logging.Level getLevel(); }
-keepclassmembers class android.support.v4.g.af { void a(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class android.support.v4.g.af { void a(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.support.v4.g.af { void a(android.view.View,android.support.v4.g.aa); }
-keepclassmembers class java.util.logging.LogRecord { void setLoggerName(java.lang.String); }
-keepclassmembers class android.support.v4.g.af { void b(android.view.View,float); }
-keepclassmembers class android.support.v7.a.a { void h(); }
-keepclassmembers class android.support.v4.g.af { void b(android.view.View,boolean); }
-keepclassmembers class android.support.v7.a.a { boolean e(); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundle(java.util.ResourceBundle); }
-keepclassmembers class android.support.v4.g.af { boolean b(android.view.View,int); }
-keepclassmembers class android.support.v4.g.af { void d(android.view.View); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundleName(java.lang.String); }
-keepclassmembers class org.json.JSONArray { boolean isNull(int); }
-keepclassmembers class java.util.logging.LogRecord { void setSourceClassName(java.lang.String); }
-keepclassmembers class android.support.v4.g.af { void e(android.view.View,float); }
-keepclassmembers class android.support.v4.g.af { void d(android.view.View,float); }
-keepclassmembers class android.support.v4.g.af { void f(android.view.View,float); }
-keepclassmembers class android.support.v4.g.af { int g(android.view.View); }
-keepclassmembers class java.util.logging.LogRecord { void setSourceMethodName(java.lang.String); }
-keepclassmembers class android.support.v4.g.af { int h(android.view.View); }
-keepclassmembers class java.util.logging.LogRecord { void setThrown(java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.ao { void G(); }
-keepclassmembers class org.json.JSONArray { java.lang.Object opt(int); }
-keepclassmembers class android.support.v4.g.af { int i(android.view.View); }
-keepclassmembers class android.support.v4.g.af { int j(android.view.View); }
-keepclassmembers class android.support.v4.g.af { int o(android.view.View); }
-keepclassmembers class android.support.v4.g.af { int p(android.view.View); }
-keepclassmembers class android.support.v4.g.af { float n(android.view.View); }
-keepclassmembers class android.support.v4.app.k { void a(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.k { java.lang.Object c(); }
-keepclassmembers class android.support.v4.g.af { float r(android.view.View); }
-keepclassmembers class android.support.v4.app.k { void a_(); }
-keepclassmembers class android.support.v4.g.af { int s(android.view.View); }
-keepclassmembers class android.support.v4.g.af { void t(android.view.View); }
-keepclassmembers class android.support.v4.g.af { void v(android.view.View); }
-keepclassmembers class android.support.v4.g.af { boolean u(android.view.View); }
-keepclassmembers class android.support.v4.g.af { boolean w(android.view.View); }
-keepclassmembers class android.support.v4.g.af { android.content.res.ColorStateList y(android.view.View); }
-keepclassmembers class android.support.v4.g.af { android.graphics.PorterDuff$Mode z(android.view.View); }
-keepclassmembers class java.security.cert.Certificate { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean isHardwareAnimating(); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void <init>(byte[],org.apache.harmony.security.x509.GeneralNames,java.math.BigInteger); }
-keepclassmembers class android.support.v4.app.k { void onBackPressed(); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { long toMillis(long); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { java.lang.String getName(); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { java.lang.String getValue(); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config parse(java.io.InputStream); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(int); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class com.shapps.mintubeapp.SettingsActivity$1 { void <init>(com.shapps.mintubeapp.SettingsActivity); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v4.app.k { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.shapps.mintubeapp.SettingsActivity$1 { void onCheckedChanged(android.widget.CompoundButton,boolean); }
-keepclassmembers class android.support.v4.app.k { android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.k { void onLowMemory(); }
-keepclassmembers class android.support.v4.app.k { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.widget.Toolbar access$000(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { java.lang.CharSequence access$100(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class java.math.BigInteger { void <init>(int,int,int[]); }
-keepclassmembers class android.support.design.widget.p$a { void <init>(int[],android.view.animation.Animation); }
-keepclassmembers class android.support.design.widget.p$a { void <init>(int[],android.view.animation.Animation,android.support.design.widget.p$1); }
-keepclassmembers class android.graphics.drawable.Ripple { void move(float,float); }
-keepclassmembers class org.json.JSONArray { void writeTo(org.json.JSONStringer); }
-keepclassmembers class java.util.TreeMap$KeySet { void <init>(java.util.TreeMap); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { boolean updatePath(); }
-keepclassmembers class java.util.TreeMap$KeySet { int size(); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void <init>(android.widget.RemoteViews,int,java.lang.String,android.graphics.Bitmap); }
-keepclassmembers class org.json.JSONArray { int hashCode(); }
-keepclassmembers class android.net.TrafficStats { void setThreadStatsTag(int); }
-keepclassmembers class libcore.io.HeapBufferIterator { void <init>(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.Ripple { void createPendingHardwareExit(int,int); }
-keepclassmembers class libcore.io.HeapBufferIterator { void seek(int); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void stopAnimation(); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void access$400(android.widget.Editor$CorrectionHighlighter,boolean); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.support.v4.app.k { void onStateNotSaved(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler { void <init>(); }
-keepclassmembers class android.support.v4.app.af { android.app.Notification a(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer); }
-keepclassmembers class java.math.BigInteger { void setBigInt(java.math.BigInt); }
-keepclassmembers class org.apache.http.impl.client.DefaultUserTokenHandler { void <init>(); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer,boolean); }
-keepclassmembers class org.apache.http.impl.client.DefaultUserTokenHandler { java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState); }
-keepclassmembers class android.graphics.drawable.Ripple { void jump(); }
-keepclassmembers class java.math.BigInteger { byte[] toByteArray(); }
-keepclassmembers class java.io.PrintWriter { void flush(); }
-keepclassmembers class com.shapps.mintubeapp.FullscreenWebPlayer { void <init>(); }
-keepclassmembers class android.graphics.drawable.Ripple { void endSoftwareAnimations(); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void <init>(); }
-keepclassmembers class android.view.MotionEvent$1 { void <init>(); }
-keepclassmembers class java.math.BigInteger { int signum(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeftOneBit(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftRight(int); }
-keepclassmembers class com.shapps.mintubeapp.FullscreenWebPlayer { void onPause(); }
-keepclassmembers class java.io.PrintWriter { void print(int); }
-keepclassmembers class java.math.BigInteger { int bitLength(); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancel(); }
-keepclassmembers class java.io.PrintWriter { void print(boolean); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancelSoftwareAnimations(); }
-keepclassmembers class java.io.PrintWriter { void println(); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { boolean isOpen(); }
-keepclassmembers class android.support.v4.g.i$b { void <init>(); }
-keepclassmembers class android.support.v4.g.i$b { android.support.v4.g.m a(android.view.LayoutInflater); }
-keepclassmembers class java.lang.AbstractStringBuilder { char charAt(int); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { java.net.InetAddress getRemoteAddress(); }
-keepclassmembers class android.support.v4.g.i$b { void a(android.view.LayoutInflater,android.support.v4.g.m); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { int getRemotePort(); }
-keepclassmembers class android.graphics.drawable.Ripple { void removeSelf(); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationMember$DefaultValues { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void setSocketTimeout(int); }
-keepclassmembers class android.graphics.drawable.Ripple { void invalidateSelf(); }
-keepclassmembers class android.graphics.drawable.Ripple { void access$100(android.graphics.drawable.Ripple); }
-keepclassmembers class java.io.PrintWriter { void println(boolean); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void shutdown(); }
-keepclassmembers class java.io.PrintWriter { void setError(); }
-keepclassmembers class java.io.PrintWriter { void write(char[]); }
-keepclassmembers class java.util.Dictionary { void <init>(); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void close(); }
-keepclassmembers class java.io.PrintWriter { void write(char[],int,int); }
-keepclassmembers class java.math.BigInteger { double doubleValue(); }
-keepclassmembers class java.math.BigInteger { int compareTo(java.math.BigInteger); }
-keepclassmembers class android.support.v7.widget.ao { void a(android.support.v7.widget.ao$v,android.support.v7.widget.ao$e$c); }
-keepclassmembers class android.view.View$13 { void <init>(java.lang.String); }
-keepclassmembers class java.io.PrintWriter { void doWrite(char[],int,int); }
-keepclassmembers class android.animation.RectEvaluator { void <init>(); }
-keepclassmembers class android.view.View$13 { void setValue(android.view.View,float); }
-keepclassmembers class android.view.View$13 { java.lang.Float get(android.view.View); }
-keepclassmembers class java.io.PrintWriter { void write(java.lang.String); }
-keepclassmembers class java.math.BigInteger { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ao { void a(android.support.v7.widget.ao$v,android.support.v7.widget.ao$v,android.support.v7.widget.ao$e$c,android.support.v7.widget.ao$e$c,boolean,boolean); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getRealDisplay(int); }
-keepclassmembers class android.widget.Editor$HandleView$1 { void <init>(android.widget.Editor$HandleView); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(android.graphics.drawable.VectorDrawable$VClipPath); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(); }
-keepclassmembers class android.app.Notification$Action$Builder { android.app.Notification$Action$Builder addExtras(android.os.Bundle); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketFactoryImpl { void <init>(com.android.org.conscrypt.SSLParametersImpl); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { boolean isClipPath(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.io.PrintWriter { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class java.lang.AbstractStringBuilder { int length(); }
-keepclassmembers class libcore.icu.NativePluralRules { void <init>(long); }
-keepclassmembers class android.support.v7.widget.ao { void b(android.support.v7.widget.ao$v); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class android.animation.PathKeyframes$2 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class java.util.HashMap$Values { void <init>(java.util.HashMap); }
-keepclassmembers class java.util.HashMap$Values { java.util.Iterator iterator(); }
-keepclassmembers class java.util.HashMap$Values { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.support.v7.view.menu.e$a { void <init>(android.support.v7.view.menu.e); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.ao { void i(int,int); }
-keepclassmembers class android.support.v7.view.menu.e$a { void notifyDataSetChanged(); }
-keepclassmembers class android.support.v4.widget.q$c { void <init>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.support.v4.widget.q$c { void a(android.widget.PopupWindow,int); }
-keepclassmembers class android.support.v7.widget.ao { void setScrollState(int); }
-keepclassmembers class android.support.v4.widget.q$c { void a(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class android.support.v4.widget.q$c { void a(android.widget.PopupWindow,boolean); }
-keepclassmembers class org.apache.http.util.LangUtils { int hashCode(int,boolean); }
-keepclassmembers class com.android.internal.app.AlertController$4 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class org.apache.http.util.LangUtils { int hashCode(int,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ao { void v(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledScrollBarSize(); }
-keepclassmembers class org.apache.http.util.LangUtils { boolean equals(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ao { void x(); }
-keepclassmembers class android.support.v7.widget.ao { void y(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledTouchSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapTouchSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledFadingEdgeLength(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapSlop(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void init(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMinimumFlingVelocity(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMaximumFlingVelocity(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMaximumDrawingCacheSize(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setPropertyName(java.lang.String); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverscrollDistance(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setProperty(android.util.Property); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverflingDistance(); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getPropertyName(); }
-keepclassmembers class android.text.TextLine { float metrics(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object getAnimatedValue(); }
-keepclassmembers class android.view.ViewConfiguration { boolean hasPermanentMenuKey(); }
-keepclassmembers class android.view.ViewConfiguration { boolean isFadingMarqueeEnabled(); }
-keepclassmembers class java.net.ConnectException { void <init>(java.lang.String); }
-keepclassmembers class java.net.ConnectException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.ResourceBundle$MissingBundle { void <init>(); }
-keepclassmembers class android.support.v4.g.af$l { void a(android.view.View,int,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class android.support.v4.g.af$l { void <init>(); }
-keepclassmembers class android.support.v4.c.a.a$e { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar$b { void <init>(android.support.v7.a.a$a); }
-keepclassmembers class android.support.v7.widget.Toolbar$b { void <init>(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Time { void <init>(int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class android.support.v4.c.a.a$e { int d(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.Toolbar$b { void <init>(android.support.v7.widget.Toolbar$b); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$200(java.lang.Object,long,int); }
-keepclassmembers class android.support.v7.widget.Toolbar$b { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$300(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar$b { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar$b { void a(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$400(java.lang.Object,long,float); }
-keepclassmembers class android.support.v4.g.s$a { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$500(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v4.g.s$a { int a(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v4.g.s$a { int b(android.view.MotionEvent); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$1 { void <init>(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.support.v4.g.s$a { float e(android.view.MotionEvent,int); }
-keepclassmembers class org.apache.http.ProtocolException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.ProtocolException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getModifiers(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.text.TextLine { float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getDexMethodIndex(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getAccessFlags(); }
-keepclassmembers class android.support.v7.widget.ao { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class android.text.method.DialerKeyListener { void <init>(); }
-keepclassmembers class android.text.method.DialerKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.DialerKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class java.util.NoSuchElementException { void <init>(); }
-keepclassmembers class android.support.v7.widget.ao { void c(); }
-keepclassmembers class java.util.NoSuchElementException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ao { void c(int); }
-keepclassmembers class android.support.v7.a.l { void <init>(android.content.Context,int); }
-keepclassmembers class android.support.v7.a.l { boolean a(int); }
-keepclassmembers class android.support.v7.widget.ao { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.support.v7.a.l { android.support.v7.a.f a(); }
-keepclassmembers class android.support.v7.widget.ao { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.support.v7.widget.ao { int computeVerticalScrollExtent(); }
-keepclassmembers class android.support.v7.a.l { void onCreate(android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources); }
-keepclassmembers class android.support.v7.a.l { void setContentView(int); }
-keepclassmembers class android.support.v7.widget.ao { int computeHorizontalScrollRange(); }
-keepclassmembers class android.support.v7.widget.ao { int computeVerticalScrollRange(); }
-keepclassmembers class android.support.v7.widget.ao { int computeVerticalScrollOffset(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void startTransition(int); }
-keepclassmembers class android.support.v4.g.n$c { int a(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class libcore.io.ForwardingOs { void <init>(libcore.io.Os); }
-keepclassmembers class android.support.v4.g.n$c { int b(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void resetTransition(); }
-keepclassmembers class android.support.v4.g.n$c { void <init>(); }
-keepclassmembers class android.support.v7.widget.ao { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class android.support.v7.widget.ao { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.view.animation.PathInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class libcore.io.ForwardingOs { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources,android.graphics.drawable.TransitionDrawable$1); }
-keepclassmembers class android.support.v7.widget.ao { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class libcore.io.ForwardingOs { int fcntlVoid(java.io.FileDescriptor,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.graphics.drawable.InsetDrawable,android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.ao { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.widget.ArrayAdapter { int getCount(); }
-keepclassmembers class android.widget.ArrayAdapter { java.lang.Object getItem(int); }
-keepclassmembers class libcore.io.ForwardingOs { int fcntlLong(java.io.FileDescriptor,int,long); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { boolean canApplyTheme(); }
-keepclassmembers class android.text.TextLine { void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt,android.text.TextPaint); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { void <init>(java.io.InputStream,long,java.util.jar.JarVerifier$VerifierEntry); }
-keepclassmembers class android.text.TextLine { void updateMetrics(android.graphics.Paint$FontMetricsInt,int,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { boolean canConstantState(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { int getChangingConfigurations(); }
-keepclassmembers class java.net.ProxySelector { void <init>(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String gai_strerror(int); }
-keepclassmembers class android.support.v4.g.af$b { void <init>(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getenv(java.lang.String); }
-keepclassmembers class android.os.UserHandle$1 { void <init>(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class libcore.io.ForwardingOs { int getpid(); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { long skip(long); }
-keepclassmembers class com.android.volley.m { void a(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int available(); }
-keepclassmembers class com.android.volley.m { void a(java.lang.Throwable,java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.android.volley.m { void b(java.lang.String,java.lang.Object[]); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.SocketAddress getsockname(java.io.FileDescriptor); }
-keepclassmembers class com.android.volley.m { void c(java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.android.volley.m { void d(java.lang.String,java.lang.Object[]); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler { void <init>(); }
-keepclassmembers class android.support.v7.widget.ao { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.widget.SpellChecker { boolean isSessionActive(); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class libcore.io.ForwardingOs { int getuid(); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ak$2 { void <init>(android.support.v7.widget.ak); }
-keepclassmembers class android.util.ArraySet { void <init>(); }
-keepclassmembers class libcore.io.ForwardingOs { int ioctlInt(java.io.FileDescriptor,int,android.util.MutableInt); }
-keepclassmembers class android.util.ArraySet { void <init>(android.util.ArraySet); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$1 { void <init>(int); }
-keepclassmembers class android.support.v7.widget.ao { void f(int,int); }
-keepclassmembers class android.transition.ChangeBounds$4 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ak$2 { void run(); }
-keepclassmembers class android.util.ArraySet { void ensureCapacity(int); }
-keepclassmembers class android.util.ArraySet { java.lang.Object valueAt(int); }
-keepclassmembers class android.widget.SpellChecker { void onSelectionChanged(); }
-keepclassmembers class libcore.io.ForwardingOs { void listen(java.io.FileDescriptor,int); }
-keepclassmembers class java.lang.HexStringParser { void setZero(); }
-keepclassmembers class java.lang.HexStringParser { void setInfinite(); }
-keepclassmembers class libcore.io.ForwardingOs { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.graphics.drawable.AnimatedRotateDrawable,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { int getChangingConfigurations(); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.ao { int getBaseline(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { boolean canConstantState(); }
-keepclassmembers class android.util.Base64$Coder { void <init>(); }
-keepclassmembers class android.util.ArraySet { int size(); }
-keepclassmembers class android.support.v7.widget.ao { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { void <init>(java.lang.String); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void setLengthChangesAllowed(boolean); }
-keepclassmembers class android.support.v4.e.c { java.lang.String a(java.util.Locale); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int peek(); }
-keepclassmembers class android.support.v7.widget.ao { void h(); }
-keepclassmembers class java.util.AbstractList$FullListIterator { int previousIndex(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.lang.String getFormatSpecifierText(); }
-keepclassmembers class android.text.TextLine { float nextTab(float); }
-keepclassmembers class android.support.v7.widget.ao { boolean i(); }
-keepclassmembers class android.support.v7.widget.ao { boolean j(); }
-keepclassmembers class android.support.v7.widget.ao { boolean isAttachedToWindow(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parsePrecision(java.util.Formatter$FormatToken); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseWidth(java.util.Formatter$FormatToken,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int failNextInt(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseConversionType(java.util.Formatter$FormatToken); }
-keepclassmembers class android.os.Build { long getLong(java.lang.String); }
-keepclassmembers class android.os.Build { java.lang.String[] access$100(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int access$000(java.util.Formatter$FormatSpecifierParser); }
-keepclassmembers class android.os.Build { java.lang.String access$000(java.lang.String); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptByte(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class android.support.v7.widget.ao { void onAttachedToWindow(); }
-keepclassmembers class android.widget.RemoteViews$SetEmptyView { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.widget.RemoteViews$SetEmptyView { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptInt(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class android.widget.SpellChecker { boolean haveWordBoundariesChanged(android.text.Editable,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ao { void onDetachedFromWindow(); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class android.widget.SpellChecker { android.widget.TextView access$200(android.widget.SpellChecker); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptGroupReq(java.io.FileDescriptor,int,int,android.system.StructGroupReq); }
-keepclassmembers class android.widget.SpellChecker { boolean access$400(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { android.text.method.WordIterator access$500(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { int access$600(android.widget.SpellChecker); }
-keepclassmembers class java.io.BufferedOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptGroupSourceReq(java.io.FileDescriptor,int,int,android.system.StructGroupSourceReq); }
-keepclassmembers class android.widget.SpellChecker { int[] access$800(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { void access$900(android.widget.SpellChecker,android.text.Editable,int,int); }
-keepclassmembers class android.widget.SpellChecker { android.text.style.SpellCheckSpan[] access$700(android.widget.SpellChecker); }
-keepclassmembers class java.io.BufferedOutputStream { void flush(); }
-keepclassmembers class android.widget.SpellChecker { void access$1000(android.widget.SpellChecker); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptLinger(java.io.FileDescriptor,int,int,android.system.StructLinger); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableColorFilterAction { void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class libcore.io.ForwardingOs { void shutdown(java.io.FileDescriptor,int); }
-keepclassmembers class java.io.BufferedOutputStream { void close(); }
-keepclassmembers class com.android.volley.a$a { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableColorFilterAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableColorFilterAction { android.graphics.PorterDuff$Mode readPorterDuffMode(android.os.Parcel); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String strerror(int); }
-keepclassmembers class libcore.io.ForwardingOs { long sysconf(int); }
-keepclassmembers class java.io.BufferedOutputStream { void flushInternal(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void <init>(); }
-keepclassmembers class android.graphics.Paint$Style { void <init>(java.lang.String,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructUtsname uname(); }
-keepclassmembers class android.text.style.AlignmentSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.b.f { android.content.Intent a(android.content.ComponentName); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void <init>(org.apache.http.io.SessionOutputBuffer); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void finish(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean isEmpty(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void flush(); }
-keepclassmembers class java.util.Collections$1 { void <init>(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void close(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void write(byte[]); }
-keepclassmembers class java.util.Collections$1 { boolean hasNext(); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { android.os.IBinder asBinder(); }
-keepclassmembers class java.io.FileInputStream { int read(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.ao { void onMeasure(int,int); }
-keepclassmembers class java.io.FileInputStream { int available(); }
-keepclassmembers class java.io.FileInputStream { int read(); }
-keepclassmembers class com.android.volley.a.e { long a(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ao { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.webkit.WebViewDelegate { void <init>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class android.support.design.widget.h { void i(); }
-keepclassmembers class android.support.design.widget.h { boolean d(); }
-keepclassmembers class android.support.design.widget.h { void h(); }
-keepclassmembers class com.android.volley.a.d$a { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.e.a$d { void <init>(); }
-keepclassmembers class android.support.v4.c.a.l { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.c.a.l { void <init>(android.support.v4.c.a.j$a,android.content.res.Resources); }
-keepclassmembers class android.support.v4.e.a$d { java.lang.String a(java.util.Locale); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { void <init>(android.widget.RelativeLayout); }
-keepclassmembers class android.support.v4.c.a.l { void jumpToCurrentState(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { void <init>(android.widget.RelativeLayout,android.widget.RelativeLayout$1); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.design.widget.f$c { void <init>(android.support.design.widget.f); }
-keepclassmembers class android.support.design.widget.f$c { void <init>(android.support.design.widget.f,android.support.design.widget.f$1); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void addDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void removeDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void scheduleCallback(); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int); }
-keepclassmembers class java.util.Arrays { int binarySearch(long[],long); }
-keepclassmembers class android.view.animation.Animation$2 { void <init>(android.view.animation.Animation); }
-keepclassmembers class java.lang.SecurityException { void <init>(); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void viewsReady(android.util.ArrayMap); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.shapps.mintubeapp.f$1 { void <init>(com.shapps.mintubeapp.f); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { void <init>(); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.view.Window getWindow(); }
-keepclassmembers class android.support.v7.widget.ao { void requestLayout(); }
-keepclassmembers class android.support.v7.widget.ao { void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.PathMeasure { void <init>(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.transition.Transition configureTransition(android.transition.Transition,boolean); }
-keepclassmembers class android.graphics.PathMeasure { void setPath(android.graphics.Path,boolean); }
-keepclassmembers class android.graphics.PathMeasure { float getLength(); }
-keepclassmembers class android.graphics.PathMeasure { boolean getSegment(float,float,android.graphics.Path,boolean); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { void <init>(); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(java.lang.String); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class android.net.Uri$OpaqueUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.ao { boolean startNestedScroll(int); }
-keepclassmembers class android.support.v7.widget.ao { void stopNestedScroll(); }
-keepclassmembers class android.support.v7.widget.ak$g { void <init>(android.support.v7.widget.ak); }
-keepclassmembers class android.support.v7.widget.ak$g { void <init>(android.support.v7.widget.ak,android.support.v7.widget.ak$1); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getEncodedSchemeSpecificPart(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getScheme(); }
-keepclassmembers class java.util.concurrent.FutureTask { java.lang.Object get(); }
-keepclassmembers class android.support.v7.widget.ak$g { void run(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class android.support.design.widget.g { void <init>(android.support.design.widget.aa,android.support.design.widget.n); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.FutureTask { void set(java.lang.Object); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.FutureTask { void setException(java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.FutureTask { void run(); }
-keepclassmembers class android.support.v4.os.h { void a(java.lang.String); }
-keepclassmembers class java.util.concurrent.FutureTask { void handlePossibleCancellationInterrupt(int); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class android.transition.TransitionManager { void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.support.v7.widget.s { void <clinit>(); }
-keepclassmembers class java.util.concurrent.FutureTask { void finishCompletion(); }
-keepclassmembers class android.support.v7.widget.s { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.design.widget.g { boolean d(); }
-keepclassmembers class android.support.v7.widget.s { void a(boolean); }
-keepclassmembers class org.apache.http.impl.client.RoutedRequest { void <init>(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class org.apache.http.impl.client.RoutedRequest { org.apache.http.impl.client.RequestWrapper getRequest(); }
-keepclassmembers class org.apache.http.impl.client.RoutedRequest { org.apache.http.conn.routing.HttpRoute getRoute(); }
-keepclassmembers class java.util.concurrent.FutureTask { void removeWaiter(java.util.concurrent.FutureTask$WaitNode); }
-keepclassmembers class java.util.Arrays { void sort(int[],int,int); }
-keepclassmembers class android.support.v7.a.n$2 { void <init>(android.support.v7.a.n); }
-keepclassmembers class android.widget.TextView$Marquee$3 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[]); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],int,int); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext { void setPersistentCache(com.android.org.conscrypt.SSLClientSessionCache); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class java.net.MalformedURLException { void <init>(); }
-keepclassmembers class java.net.MalformedURLException { void <init>(java.lang.String); }
-keepclassmembers class java.net.MalformedURLException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { void <init>(); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { void verify(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.support.v4.g.ag { boolean f(android.view.View); }
-keepclassmembers class android.support.v7.widget.ay { void a(); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <init>(); }
-keepclassmembers class android.support.v7.widget.ay { void <init>(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class android.text.NoCopySpan$Concrete { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(android.view.Choreographer$1); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.security.cert.CertificateFactory { void <init>(java.security.cert.CertificateFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void clearState(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { long getFadeDuration(); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.Certificate generateCertificate(java.io.InputStream); }
-keepclassmembers class java.net.NetworkInterface { int getIndex(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getBaseContext(); }
-keepclassmembers class android.content.ContextWrapper { void <init>(android.content.Context); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.PackageManager getPackageManager(); }
-keepclassmembers class android.content.ContextWrapper { android.content.ContentResolver getContentResolver(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.content.ContextWrapper { android.os.Looper getMainLooper(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getApplicationContext(); }
-keepclassmembers class android.content.ContextWrapper { void setTheme(int); }
-keepclassmembers class android.content.ContextWrapper { int getThemeResId(); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageName(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getBasePackageName(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getOpPackageName(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.ApplicationInfo getApplicationInfo(); }
-keepclassmembers class android.support.v4.app.ab$m { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageCodePath(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageResourcePath(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getSharedPrefsFile(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.content.ContextWrapper { android.content.SharedPreferences getSharedPreferences(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setAlpha(int); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileOutputStream openFileOutput(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileInputStream openFileInput(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteFile(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFileStreamPath(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] fileList(); }
-keepclassmembers class android.text.method.LinkMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFilesDir(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getOpacity(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getNoBackupFilesDir(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean isStateful(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalFilesDir(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalFilesDirs(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getObbDir(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { void <init>(android.view.ViewRootImpl$1); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getObbDirs(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void startTransition(java.lang.Runnable); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCacheDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCodeCacheDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalCacheDir(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void transitionStarted(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalCacheDirs(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalMediaDirs(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDir(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void setRangeSpan(android.text.Editable,int,int); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeRangeSpan(android.text.Editable); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteDatabase(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDatabasePath(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.app.Activity$ManagedCursor { void <init>(android.database.Cursor); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] databaseList(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable getWallpaper(); }
-keepclassmembers class android.app.Activity$ManagedCursor { android.database.Cursor access$100(android.app.Activity$ManagedCursor); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable peekWallpaper(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumWidth(); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumHeight(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(android.graphics.Bitmap); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(java.io.InputStream); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void clearMutated(); }
-keepclassmembers class android.content.ContextWrapper { void clearWallpaper(); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources,android.graphics.drawable.ScaleDrawable$1); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[]); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class java.net.NetworkInterface { int hashCode(); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class com.android.volley.a.k { com.android.volley.i a(android.content.Context); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcast(android.content.Intent); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker,android.widget.SpellChecker$1); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcast(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void append(org.apache.http.util.CharArrayBuffer,int,int); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void clear(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { int byteAt(int); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { int capacity(); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { int length(); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { byte[] buffer(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.util.Locale); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { boolean isEmpty(); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void a(android.graphics.Rect); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.util.Locale); }
-keepclassmembers class android.content.ContextWrapper { void unregisterReceiver(android.content.BroadcastReceiver); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { boolean isFull(); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startService(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { boolean stopService(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencySymbol(java.util.Locale,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { boolean bindService(android.content.Intent,android.content.ServiceConnection,int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayCountry(java.util.Locale,java.util.Locale); }
-keepclassmembers class android.content.ContextWrapper { boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onAttachedToWindow(); }
-keepclassmembers class android.view.WindowManager$LayoutParams$1 { void <init>(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayLanguage(java.util.Locale,java.util.Locale); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.content.ContextWrapper { void unbindService(android.content.ServiceConnection); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayVariant(java.util.Locale,java.util.Locale); }
-keepclassmembers class android.content.ContextWrapper { boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayScript(java.util.Locale,java.util.Locale); }
-keepclassmembers class android.content.ContextWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ak$c { void <init>(android.support.v7.widget.ak,android.support.v7.widget.ak$1); }
-keepclassmembers class android.support.v7.widget.ak$c { void <init>(android.support.v7.widget.ak); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int); }
-keepclassmembers class libcore.icu.ICU { java.util.Locale addLikelySubtags(java.util.Locale); }
-keepclassmembers class android.support.v7.widget.ak$c { void run(); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int,android.os.IBinder); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingPermission(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfPermission(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void enforcePermission(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingPermission(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.BasicPoolEntry { org.apache.http.conn.OperatedClientConnection getConnection(); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(org.apache.http.util.CharArrayBuffer,int,int); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfPermission(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.BasicPoolEntry { org.apache.http.conn.routing.HttpRoute getPlannedRoute(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.BasicPoolEntry { org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef(); }
-keepclassmembers class android.content.ContextWrapper { void revokeUriPermission(android.net.Uri,int); }
-keepclassmembers class android.content.ContextWrapper { void grantUriPermission(java.lang.String,android.net.Uri,int); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingUriPermission(android.net.Uri,int); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfUriPermission(android.net.Uri,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(java.lang.Object); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(org.apache.http.util.ByteArrayBuffer,int,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void clear(); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { char charAt(int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { char[] buffer(); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { int length(); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class java.lang.NumberFormatException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void apply(com.android.internal.app.AlertController); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContext(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { int indexOf(int); }
-keepclassmembers class java.lang.StringBuilder { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { int getUserId(); }
-keepclassmembers class java.lang.StringBuilder { void <init>(int); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createConfigurationContext(android.content.res.Configuration); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createDisplayContext(android.view.Display); }
-keepclassmembers class android.content.ContextWrapper { boolean isRestricted(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char); }
-keepclassmembers class android.content.ContextWrapper { android.view.DisplayAdjustments getDisplayAdjustments(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$6 { void <init>(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(long); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(float); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(double); }
-keepclassmembers class android.support.v7.widget.Toolbar$a { void <init>(android.support.v7.widget.Toolbar); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.Toolbar$a { void <init>(android.support.v7.widget.Toolbar,android.support.v7.widget.Toolbar$1); }
-keepclassmembers class android.support.v7.widget.Toolbar$a { void a(android.content.Context,android.support.v7.view.menu.f); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[]); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[],int,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent$1 { void <init>(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence); }
-keepclassmembers class android.view.animation.Animation$1 { void <init>(android.view.animation.Animation); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder delete(int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder appendCodePoint(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.design.widget.h$1 { void <init>(android.support.design.widget.h); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char); }
-keepclassmembers class android.graphics.Path$FillType { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char[]); }
-keepclassmembers class android.support.v7.a.i$a { void <init>(android.support.v7.a.i,android.view.Window$Callback); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char[],int,int); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { void <init>(); }
-keepclassmembers class android.graphics.BitmapFactory$Options { void <init>(); }
-keepclassmembers class android.support.v7.widget.al$a { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.al$a { void a(boolean); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder replace(int,int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.al$a { void setHotspot(float,float); }
-keepclassmembers class android.support.v7.widget.al$a { void draw(android.graphics.Canvas); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v7.widget.al$a { boolean setState(int[]); }
-keepclassmembers class android.support.v7.widget.al$a { boolean setVisible(boolean,boolean); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.v4.g.s$c { void <init>(); }
-keepclassmembers class android.support.v4.g.s$c { int b(android.view.MotionEvent); }
-keepclassmembers class android.view.MotionEvent { void <init>(); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { boolean isParameterFalse(java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { boolean isParameterTrue(java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int); }
-keepclassmembers class java.lang.StringBuilder { void setLength(int); }
-keepclassmembers class java.lang.StringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class java.lang.StringBuilder { char charAt(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.Appendable append(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.StringBuilder { int length(); }
-keepclassmembers class java.lang.StringBuilder { void setCharAt(int,char); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v7.widget.av { int a(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.av { int c(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.av { android.content.res.ColorStateList b(android.content.Context,int); }
-keepclassmembers class java.util.IllegalFormatException { void <init>(); }
-keepclassmembers class android.support.v4.g.b.a { void <init>(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,int); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent copy(); }
-keepclassmembers class android.graphics.Insets { void <init>(int,int,int,int); }
-keepclassmembers class android.view.MotionEvent { int getDeviceId(); }
-keepclassmembers class android.view.MotionEvent { int getSource(); }
-keepclassmembers class android.view.MotionEvent { void setSource(int); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(android.graphics.Rect); }
-keepclassmembers class android.view.MotionEvent { boolean isTouchEvent(); }
-keepclassmembers class android.widget.AdapterView$AdapterContextMenuInfo { void <init>(android.view.View,int,long); }
-keepclassmembers class android.view.MotionEvent { int getAction(); }
-keepclassmembers class android.os.StrictMode$4 { void <init>(); }
-keepclassmembers class android.view.MotionEvent { int getFlags(); }
-keepclassmembers class android.view.MotionEvent { float getX(); }
-keepclassmembers class android.view.MotionEvent { long getEventTimeNano(); }
-keepclassmembers class android.os.StrictMode$4 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v4.c.a.n { void <init>(android.support.v4.c.a.j$a,android.content.res.Resources); }
-keepclassmembers class android.view.MotionEvent { float getY(); }
-keepclassmembers class android.support.v4.c.a.n { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.c.a.n { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.support.v4.c.a.n { void setHotspot(float,float); }
-keepclassmembers class android.view.MotionEvent { float getAxisValue(int); }
-keepclassmembers class android.view.MotionEvent { int getPointerId(int); }
-keepclassmembers class android.support.v4.c.a.n { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.v4.c.a.n { boolean setState(int[]); }
-keepclassmembers class android.view.MotionEvent { int getPointerCount(); }
-keepclassmembers class android.view.MotionEvent { int findPointerIndex(int); }
-keepclassmembers class android.support.v4.c.a.n { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.MotionEvent { float getX(int); }
-keepclassmembers class android.support.v4.c.a.n { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.MotionEvent { float getY(int); }
-keepclassmembers class android.view.MotionEvent { int getToolType(int); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { void <init>(); }
-keepclassmembers class java.util.jar.JarVerifier { boolean isSignedJar(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class android.view.MotionEvent { int getMetaState(); }
-keepclassmembers class android.view.MotionEvent { float getRawX(); }
-keepclassmembers class android.view.MotionEvent { int getButtonState(); }
-keepclassmembers class java.util.jar.JarVerifier { void removeMetaEntries(); }
-keepclassmembers class android.view.MotionEvent { float getRawY(); }
-keepclassmembers class android.view.MotionEvent { int getHistorySize(); }
-keepclassmembers class android.support.v4.g.ao { boolean b(android.view.View); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException access$000(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { void addChangeCallback(java.lang.Runnable); }
-keepclassmembers class android.view.MotionEvent { int getEdgeFlags(); }
-keepclassmembers class android.view.MotionEvent { void setAction(int); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <init>(); }
-keepclassmembers class android.text.util.Linkify$3 { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean popBackStackImmediate(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean executePendingTransactions(); }
-keepclassmembers class android.support.v4.widget.g$b { void onChanged(); }
-keepclassmembers class android.support.v4.widget.g$b { void <init>(android.support.v4.widget.g); }
-keepclassmembers class android.support.v4.widget.g$b { void <init>(android.support.v4.widget.g,android.support.v4.widget.g$1); }
-keepclassmembers class android.support.v4.g.t { int b(android.view.MotionEvent,int); }
-keepclassmembers class org.apache.http.impl.auth.DigestSchemeFactory { void <init>(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType); }
-keepclassmembers class android.support.v4.g.t { float d(android.view.MotionEvent,int); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int,byte[]); }
-keepclassmembers class android.support.v4.g.t { int a(android.view.MotionEvent,int); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { void <init>(org.apache.http.HttpHost,java.net.InetAddress,boolean); }
-keepclassmembers class android.support.v4.g.t { float c(android.view.MotionEvent,int); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int,byte[],org.apache.harmony.security.x509.SubjectPublicKeyInfo$1); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { void <init>(org.apache.http.HttpHost); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { byte[] getEncoded(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { byte[] access$200(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { java.security.PublicKey generateKeyForAlgorithm(java.security.spec.KeySpec,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { int access$300(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$100(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { org.apache.http.HttpHost getTargetHost(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { org.apache.http.HttpHost getProxyHost(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { boolean isTunnelled(); }
-keepclassmembers class android.support.v4.widget.aa$b { void <init>(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { java.net.InetAddress getLocalAddress(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { boolean isLayered(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { boolean isSecure(); }
-keepclassmembers class android.view.MotionEvent { android.view.InputEvent copy(); }
-keepclassmembers class android.support.v4.widget.aa$b { void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.ak$a { void <init>(android.content.Context,boolean); }
-keepclassmembers class android.support.v7.widget.ak$a { boolean a(android.support.v7.widget.ak$a,boolean); }
-keepclassmembers class android.support.v7.widget.ak$a { void a(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.ak$a { boolean a(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$ContinueTransitionListener { void <init>(android.app.ActivityTransitionCoordinator); }
-keepclassmembers class android.app.FragmentManagerImpl { android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int); }
-keepclassmembers class android.support.v7.widget.m { android.graphics.PorterDuffColorFilter a(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]); }
-keepclassmembers class android.app.FragmentManagerImpl { void performPendingDeferredStart(android.app.Fragment); }
-keepclassmembers class android.support.v7.widget.ak$a { boolean hasWindowFocus(); }
-keepclassmembers class android.support.v7.widget.ak$a { boolean hasFocus(); }
-keepclassmembers class android.support.v7.widget.ak$a { boolean isInTouchMode(); }
-keepclassmembers class java.util.Currency { java.lang.String getCurrencyCode(); }
-keepclassmembers class android.support.v7.widget.ak$a { boolean isFocused(); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class java.util.Currency { java.lang.String toString(); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream); }
-keepclassmembers class java.io.InputStreamReader { void close(); }
-keepclassmembers class android.support.v7.widget.m { void a(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String toString(); }
-keepclassmembers class java.io.InputStreamReader { boolean isOpen(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(); }
-keepclassmembers class java.util.WeakHashMap { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[]); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.support.v7.widget.m { boolean a(android.content.Context,int,android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { java.lang.String getId(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean isStateful(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List,byte[]); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void jumpToCurrentState(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,boolean); }
-keepclassmembers class android.animation.LayoutTransition$1 { void <init>(android.animation.LayoutTransition,android.view.ViewGroup); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.GeneralNames$1); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.lang.String getHostname(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { java.util.List access$100(org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class android.transition.ChangeBounds$6 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void init(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { int getPort(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(long); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.Locale); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.content.res.Configuration { void <init>(); }
-keepclassmembers class android.content.res.Configuration { void <init>(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList f(android.content.Context); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList g(android.content.Context); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void clearMutated(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone); }
-keepclassmembers class android.text.BoringLayout { int getHeight(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { int[] access$100(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class android.text.BoringLayout { int getLineCount(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue,org.apache.harmony.security.x509.Extension$1); }
-keepclassmembers class android.text.BoringLayout { int getLineTop(int); }
-keepclassmembers class android.text.BoringLayout { int getLineStart(int); }
-keepclassmembers class android.text.BoringLayout { int getLineDescent(int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { byte[] access$300(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { boolean access$200(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class android.text.BoringLayout { int getParagraphDirection(int); }
-keepclassmembers class android.text.BoringLayout { float getLineMax(int); }
-keepclassmembers class android.support.v7.widget.m { android.graphics.PorterDuff$Mode a(int); }
-keepclassmembers class android.text.BoringLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.text.BoringLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.support.v7.widget.m { android.graphics.drawable.Drawable a(android.content.Context,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources,android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class android.support.v7.widget.m { android.graphics.drawable.Drawable a(android.content.Context,int,boolean); }
-keepclassmembers class android.text.BoringLayout { int getEllipsisCount(int); }
-keepclassmembers class android.support.v7.widget.m { android.graphics.drawable.Drawable a(android.content.Context,android.support.v7.widget.az,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { javax.net.ssl.SSLSession getSession(); }
-keepclassmembers class android.text.BoringLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.support.v4.app.ac$a { android.app.Notification$Builder a(); }
-keepclassmembers class android.support.v4.app.ac$a { void a(android.support.v4.app.ae$a); }
-keepclassmembers class android.support.v7.widget.m { android.content.res.ColorStateList b(android.content.Context,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { boolean getEnableSessionCreation(); }
-keepclassmembers class android.support.v4.app.ac$a { android.app.Notification b(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$8 { void <init>(com.shapps.mintubeapp.MainActivity); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier$1 { void <init>(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$8 { void onClick(android.view.View); }
-keepclassmembers class java.util.jar.Manifest$Chunk { void <init>(int,int); }
-keepclassmembers class android.graphics.FontListParser$Font { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class android.content.res.Configuration { void setToDefaults(); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { boolean getUseClientMode(); }
-keepclassmembers class android.view.AbsSavedState$1 { void <init>(); }
-keepclassmembers class android.support.v4.g.r { boolean b(android.view.MenuItem); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setSoTimeout(int); }
-keepclassmembers class android.support.v4.g.r { boolean a(android.view.MenuItem); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { int getSoWriteTimeout(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void close(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { int getSoTimeout(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setHandshakeTimeout(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void closeUnderlyingSocket(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void shutdownAndFreeSslNative(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.io.FileDescriptor getFileDescriptor$(); }
-keepclassmembers class libcore.net.url.FileHandler { void <init>(); }
-keepclassmembers class libcore.net.url.FileHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void access$000(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.lang.String chooseServerAlias(javax.net.ssl.X509KeyManager,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.lang.Object access$100(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.lang.String chooseServerPSKIdentityHint(com.android.org.conscrypt.PSKKeyManager); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { int access$200(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.net.Socket access$400(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { int access$500(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { long access$300(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class android.widget.FastScroller$6 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(android.view.View,int); }
-keepclassmembers class android.view.MenuInflater { void registerMenu(android.view.SubMenu,android.util.AttributeSet); }
-keepclassmembers class android.view.MenuInflater { void registerMenu(android.view.MenuItem,android.util.AttributeSet); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object getRealOwner(); }
-keepclassmembers class android.view.MenuInflater { android.content.Context access$100(android.view.MenuInflater); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object[] access$300(android.view.MenuInflater); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object access$400(android.view.MenuInflater); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object[] access$600(android.view.MenuInflater); }
-keepclassmembers class org.apache.http.client.RedirectException { void <init>(java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void a(com.shapps.mintubeapp.PlayerService); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void <init>(int[]); }
-keepclassmembers class android.graphics.Paint$Align { void <init>(java.lang.String,int,int); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int[] getOid(); }
-keepclassmembers class android.support.v7.a.k$2 { void <init>(android.support.v7.a.k); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void a(com.shapps.mintubeapp.PlayerService,int,int,int[]); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String getName(); }
-keepclassmembers class java.util.jar.JarFile { void close(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.Object getGroup(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { int b(com.shapps.mintubeapp.PlayerService); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void b(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void c(int); }
-keepclassmembers class android.util.SizeF { float getWidth(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.util.SizeF { float getHeight(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <init>(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean isSelecting(android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getCurrentLineTop(android.text.Spannable,android.text.Layout); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void h(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int); }
-keepclassmembers class android.animation.StateListAnimator$1 { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.animation.StateListAnimator$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.util.logging.Level { java.lang.String getName(); }
-keepclassmembers class java.util.logging.Level { int intValue(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { boolean e(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean isTouchSelecting(boolean,android.text.Spannable); }
-keepclassmembers class java.util.logging.Level { int hashCode(); }
-keepclassmembers class java.util.logging.Level { java.lang.String toString(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { android.view.LayoutInflater getInflater(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void a(android.support.v7.view.menu.h,int); }
-keepclassmembers class android.support.v4.g.ad$b { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void a(boolean,char); }
-keepclassmembers class android.support.v4.g.ad$b { float a(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { boolean a(); }
-keepclassmembers class android.support.v4.g.ad$b { float b(android.view.VelocityTracker,int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.m$a { void <init>(android.support.v7.widget.m$1); }
-keepclassmembers class android.support.v7.widget.m$a { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { android.support.v7.view.menu.h getItemData(); }
-keepclassmembers class android.text.util.Linkify$2 { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setCheckable(boolean); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void onCreate(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchCreate(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setForceShowIcon(boolean); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.widget.q$d { void <init>(); }
-keepclassmembers class android.content.ComponentName$1 { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.os.StrictMode$6 { void <init>(); }
-keepclassmembers class android.support.v4.widget.q$d { void a(android.widget.PopupWindow,int); }
-keepclassmembers class android.text.TextPaint { void <init>(); }
-keepclassmembers class android.widget.TextView$2 { void <init>(android.widget.TextView); }
-keepclassmembers class android.text.TextPaint { void <init>(int); }
-keepclassmembers class android.support.v4.g.af$a { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { int transitToStyleIndex(int,boolean); }
-keepclassmembers class android.text.TextPaint { void set(android.text.TextPaint); }
-keepclassmembers class android.support.v4.g.af$a { android.graphics.PorterDuff$Mode C(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { android.content.res.ColorStateList B(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { boolean G(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { int a(int,int,int); }
-keepclassmembers class android.support.v4.g.af$a { int a(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { long a(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.g.af$a { void a(android.view.View,int,int); }
-keepclassmembers class android.support.v7.view.menu.h { void <init>(android.support.v7.view.menu.f,int,int,int,int,java.lang.CharSequence,int); }
-keepclassmembers class android.support.v4.g.af$a { void a(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.g.af$a { void a(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.g.af$a { void a(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.content.Intent$1 { void <init>(); }
-keepclassmembers class android.support.v4.g.af$a { void a(android.view.View,android.support.v4.g.aa); }
-keepclassmembers class java.lang.Math { int abs(int); }
-keepclassmembers class android.support.v4.g.af$a { void a(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.content.Intent$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v4.g.af$a { void b(android.view.View,float); }
-keepclassmembers class android.support.v4.g.af$a { void b(android.view.View,boolean); }
-keepclassmembers class java.lang.Math { int max(int,int); }
-keepclassmembers class android.support.v7.view.menu.h { android.support.v4.d.a.b a(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { void d(android.view.View,float); }
-keepclassmembers class android.support.v7.a.k$4 { void <init>(android.support.v7.a.k); }
-keepclassmembers class android.support.v4.g.af$a { void d(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { void e(android.view.View,float); }
-keepclassmembers class java.lang.Math { int min(int,int); }
-keepclassmembers class android.support.v7.view.menu.h { java.lang.CharSequence a(android.support.v7.view.menu.m$a); }
-keepclassmembers class android.support.v7.view.menu.h { android.support.v4.g.d a(); }
-keepclassmembers class android.support.v4.g.af$a { void f(android.view.View,float); }
-keepclassmembers class android.support.v7.view.menu.h { void a(android.support.v7.view.menu.p); }
-keepclassmembers class android.support.v4.g.af$a { int g(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { int h(android.view.View); }
-keepclassmembers class android.support.v7.view.menu.h { void a(android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.support.v4.g.af$a { int j(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { int i(android.view.View); }
-keepclassmembers class android.support.v4.g.ar { boolean b(android.view.ViewConfiguration); }
-keepclassmembers class android.support.v4.g.af$a { boolean m(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { float o(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { float p(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { int q(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { int r(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { int t(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { void u(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { float v(android.view.View); }
-keepclassmembers class android.support.v4.widget.g { void <init>(android.content.Context,android.database.Cursor,boolean); }
-keepclassmembers class android.support.v4.g.af$a { float w(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { boolean x(android.view.View); }
-keepclassmembers class android.support.v4.g.af$a { void y(android.view.View); }
-keepclassmembers class java.lang.IncompatibleClassChangeError { void <init>(); }
-keepclassmembers class java.lang.IncompatibleClassChangeError { void <init>(java.lang.String); }
-keepclassmembers class android.app.FragmentManagerImpl$1 { void <init>(android.app.FragmentManagerImpl); }
-keepclassmembers class android.support.v7.view.menu.h { int c(); }
-keepclassmembers class android.support.v7.view.menu.h { char d(); }
-keepclassmembers class android.support.v7.view.menu.h { boolean expandActionView(); }
-keepclassmembers class android.support.v7.view.menu.h { boolean f(); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.View getActionView(); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel); }
-keepclassmembers class java.lang.Character { void <init>(char); }
-keepclassmembers class android.support.v7.view.menu.h { int getGroupId(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition clone(); }
-keepclassmembers class java.lang.Character { char charValue(); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Character); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class android.support.v7.view.menu.h { android.graphics.drawable.Drawable getIcon(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class android.support.v7.view.menu.h { int getItemId(); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.SubMenu getSubMenu(); }
-keepclassmembers class android.support.v7.view.menu.h { java.lang.CharSequence getTitle(); }
-keepclassmembers class java.lang.Character { boolean isValidCodePoint(int); }
-keepclassmembers class java.lang.Character { boolean isHighSurrogate(char); }
-keepclassmembers class android.view.animation.LayoutAnimationController$AnimationParameters { void <init>(); }
-keepclassmembers class android.view.DisplayInfo { void readFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.view.menu.h { boolean hasSubMenu(); }
-keepclassmembers class android.app.AlertDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class java.lang.Character { boolean isSupplementaryCodePoint(int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setDuration(long); }
-keepclassmembers class org.apache.http.impl.io.IdentityInputStream { void close(); }
-keepclassmembers class java.lang.Character { boolean isLowSurrogate(char); }
-keepclassmembers class android.support.v7.view.menu.h { boolean i(); }
-keepclassmembers class java.lang.Character { boolean isSurrogatePair(char,char); }
-keepclassmembers class org.apache.http.util.VersionInfo { java.lang.String getRelease(); }
-keepclassmembers class org.apache.http.impl.io.IdentityInputStream { int read(byte[],int,int); }
-keepclassmembers class android.app.AlertDialog { com.android.internal.app.AlertController access$000(android.app.AlertDialog); }
-keepclassmembers class android.support.v7.view.menu.h { boolean isActionViewExpanded(); }
-keepclassmembers class android.support.design.widget.f { void b(); }
-keepclassmembers class android.support.design.widget.f { void a(int[]); }
-keepclassmembers class android.view.DisplayInfo { void getAppMetrics(android.util.DisplayMetrics,android.view.DisplayAdjustments); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setActionView(int); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setActionView(android.view.View); }
-keepclassmembers class android.support.v4.app.p$2 { void <init>(android.support.v4.app.p,android.view.View,android.view.animation.Animation,android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setAlphabeticShortcut(char); }
-keepclassmembers class android.content.res.AssetManager { void ensureStringBlocks(); }
-keepclassmembers class android.support.v4.app.p$2 { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class java.nio.CharArrayBuffer { void <init>(char[]); }
-keepclassmembers class java.nio.CharArrayBuffer { void <init>(int,char[],int,boolean); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setNumericShortcut(char); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setIcon(int); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharBuffer asReadOnlyBuffer(); }
-keepclassmembers class java.net.URLConnection$DefaultContentHandler { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void computeBitmapSize(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel,android.view.DisplayInfo$1); }
-keepclassmembers class android.support.design.widget.u$b { void <init>(); }
-keepclassmembers class android.support.design.widget.u$b { void <init>(android.support.design.widget.u$1); }
-keepclassmembers class android.support.v7.widget.ak$b$b { void <init>(android.support.v7.widget.ak$b); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setTitleCondensed(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.view.menu.h { android.view.MenuItem setVisible(boolean); }
-keepclassmembers class android.support.v7.widget.ak$b$b { void <init>(android.support.v7.widget.ak$b,android.support.v7.widget.ak$1); }
-keepclassmembers class android.support.design.widget.u$b { void a(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTargetDensity(int); }
-keepclassmembers class android.support.v7.view.menu.h { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setGravity(int); }
-keepclassmembers class android.support.v7.widget.ak$b$b { void run(); }
-keepclassmembers class org.apache.http.message.ParserCursor { int getUpperBound(); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.apache.http.message.ParserCursor { int getPos(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setMipMap(boolean); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Long); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAntiAlias(boolean); }
-keepclassmembers class org.apache.http.message.ParserCursor { boolean atEnd(); }
-keepclassmembers class java.lang.Long { void <init>(long); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { javax.security.auth.x500.X500Principal getIssuer(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestAlgorithmName(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestAlgorithm(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.util.List getAuthenticatedAttributes(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestEncryptionAlgorithm(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeX(android.graphics.Shader$TileMode); }
-keepclassmembers class libcore.net.MimeUtils { void add(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeY(android.graphics.Shader$TileMode); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestEncryptionAlgorithmName(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] getEncryptedDigest(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] getEncodedAuthenticatedAttributes(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.widget.ListView { int getHeaderViewsCount(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { int access$000(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { javax.security.auth.x500.X500Principal access$100(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean needMirroring(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.math.BigInteger access$200(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class java.lang.Long { long longValue(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$500(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class java.lang.Character { int digit(char,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] access$600(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.pkcs7.AuthenticatedAttributes access$400(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <init>(int,java.lang.Object[],org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.pkcs7.AuthenticatedAttributes,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],java.util.List,org.apache.harmony.security.pkcs7.SignerInfo$1); }
-keepclassmembers class android.widget.ListView { int getFooterViewsCount(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.util.List access$700(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class android.widget.ListView { android.widget.ListAdapter getAdapter(); }
-keepclassmembers class libcore.icu.LocaleData { void <init>(); }
-keepclassmembers class java.lang.Long { java.lang.String toHexString(long); }
-keepclassmembers class java.lang.Long { java.lang.String toOctalString(long); }
-keepclassmembers class java.lang.Long { java.lang.String toString(); }
-keepclassmembers class java.lang.Long { java.lang.String toString(long); }
-keepclassmembers class android.widget.ListView { void resetList(); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAlpha(int); }
-keepclassmembers class java.lang.Character { int getType(char); }
-keepclassmembers class java.lang.Character { byte getDirectionality(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getAlpha(); }
-keepclassmembers class java.lang.Character { byte getDirectionality(char); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.lang.Character { int hashCode(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class java.lang.Character { boolean isDigit(char); }
-keepclassmembers class java.lang.Character { boolean isDigit(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.lang.Character { boolean isISOControl(char); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierPart(char); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isStateful(); }
-keepclassmembers class java.lang.Character { boolean isISOControl(int); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.Character { boolean isLetter(char); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 { void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager,org.apache.http.impl.conn.tsccm.PoolEntryRequest,org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.lang.Character { boolean isLetter(int); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(char); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(char); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(int); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(int); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(int); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(char); }
-keepclassmembers class java.lang.Character { boolean isTitleCase(char); }
-keepclassmembers class android.media.AudioAttributes$1 { void <init>(); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Shader$TileMode parseTileMode(int); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(char); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean canApplyTheme(); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(char); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicWidth(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicHeight(); }
-keepclassmembers class java.lang.Character { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.Character { void access$100(int); }
-keepclassmembers class java.lang.Character { int access$200(int); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources,android.graphics.drawable.BitmapDrawable$1); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void initializeWithState(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources); }
-keepclassmembers class android.widget.LinearLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.widget.LinearLayout { void setDividerDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setWhen(long); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setShowWhen(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setUsesChronometer(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSmallIcon(int); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { void resetHeaders(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSmallIcon(int,int); }
-keepclassmembers class android.widget.LinearLayout { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentText(java.lang.CharSequence); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { java.lang.String getMethod(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSubText(java.lang.CharSequence); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { org.apache.http.ProtocolVersion getProtocolVersion(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setNumber(int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentInfo(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setProgress(int,int,boolean); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { java.net.URI getURI(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentIntent(android.app.PendingIntent); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContent(android.widget.RemoteViews); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { void setURI(java.net.URI); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setTicker(java.lang.CharSequence); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { boolean isRepeatable(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSound(android.net.Uri,int); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { org.apache.http.HttpRequest getOriginal(); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { int getExecCount(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setVibrate(long[]); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setOnlyAlertOnce(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setLights(int,int,int); }
-keepclassmembers class android.widget.LinearLayout { void setBaselineAligned(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setOngoing(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setAutoCancel(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setDefaults(int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setPriority(int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setCategory(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setLocalOnly(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setGroupSummary(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder addPerson(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setGroup(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSortKey(java.lang.String); }
-keepclassmembers class android.widget.ListView { boolean recycleOnMeasure(); }
-keepclassmembers class android.widget.LinearLayout { android.view.View getVirtualChildAt(int); }
-keepclassmembers class android.widget.LinearLayout { int getVirtualChildCount(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setExtras(android.os.Bundle); }
-keepclassmembers class android.widget.LinearLayout { void onMeasure(int,int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder addAction(android.app.Notification$Action); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setStyle(android.app.Notification$Style); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setVisibility(int); }
-keepclassmembers class android.text.Layout$TabStops { void <init>(int,java.lang.Object[]); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setPublicVersion(android.app.Notification); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setColor(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.al { void a(int,android.view.View); }
-keepclassmembers class java.lang.Throwable { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { android.graphics.drawable.Drawable get(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.app.Notification$Builder { boolean addProfileBadge(android.widget.RemoteViews,int); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.al { void a(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.al { void a(int,android.view.View,float,float); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.widget.al { boolean a(); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.al { void b(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.DrawableContainer$1); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable fillInStackTrace(); }
-keepclassmembers class java.lang.Throwable { java.lang.String getMessage(); }
-keepclassmembers class java.lang.Throwable { java.lang.String getLocalizedMessage(); }
-keepclassmembers class android.support.v7.widget.al { boolean c(); }
-keepclassmembers class android.support.v7.widget.al { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.al { void drawableStateChanged(); }
-keepclassmembers class android.view.KeyCharacterMap { void addCombining(int,int); }
-keepclassmembers class android.support.v4.app.w$c { void <init>(); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews applyStandardTemplate(int); }
-keepclassmembers class android.support.v4.app.w$c { android.content.Intent a(android.app.Activity); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(); }
-keepclassmembers class android.support.v7.widget.al { void setSelectorEnabled(boolean); }
-keepclassmembers class android.support.v4.app.w$c { java.lang.String a(android.content.Context,android.content.pm.ActivityInfo); }
-keepclassmembers class android.support.v4.app.w$c { boolean a(android.app.Activity,android.content.Intent); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.app.w$c { android.content.Intent b(android.app.Activity); }
-keepclassmembers class android.support.v4.app.w$c { void b(android.app.Activity,android.content.Intent); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getInternalStackTrace(); }
-keepclassmembers class android.view.KeyCharacterMap { char getNumber(int); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int,java.util.concurrent.TimeUnit$1); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109DomainHandler { void <init>(); }
-keepclassmembers class java.lang.Boolean { void <init>(boolean); }
-keepclassmembers class java.lang.Boolean { boolean booleanValue(); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Boolean); }
-keepclassmembers class java.lang.Boolean { int hashCode(); }
-keepclassmembers class java.lang.Boolean { int compare(boolean,boolean); }
-keepclassmembers class java.lang.Boolean { java.lang.String toString(); }
-keepclassmembers class android.view.KeyCharacterMap { int getKeyboardType(); }
-keepclassmembers class android.app.Notification$Builder { boolean hasThreeLines(); }
-keepclassmembers class android.view.KeyCharacterMap { int getModifierBehavior(); }
-keepclassmembers class java.lang.Boolean { java.lang.Boolean valueOf(boolean); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel,android.view.KeyCharacterMap$1); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { void <init>(java.util.Map); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable getCause(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.lang.ArrayStoreException { void <init>(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.app.Notification$Builder { void resetStandardTemplateWithActions(android.widget.RemoteViews); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { int hashCode(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean isEmpty(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { int size(); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeContentView(); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeTickerView(); }
-keepclassmembers class android.support.v4.c.a.k { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class android.support.v4.c.a.k { void <init>(android.support.v4.c.a.j$a,android.content.res.Resources); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeHeadsUpContentView(); }
-keepclassmembers class android.support.v4.c.a.k { android.graphics.drawable.Drawable a(android.graphics.drawable.Drawable$ConstantState,android.content.res.Resources); }
-keepclassmembers class android.app.Notification$Builder { boolean isLegacy(); }
-keepclassmembers class android.app.Notification$Builder { void processLegacyAction(android.app.Notification$Action,android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence processLegacyText(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { void processSmallIconAsLarge(int,android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { void processLargeLegacyIcon(android.graphics.Bitmap,android.widget.RemoteViews); }
-keepclassmembers class com.shapps.mintubeapp.CustomViews.CustomSwipeRefresh { boolean a(); }
-keepclassmembers class android.app.Notification$Builder { int resolveColor(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.util.List); }
-keepclassmembers class android.view.RenderNode { void <init>(java.lang.String,android.view.View); }
-keepclassmembers class android.view.RenderNode { android.view.HardwareCanvas start(int,int); }
-keepclassmembers class android.view.RenderNode { void destroyDisplayListData(); }
-keepclassmembers class android.view.RenderNode { boolean isValid(); }
-keepclassmembers class android.view.RenderNode { boolean hasIdentityMatrix(); }
-keepclassmembers class com.android.volley.a.c$a { void <init>(); }
-keepclassmembers class android.view.RenderNode { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.RenderNode { void getInverseMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.RenderNode { boolean setLayerType(int); }
-keepclassmembers class android.view.RenderNode { boolean setLayerPaint(android.graphics.Paint); }
-keepclassmembers class android.util.Size { void <init>(int,int); }
-keepclassmembers class android.widget.ListView { android.view.View makeAndAddView(int,int,boolean,int,boolean); }
-keepclassmembers class android.util.Size { int getWidth(); }
-keepclassmembers class android.util.Size { int getHeight(); }
-keepclassmembers class android.view.RenderNode { boolean setClipToBounds(boolean); }
-keepclassmembers class android.view.RenderNode { boolean setProjectBackwards(boolean); }
-keepclassmembers class android.view.RenderNode { boolean setProjectionReceiver(boolean); }
-keepclassmembers class android.widget.LinearLayout { int getChildrenSkipCount(android.view.View,int); }
-keepclassmembers class android.widget.LinearLayout { int measureNullChild(int); }
-keepclassmembers class org.apache.harmony.security.x501.Name { byte[] getEncoded(); }
-keepclassmembers class android.view.RenderNode { boolean setStaticMatrix(android.graphics.Matrix); }
-keepclassmembers class android.widget.LinearLayout { void measureChildBeforeLayout(android.view.View,int,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.util.List,org.apache.harmony.security.x501.Name$1); }
-keepclassmembers class android.view.RenderNode { boolean setAnimationMatrix(android.graphics.Matrix); }
-keepclassmembers class android.widget.LinearLayout { int getLocationOffset(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.util.List access$100(org.apache.harmony.security.x501.Name); }
-keepclassmembers class java.util.HashMap$KeySet { void <init>(java.util.HashMap); }
-keepclassmembers class android.widget.LinearLayout { int getNextLocationOffset(android.view.View); }
-keepclassmembers class android.view.RenderNode { boolean setAlpha(float); }
-keepclassmembers class java.util.HashMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.HashMap$KeySet { int size(); }
-keepclassmembers class android.widget.LinearLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.RenderNode { boolean setHasOverlappingRendering(boolean); }
-keepclassmembers class java.util.HashMap$KeySet { boolean isEmpty(); }
-keepclassmembers class android.view.RenderNode { boolean setElevation(float); }
-keepclassmembers class android.view.RenderNode { float getElevation(); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationX(float); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationY(float); }
-keepclassmembers class android.view.RenderNode { float getTranslationX(); }
-keepclassmembers class android.view.RenderNode { float getTranslationY(); }
-keepclassmembers class java.util.HashMap$KeySet { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.transition.ChangeBounds$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.view.RenderNode { float getTranslationZ(); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationZ(float); }
-keepclassmembers class android.view.RenderNode { boolean setRotation(float); }
-keepclassmembers class android.view.RenderNode { float getRotation(); }
-keepclassmembers class android.view.RenderNode { boolean setRotationX(float); }
-keepclassmembers class android.view.RenderNode { float getRotationX(); }
-keepclassmembers class android.graphics.Bitmap$1 { void <init>(); }
-keepclassmembers class android.os.AsyncTask$2 { void <init>(android.os.AsyncTask); }
-keepclassmembers class android.view.RenderNode { boolean setRotationY(float); }
-keepclassmembers class android.view.InputDevice$1 { void <init>(); }
-keepclassmembers class android.view.RenderNode { float getRotationY(); }
-keepclassmembers class android.view.RenderNode { boolean setScaleX(float); }
-keepclassmembers class android.os.AsyncTask$2 { java.lang.Object call(); }
-keepclassmembers class android.view.RenderNode { float getScaleX(); }
-keepclassmembers class android.view.RenderNode { boolean setScaleY(float); }
-keepclassmembers class android.view.RenderNode { boolean setPivotX(float); }
-keepclassmembers class android.view.RenderNode { float getScaleY(); }
-keepclassmembers class android.view.InputDevice$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.RenderNode { float getPivotX(); }
-keepclassmembers class android.graphics.Bitmap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.RenderNode { float getPivotY(); }
-keepclassmembers class android.view.RenderNode { boolean setPivotY(float); }
-keepclassmembers class android.view.RenderNode { boolean isPivotExplicitlySet(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$9 { void <init>(android.app.ExitTransitionCoordinator,java.util.ArrayList); }
-keepclassmembers class android.view.RenderNode { boolean setLeft(int); }
-keepclassmembers class android.view.RenderNode { boolean setRight(int); }
-keepclassmembers class android.view.RenderNode { boolean setTop(int); }
-keepclassmembers class java.nio.FileChannelImpl { void implCloseChannel(); }
-keepclassmembers class android.os.Parcel$1 { void <init>(); }
-keepclassmembers class android.view.RenderNode { boolean setBottom(int); }
-keepclassmembers class android.view.RenderNode { boolean setLeftTopRightBottom(int,int,int,int); }
-keepclassmembers class android.view.RenderNode { boolean offsetLeftAndRight(int); }
-keepclassmembers class android.widget.ListView { boolean canAnimate(); }
-keepclassmembers class android.view.RenderNode { boolean offsetTopAndBottom(int); }
-keepclassmembers class android.widget.ListView { void setSelection(int); }
-keepclassmembers class android.animation.LayoutTransition$3 { void <init>(android.animation.LayoutTransition,android.animation.Animator,int,long,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.widget.LinearLayout { void setOrientation(int); }
-keepclassmembers class android.widget.LinearLayout { int getOrientation(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification getNotification(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$3 { void <init>(com.shapps.mintubeapp.MainActivity); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification build(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification buildInto(android.app.Notification); }
-keepclassmembers class android.app.Notification$Builder { int getBaseLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { int getBigBaseLayoutResource(); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.ListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.app.Notification$Builder { int getBigPictureLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { int getBigTextLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { int getInboxLayoutResource(); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.ListView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.app.Notification$Builder { int getActionLayoutResource(); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean,boolean); }
-keepclassmembers class android.app.Notification$Builder { int getActionTombstoneLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { int access$302(android.app.Notification$Builder,int); }
-keepclassmembers class android.widget.ListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$600(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews access$700(android.app.Notification$Builder,int); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$602(android.app.Notification$Builder,java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$800(android.app.Notification$Builder); }
-keepclassmembers class android.widget.RemoteViews$SetPendingIntentTemplate { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$900(android.app.Notification$Builder,java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { boolean access$1100(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { android.content.Context access$1000(android.app.Notification$Builder); }
-keepclassmembers class android.widget.RemoteViews$SetPendingIntentTemplate { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.Bitmap access$1200(android.app.Notification$Builder); }
-keepclassmembers class java.lang.reflect.Constructor { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.Bitmap access$1202(android.app.Notification$Builder,android.graphics.Bitmap); }
-keepclassmembers class java.lang.reflect.Constructor { int getModifiers(); }
-keepclassmembers class android.app.Notification$Builder { int access$1300(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { boolean access$1500(android.app.Notification$Builder,android.widget.RemoteViews,int); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$1400(android.app.Notification$Builder); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class[] getExceptionTypes(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.app.Notification$Builder { void access$1600(android.app.Notification$Builder,android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class java.lang.reflect.Constructor { int hashCode(); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$1402(android.app.Notification$Builder,java.lang.CharSequence); }
-keepclassmembers class java.lang.reflect.Constructor { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.Notification$Builder { int access$1700(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { java.util.ArrayList access$1900(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { void access$1800(android.app.Notification$Builder,android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { int access$2000(android.app.Notification$Builder); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Object newInstance(java.lang.Object[]); }
-keepclassmembers class android.support.v4.e.d$b { void <init>(); }
-keepclassmembers class android.support.v4.e.d$b { int a(java.util.Locale); }
-keepclassmembers class android.support.v4.e.d$b { void <init>(android.support.v4.e.d$1); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void <init>(android.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.app.Fragment); }
-keepclassmembers class org.apache.http.impl.io.SocketInputBuffer { boolean isStale(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.lang.ArithmeticException { void <init>(java.lang.String); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(android.os.StrictMode$ThreadSpanState); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { boolean canApplyTheme(); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1800(android.os.StrictMode$Span); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1902(android.os.StrictMode$Span,java.lang.String); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <init>(); }
-keepclassmembers class android.os.StrictMode$Span { long access$2002(android.os.StrictMode$Span,long); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1802(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$2102(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1900(android.os.StrictMode$Span); }
-keepclassmembers class android.media.AudioAttributes$Builder { android.media.AudioAttributes$Builder setContentType(int); }
-keepclassmembers class android.media.AudioAttributes$Builder { android.media.AudioAttributes$Builder setUsage(int); }
-keepclassmembers class android.widget.ListView { boolean arrowScroll(int); }
-keepclassmembers class android.app.RemoteInput { void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],int,android.os.Bundle); }
-keepclassmembers class android.widget.ListView { boolean arrowScrollImpl(int); }
-keepclassmembers class android.app.RemoteInput { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntry { void <init>(); }
-keepclassmembers class android.app.RemoteInput { void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],int,android.os.Bundle,android.app.RemoteInput$1); }
-keepclassmembers class org.json.JSONStringer$Scope { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.TextView$Drawables { void updateDrawablesLayoutDirection(int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry,java.util.LinkedHashMap$LinkedEntry,java.util.LinkedHashMap$LinkedEntry); }
-keepclassmembers class android.widget.TextView$Drawables { void resolveWithLayoutDirection(int); }
-keepclassmembers class java.util.TreeMap$Relation { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Map$Entry eldest(); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int,float,boolean); }
-keepclassmembers class android.widget.TextView$Drawables { void applyErrorDrawableIfNeeded(int); }
-keepclassmembers class android.graphics.Path$Direction { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.widget.ListView { int getArrowScrollPreviewLength(); }
-keepclassmembers class android.support.v7.widget.bd { boolean a(android.view.View); }
-keepclassmembers class org.apache.http.conn.routing.BasicRouteDirector { int firstStep(org.apache.http.conn.routing.RouteInfo); }
-keepclassmembers class org.apache.http.conn.routing.BasicRouteDirector { int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo); }
-keepclassmembers class org.apache.http.conn.routing.BasicRouteDirector { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap { void clear(); }
-keepclassmembers class com.android.volley.a.j { void <init>(com.android.volley.a.b,int); }
-keepclassmembers class com.android.volley.a.j { void close(); }
-keepclassmembers class com.android.volley.a.j { void write(byte[],int,int); }
-keepclassmembers class java.util.LinkedHashMap { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class android.support.v7.widget.ak$e { void <init>(android.support.v7.widget.ak); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(android.graphics.drawable.VectorDrawable$VPath); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(); }
-keepclassmembers class android.support.v7.widget.ak$e { void <init>(android.support.v7.widget.ak,android.support.v7.widget.ak$1); }
-keepclassmembers class android.support.v7.widget.ak$e { void onScroll(android.widget.AbsListView,int,int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void toPath(android.graphics.Path); }
-keepclassmembers class android.support.v7.widget.ak$e { void onScrollStateChanged(android.widget.AbsListView,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { java.lang.String getPathName(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { boolean isClipPath(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { void <init>(java.util.Map$Entry); }
-keepclassmembers class java.nio.charset.UnmappableCharacterException { void <init>(int); }
-keepclassmembers class android.support.v4.widget.l { void a(int,int); }
-keepclassmembers class android.support.v4.widget.l { void <init>(android.widget.ListView); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { java.lang.Object getKey(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { java.lang.Object getValue(); }
-keepclassmembers class android.support.v4.widget.l { boolean e(int); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onReadFromDisk(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { int getPolicyMask(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onWriteToDisk(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onNetwork(); }
-keepclassmembers class android.view.Choreographer$1 { void <init>(); }
-keepclassmembers class java.math.BigInt { void <init>(); }
-keepclassmembers class android.view.Choreographer$1 { java.lang.Object initialValue(); }
-keepclassmembers class java.math.BigInt { long getNativeBIGNUM(); }
-keepclassmembers class java.math.BigInt { int cmp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { char[] access$000(android.text.method.QwertyKeyListener$Replaced); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { void <init>(char[]); }
-keepclassmembers class java.math.BigInt { void putCopy(java.math.BigInt); }
-keepclassmembers class java.math.BigInt { void putLongInt(long); }
-keepclassmembers class java.math.BigInt { void putULongInt(long,boolean); }
-keepclassmembers class android.graphics.FontListParser$Alias { void <init>(); }
-keepclassmembers class java.math.BigInt { void putDecString(java.lang.String); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { boolean containsHeader(java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$1 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.Header[] getHeaders(java.lang.String); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void <init>(); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.Header getFirstHeader(java.lang.String); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.Header[] getAllHeaders(); }
-keepclassmembers class java.math.BigInt { void putLittleEndianInts(int[],boolean); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void addHeader(org.apache.http.Header); }
-keepclassmembers class java.math.BigInt { void putBigEndianTwosComplement(byte[]); }
-keepclassmembers class java.math.BigInt { long longInt(); }
-keepclassmembers class java.math.BigInt { java.lang.String decString(); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String); }
-keepclassmembers class java.math.BigInt { int[] littleEndianIntsMagnitude(); }
-keepclassmembers class java.math.BigInt { int sign(); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.math.BigInt { void setSign(int); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.Throwable); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void setHeaders(org.apache.http.Header[]); }
-keepclassmembers class java.math.BigInt { int bitLength(); }
-keepclassmembers class java.math.BigInt { boolean isBitSet(int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt shift(java.math.BigInt,int); }
-keepclassmembers class java.math.BigInt { void shift(int); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.HeaderIterator headerIterator(); }
-keepclassmembers class java.lang.LinkageError { void <init>(); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.HeaderIterator headerIterator(java.lang.String); }
-keepclassmembers class java.lang.LinkageError { void <init>(java.lang.String); }
-keepclassmembers class java.math.BigInt { void multiplyByPositiveInt(int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt addition(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class android.support.v4.g.v { float a(android.view.MotionEvent,int); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[][] internalZoneStrings(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt product(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { java.math.BigInt bigExp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { void division(java.math.BigInt,java.math.BigInt,java.math.BigInt,java.math.BigInt); }
-keepclassmembers class libcore.reflect.AnnotationMember { libcore.reflect.AnnotationMember setDefinition(libcore.reflect.AnnotationMember); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.text.DateFormatSymbols { boolean timeZoneStringsEqual(java.text.DateFormatSymbols,java.text.DateFormatSymbols); }
-keepclassmembers class android.os.Parcel { int dataSize(); }
-keepclassmembers class android.os.Parcel { int dataAvail(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$c { void <init>(int,int); }
-keepclassmembers class android.os.Parcel { int dataPosition(); }
-keepclassmembers class android.os.Parcel { void setDataPosition(int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$c { void <init>(android.support.v7.widget.ActionMenuView$c); }
-keepclassmembers class android.os.Parcel { boolean pushAllowFds(boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$c { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.app.Notification$1 { void <init>(); }
-keepclassmembers class android.os.Parcel { void restoreAllowFds(boolean); }
-keepclassmembers class android.os.Parcel { boolean hasFileDescriptors(); }
-keepclassmembers class android.os.Parcel { void appendFrom(android.os.Parcel,int,int); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[],int,int); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[]); }
-keepclassmembers class android.os.Parcel { void writeInterfaceToken(java.lang.String); }
-keepclassmembers class android.widget.ListView { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.os.Parcel { void writeInt(int); }
-keepclassmembers class android.os.Parcel { void writeLong(long); }
-keepclassmembers class android.widget.ListView { void drawDivider(android.graphics.Canvas,android.graphics.Rect,int); }
-keepclassmembers class android.os.Parcel { void writeFloat(float); }
-keepclassmembers class android.os.Parcel { void writeDouble(double); }
-keepclassmembers class android.os.Parcel { void writeString(java.lang.String); }
-keepclassmembers class android.widget.ListView { android.graphics.drawable.Drawable getDivider(); }
-keepclassmembers class android.net.Uri$PathPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Parcel { void writeCharSequence(java.lang.CharSequence); }
-keepclassmembers class android.widget.ListView { void setDivider(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ListView { int getDividerHeight(); }
-keepclassmembers class android.os.Parcel { void writeStrongBinder(android.os.IBinder); }
-keepclassmembers class android.widget.ListView { void setDividerHeight(int); }
-keepclassmembers class android.os.Parcel { void writeMap(java.util.Map); }
-keepclassmembers class android.widget.ListView { void setOverscrollHeader(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.Parcel { void writeByte(byte); }
-keepclassmembers class android.widget.ListView { void setOverscrollFooter(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.Parcel { void writeBundle(android.os.Bundle); }
-keepclassmembers class android.os.Parcel { void writePersistableBundle(android.os.PersistableBundle); }
-keepclassmembers class android.os.Parcel { void writeSize(android.util.Size); }
-keepclassmembers class android.os.Parcel { void writeSizeF(android.util.SizeF); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart fromEncoded(java.lang.String); }
-keepclassmembers class org.apache.http.protocol.RequestConnControl { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void <init>(); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart fromDecoded(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.ListView { android.view.View findViewTraversal(int); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.os.Trace$1 { void <init>(); }
-keepclassmembers class android.os.Trace$1 { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.graphics.Point { void <init>(); }
-keepclassmembers class android.view.animation.BounceInterpolator { void <init>(); }
-keepclassmembers class android.support.v7.a.q$3 { void <init>(android.support.v7.a.q); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { boolean hasBufferedData(); }
-keepclassmembers class android.util.ArrayMap { void <init>(); }
-keepclassmembers class android.util.ArrayMap { void <init>(int); }
-keepclassmembers class android.util.ArrayMap { void <init>(boolean); }
-keepclassmembers class android.util.ArrayMap { void clear(); }
-keepclassmembers class android.util.ArrayMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.widget.ListView { android.widget.Adapter getAdapter(); }
-keepclassmembers class android.util.ArrayMap { void <init>(android.util.ArrayMap); }
-keepclassmembers class android.util.ArrayMap { int indexOfKey(java.lang.Object); }
-keepclassmembers class java.io.OptionalDataException { void <init>(); }
-keepclassmembers class android.util.ArrayMap { boolean containsValue(java.lang.Object); }
-keepclassmembers class java.nio.ByteBuffer { void <init>(int,long); }
-keepclassmembers class java.nio.ByteBuffer { int arrayOffset(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { org.apache.http.io.HttpTransportMetrics getMetrics(); }
-keepclassmembers class android.util.ArrayMap { boolean isEmpty(); }
-keepclassmembers class android.os.Parcel { void writeParcelable(android.os.Parcelable,int); }
-keepclassmembers class java.nio.ByteBuffer { byte[] array(); }
-keepclassmembers class android.os.Parcel { void readException(); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void k(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void l(); }
-keepclassmembers class android.webkit.WebViewClient { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { int getPolicy(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void m(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void n(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void o(); }
-keepclassmembers class android.os.Parcel { int readInt(); }
-keepclassmembers class android.os.Parcel { float readFloat(); }
-keepclassmembers class android.os.Parcel { long readLong(); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object get(int); }
-keepclassmembers class android.os.Parcel { java.lang.String readString(); }
-keepclassmembers class android.os.Parcel { double readDouble(); }
-keepclassmembers class android.os.Parcel { android.os.IBinder readStrongBinder(); }
-keepclassmembers class android.os.Parcel { android.os.Bundle readBundle(); }
-keepclassmembers class android.os.Parcel { byte[] createByteArray(); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(); }
-keepclassmembers class android.view.ViewGroup$3 { void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class java.util.Arrays$ArrayList { int size(); }
-keepclassmembers class android.view.ViewGroup$3 { void <init>(android.view.ViewGroup); }
-keepclassmembers class android.view.ViewGroup$3 { void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.util.ArrayMap { java.util.Set keySet(); }
-keepclassmembers class android.util.ArrayMap { int size(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.util.ArrayMap { boolean retainAll(java.util.Collection); }
-keepclassmembers class android.os.StrictMode$9 { java.lang.Object create(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getCapacity(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class dalvik.system.BlockGuard$2 { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$2 { dalvik.system.BlockGuard$Policy initialValue(); }
-keepclassmembers class android.os.StrictMode$9 { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$2 { java.lang.Object initialValue(); }
-keepclassmembers class android.view.View$BaseSavedState$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChildCount(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable[] getChildren(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onStopNestedScroll(android.view.View); }
-keepclassmembers class java.util.TreeMap { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setVariablePadding(boolean); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.Comparator); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onWindowVisibilityChanged(int); }
-keepclassmembers class java.util.TreeMap { int size(); }
-keepclassmembers class java.util.TreeMap { boolean isEmpty(); }
-keepclassmembers class java.util.TreeMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.TreeMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.aa { void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isConstantSize(); }
-keepclassmembers class java.util.TreeMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setConstantSize(boolean); }
-keepclassmembers class android.text.PackedIntVector { int width(); }
-keepclassmembers class java.util.TreeMap { java.lang.Object putInternal(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantWidth(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantHeight(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumWidth(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumHeight(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setExitFadeDuration(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setEnterFadeDuration(int); }
-keepclassmembers class java.util.LinkedList$LinkIterator { boolean hasNext(); }
-keepclassmembers class java.util.LinkedList$LinkIterator { boolean hasPrevious(); }
-keepclassmembers class android.os.Parcel { void <init>(long); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { void <init>(java.util.TreeMap$EntrySet,java.util.TreeMap$Node); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node findByObject(java.lang.Object); }
-keepclassmembers class android.os.Parcel { void freeBuffer(); }
-keepclassmembers class android.os.PersistableBundle { void <init>(); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { java.util.Map$Entry next(); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { java.lang.Object next(); }
-keepclassmembers class android.os.PersistableBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class java.text.RuleBasedBreakIterator { int following(int); }
-keepclassmembers class java.text.RuleBasedBreakIterator { void <init>(libcore.icu.NativeBreakIterator); }
-keepclassmembers class java.util.TreeMap { void replaceInParent(java.util.TreeMap$Node,java.util.TreeMap$Node); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void access$000(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class java.text.RuleBasedBreakIterator { boolean isBoundary(int); }
-keepclassmembers class java.text.RuleBasedBreakIterator { int preceding(int); }
-keepclassmembers class android.os.PersistableBundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.RemoteViews$ActionException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void <init>(java.math.BigInteger,java.util.Date,org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class android.content.res.Configuration$1 { void <init>(); }
-keepclassmembers class android.support.v4.c.a.j$b { void <init>(android.support.v4.c.a.j$a,android.content.res.Resources); }
-keepclassmembers class android.net.Uri$StringUri { int findSchemeSeparator(); }
-keepclassmembers class android.net.Uri$StringUri { int findFragmentSeparator(); }
-keepclassmembers class android.net.Uri$StringUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.http.message.BasicHeader { java.lang.String getValue(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getScheme(); }
-keepclassmembers class org.apache.http.message.BasicHeader { java.lang.String getName(); }
-keepclassmembers class org.apache.http.message.BasicHeader { java.lang.String toString(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseScheme(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getSsp(); }
-keepclassmembers class java.net.ProxySelectorImpl { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class java.net.ProxySelectorImpl { java.util.List select(java.net.URI); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getAuthorityPart(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getEncodedAuthority(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$PathPart getPathPart(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getQueryPart(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getAuthority(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { java.math.BigInteger access$000(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { java.util.Date access$100(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class android.support.v7.widget.aj$a { void <init>(int,int); }
-keepclassmembers class java.net.ProxySelectorImpl { int getSystemPropertyInt(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { org.apache.harmony.security.x509.Extensions access$200(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getFragmentPart(); }
-keepclassmembers class com.android.internal.view.menu.ActionMenuItem { void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.aj$a { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.Region$Op { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String,android.net.Uri$1); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { void <init>(long); }
-keepclassmembers class org.apache.harmony.security.x509.X509PublicKey { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { void consumeContent(); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { boolean isRepeatable(); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { boolean eofDetected(java.io.InputStream); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { boolean streamClosed(java.io.InputStream); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { boolean streamAbort(java.io.InputStream); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { void releaseManagedConnection(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { int a(int,int); }
-keepclassmembers class android.support.v4.app.x { java.lang.String a(android.content.pm.ActivityInfo); }
-keepclassmembers class android.support.v4.app.x { android.content.Intent a(android.app.Activity); }
-keepclassmembers class android.support.v4.app.x { void b(android.app.Activity,android.content.Intent); }
-keepclassmembers class org.apache.http.impl.auth.RFC2617Scheme { void <init>(); }
-keepclassmembers class android.support.v4.c.a.a$f { void <init>(); }
-keepclassmembers class java.util.logging.Logger { void setLevel(java.util.logging.Level); }
-keepclassmembers class java.util.logging.Logger { boolean getUseParentHandlers(); }
-keepclassmembers class android.support.v4.c.a.a$f { android.graphics.drawable.Drawable c(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.c.a.a$f { void a(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v4.app.x { boolean a(android.app.Activity,android.content.Intent); }
-keepclassmembers class java.util.concurrent.FutureTask$WaitNode { void <init>(); }
-keepclassmembers class android.support.v4.g.s$d { void <init>(); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getParent(); }
-keepclassmembers class java.util.logging.Logger { java.lang.String getName(); }
-keepclassmembers class java.net.ServerSocket { void <init>(int); }
-keepclassmembers class android.support.v4.g.s$d { float e(android.view.MotionEvent,int); }
-keepclassmembers class java.util.logging.Logger { boolean internalIsLoggable(java.util.logging.Level); }
-keepclassmembers class java.util.logging.Logger { boolean isLoggable(java.util.logging.Level); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { android.support.design.widget.h getImpl(); }
-keepclassmembers class java.util.logging.Logger { void setResourceBundle(java.util.logging.LogRecord); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void drawableStateChanged(); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(int,boolean); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void <init>(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { int getSizeDimension(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView); }
-keepclassmembers class java.net.ServerSocket { void readBackBindState(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void onAttachedToWindow(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { byte[] getEncoded(); }
-keepclassmembers class android.text.TextDirectionHeuristics { int isRtlText(int); }
-keepclassmembers class android.text.TextDirectionHeuristics { int access$100(int); }
-keepclassmembers class android.text.TextDirectionHeuristics { int isRtlTextOrFormat(int); }
-keepclassmembers class java.net.ServerSocket { void close(); }
-keepclassmembers class android.text.TextDirectionHeuristics { int access$200(int); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { boolean isResponseAvailable(int); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void setVisibility(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void <init>(int); }
-keepclassmembers class java.net.ServerSocket { int getLocalPort(); }
-keepclassmembers class java.net.ServerSocket { void implAccept(java.net.Socket); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList remove(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class com.android.volley.d$a { void <init>(com.android.volley.d,com.android.volley.h,com.android.volley.j,java.lang.Runnable); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void <init>(int,int); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView,android.widget.TextView$1); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { boolean checkTag(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void doFlush(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void flush(); }
-keepclassmembers class android.support.v7.a.k { int a(android.support.v7.a.k); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getRecordCount(); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { void <init>(); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String); }
-keepclassmembers class java.net.URLStreamHandler { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { boolean canApplyTheme(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getEventType(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getContentChangeTypes(); }
-keepclassmembers class android.support.v7.a.k { void a(int,android.support.v7.a.k$d,android.view.Menu); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { java.util.Collection getSubjectAlternativeNames(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setContentChangeTypes(int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setEventType(int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setPackageName(java.lang.CharSequence); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { long getContext(); }
-keepclassmembers class java.net.ServerSocket { boolean isBound(); }
-keepclassmembers class java.net.ServerSocket { boolean isClosed(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(int); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[]); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[],java.lang.String); }
-keepclassmembers class android.support.v4.c.a.c { void a(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.NinePatch { void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.graphics.NinePatch { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class android.support.v7.a.k { void a(android.support.v7.a.k,int); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String toExternalForm(java.net.URL); }
-keepclassmembers class android.graphics.NinePatch { void drawSoftware(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class java.net.URLStreamHandler { boolean equals(java.net.URL,java.net.URL); }
-keepclassmembers class android.graphics.NinePatch { int getDensity(); }
-keepclassmembers class android.graphics.NinePatch { int getWidth(); }
-keepclassmembers class android.graphics.NinePatch { int getHeight(); }
-keepclassmembers class java.net.URLStreamHandler { int hashCode(java.net.URL); }
-keepclassmembers class java.net.URLStreamHandler { boolean hostsEqual(java.net.URL,java.net.URL); }
-keepclassmembers class android.graphics.NinePatch { boolean hasAlpha(); }
-keepclassmembers class java.net.URLStreamHandler { boolean sameFile(java.net.URL,java.net.URL); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { void <init>(); }
-keepclassmembers class android.support.v7.a.k$d { void <init>(int); }
-keepclassmembers class android.transition.Transition$TransitionListenerAdapter { void <init>(); }
-keepclassmembers class java.util.logging.Logger { void access$100(java.util.logging.Logger,java.util.logging.LogRecord); }
-keepclassmembers class android.support.v7.a.k { boolean a(android.support.v7.a.k,boolean); }
-keepclassmembers class java.util.logging.Logger { java.lang.String access$000(java.util.logging.Logger); }
-keepclassmembers class android.support.v7.a.k { void b(android.support.v7.view.menu.f); }
-keepclassmembers class android.support.v4.g.a.a$b { void <init>(); }
-keepclassmembers class android.support.v7.a.k { int b(android.support.v7.a.k,int); }
-keepclassmembers class android.support.v4.g.a.a$b { int a(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.g.a.a$b { void a(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class android.support.v7.a.k$d { void a(android.support.v7.view.menu.f); }
-keepclassmembers class com.android.volley.h$1 { void <init>(com.android.volley.h,java.lang.String,long); }
-keepclassmembers class com.android.volley.h$1 { void run(); }
-keepclassmembers class android.support.v7.a.k$d { boolean a(); }
-keepclassmembers class android.support.design.widget.Snackbar { android.support.design.widget.Snackbar a(int); }
-keepclassmembers class android.support.design.widget.Snackbar { android.support.design.widget.Snackbar a(java.lang.CharSequence); }
-keepclassmembers class android.support.design.widget.Snackbar { void b(); }
-keepclassmembers class android.support.design.widget.Snackbar { android.view.View a(); }
-keepclassmembers class java.lang.Integer { void <init>(int); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Integer); }
-keepclassmembers class java.lang.Integer { int compare(int,int); }
-keepclassmembers class android.support.v4.g.u { int a(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Canvas$CanvasFinalizer { void <init>(long); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <init>(boolean); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float,float); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { void <init>(java.lang.String,int); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { float getFloatValue(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void signalNotFull(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { java.lang.Object getValue(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void signalNotEmpty(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void enqueue(java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <init>(java.lang.String,libcore.icu.LocaleData); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class android.support.v7.widget.aj { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyLock(); }
-keepclassmembers class android.support.v7.a.k { void c(int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object dequeue(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyUnlock(); }
-keepclassmembers class android.support.v7.widget.aj { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.Integer { int hashCode(); }
-keepclassmembers class java.lang.Integer { int intValue(); }
-keepclassmembers class android.support.v7.a.k { void d(android.support.v7.a.k,int); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { int size(); }
-keepclassmembers class org.apache.http.impl.auth.AuthSchemeBase { void <init>(); }
-keepclassmembers class org.apache.http.auth.MalformedChallengeException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Integer { java.lang.String toHexString(int); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(); }
-keepclassmembers class android.widget.RemoteViews { void configureRemoteViewsAsChild(android.widget.RemoteViews); }
-keepclassmembers class android.widget.RemoteViews { void setNotRoot(); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(int); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(java.lang.String); }
-keepclassmembers class java.lang.NoSuchFieldError { void <init>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setDecimalFormatSymbols(libcore.icu.LocaleData); }
-keepclassmembers class android.widget.RemoteViews { boolean hasLandscapeAndPortraitLayouts(); }
-keepclassmembers class org.apache.http.impl.auth.BasicSchemeFactory { void <init>(); }
-keepclassmembers class android.widget.RemoteViews { void <init>(java.lang.String,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatBigDecimal(java.math.BigDecimal,java.text.FieldPosition); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatBigInteger(java.math.BigInteger,java.text.FieldPosition); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object take(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawHorizontalTrack(boolean); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawVerticalTrack(boolean); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setParameters(int,int,int,boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatLong(long,java.text.FieldPosition); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDouble(double,java.text.FieldPosition); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.os.Parcel); }
-keepclassmembers class sun.misc.Unsafe { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpecFactory { void <init>(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void unlink(java.util.concurrent.LinkedBlockingQueue$Node,java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPattern(java.lang.String); }
-keepclassmembers class sun.misc.Unsafe { void park(boolean,long); }
-keepclassmembers class android.widget.ScrollBarDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void updateFieldPosition(java.text.FieldPosition,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class org.apache.http.impl.auth.AuthSchemeBase { boolean isProxy(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean remove(java.lang.Object); }
-keepclassmembers class android.widget.ScrollBarDrawable { void drawTrack(android.graphics.Canvas,android.graphics.Rect,boolean); }
-keepclassmembers class android.support.v4.g.a.b { void a(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class android.support.v7.a.k { void r(); }
-keepclassmembers class android.support.v4.g.a.b { int a(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String toPattern(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.Number parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.support.v7.widget.aj { int getChildrenSkipCount(android.view.View,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMaximumFractionDigits(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMinimumFractionDigits(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.RemoteViews { java.lang.String getPackage(); }
-keepclassmembers class android.support.v7.widget.aj { int getLocationOffset(android.view.View); }
-keepclassmembers class android.support.v7.widget.aj { int getDividerWidth(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getGroupingSize(); }
-keepclassmembers class android.support.v7.widget.aj { int getNextLocationOffset(android.view.View); }
-keepclassmembers class android.widget.RemoteViews { int getLayoutId(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getNegativePrefix(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMultiplier(); }
-keepclassmembers class android.support.v7.widget.aj { android.view.View getVirtualChildAt(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { int getSize(boolean); }
-keepclassmembers class android.support.v7.widget.aj { int getVirtualChildCount(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getPositivePrefix(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getPositiveSuffix(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getNegativeSuffix(); }
-keepclassmembers class android.widget.ScrollBarDrawable { android.widget.ScrollBarDrawable mutate(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isDecimalSeparatorAlwaysShown(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlpha(int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isParseBigDecimal(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isParseIntegerOnly(); }
-keepclassmembers class android.widget.RemoteViews { int estimateMemoryUsage(); }
-keepclassmembers class android.support.design.widget.Snackbar$3 { void <init>(android.support.design.widget.Snackbar); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isGroupingUsed(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setGroupingUsed(boolean); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { void <init>(java.util.Collections$UnmodifiableCollection); }
-keepclassmembers class android.support.v7.widget.s$1 { void <init>(java.lang.reflect.Field,android.widget.PopupWindow,android.view.ViewTreeObserver$OnScrollChangedListener); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { boolean hasNext(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { java.lang.Object next(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class org.apache.http.impl.entity.LaxContentLengthStrategy { void <init>(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <init>(); }
-keepclassmembers class android.support.v7.widget.aj { void measureChildBeforeLayout(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.widget.TextView$3 { void <init>(android.widget.TextView); }
-keepclassmembers class android.widget.TextView$3 { void run(); }
-keepclassmembers class java.lang.Number { void <init>(); }
-keepclassmembers class android.widget.AbsListView$1 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class java.util.Collections$SingletonList { void <init>(java.lang.Object); }
-keepclassmembers class org.json.JSONStringer { java.lang.String toString(); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int,int); }
-keepclassmembers class java.util.Collections$SingletonList { int size(); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int); }
-keepclassmembers class android.text.Selection { void extendSelection(android.text.Spannable,int); }
-keepclassmembers class android.text.Selection { void removeSelection(android.text.Spannable); }
-keepclassmembers class android.text.style.CharacterStyle { void <init>(); }
-keepclassmembers class java.io.FileNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class java.security.cert.CertificateEncodingException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController$3 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class java.lang.ThreadLocal$Values { java.lang.Object[] access$000(java.lang.ThreadLocal$Values); }
-keepclassmembers class android.text.Selection { boolean moveRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean moveLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.support.v7.a.k { void a(int,android.view.Menu); }
-keepclassmembers class java.lang.ThreadLocal$Values { int access$100(java.lang.ThreadLocal$Values); }
-keepclassmembers class android.support.v7.widget.o { void drawableStateChanged(); }
-keepclassmembers class android.text.Selection { boolean extendLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.support.v7.a.k { void a(android.support.v7.view.menu.f); }
-keepclassmembers class android.support.design.widget.u$c { void <init>(); }
-keepclassmembers class android.text.Selection { boolean extendRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.widget.RemoteViews { int getSequenceNumber(); }
-keepclassmembers class android.support.design.widget.u$c { void <init>(android.support.design.widget.u$1); }
-keepclassmembers class android.support.design.widget.u$c { void a(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.v7.a.p$a { void <init>(android.support.v7.a.p$1); }
-keepclassmembers class android.support.v7.a.p$a { void <init>(); }
-keepclassmembers class android.text.Selection { boolean extendToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean moveToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean moveToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean extendToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean moveToPreceding(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class android.text.Selection { boolean moveToFollowing(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void hide(); }
-keepclassmembers class android.support.v7.a.k { void a(android.view.ViewGroup); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(float); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(); }
-keepclassmembers class android.support.v7.a.k { boolean a(android.support.v7.view.menu.f,android.view.MenuItem); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void <init>(); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void tag(java.io.FileDescriptor); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void untag(java.io.FileDescriptor); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { boolean isShowing(); }
-keepclassmembers class android.support.v4.app.ab$i { void <init>(); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView); }
-keepclassmembers class android.widget.ListView$FocusSelector { android.widget.ListView$FocusSelector setup(int,int); }
-keepclassmembers class java.util.AbstractList { void <init>(); }
-keepclassmembers class android.widget.RemoteViews { android.widget.RemoteViews$BitmapCache access$400(android.widget.RemoteViews); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView,android.widget.ListView$1); }
-keepclassmembers class java.util.AbstractList { boolean add(java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews { void access$600(android.widget.RemoteViews,android.widget.RemoteViews); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache,android.widget.RemoteViews$1); }
-keepclassmembers class android.widget.RemoteViews { void access$800(android.widget.RemoteViews,android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class android.support.v7.widget.aj { int measureNullChild(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { java.lang.Object getTargetByName(java.lang.String); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(); }
-keepclassmembers class android.support.v7.a.k { void b(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.v7.a.k { boolean b(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.a.k { boolean b(int,android.view.Menu); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <init>(java.lang.String,java.lang.String,byte[]); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1600(android.view.View$TransformationInfo); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <init>(java.lang.String,java.lang.String,byte[],org.apache.harmony.security.x509.EDIPartyName$1); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { java.lang.String access$100(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1700(android.view.View$TransformationInfo); }
-keepclassmembers class android.support.v7.a.k { void e(); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1702(android.view.View$TransformationInfo,android.graphics.Matrix); }
-keepclassmembers class java.security.MessageDigestSpi { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { java.lang.String access$200(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class java.beans.PropertyChangeEvent { void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void <init>(); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.Object getOldValue(); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.String getPropertyName(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.Object getNewValue(); }
-keepclassmembers class android.view.View$1 { void <init>(android.view.View,java.lang.String); }
-keepclassmembers class java.util.ConcurrentModificationException { void <init>(); }
-keepclassmembers class android.util.StateSet { boolean isWildCard(int[]); }
-keepclassmembers class android.support.v7.widget.aj { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.aj { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor$1 { void <init>(android.os.AsyncTask$SerialExecutor,java.lang.Runnable); }
-keepclassmembers class android.support.v7.widget.aj { void onMeasure(int,int); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor$1 { void run(); }
-keepclassmembers class android.support.v7.widget.aj { void setBaselineAligned(boolean); }
-keepclassmembers class android.support.v7.widget.aj { void setDividerDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void <init>(); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class android.support.v7.widget.aj { void setOrientation(int); }
-keepclassmembers class android.app.ActivityOptions { void <init>(); }
-keepclassmembers class android.support.v4.g.s { int a(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v7.widget.aj { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.support.v4.g.s { float c(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v4.g.s { int b(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v4.g.s { float d(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v4.g.s { int d(android.view.MotionEvent); }
-keepclassmembers class android.app.ActivityOptions { int getAnimationType(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAllowCaching(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean needMirroring(); }
-keepclassmembers class android.support.v4.g.s { float e(android.view.MotionEvent,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.app.ActivityOptions { int getExitCoordinatorKey(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState,android.graphics.drawable.VectorDrawable$1); }
-keepclassmembers class android.support.v4.c.a.a$c { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int access$800(int,float); }
-keepclassmembers class android.support.v4.c.a.a$c { android.graphics.drawable.Drawable c(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees,byte[]); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean,android.text.TextDirectionHeuristics$1); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { boolean defaultIsRtl(); }
-keepclassmembers class java.util.Hashtable$Values { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class java.util.Hashtable$Values { void <init>(java.util.Hashtable); }
-keepclassmembers class android.os.StrictMode$8 { void <init>(); }
-keepclassmembers class android.os.Trace { void traceBegin(long,java.lang.String); }
-keepclassmembers class android.os.Trace { void traceEnd(long); }
-keepclassmembers class android.os.Trace { void asyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees,byte[],org.apache.harmony.security.x509.NameConstraints$1); }
-keepclassmembers class android.os.StrictMode$8 { java.lang.Object initialValue(); }
-keepclassmembers class android.view.ViewGroupOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.support.v4.widget.aa$a { void <init>(); }
-keepclassmembers class android.view.ViewGroupOverlay { void add(android.view.View); }
-keepclassmembers class android.os.Trace { void asyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class android.transition.Transition$1 { void <init>(); }
-keepclassmembers class android.widget.ImageView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { void <init>(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$a { void <init>(); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.ImageView { boolean hasOverlappingRendering(); }
-keepclassmembers class org.apache.http.protocol.RequestContent { void <init>(); }
-keepclassmembers class android.widget.ImageView { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.ImageView { void setAdjustViewBounds(boolean); }
-keepclassmembers class android.widget.ImageView { void setMaxWidth(int); }
-keepclassmembers class android.widget.ImageView { void setMaxHeight(int); }
-keepclassmembers class android.widget.ImageView { android.graphics.drawable.Drawable getDrawable(); }
-keepclassmembers class org.apache.http.client.methods.HttpGet { void <init>(java.net.URI); }
-keepclassmembers class org.apache.http.client.methods.HttpGet { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView$Marquee$2 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class android.widget.ImageView { void setImageDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { boolean canApplyTheme(); }
-keepclassmembers class android.view.InputDevice { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class android.widget.ImageView { void setSelected(boolean); }
-keepclassmembers class android.widget.ImageView { void applyImageTint(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.view.g { android.content.Context a(android.support.v7.view.g); }
-keepclassmembers class java.util.WeakHashMap$Entry { void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class org.apache.http.impl.conn.IdleConnectionHandler$TimeValues { long access$000(org.apache.http.impl.conn.IdleConnectionHandler$TimeValues); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(java.util.List,byte[]); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel,android.view.InputDevice$1); }
-keepclassmembers class android.widget.ImageView { void resizeFromDrawable(); }
-keepclassmembers class android.widget.ImageView { void updateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.g.b$1 { void <init>(android.support.v4.g.b$a); }
-keepclassmembers class java.util.HashMap { void init(); }
-keepclassmembers class java.util.HashMap { boolean isEmpty(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.CertificatePolicies$1); }
-keepclassmembers class java.util.HashMap { int size(); }
-keepclassmembers class android.widget.ImageView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.support.v4.g.i { android.support.v4.g.m a(android.view.LayoutInflater); }
-keepclassmembers class android.support.v7.view.g { java.lang.Object[] b(android.support.v7.view.g); }
-keepclassmembers class android.support.v4.g.i { void a(android.view.LayoutInflater,android.support.v4.g.m); }
-keepclassmembers class android.support.v7.view.g { java.lang.Object c(); }
-keepclassmembers class android.support.v7.view.g { java.lang.Object c(android.support.v7.view.g); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$9 { void <init>(com.shapps.mintubeapp.MainActivity); }
-keepclassmembers class android.support.v7.view.g { java.lang.Object[] d(android.support.v7.view.g); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { void <init>(int); }
-keepclassmembers class com.shapps.mintubeapp.a.a { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ImageView { int resolveAdjustedSize(int,int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void <init>(); }
-keepclassmembers class android.widget.ImageView { boolean setFrame(int,int,int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void setExclusiveOwnerThread(java.lang.Thread); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { java.lang.Thread getExclusiveOwnerThread(); }
-keepclassmembers class java.util.HashMap { void preModify(java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void jumpToCurrentState(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setAlpha(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getOpacity(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { boolean get(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setRippleActive(boolean); }
-keepclassmembers class java.util.HashMap { void putAll(java.util.Map); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void set(boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setBackgroundActive(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isProjected(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.ImageView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.widget.ImageView { void drawableStateChanged(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler { void <init>(); }
-keepclassmembers class android.net.SSLCertificateSocketFactory$1 { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setPaddingMode(int); }
-keepclassmembers class android.net.SSLCertificateSocketFactory$1 { java.security.cert.X509Certificate[] getAcceptedIssuers(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void <init>(java.util.concurrent.ThreadPoolExecutor,java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void run(); }
-keepclassmembers class android.widget.ImageView { int getBaseline(); }
-keepclassmembers class java.util.HashMap { void postRemove(java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getHeadersCount(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getFootersCount(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEmpty(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.CharSequence trimAfterFirstMatch(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isHeldExclusively(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryAcquire(int); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryRelease(int); }
-keepclassmembers class java.io.SerializationHandleMap { int get(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void lock(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean canApplyTheme(); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isLatinLetter(char); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryLock(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isLocked(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void unlock(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspot(float,float); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isInvalidPunctuationSymbol(char); }
-keepclassmembers class android.os.HandlerThread { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundExit(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void clearHotspots(); }
-keepclassmembers class android.os.HandlerThread { android.os.Looper getLooper(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void <init>(android.content.res.XmlBlock,long,android.content.res.XmlBlock); }
-keepclassmembers class android.widget.ImageView { void setVisibility(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.v4.g.i$d { void <init>(); }
-keepclassmembers class android.widget.ImageView { void onAttachedToWindow(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { void <init>(libcore.util.ZoneInfoDB$TzData,int); }
-keepclassmembers class android.support.v4.g.i$d { void a(android.view.LayoutInflater,android.support.v4.g.m); }
-keepclassmembers class android.widget.ImageView { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean hasStableIds(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { libcore.util.ZoneInfo create(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.c.a.m { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void invalidateSelf(); }
-keepclassmembers class android.support.v4.c.a.m { void <init>(android.support.v4.c.a.j$a,android.content.res.Resources); }
-keepclassmembers class android.support.v4.c.a.m { void setAutoMirrored(boolean); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void <init>(java.lang.String,java.security.MessageDigest,byte[],java.security.cert.Certificate[][],java.util.Hashtable); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getViewTypeCount(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void write(byte[],int,int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.ListAdapter getWrappedAdapter(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.util.DisplayMetrics { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getDepth(); }
-keepclassmembers class android.support.v7.a.b { int a(android.support.v7.a.b,int); }
-keepclassmembers class android.support.v4.g.a { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getText(); }
-keepclassmembers class android.util.DisplayMetrics { void setTo(android.util.DisplayMetrics); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getLineNumber(); }
-keepclassmembers class android.widget.TextView$BufferType { void <init>(java.lang.String,int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getEventType(); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$2 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class android.support.v7.widget.bb { void <init>(android.support.v7.widget.Toolbar,boolean); }
-keepclassmembers class android.support.v7.a.b { android.widget.ListView a(android.support.v7.a.b,android.widget.ListView); }
-keepclassmembers class android.support.v7.a.b { void a(android.view.View,android.view.View,android.view.View); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getName(); }
-keepclassmembers class android.support.v7.a.b { android.widget.ListAdapter a(android.support.v7.a.b,android.widget.ListAdapter); }
-keepclassmembers class java.util.HashMap$EntryIterator { void <init>(java.util.HashMap); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.util.HashMap$EntryIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.animation.LayoutTransition$4 { void <init>(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int,android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { android.support.v7.view.menu.h getItemData(); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void a(android.support.v7.view.menu.h,int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeCount(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawMask(android.graphics.Canvas); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void setCheckable(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class android.support.v7.a.b { int b(); }
-keepclassmembers class android.support.v7.widget.bb { android.support.v7.widget.Toolbar a(android.support.v7.widget.bb); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void setChecked(boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[]); }
-keepclassmembers class android.support.v7.widget.bb { java.lang.CharSequence b(android.support.v7.widget.bb); }
-keepclassmembers class android.support.v7.widget.bb { android.view.Window$Callback c(android.support.v7.widget.bb); }
-keepclassmembers class android.support.v7.a.b { void b(android.view.View,android.view.View,android.view.View); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.bb { int s(); }
-keepclassmembers class java.lang.Byte { void <init>(byte); }
-keepclassmembers class java.lang.Byte { byte byteValue(); }
-keepclassmembers class android.support.v7.widget.bb { boolean d(android.support.v7.widget.bb); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeNameResource(int); }
-keepclassmembers class java.nio.CharBuffer { void <init>(int,long); }
-keepclassmembers class java.lang.Byte { int compare(byte,byte); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Byte); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void initializeFromState(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources,android.graphics.drawable.RippleDrawable$1); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.bb { android.view.ViewGroup a(); }
-keepclassmembers class android.view.KeyCharacterMap$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.bb { void a(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSequenceOfLength(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class android.support.v7.widget.bb { void a(android.support.v7.view.menu.l$a,android.support.v7.view.menu.f$a); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSetOfLength(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class java.lang.Byte { int hashCode(); }
-keepclassmembers class android.support.v4.widget.i$d { void <init>(); }
-keepclassmembers class android.view.KeyCharacterMap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateAtLeast(int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateLessThan(int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean isRunning(int); }
-keepclassmembers class android.support.v4.widget.i$d { boolean a(java.lang.Object,float,float); }
-keepclassmembers class android.content.res.XmlBlock$Parser { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class android.app.ExitTransitionCoordinator$7 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeResourceValue(int,int); }
-keepclassmembers class java.lang.Byte { java.lang.String toString(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$7 { void run(); }
-keepclassmembers class android.support.v7.widget.m$d { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeIntValue(int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void decrementWorkerCount(); }
-keepclassmembers class android.support.v7.widget.bb { void a(android.view.Window$Callback); }
-keepclassmembers class java.lang.Byte { java.lang.String toHexString(byte,boolean); }
-keepclassmembers class android.support.v7.widget.m$d { void <init>(android.support.v7.widget.m$1); }
-keepclassmembers class android.support.v7.widget.bb { android.content.Context b(); }
-keepclassmembers class android.support.v7.widget.bb { void a(java.lang.CharSequence); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { void <init>(); }
-keepclassmembers class android.support.v7.widget.bb { void b(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.bb { void b(java.lang.CharSequence); }
-keepclassmembers class java.nio.CharBuffer { int length(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void tryTerminate(); }
-keepclassmembers class android.support.v4.g.af$d { void <init>(); }
-keepclassmembers class android.support.v7.widget.bb { void c(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { boolean isConnectionBased(); }
-keepclassmembers class android.support.v4.g.af$d { long a(); }
-keepclassmembers class android.support.v4.g.af$d { int a(int,int,int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.CharSequence getPooledString(int); }
-keepclassmembers class android.support.v4.g.af$d { int a(int,int); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String getCnonce(); }
-keepclassmembers class android.support.v7.widget.bb { void d(int); }
-keepclassmembers class android.support.v4.g.af$d { void a(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.support.v4.g.af$d { void b(android.view.View,float); }
-keepclassmembers class android.support.v7.widget.bb { void d(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.g.af$d { void b(android.view.View,boolean); }
-keepclassmembers class android.support.v7.widget.bb { void e(int); }
-keepclassmembers class android.support.v7.widget.bb { void d(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.g.af$d { void d(android.view.View,float); }
-keepclassmembers class android.support.v4.g.af$d { void e(android.view.View,float); }
-keepclassmembers class android.support.v7.widget.bb { boolean i(); }
-keepclassmembers class android.support.v4.g.af$d { int g(android.view.View); }
-keepclassmembers class android.support.v4.g.af$d { int j(android.view.View); }
-keepclassmembers class android.support.v4.g.af$d { int i(android.view.View); }
-keepclassmembers class android.support.v7.a.b { android.support.v4.widget.NestedScrollView i(android.support.v7.a.b); }
-keepclassmembers class android.support.v7.widget.bb { void m(); }
-keepclassmembers class android.support.v7.a.b { android.widget.ListView j(android.support.v7.a.b); }
-keepclassmembers class android.support.v4.g.af$d { float o(android.view.View); }
-keepclassmembers class android.support.v7.a.b { int k(android.support.v7.a.b); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void reject(java.lang.Runnable); }
-keepclassmembers class android.support.v4.g.af$d { float p(android.view.View); }
-keepclassmembers class android.support.v7.widget.bb { int o(); }
-keepclassmembers class android.support.v4.g.af$d { void y(android.view.View); }
-keepclassmembers class android.support.v7.a.b { int l(android.support.v7.a.b); }
-keepclassmembers class android.support.v7.a.b { int m(android.support.v7.a.b); }
-keepclassmembers class android.support.v7.widget.bb { android.view.Menu r(); }
-keepclassmembers class android.support.v7.a.b { int n(android.support.v7.a.b); }
-keepclassmembers class android.support.v7.a.b { void a(); }
-keepclassmembers class android.support.v7.a.b { void a(int); }
-keepclassmembers class android.support.v7.a.b { void a(android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v7.a.b { void a(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.style.SuggestionSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.a.b { void b(int); }
-keepclassmembers class android.support.v7.a.b { void b(android.view.View); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void addWorkerFailed(java.util.concurrent.ThreadPoolExecutor$Worker); }
-keepclassmembers class android.support.v7.a.b { void b(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.a.b { void a(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.a.b { void c(android.view.View); }
-keepclassmembers class android.support.design.widget.p$1 { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class android.support.design.widget.p$1 { void <init>(android.support.design.widget.p); }
-keepclassmembers class android.support.design.widget.p$1 { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class android.support.design.widget.p$1 { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void <init>(android.app.Activity,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.Object next(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.app.SharedElementCallback getListener(android.app.Activity,boolean); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToString(int); }
-keepclassmembers class android.support.v4.g.p$b { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean hasNext(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { boolean checkTag(int); }
-keepclassmembers class java.lang.IntegralToString { void appendInt(java.lang.AbstractStringBuilder,int); }
-keepclassmembers class android.support.v4.g.p$b { android.view.MenuItem a(android.view.MenuItem,android.view.View); }
-keepclassmembers class android.support.v4.g.p$b { android.view.View a(android.view.MenuItem); }
-keepclassmembers class android.support.v4.g.p$b { void a(android.view.MenuItem,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void stopCancel(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void delayCancel(); }
-keepclassmembers class android.support.v4.g.p$b { android.view.MenuItem b(android.view.MenuItem,int); }
-keepclassmembers class android.support.v4.g.p$b { boolean b(android.view.MenuItem); }
-keepclassmembers class android.support.v4.g.p$b { boolean c(android.view.MenuItem); }
-keepclassmembers class java.util.IllegalFormatWidthException { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.IllegalFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.app.FragmentManager { void <init>(); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void <init>(int,int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void <init>(org.apache.harmony.security.x509.DistributionPointName,org.apache.harmony.security.x509.ReasonFlags); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory); }
-keepclassmembers class android.view.View$ListenerInfo { void <init>(); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$100(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.concurrent.CopyOnWriteArrayList access$200(android.view.View$ListenerInfo); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setIndirectCRL(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsCACerts(boolean); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$102(android.view.View$ListenerInfo,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsUserCerts(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsAttributeCerts(boolean); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnKeyListener access$302(android.view.View$ListenerInfo,android.view.View$OnKeyListener); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToString(long); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(); }
-keepclassmembers class java.lang.IntegralToString { void appendLong(java.lang.AbstractStringBuilder,long); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnTouchListener access$402(android.view.View$ListenerInfo,android.view.View$OnTouchListener); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnTouchListener access$400(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnHoverListener access$600(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnKeyListener access$300(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnGenericMotionListener access$500(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnSystemUiVisibilityChangeListener access$1200(android.view.View$ListenerInfo); }
-keepclassmembers class org.apache.http.impl.client.TunnelRefusedException { void <init>(java.lang.String,org.apache.http.HttpResponse); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnDragListener access$700(android.view.View$ListenerInfo); }
-keepclassmembers class org.apache.http.impl.client.TunnelRefusedException { org.apache.http.HttpResponse getResponse(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void exitTransitionComplete(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean isReadyToNotify(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.util.concurrent.ThreadFactory getThreadFactory(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void notifyComplete(); }
-keepclassmembers class android.support.v4.e.a { java.lang.String a(java.util.Locale); }
-keepclassmembers class android.app.Notification$BigPictureStyle { void <init>(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle setBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void finishIfNecessary(); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle setSummaryText(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle bigPicture(android.graphics.Bitmap); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter { void <init>(org.apache.http.impl.conn.SingleClientConnManager,org.apache.http.impl.conn.SingleClientConnManager$PoolEntry,org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class android.ddm.DdmHandleExit { void <init>(); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle bigLargeIcon(android.graphics.Bitmap); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void finish(); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean moveSharedElementWithParent(); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.transition.Transition getViewsTransition(); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(java.lang.String$1); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$ViewReference { void <init>(android.view.View); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean remove(java.lang.Runnable); }
-keepclassmembers class android.app.Notification$BigPictureStyle { void populateBigContentView(android.app.Notification); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$700(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$800(android.app.ExitTransitionCoordinator); }
-keepclassmembers class com.shapps.mintubeapp.GetPermission$1 { void <init>(com.shapps.mintubeapp.GetPermission); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.animation.ObjectAnimator access$902(android.app.ExitTransitionCoordinator,android.animation.ObjectAnimator); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$500(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.support.v4.app.e$a { void <init>(android.support.v4.app.e$1); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$1002(android.app.ExitTransitionCoordinator,boolean); }
-keepclassmembers class android.support.v4.app.e$a { void <init>(); }
-keepclassmembers class android.support.v4.app.e$a { int a(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class android.database.DataSetObservable { void <init>(); }
-keepclassmembers class android.support.v4.app.e$a { java.lang.String a(java.lang.String); }
-keepclassmembers class java.lang.ref.SoftReference { void <init>(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringInternal { char charAt(int); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String toString(); }
-keepclassmembers class android.text.SpannableStringInternal { void getChars(int,int,char[],int); }
-keepclassmembers class android.text.SpannableStringInternal { int length(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void beforeExecute(java.lang.Thread,java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void afterExecute(java.lang.Runnable,java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void terminated(); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class android.support.a.a.b$1 { void <init>(android.support.a.a.b); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.io.OutputStream { void <init>(); }
-keepclassmembers class java.io.OutputStream { void close(); }
-keepclassmembers class java.util.ComparableTimSort { void sort(java.lang.Object[]); }
-keepclassmembers class java.io.OutputStream { void flush(); }
-keepclassmembers class java.io.OutputStream { void write(byte[]); }
-keepclassmembers class java.util.logging.LogManager { void checkAccess(); }
-keepclassmembers class java.util.logging.LogManager { boolean addLogger(java.util.logging.Logger); }
-keepclassmembers class android.support.v4.c.a.e { void a(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void <init>(java.util.ArrayList); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { boolean hasNext(); }
-keepclassmembers class java.util.logging.LogManager { java.util.Enumeration getLoggerNames(); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.logging.LogManager { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void <init>(java.util.ArrayList,java.util.ArrayList$1); }
-keepclassmembers class android.support.v7.widget.ao$s { int a(android.support.v7.widget.ao$s); }
-keepclassmembers class android.support.v4.app.f { java.lang.String a(java.lang.String); }
-keepclassmembers class android.support.v4.g.ar$a { void <init>(); }
-keepclassmembers class android.support.v7.widget.ao$s { int b(android.support.v7.widget.ao$s,int); }
-keepclassmembers class android.support.v4.g.ar$a { boolean b(android.view.ViewConfiguration); }
-keepclassmembers class android.support.v7.widget.ao$s { boolean b(android.support.v7.widget.ao$s); }
-keepclassmembers class android.support.v7.widget.ao$s { boolean a(android.support.v7.widget.ao$s,boolean); }
-keepclassmembers class android.support.v7.widget.ao$s { boolean b(android.support.v7.widget.ao$s,boolean); }
-keepclassmembers class android.support.v7.widget.ao$s { boolean c(android.support.v7.widget.ao$s,boolean); }
-keepclassmembers class android.support.v7.widget.ao$s { boolean c(android.support.v7.widget.ao$s); }
-keepclassmembers class android.support.v7.widget.ao$s { int c(android.support.v7.widget.ao$s,int); }
-keepclassmembers class android.support.v7.widget.ao$s { boolean d(android.support.v7.widget.ao$s); }
-keepclassmembers class android.support.v7.widget.ao$s { int d(android.support.v7.widget.ao$s,int); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(java.io.InputStream); }
-keepclassmembers class org.apache.http.impl.client.EntityEnclosingRequestWrapper { void <init>(org.apache.http.HttpEntityEnclosingRequest); }
-keepclassmembers class android.support.v7.widget.ao$s { boolean d(android.support.v7.widget.ao$s,boolean); }
-keepclassmembers class org.apache.http.impl.client.EntityEnclosingRequestWrapper { org.apache.http.HttpEntity getEntity(); }
-keepclassmembers class android.support.v7.widget.ao$s { boolean e(android.support.v7.widget.ao$s); }
-keepclassmembers class android.support.v7.widget.ao$s { boolean e(android.support.v7.widget.ao$s,boolean); }
-keepclassmembers class android.support.v7.widget.ao$s { boolean f(android.support.v7.widget.ao$s,boolean); }
-keepclassmembers class org.apache.http.impl.client.EntityEnclosingRequestWrapper { boolean isRepeatable(); }
-keepclassmembers class android.util.Singleton { void <init>(); }
-keepclassmembers class java.util.logging.LogManager { void setParent(java.util.logging.Logger,java.util.logging.Logger); }
-keepclassmembers class android.text.method.CharacterPickerDialog$OptionsAdapter { void <init>(android.text.method.CharacterPickerDialog,android.content.Context); }
-keepclassmembers class android.util.Singleton { java.lang.Object get(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { char[] access$000(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { void <init>(org.kxml2.io.KXmlParser$ContentSource,char[],int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$100(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { org.kxml2.io.KXmlParser$ContentSource access$300(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$200(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class android.view.GhostView { void setVisibility(int); }
-keepclassmembers class android.view.GhostView { void setMatrix(android.graphics.Matrix); }
-keepclassmembers class android.text.DynamicLayout { int[] getBlockEndLines(); }
-keepclassmembers class android.text.DynamicLayout { int[] getBlockIndices(); }
-keepclassmembers class android.text.DynamicLayout { int getNumberOfBlocks(); }
-keepclassmembers class android.text.DynamicLayout { int getIndexFirstChangedBlock(); }
-keepclassmembers class android.text.DynamicLayout { void setIndexFirstChangedBlock(int); }
-keepclassmembers class android.text.DynamicLayout { int getLineTop(int); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.text.DynamicLayout { int getLineDescent(int); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisStart(int); }
-keepclassmembers class android.graphics.Shader { void <init>(); }
-keepclassmembers class android.graphics.Shader { void init(long); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisCount(int); }
-keepclassmembers class android.graphics.Shader { boolean getLocalMatrix(android.graphics.Matrix); }
-keepclassmembers class android.graphics.Shader { long getNativeInstance(); }
-keepclassmembers class android.graphics.Shader { void setLocalMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.GhostView { android.view.GhostView addGhost(android.view.View,android.view.ViewGroup); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <init>(int,java.util.List,org.apache.harmony.security.pkcs7.ContentInfo,java.util.List,java.util.List,java.util.List); }
-keepclassmembers class android.view.GhostView { void copySize(android.view.View,android.view.View); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List getSignerInfos(); }
-keepclassmembers class android.view.FocusFinder$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.view.FocusFinder$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List getCertificates(); }
-keepclassmembers class android.util.PathParser$ExtractFloatResult { void <init>(android.util.PathParser$1); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$100(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { org.apache.harmony.security.pkcs7.ContentInfo access$200(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class android.util.PathParser$ExtractFloatResult { void <init>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { int access$000(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$300(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$500(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <init>(int,java.util.List,org.apache.harmony.security.pkcs7.ContentInfo,java.util.List,java.util.List,java.util.List,org.apache.harmony.security.pkcs7.SignedData$1); }
-keepclassmembers class android.widget.FastScroller { void setEnabled(boolean); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$400(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class android.widget.FastScroller { boolean isEnabled(); }
-keepclassmembers class android.widget.FastScroller { boolean isAlwaysShowEnabled(); }
-keepclassmembers class android.widget.FastScroller { void setAlwaysShow(boolean); }
-keepclassmembers class android.widget.FastScroller { void onStateDependencyChanged(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { void <init>(com.android.i18n.phonenumbers.RegexCache$LRUCache,int,float,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class android.widget.FastScroller { int getWidth(); }
-keepclassmembers class android.widget.FastScroller { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.FastScroller { void stop(); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String); }
-keepclassmembers class java.net.URI { void <init>(); }
-keepclassmembers class java.io.NotActiveException { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void <init>(); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(char,float[]); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(android.util.PathParser$PathDataNode); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void measurePreview(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.v4.g.ar$d { void <init>(); }
-keepclassmembers class libcore.io.IoUtils { void close(java.io.FileDescriptor); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { int getVersion(); }
-keepclassmembers class android.support.v4.g.ar$d { boolean b(android.view.ViewConfiguration); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.lang.AutoCloseable); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { org.apache.http.Header getVersionHeader(); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.net.Socket); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { void <init>(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.support.v4.g.ak { boolean b(android.view.View,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$100(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class libcore.io.IoUtils { boolean canOpenReadOnly(java.lang.String); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$400(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$200(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$300(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$500(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$600(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$700(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$800(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$900(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class com.android.volley.NetworkError { void <init>(com.android.volley.g); }
-keepclassmembers class com.android.volley.NetworkError { void <init>(java.lang.Throwable); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$102(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$202(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$302(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$502(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.widget.FastScroller { void layoutThumb(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$402(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$702(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$602(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.widget.FastScroller { void setState(int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$902(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$802(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.widget.FastScroller { void refreshDrawablePressedState(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class libcore.net.url.UrlUtils { boolean isValidSchemeChar(int,char); }
-keepclassmembers class com.android.volley.NoConnectionError { void <init>(java.lang.Throwable); }
-keepclassmembers class android.widget.RemoteViews$1 { void <init>(); }
-keepclassmembers class java.lang.Enum { int ordinal(); }
-keepclassmembers class java.lang.Enum { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.Enum { java.lang.String toString(); }
-keepclassmembers class java.lang.Enum { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.internal.os.BinderInternal$GcWatcher { void <init>(); }
-keepclassmembers class android.widget.FastScroller { void postAutoHide(); }
-keepclassmembers class org.apache.http.entity.HttpEntityWrapper { boolean isChunked(); }
-keepclassmembers class org.apache.http.entity.HttpEntityWrapper { long getContentLength(); }
-keepclassmembers class org.apache.http.entity.HttpEntityWrapper { boolean isStreaming(); }
-keepclassmembers class java.math.MathContext { void <init>(int); }
-keepclassmembers class org.apache.http.entity.HttpEntityWrapper { void consumeContent(); }
-keepclassmembers class java.math.MathContext { void <init>(int,java.math.RoundingMode); }
-keepclassmembers class com.shapps.mintubeapp.d { void <init>(com.shapps.mintubeapp.PlayerService); }
-keepclassmembers class android.widget.FastScroller { void onSectionsChanged(); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { void <init>(org.apache.http.conn.scheme.HostNameResolver); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { void <init>(); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger$1 { void <init>(); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger$1 { java.lang.Object initialValue(); }
-keepclassmembers class java.math.MathContext { int getPrecision(); }
-keepclassmembers class java.math.MathContext { java.math.RoundingMode getRoundingMode(); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void setOptional(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void setDefault(java.lang.Object,int); }
-keepclassmembers class java.lang.Error { void <init>(); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.Throwable); }
-keepclassmembers class android.widget.TextView$Marquee { void stop(); }
-keepclassmembers class java.net.URI$1 { void <init>(); }
-keepclassmembers class java.net.URI$1 { boolean isRetained(char); }
-keepclassmembers class android.animation.PathKeyframes$4 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.widget.TextView$Marquee { float getGhostOffset(); }
-keepclassmembers class android.widget.TextView$Marquee { float getScroll(); }
-keepclassmembers class android.widget.TextView$Marquee { boolean isRunning(); }
-keepclassmembers class android.widget.TextView$Marquee { float getMaxFadeScroll(); }
-keepclassmembers class android.widget.TextView$Marquee { boolean isStopped(); }
-keepclassmembers class java.net.URI { java.lang.String getRawSchemeSpecificPart(); }
-keepclassmembers class java.net.URI { java.lang.String getScheme(); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void <init>(); }
-keepclassmembers class java.net.URI { java.lang.String getHost(); }
-keepclassmembers class java.net.URI { int getPort(); }
-keepclassmembers class java.net.URI { java.lang.String getRawPath(); }
-keepclassmembers class java.net.URI { java.lang.String getPath(); }
-keepclassmembers class java.net.URI { java.lang.String getRawQuery(); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { boolean a(); }
-keepclassmembers class java.net.URI { java.lang.String getFragment(); }
-keepclassmembers class java.net.URI { java.lang.String getRawFragment(); }
-keepclassmembers class java.net.URI { int hashCode(); }
-keepclassmembers class java.net.URI { boolean isAbsolute(); }
-keepclassmembers class android.support.v7.view.i { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class android.support.v7.view.i { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.support.v7.view.i { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class android.support.v7.view.i { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.support.v7.view.i { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.widget.FastScroller { void cancelFling(); }
-keepclassmembers class android.widget.FastScroller { void beginDrag(); }
-keepclassmembers class android.widget.FastScroller { void cancelPendingDrag(); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(android.util.PathParser$PathDataNode,android.util.PathParser$1); }
-keepclassmembers class android.util.PathParser$PathDataNode { float[] access$200(android.util.PathParser$PathDataNode); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(char,float[],android.util.PathParser$1); }
-keepclassmembers class android.util.PathParser$PathDataNode { char access$100(android.util.PathParser$PathDataNode); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { boolean add(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.net.URI { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { void <init>(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { java.lang.Object take(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void put(java.lang.Object); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInside(float,float); }
-keepclassmembers class java.util.ArrayDeque { boolean offerLast(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void <init>(); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class java.net.InetAddress { void <init>(int,byte[],java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { int getVersion(); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { org.apache.http.Header getVersionHeader(); }
-keepclassmembers class java.util.ArrayDeque { boolean offer(java.lang.Object); }
-keepclassmembers class android.support.v4.app.ab$n { void <init>(); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object poll(); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { long createNativeInterpolator(android.animation.TimeInterpolator,long); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftHeaderParser { void <init>(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByName(java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostAddress(); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostName(); }
-keepclassmembers class java.net.InetAddress { int hashCode(); }
-keepclassmembers class android.widget.FastScroller { boolean access$102(android.widget.FastScroller,boolean); }
-keepclassmembers class android.widget.FastScroller { boolean access$100(android.widget.FastScroller); }
-keepclassmembers class android.view.InputDevice$MotionRange { int access$100(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { int access$200(android.view.InputDevice$MotionRange); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$2 { void <init>(int); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float,android.view.InputDevice$1); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$400(android.view.InputDevice$MotionRange); }
-keepclassmembers class java.util.TreeMap$MapIterator { void <init>(java.util.TreeMap,java.util.TreeMap$Node); }
-keepclassmembers class java.util.TreeMap$MapIterator { boolean hasNext(); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$500(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$700(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$800(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.support.v7.view.menu.b { void <init>(android.content.Context,int,int); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$600(android.view.InputDevice$MotionRange); }
-keepclassmembers class java.net.InetAddress { boolean isNumeric(java.lang.String); }
-keepclassmembers class android.support.v7.a.n { android.view.Window$Callback a(android.support.v7.a.n); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.b { void a(android.content.Context,android.support.v7.view.menu.f); }
-keepclassmembers class android.support.v7.a.n { boolean a(android.support.v7.a.n,boolean); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(int,int,float,float); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void connect(); }
-keepclassmembers class android.support.v7.view.menu.b { void a(android.support.v7.view.menu.l$a); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void <init>(java.net.URL); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.support.v7.a.n { boolean b(android.support.v7.a.n); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { boolean hasNext(); }
-keepclassmembers class android.support.v7.a.n { android.support.v7.widget.ae c(android.support.v7.a.n); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(byte[]); }
-keepclassmembers class android.support.v7.view.menu.b { boolean a(android.support.v7.view.menu.p); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[]); }
-keepclassmembers class android.support.v7.view.menu.b { boolean a(android.view.ViewGroup,int); }
-keepclassmembers class org.apache.http.client.methods.HttpEntityEnclosingRequestBase { void <init>(); }
-keepclassmembers class org.apache.http.client.methods.HttpEntityEnclosingRequestBase { void setEntity(org.apache.http.HttpEntity); }
-keepclassmembers class org.apache.http.client.methods.HttpEntityEnclosingRequestBase { org.apache.http.HttpEntity getEntity(); }
-keepclassmembers class android.support.v7.a.n { void a(java.lang.CharSequence); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { void <init>(java.lang.String[],boolean); }
-keepclassmembers class android.support.v7.a.n { void a(boolean); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(char); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(int); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { void <init>(); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.a.n { android.content.Context c(); }
-keepclassmembers class android.support.v7.a.n { void d(boolean); }
-keepclassmembers class android.support.v7.a.n { void h(); }
-keepclassmembers class android.support.v7.a.n { boolean e(); }
-keepclassmembers class android.support.v7.a.n { android.view.Window$Callback i(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { boolean getUseCaches(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { boolean access$002(libcore.net.url.JarURLConnectionImpl,boolean); }
-keepclassmembers class org.apache.http.ProtocolVersion { java.lang.String getProtocol(); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext$1 { void <init>(com.android.org.conscrypt.AbstractSessionContext); }
-keepclassmembers class android.transition.Fade { void <init>(int); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { int getVersion(); }
-keepclassmembers class org.apache.http.ProtocolVersion { int getMinor(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { org.apache.http.Header getVersionHeader(); }
-keepclassmembers class org.apache.http.ProtocolVersion { int getMajor(); }
-keepclassmembers class android.widget.TextView { void setTypefaceFromAttrs(java.lang.String,int,int); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.net.Uri$Part { boolean isEmpty(); }
-keepclassmembers class android.util.MapCollections$KeySet { void <init>(android.util.MapCollections); }
-keepclassmembers class org.apache.http.ProtocolVersion { boolean isComparable(org.apache.http.ProtocolVersion); }
-keepclassmembers class android.net.Uri$Part { java.lang.String getEncoded(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(android.content.res.CompatibilityInfo$1); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part nonNull(android.net.Uri$Part); }
-keepclassmembers class android.support.v4.g.ar$c { void <init>(); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromEncoded(java.lang.String); }
-keepclassmembers class android.support.v4.g.ar$c { boolean b(android.view.ViewConfiguration); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromDecoded(java.lang.String); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class android.widget.TextView { void setEnabled(boolean); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String,android.net.Uri$1); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter,android.widget.CursorAdapter$1); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.view.WindowInsets); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect); }
-keepclassmembers class android.widget.TextView { boolean getDefaultEditable(); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getDefaultMovementMethod(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getText(); }
-keepclassmembers class android.widget.TextView { int length(); }
-keepclassmembers class java.text.Format { void <init>(); }
-keepclassmembers class android.widget.TextView { android.text.Layout getHintLayout(); }
-keepclassmembers class android.widget.TextView { android.text.Layout getLayout(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMinTouchOffset(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMaxTouchOffset(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void resetTouchOffsets(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { boolean isSelectionStartDragged(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onDetached(); }
-keepclassmembers class org.apache.http.ProtocolVersion { boolean lessEquals(org.apache.http.ProtocolVersion); }
-keepclassmembers class android.view.WindowInsets { boolean isConsumed(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isEnabled(); }
-keepclassmembers class android.widget.TextView { android.text.method.KeyListener getKeyListener(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isTouchExplorationEnabled(); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getMovementMethod(); }
-keepclassmembers class android.widget.TextView { void fixFocusableAndClickableSettings(); }
-keepclassmembers class android.widget.TextView { android.text.method.TransformationMethod getTransformationMethod(); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { boolean isChunked(); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { boolean isRepeatable(); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { boolean isStreaming(); }
-keepclassmembers class android.support.v4.app.e$b { void <init>(); }
-keepclassmembers class android.graphics.Canvas { long getNativeCanvasWrapper(); }
-keepclassmembers class android.support.v4.app.e$b { void <init>(android.support.v4.app.e$1); }
-keepclassmembers class android.graphics.Canvas { boolean isRecordingFor(java.lang.Object); }
-keepclassmembers class android.support.v4.app.e$b { int a(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.app.e$b { java.lang.String a(java.lang.String); }
-keepclassmembers class java.lang.Enum$1 { void <init>(int); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.Canvas { boolean isHardwareAccelerated(); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie2 { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthInputStream { int read(byte[]); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie2 { int[] getPorts(); }
-keepclassmembers class android.support.v4.c.a.b { int a(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie2 { void setPorts(int[]); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie2 { void setCommentURL(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie2 { void setDiscard(boolean); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingLeft(); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void insertReorderBarrier(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingRight(); }
-keepclassmembers class android.graphics.Canvas { void insertInorderBarrier(); }
-keepclassmembers class android.graphics.Canvas { int save(); }
-keepclassmembers class android.graphics.Canvas { int save(int); }
-keepclassmembers class android.animation.AnimatorSet$Dependency { void <init>(android.animation.AnimatorSet$Node,int); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry(); }
-keepclassmembers class android.graphics.Canvas { int saveLayer(float,float,float,float,android.graphics.Paint,int); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.IAccessibilityManager getServiceLocked(); }
-keepclassmembers class android.support.v4.app.ab { void a(android.support.v4.app.aa,android.support.v4.app.ab$p); }
-keepclassmembers class android.util.LogWriter { void flush(); }
-keepclassmembers class android.graphics.Canvas { int saveLayerAlpha(float,float,float,float,int,int); }
-keepclassmembers class android.support.v4.app.ab { void a(android.support.v4.app.z,java.util.ArrayList); }
-keepclassmembers class android.util.LogWriter { void flushBuilder(); }
-keepclassmembers class android.graphics.Canvas { int getSaveCount(); }
-keepclassmembers class android.graphics.Canvas { void restoreToCount(int); }
-keepclassmembers class android.graphics.Canvas { void restore(); }
-keepclassmembers class android.graphics.Canvas { void translate(float,float); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float,float,float); }
-keepclassmembers class org.apache.http.MalformedChunkCodingException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void rotate(float,float,float); }
-keepclassmembers class android.graphics.Canvas { void concat(android.graphics.Matrix); }
-keepclassmembers class android.graphics.Canvas { void rotate(float); }
-keepclassmembers class org.apache.http.HttpException { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.ClickableSpan { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class org.apache.http.HttpException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class java.text.ParsePosition { void <init>(int); }
-keepclassmembers class java.text.ParsePosition { int getIndex(); }
-keepclassmembers class java.text.ParsePosition { void setErrorIndex(int); }
-keepclassmembers class java.text.ParsePosition { int getErrorIndex(); }
-keepclassmembers class java.text.ParsePosition { void setIndex(int); }
-keepclassmembers class java.net.URLConnection { boolean getDoInput(); }
-keepclassmembers class android.support.v4.app.k$b { void <init>(); }
-keepclassmembers class com.android.volley.a.g { void <init>(); }
-keepclassmembers class com.android.volley.a.g { void <init>(com.android.volley.a.g$a); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(float,float,float,float); }
-keepclassmembers class com.android.volley.a.g { void <init>(com.android.volley.a.g$a,javax.net.ssl.SSLSocketFactory); }
-keepclassmembers class android.widget.FastScroller$3 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { boolean clipPath(android.graphics.Path,android.graphics.Region$Op); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(android.view.View,int); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.support.v7.a.b$5 { void <init>(android.support.v7.a.b,android.view.View,android.view.View); }
-keepclassmembers class android.support.v7.view.menu.p { void <init>(android.content.Context,android.support.v7.view.menu.f,android.support.v7.view.menu.h); }
-keepclassmembers class android.support.v7.a.b$5 { void run(); }
-keepclassmembers class android.support.v7.view.menu.p { boolean a(android.support.v7.view.menu.f,android.view.MenuItem); }
-keepclassmembers class android.support.v7.view.menu.p { boolean b(); }
-keepclassmembers class android.support.v7.view.menu.p { boolean c(android.support.v7.view.menu.h); }
-keepclassmembers class android.graphics.Canvas { boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType); }
-keepclassmembers class android.support.v7.view.menu.p { boolean c(); }
-keepclassmembers class android.support.v7.view.menu.p { boolean d(android.support.v7.view.menu.h); }
-keepclassmembers class android.support.v7.view.menu.p { android.view.MenuItem getItem(); }
-keepclassmembers class java.net.URLConnection { boolean getUseCaches(); }
-keepclassmembers class android.support.v7.view.menu.p { android.support.v7.view.menu.f p(); }
-keepclassmembers class com.android.volley.a.g { boolean a(int,int); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromName(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { boolean getClipBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.Interpolator { void <init>(int,int); }
-keepclassmembers class android.graphics.Canvas { void drawColor(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.view.menu.p { android.view.SubMenu setHeaderTitle(java.lang.CharSequence); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(float); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(java.util.Collections$1); }
-keepclassmembers class java.util.Collections$EmptyList { int size(); }
-keepclassmembers class android.graphics.Canvas { void drawLine(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawLines(float[],int,int,android.graphics.Paint); }
-keepclassmembers class android.support.v4.widget.o { void a(android.widget.ListView,int); }
-keepclassmembers class android.support.v4.app.y { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawLines(float[],android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { void setPadding(int,int,int,int); }
-keepclassmembers class android.graphics.Canvas { void drawRect(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawOval(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawCircle(float,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$1 { void <init>(); }
-keepclassmembers class java.util.Collections$UnmodifiableList { void <init>(java.util.List); }
-keepclassmembers class android.widget.TextView { void setTextSize(int,float); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint); }
-keepclassmembers class java.net.URLConnection { int getConnectTimeout(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy$1 { void <init>(android.os.StrictMode$AndroidBlockGuardPolicy,android.view.IWindowManager,java.util.ArrayList); }
-keepclassmembers class java.util.Collections$UnmodifiableList { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.lang.Object get(int); }
-keepclassmembers class java.util.Collections$UnmodifiableList { int hashCode(); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface); }
-keepclassmembers class java.net.URLConnection { int getReadTimeout(); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.support.v4.b.b { android.graphics.drawable.Drawable a(android.content.Context,int); }
-keepclassmembers class android.graphics.Canvas { void drawPath(android.graphics.Path,android.graphics.Paint); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(); }
-keepclassmembers class android.widget.TextView { void setElegantTextHeight(boolean); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(java.lang.String); }
-keepclassmembers class android.view.Choreographer$2 { void <init>(); }
-keepclassmembers class android.support.v4.c.a.j { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.c.a.j { void <init>(android.support.v4.c.a.j$a,android.content.res.Resources); }
-keepclassmembers class android.support.v4.c.a.j { void a(android.content.res.Resources); }
-keepclassmembers class android.widget.TextView { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setTextColor(int); }
-keepclassmembers class android.support.v4.c.a.j { boolean a(int[]); }
-keepclassmembers class android.graphics.Canvas { void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { void setHighlightColor(int); }
-keepclassmembers class android.support.v4.c.a.j { android.graphics.drawable.Drawable a(android.graphics.drawable.Drawable$ConstantState,android.content.res.Resources); }
-keepclassmembers class android.widget.TextView { boolean getShowSoftInputOnFocus(); }
-keepclassmembers class android.support.v4.c.a.j { void a(android.content.res.ColorStateList); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { void <init>(); }
-keepclassmembers class android.support.v4.c.a.j { void a(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { void setShadowLayer(float,float,float,int); }
-keepclassmembers class android.support.v7.a.n$a { void <init>(android.support.v7.a.n); }
-keepclassmembers class android.support.v4.c.a.j { void a(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void <init>(); }
-keepclassmembers class android.support.v7.a.n$a { void <init>(android.support.v7.a.n,android.support.v7.a.n$1); }
-keepclassmembers class java.net.Proxy$Type { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { byte[] getEncoded(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void <init>(byte[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean a(android.view.View); }
-keepclassmembers class android.support.v4.c.a.j { boolean c(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void <init>(android.widget.RemoteViews); }
-keepclassmembers class android.widget.TextView { android.text.TextPaint getPaint(); }
-keepclassmembers class android.support.v4.c.a.j { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void clear(); }
-keepclassmembers class android.support.v7.a.n$a { boolean a(android.support.v7.view.menu.f); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { int getMemoryUsage(); }
-keepclassmembers class android.support.v4.c.a.j { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.v4.c.a.j { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.support.v4.c.a.j { int getIntrinsicHeight(); }
-keepclassmembers class android.support.v4.c.a.j { int getIntrinsicWidth(); }
-keepclassmembers class android.support.v4.c.a.j { int getMinimumHeight(); }
-keepclassmembers class android.support.v4.c.a.j { int getMinimumWidth(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void <init>(android.widget.RemoteViews,android.widget.RemoteViews$1); }
-keepclassmembers class android.support.v4.c.a.j { int getOpacity(); }
-keepclassmembers class android.widget.TextView { void setHintTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void b(android.view.View); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$1 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class android.support.v4.c.a.j { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void c(); }
-keepclassmembers class android.widget.TextView { void setLinkTextColor(android.content.res.ColorStateList); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.c.a.j { int[] getState(); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void d(); }
-keepclassmembers class android.support.v4.c.a.j { boolean isStateful(); }
-keepclassmembers class android.support.v4.c.a.j { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void e(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void e(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void f(); }
-keepclassmembers class android.widget.TextView { int getGravity(); }
-keepclassmembers class android.support.v4.c.a.j { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.widget.TextView { void setHorizontallyScrolling(boolean); }
-keepclassmembers class android.support.v4.c.a.j { boolean onLevelChange(int); }
-keepclassmembers class android.support.v4.c.a.j { void setAlpha(int); }
-keepclassmembers class android.widget.TextView { boolean getHorizontallyScrolling(); }
-keepclassmembers class android.widget.TextView { void setMinLines(int); }
-keepclassmembers class android.support.v4.c.a.j { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.v4.c.a.j { void setDither(boolean); }
-keepclassmembers class android.widget.TextView { void setMinHeight(int); }
-keepclassmembers class android.support.v4.c.a.j { boolean setState(int[]); }
-keepclassmembers class android.widget.TextView { void setMaxLines(int); }
-keepclassmembers class android.support.v4.c.a.j { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.widget.TextView { void setMaxHeight(int); }
-keepclassmembers class android.widget.TextView { void setLines(int); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.g.b.c { void <init>(); }
-keepclassmembers class android.widget.TextView { void setHeight(int); }
-keepclassmembers class android.widget.TextView { void setMinEms(int); }
-keepclassmembers class android.widget.TextView { void setMinWidth(int); }
-keepclassmembers class android.widget.TextView { void setMaxEms(int); }
-keepclassmembers class android.widget.TextView { void setMaxWidth(int); }
-keepclassmembers class android.widget.TextView { void setEms(int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <init>(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.animation.FloatEvaluator { void <init>(); }
-keepclassmembers class android.widget.TextView { void setWidth(int); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { void updateTextColors(); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int,java.lang.Throwable); }
-keepclassmembers class android.widget.TextView { void drawableStateChanged(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.widget.TextView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void <init>(java.lang.CharSequence,char[],char[]); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { int length(); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { void <init>(); }
-keepclassmembers class android.view.View$4 { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$4 { void setValue(android.view.View,float); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.view.View$4 { java.lang.Float get(android.view.View); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verify(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(android.content.Context,int); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void drawText(java.lang.String,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.view.ContextThemeWrapper { void setTheme(int); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence); }
-keepclassmembers class android.view.ContextThemeWrapper { int getThemeResId(); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class android.view.ContextThemeWrapper { void initializeTheme(); }
-keepclassmembers class android.view.ContextThemeWrapper { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollRange(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { android.util.SparseArray access$500(android.widget.RelativeLayout$DependencyGraph); }
-keepclassmembers class android.support.v4.widget.z$4 { void <init>(android.support.v4.widget.z,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.content.res.Resources$Theme { void setTo(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(int[]); }
-keepclassmembers class android.support.v4.app.p$a { void <init>(android.view.View,android.view.animation.Animation); }
-keepclassmembers class android.support.v4.app.p$a { void <init>(android.view.View,android.view.animation.Animation,android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(int,int[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.support.v4.app.p$a { android.view.View a(android.support.v4.app.p$a); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.impl.conn.Wire); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.support.v4.app.p$a { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { boolean isDataAvailable(int); }
-keepclassmembers class android.content.res.Resources$Theme { boolean resolveAttribute(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.Resources getResources(); }
-keepclassmembers class libcore.util.Objects { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.io.DeleteOnExit { void addFile(java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { int read(); }
-keepclassmembers class android.content.res.Resources$Theme { java.lang.String getKey(); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { int read(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable$1 { void <init>(android.widget.AbsListView$FlingRunnable); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int getNestedScrollAxes(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void clearMutated(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean hasNestedScrollingParent(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.content.res.Resources$Theme { java.lang.String access$000(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { org.apache.http.io.HttpTransportMetrics getMetrics(); }
-keepclassmembers class android.support.v7.a.b$a$3 { void <init>(android.support.v7.a.b$a,android.support.v7.a.b); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onAttachedToWindow(); }
-keepclassmembers class android.transition.Transition$EpicenterCallback { void <init>(); }
-keepclassmembers class android.net.http.AndroidHttpClient$LoggingConfiguration { boolean access$400(android.net.http.AndroidHttpClient$LoggingConfiguration); }
-keepclassmembers class android.net.http.AndroidHttpClient$LoggingConfiguration { void access$600(android.net.http.AndroidHttpClient$LoggingConfiguration,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setAlpha(int); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieAttributeHandler { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.widget.TextView { void setHint(java.lang.CharSequence); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.BootClassLoader { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.widget.TextView { boolean isSingleLine(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getHint(); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setLayoutDirection(int); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean isStateful(); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class libcore.icu.NativeNormalizer { java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.Editor$Blink { void cancel(); }
-keepclassmembers class android.widget.Editor$Blink { void uncancel(); }
-keepclassmembers class java.lang.Exception { void <init>(); }
-keepclassmembers class libcore.icu.TimeZoneNames { void access$100(java.lang.String,java.lang.String[][]); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.Throwable); }
-keepclassmembers class java.lang.Package { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void add(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.FastScroller$5 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(android.view.View,int); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int); }
-keepclassmembers class android.widget.TextView { void setRawInputType(int); }
-keepclassmembers class java.lang.Package { java.lang.String getName(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class java.lang.Package { int hashCode(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.BitmapFactory { void setDensityFromOptions(android.graphics.Bitmap,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.widget.TextView { int getInputType(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream { void awaitPendingOps(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setElevation(float); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHasEmbeddedTabs(boolean); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { void <init>(android.animation.Animator); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { android.animation.Animator newInstance(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStream(java.io.InputStream); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources,android.graphics.drawable.AnimatedVectorDrawable$1); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setShowHideAnimationEnabled(boolean); }
-keepclassmembers class android.widget.TextView { void setPrivateImeOptions(java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void init(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHomeButtonEnabled(boolean); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getError(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.TextView { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.widget.z { float a(android.view.MotionEvent,int); }
-keepclassmembers class android.widget.TextView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.widget.TextView { void restartMarqueeIfNeeded(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.text.util.Linkify$1 { void <init>(); }
-keepclassmembers class java.util.IllegalFormatCodePointException { void <init>(int); }
-keepclassmembers class java.util.IllegalFormatCodePointException { java.lang.String getMessage(); }
-keepclassmembers class android.support.v7.a.q$2 { void <init>(android.support.v7.a.q); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { int getNavigationMode(); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int,android.os.StrictMode$1); }
-keepclassmembers class java.security.Signature { void <init>(java.lang.String); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { void <init>(java.util.Properties); }
-keepclassmembers class java.lang.InterruptedException { void <init>(); }
-keepclassmembers class java.lang.InterruptedException { void <init>(java.lang.String); }
-keepclassmembers class android.os.StrictMode$3 { java.lang.Object initialValue(); }
-keepclassmembers class android.os.StrictMode$3 { void <init>(); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(); }
-keepclassmembers class android.support.a.a.f$f { void a(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect); }
-keepclassmembers class android.support.a.a.f$f { boolean a(); }
-keepclassmembers class java.text.NumberFormat { void <init>(); }
-keepclassmembers class android.support.a.a.f$f { void b(int,int); }
-keepclassmembers class android.support.v4.widget.z { void a(int,android.view.animation.Animation$AnimationListener); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { boolean checkTag(int); }
-keepclassmembers class android.support.a.a.f$f { boolean b(); }
-keepclassmembers class android.support.a.a.f$f { boolean c(int,int); }
-keepclassmembers class android.support.a.a.f$f { void c(); }
-keepclassmembers class android.support.v4.widget.z { void a(int,boolean); }
-keepclassmembers class android.support.a.a.f$f { int getChangingConfigurations(); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.Collections$EmptySet { int size(); }
-keepclassmembers class android.support.v4.widget.z { void a(android.view.MotionEvent); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.Collections$EmptySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(java.util.Collections$1); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.app.Notification$Style { void <init>(); }
-keepclassmembers class android.app.Notification$Style { void internalSetBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { java.lang.String getValue(); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { java.lang.String getName(); }
-keepclassmembers class android.app.Notification$Style { void setBuilder(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Style { void internalSetSummaryText(java.lang.CharSequence); }
-keepclassmembers class java.security.Signature { java.lang.String getAlgorithm(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { boolean hasNationalNumberPattern(); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.util.Locale); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setNationalNumberPattern(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getNationalNumberPattern(); }
-keepclassmembers class java.util.MissingFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(int,int,int); }
-keepclassmembers class java.text.NumberFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class java.text.NumberFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getPossibleNumberPattern(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setPossibleNumberPattern(java.lang.String); }
-keepclassmembers class java.lang.ref.Reference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setExampleNumber(java.lang.String); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { int hashCode(); }
-keepclassmembers class android.support.v4.widget.z { void a(boolean,boolean); }
-keepclassmembers class android.app.Notification$Style { void applyTopPadding(android.widget.RemoteViews); }
-keepclassmembers class android.view.animation.AnimationSet { void reset(); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object get(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.view.animation.AnimationSet { java.util.List getAnimations(); }
-keepclassmembers class android.app.Notification$Style { android.app.Notification buildStyled(android.app.Notification); }
-keepclassmembers class android.support.v4.widget.z { boolean a(android.view.animation.Animation); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.app.Notification$Style { void populateTickerView(android.app.Notification); }
-keepclassmembers class android.app.Notification$Style { void populateContentView(android.app.Notification); }
-keepclassmembers class java.text.NumberFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class android.view.animation.AnimationSet { android.view.animation.Animation clone(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$4 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class java.text.NumberFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.app.Notification$Style { void populateHeadsUpContentView(android.app.Notification); }
-keepclassmembers class java.text.NumberFormat { void setMinimumFractionDigits(int); }
-keepclassmembers class android.app.Notification$Style { boolean hasProgress(); }
-keepclassmembers class android.widget.TextView { void unregisterForPreDraw(); }
-keepclassmembers class android.widget.TextView { void registerForPreDraw(); }
-keepclassmembers class java.text.NumberFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class android.support.v4.widget.z { void b(int,android.view.animation.Animation$AnimationListener); }
-keepclassmembers class java.text.NumberFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider access$000(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class android.content.ClipDescription$1 { void <init>(); }
-keepclassmembers class android.widget.TextView { void onAttachedToWindow(); }
-keepclassmembers class android.widget.TextView { void onDetachedFromWindowInternal(); }
-keepclassmembers class android.widget.TextView { void onScreenStateChanged(int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { boolean collapseActionView(); }
-keepclassmembers class com.android.volley.h$a { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { int getDefaultPort(); }
-keepclassmembers class org.apache.http.impl.DefaultConnectionReuseStrategy { void <init>(); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { java.lang.String getName(); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { org.apache.http.conn.scheme.SocketFactory getSocketFactory(); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { boolean isLayered(); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { int resolvePort(int); }
-keepclassmembers class android.support.design.widget.o { boolean f(android.support.design.widget.o$a); }
-keepclassmembers class android.support.v4.widget.a { float a(float,float,float); }
-keepclassmembers class android.support.design.widget.o { boolean g(android.support.design.widget.o$a); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { android.animation.StateListAnimator newInstance(); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { int hashCode(); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class android.view.View$5 { void <init>(java.lang.String); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class android.support.v4.widget.z { boolean d(); }
-keepclassmembers class android.support.v4.widget.z { void e(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDefaultDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestLayout(); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(); }
-keepclassmembers class android.support.v4.widget.z { void f(); }
-keepclassmembers class android.support.v4.widget.a { int a(int,int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(); }
-keepclassmembers class android.support.v4.widget.a { boolean a(); }
-keepclassmembers class android.view.DisplayInfo$1 { void <init>(); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { java.lang.String getHost(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(android.graphics.drawable.LayerDrawable$ChildDrawable,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class android.support.v4.widget.a { boolean a(android.support.v4.widget.a,boolean); }
-keepclassmembers class android.support.v4.widget.a { boolean a(android.support.v4.widget.a); }
-keepclassmembers class android.view.DisplayInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.TextView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.support.v4.widget.a { int b(int,int,int); }
-keepclassmembers class android.support.v4.widget.z { void setColorViewAlpha(int); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(android.net.Uri$1); }
-keepclassmembers class android.support.v4.widget.a { boolean b(android.support.v4.widget.a); }
-keepclassmembers class android.support.v4.widget.a { boolean b(android.support.v4.widget.a,boolean); }
-keepclassmembers class android.support.v4.widget.a { android.support.v4.widget.a$a c(android.support.v4.widget.a); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean startNestedScroll(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void stopNestedScroll(); }
-keepclassmembers class android.support.v4.widget.a { void c(); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.widget.a { boolean c(android.support.v4.widget.a,boolean); }
-keepclassmembers class android.support.v4.widget.a { void d(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class android.support.v4.widget.a { boolean d(android.support.v4.widget.a); }
-keepclassmembers class android.support.v4.widget.a { boolean e(android.support.v4.widget.a); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean); }
-keepclassmembers class android.support.v4.widget.a { void f(android.support.v4.widget.a); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class android.support.v4.widget.a { android.view.View g(android.support.v4.widget.a); }
-keepclassmembers class android.support.v4.widget.z { void onDetachedFromWindow(); }
-keepclassmembers class java.net.ContentHandler { void <init>(); }
-keepclassmembers class android.support.v4.widget.a { android.support.v4.widget.a a(int); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$7 { void <init>(com.shapps.mintubeapp.MainActivity); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { void run(); }
-keepclassmembers class java.lang.reflect.Method$1 { void <init>(); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { android.text.Editable access$002(android.text.method.MultiTapKeyListener$Timeout,android.text.Editable); }
-keepclassmembers class android.support.v4.widget.a { android.support.v4.widget.a a(boolean); }
-keepclassmembers class android.support.v4.widget.a { android.support.v4.widget.a b(int); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { void <init>(); }
-keepclassmembers class android.widget.FrameLayout { void setVisibility(int); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { float specialValue(); }
-keepclassmembers class android.support.v4.widget.a { android.support.v4.widget.a c(int); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { void <init>(java.lang.StringToReal$1); }
-keepclassmembers class android.widget.FrameLayout { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.support.v4.widget.a { android.support.v4.widget.a d(float,float); }
-keepclassmembers class android.widget.FrameLayout { void drawableStateChanged(); }
-keepclassmembers class android.support.v4.widget.a { android.support.v4.widget.a d(int); }
-keepclassmembers class android.widget.FrameLayout { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.support.v4.widget.a { android.support.v4.widget.a e(float,float); }
-keepclassmembers class android.widget.TextView { boolean isTextSelectable(); }
-keepclassmembers class android.widget.FrameLayout { android.graphics.drawable.Drawable getForeground(); }
-keepclassmembers class android.widget.TextView { void setTextIsSelectable(boolean); }
-keepclassmembers class android.animation.LayoutTransition$2 { void <init>(android.animation.LayoutTransition,android.view.View); }
-keepclassmembers class android.animation.LayoutTransition$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.FrameLayout { void applyForegroundTint(); }
-keepclassmembers class android.view.textservice.TextInfo$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.os.AsyncTask$3 { void <init>(android.os.AsyncTask,java.util.concurrent.Callable); }
-keepclassmembers class android.widget.TextView { int getHorizontalOffsetForDrawables(); }
-keepclassmembers class android.support.v4.widget.z { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class java.lang.reflect.Proxy { boolean isVisibleToClassLoader(java.lang.ClassLoader,java.lang.Class); }
-keepclassmembers class android.support.v4.widget.z { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.ImageButton { boolean onSetAlpha(int); }
-keepclassmembers class java.lang.reflect.Proxy { boolean isProxyClass(java.lang.Class); }
-keepclassmembers class android.widget.FrameLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class org.apache.commons.logging.LogFactory { org.apache.commons.logging.Log getLog(java.lang.Class); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$200(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$100(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$300(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { int getKeyCode(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$400(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.widget.FrameLayout { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$102(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$302(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$402(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$202(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.FrameLayout { void setMeasureAllChildren(boolean); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.FrameLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <init>(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void <init>(android.os.Parcel,android.app.SearchableInfo$1); }
-keepclassmembers class android.support.v4.g.aq { void a(android.view.View,int,int); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.design.widget.p { android.view.animation.Animation a(android.support.design.widget.p); }
-keepclassmembers class android.support.design.widget.p { android.view.animation.Animation a(android.support.design.widget.p,android.view.animation.Animation); }
-keepclassmembers class android.support.design.widget.p { void a(android.support.design.widget.p$a); }
-keepclassmembers class android.support.design.widget.p { void d(); }
-keepclassmembers class android.support.v4.widget.z { void stopNestedScroll(); }
-keepclassmembers class android.widget.TextView { int getLineCount(); }
-keepclassmembers class android.view.InputEvent$1 { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$FloatKeyframes); }
-keepclassmembers class com.shapps.mintubeapp.GetPermission { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,float[]); }
-keepclassmembers class android.support.design.widget.p { void b(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.widget.TextView { int getFadeHeight(boolean); }
-keepclassmembers class java.io.FileDescriptor { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout { int getBaseline(); }
-keepclassmembers class android.widget.RelativeLayout { void requestLayout(); }
-keepclassmembers class java.io.FileDescriptor { boolean valid(); }
-keepclassmembers class android.widget.TextView { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class java.io.FileDescriptor { int getInt$(); }
-keepclassmembers class java.io.FileDescriptor { void setInt$(int); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View); }
-keepclassmembers class android.support.v4.app.ai$a { android.app.Notification$Builder a(); }
-keepclassmembers class android.net.Uri$Part$EmptyPart { void <init>(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View,int); }
-keepclassmembers class android.net.Uri$Part$EmptyPart { boolean isEmpty(); }
-keepclassmembers class android.support.v4.app.ai$a { void a(android.support.v4.app.ae$a); }
-keepclassmembers class android.widget.TextView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setChecked(boolean); }
-keepclassmembers class android.support.v7.widget.d$b { void <init>(android.support.v7.widget.d); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setEnabled(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setPassword(boolean); }
-keepclassmembers class android.support.v7.widget.d$b { void <init>(android.support.v7.widget.d,android.support.v7.widget.d$1); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.Object getKey(); }
-keepclassmembers class java.util.HashMap$HashMapEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.Object getValue(); }
-keepclassmembers class android.support.v7.widget.d$b { android.support.v7.widget.ak a(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollable(boolean); }
-keepclassmembers class android.support.v4.b.e$d { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setCurrentItemIndex(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setItemCount(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setFromIndex(int); }
-keepclassmembers class android.support.v4.f.j { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setToIndex(int); }
-keepclassmembers class android.support.v4.f.j { java.lang.Object a(int); }
-keepclassmembers class android.support.v4.f.j { java.lang.Object a(int,java.lang.Object); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setTitle(java.lang.CharSequence); }
-keepclassmembers class java.util.HashMap$KeyIterator { void <init>(java.util.HashMap); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setClassName(java.lang.CharSequence); }
-keepclassmembers class java.util.HashMap$KeyIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.support.v4.f.j { void b(int); }
-keepclassmembers class java.util.HashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.util.List getText(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class org.apache.commons.codec.binary.Base64 { byte[] encodeBase64(byte[]); }
-keepclassmembers class android.support.v4.f.j { void c(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean isSealed(); }
-keepclassmembers class android.support.v4.g.b.b { float getInterpolation(float); }
-keepclassmembers class android.support.v4.g.b.b { void <init>(); }
-keepclassmembers class android.widget.TextView { void hideErrorIfUnchanged(); }
-keepclassmembers class java.lang.NoSuchFieldException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { void <init>(); }
-keepclassmembers class android.text.method.WordIterator { void <init>(java.util.Locale); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { org.apache.http.Header getContentType(); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { boolean isChunked(); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { org.apache.http.Header getContentEncoding(); }
-keepclassmembers class libcore.io.BufferIterator { void <init>(); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { void setContentType(org.apache.http.Header); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { void setContentEncoding(org.apache.http.Header); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { void setChunked(boolean); }
-keepclassmembers class com.android.internal.app.AlertController$6 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class android.text.method.WordIterator { boolean isAfterLetterOrDigit(int); }
-keepclassmembers class android.text.method.WordIterator { boolean isOnLetterOrDigit(int); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator); }
-keepclassmembers class android.widget.RelativeLayout { void measureChild(android.view.View,android.widget.RelativeLayout$LayoutParams,int,int); }
-keepclassmembers class android.widget.TextView { boolean onCheckIsTextEditor(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(); }
-keepclassmembers class org.apache.commons.logging.LogFactory { boolean isDiagnosticsEnabled(); }
-keepclassmembers class org.apache.commons.logging.LogFactory { void logDiagnostic(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class org.apache.http.protocol.RequestExpectContinue { void <init>(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.support.v7.widget.ak$3 { void <init>(android.support.v7.widget.ak); }
-keepclassmembers class android.widget.OverScroller { boolean isFinished(); }
-keepclassmembers class android.support.v7.widget.ak$3 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap); }
-keepclassmembers class java.text.Format$Field { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ak$3 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void setRootAlpha(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { int getRootAlpha(); }
-keepclassmembers class android.widget.TextView { void onCommitCompletion(android.view.inputmethod.CompletionInfo); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$ToolbarCallbackWrapper { void <init>(com.android.internal.app.ToolbarActionBar,android.view.Window$Callback); }
-keepclassmembers class android.widget.TextView { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class android.widget.OverScroller { boolean springBack(int,int,int,int,int,int); }
-keepclassmembers class android.widget.TextView { void beginBatchEdit(); }
-keepclassmembers class android.widget.TextView { void endBatchEdit(); }
-keepclassmembers class android.widget.TextView { void onBeginBatchEdit(); }
-keepclassmembers class android.text.method.Touch$DragState { void <init>(float,float,int,int); }
-keepclassmembers class android.widget.TextView { void onEndBatchEdit(); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.widget.TextView { boolean onPrivateIMECommand(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { boolean canApplyTheme(); }
-keepclassmembers class android.animation.ArgbEvaluator { void <init>(); }
-keepclassmembers class android.support.design.widget.f$b { void <init>(android.support.design.widget.f); }
-keepclassmembers class android.support.design.widget.f$b { void <init>(android.support.design.widget.f,android.support.design.widget.f$1); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.g.n$b { void <init>(); }
-keepclassmembers class android.support.v4.g.n$b { int a(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.widget.OverScroller { void abortAnimation(); }
-keepclassmembers class android.support.v4.g.n$b { int b(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.util.Properties { void <init>(); }
-keepclassmembers class java.util.Properties { void <init>(java.util.Properties); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { int read(byte[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class android.support.v4.b.c { void a(android.content.Context,android.content.Intent[]); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$FairSync { void <init>(); }
-keepclassmembers class java.text.DateFormat$Field { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$FairSync { void lock(); }
-keepclassmembers class android.support.v4.g.q { android.view.MenuItem a(android.view.MenuItem,android.view.View); }
-keepclassmembers class org.apache.http.client.protocol.RequestDefaultHeaders { void <init>(); }
-keepclassmembers class android.support.v4.app.b { void a(android.app.Activity); }
-keepclassmembers class android.support.v4.g.q { android.view.View a(android.view.MenuItem); }
-keepclassmembers class android.support.v4.g.q { void a(android.view.MenuItem,int); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { void close(); }
-keepclassmembers class android.support.v4.g.q { android.view.MenuItem b(android.view.MenuItem,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { java.lang.String getGroupName(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { byte[] getId(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void clearMutated(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { byte[] getEncoded(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { void resetId(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { java.security.Principal getLocalPrincipal(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColor(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.drawable.VectorDrawable$VGroup access$000(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$300(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$400(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$302(android.graphics.drawable.VectorDrawable$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$402(android.graphics.drawable.VectorDrawable$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean isStateful(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { java.security.cert.Certificate[] getPeerCertificates(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { int getPeerPort(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { java.lang.String getPeerHost(); }
-keepclassmembers class android.app.RemoteInput$1 { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout { int getRelatedViewBaseline(int[],int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { java.lang.String getProtocol(); }
-keepclassmembers class com.android.volley.ServerError { void <init>(com.android.volley.g); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.android.volley.ServerError { void <init>(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.WaitingThread { void interrupt(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { int access$100(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState,android.graphics.drawable.ColorDrawable$1); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.graphics.Matrix access$600(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.graphics.Matrix access$700(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.lang.VirtualMachineError { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.InstantiationError { void <init>(java.lang.String); }
-keepclassmembers class java.net.Proxy { void <init>(); }
-keepclassmembers class java.net.Proxy { java.net.Proxy$Type type(); }
-keepclassmembers class java.net.Proxy { java.net.SocketAddress address(); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int,float); }
-keepclassmembers class android.support.v4.g.af$c { int a(android.view.View); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(); }
-keepclassmembers class android.support.v4.g.af$c { void <init>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean isStateful(); }
-keepclassmembers class android.text.util.Linkify$4 { void <init>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(android.text.util.LinkSpec,android.text.util.LinkSpec); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void addState(int[],android.graphics.drawable.Drawable); }
-keepclassmembers class android.util.SparseArray { void <init>(); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int,java.lang.Object); }
-keepclassmembers class android.util.SparseArray { void removeAt(int); }
-keepclassmembers class android.view.View$6 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setIncludeFontPadding(boolean); }
-keepclassmembers class android.animation.FloatKeyframeSet { void <init>(android.animation.Keyframe$FloatKeyframe[]); }
-keepclassmembers class android.support.v7.a.k$c { void <init>(android.support.v7.a.k,android.content.Context); }
-keepclassmembers class android.animation.FloatKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.animation.FloatKeyframeSet { void invalidateCache(); }
-keepclassmembers class android.util.SparseArray { int size(); }
-keepclassmembers class android.util.SparseArray { int keyAt(int); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context); }
-keepclassmembers class android.util.SparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.support.v7.a.k$c { void setBackgroundResource(int); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.util.SparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class android.util.SparseArray { int indexOfKey(int); }
-keepclassmembers class android.content.Intent { void <init>(); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.text.Normalizer { java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String,android.net.Uri); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.app.Notification$BigTextStyle setBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.app.Notification$BigTextStyle setSummaryText(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$BigTextStyle { void <init>(android.app.Notification$Builder); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class android.support.v4.g.s$b { void <init>(); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.app.Notification$BigTextStyle bigText(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int getStateCount(); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(); }
-keepclassmembers class android.support.v4.g.s$b { int a(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v4.g.s$b { int b(android.view.MotionEvent,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void mutate(); }
-keepclassmembers class android.support.v4.g.s$b { float c(android.view.MotionEvent,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.Drawable getStateDrawable(int); }
-keepclassmembers class android.webkit.WebView { void destroy(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int getStateDrawableIndex(int[]); }
-keepclassmembers class android.support.v4.g.s$b { float d(android.view.MotionEvent,int); }
-keepclassmembers class libcore.io.NioBufferIterator { void <init>(long,int,boolean); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void setLayoutDirection(int); }
-keepclassmembers class libcore.io.NioBufferIterator { void seek(int); }
-keepclassmembers class android.support.design.widget.o$1 { void <init>(android.support.design.widget.o); }
-keepclassmembers class android.webkit.WebView { void loadUrl(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addStateSet(int[],android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View$10 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void checkForResize(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfKeyframe(int[]); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources,android.graphics.drawable.StateListDrawable$1); }
-keepclassmembers class android.webkit.WebView { void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int getKeyframeIdAt(int); }
-keepclassmembers class android.app.Notification$BigTextStyle { void populateBigContentView(android.app.Notification); }
-keepclassmembers class android.widget.TextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.security.Signature$SignatureImpl { boolean engineVerify(byte[]); }
-keepclassmembers class android.widget.TextView { boolean isShowingHint(); }
-keepclassmembers class org.apache.http.conn.ssl.BrowserCompatHostnameVerifier { void <init>(); }
-keepclassmembers class java.security.Signature$SignatureImpl { void engineUpdate(byte[],int,int); }
-keepclassmembers class org.apache.http.conn.ssl.BrowserCompatHostnameVerifier { void verify(java.lang.String,java.lang.String[],java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean canApplyTheme(); }
-keepclassmembers class android.os.Process { void killProcess(int); }
-keepclassmembers class java.security.Signature$SignatureImpl { void engineInitVerify(java.security.PublicKey); }
-keepclassmembers class org.apache.http.message.BasicLineParser { void <init>(org.apache.http.ProtocolVersion); }
-keepclassmembers class org.apache.http.message.BasicLineParser { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void access$200(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState); }
-keepclassmembers class android.support.v4.g.at { boolean a(android.view.ViewConfiguration); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(); }
-keepclassmembers class android.webkit.WebView { void onPause(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void reverse(); }
-keepclassmembers class android.webkit.WebView { void onResume(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { boolean canReverse(); }
-keepclassmembers class java.security.Signature$SignatureImpl { java.security.SignatureSpi getSpi(); }
-keepclassmembers class android.webkit.WebView { java.lang.String findAddress(java.lang.String); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(int); }
-keepclassmembers class android.webkit.WebView { void setWebChromeClient(android.webkit.WebChromeClient); }
-keepclassmembers class android.webkit.WebView { void setWebViewClient(android.webkit.WebViewClient); }
-keepclassmembers class android.webkit.WebView { void setWebContentsDebuggingEnabled(boolean); }
-keepclassmembers class android.webkit.WebView { android.webkit.WebSettings getSettings(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int following(int); }
-keepclassmembers class android.webkit.WebView { void addJavascriptInterface(java.lang.Object,java.lang.String); }
-keepclassmembers class android.webkit.WebView { void onChildViewAdded(android.view.View,android.view.View); }
-keepclassmembers class javax.net.ssl.SSLPeerUnverifiedException { void <init>(java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { java.text.CharacterIterator getText(); }
-keepclassmembers class android.webkit.WebView { void onChildViewRemoved(android.view.View,android.view.View); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean hasText(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setText(java.lang.String,java.text.CharacterIterator); }
-keepclassmembers class android.webkit.WebView { void onGlobalFocusChanged(android.view.View,android.view.View); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean isBoundary(int); }
-keepclassmembers class android.support.v4.c.a.l$a { void <init>(android.support.v4.c.a.j$a,android.content.res.Resources); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int preceding(int); }
-keepclassmembers class android.view.ViewStub { void onMeasure(int,int); }
-keepclassmembers class android.view.ViewStub { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewStub { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.g.af$g { void <init>(); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(android.os.StrictMode$1); }
-keepclassmembers class android.support.v4.g.af$g { void a(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class android.widget.TextView { void computeScroll(); }
-keepclassmembers class android.view.animation.Animation { void reset(); }
-keepclassmembers class android.support.v4.g.af$g { void a(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.support.v4.g.af$g { void d(android.view.View); }
-keepclassmembers class org.apache.http.message.BasicLineParser { org.apache.http.ProtocolVersion createProtocolVersion(int,int); }
-keepclassmembers class android.webkit.WebView { void onDetachedFromWindowInternal(); }
-keepclassmembers class android.webkit.WebView { void onAttachedToWindow(); }
-keepclassmembers class android.support.v4.g.af$g { boolean m(android.view.View); }
-keepclassmembers class android.webkit.WebView { void setLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.g.af$g { int q(android.view.View); }
-keepclassmembers class java.util.TreeMap$EntrySet { void <init>(java.util.TreeMap); }
-keepclassmembers class dalvik.system.CloseGuard { void <init>(); }
-keepclassmembers class java.nio.BufferUnderflowException { void <init>(); }
-keepclassmembers class android.support.v4.g.af$g { int r(android.view.View); }
-keepclassmembers class android.webkit.WebView { void setOverScrollMode(int); }
-keepclassmembers class android.support.v4.g.af$g { void u(android.view.View); }
-keepclassmembers class android.view.animation.Animation { void detach(); }
-keepclassmembers class java.util.TreeMap$EntrySet { int size(); }
-keepclassmembers class android.support.v4.g.af$g { boolean x(android.view.View); }
-keepclassmembers class android.view.animation.Animation { boolean isInitialized(); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View); }
-keepclassmembers class android.text.Spannable$Factory { void <init>(); }
-keepclassmembers class android.view.View$UnsetPressedState { void run(); }
-keepclassmembers class android.webkit.WebView { int computeHorizontalScrollRange(); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class dalvik.system.CloseGuard { void close(); }
-keepclassmembers class android.webkit.WebView { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.view.animation.Animation { void initialize(int,int,int,int); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollRange(); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollOffset(); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { boolean isOID(java.lang.String); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.webkit.WebView { void computeScroll(); }
-keepclassmembers class org.apache.http.protocol.HTTP { boolean isWhitespace(char); }
-keepclassmembers class android.webkit.WebView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.webkit.WebView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.TreeMap$Bound$1 { void <init>(java.lang.String,int); }
-keepclassmembers class android.webkit.WebView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.content.Context,int); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.widget.TextView { int getSelectionStart(); }
-keepclassmembers class android.text.StaticLayout { int getLineCount(); }
-keepclassmembers class android.webkit.WebView { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { int getSelectionEnd(); }
-keepclassmembers class android.view.animation.Animation { void setStartOffset(long); }
-keepclassmembers class android.webkit.WebView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { boolean hasSelection(); }
-keepclassmembers class android.webkit.WebView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { void setSingleLine(); }
-keepclassmembers class android.webkit.WebView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.webkit.WebView { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(); }
-keepclassmembers class android.widget.TextView { void setSingleLine(boolean); }
-keepclassmembers class android.widget.TextView { void applySingleLine(boolean,boolean,boolean); }
-keepclassmembers class android.webkit.WebView { void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.view.animation.Animation { void setStartTime(long); }
-keepclassmembers class android.text.StaticLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.widget.TextView { void setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.text.StaticLayout { int getTopPadding(); }
-keepclassmembers class android.webkit.WebView { void onWindowVisibilityChanged(int); }
-keepclassmembers class android.text.StaticLayout { int getBottomPadding(); }
-keepclassmembers class com.android.volley.h { com.android.volley.m$a b(com.android.volley.h); }
-keepclassmembers class android.widget.TextView { void setMarqueeRepeatLimit(int); }
-keepclassmembers class android.webkit.WebView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.animation.Animation { void setRepeatMode(int); }
-keepclassmembers class com.android.volley.h { int c(java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { void <init>(java.net.PlainSocketImpl); }
-keepclassmembers class android.view.animation.Animation { void setRepeatCount(int); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int available(); }
-keepclassmembers class com.android.volley.h { int a(); }
-keepclassmembers class android.view.animation.Animation { boolean isFillEnabled(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { void close(); }
-keepclassmembers class android.webkit.WebView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int read(); }
-keepclassmembers class android.widget.TextView { void setCursorVisible(boolean); }
-keepclassmembers class android.view.animation.Animation { void setFillEnabled(boolean); }
-keepclassmembers class android.text.StaticLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.webkit.WebView { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.view.animation.Animation { void setFillBefore(boolean); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int read(byte[],int,int); }
-keepclassmembers class android.text.StaticLayout { void prepare(); }
-keepclassmembers class android.view.animation.Animation { void setFillAfter(boolean); }
-keepclassmembers class android.text.StaticLayout { void finish(); }
-keepclassmembers class android.webkit.WebView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.view.animation.Animation { void setZAdjustment(int); }
-keepclassmembers class com.android.volley.h { com.android.volley.VolleyError a(com.android.volley.VolleyError); }
-keepclassmembers class android.webkit.WebView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.view.animation.Animation { void setBackgroundColor(int); }
-keepclassmembers class com.android.volley.h { com.android.volley.h a(int); }
-keepclassmembers class android.view.animation.Animation { float getScaleFactor(); }
-keepclassmembers class com.android.volley.h { com.android.volley.h a(com.android.volley.a$a); }
-keepclassmembers class android.view.animation.Animation { void setDetachWallpaper(boolean); }
-keepclassmembers class android.webkit.WebView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void <init>(); }
-keepclassmembers class com.android.volley.h { com.android.volley.h a(com.android.volley.i); }
-keepclassmembers class android.view.animation.Animation { long getStartTime(); }
-keepclassmembers class com.android.volley.h { com.android.volley.h a(com.android.volley.l); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void draw(android.graphics.Canvas); }
-keepclassmembers class com.android.volley.h { com.android.volley.h a(java.lang.Object); }
-keepclassmembers class android.view.animation.Animation { long getDuration(); }
-keepclassmembers class android.webkit.WebView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.view.animation.Animation { long getStartOffset(); }
-keepclassmembers class com.android.volley.h { void a(java.lang.String); }
-keepclassmembers class android.view.animation.Animation { boolean getFillBefore(); }
-keepclassmembers class android.view.animation.Animation { boolean getFillAfter(); }
-keepclassmembers class android.webkit.WebView { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class com.android.volley.h { int b(); }
-keepclassmembers class android.webkit.WebView { void onMeasure(int,int); }
-keepclassmembers class android.widget.TextView { void stopMarquee(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean needsMirroring(); }
-keepclassmembers class com.android.volley.h { void b(com.android.volley.VolleyError); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Float); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class android.widget.TextView { void startStopMarquee(boolean); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeBounds(); }
-keepclassmembers class android.view.animation.Animation { void setAnimationListener(android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.webkit.WebView { void setLayerType(int,android.graphics.Paint); }
-keepclassmembers class android.widget.TextView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.webkit.WebView { void onStartTemporaryDetach(); }
-keepclassmembers class org.apache.http.auth.AuthScope { void <init>(java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class android.webkit.WebView { void onFinishTemporaryDetach(); }
-keepclassmembers class android.webkit.WebView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class com.android.volley.h { java.lang.String c(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class com.android.volley.h { java.lang.String d(); }
-keepclassmembers class com.android.volley.h { com.android.volley.a$a e(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void getOutline(android.graphics.Outline); }
-keepclassmembers class com.android.volley.h { boolean f(); }
-keepclassmembers class com.android.volley.h { java.util.Map g(); }
-keepclassmembers class android.content.Intent { java.lang.String getAction(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setDither(boolean); }
-keepclassmembers class android.content.Intent { java.lang.String getType(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.android.volley.h { boolean p(); }
-keepclassmembers class com.android.volley.h { com.android.volley.h$a q(); }
-keepclassmembers class com.android.volley.h { com.android.volley.l s(); }
-keepclassmembers class com.android.volley.h { int r(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.android.volley.h { void t(); }
-keepclassmembers class android.content.Intent { java.lang.String resolveTypeIfNeeded(android.content.ContentResolver); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.content.Intent { android.content.ClipData getClipData(); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationStart(); }
-keepclassmembers class android.view.animation.Transformation { int getTransformationType(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationRepeat(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isStateful(); }
-keepclassmembers class android.view.animation.Transformation { void set(android.view.animation.Transformation); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationEnd(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAutoMirrored(boolean); }
-keepclassmembers class android.view.animation.Animation { boolean getTransformation(long,android.view.animation.Transformation,float); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isAutoMirrored(); }
-keepclassmembers class android.content.Intent { void setAllowFds(boolean); }
-keepclassmembers class java.io.EOFException { void <init>(); }
-keepclassmembers class android.view.animation.Animation { boolean hasStarted(); }
-keepclassmembers class android.view.animation.Animation { boolean hasEnded(); }
-keepclassmembers class com.android.volley.h { boolean u(); }
-keepclassmembers class android.support.v4.g.ai { int a(android.view.View); }
-keepclassmembers class android.view.animation.Animation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.view.animation.Transformation { android.graphics.Matrix getMatrix(); }
-keepclassmembers class android.view.animation.Transformation { void setAlpha(float); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspot(float,float); }
-keepclassmembers class android.view.animation.Transformation { void setClipRect(android.graphics.Rect); }
-keepclassmembers class android.view.animation.Transformation { void setClipRect(int,int,int,int); }
-keepclassmembers class android.view.animation.Transformation { android.graphics.Rect getClipRect(); }
-keepclassmembers class android.view.animation.Transformation { float getAlpha(); }
-keepclassmembers class org.apache.http.auth.AuthScope { int hashCode(); }
-keepclassmembers class java.io.ObjectStreamClass$3 { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onStateChange(int[]); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.lang.reflect.Constructor,java.lang.reflect.Constructor); }
-keepclassmembers class org.apache.http.conn.params.ConnManagerParams$1 { void <init>(); }
-keepclassmembers class android.view.animation.Animation { boolean hasAlpha(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onLevelChange(int); }
-keepclassmembers class org.apache.http.conn.params.ConnManagerParams$1 { int getMaxForRoute(org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.io.ObjectStreamClass$4 { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicWidth(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicHeight(); }
-keepclassmembers class android.content.Intent { java.lang.String getStringExtra(java.lang.String); }
-keepclassmembers class android.content.Intent { java.lang.CharSequence getCharSequenceExtra(java.lang.String); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.TextView { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumWidth(); }
-keepclassmembers class android.widget.TextView { void onStartTemporaryDetach(); }
-keepclassmembers class android.content.Intent { android.os.Parcelable getParcelableExtra(java.lang.String); }
-keepclassmembers class android.widget.TextView { void onFinishTemporaryDetach(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumHeight(); }
-keepclassmembers class android.content.Intent { android.os.Parcelable[] getParcelableArrayExtra(java.lang.String); }
-keepclassmembers class android.support.v4.c.a.a$h { void <init>(); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter); }
-keepclassmembers class android.support.v4.c.a.a$h { android.graphics.drawable.Drawable c(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getParcelableArrayListExtra(java.lang.String); }
-keepclassmembers class android.widget.TextView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.support.v4.c.a.a$h { int d(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.TextView { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter,android.widget.Filter$1); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.widget.TextView { void setSelected(boolean); }
-keepclassmembers class android.graphics.drawable.RippleBackground$2 { void <init>(android.graphics.drawable.RippleBackground); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getStringArrayListExtra(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleBackground$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { void <init>(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getCurrentIndex(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int getTotalDuration(); }
-keepclassmembers class android.widget.TextView { boolean didTouchFocusSelect(); }
-keepclassmembers class android.widget.TextView { void cancelLongPress(); }
-keepclassmembers class com.shapps.mintubeapp.RateOrStar { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void initializeDrawableForDisplay(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1 { void <init>(org.apache.http.impl.conn.tsccm.ConnPoolByRoute,org.apache.http.impl.conn.tsccm.WaitingThreadAborter,org.apache.http.conn.routing.HttpRoute,java.lang.Object); }
-keepclassmembers class android.support.v4.app.o { void <init>(); }
-keepclassmembers class libcore.net.UriCodec { void <init>(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1 { org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter); }
-keepclassmembers class org.apache.http.client.methods.HttpHead { void <init>(java.lang.String); }
-keepclassmembers class java.lang.RealToString { java.lang.String resultOrSideEffect(java.lang.AbstractStringBuilder,java.lang.String); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskReadViolation { void <init>(int); }
-keepclassmembers class java.lang.RealToString { java.lang.String doubleToString(double); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.RealToString { void appendDouble(java.lang.AbstractStringBuilder,double); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class com.android.server.NetworkManagementSocketTagger$SocketTags { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void clearMutated(); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollRange(); }
-keepclassmembers class android.ddm.DdmHandleThread { void <init>(); }
-keepclassmembers class android.content.Intent { android.content.ComponentName getComponent(); }
-keepclassmembers class android.support.v4.app.ab$l { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.support.v4.app.ab$l { android.app.Notification a(android.support.v4.app.ab$d,android.support.v4.app.ab$e); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(android.view.View); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter,android.widget.ArrayAdapter$1); }
-keepclassmembers class android.support.v7.a.k$a { void <init>(android.support.v7.a.k); }
-keepclassmembers class com.shapps.mintubeapp.a { void a(java.lang.String); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean apply(android.view.View); }
-keepclassmembers class android.support.v7.a.k$a { void <init>(android.support.v7.a.k,android.support.v7.a.k$1); }
-keepclassmembers class com.shapps.mintubeapp.a { void b(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void <init>(int); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { boolean checkTag(int); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <init>(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetMetaState(android.text.Spannable); }
-keepclassmembers class java.lang.RealToString { java.lang.String floatToString(float); }
-keepclassmembers class java.lang.RealToString { void appendFloat(java.lang.AbstractStringBuilder,float); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.TextView { boolean canSelectText(); }
-keepclassmembers class libcore.net.UriCodec { void appendEncoded(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(boolean); }
-keepclassmembers class libcore.net.UriCodec { void appendPartiallyEncoded(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(); }
-keepclassmembers class android.widget.TextView { java.util.Locale getSpellCheckerLocale(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.widget.TextView { void onLocaleChanged(); }
-keepclassmembers class android.widget.TextView { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class android.widget.TextView { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.Intent { android.content.Intent setAction(java.lang.String); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjustMetaAfterKeypress(android.text.Spannable); }
-keepclassmembers class android.support.v4.g.ap$1 { void <init>(android.support.v4.g.aa); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjust(android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLock(android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLockedMeta(android.text.Spannable); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void <init>(android.content.Context); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void press(android.text.Editable,java.lang.Object); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String decode(java.lang.String); }
-keepclassmembers class libcore.net.UriCodec { void appendHex(java.lang.StringBuilder,byte); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.content.Intent { void setClipData(android.content.ClipData); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void release(android.text.Editable,java.lang.Object,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { void sendAccessibilityEvent(int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$e a(android.support.v7.widget.ActionMenuView); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTextForAccessibility(); }
-keepclassmembers class java.lang.RealToString { void <init>(java.lang.RealToString$1); }
-keepclassmembers class android.widget.TextView { boolean onTextContextMenuItem(int); }
-keepclassmembers class android.support.v7.widget.ax { void <init>(android.content.Context); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTransformedText(int,int); }
-keepclassmembers class android.widget.TextView { void stopSelectionActionMode(); }
-keepclassmembers class android.widget.TextView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.widget.TextView { boolean canCopy(); }
-keepclassmembers class android.support.v7.widget.ax { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class com.android.volley.ParseError { void <init>(java.lang.Throwable); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { void <init>(android.text.Spanned,char[],char[]); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint); }
-keepclassmembers class android.util.SparseBooleanArray { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.ServerSessionContext { void sessionRemoved(javax.net.ssl.SSLSession); }
-keepclassmembers class android.widget.TextView { int getOffsetForPosition(float,float); }
-keepclassmembers class com.android.org.conscrypt.ServerSessionContext { void putSession(javax.net.ssl.SSLSession); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.widget.TextView { int getOffsetAtCoordinate(int,float); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int,boolean); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.widget.TextView { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class org.apache.http.client.methods.HttpOptions { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void onResolveDrawables(int); }
-keepclassmembers class android.widget.TextView { void resetResolvedDrawables(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { void <init>(int); }
-keepclassmembers class android.widget.TextView { void viewClicked(android.view.inputmethod.InputMethodManager); }
-keepclassmembers class android.util.SparseBooleanArray { int size(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { boolean checkTag(int); }
-keepclassmembers class android.system.StructTimeval { void <init>(long,long); }
-keepclassmembers class android.util.SparseBooleanArray { int keyAt(int); }
-keepclassmembers class android.util.SparseBooleanArray { boolean valueAt(int); }
-keepclassmembers class org.apache.http.message.HeaderGroup { void clear(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.http.message.HeaderGroup { void addHeader(org.apache.http.Header); }
-keepclassmembers class android.text.Layout { void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.support.design.widget.AppBarLayout { void b(); }
-keepclassmembers class android.text.method.BaseKeyListener { void <init>(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.util.SparseBooleanArray { void clear(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionStart(); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionEnd(); }
-keepclassmembers class android.support.v4.app.d { void a(android.app.Activity); }
-keepclassmembers class android.widget.TextView { void access$200(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { android.text.Layout access$800(android.widget.TextView); }
-keepclassmembers class android.util.Log$TerribleFailure { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteSelection(android.view.View,android.text.Editable); }
-keepclassmembers class android.graphics.Rect { void <init>(); }
-keepclassmembers class android.graphics.Rect { void <init>(int,int,int,int); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.support.a.a.c$a { void <init>(); }
-keepclassmembers class android.support.a.a.c$a { void <init>(android.support.a.a.c$1); }
-keepclassmembers class android.graphics.Rect { void <init>(android.graphics.Rect); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { void <init>(com.android.i18n.phonenumbers.NumberParseException$ErrorType,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { com.android.i18n.phonenumbers.NumberParseException$ErrorType getErrorType(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class org.apache.http.client.NonRepeatableRequestException { void <init>(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { java.net.InetAddress getInetAddress(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { void setTcpNoDelay(boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.view.menu.f$a b(android.support.v7.widget.ActionMenuView); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { void setSoLinger(boolean,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { void setSoTimeout(int); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void <init>(android.widget.RemoteViews,int,android.widget.RemoteViews); }
-keepclassmembers class android.support.design.widget.AppBarLayout { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void a(android.support.v7.view.menu.f); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { int getSoTimeout(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void a(android.support.v7.view.menu.l$a,android.support.v7.view.menu.f$a); }
-keepclassmembers class android.content.Intent { android.content.Intent setFlags(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { boolean isConnected(); }
-keepclassmembers class android.graphics.Rect { boolean isEmpty(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { boolean isClosed(); }
-keepclassmembers class android.content.Intent { android.content.Intent setComponent(android.content.ComponentName); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean a(android.support.v7.view.menu.h); }
-keepclassmembers class java.util.Hashtable$ValueIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { int getPort(); }
-keepclassmembers class java.util.Hashtable$ValueIterator { java.lang.Object next(); }
-keepclassmembers class java.util.Hashtable$ValueIterator { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class libcore.io.Memory { int peekInt(long,boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$c c(); }
-keepclassmembers class android.graphics.Rect { void setEmpty(); }
-keepclassmembers class android.graphics.Rect { void set(int,int,int,int); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.view.menu.f d(); }
-keepclassmembers class android.graphics.Rect { void set(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void <init>(android.graphics.drawable.AnimatedVectorDrawable,boolean,boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { boolean canReverse(); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void start(); }
-keepclassmembers class android.graphics.FontFamily { boolean addFontWeightStyle(java.lang.String,int,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void stop(); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { int read(byte[]); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[]); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean g(); }
-keepclassmembers class android.graphics.Rect { boolean contains(int,int); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { void close(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { void checkAbort(); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { void checkEOF(int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void i(); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { void checkClose(); }
-keepclassmembers class android.graphics.Rect { boolean intersect(int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.widget.FastScroller$2 { void <init>(android.widget.FastScroller); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onDetachedFromWindow(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.Layout { long getLineRangeForDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.FastScroller$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v4.g.e$b { void <init>(); }
-keepclassmembers class android.support.v4.g.e$b { void a(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.graphics.Rect { void union(int,int,int,int); }
-keepclassmembers class android.text.Layout { int getWidth(); }
-keepclassmembers class android.text.Layout { java.lang.CharSequence getText(); }
-keepclassmembers class android.text.Layout { android.text.TextPaint getPaint(); }
-keepclassmembers class android.text.Layout { int getHeight(); }
-keepclassmembers class android.text.Layout { float getSpacingMultiplier(); }
-keepclassmembers class android.text.Layout { float getSpacingAdd(); }
-keepclassmembers class android.graphics.Rect { void union(android.graphics.Rect); }
-keepclassmembers class android.text.Layout { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class android.graphics.Rect { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class libcore.io.IoBridge { java.lang.Object getSocketOption(java.io.FileDescriptor,int); }
-keepclassmembers class org.apache.http.client.protocol.ResponseProcessCookies { void <init>(); }
-keepclassmembers class android.graphics.Rect { void readFromParcel(android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.Toast { void setGravity(int,int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setExpandedActionViewsExclusive(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { void <init>(java.util.List); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setOverflowReserved(boolean); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { java.util.List access$000(org.apache.harmony.security.x509.GeneralSubtrees); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { java.util.List getSubtrees(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$e); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void invalidateCache(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.ArrayList getKeyframes(); }
-keepclassmembers class android.app.ActivityTransitionState$1 { void <init>(android.app.ActivityTransitionState,android.view.ViewGroup,android.app.Activity); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { void <init>(java.security.cert.X509Certificate); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.List getKeyframes(); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int,boolean); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.util.Set getCriticalExtensionOIDs(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class android.text.Layout { float getSecondaryHorizontal(int,boolean); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,boolean); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { boolean hasUnsupportedCriticalExtension(); }
-keepclassmembers class javax.net.ssl.SSLException { void <init>(java.lang.String); }
-keepclassmembers class libcore.io.IoBridge { boolean booleanFromInt(int); }
-keepclassmembers class libcore.io.IoBridge { int booleanToInt(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.a.b$a$4 { void <init>(android.support.v7.a.b$a,android.widget.ListView,android.support.v7.a.b); }
-keepclassmembers class javax.net.ssl.SSLException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v7.a.k$3 { void <init>(android.support.v7.a.k); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class libcore.io.IoBridge { void setSocketOption(java.io.FileDescriptor,int,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.Principal getIssuerDN(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.Principal getSubjectDN(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { boolean[] getKeyUsage(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.lang.String toString(); }
-keepclassmembers class java.lang.AssertionError { void <init>(); }
-keepclassmembers class android.util.LongSparseArray { void <init>(); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,android.text.Layout$TabStops,boolean); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.PublicKey getPublicKey(); }
-keepclassmembers class android.util.LongSparseArray { void <init>(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getNumberOfLayers(); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long,java.lang.Object); }
-keepclassmembers class android.util.LongSparseArray { void delete(long); }
-keepclassmembers class android.util.LongSparseArray { void remove(long); }
-keepclassmembers class android.content.Intent { void <init>(android.os.Parcel); }
-keepclassmembers class android.util.LongSparseArray { void removeAt(int); }
-keepclassmembers class libcore.io.IoBridge { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.util.LongSparseArray { int size(); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.util.LongSparseArray { long keyAt(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setPaddingMode(int); }
-keepclassmembers class android.util.LongSparseArray { int indexOfKey(long); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$10 { void <init>(com.shapps.mintubeapp.MainActivity); }
-keepclassmembers class android.util.LongSparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$10 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftOf(int); }
-keepclassmembers class android.text.Layout { int getOffsetToRightOf(int); }
-keepclassmembers class libcore.io.IoBridge { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class libcore.io.IoBridge { int maybeThrowAfterSendto(boolean,android.system.ErrnoException); }
-keepclassmembers class android.support.v7.widget.d$f { void <init>(android.support.v7.widget.d,android.support.v7.widget.d$1); }
-keepclassmembers class android.support.v7.widget.d$f { void <init>(android.support.v7.widget.d); }
-keepclassmembers class android.text.Layout { boolean shouldClampCursor(int); }
-keepclassmembers class org.apache.http.client.methods.HttpPost { void <init>(java.lang.String); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor,boolean); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams); }
-keepclassmembers class android.text.method.NumberKeyListener { void <init>(); }
-keepclassmembers class android.text.method.NumberKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean a(android.view.View); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { int getState(); }
-keepclassmembers class libcore.io.IoBridge { int postRecvfrom(boolean,java.net.DatagramPacket,boolean,java.net.InetSocketAddress,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setState(int); }
-keepclassmembers class android.widget.CursorAdapter { android.database.Cursor getCursor(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetState(int,int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicDomainHandler { void <init>(); }
-keepclassmembers class libcore.io.IoBridge { java.io.FileDescriptor socket(boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean d(android.view.View); }
-keepclassmembers class android.provider.Settings$NameValueTable { android.net.Uri getUriFor(android.net.Uri,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { java.lang.String access$000(org.apache.harmony.security.x509.PolicyInformation); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void unparkSuccessor(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.Collections { int secondaryHash(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getOpacity(); }
-keepclassmembers class android.support.v4.c.a.k$a { void <init>(android.support.v4.c.a.j$a,android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.Toolbar { void a(int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(java.lang.Thread,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v4.b.d { void a(android.content.Context,android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.Toolbar { void a(android.content.Context,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(java.lang.Thread,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void cancelAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.io.FilterOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isStateful(); }
-keepclassmembers class java.io.FilterOutputStream { void close(); }
-keepclassmembers class java.io.FilterOutputStream { void flush(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void a(android.support.v7.view.menu.l$a,android.support.v7.view.menu.f$a); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean shouldParkAfterFailedAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v7.widget.Toolbar { void b(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean b(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean parkAndCheckInterrupt(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean acquireQueued(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetEnd(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetLeft(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetStart(); }
-keepclassmembers class java.util.TreeMap$Node { void <init>(java.util.TreeMap$Node,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetRight(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.Menu getMenu(); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getNavigationContentDescription(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.graphics.drawable.Drawable getNavigationIcon(); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.Object getKey(); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getSubtitle(); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.text.Layout { char getEllipsisChar(android.text.TextUtils$TruncateAt); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.Object getValue(); }
-keepclassmembers class android.text.Layout { java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onDetachedFromWindow(); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node next(); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node prev(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node last(); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node first(); }
-keepclassmembers class android.text.Layout { void access$000(android.text.Layout,int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService$4$1 { void <init>(com.shapps.mintubeapp.PlayerService$4); }
-keepclassmembers class org.apache.http.message.BasicHttpResponse { void <init>(org.apache.http.StatusLine); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService$4$1 { void run(); }
-keepclassmembers class org.apache.http.message.BasicHttpResponse { org.apache.http.HttpEntity getEntity(); }
-keepclassmembers class org.apache.http.message.BasicHttpResponse { org.apache.http.StatusLine getStatusLine(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class java.util.concurrent.RejectedExecutionException { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquire(int); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean release(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class org.apache.http.message.BasicHttpResponse { void setEntity(org.apache.http.HttpEntity); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean hasQueuedThreads(); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { void <init>(java.util.Enumeration,java.util.jar.JarFile); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { boolean hasMoreElements(); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { java.lang.Object nextElement(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109SpecFactory { void <init>(); }
-keepclassmembers class android.content.res.ColorStateList$1 { void <init>(); }
-keepclassmembers class android.support.v4.g.p$a { android.view.MenuItem a(android.view.MenuItem,android.view.View); }
-keepclassmembers class android.support.v4.g.p$a { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean hasQueuedPredecessors(); }
-keepclassmembers class android.support.v4.g.p$a { android.view.View a(android.view.MenuItem); }
-keepclassmembers class android.support.v4.g.p$a { android.view.MenuItem b(android.view.MenuItem,int); }
-keepclassmembers class android.support.v4.g.p$a { void a(android.view.MenuItem,int); }
-keepclassmembers class android.support.v4.g.p$a { boolean b(android.view.MenuItem); }
-keepclassmembers class android.support.v4.g.p$a { boolean c(android.view.MenuItem); }
-keepclassmembers class android.widget.RadioButton { void toggle(); }
-keepclassmembers class android.content.res.ColorStateList$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.Rect$1 { void <init>(); }
-keepclassmembers class android.graphics.Rect$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.Typeface { int getStyle(); }
-keepclassmembers class android.graphics.Typeface { void setDefault(android.graphics.Typeface); }
-keepclassmembers class android.net.Uri$1 { void <init>(); }
-keepclassmembers class android.net.Uri$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean isOnSyncQueue(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { void <init>(); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { long getContentLength(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface defaultFromStyle(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean findNodeFromTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.io.StringWriter { void flush(); }
-keepclassmembers class java.io.StringWriter { java.lang.String toString(); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { boolean isRepeatable(); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { void setContentLength(long); }
-keepclassmembers class java.io.StringWriter { void write(char[],int,int); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { void setContent(java.io.InputStream); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean transferForSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { boolean isStreaming(); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { void consumeContent(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean transferAfterCancelledWait(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.support.v4.app.w { android.content.Intent a(android.app.Activity); }
-keepclassmembers class android.widget.Editor$SelectionActionModeCallback { void <init>(android.widget.Editor); }
-keepclassmembers class java.util.AbstractCollection { void <init>(); }
-keepclassmembers class java.util.AbstractCollection { boolean addAll(java.util.Collection); }
-keepclassmembers class android.support.v4.app.w { boolean a(android.app.Activity,android.content.Intent); }
-keepclassmembers class java.util.AbstractCollection { boolean containsAll(java.util.Collection); }
-keepclassmembers class android.support.v7.widget.h { void <init>(android.view.View,android.support.v7.widget.m); }
-keepclassmembers class java.util.AbstractCollection { boolean isEmpty(); }
-keepclassmembers class android.support.v4.app.w { java.lang.String b(android.content.Context,android.content.ComponentName); }
-keepclassmembers class android.support.v4.app.w { void b(android.app.Activity,android.content.Intent); }
-keepclassmembers class java.util.AbstractCollection { boolean removeAll(java.util.Collection); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickFillInIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.h { android.content.res.ColorStateList a(); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetWaitStatus(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int,int); }
-keepclassmembers class android.animation.IntKeyframeSet { void <init>(android.animation.Keyframe$IntKeyframe[]); }
-keepclassmembers class android.animation.IntKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetNext(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.animation.IntKeyframeSet { void invalidateCache(); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void <init>(); }
-keepclassmembers class android.support.v7.widget.h { void a(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Short { void <init>(short); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Short); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(int,int,int); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void clear(); }
-keepclassmembers class java.lang.Short { int compare(short,short); }
-keepclassmembers class android.widget.Editor$SelectionActionModeCallback { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.h { void a(android.util.AttributeSet,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <init>(byte[],java.util.List); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { java.util.List getAttributes(); }
-keepclassmembers class java.lang.Short { int hashCode(); }
-keepclassmembers class java.lang.Short { int intValue(); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow2(java.lang.Throwable); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow(java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.h { android.graphics.PorterDuff$Mode b(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <init>(byte[],java.util.List,org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1); }
-keepclassmembers class java.lang.Short { short shortValue(); }
-keepclassmembers class java.lang.Short { java.lang.String toString(); }
-keepclassmembers class com.android.volley.a.h { void <init>(java.lang.String,com.android.volley.j$b,com.android.volley.j$a); }
-keepclassmembers class android.widget.Toast$TN$1 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(); }
-keepclassmembers class android.support.v7.widget.h { void c(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onRtlPropertiesChanged(int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void flush(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void write(char[],int,int); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(com.android.internal.util.FastPrintWriter$1); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.widget.s { void a(android.widget.PopupWindow,int); }
-keepclassmembers class android.support.v4.widget.s { void a(android.widget.PopupWindow,boolean); }
-keepclassmembers class android.view.animation.AlphaAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.animation.AlphaAnimation { void <init>(float,float); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationContentDescription(int); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeBounds(); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean hasAlpha(); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { void <init>(); }
-keepclassmembers class android.support.v4.widget.m { void a(android.widget.ListView,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setOnMenuItemClickListener(android.support.v7.widget.Toolbar$c); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(android.graphics.Rect); }
-keepclassmembers class android.support.design.widget.o$b { int a(android.support.design.widget.o$b,int); }
-keepclassmembers class android.support.design.widget.o$b { java.lang.ref.WeakReference a(android.support.design.widget.o$b); }
-keepclassmembers class android.graphics.drawable.Drawable { void copyBounds(android.graphics.Rect); }
-keepclassmembers class android.support.design.widget.o$b { int b(android.support.design.widget.o$b); }
-keepclassmembers class android.support.design.widget.o$b { boolean a(android.support.design.widget.o$a); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { void setChangingConfigurations(int); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.Drawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { void invalidateSelf(); }
-keepclassmembers class android.graphics.drawable.Drawable { void scheduleSelf(java.lang.Runnable,long); }
-keepclassmembers class android.support.v4.widget.Space { int a(int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class android.support.v4.widget.Space { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLayoutDirection(); }
-keepclassmembers class android.support.v4.widget.Space { void onMeasure(int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setLayoutDirection(int); }
-keepclassmembers class javax.net.ssl.DefaultSSLSocketFactory { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class java.nio.charset.CharacterCodingException { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.Drawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.Drawable { void clearColorFilter(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isProjected(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setState(int[]); }
-keepclassmembers class android.graphics.drawable.Drawable { int[] getState(); }
-keepclassmembers class android.graphics.drawable.Drawable { void jumpToCurrentState(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setLevel(int); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLevel(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.support.v4.g.a.a$a { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isVisible(); }
-keepclassmembers class android.text.TextUtils { boolean isEmpty(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.Drawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.Drawable { int resolveOpacity(int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumWidth(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumHeight(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { int getVersion(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.drawable.Drawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.a.a.f { void <init>(android.support.a.a.f$1); }
-keepclassmembers class android.graphics.drawable.Drawable { void clearMutated(); }
-keepclassmembers class android.support.v7.widget.m$b { void <init>(int); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.TextUtils { void writeWhere(android.os.Parcel,android.text.Spanned,java.lang.Object); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { long toNanos(long); }
-keepclassmembers class android.support.a.a.f { void <init>(android.support.a.a.f$f,android.support.a.a.f$1); }
-keepclassmembers class android.support.a.a.f { int a(int,float); }
-keepclassmembers class android.text.method.BaseMovementMethod { void <init>(); }
-keepclassmembers class android.support.a.a.f { android.graphics.PorterDuff$Mode a(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class javax.net.ssl.SSLSocketFactory { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter); }
-keepclassmembers class android.widget.EdgeEffect { boolean isFinished(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean hasTranslucentRoot(); }
-keepclassmembers class android.widget.EdgeEffect { void onPull(float); }
-keepclassmembers class android.widget.AbsoluteLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.EdgeEffect { void onRelease(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void createCachedBitmapIfNeeded(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canReuseBitmap(int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void updateCacheStates(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canReuseCache(); }
-keepclassmembers class android.support.a.a.f { boolean a(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class java.io.ByteArrayInputStream { void <init>(byte[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class java.io.ByteArrayInputStream { void close(); }
-keepclassmembers class java.io.ByteArrayInputStream { void mark(int); }
-keepclassmembers class java.io.ByteArrayInputStream { boolean markSupported(); }
-keepclassmembers class android.text.TextUtils { void readSpan(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.apache.http.auth.AuthenticationException { void <init>(java.lang.String); }
-keepclassmembers class java.io.ByteArrayInputStream { void reset(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession { java.security.Principal getLocalPrincipal(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { boolean canApplyTheme(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void setError(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void initDefaultEncoder(); }
-keepclassmembers class android.support.a.a.f { void a(boolean); }
-keepclassmembers class android.support.a.a.f { java.lang.Object a(java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { int getChangingConfigurations(); }
-keepclassmembers class android.support.a.a.f { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.a.a.f { void clearColorFilter(); }
-keepclassmembers class android.support.a.a.f { boolean canApplyTheme(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.ak$d { void <init>(android.support.v7.widget.ak); }
-keepclassmembers class android.support.v7.widget.ak$d { void <init>(android.support.v7.widget.ak,android.support.v7.widget.ak$1); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getTopLine(android.widget.TextView); }
-keepclassmembers class android.support.v7.widget.ak$d { void onChanged(); }
-keepclassmembers class android.widget.Editor$SpanController { void <init>(android.widget.Editor); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromPath(java.lang.String); }
-keepclassmembers class com.android.volley.a.c$b { void <init>(java.io.InputStream); }
-keepclassmembers class org.apache.http.protocol.DefaultedHttpContext { java.lang.Object getAttribute(java.lang.String); }
-keepclassmembers class org.apache.http.protocol.DefaultedHttpContext { void setAttribute(java.lang.String,java.lang.Object); }
-keepclassmembers class com.android.volley.a.c$b { void <init>(java.io.InputStream,com.android.volley.a.c$1); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.volley.a.c$b { int a(com.android.volley.a.c$b); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushBytesLocked(); }
-keepclassmembers class android.widget.Editor$SpanController { void hide(); }
-keepclassmembers class android.support.a.a.f { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flush(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.a.a.f { int getLayoutDirection(); }
-keepclassmembers class android.support.a.a.f { int getMinimumHeight(); }
-keepclassmembers class android.transition.Scene { void setCurrentScene(android.view.View,android.transition.Scene); }
-keepclassmembers class android.support.a.a.f { int getMinimumWidth(); }
-keepclassmembers class android.support.a.a.f { int getOpacity(); }
-keepclassmembers class android.support.a.a.f { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.a.a.f { int[] getState(); }
-keepclassmembers class android.graphics.Paint$FontMetricsInt { void <init>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void println(); }
-keepclassmembers class android.support.a.a.f { void invalidateSelf(); }
-keepclassmembers class android.support.a.a.f { boolean isStateful(); }
-keepclassmembers class java.lang.reflect.Proxy$1 { void <init>(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollTop(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.a.a.f { void jumpToCurrentState(); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(); }
-keepclassmembers class android.support.a.a.f { boolean onStateChange(int[]); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.FormatterClosedException { void <init>(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible); }
-keepclassmembers class android.util.Slog { int d(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.a.a.f { void setAlpha(int); }
-keepclassmembers class android.util.LongSparseLongArray { long get(long,long); }
-keepclassmembers class android.support.a.a.f { void setAutoMirrored(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1ValueCollection { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void write(java.lang.String,int,int); }
-keepclassmembers class java.nio.ByteArrayBuffer { void <init>(byte[]); }
-keepclassmembers class android.support.a.a.f { void setBounds(int,int,int,int); }
-keepclassmembers class android.support.a.a.f { void setBounds(android.graphics.Rect); }
-keepclassmembers class android.support.a.a.f { void setChangingConfigurations(int); }
-keepclassmembers class android.os.StrictMode$2 { void <init>(); }
-keepclassmembers class android.os.StrictMode$2 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.a.a.f { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.util.HashMap$EntrySet { void <init>(java.util.HashMap); }
-keepclassmembers class android.support.a.a.f { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.a.a.f { void setHotspot(float,float); }
-keepclassmembers class java.util.HashMap$EntrySet { int size(); }
-keepclassmembers class java.util.HashMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.support.a.a.f { boolean setState(int[]); }
-keepclassmembers class java.util.HashMap$EntrySet { boolean isEmpty(); }
-keepclassmembers class android.util.LongSparseLongArray { long valueAt(int); }
-keepclassmembers class android.support.a.a.f { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.util.HashMap$EntrySet { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.util.LongSparseLongArray { void clear(); }
-keepclassmembers class android.util.LongSparseLongArray { int indexOfKey(long); }
-keepclassmembers class android.util.Slog { int wtfStack(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.b.a { android.graphics.drawable.Drawable a(android.content.Context,int); }
-keepclassmembers class android.widget.Editor$1 { void <init>(android.widget.Editor); }
-keepclassmembers class android.support.a.a.f { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.b.a { boolean a(android.content.Context,android.content.Intent[],android.os.Bundle); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { void <init>(java.util.Collection); }
-keepclassmembers class android.content.res.CompatibilityInfo$2 { void <init>(); }
-keepclassmembers class android.support.a.a.f { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.text.method.DateKeyListener { void <init>(); }
-keepclassmembers class android.text.method.DateKeyListener { int getInputType(); }
-keepclassmembers class com.android.volley.AuthFailureError { void <init>(com.android.volley.g); }
-keepclassmembers class android.support.v4.c.a.a$d { void <init>(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean isEmpty(); }
-keepclassmembers class android.text.method.DateKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.support.v4.c.a.a$d { void a(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.c.a.a$d { android.graphics.drawable.Drawable c(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.ActivityManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.util.HashSet { boolean add(java.lang.Object); }
-keepclassmembers class java.util.HashSet { void <init>(java.util.HashMap); }
-keepclassmembers class java.util.HashSet { void clear(); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getSystemResourceAsStream(java.lang.String); }
-keepclassmembers class android.support.v7.widget.q { void drawableStateChanged(); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.ClassLoader); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { int size(); }
-keepclassmembers class java.util.HashSet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.HashSet { boolean isEmpty(); }
-keepclassmembers class android.support.v7.widget.q { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class java.util.HashSet { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v7.widget.q { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class java.util.HashSet { boolean remove(java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.String toString(); }
-keepclassmembers class java.util.HashSet { int size(); }
-keepclassmembers class android.support.v7.widget.q { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.q { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.shapps.mintubeapp.SettingsActivity$3 { void <init>(com.shapps.mintubeapp.SettingsActivity,int[]); }
-keepclassmembers class android.support.v7.widget.q { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class findLoadedClass(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader getParent(); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.SettingsActivity$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.util.ArrayMap$1 { void <init>(android.util.ArrayMap); }
-keepclassmembers class android.util.ArrayMap$1 { int colGetSize(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class android.support.v7.a.g { android.support.v7.a.a a(); }
-keepclassmembers class android.util.ArrayMap$1 { void colRemoveAt(int); }
-keepclassmembers class android.text.TextUtils { void recycle(char[]); }
-keepclassmembers class android.support.v7.widget.FitWindowsLinearLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.text.TextUtils { char[] obtain(int); }
-keepclassmembers class android.support.v7.a.g { android.support.v7.a.a k(); }
-keepclassmembers class android.support.v7.a.g { boolean h(); }
-keepclassmembers class android.graphics.Canvas$EdgeType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.a.g { android.content.Context l(); }
-keepclassmembers class android.support.v7.a.g { android.view.Window$Callback o(); }
-keepclassmembers class android.support.v7.a.g { boolean n(); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { void <init>(android.widget.TextView); }
-keepclassmembers class java.nio.charset.MalformedInputException { void <init>(int); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { android.text.Editable getEditable(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.WaitingThreadAborter { void <init>(); }
-keepclassmembers class org.apache.http.impl.conn.tsccm.WaitingThreadAborter { void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isViablePhoneNumber(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeDigitsOnly(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void normalize(java.lang.StringBuilder); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalize(java.lang.String); }
-keepclassmembers class com.android.volley.d$1 { void <init>(com.android.volley.d,android.os.Handler); }
-keepclassmembers class javax.net.ssl.SSLContextSpi { void <init>(); }
-keepclassmembers class java.util.jar.Manifest { java.util.Map getEntries(); }
-keepclassmembers class com.android.volley.d$1 { void execute(java.lang.Runnable); }
-keepclassmembers class java.util.jar.Manifest { void removeChunks(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setInstance(com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isValidRegionCode(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean hasValidCountryCallingCode(int); }
-keepclassmembers class java.util.jar.Manifest { int getMainAttributesEnd(); }
-keepclassmembers class java.lang.CaseMapper$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v4.app.ap { void <init>(java.lang.String); }
-keepclassmembers class java.lang.CaseMapper$1 { void <init>(); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { byte[] engineDigest(); }
-keepclassmembers class android.text.TextUtils { int getLayoutDirectionFromFirstChar(java.util.Locale); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineUpdate(byte[],int,int); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineUpdate(byte); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String,java.security.MessageDigest$1); }
-keepclassmembers class java.util.zip.ZipEntry { long getSize(); }
-keepclassmembers class android.text.TextUtils { void access$000(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class java.net.URI$PartEncoder { void <init>(java.lang.String); }
-keepclassmembers class java.util.zip.ZipEntry { java.lang.String getName(); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.view.AbsSavedState$1); }
-keepclassmembers class android.text.method.DigitsKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isSignChar(char); }
-keepclassmembers class android.view.AbsSavedState { void <init>(); }
-keepclassmembers class android.graphics.Matrix$1 { void <init>(); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isDecimalPointChar(char); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(); }
-keepclassmembers class java.util.zip.ZipEntry { java.lang.String toString(); }
-keepclassmembers class android.support.v4.c.a.a$g { void <init>(); }
-keepclassmembers class java.lang.Object { void <init>(); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(java.util.zip.ZipEntry); }
-keepclassmembers class android.support.v4.c.a.a$g { void a(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class java.lang.Object { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Object { java.lang.Class getClass(); }
-keepclassmembers class android.support.v4.c.a.a$g { void a(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.text.DecimalFormat { java.lang.String getPositivePrefix(); }
-keepclassmembers class android.support.v4.c.a.a$g { void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class java.text.DecimalFormat { int hashCode(); }
-keepclassmembers class java.util.zip.ZipEntry { int hashCode(); }
-keepclassmembers class android.support.v4.c.a.a$g { void a(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.Object { void wait(long); }
-keepclassmembers class java.text.DecimalFormat { boolean isParseBigDecimal(); }
-keepclassmembers class android.support.v4.app.a { void a(android.app.Activity); }
-keepclassmembers class java.text.DecimalFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class android.support.v4.app.a { void b(android.app.Activity); }
-keepclassmembers class java.text.DecimalFormat { boolean isParseIntegerOnly(); }
-keepclassmembers class android.support.v4.c.a.a$g { void a(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.g.bb { void <init>(); }
-keepclassmembers class android.support.v7.a.j$a { void <init>(android.support.v7.a.j,android.view.Window$Callback); }
-keepclassmembers class android.support.v4.c.a.a$g { void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.c.a.a$g { android.graphics.drawable.Drawable c(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.c.a.a$g { boolean f(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.view.menu.e { void <init>(int,int); }
-keepclassmembers class android.support.v7.view.menu.e { void <init>(android.content.Context,int); }
-keepclassmembers class android.support.v7.view.menu.e { int a(android.support.v7.view.menu.e); }
-keepclassmembers class java.text.DecimalFormat { void setGroupingUsed(boolean); }
-keepclassmembers class android.support.v4.g.o { int a(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v4.g.o { int b(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.text.DecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.support.v4.g.ap { void a(android.view.View); }
-keepclassmembers class android.support.v4.g.ap { void a(android.view.View,float); }
-keepclassmembers class java.text.DecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.graphics.drawable.ScaleDrawable,android.content.res.Resources); }
-keepclassmembers class android.support.v4.g.ap { void a(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.g.ap { void a(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.g.ap { android.content.res.ColorStateList d(android.view.View); }
-keepclassmembers class android.support.v4.g.ap { android.graphics.PorterDuff$Mode e(android.view.View); }
-keepclassmembers class android.support.v7.widget.ak { android.support.v7.widget.ak$a a(android.support.v7.widget.ak); }
-keepclassmembers class android.support.v4.g.ap { float h(android.view.View); }
-keepclassmembers class android.support.v7.a.a$a { void <init>(int,int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { boolean canApplyTheme(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <init>(); }
-keepclassmembers class android.support.v7.a.a$a { void <init>(android.support.v7.a.a$a); }
-keepclassmembers class java.lang.ref.ReferenceQueue { java.lang.ref.Reference poll(); }
-keepclassmembers class android.support.v7.a.a$a { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { boolean canConstantState(); }
-keepclassmembers class android.support.v7.view.menu.e { void a(android.support.v7.view.menu.l$a); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.ak { android.widget.PopupWindow b(android.support.v7.widget.ak); }
-keepclassmembers class android.support.v7.widget.ak { android.support.v7.widget.ak$g c(android.support.v7.widget.ak); }
-keepclassmembers class android.support.v7.widget.ak { android.os.Handler d(android.support.v7.widget.ak); }
-keepclassmembers class android.support.v7.widget.a { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void close(); }
-keepclassmembers class android.support.v7.widget.ak { void a(android.view.View); }
-keepclassmembers class android.support.v7.widget.ak { void a(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class android.support.v7.widget.a { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.a { void setVisibility(int); }
-keepclassmembers class android.os.StrictMode$StrictModeNetworkViolation { void <init>(int); }
-keepclassmembers class android.support.v7.widget.ak { void a(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class android.support.v4.g.p$c { void <init>(); }
-keepclassmembers class android.support.v7.widget.ak { void a(boolean); }
-keepclassmembers class android.support.v4.g.p$c { boolean b(android.view.MenuItem); }
-keepclassmembers class android.support.v4.g.p$c { boolean c(android.view.MenuItem); }
-keepclassmembers class android.util.Log { int v(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startSpringback(); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ak { void c(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startOverfling(int); }
-keepclassmembers class android.util.Log { int i(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ak { void d(int); }
-keepclassmembers class android.support.v7.widget.ak { android.view.View e(); }
-keepclassmembers class android.support.v7.widget.ak { void e(int); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void endFling(); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void flywheelTouch(); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByFivePow(java.math.BigInteger,int); }
-keepclassmembers class android.support.v7.widget.ak { void g(int); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.ak { void i(); }
-keepclassmembers class android.support.v7.widget.ak { void j(); }
-keepclassmembers class android.support.v7.widget.ak { boolean k(); }
-keepclassmembers class android.support.v7.widget.ak { boolean l(); }
-keepclassmembers class android.support.v7.widget.ak { android.widget.ListView m(); }
-keepclassmembers class android.view.VelocityTracker { void recycle(); }
-keepclassmembers class android.view.VelocityTracker { void <init>(java.lang.String); }
-keepclassmembers class android.view.VelocityTracker { void clear(); }
-keepclassmembers class com.android.org.conscrypt.Platform { java.io.FileDescriptor getFileDescriptor(java.net.Socket); }
-keepclassmembers class org.apache.http.impl.io.IdentityOutputStream { void close(); }
-keepclassmembers class org.apache.http.impl.io.IdentityOutputStream { void flush(); }
-keepclassmembers class android.view.VelocityTracker { void computeCurrentVelocity(int,float); }
-keepclassmembers class android.view.VelocityTracker { float getXVelocity(); }
-keepclassmembers class android.view.VelocityTracker { float getYVelocity(); }
-keepclassmembers class com.android.org.conscrypt.Platform { java.lang.String getCurveName(java.security.spec.ECParameterSpec); }
-keepclassmembers class org.apache.http.impl.io.IdentityOutputStream { void write(byte[]); }
-keepclassmembers class android.view.VelocityTracker { float getXVelocity(int); }
-keepclassmembers class android.view.VelocityTracker { float getYVelocity(int); }
-keepclassmembers class com.android.org.conscrypt.Platform { void setSocketWriteTimeout(java.net.Socket,long); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void show(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void hide(); }
-keepclassmembers class com.android.org.conscrypt.Platform { com.android.org.conscrypt.OpenSSLKey wrapRsaKey(java.security.PrivateKey); }
-keepclassmembers class java.lang.ThreadGroup { int getMaxPriority(); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String getName(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void onDetached(); }
-keepclassmembers class android.widget.CompoundButton { void toggle(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class com.android.org.conscrypt.Platform { boolean isLiteralIpAddress(java.lang.String); }
-keepclassmembers class android.widget.CompoundButton { boolean performClick(); }
-keepclassmembers class android.widget.CompoundButton { boolean isChecked(); }
-keepclassmembers class java.lang.ThreadGroup { boolean isDaemon(); }
-keepclassmembers class java.lang.ThreadGroup { boolean isDestroyed(); }
-keepclassmembers class android.widget.CompoundButton { void setChecked(boolean); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate { void <init>(java.security.cert.X509Certificate,byte[]); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate { byte[] getEncoded(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity$2$1$1 { void onClick(android.view.View); }
-keepclassmembers class android.support.v7.a.k$1 { void <init>(android.support.v7.a.k); }
-keepclassmembers class java.io.PrintStream { void close(); }
-keepclassmembers class java.lang.ThreadGroup { void setDaemon(boolean); }
-keepclassmembers class java.io.PrintStream { void flush(); }
-keepclassmembers class java.security.SignatureException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$8 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.widget.aa$c { void <init>(); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater,int,java.util.zip.ZipEntry); }
-keepclassmembers class android.support.v4.widget.aa$c { void a(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.Context { void <init>(); }
-keepclassmembers class java.io.PrintStream { void newline(); }
-keepclassmembers class android.content.Context { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.content.Context { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.content.Context { java.lang.CharSequence getText(int); }
-keepclassmembers class android.content.Context { java.lang.String getString(int); }
-keepclassmembers class android.content.Context { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class android.content.Context { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int[]); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int,int[]); }
-keepclassmembers class android.widget.CompoundButton { int getHorizontalOffsetForDrawables(); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int); }
-keepclassmembers class com.android.internal.app.AlertController$CheckedItemAdapter { void <init>(android.content.Context,int,int,java.lang.CharSequence[]); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.Object); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.String); }
-keepclassmembers class java.io.PrintStream { void setError(); }
-keepclassmembers class java.io.PrintStream { void write(byte[],int,int); }
-keepclassmembers class android.os.PersistableBundle$1 { void <init>(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void recycle(); }
-keepclassmembers class com.shapps.mintubeapp.YTubeView { void <init>(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setRoot(android.view.ViewGroup); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setIsLayoutRtl(boolean); }
-keepclassmembers class android.support.a.a.c$b { void <init>(char,float[]); }
-keepclassmembers class android.support.a.a.c$b { void <init>(char,float[],android.support.a.a.c$1); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(java.lang.String); }
-keepclassmembers class android.support.a.a.c$b { void <init>(android.support.a.a.c$b); }
-keepclassmembers class android.widget.CompoundButton { void drawableStateChanged(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.a.a.c$b { void <init>(android.support.a.a.c$b,android.support.a.a.c$1); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTargetDensity(int); }
-keepclassmembers class android.widget.CompoundButton { void drawableHotspotChanged(float,float); }
-keepclassmembers class java.io.PrintStream { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Insets scaleFromDensity(android.graphics.Insets,int,int); }
-keepclassmembers class android.widget.CompoundButton { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void getRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class com.android.internal.policy.PolicyManager { android.view.Window makeNewWindow(android.content.Context); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void add(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setNinePatch(android.graphics.NinePatch); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void remove(java.lang.Object); }
-keepclassmembers class android.content.res.StringBlock { void <init>(long,boolean); }
-keepclassmembers class java.lang.reflect.AccessibleObject { void <init>(); }
-keepclassmembers class java.lang.reflect.AccessibleObject { boolean isAccessible(); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getInternationalCurrencySymbol(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getCurrencySymbol(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getDecimalSeparator(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getDigit(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getGroupingSeparator(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getInfinity(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$6 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator$6 { void onTranslucentConversionComplete(boolean); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getMinusSignString(); }
-keepclassmembers class android.util.SparseIntArray { void <init>(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getPercentString(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getMonetaryDecimalSeparator(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getNaN(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getPatternSeparator(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getPerMill(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getZeroDigit(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getExponentSeparator(); }
-keepclassmembers class android.util.SparseIntArray { int get(int); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class android.util.SparseIntArray { int get(int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.support.v7.a.c$a { void <init>(android.content.Context); }
-keepclassmembers class java.util.Stack { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getAlpha(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.util.Stack { java.lang.Object push(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.a.c$a { android.support.v7.a.c$a a(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.support.v7.a.c$a { android.support.v7.a.c$a a(boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean needsMirroring(); }
-keepclassmembers class android.support.v7.a.c$a { android.support.v7.a.c$a b(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.support.v7.a.c$a { android.support.v7.a.c$a b(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class javax.net.ssl.SSLContext { void <init>(javax.net.ssl.SSLContextSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.SettingsActivity { void <init>(); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLSocketFactory getSocketFactory(); }
-keepclassmembers class android.support.v7.a.c$a { android.support.v7.a.c c(); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class java.net.SocketAddress { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { void <init>(long); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { void <init>(long,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isPossibleNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.text.method.TimeKeyListener { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { long getPkeyContext(); }
-keepclassmembers class android.text.method.TimeKeyListener { int getInputType(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult testNumberLengthAgainstPattern(java.util.regex.Pattern,java.lang.String); }
-keepclassmembers class android.text.method.TimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { boolean isWrapped(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isShorterThanPossibleNormalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.String); }
-keepclassmembers class com.shapps.mintubeapp.SettingsActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getMinimumWidth(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getMinimumHeight(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.view.ViewGroup { boolean debugDraw(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.graphics.drawable.NinePatchDrawable$1); }
-keepclassmembers class org.apache.http.impl.entity.StrictContentLengthStrategy { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadii(float[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadius(float); }
-keepclassmembers class android.view.ViewGroup { void focusableViewAvailable(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList); }
-keepclassmembers class android.view.ViewGroup { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class android.view.ViewGroup { android.view.View focusSearch(android.view.View,int); }
-keepclassmembers class android.widget.Editor$TextDisplayList { void <init>(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource maybeStripInternationalPrefixAndNormalize(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.Collections$2 { void <init>(); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.Notification$InboxStyle { android.app.Notification$InboxStyle setBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.Notification$InboxStyle { android.app.Notification$InboxStyle setSummaryText(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$InboxStyle { android.app.Notification$InboxStyle addLine(java.lang.CharSequence); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.RandomAccessFile { void close(); }
-keepclassmembers class android.view.ViewGroup { boolean hasTransientState(); }
-keepclassmembers class android.view.ViewGroup { void clearChildFocus(android.view.View); }
-keepclassmembers class java.io.RandomAccessFile { java.io.FileDescriptor getFD(); }
-keepclassmembers class android.view.ViewGroup { void clearFocus(); }
-keepclassmembers class java.nio.FileChannelImpl$1 { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void unFocus(android.view.View); }
-keepclassmembers class java.io.RandomAccessFile { long length(); }
-keepclassmembers class android.view.ViewGroup { android.view.View getFocusedChild(); }
-keepclassmembers class org.apache.http.impl.io.HttpRequestWriter { void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter,org.apache.http.params.HttpParams); }
-keepclassmembers class java.io.RandomAccessFile { int read(byte[],int,int); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFocus(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void <init>(int); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { int getPolicyMask(); }
-keepclassmembers class java.io.RandomAccessFile { void readFully(byte[]); }
-keepclassmembers class java.io.RandomAccessFile { int readInt(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean checkRegionForParsing(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void setPolicyMask(int); }
-keepclassmembers class android.support.v4.b.e$c { void <init>(); }
-keepclassmembers class android.support.v4.b.e$c { android.content.Intent a(android.content.ComponentName); }
-keepclassmembers class android.widget.TextView$1 { void <init>(android.widget.TextView,java.lang.CharSequence); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseAndKeepRawInput(java.lang.String,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.app.Notification$InboxStyle { void populateBigContentView(android.app.Notification); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void buildPathIfDirty(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { boolean isSecure(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { java.net.Socket getSocket(); }
-keepclassmembers class android.view.ViewGroup { void recomputeViewAttributes(android.view.View); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColor(android.content.res.ColorStateList); }
-keepclassmembers class android.view.ViewGroup { void bringChildToFront(android.view.View); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isStateful(); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void <init>(android.widget.TextView,int,int); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void fixDirection(boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setDither(boolean); }
-keepclassmembers class android.widget.Editor$ErrorPopup { int getResourceId(int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void update(int,int,int,int,boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.support.v4.g.j$a { void <init>(android.support.v4.g.m); }
-keepclassmembers class android.transition.PathMotion { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$4 { void <init>(int); }
-keepclassmembers class android.view.ViewOutlineProvider { void <init>(); }
-keepclassmembers class android.support.v4.app.p { boolean a(android.view.View,android.view.animation.Animation); }
-keepclassmembers class android.support.v4.app.p { int b(int,boolean); }
-keepclassmembers class android.animation.IntEvaluator { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$1 { void <init>(android.graphics.drawable.DrawableContainer); }
-keepclassmembers class android.support.v4.app.m { void <init>(android.support.v4.app.n); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void <init>(byte[]); }
-keepclassmembers class android.support.v4.app.m { android.support.v4.app.Fragment a(java.lang.String); }
-keepclassmembers class android.support.v4.app.m { android.support.v4.app.o a(); }
-keepclassmembers class android.view.animation.Animation$3 { void <init>(android.view.animation.Animation); }
-keepclassmembers class android.support.v4.app.m { void a(android.os.Parcelable,java.util.List); }
-keepclassmembers class android.support.v4.app.m { void a(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.m { void a(android.support.v4.f.i); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.support.v4.app.m { void a(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.view.ViewGroup { void exitHoverTargets(); }
-keepclassmembers class android.support.v4.app.m { void c(); }
-keepclassmembers class android.support.v4.app.m { void f(); }
-keepclassmembers class android.view.ViewGroup { void cancelHoverTarget(android.view.View); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String[] split(java.lang.CharSequence,int); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { boolean hasHoveredChild(); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Paint { void <init>(); }
-keepclassmembers class android.view.ViewGroup { android.view.MotionEvent obtainMotionEventNoHistoryOrSelf(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Paint { void <init>(android.graphics.Paint); }
-keepclassmembers class android.graphics.Paint { void set(android.graphics.Paint); }
-keepclassmembers class android.graphics.Paint { void setClassVariablesFrom(android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$Style getStyle(); }
-keepclassmembers class android.graphics.Paint { void setStyle(android.graphics.Paint$Style); }
-keepclassmembers class android.support.v4.app.p { android.view.animation.Animation a(android.support.v4.app.Fragment,int,boolean,int); }
-keepclassmembers class android.graphics.Paint { void setStrokeCap(android.graphics.Paint$Cap); }
-keepclassmembers class android.graphics.Paint { void setStrokeJoin(android.graphics.Paint$Join); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader getShader(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader setShader(android.graphics.Shader); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter getColorFilter(); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.Paint { android.graphics.Xfermode setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.graphics.Paint { android.graphics.PathEffect setPathEffect(android.graphics.PathEffect); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface getTypeface(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface setTypeface(android.graphics.Typeface); }
-keepclassmembers class android.graphics.Paint { void setShadowLayer(float,float,float,int); }
-keepclassmembers class android.graphics.Paint { java.util.Locale getTextLocale(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { float getFloatOrFraction(android.content.res.TypedArray,int,float); }
-keepclassmembers class android.graphics.Paint { float getLetterSpacing(); }
-keepclassmembers class android.graphics.Paint { void setLetterSpacing(float); }
-keepclassmembers class android.graphics.Paint { java.lang.String getFontFeatureSettings(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaqueForState(); }
-keepclassmembers class android.support.v4.app.p { void a(int,boolean); }
-keepclassmembers class android.graphics.Paint { float getFontSpacing(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void clearMutated(); }
-keepclassmembers class android.view.ViewGroup { void clearTouchTargets(); }
-keepclassmembers class android.view.ViewGroup { void cancelAndClearTouchTargets(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.graphics.drawable.GradientDrawable$1); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget getTouchTarget(android.view.View); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget addTouchTarget(android.view.View,int); }
-keepclassmembers class android.view.ViewGroup { void cancelTouchTarget(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { void <init>(); }
-keepclassmembers class android.support.v4.app.p { void a(android.support.v4.app.Fragment); }
-keepclassmembers class java.util.TreeMap$Bound { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.TreeMap$Bound { void <init>(java.lang.String,int,java.util.TreeMap$1); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { int getVersion(); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { org.apache.http.Header getVersionHeader(); }
-keepclassmembers class android.app.ActivityManagerNative$1 { void <init>(); }
-keepclassmembers class android.app.ActivityManagerNative$1 { java.lang.Object create(); }
-keepclassmembers class java.util.Collections$3 { void <init>(java.util.Collection); }
-keepclassmembers class java.util.Collections$3 { boolean hasMoreElements(); }
-keepclassmembers class java.util.Collections$3 { java.lang.Object nextElement(); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.Thread$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPrePerformAccessibilityAction(android.view.View,int,android.os.Bundle); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { boolean shouldRecycleViewType(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getScrapView(int); }
-keepclassmembers class android.view.ViewGroup { boolean isLayoutModeOptical(); }
-keepclassmembers class android.view.ViewGroup { int sign(int); }
-keepclassmembers class android.support.design.internal.a { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.support.design.internal.a { void drawableStateChanged(); }
-keepclassmembers class android.view.ViewGroup { void drawRectCorners(android.graphics.Canvas,int,int,int,int,android.graphics.Paint,int,int); }
-keepclassmembers class android.support.design.internal.a { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.support.design.internal.a { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.nio.channels.FileChannel { void <init>(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearAccessibilityFromScrap(android.view.View); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void <init>(android.widget.AdapterView); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class android.os.UserHandle { void <init>(int); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void clearSavedState(); }
-keepclassmembers class android.transition.ChangeBounds$5 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.f { void a(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View); }
-keepclassmembers class org.apache.http.cookie.CookiePathComparator { void <init>(); }
-keepclassmembers class android.view.ViewGroup { int getChildDrawingOrder(int,int); }
-keepclassmembers class org.apache.http.cookie.CookiePathComparator { int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie); }
-keepclassmembers class android.os.StrictMode$StrictModeViolation { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.impl.conn.Wire); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal,android.hardware.display.DisplayManagerGlobal$1); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { void write(byte[],int,int); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { void flush(); }
-keepclassmembers class android.support.v7.view.menu.f { void e(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.view.ViewGroup { void setClipToPadding(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean getClipToPadding(); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { org.apache.http.io.HttpTransportMetrics getMetrics(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$d { void <init>(android.support.v7.widget.ActionMenuView); }
-keepclassmembers class android.support.v7.view.menu.f { android.support.v7.view.menu.f a(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$d { void <init>(android.support.v7.widget.ActionMenuView,android.support.v7.widget.ActionMenuView$1); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$d { void a(android.support.v7.view.menu.f); }
-keepclassmembers class android.support.v4.c.a.a$a { void <init>(); }
-keepclassmembers class android.support.v4.c.a.a$a { void a(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$d { boolean a(android.support.v7.view.menu.f,android.view.MenuItem); }
-keepclassmembers class android.support.v4.c.a.a$a { void a(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class libcore.util.BasicLruCache { void trimToSize(int); }
-keepclassmembers class libcore.util.BasicLruCache { void entryEvicted(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.c.a.a$a { void a(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.support.v4.c.a.a$a { void a(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet$Node,int); }
-keepclassmembers class android.support.v4.c.a.a$a { void a(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.support.v4.app.p { boolean a(); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v4.c.a.a$a { void a(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.view.ViewGroup { boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation); }
-keepclassmembers class android.support.v4.c.a.a$a { void a(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.view.menu.f { android.view.MenuItem a(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.c.a.a$a { void a(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class java.io.IOException { void <init>(); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v4.c.a.a$a { android.graphics.drawable.Drawable c(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.c.a.a$a { int d(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.c.a.a$a { boolean f(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$MyHandler { void <init>(android.view.accessibility.AccessibilityManager,android.os.Looper); }
-keepclassmembers class android.support.v7.view.menu.f { void a(android.support.v7.view.menu.f$a); }
-keepclassmembers class android.support.v7.view.menu.f { void a(android.support.v7.view.menu.h); }
-keepclassmembers class android.widget.Editor$HandleView { void updateDrawable(); }
-keepclassmembers class android.support.v7.view.menu.f { void a(android.support.v7.view.menu.l); }
-keepclassmembers class android.widget.Editor$HandleView { void startTouchUpFilter(int); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(dalvik.system.CloseGuard$1); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.Editor$HandleView { boolean offsetHasBeenChanged(); }
-keepclassmembers class android.widget.Editor$HandleView { void onMeasure(int,int); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredWidth(); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredHeight(); }
-keepclassmembers class android.widget.Editor$HandleView { void dismiss(); }
-keepclassmembers class android.widget.Editor$HandleView { void show(); }
-keepclassmembers class android.view.ViewGroup { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.Editor$HandleView { void hide(); }
-keepclassmembers class android.view.ViewGroup { void onViewAdded(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void onViewRemoved(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void clearCachedLayoutMode(); }
-keepclassmembers class android.view.ViewGroup { void onAttachedToWindow(); }
-keepclassmembers class android.widget.Editor$HandleView { void hideActionPopupWindow(); }
-keepclassmembers class android.view.ViewGroup { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v7.view.menu.f { boolean a(android.support.v7.view.menu.f,android.view.MenuItem); }
-keepclassmembers class android.widget.Editor$HandleView { boolean isShowing(); }
-keepclassmembers class android.support.v7.view.menu.f { boolean a(android.view.MenuItem,int); }
-keepclassmembers class android.view.Display { void getRectSize(android.graphics.Rect); }
-keepclassmembers class android.support.v7.view.menu.f { android.view.MenuItem add(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.widget.Editor$HandleView { int getCursorOffset(); }
-keepclassmembers class android.widget.Editor$HandleView { void onDetached(); }
-keepclassmembers class android.view.ViewGroup { void bindLayoutAnimation(android.view.View); }
-keepclassmembers class android.support.v4.app.p { boolean b(); }
-keepclassmembers class android.view.ViewGroup { void removeView(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void removeViewInLayout(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void removeViewAt(int); }
-keepclassmembers class android.view.Display { void updateDisplayInfoLocked(); }
-keepclassmembers class android.support.v7.view.menu.f { void b(android.support.v7.view.menu.h); }
-keepclassmembers class android.view.ViewGroup { boolean removeViewInternal(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void removeViewInternal(int,android.view.View); }
-keepclassmembers class android.support.v7.view.menu.f { void b(boolean); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { void <init>(java.util.Hashtable); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { boolean hasMoreElements(); }
-keepclassmembers class android.support.v7.view.menu.f { boolean b(); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { java.lang.Object nextElement(); }
-keepclassmembers class android.support.v7.view.menu.f { void c(boolean); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class android.support.v7.view.menu.f { boolean c(); }
-keepclassmembers class android.view.ViewGroup { void setLayoutTransition(android.animation.LayoutTransition); }
-keepclassmembers class android.view.ViewGroup { android.animation.LayoutTransition getLayoutTransition(); }
-keepclassmembers class android.support.v7.view.menu.f { void clear(); }
-keepclassmembers class android.support.v7.view.menu.f { void close(); }
-keepclassmembers class android.support.v7.view.menu.f { android.content.res.Resources d(); }
-keepclassmembers class android.view.ViewGroup { void removeAllViews(); }
-keepclassmembers class android.support.v7.view.menu.f { android.content.Context e(); }
-keepclassmembers class android.support.v7.view.menu.f { void f(); }
-keepclassmembers class android.view.ViewGroup { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class android.support.v7.view.menu.f { void g(); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v7.view.menu.f { void h(); }
-keepclassmembers class android.view.ViewGroup { void detachViewFromParent(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void detachViewsFromParent(int,int); }
-keepclassmembers class android.support.v7.view.menu.f { java.util.ArrayList k(); }
-keepclassmembers class android.support.v7.view.menu.f { java.util.ArrayList l(); }
-keepclassmembers class android.support.v7.view.menu.f { android.support.v7.view.menu.f p(); }
-keepclassmembers class android.support.v7.view.menu.f { boolean q(); }
-keepclassmembers class android.support.v7.view.menu.f { android.support.v7.view.menu.h r(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void start(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void stop(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean isRunning(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void run(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getNumberOfFrames(); }
-keepclassmembers class android.support.v7.view.menu.f { void setQwertyMode(boolean); }
-keepclassmembers class android.support.v7.view.menu.f { int size(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.Drawable getFrame(int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getDuration(int); }
-keepclassmembers class java.util.zip.Inflater { boolean finished(); }
-keepclassmembers class android.support.v7.widget.ao$3 { void <init>(); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.concurrent.ExecutionException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.util.zip.Inflater { boolean needsDictionary(); }
-keepclassmembers class java.io.ObjectInputStream { int available(); }
-keepclassmembers class android.view.ViewGroup { void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.util.zip.Inflater { boolean needsInput(); }
-keepclassmembers class java.util.zip.ZipFile { void close(); }
-keepclassmembers class java.io.ObjectInputStream { void close(); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.InfoAccessSyntax$1); }
-keepclassmembers class java.util.zip.Inflater { void setInput(byte[],int,int); }
-keepclassmembers class java.io.ObjectInputStream { byte nextTC(); }
-keepclassmembers class java.util.zip.Inflater { int setFileInput(java.io.FileDescriptor,long,int); }
-keepclassmembers class java.io.ObjectInputStream { void pushbackTC(); }
-keepclassmembers class java.io.ObjectInputStream { int read(); }
-keepclassmembers class java.io.ObjectInputStream { int read(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.v4.app.p { void h(); }
-keepclassmembers class android.support.v4.app.p { void i(); }
-keepclassmembers class java.io.ObjectInputStream { boolean readBoolean(); }
-keepclassmembers class android.support.a.a.f$b { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.io.ObjectInputStream { void discardData(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.a.a.f$b { void <init>(android.support.a.a.f$b); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class java.util.zip.ZipFile { java.lang.String getName(); }
-keepclassmembers class android.support.a.a.f$b { android.graphics.Paint$Cap a(int,android.graphics.Paint$Cap); }
-keepclassmembers class android.support.v4.c.a.g { void a(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources,android.graphics.drawable.AnimationDrawable$1); }
-keepclassmembers class android.support.a.a.f$b { android.graphics.Paint$Join a(int,android.graphics.Paint$Join); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readCyclicReference(); }
-keepclassmembers class android.support.a.a.f$b { void a(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.util.zip.ZipFile { void access$000(java.util.zip.ZipFile); }
-keepclassmembers class android.support.v7.widget.ag { void c(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewGroup { void layout(int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { boolean canAnimate(); }
-keepclassmembers class android.view.ViewGroup { void setAnimationCacheEnabled(boolean); }
-keepclassmembers class android.view.ViewGroup { void setAlwaysDrawnWithCacheEnabled(boolean); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawnWithCacheEnabled(boolean); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { java.lang.String getLabel(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap getIcon(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { java.lang.String getIconFilename(); }
-keepclassmembers class android.widget.TextView$Marquee$1 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap loadTaskDescriptionIcon(java.lang.String); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { int getPrimaryColor(); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int,boolean); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.ViewGroup { int getChildCount(); }
-keepclassmembers class android.view.ViewGroup { android.view.View getChildAt(int); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { void <init>(int,android.net.SSLSessionCache,boolean); }
-keepclassmembers class android.support.v4.f.f { void a(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.f.f { int b(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.f.f { java.lang.Object b(java.lang.Object); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class android.view.ViewGroup { boolean isViewTransitioning(android.view.View); }
-keepclassmembers class org.apache.http.impl.client.BasicCredentialsProvider { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { void endViewTransition(android.view.View); }
-keepclassmembers class java.util.concurrent.CancellationException { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class java.io.ObjectInputStream { int readInt(); }
-keepclassmembers class java.math.BigDecimal { void <init>(long,int); }
-keepclassmembers class android.os.BaseBundle { int size(); }
-keepclassmembers class android.os.BaseBundle { void clear(); }
-keepclassmembers class android.os.BaseBundle { boolean containsKey(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { void remove(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { java.util.Set keySet(); }
-keepclassmembers class android.os.BaseBundle { void putBoolean(java.lang.String,boolean); }
-keepclassmembers class android.os.BaseBundle { void putInt(java.lang.String,int); }
-keepclassmembers class android.os.BaseBundle { void putFloat(java.lang.String,float); }
-keepclassmembers class android.os.BaseBundle { void putString(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.BaseBundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.os.BaseBundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class readNewClass(boolean); }
-keepclassmembers class android.view.ViewGroup { void requestTransitionStart(android.animation.LayoutTransition); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { void putStringArray(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.os.BaseBundle { void putCharSequenceArray(java.lang.String,java.lang.CharSequence[]); }
-keepclassmembers class android.app.Notification { java.lang.String access$402(android.app.Notification,java.lang.String); }
-keepclassmembers class android.app.Notification { java.lang.String access$502(android.app.Notification,java.lang.String); }
-keepclassmembers class java.math.BigDecimal { void <init>(double,java.math.MathContext); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger); }
-keepclassmembers class android.widget.RemoteViews$SetDrawableParameters { void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode,int); }
-keepclassmembers class android.widget.RemoteViews$SetDrawableParameters { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.view.ViewGroup { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.view.ViewGroup { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class java.math.BigDecimal { void <init>(long); }
-keepclassmembers class android.view.ViewGroup { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.view.ViewGroup { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.view.ViewGroup { int getNestedScrollAxes(); }
-keepclassmembers class java.io.ObjectInputStream { int readNewHandle(); }
-keepclassmembers class android.view.ViewGroup { void onSetLayoutParams(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewString(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean access$300(android.view.ViewGroup); }
-keepclassmembers class android.view.ViewGroup { boolean access$302(android.view.ViewGroup,boolean); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList access$400(android.view.ViewGroup); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readUnshared(); }
-keepclassmembers class android.view.ViewGroup { void access$500(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { boolean checkTag(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String readUTF(); }
-keepclassmembers class org.apache.http.cookie.MalformedCookieException { void <init>(java.lang.String); }
-keepclassmembers class android.support.design.widget.e { void <init>(); }
-keepclassmembers class android.view.MenuInflater$MenuState { void <init>(android.view.MenuInflater,android.view.Menu); }
-keepclassmembers class android.view.MenuInflater$MenuState { void resetGroup(); }
-keepclassmembers class android.view.MenuInflater$MenuState { void readGroup(android.util.AttributeSet); }
-keepclassmembers class java.io.ObjectInputStream { void resetState(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object resolveObject(java.lang.Object); }
-keepclassmembers class android.view.MenuInflater$MenuState { char getShortcut(java.lang.String); }
-keepclassmembers class android.view.View$BaseSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getName(); }
-keepclassmembers class java.io.ObjectStreamField { char getTypeCode(); }
-keepclassmembers class java.io.ObjectStreamField { char typeCodeOf(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamField { int getOffset(); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.MenuItem addItem(); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.SubMenu addSubMenuItem(); }
-keepclassmembers class android.view.MenuInflater$MenuState { boolean hasAddedItem(); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.ActionProvider access$000(android.view.MenuInflater$MenuState); }
-keepclassmembers class java.util.Random { int nextInt(); }
-keepclassmembers class java.io.ObjectStreamField { boolean isPrimitive(); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View); }
-keepclassmembers class java.io.ObjectStreamField { boolean writeField(java.io.DataOutputStream); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.io.ObjectStreamField { void setOffset(int); }
-keepclassmembers class org.apache.http.conn.routing.RouteInfo$TunnelType { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthOutputStream { void close(); }
-keepclassmembers class java.io.ObjectStreamField { boolean isUnshared(); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthOutputStream { void flush(); }
-keepclassmembers class java.io.ObjectStreamField { void setUnshared(boolean); }
-keepclassmembers class java.util.HashMap$HashIterator { boolean hasNext(); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthOutputStream { void write(byte[]); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float,int); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { int getIntValue(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { java.lang.Object getValue(); }
-keepclassmembers class org.apache.http.conn.util.InetAddressUtils { boolean isIPv4Address(java.lang.String); }
-keepclassmembers class libcore.icu.Transliterator { void <init>(java.lang.String); }
-keepclassmembers class libcore.icu.Transliterator { java.lang.String transliterate(java.lang.String); }
-keepclassmembers class java.math.BigDecimal { int signum(); }
-keepclassmembers class android.app.ITransientNotification$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void <init>(javax.net.ssl.TrustManagerFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void init(java.security.KeyStore); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { javax.net.ssl.TrustManager[] getTrustManagers(); }
-keepclassmembers class android.support.v4.c.a { int a(int,int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextUserSpecifiedFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class java.math.BigDecimal { long longValue(); }
-keepclassmembers class android.view.FocusFinder { void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class android.view.FocusFinder { boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.math.BigDecimal { int intValue(); }
-keepclassmembers class android.view.FocusFinder { boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.animation.Keyframe { boolean valueWasSetOnStart(); }
-keepclassmembers class android.animation.Keyframe { void <init>(); }
-keepclassmembers class android.animation.Keyframe { boolean hasValue(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger getUnscaledValue(); }
-keepclassmembers class android.animation.Keyframe { void setValueWasSetOnStart(boolean); }
-keepclassmembers class android.animation.Keyframe { float getFraction(); }
-keepclassmembers class java.math.BigDecimal { void setUnscaledValue(java.math.BigInteger); }
-keepclassmembers class android.animation.Keyframe { android.animation.TimeInterpolator getInterpolator(); }
-keepclassmembers class android.animation.Keyframe { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class com.android.internal.app.AlertController { void installContent(); }
-keepclassmembers class android.os.AsyncTask$InternalHandler { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController { int selectContentView(); }
-keepclassmembers class com.android.internal.app.AlertController { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.graphics.ColorFilter { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController { void setCustomTitle(android.view.View); }
-keepclassmembers class com.android.internal.app.AlertController { void setMessage(java.lang.CharSequence); }
-keepclassmembers class java.util.concurrent.TimeUnit$7 { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(int); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View,int,int,int,int); }
-keepclassmembers class android.graphics.Shader$TileMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(int); }
-keepclassmembers class android.text.style.LeadingMarginSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.g.a$c$1 { void <init>(android.support.v4.g.a$c,android.support.v4.g.a); }
-keepclassmembers class com.android.internal.app.AlertController { void setInverseBackgroundForced(boolean); }
-keepclassmembers class android.view.FocusFinder { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1300(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1200(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1400(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1500(com.android.internal.app.AlertController); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListAdapter access$1602(com.android.internal.app.AlertController,android.widget.ListAdapter); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1702(com.android.internal.app.AlertController,int); }
-keepclassmembers class android.support.v4.b.a.b { android.graphics.drawable.Drawable a(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListView access$1102(com.android.internal.app.AlertController,android.widget.ListView); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { void <init>(); }
-keepclassmembers class android.content.ActivityNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.util.SuperNotCalledException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.security.SignatureSpi { void <init>(); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(int); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.util.MapCollections { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext$HostAndPort { void <init>(java.lang.String,int); }
-keepclassmembers class android.util.MapCollections { boolean retainAllHelper(java.util.Map,java.util.Collection); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int addStateSet(int[],android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void access$000(android.graphics.drawable.StateListDrawable$StateListState); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class android.text.style.SuggestionRangeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { void <init>(android.util.MapCollections,int); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void run(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <init>(java.lang.String,org.apache.harmony.security.x509.GeneralName,byte[],org.apache.harmony.security.x509.AccessDescription$1); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { boolean hasNext(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <init>(java.lang.String,org.apache.harmony.security.x509.GeneralName,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { java.lang.String access$100(org.apache.harmony.security.x509.AccessDescription); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void setComparisonStrategy(int); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void init(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void recycle(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { org.apache.harmony.security.x509.GeneralName access$200(org.apache.harmony.security.x509.AccessDescription); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void clear(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void setEpicenter(android.graphics.Rect); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.graphics.Bitmap); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void <init>(); }
-keepclassmembers class android.support.v4.g.ae { float a(android.view.VelocityTracker,int); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void <init>(android.app.ActivityTransitionCoordinator$1); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.support.v4.g.ae { float b(android.view.VelocityTracker,int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class android.view.AbsSavedState$2 { void <init>(); }
-keepclassmembers class android.text.style.URLSpan { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.URLSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.style.URLSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap access$100(android.os.Parcel); }
-keepclassmembers class android.support.v7.widget.ba { void <init>(android.content.Context,android.content.res.TypedArray); }
-keepclassmembers class android.support.v7.widget.ba { int a(int,int); }
-keepclassmembers class android.support.v7.widget.ba { android.graphics.drawable.Drawable a(int); }
-keepclassmembers class android.support.v7.widget.ba { float a(int,float); }
-keepclassmembers class android.support.v7.widget.ba { android.graphics.drawable.Drawable b(int); }
-keepclassmembers class android.support.v7.widget.ba { void a(); }
-keepclassmembers class android.support.v7.widget.ba { boolean a(int,boolean); }
-keepclassmembers class android.support.v7.widget.ba { int d(int,int); }
-keepclassmembers class android.support.v7.widget.ba { int e(int,int); }
-keepclassmembers class android.support.v7.widget.ba { boolean f(int); }
-keepclassmembers class android.support.v7.widget.ba { int f(int,int); }
-keepclassmembers class android.support.v7.widget.ba { int g(int,int); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { void <init>(int); }
-keepclassmembers class android.support.v7.widget.ba { java.lang.CharSequence c(int); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { java.lang.String getMessage(); }
-keepclassmembers class android.support.v7.a.f { void <init>(); }
-keepclassmembers class android.graphics.BitmapShader { void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class android.support.v7.a.f { android.support.v7.a.f a(android.app.Dialog,android.support.v7.a.e); }
-keepclassmembers class android.support.v7.a.f { android.support.v7.a.f a(android.app.Activity,android.support.v7.a.e); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$IntKeyframes); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,int[]); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { byte[] getBuffer(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getTagOffset(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getOffset(); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView,android.widget.AdapterView$1); }
-keepclassmembers class com.android.volley.b$1 { void <init>(com.android.volley.b,com.android.volley.h); }
-keepclassmembers class java.text.DateFormat { void <init>(); }
-keepclassmembers class com.android.volley.b$1 { void run(); }
-keepclassmembers class android.os.StrictMode { void clearGatheredViolations(); }
-keepclassmembers class java.text.DateFormat { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class libcore.reflect.AnnotationAccess { void <clinit>(); }
-keepclassmembers class android.os.Binder { void <clinit>(); }
-keepclassmembers class android.view.ViewDebug { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Constructor { void <clinit>(); }
-keepclassmembers class android.util.EventLog { void <clinit>(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <clinit>(); }
-keepclassmembers class android.graphics.TemporaryBuffer { void <clinit>(); }
-keepclassmembers class android.text.style.BulletSpan { void <clinit>(); }
-keepclassmembers class android.view.Choreographer { float getRefreshRate(); }
-keepclassmembers class android.support.v4.g.af$f { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.MainActivity { void <clinit>(); }
-keepclassmembers class android.content.res.StringBlock$Height { void <clinit>(); }
-keepclassmembers class android.webkit.CookieSyncManager { void setGetInstanceIsAllowed(); }
-keepclassmembers class android.webkit.CookieSyncManager { void <clinit>(); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(); }
-keepclassmembers class java.lang.Thread { void <clinit>(); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String getWebViewPackageName(); }
-keepclassmembers class com.android.volley.a.a { void <clinit>(); }
-keepclassmembers class android.preference.PreferenceManager { int getDefaultSharedPreferencesMode(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.FullscreenWebPlayer { void <clinit>(); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollBarFadeDuration(); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollDefaultDelay(); }
-keepclassmembers class android.view.ViewConfiguration { int getPressedStateDuration(); }
-keepclassmembers class android.view.ViewConfiguration { int getTapTimeout(); }
-keepclassmembers class android.view.ViewConfiguration { int getDoubleTapTimeout(); }
-keepclassmembers class android.view.ViewConfiguration { long getSendRecurringAccessibilityEventsInterval(); }
-keepclassmembers class android.view.ViewConfiguration { float getScrollFriction(); }
-keepclassmembers class android.system.OsConstants { int placeholder(); }
-keepclassmembers class android.app.FragmentManagerImpl { void <clinit>(); }
-keepclassmembers class android.os.Trace { void endSection(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void <clinit>(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getLocalHost(); }
-keepclassmembers class android.transition.Fade { void <clinit>(); }
-keepclassmembers class java.lang.ref.Reference { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.GetPermission { void <clinit>(); }
-keepclassmembers class android.webkit.WebView { void <clinit>(); }
-keepclassmembers class javax.net.ssl.SSLSocketFactory { void <clinit>(); }
-keepclassmembers class android.view.HardwareRenderer { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.Platform { boolean isSniEnabledByDefault(); }
-keepclassmembers class com.shapps.mintubeapp.YTubeView { void <clinit>(); }
-keepclassmembers class android.support.v7.a.f { void <clinit>(); }
-keepclassmembers class java.util.Random { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.CustomVolley.AppController { com.shapps.mintubeapp.CustomVolley.AppController a(); }
-keepclassmembers class android.content.res.XmlBlock { long nativeGetStringBlock(long); }
-keepclassmembers class android.content.res.XmlBlock { long nativeCreateParseState(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeNext(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetName(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetText(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetLineNumber(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeResource(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeCount(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeDataType(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeStringValue(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeData(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeIndex(long,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroy(long); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroyParseState(long); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object newInstance(java.lang.Class,long); }
-keepclassmembers class java.io.ObjectStreamClass { long getConstructorId(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getConstructorSignature(java.lang.reflect.Constructor); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getFieldSignature(java.lang.reflect.Field); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasClinit(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getMethodSignature(java.lang.reflect.Method); }
-keepclassmembers class android.os.Binder { void setThreadStrictModePolicy(int); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { long native_CreatePorterDuffFilter(int,int); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.String); }
-keepclassmembers class java.lang.String { int fastIndexOf(int,int); }
-keepclassmembers class java.lang.Float { int floatToRawIntBits(float); }
-keepclassmembers class java.lang.Float { float intBitsToFloat(int); }
-keepclassmembers class java.lang.Runtime { void nativeExit(int); }
-keepclassmembers class java.lang.Runtime { java.lang.String nativeLoad(java.lang.String,java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class android.graphics.PorterDuffXfermode { long nativeCreateXfermode(int); }
-keepclassmembers class android.graphics.Matrix { long native_create(long); }
-keepclassmembers class android.graphics.Matrix { boolean native_isIdentity(long); }
-keepclassmembers class android.graphics.Matrix { boolean native_rectStaysRect(long); }
-keepclassmembers class android.graphics.Matrix { void native_reset(long); }
-keepclassmembers class android.graphics.Matrix { void native_set(long,long); }
-keepclassmembers class android.graphics.Matrix { void native_setTranslate(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setScale(long,float,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setScale(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setRotate(long,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setRotate(long,float); }
-keepclassmembers class android.graphics.Matrix { void native_preTranslate(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_preScale(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_preConcat(long,long); }
-keepclassmembers class android.graphics.Matrix { void native_postTranslate(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_postScale(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float); }
-keepclassmembers class android.graphics.Matrix { void native_postConcat(long,long); }
-keepclassmembers class android.graphics.Matrix { boolean native_setRectToRect(long,android.graphics.RectF,android.graphics.RectF,int); }
-keepclassmembers class android.graphics.Matrix { void native_mapPoints(long,float[],int,float[],int,int,boolean); }
-keepclassmembers class android.graphics.Matrix { boolean native_mapRect(long,android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class android.graphics.Matrix { void native_getValues(long,float[]); }
-keepclassmembers class android.graphics.Matrix { boolean native_equals(long,long); }
-keepclassmembers class java.lang.Double { long doubleToRawLongBits(double); }
-keepclassmembers class java.lang.Double { double longBitsToDouble(long); }
-keepclassmembers class java.lang.System { void arraycopyCharUnchecked(char[],int,char[],int,int); }
-keepclassmembers class java.lang.System { void arraycopyByteUnchecked(byte[],int,byte[],int,int); }
-keepclassmembers class java.lang.System { void arraycopyIntUnchecked(int[],int,int[],int,int); }
-keepclassmembers class java.lang.System { void arraycopyLongUnchecked(long[],int,long[],int,int); }
-keepclassmembers class java.lang.System { void arraycopyFloatUnchecked(float[],int,float[],int,int); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyFloatAnimator(long,float); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyPaintAnimator(long,int,float); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartValue(long,float); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetDuration(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { long nGetDuration(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartDelay(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetInterpolator(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetAllowRunningAsync(long,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetListener(long,android.view.RenderNodeAnimator); }
-keepclassmembers class android.view.RenderNodeAnimator { void nStart(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nEnd(long); }
-keepclassmembers class java.lang.System { void arraycopyBooleanUnchecked(boolean[],int,boolean[],int,int); }
-keepclassmembers class java.lang.System { int identityHashCode(java.lang.Object); }
-keepclassmembers class android.view.GLES20Canvas { void nSetViewport(long,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void nSetHighContrastText(long,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nInsertReorderBarrier(long,boolean); }
-keepclassmembers class android.view.GLES20Canvas { int nPrepare(long,boolean); }
-keepclassmembers class android.view.GLES20Canvas { int nPrepareDirty(long,int,int,int,int,boolean); }
-keepclassmembers class java.lang.System { void log(char,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.GLES20Canvas { void nFinish(long); }
-keepclassmembers class android.view.GLES20Canvas { long nFinishRecording(long); }
-keepclassmembers class android.view.GLES20Canvas { int nDrawRenderNode(long,long,android.graphics.Rect,int); }
-keepclassmembers class java.lang.System { java.lang.String mapLibraryName(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawLayer(long,long,float,float); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipPath(long,long,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipRect(long,float,float,float,float,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipRect(long,int,int,int,int,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean nGetClipBounds(long,android.graphics.Rect); }
-keepclassmembers class android.view.GLES20Canvas { boolean nQuickReject(long,float,float,float,float); }
-keepclassmembers class android.view.GLES20Canvas { void nTranslate(long,float,float); }
-keepclassmembers class android.view.GLES20Canvas { void nRotate(long,float); }
-keepclassmembers class android.view.GLES20Canvas { void nScale(long,float,float); }
-keepclassmembers class android.view.GLES20Canvas { void nGetMatrix(long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nConcatMatrix(long,long); }
-keepclassmembers class android.view.GLES20Canvas { int nSave(long,int); }
-keepclassmembers class android.view.GLES20Canvas { int nSaveLayer(long,float,float,float,float,long,int); }
-keepclassmembers class android.view.GLES20Canvas { int nSaveLayerAlpha(long,float,float,float,float,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void nRestore(long); }
-keepclassmembers class android.view.GLES20Canvas { void nRestoreToCount(long,int); }
-keepclassmembers class android.view.GLES20Canvas { int nGetSaveCount(long); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object invoke(java.lang.Object,java.lang.Object[],boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawPatch(long,long,long,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawBitmap(long,long,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawBitmap(long,long,float,float,float,float,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawCircle(long,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawCircle(long,long,long,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawLines(long,float[],int,int,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawOval(long,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawPath(long,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRects(long,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRect(long,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRoundRect(long,float,float,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawText(long,char[],int,int,float,float,int,long,long); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.Object newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawText(long,java.lang.String,int,int,float,float,int,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class java.io.File { java.lang.String[] listImpl(java.lang.String); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Object get(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { boolean getBoolean(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { byte getByte(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { char getChar(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { double getDouble(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { float getFloat(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { int getInt(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { long getLong(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { short getShort(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { void set(java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setBoolean(java.lang.Object,boolean,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setByte(java.lang.Object,byte,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setChar(java.lang.Object,char,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setDouble(java.lang.Object,double,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setFloat(java.lang.Object,float,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setInt(java.lang.Object,int,boolean); }
-keepclassmembers class java.lang.Class { java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class java.lang.reflect.Field { void setLong(java.lang.Object,long,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setShort(java.lang.Object,short,boolean); }
-keepclassmembers class android.graphics.Region { void nativeSetRegion(long,long); }
-keepclassmembers class android.graphics.Region { boolean nativeSetRect(long,int,int,int,int); }
-keepclassmembers class android.graphics.Region { boolean nativeOp(long,int,int,int,int,int); }
-keepclassmembers class android.graphics.DashPathEffect { long nativeCreate(float[],float); }
-keepclassmembers class java.util.regex.Matcher { void closeImpl(long); }
-keepclassmembers class java.util.regex.Matcher { boolean findImpl(long,java.lang.String,int,int[]); }
-keepclassmembers class java.util.regex.Matcher { boolean findNextImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { int groupCountImpl(long); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAtImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { boolean matchesImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { long openImpl(long); }
-keepclassmembers class java.util.regex.Matcher { void setInputImpl(long,java.lang.String,int,int); }
-keepclassmembers class java.util.regex.Matcher { void useAnchoringBoundsImpl(long,boolean); }
-keepclassmembers class java.util.regex.Matcher { void useTransparentBoundsImpl(long,boolean); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress); }
-keepclassmembers class libcore.io.Posix { boolean access(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class libcore.io.Posix { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class libcore.io.Posix { void close(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.Posix { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class libcore.io.Posix { int fcntlVoid(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.io.Posix { int fcntlLong(java.io.FileDescriptor,int,long); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.Posix { java.lang.String gai_strerror(int); }
-keepclassmembers class libcore.io.Posix { java.lang.String getenv(java.lang.String); }
-keepclassmembers class libcore.io.Posix { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class libcore.io.Posix { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class libcore.io.Posix { java.net.SocketAddress getsockname(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { android.system.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String); }
-keepclassmembers class libcore.io.Posix { int ioctlInt(java.io.FileDescriptor,int,android.util.MutableInt); }
-keepclassmembers class libcore.io.Posix { void listen(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.io.Posix { long lseek(java.io.FileDescriptor,long,int); }
-keepclassmembers class libcore.io.Posix { void mkdir(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class libcore.io.Posix { int poll(android.system.StructPollfd[],int); }
-keepclassmembers class libcore.io.Posix { int readBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class libcore.io.Posix { int recvfromBytes(java.io.FileDescriptor,java.lang.Object,int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class libcore.io.Posix { void remove(java.lang.String); }
-keepclassmembers class android.graphics.Path { long init2(long); }
-keepclassmembers class android.graphics.Path { void native_reset(long); }
-keepclassmembers class android.graphics.Path { int native_getFillType(long); }
-keepclassmembers class android.graphics.Path { void native_setFillType(long,int); }
-keepclassmembers class android.graphics.Path { boolean native_isEmpty(long); }
-keepclassmembers class android.graphics.Path { void native_computeBounds(long,android.graphics.RectF); }
-keepclassmembers class android.graphics.Path { void native_moveTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_rMoveTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_lineTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_rLineTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_quadTo(long,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_rQuadTo(long,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_cubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_rCubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class libcore.io.Posix { int sendtoBytes(java.io.FileDescriptor,java.lang.Object,int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.graphics.Path { void native_arcTo(long,float,float,float,float,float,float,boolean); }
-keepclassmembers class android.graphics.Path { void native_close(long); }
-keepclassmembers class android.graphics.Path { void native_addRect(long,float,float,float,float,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptByte(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class android.graphics.Path { void native_addOval(long,float,float,float,float,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptInt(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptGroupReq(java.io.FileDescriptor,int,int,android.system.StructGroupReq); }
-keepclassmembers class android.graphics.Path { void native_addRoundRect(long,float,float,float,float,float[],int); }
-keepclassmembers class libcore.io.Posix { void setsockoptGroupSourceReq(java.io.FileDescriptor,int,int,android.system.StructGroupSourceReq); }
-keepclassmembers class libcore.io.Posix { void setsockoptLinger(java.io.FileDescriptor,int,int,android.system.StructLinger); }
-keepclassmembers class android.graphics.Path { void native_addPath(long,long,long); }
-keepclassmembers class libcore.io.Posix { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class libcore.io.Posix { void shutdown(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor socket(int,int,int); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class android.graphics.Path { float[] native_approximate(long,float); }
-keepclassmembers class libcore.io.Posix { long sysconf(int); }
-keepclassmembers class libcore.io.Posix { java.lang.String strerror(int); }
-keepclassmembers class libcore.io.Posix { int writeBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nIncStrong(long); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nDecStrong(long); }
-keepclassmembers class java.lang.Thread { int nativeGetStatus(boolean); }
-keepclassmembers class java.math.NativeBN { int BN_cmp(long,long); }
-keepclassmembers class java.math.NativeBN { void BN_copy(long,long); }
-keepclassmembers class java.math.NativeBN { void putLongInt(long,long); }
-keepclassmembers class java.math.NativeBN { void putULongInt(long,long,boolean); }
-keepclassmembers class java.math.NativeBN { int BN_dec2bn(long,java.lang.String); }
-keepclassmembers class java.math.NativeBN { void litEndInts2bn(int[],int,boolean,long); }
-keepclassmembers class java.math.NativeBN { void twosComp2bn(byte[],int,long); }
-keepclassmembers class java.math.NativeBN { long longInt(long); }
-keepclassmembers class java.math.NativeBN { java.lang.String BN_bn2dec(long); }
-keepclassmembers class java.math.NativeBN { int[] bn2litEndInts(long); }
-keepclassmembers class java.math.NativeBN { int sign(long); }
-keepclassmembers class java.math.NativeBN { void BN_set_negative(long,int); }
-keepclassmembers class java.math.NativeBN { int bitLength(long); }
-keepclassmembers class java.math.NativeBN { boolean BN_is_bit_set(long,int); }
-keepclassmembers class java.math.NativeBN { void BN_shift(long,long,int); }
-keepclassmembers class java.math.NativeBN { void BN_mul_word(long,int); }
-keepclassmembers class java.math.NativeBN { void BN_add(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_exp(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_mul(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_div(long,long,long,long); }
-keepclassmembers class java.lang.Thread { void nativeSetName(java.lang.String); }
-keepclassmembers class java.lang.Thread { void nativeCreate(java.lang.Thread,long,boolean); }
-keepclassmembers class android.graphics.SweepGradient { long nativeCreate1(float,float,int[],float[]); }
-keepclassmembers class android.graphics.SweepGradient { long nativeCreate2(float,float,int,int); }
-keepclassmembers class android.webkit.WebViewFactory { boolean nativeLoadWithRelroFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLutInterpolator(float[]); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClassNative(java.lang.String,java.lang.ClassLoader,long); }
-keepclassmembers class dalvik.system.DexFile { long openDexFileNative(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreateFloat(float); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreatePaint(long); }
-keepclassmembers class java.lang.StringToReal { float parseFltImpl(java.lang.String,int); }
-keepclassmembers class java.lang.StringToReal { double parseDblImpl(java.lang.String,int); }
-keepclassmembers class libcore.icu.NativePluralRules { long forLocaleImpl(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetIntMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetFloatMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallFloatMethod(java.lang.Object,long,float); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallIntMethod(java.lang.Object,long,int); }
-keepclassmembers class android.graphics.PathMeasure { long native_create(long,boolean); }
-keepclassmembers class libcore.io.AsynchronousCloseMonitor { void signalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class android.graphics.PathMeasure { void native_setPath(long,long,boolean); }
-keepclassmembers class android.graphics.PathMeasure { float native_getLength(long); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toIsoLatin1Bytes(char[],int,int); }
-keepclassmembers class android.graphics.PathMeasure { boolean native_getSegment(long,float,float,long,boolean); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toAsciiBytes(char[],int,int); }
-keepclassmembers class java.nio.charset.Charsets { void asciiBytesToChars(byte[],int,int,char[]); }
-keepclassmembers class java.nio.charset.Charsets { void isoLatin1BytesToChars(byte[],int,int,char[]); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toUtf8Bytes(char[],int,int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePatternNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencyCode(java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencySymbol(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate1(float,float,float,float,int[],float[],int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayCountryNative(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate2(float,float,float,float,int,int,int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayScriptNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayLanguageNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayVariantNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String addLikelySubtags(java.lang.String); }
-keepclassmembers class libcore.icu.ICU { boolean initLocaleDataNative(java.lang.String,libcore.icu.LocaleData); }
-keepclassmembers class android.view.MotionEvent { long nativeCopy(long,long,boolean); }
-keepclassmembers class android.view.MotionEvent { void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetDeviceId(long); }
-keepclassmembers class android.view.MotionEvent { long nativeInitialize(long,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[]); }
-keepclassmembers class android.view.MotionEvent { int nativeGetSource(long); }
-keepclassmembers class android.view.MotionEvent { int nativeSetSource(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetAction(long); }
-keepclassmembers class android.view.MotionEvent { void nativeSetAction(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetFlags(long); }
-keepclassmembers class android.view.MotionEvent { boolean nativeIsTouchEvent(long); }
-keepclassmembers class android.view.MotionEvent { void nativeSetFlags(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetMetaState(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetEdgeFlags(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXOffset(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetButtonState(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYOffset(long); }
-keepclassmembers class android.view.MotionEvent { void nativeOffsetLocation(long,float,float); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXPrecision(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerCount(long); }
-keepclassmembers class android.view.MotionEvent { long nativeGetDownTimeNanos(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYPrecision(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetToolType(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerId(long,int); }
-keepclassmembers class android.view.MotionEvent { long nativeGetEventTimeNanos(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeFindPointerIndex(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetHistorySize(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetRawAxisValue(long,int,int,int); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords); }
-keepclassmembers class android.view.MotionEvent { float nativeGetAxisValue(long,int,int,int); }
-keepclassmembers class android.view.MotionEvent { java.lang.String nativeAxisToString(int); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties); }
-keepclassmembers class android.view.DisplayEventReceiver { void nativeScheduleVsync(long); }
-keepclassmembers class android.view.MotionEvent { void nativeTransform(long,android.graphics.Matrix); }
-keepclassmembers class android.view.DisplayEventReceiver { long nativeInit(android.view.DisplayEventReceiver,android.os.MessageQueue); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String); }
-keepclassmembers class android.os.SystemProperties { long native_get_long(java.lang.String,long); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { boolean native_get_boolean(java.lang.String,boolean); }
-keepclassmembers class android.os.SystemProperties { int native_get_int(java.lang.String,int); }
-keepclassmembers class java.lang.Math { double asin(double); }
-keepclassmembers class java.lang.Math { double atan2(double,double); }
-keepclassmembers class java.lang.Math { double acos(double); }
-keepclassmembers class java.lang.Math { double ceil(double); }
-keepclassmembers class java.lang.Math { double cos(double); }
-keepclassmembers class java.lang.Math { double exp(double); }
-keepclassmembers class java.lang.Math { double floor(double); }
-keepclassmembers class java.lang.Math { double hypot(double,double); }
-keepclassmembers class java.lang.Math { double log(double); }
-keepclassmembers class java.lang.Math { double pow(double,double); }
-keepclassmembers class java.lang.Math { double log10(double); }
-keepclassmembers class java.lang.Math { double sqrt(double); }
-keepclassmembers class java.lang.Math { double sin(double); }
-keepclassmembers class java.lang.Math { double tan(double); }
-keepclassmembers class android.content.res.AssetManager { void setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class java.lang.Character { int unicodeBlockForCodePoint(int); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourceName(int); }
-keepclassmembers class java.lang.Character { int digitImpl(int,int); }
-keepclassmembers class android.content.res.AssetManager { int getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { int loadResourceValue(int,short,android.util.TypedValue,boolean); }
-keepclassmembers class android.content.res.AssetManager { boolean applyStyle(long,int,int,long,int[],int[],int[]); }
-keepclassmembers class android.content.res.AssetManager { boolean resolveAttrs(long,int,int,int[],int[],int[],int[]); }
-keepclassmembers class android.content.res.AssetManager { void copyTheme(long,long); }
-keepclassmembers class android.content.res.AssetManager { long getNativeStringBlock(int); }
-keepclassmembers class android.content.res.AssetManager { void applyThemeStyle(long,int,boolean); }
-keepclassmembers class android.content.res.AssetManager { long openXmlAssetNative(int,java.lang.String); }
-keepclassmembers class java.lang.Character { int getTypeImpl(int); }
-keepclassmembers class android.content.res.AssetManager { void init(boolean); }
-keepclassmembers class java.lang.Character { boolean isDigitImpl(int); }
-keepclassmembers class java.lang.Character { byte getIcuDirectionality(int); }
-keepclassmembers class java.lang.Character { boolean isLowerCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isLetterImpl(int); }
-keepclassmembers class java.lang.Character { boolean isSpaceCharImpl(int); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigitImpl(int); }
-keepclassmembers class java.lang.Character { boolean isUpperCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isWhitespaceImpl(int); }
-keepclassmembers class java.lang.Character { boolean isTitleCaseImpl(int); }
-keepclassmembers class java.lang.Character { int toLowerCaseImpl(int); }
-keepclassmembers class android.view.KeyCharacterMap { void nativeWriteToParcel(long,android.os.Parcel); }
-keepclassmembers class java.lang.Character { int toUpperCaseImpl(int); }
-keepclassmembers class android.view.KeyCharacterMap { long nativeReadFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetNumber(long,int); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetCharacter(long,int,int); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetDisplayLabel(long,int); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] nativeGetStackTrace(java.lang.Object); }
-keepclassmembers class android.view.KeyCharacterMap { int nativeGetKeyboardType(long); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetMatch(long,int,char[],int); }
-keepclassmembers class android.view.RenderNode { void nSetDisplayListData(long,long); }
-keepclassmembers class android.view.RenderNode { long nCreate(java.lang.String); }
-keepclassmembers class android.view.RenderNode { void nGetInverseTransformMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nHasIdentityMatrix(long); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetTopAndBottom(long,int); }
-keepclassmembers class android.view.RenderNode { void nGetTransformMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetLeftAndRight(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetBottom(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetRight(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetLeftTopRightBottom(long,int,int,int,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetTop(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetLeft(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerType(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetClipToBounds(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetProjectBackwards(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetProjectionReceiver(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerPaint(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineRoundRect(long,int,int,int,int,float,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineEmpty(long); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineConvexPath(long,long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineNone(long); }
-keepclassmembers class android.view.RenderNode { boolean nSetHasOverlappingRendering(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetAlpha(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetElevation(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotation(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationZ(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetStaticMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nSetAnimationMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { float nGetScaleY(long); }
-keepclassmembers class android.view.RenderNode { float nGetScaleX(long); }
-keepclassmembers class android.view.RenderNode { float nGetElevation(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationY(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationZ(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationX(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotation(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotationY(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotationX(long); }
-keepclassmembers class android.view.RenderNode { boolean nIsPivotExplicitlySet(long); }
-keepclassmembers class android.view.RenderNode { float nGetPivotY(long); }
-keepclassmembers class android.view.RenderNode { float nGetPivotX(long); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Object newInstance(java.lang.Object[],boolean); }
-keepclassmembers class android.view.RenderNode { void nAddAnimator(long,long); }
-keepclassmembers class android.os.Parcel { int nativeDataSize(long); }
-keepclassmembers class libcore.icu.NativeConverter { java.nio.charset.Charset charsetForName(java.lang.String); }
-keepclassmembers class android.os.Parcel { int nativeDataPosition(long); }
-keepclassmembers class android.os.Parcel { int nativeDataAvail(long); }
-keepclassmembers class android.os.Parcel { void nativeSetDataPosition(long,int); }
-keepclassmembers class android.os.Parcel { boolean nativePushAllowFds(long,boolean); }
-keepclassmembers class android.os.Parcel { void nativeWriteByteArray(long,byte[],int,int); }
-keepclassmembers class android.os.Parcel { void nativeRestoreAllowFds(long,boolean); }
-keepclassmembers class android.os.Parcel { void nativeWriteInt(long,int); }
-keepclassmembers class android.os.Parcel { void nativeWriteFloat(long,float); }
-keepclassmembers class android.os.Parcel { void nativeWriteLong(long,long); }
-keepclassmembers class android.os.Parcel { void nativeWriteDouble(long,double); }
-keepclassmembers class android.os.Parcel { void nativeWriteStrongBinder(long,android.os.IBinder); }
-keepclassmembers class android.os.Parcel { void nativeWriteString(long,java.lang.String); }
-keepclassmembers class android.os.Parcel { int nativeReadInt(long); }
-keepclassmembers class android.os.Parcel { long nativeReadLong(long); }
-keepclassmembers class android.os.Parcel { byte[] nativeCreateByteArray(long); }
-keepclassmembers class android.os.Parcel { float nativeReadFloat(long); }
-keepclassmembers class android.os.Parcel { double nativeReadDouble(long); }
-keepclassmembers class android.os.Parcel { android.os.IBinder nativeReadStrongBinder(long); }
-keepclassmembers class android.os.Parcel { java.lang.String nativeReadString(long); }
-keepclassmembers class android.os.Parcel { void nativeAppendFrom(long,long,int,int); }
-keepclassmembers class android.os.Parcel { void nativeFreeBuffer(long); }
-keepclassmembers class android.os.Parcel { boolean nativeHasFileDescriptors(long); }
-keepclassmembers class android.os.Parcel { void nativeWriteInterfaceToken(long,java.lang.String); }
-keepclassmembers class android.graphics.NinePatch { boolean isNinePatchChunk(byte[]); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getClosestUserClassLoader(java.lang.ClassLoader,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.NinePatch { void nativeDraw(long,android.graphics.Rect,long,long,long,int,int); }
-keepclassmembers class android.graphics.NinePatch { long validateNinePatchChunk(long,byte[]); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapInt(java.lang.Object,long,int,int); }
-keepclassmembers class sun.misc.Unsafe { void putOrderedInt(java.lang.Object,long,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatLong(long,long,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDouble(long,double,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPatternImpl(long,boolean,java.lang.String); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDigitList(long,java.lang.String,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getTextAttribute(long,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getAttribute(long,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { long open(java.lang.String,java.lang.String,char,char,java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,char,java.lang.String,char,java.lang.String,char,char); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.Number parse(long,java.lang.String,java.text.ParsePosition,boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setDecimalFormatSymbols(long,java.lang.String,char,char,java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,char,java.lang.String,char,java.lang.String,char,char); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setAttribute(long,int,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String toPatternImpl(long,boolean); }
-keepclassmembers class android.os.Trace { void nativeTraceBegin(long,java.lang.String); }
-keepclassmembers class android.os.Trace { void nativeTraceEnd(long); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class android.graphics.RadialGradient { long nativeCreate1(float,float,float,int[],float[],int); }
-keepclassmembers class android.graphics.Shader { void nativeSetLocalMatrix(long,long); }
-keepclassmembers class android.graphics.RadialGradient { long nativeCreate2(float,float,float,int,int,int); }
-keepclassmembers class android.graphics.Interpolator { long nativeConstructor(int,int); }
-keepclassmembers class android.graphics.Interpolator { int nativeTimeToValues(long,int,float[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long getRSAPrivateKeyWrapper(java.security.interfaces.RSAPrivateKey,byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long d2i_PKCS8_PRIV_KEY_INFO(byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long getECPrivateKeyWrapper(java.security.interfaces.ECPrivateKey,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long getDSAPrivateKeyWrapper(java.security.interfaces.DSAPrivateKey); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long EC_GROUP_new_by_curve_name(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long EC_GROUP_new_curve(int,byte[],byte[],byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void EC_GROUP_set_point_conversion_form(long,int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void EC_GROUP_set_asn1_flag(long,int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void EC_GROUP_set_generator(long,long,byte[],byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long EC_POINT_new(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void EC_POINT_set_affine_coordinates(long,long,byte[],byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int RAND_load_file(java.lang.String,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void RAND_seed(byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long d2i_X509(byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { byte[] i2d_X509(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { byte[] X509_get_subject_name(long); }
-keepclassmembers class android.graphics.Canvas { void native_setBitmap(long,long,boolean); }
-keepclassmembers class android.graphics.Canvas { long initRaster(long); }
-keepclassmembers class android.graphics.Canvas { int native_save(long,int); }
-keepclassmembers class android.graphics.Canvas { int native_saveLayer(long,float,float,float,float,long,int); }
-keepclassmembers class android.graphics.Canvas { int native_saveLayerAlpha(long,float,float,float,float,int,int); }
-keepclassmembers class android.graphics.Canvas { void native_restore(long); }
-keepclassmembers class android.graphics.Canvas { void native_restoreToCount(long,int); }
-keepclassmembers class android.graphics.Canvas { int native_getSaveCount(long); }
-keepclassmembers class android.graphics.Canvas { void native_translate(long,float,float); }
-keepclassmembers class android.graphics.Canvas { void native_scale(long,float,float); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.Object[][] get_X509_GENERAL_NAME_stack(long,int); }
-keepclassmembers class android.graphics.Canvas { void native_rotate(long,float); }
-keepclassmembers class android.graphics.Canvas { void native_concat(long,long); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipRect(long,float,float,float,float,int); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipPath(long,long,int); }
-keepclassmembers class android.graphics.Canvas { boolean native_getClipBounds(long,android.graphics.Rect); }
-keepclassmembers class android.graphics.Canvas { boolean native_quickReject(long,float,float,float,float); }
-keepclassmembers class android.graphics.Canvas { void native_getCTM(long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawColor(long,int,int); }
-keepclassmembers class android.graphics.Canvas { void native_drawLine(long,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawLines(long,float[],int,int,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawRect(long,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawOval(long,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawCircle(long,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawRoundRect(long,float,float,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawPath(long,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawBitmap(long,long,float,float,long,int,int,int); }
-keepclassmembers class android.graphics.Canvas { void native_drawBitmap(long,long,float,float,float,float,float,float,float,float,long,int,int); }
-keepclassmembers class android.graphics.Canvas { void nativeDrawBitmapMatrix(long,long,long,long); }
-keepclassmembers class libcore.icu.NativeNormalizer { java.lang.String normalizeImpl(java.lang.String,int); }
-keepclassmembers class libcore.icu.TimeZoneNames { void fillZoneStrings(java.lang.String,java.lang.String[][]); }
-keepclassmembers class android.graphics.Canvas { void native_drawText(long,char[],int,int,float,float,int,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawText(long,java.lang.String,int,int,float,float,int,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_CTX_set_session_id_context(long,byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_new(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_enable_tls_channel_id(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_use_certificate(long,long[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set1_tls_channel_id(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_use_PrivateKey(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_check_private_key(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_client_CA_list(long,byte[][]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_set_mode(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_clear_options(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_set_options(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void set_SSL_psk_client_callback_enabled(long,boolean); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void set_SSL_psk_server_callback_enabled(long,boolean); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_use_psk_identity_hint(long,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_cipher_lists(long,java.lang.String[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int get_SSL_CIPHER_algorithm_mkey(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int get_SSL_CIPHER_algorithm_auth(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long[] SSL_get_ciphers(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_session(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_verify(long,int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_session_creation_enabled(long,boolean); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeStream(java.io.InputStream,byte[],android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_tlsext_host_name(long,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int SSL_set_alpn_protos(long,byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_CTX_enable_npn(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_do_handshake(long,java.io.FileDescriptor,com.android.org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,int,boolean,byte[],byte[]); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeAsset(long,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long[] SSL_get_peer_cert_chain(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long[] SSL_get_certificate(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_write(long,java.io.FileDescriptor,com.android.org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,byte[],int,int,int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int SSL_read(long,java.io.FileDescriptor,com.android.org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,byte[],int,int,int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_interrupt(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_shutdown(long,java.io.FileDescriptor,com.android.org.conscrypt.NativeCrypto$SSLHandshakeCallbacks); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { byte[] SSL_SESSION_session_id(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_free(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_SESSION_get_time(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.String SSL_SESSION_get_version(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.String SSL_SESSION_cipher(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_SESSION_free(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long d2i_SSL_SESSION(byte[]); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class generateProxy(java.lang.String,java.lang.Class[],java.lang.ClassLoader,java.lang.reflect.ArtMethod[],java.lang.Class[][]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { byte[] i2d_SSL_SESSION(long); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket(int); }
-keepclassmembers class android.os.Process { void setThreadPriority(int); }
-keepclassmembers class android.os.Process { void sendSignal(int,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { long getWordInstanceImpl(java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setTextImpl(long,java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int precedingImpl(long,java.lang.String,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean isBoundaryImpl(long,java.lang.String,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int currentImpl(long,java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int followingImpl(long,java.lang.String,int); }
-keepclassmembers class java.lang.RealToString { void bigIntDigitGenerator(long,int,boolean,int); }
-keepclassmembers class android.text.StaticLayout { int[] nLineBreakOpportunities(java.lang.String,char[],int,int[]); }
-keepclassmembers class libcore.io.Memory { int peekIntNative(long); }
-keepclassmembers class libcore.io.Memory { void peekByteArray(long,byte[],int,int); }
-keepclassmembers class libcore.io.Memory { void peekIntArray(long,int[],int,int,boolean); }
-keepclassmembers class libcore.io.Memory { byte peekByte(long); }
-keepclassmembers class android.graphics.FontFamily { long nCreateFamily(java.lang.String,int); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromTypeface(long,int); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateWeightAlias(long,int); }
-keepclassmembers class android.graphics.FontFamily { boolean nAddFontWeightStyle(long,java.lang.String,int,boolean); }
-keepclassmembers class android.graphics.Typeface { int nativeGetStyle(long); }
-keepclassmembers class android.graphics.Typeface { void nativeSetDefault(long); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromArray(long[]); }
-keepclassmembers class android.util.EventLog { int writeEvent(int,java.lang.Object[]); }
-keepclassmembers class java.lang.Object { void wait(long,int); }
-keepclassmembers class android.util.FloatMath { float floor(float); }
-keepclassmembers class android.util.FloatMath { float ceil(float); }
-keepclassmembers class android.util.FloatMath { float sqrt(float); }
-keepclassmembers class android.util.Log { boolean isLoggable(java.lang.String,int); }
-keepclassmembers class android.view.VelocityTracker { long nativeInitialize(java.lang.String); }
-keepclassmembers class android.view.VelocityTracker { void nativeClear(long); }
-keepclassmembers class android.view.VelocityTracker { void nativeAddMovement(long,android.view.MotionEvent); }
-keepclassmembers class android.view.VelocityTracker { void nativeComputeCurrentVelocity(long,int,float); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetXVelocity(long,int); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetYVelocity(long,int); }
-keepclassmembers class android.util.Log { int println_native(int,int,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.StringBlock { int nativeGetSize(long); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String nativeGetString(long,int); }
-keepclassmembers class android.content.res.StringBlock { int[] nativeGetStyle(long,int); }
-keepclassmembers class java.util.regex.Pattern { long compileImpl(java.lang.String,int); }
-keepclassmembers class android.graphics.Paint { void setFlags(int); }
-keepclassmembers class android.graphics.Paint { void setAntiAlias(boolean); }
-keepclassmembers class android.graphics.Paint { void setDither(boolean); }
-keepclassmembers class android.graphics.Paint { void setFakeBoldText(boolean); }
-keepclassmembers class android.graphics.Paint { void setFilterBitmap(boolean); }
-keepclassmembers class android.graphics.Paint { void setColor(int); }
-keepclassmembers class android.graphics.Paint { void setAlpha(int); }
-keepclassmembers class android.graphics.Paint { void setStrokeWidth(float); }
-keepclassmembers class android.graphics.Paint { void setStrokeMiter(float); }
-keepclassmembers class android.graphics.Paint { void setElegantTextHeight(boolean); }
-keepclassmembers class android.graphics.Paint { void setTextSize(float); }
-keepclassmembers class android.graphics.Paint { void setTextScaleX(float); }
-keepclassmembers class android.graphics.Paint { void setTextSkewX(float); }
-keepclassmembers class android.graphics.Paint { float getFontMetrics(android.graphics.Paint$FontMetrics); }
-keepclassmembers class android.graphics.Paint { int getFontMetricsInt(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.graphics.Paint { float native_measureText(char[],int,int,int); }
-keepclassmembers class android.graphics.Paint { float native_measureText(java.lang.String,int); }
-keepclassmembers class android.graphics.Paint { long native_initWithPaint(long); }
-keepclassmembers class android.graphics.Paint { void native_set(long,long); }
-keepclassmembers class android.graphics.Paint { int native_getStyle(long); }
-keepclassmembers class android.graphics.Paint { void native_setStyle(long,int); }
-keepclassmembers class android.graphics.Paint { void native_setStrokeCap(long,int); }
-keepclassmembers class android.graphics.Paint { void native_setStrokeJoin(long,int); }
-keepclassmembers class android.graphics.Paint { long native_setShader(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setColorFilter(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setXfermode(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setPathEffect(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setTypeface(long,long); }
-keepclassmembers class android.graphics.Paint { void native_setTextLocale(long,java.lang.String); }
-keepclassmembers class android.graphics.Paint { float native_getTextRunAdvances(long,long,char[],int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.graphics.Paint { float native_getTextRunAdvances(long,long,java.lang.String,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.graphics.Paint { int native_getTextRunCursor(long,char[],int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { int native_getTextRunCursor(long,java.lang.String,int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { void native_setShadowLayer(long,float,float,float,int); }
-keepclassmembers class android.graphics.Paint { float native_getLetterSpacing(long); }
-keepclassmembers class android.graphics.Paint { void native_setLetterSpacing(long,float); }
-keepclassmembers class android.graphics.Paint { void native_setFontFeatureSettings(long,java.lang.String); }
-keepclassmembers class android.text.AndroidBidi { int runBidi(int,char[],byte[],int,boolean); }
-keepclassmembers class java.util.zip.Inflater { long createStream(boolean); }
-keepclassmembers class java.util.zip.Inflater { void endImpl(long); }
-keepclassmembers class java.util.zip.Inflater { int inflateImpl(byte[],int,int,long); }
-keepclassmembers class java.util.zip.Inflater { void setInputImpl(byte[],int,int,long); }
-keepclassmembers class java.util.zip.Inflater { int setFileInputImpl(java.io.FileDescriptor,long,int,long); }
-keepclassmembers class libcore.icu.Transliterator { long create(java.lang.String); }
-keepclassmembers class libcore.icu.Transliterator { java.lang.String transliterate(long,java.lang.String); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object createObjectArray(java.lang.Class,int); }
-keepclassmembers class android.graphics.ColorFilter { void destroyFilter(long); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.Class findLoadedClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.String getBootClassPathResource(java.lang.String,int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreate(int[],int,int,int,int,int,boolean); }
-keepclassmembers class android.graphics.Bitmap { void nativeErase(long,int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreateFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.BitmapShader { long nativeCreate(long,int,int); }
-keepclassmembers class android.support.v4.os.g { void a(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil getInstance(); }
-keepclassmembers class android.os.ServiceManager { android.os.IServiceManager getIServiceManager(); }
-keepclassmembers class android.graphics.Bitmap { int getDefaultDensity(); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { org.apache.harmony.security.asn1.ASN1Boolean getInstance(); }
-keepclassmembers class libcore.util.ZoneInfoDB { libcore.util.ZoneInfoDB$TzData getInstance(); }
-keepclassmembers class android.view.Choreographer { long getFrameDelay(); }
-keepclassmembers class android.widget.PopupWindow { int[] access$800(); }
-keepclassmembers class javax.net.ssl.HttpsURLConnection { javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier(); }
-keepclassmembers class javax.net.ssl.HttpsURLConnection { javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory(); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable$Factory getInstance(); }
-keepclassmembers class android.net.Uri { java.lang.String access$300(); }
-keepclassmembers class android.os.StrictMode { java.util.HashMap access$100(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$500(); }
-keepclassmembers class android.os.StrictMode { android.util.Singleton access$600(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$700(); }
-keepclassmembers class android.os.StrictMode { boolean access$800(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$900(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$2200(); }
-keepclassmembers class android.support.v7.widget.ao$v { void <clinit>(); }
-keepclassmembers class java.nio.ByteOrder { java.nio.ByteOrder nativeOrder(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { org.apache.harmony.security.asn1.ASN1Oid getInstance(); }
-keepclassmembers class com.android.volley.b { void <clinit>(); }
-keepclassmembers class com.shapps.mintubeapp.f { android.webkit.WebView b(); }
-keepclassmembers class android.support.v7.view.menu.k { void <clinit>(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset defaultCharset(); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void register(); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void register(); }
-keepclassmembers class java.lang.Runtime { java.lang.Runtime getRuntime(); }
-keepclassmembers class java.lang.System { java.lang.String lineSeparator(); }
-keepclassmembers class android.view.GLES20Canvas { boolean isAvailable(); }
-keepclassmembers class dalvik.system.VMRuntime { dalvik.system.VMRuntime getRuntime(); }
-keepclassmembers class android.view.View { boolean access$2000(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean isInstrumentationEnabled(); }
-keepclassmembers class android.animation.ValueAnimator { float getDurationScale(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { android.view.inputmethod.InputMethodManager peekInstance(); }
-keepclassmembers class com.android.volley.m$a { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { org.apache.harmony.security.asn1.ASN1UTCTime getInstance(); }
-keepclassmembers class dalvik.system.SocketTagger { dalvik.system.SocketTagger get(); }
-keepclassmembers class android.provider.Settings { java.lang.Object access$000(); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder { org.apache.http.conn.ssl.SSLSocketFactory access$100(); }
-keepclassmembers class android.system.Os { int getpid(); }
-keepclassmembers class java.net.HttpURLConnection { boolean getFollowRedirects(); }
-keepclassmembers class android.system.Os { int getuid(); }
-keepclassmembers class android.ddm.DdmHandleHeap { void register(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.TimeInterpolator access$000(); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$600(); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1000(); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1400(); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { org.apache.harmony.security.asn1.ASN1Integer getInstance(); }
-keepclassmembers class android.app.ActivityThread { android.app.ActivityThread currentActivityThread(); }
-keepclassmembers class android.net.http.AndroidHttpClient { org.apache.http.HttpRequestInterceptor access$000(); }
-keepclassmembers class android.ddm.DdmHandleHello { void register(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { char access$100(); }
-keepclassmembers class java.util.Locale { java.util.Locale getDefault(); }
-keepclassmembers class android.support.v4.e.d { java.lang.String a(); }
-keepclassmembers class android.support.v4.e.d { java.lang.String b(); }
-keepclassmembers class android.animation.PathKeyframes { java.util.ArrayList access$200(); }
-keepclassmembers class java.net.ProxySelector { java.net.ProxySelector getDefault(); }
-keepclassmembers class android.widget.SpellChecker { java.lang.String access$300(); }
-keepclassmembers class org.apache.harmony.luni.internal.util.TimezoneGetter { org.apache.harmony.luni.internal.util.TimezoneGetter getInstance(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { java.lang.String access$100(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void a(); }
-keepclassmembers class android.view.MenuInflater { java.lang.Class[] access$200(); }
-keepclassmembers class android.view.MenuInflater { java.lang.Class[] access$500(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { android.content.Context b(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void d(); }
-keepclassmembers class com.shapps.mintubeapp.PlayerService { void f(); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.AssetManager getSystem(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { org.apache.harmony.security.asn1.ASN1BitString getInstance(); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <clinit>(); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void register(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { org.apache.harmony.security.asn1.ASN1GeneralizedTime getInstance(); }
-keepclassmembers class android.support.v7.view.g { java.lang.Class[] a(); }
-keepclassmembers class android.support.v7.view.g { java.lang.Class[] b(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { android.os.IBinder getApplicationObject(); }
-keepclassmembers class android.ddm.DdmHandleExit { void register(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.LogManager getLogManager(); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory(); }
-keepclassmembers class android.support.v4.app.ab { android.support.v4.app.ab$g a(); }
-keepclassmembers class android.support.v4.c.a.j { void <clinit>(); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[] access$000(); }
-keepclassmembers class android.animation.ArgbEvaluator { android.animation.ArgbEvaluator getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { org.apache.harmony.security.asn1.ASN1OctetString getInstance(); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable$Factory getInstance(); }
-keepclassmembers class android.ddm.DdmHandleThread { void register(); }
-keepclassmembers class java.util.Collections { java.util.List emptyList(); }
-keepclassmembers class java.util.Collections { java.util.Map emptyMap(); }
-keepclassmembers class java.util.Collections { java.util.Iterator access$000(); }
-keepclassmembers class android.support.a.a.f { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession { javax.net.ssl.SSLSession getNullSession(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader getSystemClassLoader(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { org.apache.harmony.security.asn1.ASN1Any getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { org.apache.harmony.security.asn1.ASN1Enumerated getInstance(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.util.ArrayList getProviders(); }
-keepclassmembers class android.support.v7.a.f { int i(); }
-keepclassmembers class android.os.StrictMode { int getThreadPolicyMask(); }
-keepclassmembers class android.os.Binder { int getCallingUid(); }
-keepclassmembers class android.os.Binder { void init(); }
-keepclassmembers class android.os.StrictMode { boolean access$400(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void <clinit>(); }
-keepclassmembers class java.nio.ByteOrder { boolean isLittleEndian(); }
-keepclassmembers class java.lang.String { java.lang.String intern(); }
-keepclassmembers class android.emoji.EmojiFactory { android.emoji.EmojiFactory newAvailableInstance(); }
-keepclassmembers class android.support.v4.g.aj { long a(); }
-keepclassmembers class java.lang.System { long currentTimeMillis(); }
-keepclassmembers class java.lang.System { long nanoTime(); }
-keepclassmembers class java.lang.System { java.lang.String[] specialProperties(); }
-keepclassmembers class android.view.GLES20Canvas { boolean nIsAvailable(); }
-keepclassmembers class android.view.GLES20Canvas { long nCreateDisplayListRenderer(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getExceptionTypesNative(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String[] properties(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String bootClassPath(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String classPath(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String vmVersion(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64Bit(); }
-keepclassmembers class android.view.GLES20Canvas { void <clinit>(); }
-keepclassmembers class android.animation.ValueAnimator { long getFrameDelay(); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getProxyInterfaces(); }
-keepclassmembers class java.lang.Class { java.lang.String getNameNative(); }
-keepclassmembers class android.graphics.Region { long nativeConstructor(); }
-keepclassmembers class java.util.TimeZone { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class libcore.io.Posix { int getpid(); }
-keepclassmembers class libcore.io.Posix { int getuid(); }
-keepclassmembers class android.graphics.Path { long init1(); }
-keepclassmembers class libcore.io.Posix { android.system.StructUtsname uname(); }
-keepclassmembers class java.lang.Thread { void nativeInterrupt(); }
-keepclassmembers class java.lang.Thread { boolean interrupted(); }
-keepclassmembers class java.lang.Thread { boolean isInterrupted(); }
-keepclassmembers class java.math.NativeBN { long BN_new(); }
-keepclassmembers class java.lang.Thread { void yield(); }
-keepclassmembers class android.app.AppGlobals { android.app.Application getInitialApplication(); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLinearInterpolator(); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory(); }
-keepclassmembers class com.android.internal.os.BinderInternal { android.os.IBinder getContextObject(); }
-keepclassmembers class org.apache.http.util.ExceptionUtils { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void <clinit>(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void <clinit>(); }
-keepclassmembers class android.support.v4.os.h { void a(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getIcuVersion(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getUnicodeVersion(); }
-keepclassmembers class android.os.SystemProperties { void native_add_change_callback(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCldrVersion(); }
-keepclassmembers class android.system.OsConstants { void <clinit>(); }
-keepclassmembers class android.system.OsConstants { void initConstants(); }
-keepclassmembers class android.content.res.AssetManager { void destroy(); }
-keepclassmembers class android.content.res.AssetManager { int getStringBlockCount(); }
-keepclassmembers class java.lang.Throwable { java.lang.Object nativeFillInStackTrace(); }
-keepclassmembers class java.security.Security { void access$100(); }
-keepclassmembers class android.os.Parcel { long nativeCreate(); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getCallingClassLoader(); }
-keepclassmembers class android.os.Trace { long nativeGetEnabledTags(); }
-keepclassmembers class android.os.Trace { long cacheEnabledTags(); }
-keepclassmembers class android.os.Trace { long access$000(); }
-keepclassmembers class android.util.DisplayMetrics { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void clinit(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_CTX_new(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getIntegerInstance(); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object getReferent(); }
-keepclassmembers class android.support.v4.widget.a { void <clinit>(); }
-keepclassmembers class android.os.Process { int myPid(); }
-keepclassmembers class android.os.Process { int myUid(); }
-keepclassmembers class android.webkit.WebView { android.webkit.WebViewFactoryProvider getFactory(); }
-keepclassmembers class android.view.animation.AnimationUtils { long currentAnimationTimeMillis(); }
-keepclassmembers class android.view.HardwareRenderer { boolean isAvailable(); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean makeCircularListIfUnenqueued(); }
-keepclassmembers class android.ddm.DdmRegister { void registerHandlers(); }
-keepclassmembers class java.lang.ClassLoader$SystemClassLoader { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void selfInterrupt(); }
-keepclassmembers class java.lang.Void { void <clinit>(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader access$000(); }
-keepclassmembers class java.lang.Object { java.lang.Object internalClone(); }
-keepclassmembers class java.lang.Object { void notify(); }
-keepclassmembers class java.lang.Object { void notifyAll(); }
-keepclassmembers class java.lang.Object { void wait(); }
-keepclassmembers class android.graphics.Paint { int getFlags(); }
-keepclassmembers class android.graphics.Paint { int getColor(); }
-keepclassmembers class android.graphics.Paint { int getAlpha(); }
-keepclassmembers class android.graphics.Paint { float getStrokeWidth(); }
-keepclassmembers class android.graphics.Paint { float getTextSize(); }
-keepclassmembers class android.graphics.Paint { float getTextScaleX(); }
-keepclassmembers class android.graphics.Paint { float ascent(); }
-keepclassmembers class android.os.SystemClock { long uptimeMillis(); }
-keepclassmembers class android.os.SystemClock { long elapsedRealtime(); }
-keepclassmembers class android.graphics.Paint { long native_init(); }
-keepclassmembers class android.os.UserHandle { int myUserId(); }
-keepclassmembers class android.os.BaseBundle { void <clinit>(); }
-keepclassmembers class java.lang.VMClassLoader { int getBootClassPathSize(); }
