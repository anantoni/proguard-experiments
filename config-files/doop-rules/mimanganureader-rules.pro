-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class java.lang.ThreadGroup { void uncaughtException(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class java.lang.ClassLoader { void <init>(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.Runnable); }
-keepclassmembers class java.security.PrivilegedActionException { void <init>(java.lang.Exception); }
-keepclassmembers class java.lang.System { void arraycopy(java.lang.Object,int,java.lang.Object,int,int); }
-keepclassmembers class java.lang.Object { java.lang.Object clone(); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class sun.misc.Unsafe { void putObject(java.lang.Object,long,java.lang.Object); }
-keepclassmembers class java.lang.Thread { java.lang.Thread currentThread(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { int access$1708(ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class android.view.animation.Animation { void setDuration(long); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { int getChangingConfigurations(); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.BoringLayout { void init(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { boolean shouldDodge(android.view.View,int); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void doAnimationFrame(long); }
-keepclassmembers class android.support.v7.widget.GapWorker { void flushTasksWithDeadline(long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { void assignFromViewAndKeepVisibleRect(android.view.View); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { void assignFromView(android.view.View); }
-keepclassmembers class android.support.v7.widget.GapWorker { boolean isPrefetchPositionAttached(android.support.v7.widget.RecyclerView,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v7.widget.GapWorker { void prefetchInnerRecyclerViewWithDeadline(android.support.v7.widget.RecyclerView,long); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics); }
-keepclassmembers class android.view.animation.Animation { boolean getTransformation(long,android.view.animation.Transformation); }
-keepclassmembers class android.support.v7.widget.GapWorker { void postFromTraversal(android.support.v7.widget.RecyclerView,int,int); }
-keepclassmembers class android.support.v7.widget.GapWorker { void buildTaskList(); }
-keepclassmembers class android.text.BoringLayout { void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.view.animation.Animation { float resolveSize(int,float,int,int); }
-keepclassmembers class android.text.BoringLayout { void ellipsized(int,int); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void center(boolean,boolean); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { float computeMaxZoom(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { float computeMinZoom(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void init(android.content.Context); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void _setImageDrawable(android.graphics.drawable.Drawable,android.graphics.Matrix,float,float); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { long awaitNanos(long); }
-keepclassmembers class android.database.sqlite.SQLiteQueryBuilder { void appendColumns(java.lang.StringBuilder,java.lang.String[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { int getCurrentPage(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { android.graphics.RectF getCenter(android.graphics.Matrix,boolean,boolean); }
-keepclassmembers class android.support.v7.widget.GapWorker { void run(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { float getDefaultScale(it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { boolean isLastPageVisible(); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { boolean onMove(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page getPage(int); }
-keepclassmembers class android.util.SparseArray { void gc(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { boolean onDoubleTap(android.view.MotionEvent); }
-keepclassmembers class android.util.SparseArray { void put(int,java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { int getColumnIndex(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { float getMaxScale(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { float getMinScale(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class android.util.SparseArray { void append(int,java.lang.Object); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void getProperBaseMatrix(android.graphics.drawable.Drawable,android.graphics.Matrix); }
-keepclassmembers class android.util.SparseArray { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { int transformPage(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void setPaths(java.util.List); }
-keepclassmembers class android.util.SparseArray { void clear(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int available(); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { int getByte(int); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int read(byte[],int,int); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String escapedAV(); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { char getEscaped(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int fill(java.util.zip.Inflater,int); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long skip(long); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { java.lang.Object next(); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { char getUTF8(); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { void remove(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String hexAV(); }
-keepclassmembers class android.animation.Animator { void appendChangingConfigurations(int); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { float getInterpolation(float); }
-keepclassmembers class android.text.AutoText { java.lang.String lookup(java.lang.CharSequence,int,int); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String nextAT(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void postTranslate(float,float); }
-keepclassmembers class android.graphics.RectF { boolean isEmpty(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void panBy(double,double); }
-keepclassmembers class android.graphics.RectF { float height(); }
-keepclassmembers class android.graphics.RectF { float width(); }
-keepclassmembers class android.animation.AnimatorSet$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.graphics.RectF { float centerY(); }
-keepclassmembers class android.hardware.input.InputManager { void populateInputDevicesLocked(); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String quotedAV(); }
-keepclassmembers class android.text.AutoText { void add(java.lang.String,char); }
-keepclassmembers class android.text.AutoText { char newTrieNode(); }
-keepclassmembers class android.graphics.RectF { void offset(float,float); }
-keepclassmembers class android.graphics.RectF { void inset(float,float); }
-keepclassmembers class android.graphics.RectF { boolean intersect(float,float,float,float); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String findMostSpecific(java.lang.String); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator setDuration(long); }
-keepclassmembers class android.graphics.RectF { void union(float,float,float,float); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void updateRect(android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void zoomTo(float,float,float); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void zoomTo(float); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void zoomTo(float,float,float,float); }
-keepclassmembers class android.graphics.Rect { int hashCode(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { java.util.ArrayList getChaptersJsonArray(org.json.JSONArray,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.graphics.Rect { int width(); }
-keepclassmembers class android.graphics.Rect { int centerX(); }
-keepclassmembers class android.animation.LayoutTransition$3 { void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.graphics.Rect { int height(); }
-keepclassmembers class android.view.ViewPropertyAnimator { void animateProperty(int,float); }
-keepclassmembers class android.graphics.Rect { void offset(int,int); }
-keepclassmembers class android.graphics.Rect { int centerY(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$calcStorage$1 { void run(); }
-keepclassmembers class android.graphics.Rect { float exactCenterX(); }
-keepclassmembers class android.graphics.Rect { void offsetTo(int,int); }
-keepclassmembers class android.graphics.Rect { float exactCenterY(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { java.util.ArrayList getMangasJsonArray(org.json.JSONArray); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.text.method.WordIterator { void setCharSequence(java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.method.WordIterator { int following(int); }
-keepclassmembers class android.text.method.WordIterator { int preceding(int); }
-keepclassmembers class android.view.ViewPropertyAnimator { float getValue(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader { void calculateParticularScale(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader { void calculateParticularScale(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean,boolean); }
-keepclassmembers class android.text.method.WordIterator { int getBeginning(int); }
-keepclassmembers class java.security.Security { void renumProviders(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader { void goToPage(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.text.method.WordIterator { void checkOffsetIsValid(int); }
-keepclassmembers class android.text.method.WordIterator { int getEnd(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader { void reloadImage(int); }
-keepclassmembers class rapid.decoder.BitmapLoader { int calculateInSampleSizeByRatio(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader { void seekPage(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.animation.StateListAnimator { void clearTarget(); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator clone(); }
-keepclassmembers class rapid.decoder.BitmapLoader { void adjustDensityRatio(boolean); }
-keepclassmembers class android.animation.StateListAnimator { void setState(int[]); }
-keepclassmembers class rapid.decoder.BitmapLoader { android.graphics.Bitmap decodeInMemory(rapid.decoder.TwiceReadableInputStream); }
-keepclassmembers class android.animation.StateListAnimator { void appendChangingConfigurations(int); }
-keepclassmembers class android.animation.StateListAnimator { void addState(int[],android.animation.Animator); }
-keepclassmembers class android.util.SparseBooleanArray { void put(int,boolean); }
-keepclassmembers class android.util.SparseBooleanArray { void delete(int); }
-keepclassmembers class android.util.SparseBooleanArray { void append(int,boolean); }
-keepclassmembers class java.lang.reflect.ArtMethod { boolean equalConstructorParameters(java.lang.reflect.ArtMethod,java.lang.Class[]); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { int hashCode(); }
-keepclassmembers class rapid.decoder.BitmapLoader { android.graphics.Bitmap decode(); }
-keepclassmembers class android.util.SparseBooleanArray { java.lang.String toString(); }
-keepclassmembers class java.io.DataInputStream { int readUnsignedShort(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.io.DataInputStream { int skipBytes(int); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.net.DefaultFileNameMap { java.lang.String getContentTypeFor(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { int hashCode(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap); }
-keepclassmembers class rapid.decoder.BitmapLoader { int hashCode(); }
-keepclassmembers class org.acra.legacy.ReportConverter { org.acra.collector.CrashReportData legacyLoad(java.io.Reader); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void stripOffscreenViews(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setSharedElements(android.util.ArrayMap); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { float viscousFluid(float); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { float getInterpolation(float); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.transition.Transition setTargets(android.transition.Transition,boolean); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <clinit>(); }
-keepclassmembers class android.view.animation.Transformation { void compose(android.view.animation.Transformation); }
-keepclassmembers class android.os.StrictMode$Span { void finish(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.util.ArrayMap mapSharedElements(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class okhttp3.TlsVersion { java.util.List forJavaNames(java.lang.String[]); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { void updateMenuView(boolean); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setSharedElementMatrices(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { int setExtra(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { int setExtra(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { java.util.ArrayList getMangasFromFrontpage(java.lang.String); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void mutate(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int indexOfStateSet(int[]); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.util.TimeUtils { int printField(char[],int,char,int,boolean,int); }
-keepclassmembers class android.util.TimeUtils { int accumField(int,int,boolean,int); }
-keepclassmembers class android.os.Message { void recycleUnchecked(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(); }
-keepclassmembers class android.util.TypedValue { float complexToFloat(int); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelOffset(int,android.util.DisplayMetrics); }
-keepclassmembers class android.util.TypedValue { float complexToDimension(int,android.util.DisplayMetrics); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void moveSharedElementsToOverlay(); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelSize(int,android.util.DisplayMetrics); }
-keepclassmembers class android.os.Message { void setAsynchronous(boolean); }
-keepclassmembers class android.os.Message { boolean isInUse(); }
-keepclassmembers class android.util.TypedValue { float applyDimension(int,float,android.util.DisplayMetrics); }
-keepclassmembers class android.os.Message { boolean isAsynchronous(); }
-keepclassmembers class android.os.Message { void markInUse(); }
-keepclassmembers class android.os.Message { java.lang.String toString(long); }
-keepclassmembers class android.util.TimeUtils { int formatDurationLocked(long,int); }
-keepclassmembers class java.math.BitLevel { boolean nonZeroDroppedBits(int,int[]); }
-keepclassmembers class java.math.BitLevel { int bitLength(java.math.BigInteger); }
-keepclassmembers class java.math.BitLevel { void shiftLeftOneBit(int[],int[],int); }
-keepclassmembers class android.util.TypedValue { java.lang.String coerceToString(int,int); }
-keepclassmembers class android.util.TypedValue { float complexToFraction(int,float,float); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftLeftOneBit(java.math.BigInteger); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftRight(java.math.BigInteger,int); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex { void <init>(java.security.cert.X509Certificate[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void updateNewMangas(android.content.Context,ar.rulosoft.mimanganu.componentes.Manga,int); }
-keepclassmembers class java.math.BitLevel { boolean shiftRight(int[],int,int[],int,int); }
-keepclassmembers class okhttp3.CipherSuite$1 { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager$SpanSizeLookup { int getSpanGroupIndex(int,int); }
-keepclassmembers class android.app.BackStackRecord { void dump(java.lang.String,java.io.PrintWriter,boolean); }
-keepclassmembers class android.app.BackStackRecord { void addOp(android.app.BackStackRecord$Op); }
-keepclassmembers class org.json.JSONArray { void <init>(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void <init>(android.support.v7.widget.Toolbar,boolean,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void loadChapter(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.ReaderFragment$LoadMode); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(android.view.ViewGroup$ViewLocationHolder); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setTitleInt(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateHomeAccessibility(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.HorizontalPagedReader { int getCurrentPage(); }
-keepclassmembers class com.fedorvlasov.lazylist.MemCache$1 { int sizeOf(java.lang.String,android.graphics.Bitmap); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateNavigationIcon(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void updateToolbarLogo(); }
-keepclassmembers class android.support.design.widget.ShadowDrawableWrapper { float calculateHorizontalPadding(float,float,boolean); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { int detectDisplayOptions(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setCustomView(android.view.View); }
-keepclassmembers class android.app.BackStackRecord { void bumpBackStackNesting(int); }
-keepclassmembers class okhttp3.ConnectionPool$1 { void run(); }
-keepclassmembers class android.support.design.widget.ShadowDrawableWrapper { float calculateVerticalPadding(float,float,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void modScrollSensitive(float); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setDisplayOptions(int); }
-keepclassmembers class android.view.animation.CycleInterpolator { float getInterpolation(float); }
-keepclassmembers class android.support.v4.util.MapCollections { java.lang.Object[] toArrayHelper(int); }
-keepclassmembers class android.util.PathParser$PathDataNode { void nodesToPath(android.util.PathParser$PathDataNode[],android.graphics.Path); }
-keepclassmembers class android.util.PathParser$PathDataNode { void interpolatePathDataNode(android.util.PathParser$PathDataNode,android.util.PathParser$PathDataNode,float); }
-keepclassmembers class android.app.BackStackRecord { void calculateFragments(android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.app.BackStackRecord { void calculateBackFragments(android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class android.app.BackStackRecord { android.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean); }
-keepclassmembers class android.app.BackStackRecord { void run(); }
-keepclassmembers class org.acra.file.BulkReportDeleter { void deleteReports(boolean,int); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { int[] onCreateDrawableState(int); }
-keepclassmembers class android.util.PathParser$PathDataNode { void addCommand(android.graphics.Path,float[],char,char,float[]); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onMeasure(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator$1$1 { void onClick(android.view.View); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int getActionIndex(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onImageDownloaded(int,int); }
-keepclassmembers class android.graphics.RadialGradient { void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int getActionMasked(android.view.MotionEvent); }
-keepclassmembers class android.os.Trace { boolean isTagEnabled(long); }
-keepclassmembers class android.text.Layout$Ellipsizer { char charAt(int); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { void add(java.lang.String); }
-keepclassmembers class android.graphics.RadialGradient { void <init>(float,float,float,int,int,android.graphics.Shader$TileMode); }
-keepclassmembers class android.text.Layout$Ellipsizer { void getChars(int,int,char[],int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onProgressChanged(android.widget.SeekBar,int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { void _setImageDrawable(android.graphics.drawable.Drawable,android.graphics.Matrix,float,float); }
-keepclassmembers class java.io.ByteArrayInputStream { int available(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { boolean canScroll(int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onPageChanged(int); }
-keepclassmembers class android.app.BackStackRecord { void addTargets(android.transition.Transition,java.util.ArrayList); }
-keepclassmembers class android.util.PathParser$PathDataNode { void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { boolean canScrollV(int); }
-keepclassmembers class android.app.BackStackRecord { android.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.util.ArrayMap); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(byte[],int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onStartTrackingTouch(android.widget.SeekBar); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class java.io.ByteArrayInputStream { long skip(long); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onStopTrackingTouch(android.widget.SeekBar); }
-keepclassmembers class android.util.PathParser$PathDataNode { void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double); }
-keepclassmembers class android.app.BackStackRecord { void excludeHiddenFragments(java.util.ArrayList,int,android.transition.Transition); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { boolean onUp(android.view.MotionEvent); }
-keepclassmembers class android.app.ProgressDialog { void incrementProgressBy(int); }
-keepclassmembers class android.app.ProgressDialog { void incrementSecondaryProgressBy(int); }
-keepclassmembers class android.app.BackStackRecord { void setNameOverride(android.util.ArrayMap,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.BackStackRecord { android.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { void onZoomAnimationCompleted(float); }
-keepclassmembers class android.support.v7.preference.Preference { java.lang.StringBuilder getFilterableStringBuilder(); }
-keepclassmembers class android.app.BackStackRecord { void setNameOverrides(android.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(java.lang.Throwable,int); }
-keepclassmembers class android.app.BackStackRecord { void setNameOverrides(android.app.BackStackRecord$TransitionState,android.util.ArrayMap,boolean); }
-keepclassmembers class okhttp3.internal.platform.Platform { byte[] concatLengthPrefixed(java.util.List); }
-keepclassmembers class okhttp3.internal.platform.Platform { java.util.List alpnProtocolNames(java.util.List); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { int hashCode(); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(android.os.Parcel,boolean); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer$Scope peek(); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer close(org.json.JSONStringer$Scope,org.json.JSONStringer$Scope,java.lang.String); }
-keepclassmembers class org.json.JSONStringer { void replaceTop(org.json.JSONStringer$Scope); }
-keepclassmembers class android.support.v7.widget.GapWorker$1 { int compare(android.support.v7.widget.GapWorker$Task,android.support.v7.widget.GapWorker$Task); }
-keepclassmembers class org.json.JSONStringer { void string(java.lang.String); }
-keepclassmembers class android.app.BackStackRecord { void setBackNameOverrides(android.app.BackStackRecord$TransitionState,android.util.ArrayMap,boolean); }
-keepclassmembers class org.json.JSONStringer { void newline(); }
-keepclassmembers class android.widget.NumberPicker { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$ScaleListener { boolean onScale(android.view.ScaleGestureDetector); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int updateFrames(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void allocArrays(int); }
-keepclassmembers class android.widget.NumberPicker { boolean moveToFinalScrollerPosition(android.widget.Scroller); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { float getInterpolation(float); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.IdentifiableCookie { int hashCode(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class android.widget.NumberPicker { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreferenceFloat$1 { void onProgressChanged(android.widget.SeekBar,int,boolean); }
-keepclassmembers class android.widget.NumberPicker { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.PackedObjectVector { void setValue(int,int,java.lang.Object); }
-keepclassmembers class android.text.PackedObjectVector { java.lang.Object getValue(int,int); }
-keepclassmembers class android.text.PackedObjectVector { void deleteAt(int,int); }
-keepclassmembers class android.text.PackedObjectVector { void growBuffer(); }
-keepclassmembers class android.text.PackedObjectVector { int size(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.PackedObjectVector { void insertAt(int,java.lang.Object[]); }
-keepclassmembers class android.text.PackedObjectVector { void moveRowGapTo(int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.widget.NumberPicker { void scrollBy(int,int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOf(java.lang.Object,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { android.view.View nextViewFromScrapList(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { android.view.View next(android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.widget.NumberPicker { void computeScroll(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOfNull(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void invalidatePanelMenu(int); }
-keepclassmembers class android.widget.NumberPicker { int computeVerticalScrollRange(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask$SingleUpdateSerch { void run(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadius(float); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void computeOpacity(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object keyAt(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { android.view.View nextViewInLimitedList(android.view.View); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSource { void waitUntilReadable(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void openPanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOfValue(java.lang.Object); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSource { long read(okio.Buffer,long); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.view.WindowManager$LayoutParams { int copyFrom(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.util.ArrayMap$1 { java.lang.Object colGetEntry(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.ThemeColors { int brightenColor(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.ThemeColors { int brightness(int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object removeAt(int); }
-keepclassmembers class android.widget.NumberPicker { void onDraw(android.graphics.Canvas); }
-keepclassmembers class okhttp3.ConnectionPool { void <init>(int,long,java.util.concurrent.TimeUnit); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.ThemeColors { int brightnessColor(int,float); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.ThemeColors { int[] getColors(android.content.SharedPreferences); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String normalizeNumber(java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSource { void receive(okio.BufferedSource,long); }
-keepclassmembers class okhttp3.ConnectionPool { int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long); }
-keepclassmembers class okhttp3.ConnectionPool { long cleanup(long); }
-keepclassmembers class android.widget.NumberPicker { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.UUID { void init(); }
-keepclassmembers class android.widget.NumberPicker { void initializeSelectorWheelIndices(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeTag(int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.String toString(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getChangingConfigurations(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeBitString(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeBoolean(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object valueAt(int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { void <init>(android.view.View); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeANY(); }
-keepclassmembers class android.widget.NumberPicker { void changeValueByOne(boolean); }
-keepclassmembers class java.util.UUID { java.util.UUID makeUuid(byte[],int); }
-keepclassmembers class android.widget.AbsListView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.NumberPicker { void initializeSelectorWheel(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeInteger(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeGeneralizedTime(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeUTCTime(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { float computeTargetVelocity(int,float,float,float); }
-keepclassmembers class android.widget.NumberPicker { void initializeFadingEdges(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeOctetString(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { float constrain(float,float,float); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeOID(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { float constrainEdgeValue(float,float); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <init>(boolean[]); }
-keepclassmembers class android.widget.NumberPicker { int getWrappedSelectorIndex(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void setBit(int,boolean); }
-keepclassmembers class android.widget.NumberPicker { void incrementSelectorIndices(int[]); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { boolean getBit(int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { float getEdgeValue(float,float,float,float); }
-keepclassmembers class java.util.UUID { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeString(); }
-keepclassmembers class android.widget.NumberPicker { void decrementSelectorIndices(int[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader { void goToPage(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { boolean[] toBooleanArray(); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader { boolean onSingleTapConfirmed(android.view.MotionEvent); }
-keepclassmembers class android.widget.NumberPicker { void ensureCachedScrollSelectorValue(int); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String convertKeypadLettersToDigits(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader { boolean isLastPageVisible(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void reopenMenu(android.support.v7.view.menu.MenuBuilder,boolean); }
-keepclassmembers class android.widget.NumberPicker { boolean updateInputTextView(); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { int getBitmapId(android.graphics.Bitmap); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void addBitmapMemory(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader { int transformPage(int); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void writeBitmapsToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void assimilate(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.widget.NumberPicker { boolean ensureScrollWheelAdjusted(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void appendLocked(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setRelativeVelocity(float,float); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { java.lang.String toString(int[]); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setMaximumVelocity(float,float); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { int[] toIntArray(java.lang.String,boolean); }
-keepclassmembers class android.view.ScaleGestureDetector { void <init>(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener,android.os.Handler); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setMinimumVelocity(float,float); }
-keepclassmembers class rapid.decoder.ResourceBitmapLoader { float densityRatio(); }
-keepclassmembers class android.view.ScaleGestureDetector { void addTouchHistory(android.view.MotionEvent); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushLocked(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.widget.GridView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class rapid.decoder.ResourceBitmapLoader { int hashCode(); }
-keepclassmembers class android.view.ScaleGestureDetector { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.GridView { void fillGap(boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState findMenuPanel(android.view.Menu); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState getPanelState(int,boolean); }
-keepclassmembers class android.content.ClipDescription { boolean toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.widget.GridView { android.view.View fillDown(int,int); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint); }
-keepclassmembers class okio.Segment { void compact(); }
-keepclassmembers class okio.Segment { okio.Segment split(int); }
-keepclassmembers class okio.Segment { void writeTo(okio.Segment,int); }
-keepclassmembers class android.widget.GridView { android.view.View makeRow(int,int,boolean); }
-keepclassmembers class android.widget.GridView { android.view.View fillUp(int,int); }
-keepclassmembers class android.widget.GridView { android.view.View fillFromTop(int); }
-keepclassmembers class android.util.DisplayMetrics { void setToDefaults(); }
-keepclassmembers class android.widget.GridView { android.view.View fillFromBottom(int,int); }
-keepclassmembers class android.view.ScaleGestureDetector { float getScaleFactor(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.GridView { void pinToTop(int); }
-keepclassmembers class android.widget.GridView { android.view.View fillSpecific(int,int); }
-keepclassmembers class android.widget.GridView { android.view.View fillSelection(int,int); }
-keepclassmembers class android.widget.GridView { void pinToBottom(int); }
-keepclassmembers class android.widget.GridView { int findMotionRow(int); }
-keepclassmembers class android.text.Layout { void drawText(android.graphics.Canvas,int,int); }
-keepclassmembers class android.widget.GridView { void correctTooLow(int,int,int); }
-keepclassmembers class android.widget.GridView { void correctTooHigh(int,int,int); }
-keepclassmembers class android.widget.GridView { android.view.View fillFromSelection(int,int,int); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void run(); }
-keepclassmembers class android.widget.GridView { void adjustForBottomFadingEdge(android.view.View,int,int); }
-keepclassmembers class android.widget.GridView { int getBottomSelectionPixel(int,int,int,int); }
-keepclassmembers class android.widget.GridView { int getTopSelectionPixel(int,int,int); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$7 { void run(); }
-keepclassmembers class android.widget.GridView { android.view.View moveSelection(int,int,int); }
-keepclassmembers class android.widget.GridView { void adjustForTopFadingEdge(android.view.View,int,int); }
-keepclassmembers class android.text.Layout { void drawBackground(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int,int,int); }
-keepclassmembers class android.widget.GridView { boolean determineColumns(int); }
-keepclassmembers class android.text.Layout { int getLineStartPos(int,int,int); }
-keepclassmembers class java.net.AddressCache$AddressCacheEntry { void <init>(java.lang.Object); }
-keepclassmembers class android.widget.GridView { void onMeasure(int,int); }
-keepclassmembers class android.text.Layout { boolean isLevelBoundary(int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.Layout { boolean isRtlCharAt(int); }
-keepclassmembers class android.widget.GridView { void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup$LayoutParams,int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String eventTypeToString(int); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,int,boolean); }
-keepclassmembers class android.text.Layout { boolean primaryIsTrailingPrevious(int); }
-keepclassmembers class android.text.Layout { float getLineLeft(int); }
-keepclassmembers class android.widget.GridView { void layoutChildren(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.text.Layout { float getLineMax(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void <init>(android.graphics.drawable.DrawableContainer$DrawableContainerState,android.graphics.drawable.DrawableContainer,android.content.res.Resources); }
-keepclassmembers class android.text.Layout { float getLineRight(int); }
-keepclassmembers class android.text.Layout { float getLineWidth(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChangingConfigurations(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { java.util.List getSelectedItems(); }
-keepclassmembers class android.text.Layout { int getLineForOffset(int); }
-keepclassmembers class okhttp3.CacheControl { java.lang.String headerValue(); }
-keepclassmembers class android.text.Layout { int getLineForVertical(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void createAllFutures(); }
-keepclassmembers class android.text.Layout { int getOffsetForHorizontal(int,float); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int addChild(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setLayoutDirection(int); }
-keepclassmembers class android.text.Layout { int getLineEnd(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canApplyTheme(); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void mutate(); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int,int,int); }
-keepclassmembers class android.text.Layout { int getLineBaseline(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void clearMutated(); }
-keepclassmembers class android.text.Layout { int getLineBottom(int); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { java.util.List allSubjectAltNames(java.security.cert.X509Certificate); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { boolean onCreateActionMode(android.view.ActionMode,android.view.Menu); }
-keepclassmembers class android.widget.GridView { void setupChild(android.view.View,int,int,boolean,int,boolean,boolean,int); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class okhttp3.CacheControl { okhttp3.CacheControl parse(okhttp3.Headers); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class android.widget.GridView { void setSelectionInt(int); }
-keepclassmembers class android.text.Layout { int getOffsetAtStartOf(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { java.util.List stringToIntList(java.lang.String); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void computeConstantSize(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.Rect getConstantPadding(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { float getPercent(android.content.res.TypedArray,int,float); }
-keepclassmembers class android.text.Layout { void getCursorPath(int,android.graphics.Path,java.lang.CharSequence); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(float); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verifyHostname(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canConstantState(); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isStateful(); }
-keepclassmembers class android.text.Layout { void addSelection(int,int,int,int,int,android.graphics.Path); }
-keepclassmembers class android.text.Layout { void getSelectionPath(int,int,android.graphics.Path); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.text.Layout { android.text.Layout$Alignment getParagraphAlignment(int); }
-keepclassmembers class android.widget.ImageView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.widget.ImageView { android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType); }
-keepclassmembers class android.text.Layout { int getParagraphRight(int); }
-keepclassmembers class android.text.Layout { int getParagraphLeadingMargin(int); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1Impl { void computeHash(int[]); }
-keepclassmembers class org.acra.collector.LogCatCollector { org.acra.model.Element collectLogCat(java.lang.String); }
-keepclassmembers class android.widget.ImageView { void onMeasure(int,int); }
-keepclassmembers class android.widget.GridView { boolean pageScroll(int); }
-keepclassmembers class android.widget.GridView { boolean fullScroll(int); }
-keepclassmembers class android.widget.GridView { boolean arrowScroll(int); }
-keepclassmembers class android.text.Layout { float measurePara(android.text.TextPaint,java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemAnimator { int buildAdapterChangeFlagsForAnimations(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class libcore.net.url.JarHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1Impl { void updateHash(int[],byte[],int,int); }
-keepclassmembers class okio.Okio$2 { long read(okio.Buffer,long); }
-keepclassmembers class android.widget.GridView { boolean isCandidateSelection(int,int); }
-keepclassmembers class android.widget.ImageView { void configureBounds(); }
-keepclassmembers class org.acra.collector.MemoryInfoCollector { long getAvailableInternalMemorySize(); }
-keepclassmembers class org.acra.collector.MemoryInfoCollector { long getTotalInternalMemorySize(); }
-keepclassmembers class android.text.Layout { void ellipsize(int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void scan(java.io.Reader,org.ccil.cowan.tagsoup.ScanHandler); }
-keepclassmembers class android.widget.GridView { void adjustViewsUpOrDown(); }
-keepclassmembers class android.widget.GridView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.GridView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.widget.ImageView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.GridView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.widget.GridView { int computeVerticalScrollRange(); }
-keepclassmembers class android.widget.GridView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.view.animation.AnimationSet { android.view.animation.AnimationSet clone(); }
-keepclassmembers class android.view.animation.AnimationSet { void setFlag(int,boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillAfter(boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillBefore(boolean); }
-keepclassmembers class android.widget.GridView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.animation.AnimationSet { void setRepeatMode(int); }
-keepclassmembers class android.view.animation.AnimationSet { void setStartOffset(long); }
-keepclassmembers class android.view.animation.AnimationSet { boolean hasAlpha(); }
-keepclassmembers class android.widget.ImageView { void setAlpha(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <clinit>(); }
-keepclassmembers class android.view.animation.AnimationSet { void setDuration(long); }
-keepclassmembers class android.widget.ImageView { boolean isOpaque(); }
-keepclassmembers class android.widget.ImageView { void applyColorMod(); }
-keepclassmembers class android.view.animation.AnimationSet { void setStartTime(long); }
-keepclassmembers class android.widget.ImageView { boolean isFilledByImage(); }
-keepclassmembers class okhttp3.HttpUrl { void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$2 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.view.animation.AnimationSet { long getStartTime(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void save(int,org.ccil.cowan.tagsoup.ScanHandler); }
-keepclassmembers class android.view.animation.AnimationSet { void addAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.animation.AnimationSet { long getDuration(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class okhttp3.HttpUrl { int decodeHexDigit(char); }
-keepclassmembers class android.support.v7.widget.ViewUtils { int combineMeasuredStates(int,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String getHexString(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { boolean isPrintableString(java.lang.String); }
-keepclassmembers class android.view.animation.AnimationSet { void initializeInvalidateRegion(int,int,int,int); }
-keepclassmembers class okhttp3.HttpUrl { void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List); }
-keepclassmembers class okhttp3.HttpUrl { void pathSegmentsToString(java.lang.StringBuilder,java.util.List); }
-keepclassmembers class android.view.animation.AnimationSet { boolean getTransformation(long,android.view.animation.Transformation); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { android.view.ViewGroup$HoverTarget obtain(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page { void freeMemory(); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String percentDecode(java.lang.String,int,int,boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void appendQEString(java.lang.StringBuilder); }
-keepclassmembers class okhttp3.HttpUrl { java.util.List percentDecode(java.util.List,boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String makeEscaped(java.lang.String); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void recycle(); }
-keepclassmembers class android.view.animation.AnimationSet { void initialize(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String makeCanonical(); }
-keepclassmembers class okhttp3.HttpUrl { void percentDecode(okio.Buffer,java.lang.String,int,int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page { java.util.ArrayList getVisibleSegments(); }
-keepclassmembers class okhttp3.HttpUrl { boolean percentEncoded(java.lang.String,int,int); }
-keepclassmembers class android.view.animation.AnimationSet { void restoreChildrenStartOffset(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page { void initValues(); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeTransformationMatrix(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String getRFC2253String(); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeBounds(); }
-keepclassmembers class okhttp3.HttpUrl { java.util.List queryStringToNamesAndValues(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedPassword(); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedFragment(); }
-keepclassmembers class okhttp3.HttpUrl { java.util.List encodedPathSegments(); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedPath(); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedQuery(); }
-keepclassmembers class android.system.OsConstants { boolean S_ISDIR(int); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedUsername(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$3 { int compare(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.system.OsConstants { boolean S_ISREG(int); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.io.InputStream getDirectoryListing(java.io.File); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void headers(boolean,int,int,java.util.List); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString); }
-keepclassmembers class java.net.AddressCache { java.lang.Object get(java.lang.String,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void settings(boolean,okhttp3.internal.http2.Settings); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void <clinit>(); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void windowUpdate(int,long); }
-keepclassmembers class android.widget.AbsSpinner { void onMeasure(int,int); }
-keepclassmembers class android.widget.AbsSpinner { void recycleAllViews(); }
-keepclassmembers class android.util.LruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.util.LruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsSpinner { android.view.View getSelectedView(); }
-keepclassmembers class android.util.LruCache { void trimToSize(int); }
-keepclassmembers class android.widget.AbsSpinner { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.ListView { int getMaxScrollAmount(); }
-keepclassmembers class android.widget.AbsSpinner { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.widget.ListView { void addHeaderView(android.view.View,java.lang.Object,boolean); }
-keepclassmembers class android.util.LruCache { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.widget.ListView { void adjustViewsUpOrDown(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperGingerbread { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.util.LruCache { java.lang.String toString(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperGingerbread { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(java.util.Collection); }
-keepclassmembers class android.widget.ListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.widget.ListView { void clearRecycledState(java.util.ArrayList); }
-keepclassmembers class android.widget.ListView { boolean showingBottomFadingEdge(); }
-keepclassmembers class android.widget.ListView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.widget.ListView { boolean showingTopFadingEdge(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void removeVisibleSpans(android.text.Spannable); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void constrainChildRect(android.support.design.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class android.widget.ListView { void fillGap(boolean); }
-keepclassmembers class android.support.v4.util.Pools$SimplePool { java.lang.Object acquire(); }
-keepclassmembers class android.support.v4.util.Pools$SimplePool { boolean release(java.lang.Object); }
-keepclassmembers class android.widget.ListView { android.view.View fillUp(int,int); }
-keepclassmembers class android.widget.ListView { android.view.View fillDown(int,int); }
-keepclassmembers class android.support.v4.util.Pools$SimplePool { boolean isInPool(java.lang.Object); }
-keepclassmembers class okhttp3.Headers { java.lang.String get(java.lang.String[],java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromTop(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,android.support.design.widget.CoordinatorLayout$LayoutParams,int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.widget.ListView { void fillAboveAndBelow(android.view.View,int); }
-keepclassmembers class java.util.EnumMap$EnumMapIterator { boolean hasNext(); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromMiddle(int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getMovementMetaState(android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromSelection(int,int,int); }
-keepclassmembers class okhttp3.Headers { okhttp3.Headers of(java.lang.String[]); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getTopSortedChildren(java.util.List); }
-keepclassmembers class android.widget.ListView { int getBottomSelectionPixel(int,int,int); }
-keepclassmembers class android.widget.ListView { int getTopSelectionPixel(int,int,int); }
-keepclassmembers class okhttp3.Headers { int size(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void layoutChild(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class org.acra.builder.ReportExecutor { void createNotification(java.io.File,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.widget.ListView { android.view.View moveSelection(android.view.View,android.view.View,int,int,int); }
-keepclassmembers class okhttp3.Headers { java.lang.String value(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void layoutChildWithKeyline(android.view.View,int,int); }
-keepclassmembers class okhttp3.Headers { java.util.List values(java.lang.String); }
-keepclassmembers class android.widget.ScrollView { float getTopFadingEdgeStrength(); }
-keepclassmembers class okhttp3.Headers { java.lang.String name(int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onMeasure(int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getBottomLine(android.widget.TextView); }
-keepclassmembers class android.widget.ScrollView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class android.view.WindowManagerGlobal { void changeCanvasOpacity(android.os.IBinder,boolean); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerHeight(android.widget.TextView); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerWidth(android.widget.TextView); }
-keepclassmembers class okhttp3.Headers { java.lang.String toString(); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsLeft(android.widget.TextView); }
-keepclassmembers class android.widget.ListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.util.Pools$SimplePool { java.lang.Object acquire(); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsRight(android.widget.TextView); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void offsetChildByInset(android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLeft(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.util.ArraySet { int indexOf(java.lang.Object,int); }
-keepclassmembers class android.widget.ListView { void onMeasure(int,int); }
-keepclassmembers class android.util.Pools$SimplePool { boolean release(java.lang.Object); }
-keepclassmembers class android.util.Pools$SimplePool { boolean isInPool(java.lang.Object); }
-keepclassmembers class android.widget.ScrollView { void onMeasure(int,int); }
-keepclassmembers class android.os.MessageQueue { void dispose(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollRight(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.os.MessageQueue { android.os.Message next(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.ListView { void measureScrapChild(android.view.View,int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollUp(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.util.ArraySet { int indexOfNull(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollDown(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onWindowSystemUiVisibilityChanged(int); }
-keepclassmembers class android.widget.ListView { int measureHeightOfChildren(int,int,int,int,int); }
-keepclassmembers class android.util.ArraySet { void allocArrays(int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.design.widget.CheckableImageButton { int[] onCreateDrawableState(int); }
-keepclassmembers class android.util.ArraySet { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class android.widget.ScrollView { boolean inChild(int,int); }
-keepclassmembers class android.database.DataSetObservable { void notifyChanged(); }
-keepclassmembers class android.widget.ListView { int findMotionRow(int); }
-keepclassmembers class android.widget.ScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.ListView { android.view.View fillSpecific(int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollBottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.widget.ListView { void correctTooLow(int); }
-keepclassmembers class android.database.DataSetObservable { void notifyInvalidated(); }
-keepclassmembers class android.widget.ListView { void correctTooHigh(int); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { int read(byte[],int,int); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { int available(); }
-keepclassmembers class android.util.ArraySet { boolean add(java.lang.Object); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean performIntercept(android.view.MotionEvent,int); }
-keepclassmembers class android.widget.ScrollView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.net.InterfaceAddress { short countPrefixLength(java.net.Inet4Address); }
-keepclassmembers class android.os.MessageQueue { boolean enqueueMessage(android.os.Message,long); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateVariant(java.lang.String); }
-keepclassmembers class android.util.ArraySet { void addAll(android.util.ArraySet); }
-keepclassmembers class android.widget.ScrollView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int resolveGravity(int); }
-keepclassmembers class java.net.InterfaceAddress { int hashCode(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void prepareChildren(); }
-keepclassmembers class android.widget.ScrollView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void setInsetOffsetY(android.view.View,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void resetTouchBehaviors(); }
-keepclassmembers class java.net.URI { void parseURI(java.lang.String,boolean); }
-keepclassmembers class android.widget.ScrollView { int getScrollRange(); }
-keepclassmembers class android.widget.ListView { void layoutChildren(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void setInsetOffsetX(android.view.View,int); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void init(android.view.ViewGroup,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void tickleInvalidationFlag(android.view.View); }
-keepclassmembers class java.net.URI { java.lang.String validateScheme(java.lang.String,int); }
-keepclassmembers class java.net.URI { void parseAuthority(boolean); }
-keepclassmembers class android.os.MessageQueue { void removeAllFutureMessagesLocked(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class java.net.URI { void validateUserInfo(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.net.URI { boolean isValidHost(boolean,java.lang.String); }
-keepclassmembers class java.util.Calendar { void clear(); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void addCommand(android.graphics.Path,float[],char,char,float[]); }
-keepclassmembers class android.widget.ScrollView { boolean isWithinDeltaOfScreen(android.view.View,int,int); }
-keepclassmembers class android.widget.ScrollView { void smoothScrollBy(int,int); }
-keepclassmembers class java.net.URI { boolean isValidDomainName(java.lang.String); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers); }
-keepclassmembers class android.widget.ScrollView { int computeVerticalScrollRange(); }
-keepclassmembers class java.util.AbstractSet { int hashCode(); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { void <init>(android.support.v4.util.MapCollections); }
-keepclassmembers class android.widget.ListView { boolean isDirectChildHeaderOrFooter(android.view.View); }
-keepclassmembers class android.widget.ScrollView { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.ScrollView { void computeScroll(); }
-keepclassmembers class java.util.Calendar { void setTimeInMillis(long); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void anonymize(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void clean(); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { java.util.Map$Entry next(); }
-keepclassmembers class android.widget.ScrollView { int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect); }
-keepclassmembers class com.android.internal.util.FastMath { int round(float); }
-keepclassmembers class java.io.StringReader { int read(); }
-keepclassmembers class android.widget.ListView { void setupChild(android.view.View,int,int,boolean,int,boolean,boolean); }
-keepclassmembers class android.widget.ScrollView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double); }
-keepclassmembers class java.io.StringReader { int read(char[],int,int); }
-keepclassmembers class android.content.pm.ActivityInfo { int activityInfoConfigToNative(int); }
-keepclassmembers class android.widget.ScrollView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.ListView { void setSelectionInt(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int getSuggestedMinimumWidth(); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void ensurePreDrawListener(); }
-keepclassmembers class android.widget.ScrollView { void fling(int); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionAfter(int,int,boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int getSuggestedMinimumHeight(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void offsetChildToAnchor(android.view.View,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.SubManga { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.widget.ScrollView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.ScrollView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean); }
-keepclassmembers class android.widget.ScrollView { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.ScrollView { int clamp(int,int,int); }
-keepclassmembers class android.widget.ScrollView { void scrollTo(int,int); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void nodesToPath(android.support.graphics.drawable.PathParser$PathDataNode[],android.graphics.Path); }
-keepclassmembers class android.widget.ListView { boolean commonKey(int,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { int getNextVisibleChildIndex(int); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { void setStacked(boolean); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { void onMeasure(int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$calcStorage { java.lang.Long doInBackground(java.lang.String[]); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$calcStorage { void onPostExecute(java.lang.Long); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onMeasure(int,int); }
-keepclassmembers class android.util.MathUtils { float constrain(float,float,float); }
-keepclassmembers class android.widget.ListView { boolean pageScroll(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onChildViewsChanged(int); }
-keepclassmembers class android.widget.ListView { boolean fullScroll(int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$calcStorage { void onPreExecute(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.util.MathUtils { float lerp(float,float,float); }
-keepclassmembers class android.widget.ListView { int nextSelectedPositionForDirection(android.view.View,int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter { void flattenPreferenceGroup(java.util.List,android.support.v7.preference.PreferenceGroup); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.widget.ListView { void handleNewSelectionChange(android.view.View,int,int,boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void startActivities(android.os.Bundle); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int applyAlpha(int,float); }
-keepclassmembers class android.widget.ListView { void measureAndAdjustDown(android.view.View,int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.ListView { void measureItem(android.view.View); }
-keepclassmembers class android.widget.ListView { int amountToScroll(int,int); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionOnScreen(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch$ScaleListener { boolean onScale(android.view.ScaleGestureDetector); }
-keepclassmembers class android.widget.ListView { void relayoutMeasuredItem(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.widget.ListView { android.widget.ListView$ArrowScrollFocusResult arrowScrollFocused(int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { boolean isConnected(android.net.ConnectivityManager,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { java.lang.String getPagesNumber(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.widget.ExpandableListView { long getPackedPositionForGroup(int); }
-keepclassmembers class android.widget.ListView { int positionOfNewFocus(android.view.View); }
-keepclassmembers class android.widget.ListView { int amountToScrollToNewFocus(int,android.view.View,int); }
-keepclassmembers class java.io.PrintWriter { void write(java.lang.String,int,int); }
-keepclassmembers class android.widget.ListView { int distanceToView(android.view.View); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.widget.ListView { void scrollListItemsBy(int); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.ListView { android.view.View addViewAbove(android.view.View,int); }
-keepclassmembers class java.util.ComparableTimSort { void <init>(java.lang.Object[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getChangingConfigurations(); }
-keepclassmembers class android.widget.ListView { android.view.View addViewBelow(android.view.View,int); }
-keepclassmembers class java.util.ComparableTimSort { void sort(java.lang.Object[],int,int); }
-keepclassmembers class android.widget.ListView { boolean isOpaque(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$6 { int compare(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class java.util.ComparableTimSort { void binarySort(java.lang.Object[],int,int,int); }
-keepclassmembers class android.widget.ListView { void setCacheColorHint(int); }
-keepclassmembers class android.widget.ListView { void drawOverscrollHeader(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect); }
-keepclassmembers class org.acra.builder.ReportExecutor$2 { void run(); }
-keepclassmembers class android.widget.ListView { void drawOverscrollFooter(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect); }
-keepclassmembers class java.util.ComparableTimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class java.util.ComparableTimSort { int minRunLength(int); }
-keepclassmembers class java.util.ComparableTimSort { int countRunAndMakeAscending(java.lang.Object[],int,int); }
-keepclassmembers class java.util.ComparableTimSort { void pushRun(int,int); }
-keepclassmembers class java.util.ComparableTimSort { void mergeForceCollapse(); }
-keepclassmembers class java.util.ComparableTimSort { void mergeCollapse(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator createStateListAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class java.util.ComparableTimSort { void mergeAt(int); }
-keepclassmembers class java.util.ComparableTimSort { int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean); }
-keepclassmembers class java.util.ComparableTimSort { int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class android.widget.ListView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.animation.AnimatorInflater { void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,float); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayName(java.util.Locale); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void findColumns(android.database.Cursor,java.lang.String[]); }
-keepclassmembers class java.util.ComparableTimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class android.widget.ListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean dismissPopupMenus(); }
-keepclassmembers class java.util.Locale { java.lang.String[] splitIllformedVariant(java.lang.String); }
-keepclassmembers class java.util.Locale { java.lang.String concatenateRange(java.lang.String[],int,int); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void updateSeed(byte[]); }
-keepclassmembers class java.util.ComparableTimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class java.util.Locale { int hashCode(); }
-keepclassmembers class android.widget.ListView { android.view.View findViewInHeadersOrFooters(java.util.ArrayList,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int binarySearch(int[],int,int); }
-keepclassmembers class java.util.ComparableTimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void engineNextBytes(byte[]); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int binarySearch(long[],int,long); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int idealByteArraySize(int); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateInHeadersOrFooters(java.util.ArrayList,com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int idealIntArraySize(int); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { int idealLongArraySize(int); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void <init>(android.content.Context,android.view.View,int,int,boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { android.view.MenuItem findMenuItemForSubmenu(android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int next(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { android.view.View findParentViewForSubmenu(android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class java.util.Locale { boolean isAsciiAlphaNum(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { int getNextMenuPosition(int); }
-keepclassmembers class java.util.Locale { boolean isValidBcp47Alpha(java.lang.String,int,int); }
-keepclassmembers class java.util.Locale { boolean isUnM49AreaCode(java.lang.String); }
-keepclassmembers class java.util.Locale { java.lang.String titleCaseAsciiWord(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void updateMenuView(boolean); }
-keepclassmembers class java.util.HashMap { void <init>(int,float); }
-keepclassmembers class java.util.HashMap { int capacityForInitSize(int); }
-keepclassmembers class com.fedorvlasov.lazylist.FileCache { void clearCache(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void showMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.util.HashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.HashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.HashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.HashMap { java.lang.Object putValueForNullKey(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.util.Locale { void parseUnicodeExtension(java.lang.String[],java.util.Map,java.util.Set); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void dismiss(); }
-keepclassmembers class java.util.HashMap { void constructorPut(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.Locale { java.lang.String joinBcp47Subtags(java.util.List); }
-keepclassmembers class rapid.decoder.frame.AspectRatioCalculator { float getHeight(float,float,float); }
-keepclassmembers class rapid.decoder.frame.AspectRatioCalculator { float getWidth(float,float,float); }
-keepclassmembers class java.util.ArrayDeque$DeqIterator { java.lang.Object next(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void close(); }
-keepclassmembers class java.util.ArrayDeque$DeqIterator { void remove(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.util.Locale { void extractVariantSubtags(java.lang.String[],int,int,java.util.List); }
-keepclassmembers class java.util.HashMap { void ensureCapacity(int); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { android.widget.ListView getListView(); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry[] doubleCapacity(); }
-keepclassmembers class java.util.Locale { int extractExtensions(java.lang.String[],int,int,java.util.Map); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { int indexOfLevel(int); }
-keepclassmembers class java.util.HashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry[] makeTable(int); }
-keepclassmembers class org.acra.collector.CrashReportDataFactory { org.acra.collector.CrashReportData createCrashData(org.acra.builder.ReportBuilder); }
-keepclassmembers class java.util.HashMap { java.lang.Object removeNullKey(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void onDismiss(); }
-keepclassmembers class java.util.HashMap { void clear(); }
-keepclassmembers class java.util.Locale { java.util.Locale forLanguageTag(java.lang.String,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask { java.lang.Void doInBackground(java.lang.String[]); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,int,int,boolean); }
-keepclassmembers class java.util.HashMap { boolean containsMapping(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.FragmentManagerImpl { void startPendingDeferredFragments(); }
-keepclassmembers class android.app.FragmentManagerImpl { void makeActive(android.app.Fragment); }
-keepclassmembers class libcore.util.ZoneInfo { libcore.util.ZoneInfo makeTimeZone(java.lang.String,libcore.io.BufferIterator); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.String toString(); }
-keepclassmembers class libcore.util.ZoneInfo { void <init>(java.lang.String,int[],byte[],int[],byte[]); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { android.util.PathParser$PathDataNode[] evaluate(float,android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[]); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$412(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$312(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffset(int,int,int,int,int,int); }
-keepclassmembers class android.support.v4.util.LruCache { void trimToSize(int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$120(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$212(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffset(long); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$220(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class libcore.util.ZoneInfo { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class android.view.animation.LayoutAnimationController { boolean willOverlap(); }
-keepclassmembers class libcore.util.ZoneInfo { int hashCode(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { android.view.animation.Animation getAnimationForView(android.view.View); }
-keepclassmembers class android.view.animation.LayoutAnimationController { boolean isDone(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$112(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void nextFrame(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void init(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.animation.LayoutAnimationController { int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters); }
-keepclassmembers class okhttp3.Headers$Builder { void checkNameAndValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.animation.LayoutAnimationController { long getDelayForView(android.view.View); }
-keepclassmembers class android.os.Build { void <clinit>(); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder removeAll(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getChangingConfigurations(); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder addLenient(java.lang.String); }
-keepclassmembers class android.app.FragmentManagerImpl { void setBackStackIndex(int,android.app.BackStackRecord); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { int hashCode(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesCount(int); }
-keepclassmembers class android.app.FragmentManagerImpl { void reportBackStackChanged(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { long createCacheKey(android.util.TypedValue); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean execPendingActions(); }
-keepclassmembers class java.net.ProxySelectorImpl { boolean isNonProxyHost(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean arrayContains(int[],int); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void writeContinuationFrames(int,long); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void writeMedium(okio.BufferedSink,int); }
-keepclassmembers class android.support.v7.widget.DropDownListView { void clearPressedItem(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass createClassDesc(java.lang.Class); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean popBackStackState(android.os.Handler,java.lang.String,int,int); }
-keepclassmembers class java.io.ObjectStreamClass { void buildFieldDescriptors(java.lang.reflect.Field[]); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void frameHeader(int,int,byte,byte); }
-keepclassmembers class android.support.v7.widget.DropDownListView { void setPressedItem(android.view.View,int,float,float); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean onForwardedEvent(android.view.MotionEvent,int); }
-keepclassmembers class java.io.ObjectStreamClass { long computeSerialVersionUID(java.lang.Class,java.lang.reflect.Field[]); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void pushPromise(int,int,java.util.List); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void headers(boolean,int,java.util.List); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void goAway(int,okhttp3.internal.http2.ErrorCode,byte[]); }
-keepclassmembers class android.app.FragmentManagerImpl { android.os.Parcelable saveAllState(); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.File,boolean); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void settings(okhttp3.internal.http2.Settings); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class resolveConstructorClass(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int combineMeasuredStates(int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean canScrollingViewScrollHorizontally(android.support.v4.view.ScrollingView,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField getField(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean canScrollingViewScrollVertically(android.support.v4.view.ScrollingView,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void windowUpdate(int,long); }
-keepclassmembers class java.io.ObjectStreamClass { void copyFieldAttributes(); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { void <init>(long,okhttp3.Request,okhttp3.Response); }
-keepclassmembers class android.app.FragmentManagerImpl { void restoreAllState(android.os.Parcelable,java.util.ArrayList); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { long cacheResponseAge(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { long computeFreshnessLifetime(); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { okhttp3.internal.cache.CacheStrategy getCandidate(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getZ(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.Certificate[] verifySignature(java.io.InputStream,java.io.InputStream); }
-keepclassmembers class android.widget.OverScroller { float getCurrVelocity(); }
-keepclassmembers class android.widget.OverScroller { boolean computeScrollOffset(); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20 { void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void bumpBackStackNesting(int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class checkAndGetTcObjectClass(); }
-keepclassmembers class android.transition.TransitionValues { int hashCode(); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.X509Certificate[] createChain(java.security.cert.X509Certificate,java.security.cert.X509Certificate[]); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { int getMeasuredHeightWithMargins(android.view.View); }
-keepclassmembers class java.io.FileInputStream { long skip(long); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.X509Certificate findCert(java.security.Principal,java.security.cert.X509Certificate[]); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTransition(android.transition.Transition); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPagerVertical { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setDuration(long); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.util.regex.Pattern { void compile(); }
-keepclassmembers class java.util.regex.Pattern { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void dump(java.lang.String,java.io.PrintWriter,boolean); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPagerVertical { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String quote(java.lang.String); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void executePopOps(boolean); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void executeOps(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onMeasure(int,int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet removeTarget(android.view.View); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(android.view.View,boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$3 { void run(); }
-keepclassmembers class rapid.decoder.BitmapTransformer { android.graphics.Bitmap decode(); }
-keepclassmembers class android.transition.TransitionSet { void forceVisibility(int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void expandReplaceOps(java.util.ArrayList); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.support.v4.app.BackStackRecord { boolean interactsWith(java.util.ArrayList,int,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { boolean shouldRecreateOnNightModeChange(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { boolean interactsWith(int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { boolean updateForNightMode(int); }
-keepclassmembers class rapid.decoder.BitmapTransformer { int hashCode(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { boolean isPostponed(); }
-keepclassmembers class android.transition.TransitionSet { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter$MenuAdapter { int getCount(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter$MenuAdapter { void findExpandedIndex(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void setOnStartPostponedListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$2 { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class android.widget.NumberPicker$AccessibilityNodeProviderImpl { java.lang.String getVirtualDecrementButtonText(); }
-keepclassmembers class android.transition.TransitionSet { void setEpicenterCallback(android.transition.Transition$EpicenterCallback); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void trackAddedFragmentsInPop(java.util.ArrayList); }
-keepclassmembers class android.transition.TransitionSet { java.lang.String toString(java.lang.String); }
-keepclassmembers class android.widget.NumberPicker$AccessibilityNodeProviderImpl { java.lang.String getVirtualIncrementButtonText(); }
-keepclassmembers class okhttp3.MediaType { okhttp3.MediaType parse(java.lang.String); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { int hashCode(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet clone(); }
-keepclassmembers class java.math.BigDecimal { void <init>(double); }
-keepclassmembers class java.math.BigDecimal { void <init>(char[],int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { int access$608(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long,int); }
-keepclassmembers class android.support.v4.widget.ListViewCompatGingerbread { void scrollListBy(android.widget.ListView,int); }
-keepclassmembers class java.lang.Object { int hashCode(); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase$CreateGroupByMangaNotificationsTask { java.lang.Integer doInBackground(java.lang.Void[]); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { boolean isFallbackPossible(javax.net.ssl.SSLSocket); }
-keepclassmembers class android.support.v7.widget.ScrollbarHelper { int computeScrollExtent(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toLowerCase(java.util.Locale,java.lang.String,char[],int,int); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket); }
-keepclassmembers class java.lang.CaseMapper { boolean isFinalSigma(char[],int,int,int); }
-keepclassmembers class android.support.v7.widget.ScrollbarHelper { int computeScrollOffset(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean,boolean); }
-keepclassmembers class java.lang.CaseMapper { int upperIndex(int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetterAndGetter(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ScrollbarHelper { int computeScrollRange(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.OrientationHelper,android.view.View,android.view.View,android.support.v7.widget.RecyclerView$LayoutManager,boolean); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toUpperCase(java.util.Locale,java.lang.String,char[],int,int); }
-keepclassmembers class okio.InflaterSource { void releaseInflatedBytes(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupEndValue(java.lang.Object); }
-keepclassmembers class okio.InflaterSource { long read(okio.Buffer,long); }
-keepclassmembers class okio.InflaterSource { boolean refill(); }
-keepclassmembers class android.content.ClipData { void prepareToLeaveProcess(); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi24$Builder { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.lang.String,java.util.ArrayList,android.os.Bundle,int,int,android.app.Notification,java.lang.String,boolean,java.lang.String,java.lang.CharSequence[],android.widget.RemoteViews,android.widget.RemoteViews,android.widget.RemoteViews); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isAbstract(int); }
-keepclassmembers class android.content.ClipData { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isFinal(int); }
-keepclassmembers class android.content.ClipData { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isInterface(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isNative(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isPrivate(int); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi24$Builder { void addAction(android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { int hashCode(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isProtected(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isStatic(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isPublic(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isStrict(int); }
-keepclassmembers class android.app.Application { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isSynchronized(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isVolatile(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isTransient(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isConstructor(int); }
-keepclassmembers class android.app.Application { void onLowMemory(); }
-keepclassmembers class android.app.Application { void onTrimMemory(int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { float getValueAt(long); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { float interpolateValue(float); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void computeScrollDelta(); }
-keepclassmembers class java.lang.reflect.Modifier { java.lang.String toString(int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { int getHorizontalDirection(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { int getVerticalDirection(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void requestStop(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { boolean isFinished(); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] fastSplit(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getDecoratedMeasurement(android.view.View); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getDecoratedEnd(android.view.View); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] split(java.util.regex.Pattern,java.lang.String,java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getDecoratedMeasurementInOther(android.view.View); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] finishSplit(java.util.List,java.lang.String,int,int); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { android.view.MotionEvent$PointerCoords[] createArray(int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getDecoratedStart(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { int access$3108(ar.rulosoft.mimanganu.MangaFragment$ResetChapters); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getEndAfterPadding(); }
-keepclassmembers class java.math.BigDecimal { boolean isZero(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getTotalSpace(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean); }
-keepclassmembers class java.math.BigDecimal { int precision(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findFirstVisibleChildClosestToStart(boolean,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { java.lang.Integer doInBackground(java.lang.Void[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findLastPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addTransition(int,int,android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findLastReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.math.BigDecimal { int decimalDigitsInLong(long); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean transitionHasReversibleFlag(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean isTransitionReversed(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { long generateTransitionKey(int,int); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal movePoint(long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int fixLayoutEndGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View getChildClosestToEnd(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int fixLayoutStartGap(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View getChildClosestToStart(); }
-keepclassmembers class java.security.MessageDigest { void update(byte[],int,int); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal movePointRight(int); }
-keepclassmembers class android.support.design.internal.BaselineLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class android.support.design.internal.BaselineLayout { void onMeasure(int,int); }
-keepclassmembers class java.security.MessageDigest { boolean isEqual(byte[],byte[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void layoutForPredictiveAnimations(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { boolean isChecked(); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { java.lang.Object next(); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { void remove(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void recycleChildren(android.support.v7.widget.RecyclerView$Recycler,int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getDecoratedEnd(android.view.View); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { android.view.MenuItem setChecked(boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void recycleViewsFromEnd(android.support.v7.widget.RecyclerView$Recycler,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getDecoratedMeasurement(android.view.View); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getDecoratedMeasurementInOther(android.view.View); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getEndAfterPadding(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getDecoratedStart(android.view.View); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getTotalSpace(); }
-keepclassmembers class android.app.ActivityManager { int getLauncherLargeIconSizeInner(android.content.Context); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void readItem(android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void recycleViewsFromStart(android.support.v7.widget.RecyclerView$Recycler,int); }
-keepclassmembers class java.math.BigDecimal { void inplaceRound(java.math.MathContext); }
-keepclassmembers class java.math.BigDecimal { double doubleValue(); }
-keepclassmembers class java.math.BigDecimal { void smallRound(java.math.MathContext,int); }
-keepclassmembers class java.math.BigDecimal { int longCompareTo(long,long); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String getReplacement(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class java.math.BigDecimal { int roundingBehavior(int,int,java.math.RoundingMode); }
-keepclassmembers class java.net.InetSocketAddress { int hashCode(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal zeroScaledBy(long); }
-keepclassmembers class java.math.BigDecimal { int approxPrecision(); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex { int hashCode(); }
-keepclassmembers class java.math.BigDecimal { int safeLongToInt(long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean updateAnchorFromPendingData(android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo); }
-keepclassmembers class java.math.BigDecimal { int bitLength(int); }
-keepclassmembers class java.math.BigDecimal { int bitLength(long); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class rapid.decoder.BitmapDecoder { int height(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.math.BigDecimal { void <clinit>(); }
-keepclassmembers class rapid.decoder.BitmapDecoder { rapid.decoder.BitmapDecoder region(int,int,int,int); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateAnchorInfoForLayout(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.view.View { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddAllMangaInDirectoryTask { java.lang.Void doInBackground(java.lang.String[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateLayoutState(int,int,boolean,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.view.DragEvent { void recycle(); }
-keepclassmembers class rapid.decoder.BitmapDecoder { void resolveCrafts(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateLayoutStateToFillEnd(int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateLayoutStateToFillStart(int,int); }
-keepclassmembers class android.os.AsyncTask { void <clinit>(); }
-keepclassmembers class rapid.decoder.BitmapDecoder { rapid.decoder.BitmapDecoder scaleBy(float,float); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class rapid.decoder.BitmapDecoder { int width(); }
-keepclassmembers class java.lang.Character { int compare(char,char); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int next(int,int,boolean); }
-keepclassmembers class java.lang.Character { int toCodePoint(char,char); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int measureChildView(android.view.View,int,int,int); }
-keepclassmembers class java.lang.Character { int codePointAt(java.lang.CharSequence,int); }
-keepclassmembers class java.lang.Character { int codePointAt(char[],int); }
-keepclassmembers class java.lang.Character { int codePointAt(char[],int,int); }
-keepclassmembers class android.view.MenuInflater$MenuState { void readItem(android.util.AttributeSet); }
-keepclassmembers class java.lang.Character { int codePointBefore(java.lang.CharSequence,int); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { int positionChild(android.view.View,int,int,int,boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int fill(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.RecyclerView$State,boolean); }
-keepclassmembers class java.lang.Character { int codePointBefore(char[],int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$1 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { int buildDropDown(); }
-keepclassmembers class java.lang.Character { char[] toChars(int); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void runOrPost(int); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int read(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void onNewIntent(android.content.Intent); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int read(byte[],int,int); }
-keepclassmembers class java.lang.Character { int getType(int); }
-keepclassmembers class java.lang.Character { int digit(int,int); }
-keepclassmembers class java.io.BufferedInputStream { int available(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findViewByPosition(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int); }
-keepclassmembers class java.util.LinkedList$LinkIterator { void <init>(java.util.LinkedList,int); }
-keepclassmembers class android.support.v4.app.RemoteInputCompatJellybean { android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]); }
-keepclassmembers class java.io.BufferedInputStream { int fillbuf(java.io.InputStream,byte[]); }
-keepclassmembers class java.net.URLStreamHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void addBytesToWriteWindow(long); }
-keepclassmembers class java.io.BufferedInputStream { int read(); }
-keepclassmembers class java.util.LinkedList$LinkIterator { java.lang.Object next(); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierPart(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setContentWidth(int); }
-keepclassmembers class java.io.BufferedInputStream { int read(byte[],int,int); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String relativePath(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { boolean isLocallyInitiated(); }
-keepclassmembers class java.io.BufferedInputStream { long skip(long); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void updateTextButtonVisibility(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean onLongClick(android.view.View); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.lang.Character { int toLowerCase(int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onMeasure(int,int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String convertInt(java.lang.AbstractStringBuilder,int); }
-keepclassmembers class java.lang.Character { int toUpperCase(int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String convertLong(java.lang.AbstractStringBuilder,long); }
-keepclassmembers class java.lang.Character { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.IntegralToString { int intIntoCharArray(char[],int,int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToBinaryString(long); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToBinaryString(int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToHexString(int,boolean,int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String byteToHexString(byte,boolean); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToHexString(long); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToOctalString(int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToOctalString(long); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean action(int,android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.graphics.Region { void <init>(long); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void createNotification(android.content.Context,boolean,int,android.content.Intent,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int scrollBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class java.lang.Math { double abs(double); }
-keepclassmembers class android.text.util.Linkify$1 { boolean acceptMatch(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.Math { float abs(float); }
-keepclassmembers class java.lang.Math { long abs(long); }
-keepclassmembers class java.lang.Math { double max(double,double); }
-keepclassmembers class java.lang.Math { float max(float,float); }
-keepclassmembers class java.lang.Math { long max(long,long); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeChoice(org.apache.harmony.security.asn1.ASN1Choice); }
-keepclassmembers class java.lang.Math { double min(double,double); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeExplicit(org.apache.harmony.security.asn1.ASN1Explicit); }
-keepclassmembers class java.lang.Math { long min(long,long); }
-keepclassmembers class java.lang.Math { float min(float,float); }
-keepclassmembers class java.lang.Math { long round(double); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void createSearchingForUpdatesNotification(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class java.lang.Math { float signum(float); }
-keepclassmembers class java.lang.Math { int round(float); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class android.text.method.LinkMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class java.lang.Math { double toRadians(double); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void deleteEmptyDirectoriesRecursive(java.io.File); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void push(int[],java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void deleteRecursive(java.io.File); }
-keepclassmembers class android.view.View { void saveAttributeData(android.util.AttributeSet,android.content.res.TypedArray); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { java.util.ArrayList dirList(java.lang.String); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplBase { int getAbsoluteGravity(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { long dirSize(java.io.File); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndIncrement(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndDecrement(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { int getGridColumnSizeFromWidth(android.app.Activity); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndAdd(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int incrementAndGet(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { java.lang.String getLastStringInPath(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSequenceLength(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int decrementAndGet(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { java.lang.String getLastStringInPathDontRemoveLastChar(java.lang.String); }
-keepclassmembers class android.view.View { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { java.util.ArrayList imageList(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getValueOfLength(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(int[],int,int); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(long[],int,long); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void removeAllCookies(android.content.Context); }
-keepclassmembers class java.io.DataOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.io.DataOutputStream { void writeBoolean(boolean); }
-keepclassmembers class java.io.DataOutputStream { void writeByte(int); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.io.DataOutputStream { void writeInt(int); }
-keepclassmembers class java.io.DataOutputStream { void writeLong(long); }
-keepclassmembers class org.acra.collector.StacktraceCollector { java.lang.String getStackTraceHash(java.lang.Throwable); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void removeSpecificCookies(android.content.Context,java.lang.String); }
-keepclassmembers class java.io.DataOutputStream { void writeShort(int); }
-keepclassmembers class android.support.v7.widget.ViewBoundsCheck$BoundFlags { boolean boundsMatch(); }
-keepclassmembers class android.support.v7.widget.ViewBoundsCheck$BoundFlags { void addFlags(int); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doDestroy(); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doReportNextStart(); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { int lengthWithoutPadding(int,byte,short); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doReportStart(); }
-keepclassmembers class android.view.View { boolean performButtonActionOnTouchDown(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doRetain(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { java.lang.String toCamelCase(java.lang.String); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doStart(); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void doStop(); }
-keepclassmembers class android.view.View { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void onConfigurationChange(int); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void onConfigurationChangeInt(android.util.LongSparseArray,int); }
-keepclassmembers class android.support.v4.app.NotificationCompatKitKat$Builder { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String,android.widget.RemoteViews,android.widget.RemoteViews); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { int readMedium(okio.BufferedSource); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void readData(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int); }
-keepclassmembers class libcore.io.NioBufferIterator { void skip(int); }
-keepclassmembers class android.view.View { void clearFocusInternal(android.view.View,boolean,boolean); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setupColorAnimator(android.animation.Animator); }
-keepclassmembers class libcore.io.NioBufferIterator { void readByteArray(byte[],int,int); }
-keepclassmembers class libcore.io.NioBufferIterator { byte readByte(); }
-keepclassmembers class libcore.io.NioBufferIterator { int readInt(); }
-keepclassmembers class libcore.io.NioBufferIterator { void readIntArray(int[],int,int); }
-keepclassmembers class android.view.View { boolean hasFocus(); }
-keepclassmembers class android.view.View { boolean hasFocusable(); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getChangingConfigurations(); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { boolean hasRunningLoaders(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getChildMeasureSpec(int,int,int,int,boolean); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int[] getChildRectangleOnScreenScrollAmount(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler); }
-keepclassmembers class android.view.View { void getBoundsOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean isFocusedChildVisibleAfterScrolling(android.support.v7.widget.RecyclerView,int,int); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class okhttp3.ConnectionSpec { int hashCode(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(android.graphics.Rect); }
-keepclassmembers class android.view.View { int getAccessibilityViewId(); }
-keepclassmembers class java.lang.ProcessBuilder { java.lang.Process start(); }
-keepclassmembers class android.view.View { void resetPressedState(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void detachAndScrapAttachedViews(android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.view.View { boolean isFocused(); }
-keepclassmembers class android.view.View { void setScrollContainer(boolean); }
-keepclassmembers class android.view.View { android.view.View findFocus(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { android.view.View findViewByPosition(int); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void ensureTarget(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void finishSpinner(float); }
-keepclassmembers class android.support.v4.app.NotificationCompatIceCreamSandwich$Builder { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec { java.util.List http2HeadersList(okhttp3.Request); }
-keepclassmembers class android.view.View { boolean isShown(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void moveSpinner(float); }
-keepclassmembers class android.view.View { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedBottom(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedLeft(android.view.View); }
-keepclassmembers class android.view.View { boolean fitSystemWindowsInt(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedMeasuredWidth(android.view.View); }
-keepclassmembers class android.view.View { android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedMeasuredHeight(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedRight(android.view.View); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec { okhttp3.Response$Builder readHttp2HeadersList(java.util.List); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getDecoratedTop(android.view.View); }
-keepclassmembers class android.view.View { android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class android.view.View { boolean computeFitSystemWindows(android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.view.View { boolean getFitsSystemWindows(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void startDragging(float); }
-keepclassmembers class android.view.View { boolean isEnabled(); }
-keepclassmembers class android.view.View { int getVisibility(); }
-keepclassmembers class android.view.View { boolean isSoundEffectsEnabled(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect); }
-keepclassmembers class android.view.View { boolean isHapticFeedbackEnabled(); }
-keepclassmembers class android.view.View { int getRawLayoutDirection(); }
-keepclassmembers class android.os.Parcel { android.os.Parcel obtain(); }
-keepclassmembers class android.view.View { int getLayoutDirection(); }
-keepclassmembers class android.view.View { void setLayoutDirection(int); }
-keepclassmembers class android.view.View { boolean hasTransientState(); }
-keepclassmembers class android.view.View { void setHasTransientState(boolean); }
-keepclassmembers class android.os.Parcel { void recycle(); }
-keepclassmembers class android.view.View { boolean isLaidOut(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean hasFlexibleChildInBothOrientations(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.view.View { boolean isClickable(); }
-keepclassmembers class android.view.View { void setPressed(boolean); }
-keepclassmembers class android.view.View { boolean isLongClickable(); }
-keepclassmembers class android.view.View { boolean isPressed(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void layoutDecoratedWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class android.os.Parcel { void writeArrayMapInternal(android.util.ArrayMap); }
-keepclassmembers class android.view.View { boolean isFocusable(); }
-keepclassmembers class android.view.View { boolean isFocusableInTouchMode(); }
-keepclassmembers class android.os.Parcel { void writeList(java.util.List); }
-keepclassmembers class android.os.Parcel { void writeArray(java.lang.Object[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean adjustNsp(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void measureChildWithMargins(android.view.View,int,int); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.os.Parcel { void writeSparseArray(android.util.SparseArray); }
-keepclassmembers class android.os.Parcel { void writeSparseBooleanArray(android.util.SparseBooleanArray); }
-keepclassmembers class android.os.Parcel { void writeBooleanArray(boolean[]); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.os.Parcel { boolean[] createBooleanArray(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void onMeasure(int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String[] ensureCapacity(java.lang.String[],int); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocused(); }
-keepclassmembers class android.view.View { boolean requestAccessibilityFocus(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(boolean); }
-keepclassmembers class android.os.Parcel { int[] createIntArray(); }
-keepclassmembers class android.view.View { void clearAccessibilityFocusNoCallbacks(); }
-keepclassmembers class android.os.Parcel { void writeIntArray(int[]); }
-keepclassmembers class android.os.Parcel { void writeLongArray(long[]); }
-keepclassmembers class android.view.View { boolean requestFocusNoSearch(int,android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.os.Parcel { long[] createLongArray(); }
-keepclassmembers class android.view.View { int getImportantForAccessibility(); }
-keepclassmembers class android.view.View { void setAccessibilityLiveRegion(int); }
-keepclassmembers class android.view.View { int getAccessibilityLiveRegion(); }
-keepclassmembers class android.os.Parcel { float[] createFloatArray(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readUntil(char[],boolean); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.view.View { boolean isImportantForAccessibility(); }
-keepclassmembers class android.view.View { void setImportantForAccessibility(int); }
-keepclassmembers class android.os.Parcel { void writeStringArray(java.lang.String[]); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.view.View { boolean includeForAccessibility(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readXmlDeclaration(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.os.Parcel { void writeCharSequenceArray(java.lang.CharSequence[]); }
-keepclassmembers class android.view.View { void notifySubtreeAccessibilityStateChangedIfNeeded(); }
-keepclassmembers class android.view.View { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.FloatKeyframeSet clone(); }
-keepclassmembers class android.os.Parcel { void writeStringList(java.util.List); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.os.Parcel { void writeTypedArray(android.os.Parcelable[],int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readQuotedId(boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readInternalSubset(); }
-keepclassmembers class android.animation.FloatKeyframeSet { float getFloatValue(float); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readContentSpec(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readAttributeListDeclaration(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void reset(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void setAnimationProgress(float); }
-keepclassmembers class java.net.Socks4Message { int getLength(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void connectTunnel(int,int,int); }
-keepclassmembers class java.net.Socks4Message { void setString(int,int,java.lang.String); }
-keepclassmembers class android.view.View { void onStartTemporaryDetach(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readComment(boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntityDeclaration(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void setRefreshing(boolean); }
-keepclassmembers class android.view.View { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void removeAndRecycleAllViews(android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEndTag(); }
-keepclassmembers class android.view.View { boolean onFilterTouchEventForSecurity(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void removeAndRecycleScrapInt(android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekType(boolean); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEventInternal(android.view.MotionEvent); }
-keepclassmembers class android.os.Parcel { byte readByte(); }
-keepclassmembers class android.os.Parcel { java.lang.String[] readStringArray(); }
-keepclassmembers class android.view.View { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.security.cert.Certificate { int hashCode(); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence[] readCharSequenceArray(); }
-keepclassmembers class android.util.StateSet { boolean stateSetMatches(int[],int[]); }
-keepclassmembers class android.view.View { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.view.View { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NotificationDeleteIntentReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.view.View { void getWindowVisibleDisplayFrame(android.graphics.Rect); }
-keepclassmembers class org.kxml2.io.KXmlParser { void parseStartTag(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.view.View { void performCollectViewAttributes(android.view.View$AttachInfo,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setMeasuredDimension(android.graphics.Rect,int,int); }
-keepclassmembers class android.os.Parcel { java.lang.Object[] createTypedArray(android.os.Parcelable$Creator); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.view.View { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class okhttp3.internal.http2.Http2 { void <clinit>(); }
-keepclassmembers class android.view.View { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflateLayers(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.os.Parcel { void writeParcelableArray(android.os.Parcelable[],int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { int getCurrentPage(); }
-keepclassmembers class okio.RealBufferedSource$1 { int read(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setMeasuredDimensionFromChildren(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { void goToPage(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntity(java.lang.StringBuilder,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable,android.content.res.TypedArray); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { boolean isLastPageVisible(); }
-keepclassmembers class android.os.Parcel { java.lang.Object readValue(java.lang.ClassLoader); }
-keepclassmembers class android.view.View { boolean isHoverable(); }
-keepclassmembers class android.view.View { void setHovered(boolean); }
-keepclassmembers class okhttp3.internal.http2.Http2 { java.lang.String formatFlags(byte,byte); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { boolean onSingleTapConfirmed(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isProjected(); }
-keepclassmembers class org.json.JSONTokener { java.lang.Object nextValue(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class org.json.JSONTokener { int nextCleanInternal(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { int transformPage(int); }
-keepclassmembers class org.json.JSONTokener { void skipToEndOfLine(); }
-keepclassmembers class org.json.JSONTokener { java.lang.String nextString(char); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable findDrawableByLayerId(int); }
-keepclassmembers class java.lang.ProcessManager { java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File,boolean); }
-keepclassmembers class android.view.View { void removeUnsetPressCallback(); }
-keepclassmembers class org.json.JSONTokener { char readEscapeCharacter(); }
-keepclassmembers class android.view.View { void removeTapCallback(); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader); }
-keepclassmembers class org.json.JSONTokener { java.lang.Object readLiteral(); }
-keepclassmembers class android.view.View { void setFlags(int,int); }
-keepclassmembers class org.json.JSONTokener { org.json.JSONObject readObject(); }
-keepclassmembers class android.os.Parcel { void init(long); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readValue(char,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class android.os.Parcel { void readMapInternal(java.util.Map,int,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.os.Parcel { void readArrayMapInternal(android.util.ArrayMap,int,java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { void readListInternal(java.util.List,int,java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void addSharedElementsWithMatchingNames(java.util.ArrayList,android.support.v4.util.ArrayMap,java.util.Collection); }
-keepclassmembers class android.os.Parcel { void readArrayInternal(java.lang.Object[],int,java.lang.ClassLoader); }
-keepclassmembers class android.view.View { int getWidth(); }
-keepclassmembers class org.json.JSONTokener { java.lang.String nextToInternal(java.lang.String); }
-keepclassmembers class android.os.Parcel { void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader); }
-keepclassmembers class org.json.JSONTokener { org.json.JSONArray readArray(); }
-keepclassmembers class android.view.View { void getDrawingRect(android.graphics.Rect); }
-keepclassmembers class android.view.View { int getHeight(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeNestedPadding(android.graphics.Rect); }
-keepclassmembers class android.view.View { int getMeasuredWidth(); }
-keepclassmembers class android.view.View { int getMeasuredHeight(); }
-keepclassmembers class android.os.Parcel { void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi24 { void addMessagingStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,java.lang.CharSequence,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeStackedPadding(android.graphics.Rect); }
-keepclassmembers class android.view.View { void setRotation(float); }
-keepclassmembers class android.view.View { int getMeasuredState(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.view.View { void setRotationY(float); }
-keepclassmembers class android.view.View { void setRotationX(float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void addToFirstInLastOut(android.support.v4.app.BackStackRecord,android.support.v4.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean); }
-keepclassmembers class android.view.View { void setScaleX(float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.text.Selection { boolean moveUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.view.View { void setScaleY(float); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char[]); }
-keepclassmembers class android.view.View { void setPivotX(float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAlpha(int); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void calculateFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean fillBuffer(int); }
-keepclassmembers class android.view.View { void setPivotY(float); }
-keepclassmembers class android.text.Selection { boolean moveDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.text.Selection { boolean extendUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.text.Selection { boolean extendDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.view.View { void setAlpha(float); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.support.v4.util.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void calculatePopFragments(android.support.v4.app.BackStackRecord,android.util.SparseArray,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onStateChange(int[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readName(); }
-keepclassmembers class android.view.View { void setTransitionAlpha(float); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void callSharedElementStartEnd(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,boolean); }
-keepclassmembers class android.view.View { float getFinalAlpha(); }
-keepclassmembers class android.view.View { void setTop(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void skip(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.support.v4.util.ArrayMap captureInSharedElements(android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition); }
-keepclassmembers class android.view.View { void setBottom(int); }
-keepclassmembers class android.text.Selection { int findEdge(android.text.Spannable,android.text.Layout,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.view.View { void setLeft(int); }
-keepclassmembers class android.text.Selection { int chooseHorizontal(android.text.Layout,int,int,int); }
-keepclassmembers class android.view.View { void setRight(int); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.support.v4.util.ArrayMap captureOutSharedElements(android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.view.View { float getY(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.view.View { void setTranslationY(float); }
-keepclassmembers class android.view.View { void setElevation(float); }
-keepclassmembers class android.view.View { float getZ(); }
-keepclassmembers class android.view.View { void setTranslationX(float); }
-keepclassmembers class android.view.View { void setTranslationZ(float); }
-keepclassmembers class android.database.sqlite.SQLiteDebug { boolean shouldLogSlowQuery(long); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.view.View { void getHitRect(android.graphics.Rect); }
-keepclassmembers class libcore.io.IoUtils { void setBlocking(java.io.FileDescriptor,boolean); }
-keepclassmembers class android.view.View { boolean pointInView(float,float,float); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(java.lang.String); }
-keepclassmembers class android.view.View { void offsetLeftAndRight(int); }
-keepclassmembers class android.view.View { boolean pointInView(float,float); }
-keepclassmembers class android.view.View { void scrollBy(int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getPositionDescription(); }
-keepclassmembers class android.view.View { boolean initialAwakenScrollBars(); }
-keepclassmembers class android.view.View { void offsetTopAndBottom(int); }
-keepclassmembers class libcore.util.CollectionUtils { void removeDuplicates(java.util.List,java.util.Comparator); }
-keepclassmembers class java.util.EnumMap$EnumMapEntryIterator { java.lang.Object next(); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int,boolean); }
-keepclassmembers class android.view.View { boolean skipInvalidate(); }
-keepclassmembers class android.view.View { void invalidate(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { void invalidate(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getColumnNumber(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { int hashCode(); }
-keepclassmembers class android.view.View { void invalidateInternal(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.view.View { void invalidate(android.graphics.Rect); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getLineNumber(); }
-keepclassmembers class android.view.View { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class android.view.View { void invalidateParentCaches(); }
-keepclassmembers class android.view.View { void invalidateParentIfNeededAndWasQuickRejected(); }
-keepclassmembers class android.view.View { boolean isOpaque(); }
-keepclassmembers class android.view.View { void damageInParent(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void release(); }
-keepclassmembers class android.view.View { boolean hasOpaqueScrollbars(); }
-keepclassmembers class android.view.View { void computeOpaqueFlags(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.String findKeyForValue(android.support.v4.util.ArrayMap,java.lang.String); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void addMessagingFallBackStyle(android.support.v4.app.NotificationCompat$MessagingStyle,android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.view.View { boolean isHorizontalFadingEdgeEnabled(); }
-keepclassmembers class android.view.View { void setHorizontalFadingEdgeEnabled(boolean); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { void setVerticalFadingEdgeEnabled(boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void retainValues(android.support.v4.util.ArrayMap,android.support.v4.util.ArrayMap); }
-keepclassmembers class android.view.View { float getRightFadingEdgeStrength(); }
-keepclassmembers class android.view.View { boolean isHorizontalScrollBarEnabled(); }
-keepclassmembers class android.view.View { boolean isVerticalFadingEdgeEnabled(); }
-keepclassmembers class android.view.View { float getBottomFadingEdgeStrength(); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarEnabled(); }
-keepclassmembers class android.util.Size { int hashCode(); }
-keepclassmembers class android.view.View { int getScrollBarStyle(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void startTransitions(android.support.v4.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean); }
-keepclassmembers class android.view.View { boolean canScrollVertically(int); }
-keepclassmembers class android.support.v7.app.NotificationCompat { android.support.v4.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage(android.support.v4.app.NotificationCompat$MessagingStyle); }
-keepclassmembers class android.view.View { void onDrawScrollBars(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void setViewVisibility(java.util.ArrayList,int); }
-keepclassmembers class android.support.v7.app.NotificationCompat { boolean hasMessagesWithoutSender(java.util.List); }
-keepclassmembers class android.view.View { void onAttachedToWindow(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean); }
-keepclassmembers class java.io.SerializationHandleMap { void <init>(); }
-keepclassmembers class android.util.ArrayMap { int indexOf(java.lang.Object,int); }
-keepclassmembers class java.io.SerializationHandleMap { void resizeArrays(int); }
-keepclassmembers class android.support.v7.app.NotificationCompat { java.lang.CharSequence makeMessageLine(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$MessagingStyle,android.support.v4.app.NotificationCompat$MessagingStyle$Message); }
-keepclassmembers class android.util.ArrayMap { int indexOfNull(); }
-keepclassmembers class android.view.View { boolean needRtlPropertiesResolution(); }
-keepclassmembers class android.view.View { boolean canScrollHorizontally(int); }
-keepclassmembers class java.io.SerializationHandleMap { int getModuloHash(java.lang.Object,int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean); }
-keepclassmembers class android.view.View { boolean resolveLayoutDirection(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int); }
-keepclassmembers class android.util.ArrayMap { void allocArrays(int); }
-keepclassmembers class java.io.SerializationHandleMap { void rehash(); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toBigEndianUtf16Bytes(char[],int,int); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.view.View { void resetResolvedLayoutDirection(); }
-keepclassmembers class java.io.SerializationHandleMap { int put(java.lang.Object,int); }
-keepclassmembers class android.util.ArrayMap { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionResolved(); }
-keepclassmembers class java.io.SerializationHandleMap { int remove(java.lang.Object); }
-keepclassmembers class android.view.View { boolean isPaddingResolved(); }
-keepclassmembers class java.io.SerializationHandleMap { int findIndex(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.view.View { void resetResolvedPaddingInternal(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.L2RReader { void absoluteScroll(float,float); }
-keepclassmembers class android.view.View { void resolvePadding(); }
-keepclassmembers class android.view.View { void onDetachedFromWindowInternal(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.L2RReader { void calculateVisibilities(); }
-keepclassmembers class android.support.v4.app.ActivityCompat$1 { void run(); }
-keepclassmembers class android.util.ArrayMap { int indexOfValue(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.L2RReader { float getPagePosition(int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object keyAt(int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object valueAt(int); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.view.View { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.L2RReader { boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.view.View { void dispatchDetachedFromWindow(); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object setValueAt(int,java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { void dispatchCancelPendingInputEvents(); }
-keepclassmembers class android.view.View { void onCancelPendingInputEvents(); }
-keepclassmembers class android.util.ArrayMap { void erase(); }
-keepclassmembers class android.util.ArrayMap { void append(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.Bitmap { int scaleFromDensity(int,int,int); }
-keepclassmembers class android.view.View { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.util.ArrayMap { void ensureCapacity(int); }
-keepclassmembers class android.view.View { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.L2RReader { boolean onSingleTapConfirmed(android.view.MotionEvent); }
-keepclassmembers class android.util.ArrayMap { void validate(); }
-keepclassmembers class android.view.View { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.animation.KeyframeSet { void <init>(android.animation.Keyframe[]); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofInt(int[]); }
-keepclassmembers class android.util.ArrayMap { void putAll(android.util.ArrayMap); }
-keepclassmembers class android.text.StaticLayout { void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.TextDirectionHeuristic,float,float,boolean,boolean,float,android.text.TextUtils$TruncateAt); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.L2RReader { void relativeScroll(double,double); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofFloat(float[]); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object removeAt(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { boolean canContain(org.ccil.cowan.tagsoup.ElementType); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String localName(java.lang.String); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { int detectDisplayOptions(); }
-keepclassmembers class android.util.ArrayMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofObject(java.lang.Object[]); }
-keepclassmembers class android.view.View { boolean isDrawingCacheEnabled(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String normalize(java.lang.String); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet clone(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String nextAT(); }
-keepclassmembers class android.util.ArrayMap { int hashCode(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitleInt(java.lang.CharSequence); }
-keepclassmembers class android.util.ArrayMap { java.lang.String toString(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String quotedAV(); }
-keepclassmembers class android.view.View { void updateDisplayListIfDirty(); }
-keepclassmembers class android.view.View { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String hexAV(); }
-keepclassmembers class android.graphics.drawable.Ripple { void setup(int,float); }
-keepclassmembers class android.view.View { android.graphics.Bitmap getDrawingCache(boolean); }
-keepclassmembers class android.view.View { void setDrawingCacheBackgroundColor(int); }
-keepclassmembers class android.graphics.drawable.Ripple { void clampStartingPosition(); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { android.view.ViewGroup$TouchTarget obtain(android.view.View,int); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { android.graphics.Bitmap decodeFile(java.io.File); }
-keepclassmembers class android.view.View { void buildDrawingCache(boolean); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateToolbarLogo(); }
-keepclassmembers class android.graphics.drawable.Ripple { void onHotspotBoundsChanged(); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void recycle(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { char getEscaped(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { char getUTF8(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { int getByte(int); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.view.View { void buildDrawingCacheImpl(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String escapedAV(); }
-keepclassmembers class android.graphics.drawable.Ripple { void getBounds(android.graphics.Rect); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setCustomView(android.view.View); }
-keepclassmembers class android.graphics.drawable.Ripple { void enter(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.util.List parse(); }
-keepclassmembers class android.graphics.drawable.Ripple { void exit(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateNavigationIcon(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateHomeAccessibility(); }
-keepclassmembers class android.graphics.drawable.Ripple { void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { int type(java.lang.String); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(int,int,int,int,int,int); }
-keepclassmembers class android.view.View { int getFadeTop(boolean); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDisplayOptions(int); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancelHardwareAnimations(boolean); }
-keepclassmembers class android.view.ViewGroup { void initViewGroup(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$1 { int compare(fr.castorflex.android.verticalviewpager.VerticalViewPager$ItemInfo,fr.castorflex.android.verticalviewpager.VerticalViewPager$ItemInfo); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(long); }
-keepclassmembers class android.view.View { boolean drawAnimation(android.view.ViewGroup,long,android.view.animation.Animation,boolean); }
-keepclassmembers class android.view.View { int getFadeHeight(boolean); }
-keepclassmembers class android.view.ViewGroup { int getDescendantFocusability(); }
-keepclassmembers class android.text.StaticLayout { int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean); }
-keepclassmembers class java.util.SimpleTimeZone { boolean isLeapYear(int); }
-keepclassmembers class java.util.SimpleTimeZone { int mod7(int); }
-keepclassmembers class java.util.concurrent.FutureTask { int awaitDone(boolean,long); }
-keepclassmembers class android.view.View { void setDisplayListProperties(android.view.RenderNode); }
-keepclassmembers class android.view.ViewGroup { void setDescendantFocusability(int); }
-keepclassmembers class android.widget.Editor$PositionListener { void addSubscriber(android.widget.Editor$TextViewPositionListener,boolean); }
-keepclassmembers class android.widget.Editor$PositionListener { void removeSubscriber(android.widget.Editor$TextViewPositionListener); }
-keepclassmembers class android.view.ViewGroup { void initFromAttributes(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.view.ViewGroup { void childHasTransientStateChanged(android.view.View,boolean); }
-keepclassmembers class java.io.ObjectStreamField { void resolve(java.lang.ClassLoader); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { int access$2008(ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocus(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator { void <init>(android.content.Context,java.lang.String,ar.rulosoft.mimanganu.componentes.ServerFilter[],int[][],int); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy$1 { void run(); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocusable(); }
-keepclassmembers class android.text.StaticLayout { void calculateEllipsis(int,int,float[],int,float,android.text.TextUtils$TruncateAt,int,float,android.text.TextPaint,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class android.view.ViewGroup { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.view.View { boolean draw(android.graphics.Canvas,android.view.ViewGroup,long); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup { int getSpanIndex(int,int); }
-keepclassmembers class android.view.ViewGroup { void setTouchscreenBlocksFocus(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator$1$3 { void onClick(android.view.View); }
-keepclassmembers class android.text.StaticLayout { int getLineForVertical(int); }
-keepclassmembers class android.text.StaticLayout { int getLineTop(int); }
-keepclassmembers class android.text.StaticLayout { int getLineDescent(int); }
-keepclassmembers class android.text.StaticLayout { int getLineStart(int); }
-keepclassmembers class android.text.StaticLayout { int getParagraphDirection(int); }
-keepclassmembers class android.view.ViewGroup { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.text.StaticLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisCount(int); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisStart(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void <init>(okhttp3.internal.http2.Http2Connection$Builder); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$ChunkedSink { void write(okio.Buffer,long); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$2 { void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.v4.util.ArrayMap); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void updateLocalMatrix(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void addBytesToWriteWindow(long); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF); }
-keepclassmembers class android.view.ViewGroup { boolean notifyChildOfDrag(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean getTouchscreenBlocksFocus(); }
-keepclassmembers class libcore.io.Streams { int readSingleByte(java.io.InputStream); }
-keepclassmembers class libcore.io.Streams { void readFully(java.io.InputStream,byte[],int,int); }
-keepclassmembers class android.view.View { void draw(android.graphics.Canvas); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void close(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void start(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void stop(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void pushDataLater(int,okio.BufferedSource,int,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void reverse(); }
-keepclassmembers class libcore.io.Streams { long skipByReading(java.io.InputStream,long); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canReverse(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getCount(); }
-keepclassmembers class android.util.SparseIntArray { void put(int,int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEnabled(int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { java.lang.Object getItem(int); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { boolean pushedStream(int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { long getItemId(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { int access$2408(ar.rulosoft.mimanganu.MangaFragment$DeleteImages); }
-keepclassmembers class android.util.SparseIntArray { void append(int,int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.view.View { void drawBackground(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean isStarted(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getItemViewType(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { java.lang.Integer doInBackground(java.lang.Void[]); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$FixedLengthSource { void <init>(okhttp3.internal.http1.Http1Codec,long); }
-keepclassmembers class okio.Buffer { long completeSegmentByteCount(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void start(boolean); }
-keepclassmembers class android.animation.ValueAnimator { void <init>(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$FixedLengthSource { long read(okio.Buffer,long); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.FontFamily { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void writeData(int,boolean,okio.Buffer,long); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View); }
-keepclassmembers class android.view.ViewGroup { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$FixedLengthSource { void close(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class okio.Buffer { okio.Buffer copyTo(okio.Buffer,long,long); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$UnknownLengthSource { long read(okio.Buffer,long); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(boolean); }
-keepclassmembers class android.text.SpanSet { void init(android.text.Spanned,int,int); }
-keepclassmembers class android.text.SpanSet { boolean hasSpansIntersecting(int,int); }
-keepclassmembers class okio.Buffer { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.SpanSet { int getNextTransition(int,int); }
-keepclassmembers class android.text.SpanSet { void recycle(); }
-keepclassmembers class android.animation.ValueAnimator { void setValues(android.animation.PropertyValuesHolder[]); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class okio.Buffer { boolean exhausted(); }
-keepclassmembers class android.animation.ValueAnimator { void initAnimation(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void highlight(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class okio.Buffer { byte getByte(long); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class android.view.View { boolean isLayoutRequested(); }
-keepclassmembers class android.animation.ValueAnimator { void updateScaledDuration(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { boolean updatePaint(); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentPlayTime(long); }
-keepclassmembers class android.view.View { boolean setOpticalFrame(int,int,int,int); }
-keepclassmembers class java.util.GregorianCalendar { void add(int,int); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { int hashCode(); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentFraction(float); }
-keepclassmembers class android.view.View { void layout(int,int,int,int); }
-keepclassmembers class okio.Buffer { long indexOf(byte,long,long); }
-keepclassmembers class android.view.View { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void invalidate(boolean); }
-keepclassmembers class android.animation.ValueAnimator { void setStartDelay(long); }
-keepclassmembers class android.view.ViewGroup { void resetTouchState(); }
-keepclassmembers class android.view.ViewGroup { boolean resetCancelNextUpFlag(android.view.View); }
-keepclassmembers class java.util.GregorianCalendar { void fullFieldsCalc(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void onHotspotBoundsChanged(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean shouldDraw(); }
-keepclassmembers class android.animation.ValueAnimator { void notifyStartListeners(); }
-keepclassmembers class android.view.View { void resolveDrawables(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$2 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous,float,float); }
-keepclassmembers class android.view.View { void resetResolvedDrawablesInternal(); }
-keepclassmembers class android.view.View { boolean areDrawablesResolved(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.view.ViewGroup { void removePointersFromTouchTargets(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$2 { void run(); }
-keepclassmembers class android.animation.ValueAnimator { void start(boolean); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void getBounds(android.graphics.Rect); }
-keepclassmembers class android.view.View { void refreshDrawableState(); }
-keepclassmembers class android.view.View { int[] getDrawableState(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void setup(int,float); }
-keepclassmembers class rapid.decoder.cache.ResourcePool { java.lang.Object obtainImpl(boolean); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void exit(); }
-keepclassmembers class android.view.View { int[] onCreateDrawableState(int); }
-keepclassmembers class rapid.decoder.cache.ResourcePool { void recycle(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void transformPointToViewLocal(float[],android.view.View); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class android.view.View { int[] mergeDrawableStates(int[],int[]); }
-keepclassmembers class java.util.GregorianCalendar { void computeFields(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.CompoundGroup { void <init>(boolean,android.widget.CompoundButton[]); }
-keepclassmembers class android.view.ViewGroup { void setMotionEventSplittingEnabled(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean canViewReceivePointerEvents(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean isTransitionGroup(); }
-keepclassmembers class android.animation.ValueAnimator { void reverse(); }
-keepclassmembers class android.view.ViewGroup { void setTransitionGroup(boolean); }
-keepclassmembers class android.view.ViewGroup { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class okio.Buffer { boolean rangeEquals(long,okio.ByteString,int,int); }
-keepclassmembers class android.view.View { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void exitSoftware(int,int,int); }
-keepclassmembers class okio.Buffer { long read(okio.Buffer,long); }
-keepclassmembers class android.animation.ValueAnimator { void endAnimation(android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class okio.Buffer { byte readByte(); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class okio.Buffer { int read(byte[],int,int); }
-keepclassmembers class okio.Buffer { byte[] readByteArray(long); }
-keepclassmembers class android.animation.ValueAnimator { void startAnimation(android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class android.widget.RemoteViews { void recalculateMemoryUsage(); }
-keepclassmembers class android.animation.ValueAnimator { boolean delayedAnimationFrame(long); }
-keepclassmembers class android.view.ViewGroup { void dispatchStartTemporaryDetach(); }
-keepclassmembers class android.view.ViewGroup { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancelHardwareAnimations(boolean); }
-keepclassmembers class android.animation.ValueAnimator { boolean animationFrame(long); }
-keepclassmembers class android.view.View { void internalSetPadding(int,int,int,int); }
-keepclassmembers class android.widget.RemoteViews { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedTouchEvent(android.view.MotionEvent,boolean,android.view.View,int); }
-keepclassmembers class okio.Buffer { long readHexadecimalUnsignedLong(); }
-keepclassmembers class android.animation.ValueAnimator { boolean doAnimationFrame(long); }
-keepclassmembers class android.view.ViewGroup { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.ViewGroup { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class okio.Buffer { void readFully(byte[]); }
-keepclassmembers class okio.Buffer { int readInt(); }
-keepclassmembers class android.animation.ValueAnimator { void animateValue(float); }
-keepclassmembers class java.util.GregorianCalendar { void computeTime(); }
-keepclassmembers class okio.ByteString { okio.ByteString decodeHex(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class okio.ByteString { int codePointIndexToCharIndex(java.lang.String,int); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator clone(); }
-keepclassmembers class android.view.ViewGroup { void dispatchDetachedFromWindow(); }
-keepclassmembers class android.view.View { void setSelected(boolean); }
-keepclassmembers class okio.ByteString { int decodeHexDigit(char); }
-keepclassmembers class okio.Buffer { short readShort(); }
-keepclassmembers class android.view.InputDevice { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.View { boolean isSelected(); }
-keepclassmembers class android.view.View { void setActivated(boolean); }
-keepclassmembers class android.view.ViewGroup { void internalSetPadding(int,int,int,int); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class android.view.ViewGroup { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class okio.Buffer { java.lang.String readString(long,java.nio.charset.Charset); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawingCacheEnabled(boolean); }
-keepclassmembers class java.util.LinkedHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.InputDevice { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { void onAnimationEnd(); }
-keepclassmembers class java.util.LinkedHashMap { void makeTail(java.util.LinkedHashMap$LinkedEntry); }
-keepclassmembers class java.util.GregorianCalendar { int computeYearAndDay(long,long); }
-keepclassmembers class okio.ByteString { int compareTo(okio.ByteString); }
-keepclassmembers class okio.Buffer { java.lang.String readUtf8Line(long); }
-keepclassmembers class java.util.GregorianCalendar { long daysFromBaseYear(long); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void init(android.view.View); }
-keepclassmembers class android.view.InputDevice { void appendSourceDescriptionIfApplicable(java.lang.StringBuilder,int,java.lang.String); }
-keepclassmembers class okio.ByteString { java.lang.String hex(); }
-keepclassmembers class java.util.GregorianCalendar { int daysInMonth(boolean,int); }
-keepclassmembers class android.view.View { void getLocationOnScreen(int[]); }
-keepclassmembers class android.view.ViewGroup { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class android.view.ViewGroup { void onAnimationStart(); }
-keepclassmembers class java.util.GregorianCalendar { int daysInYear(int); }
-keepclassmembers class java.util.GregorianCalendar { int daysInYear(boolean,int); }
-keepclassmembers class android.view.View { void getLocationInWindow(int[]); }
-keepclassmembers class android.view.ViewGroup { int dipsToPixels(int); }
-keepclassmembers class okio.ByteString { boolean rangeEquals(int,byte[],int,int); }
-keepclassmembers class android.view.ViewGroup { void fillDifference(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class android.widget.RemoteViews { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class okio.Buffer { okio.ByteString snapshot(); }
-keepclassmembers class android.view.ViewGroup { void onDebugDrawMargins(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class okio.Buffer { void skip(long); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.view.ViewGroup { void onDebugDraw(android.graphics.Canvas); }
-keepclassmembers class android.os.UserHandle { int getUserId(int); }
-keepclassmembers class okio.Buffer { okio.Segment writableSegment(int); }
-keepclassmembers class java.util.GregorianCalendar { int getOffset(long); }
-keepclassmembers class android.view.View { boolean isRootNamespace(); }
-keepclassmembers class okio.ByteString { okio.ByteString substring(int,int); }
-keepclassmembers class java.util.GregorianCalendar { boolean isLeapYear(int); }
-keepclassmembers class java.util.GregorianCalendar { int mod(int,int); }
-keepclassmembers class okio.ByteString { okio.ByteString toAsciiLowercase(); }
-keepclassmembers class java.util.GregorianCalendar { int mod7(long); }
-keepclassmembers class android.view.View { void setTagInternal(int,java.lang.Object); }
-keepclassmembers class okio.Buffer { okio.Buffer write(byte[],int,int); }
-keepclassmembers class android.view.ViewGroup { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewGroup { void drawCorner(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int); }
-keepclassmembers class java.util.GregorianCalendar { void roll(int,int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayOptions(int,int); }
-keepclassmembers class okio.Buffer { void write(okio.Buffer,long); }
-keepclassmembers class android.view.ViewGroup { boolean hasChildWithZ(); }
-keepclassmembers class java.util.GregorianCalendar { int julianError(); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList buildOrderedChildList(); }
-keepclassmembers class android.view.View { void requestLayout(); }
-keepclassmembers class android.view.View { void forceLayout(); }
-keepclassmembers class okio.Buffer { long writeAll(okio.Source); }
-keepclassmembers class android.view.ViewGroup { void recreateChildDisplayList(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean getClipChildren(); }
-keepclassmembers class android.view.View { void measure(int,int); }
-keepclassmembers class okio.Buffer { okio.Buffer writeByte(int); }
-keepclassmembers class android.view.ViewGroup { void setClipChildren(boolean); }
-keepclassmembers class okio.Base64 { java.lang.String encode(byte[],byte[]); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetSelected(boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchGetDisplayList(); }
-keepclassmembers class okio.Buffer { okio.Buffer writeDecimalLong(long); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetPressed(boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetActivated(boolean); }
-keepclassmembers class android.view.View { int combineMeasuredStates(int,int); }
-keepclassmembers class android.view.View { void setMeasuredDimensionRaw(int,int); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void dispatchCancelPendingInputEvents(); }
-keepclassmembers class android.view.View { void setMeasuredDimension(int,int); }
-keepclassmembers class android.view.View { int resolveSize(int,int); }
-keepclassmembers class android.view.View { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewTraversal(int); }
-keepclassmembers class okhttp3.internal.http2.ErrorCode { okhttp3.internal.http2.ErrorCode fromHttp2(int); }
-keepclassmembers class okio.Buffer { okio.Buffer writeInt(int); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class android.view.View { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.View { void onAnimationStart(); }
-keepclassmembers class okio.Buffer { okio.Buffer writeHexadecimalUnsignedLong(long); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { java.lang.String getPagesNumber(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.view.View { boolean performHapticFeedback(int,int); }
-keepclassmembers class android.view.View { void onAnimationEnd(); }
-keepclassmembers class android.view.ViewGroup { boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean isScalingRequired(); }
-keepclassmembers class java.lang.Integer { int parse(java.lang.String,int,int,boolean); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean supportsScreen(); }
-keepclassmembers class android.view.ViewGroup { void addViewInner(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class okio.Buffer { okio.Buffer writeShort(int); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToDisplayMetrics(android.util.DisplayMetrics); }
-keepclassmembers class java.lang.Integer { int numberOfLeadingZeros(int); }
-keepclassmembers class android.view.ViewGroup { void addInArray(android.view.View,int); }
-keepclassmembers class android.view.ViewGroup { void cleanupLayoutState(android.view.View); }
-keepclassmembers class java.lang.Integer { int bitCount(int); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToConfiguration(int,android.content.res.Configuration); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int); }
-keepclassmembers class java.lang.Integer { int numberOfTrailingZeros(int); }
-keepclassmembers class java.lang.Integer { int signum(int); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int,int); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(int); }
-keepclassmembers class android.content.res.CompatibilityInfo { float computeCompatibleScaling(android.util.DisplayMetrics,android.util.DisplayMetrics); }
-keepclassmembers class android.view.View { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class android.view.View { boolean canAcceptDrag(); }
-keepclassmembers class java.lang.Integer { void <clinit>(); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Integer { int reverseBytes(int); }
-keepclassmembers class android.view.View { void checkForLongClick(int); }
-keepclassmembers class okio.Buffer { okio.Buffer writeUtf8(java.lang.String,int,int); }
-keepclassmembers class android.os.Build$VERSION { void <clinit>(); }
-keepclassmembers class okio.Buffer { okio.Buffer writeUtf8CodePoint(int); }
-keepclassmembers class android.view.View { boolean overScrollBy(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.view.ViewGroup { void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.View { void setNestedScrollingEnabled(boolean); }
-keepclassmembers class android.view.ViewGroup { void removeAllViewsInLayout(); }
-keepclassmembers class android.view.ViewGroup { void invalidateChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.View { boolean isNestedScrollingEnabled(); }
-keepclassmembers class android.view.View { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.view.ViewGroup { void detachAllViewsFromParent(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence[] getResourceTextArray(int); }
-keepclassmembers class java.io.ObjectInputStream { int nextHandle(); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class android.os.Bundle { void putAll(android.os.Bundle); }
-keepclassmembers class android.content.res.AssetManager { void makeStringBlocks(android.content.res.StringBlock[]); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getPooledStringForCookie(int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View); }
-keepclassmembers class android.view.View { int getRawTextDirection(); }
-keepclassmembers class java.io.ObjectInputStream { byte[] readBlockData(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.StreamCorruptedException corruptStream(byte); }
-keepclassmembers class android.view.View { int getTextDirection(); }
-keepclassmembers class android.view.View { float getVerticalScrollFactor(); }
-keepclassmembers class android.view.View { boolean resolveTextDirection(); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasNoModifiers(int); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasModifiers(int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.String viewToString(android.view.View); }
-keepclassmembers class android.content.res.AssetManager { java.io.InputStream openNonAsset(int,java.lang.String,int); }
-keepclassmembers class java.io.ObjectInputStream { void readFieldDescriptors(java.io.ObjectStreamClass); }
-keepclassmembers class android.view.KeyEvent { int metaStateFilterDirectionalModifiers(int,int,int,int,int); }
-keepclassmembers class android.view.View { void resetResolvedTextDirection(); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class android.view.KeyEvent { int normalizeMetaState(int); }
-keepclassmembers class android.view.View { int getRawTextAlignment(); }
-keepclassmembers class android.view.View { int getTextAlignment(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String formatClassSig(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setBooleanProperty(int,boolean); }
-keepclassmembers class android.view.View { boolean resolveTextAlignment(); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { float constrain(float,float,float); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.XmlBlock openXmlBlockAsset(int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { boolean getTargetCheckedState(); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { int getThumbOffset(); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { int getThumbScrollRange(); }
-keepclassmembers class android.view.ViewGroup { void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class android.view.View { boolean isTextDirectionResolved(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean getBooleanProperty(int); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { boolean hitThumb(float,float); }
-keepclassmembers class android.view.View { void resetResolvedTextAlignment(); }
-keepclassmembers class android.view.View { boolean isTextAlignmentResolved(); }
-keepclassmembers class java.io.ObjectInputStream { void readFieldValues(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.view.ViewGroup { void offsetChildrenTopAndBottom(int); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void stopDrag(android.view.MotionEvent); }
-keepclassmembers class android.content.res.AssetManager { void incRefsLocked(long); }
-keepclassmembers class android.content.res.AssetManager { void decRefsLocked(long); }
-keepclassmembers class java.io.ObjectInputStream { void readHierarchy(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.RelativeLayout { void sortChildren(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$3 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.view.ViewGroup { boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class android.view.KeyEvent { boolean isShiftPressed(); }
-keepclassmembers class android.view.KeyEvent { java.lang.String metaStateToString(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void drawableStateChanged(); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { int getCompoundPaddingLeft(); }
-keepclassmembers class java.io.ObjectInputStream { void readObjectForClass(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { int getCompoundPaddingRight(); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { int[] onCreateDrawableState(int); }
-keepclassmembers class android.widget.RelativeLayout { void onMeasure(int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewArray(boolean); }
-keepclassmembers class android.util.LongSparseLongArray { void put(long,long); }
-keepclassmembers class android.view.ViewGroup { void setLayoutAnimation(android.view.animation.LayoutAnimationController); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.View { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,int,int,boolean); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onRequestPermissionsResult(int,java.lang.String[],int[]); }
-keepclassmembers class java.io.ObjectInputStream { int findStreamSuperclass(java.lang.Class,java.util.List,int); }
-keepclassmembers class android.util.LongSparseLongArray { void append(long,long); }
-keepclassmembers class android.view.ViewGroup { boolean isChildrenDrawingOrderEnabled(); }
-keepclassmembers class android.view.ViewGroup { boolean hasBooleanFlag(int); }
-keepclassmembers class android.view.View { int generateViewId(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$ViewElevationComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class android.view.ViewGroup { void setBooleanFlag(int,boolean); }
-keepclassmembers class android.view.ViewGroup { void setPersistentDrawingCache(int); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { int measureChildForCells(android.view.View,int,int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readNewClassDesc(boolean); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void onMeasure(int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class readNewProxyClassDesc(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveProxyClass(java.lang.String[]); }
-keepclassmembers class android.widget.RelativeLayout { void alignBaseline(android.view.View,android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.view.ViewGroup { int indexOfChild(android.view.View); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readEnumDescInternal(); }
-keepclassmembers class android.view.ViewGroup { void measureChild(android.view.View,int,int); }
-keepclassmembers class android.widget.RelativeLayout { void measureChildHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.ViewGroup { int getChildMeasureSpec(int,int,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onMeasureExactFormat(int,int); }
-keepclassmembers class android.widget.RelativeLayout { int getChildMeasureSpec(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { void clearDisappearingChildren(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewObject(boolean); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startIntentSenderFromFragment(android.support.v4.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.view.ViewGroup { void finishAnimatingView(android.view.View,android.view.animation.Animation); }
-keepclassmembers class android.view.ViewGroup { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject(boolean); }
-keepclassmembers class android.widget.RelativeLayout { boolean positionChildHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int,boolean); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object registeredObjectRead(int); }
-keepclassmembers class java.io.ObjectInputStream { void registerObjectRead(java.lang.Object,int,boolean); }
-keepclassmembers class android.widget.RelativeLayout { boolean positionChildVertical(android.view.View,android.widget.RelativeLayout$LayoutParams,int,boolean); }
-keepclassmembers class android.view.ViewGroup { void requestTransparentRegion(android.view.View); }
-keepclassmembers class android.view.ViewGroup { android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class android.view.ViewGroup { void drawableStateChanged(); }
-keepclassmembers class android.view.ViewGroup { void jumpDrawablesToCurrentState(); }
-keepclassmembers class java.util.HashMap$HashIterator { java.util.HashMap$HashMapEntry nextEntry(); }
-keepclassmembers class okio.SegmentPool { void recycle(okio.Segment); }
-keepclassmembers class android.view.ViewGroup { int[] onCreateDrawableState(int); }
-keepclassmembers class java.util.HashMap$HashIterator { void <init>(java.util.HashMap); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { int getCount(); }
-keepclassmembers class okio.SegmentPool { okio.Segment take(); }
-keepclassmembers class java.io.ObjectInputStream { void verifyAndInit(java.io.ObjectStreamClass); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { android.support.v7.view.menu.MenuItemImpl getItem(int); }
-keepclassmembers class android.view.ViewGroup { void setAddStatesFromChildren(boolean); }
-keepclassmembers class android.widget.RelativeLayout { void applyHorizontalSizeRules(android.widget.RelativeLayout$LayoutParams,int,int[]); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String getBaseName(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void childDrawableStateChanged(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { void findExpandedIndex(); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextDirection(); }
-keepclassmembers class android.widget.RelativeLayout { void applyVerticalSizeRules(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.view.ViewGroup { void resolvePadding(); }
-keepclassmembers class android.view.ViewGroup { boolean resolveLayoutDirection(); }
-keepclassmembers class android.widget.RelativeLayout { void centerHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class okio.GzipSource { void consumeHeader(); }
-keepclassmembers class android.view.ViewGroup { void resolveDrawables(); }
-keepclassmembers class android.widget.RelativeLayout { void centerVertical(android.view.View,android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.view.ViewGroup { void resolveLayoutParams(); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextAlignment(); }
-keepclassmembers class android.widget.RelativeLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedLayoutDirection(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextDirection(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedPadding(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextAlignment(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedDrawables(); }
-keepclassmembers class android.widget.RelativeLayout { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean hasSupportDividerBeforeChildAt(int); }
-keepclassmembers class okio.GzipSource { long read(okio.Buffer,long); }
-keepclassmembers class android.widget.CheckedTextView { void updatePadding(); }
-keepclassmembers class org.acra.collector.DeviceFeaturesCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.widget.CheckedTextView { boolean isCheckMarkAtStart(); }
-keepclassmembers class android.widget.CheckedTextView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.CheckedTextView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { boolean hasDueCallbacksLocked(long); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SerializableCookie { java.lang.String byteArrayToHexString(byte[]); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void addCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { android.view.Choreographer$CallbackRecord extractDueCallbacksLocked(long); }
-keepclassmembers class android.net.Uri$StringUri { boolean isHierarchical(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseSsp(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SerializableCookie { byte[] hexStringToByteArray(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$10 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseQuery(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.util.DiffUtil$1 { int compare(android.support.v7.util.DiffUtil$Snake,android.support.v7.util.DiffUtil$Snake); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(java.lang.String,int); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseFragment(); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { java.lang.String activeFlags(int); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseAuthority(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void checkCacheVersion(); }
-keepclassmembers class org.acra.collector.ReflectionCollector { void collectConstants(java.lang.Class,org.json.JSONObject); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void selectEntries(java.security.Provider); }
-keepclassmembers class org.acra.collector.ReflectionCollector { void collectStaticGettersResults(java.lang.Class,org.json.JSONObject); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void collectFlags(android.view.Display,org.json.JSONObject); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void <clinit>(); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$HPage$1 { void run(); }
-keepclassmembers class java.security.SecureRandom { void setSeed(long); }
-keepclassmembers class libcore.util.Objects { java.lang.String toString(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$1 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class java.util.Stack { java.lang.Object peek(); }
-keepclassmembers class java.util.Stack { java.lang.Object pop(); }
-keepclassmembers class java.io.BufferedReader { int fillBuf(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class org.acra.model.ComplexElement { java.lang.String[] getNames(org.json.JSONObject); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.io.BufferedReader { int readChar(); }
-keepclassmembers class android.app.Activity { void stopManagingCursor(android.database.Cursor); }
-keepclassmembers class java.io.BufferedReader { void chompNewline(); }
-keepclassmembers class java.io.BufferedReader { java.lang.String readLine(); }
-keepclassmembers class okio.GzipSource { void updateCrc(okio.Buffer,long,long); }
-keepclassmembers class android.view.animation.OvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class android.content.ComponentName { java.lang.String flattenToShortString(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean onLevelChange(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MoreMangasPageTransformer { void transformPage(android.view.View,float); }
-keepclassmembers class android.view.ViewConfiguration { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { long makeNodeId(int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { int getVirtualDescendantId(long); }
-keepclassmembers class android.view.ViewConfiguration { android.view.ViewConfiguration get(android.content.Context); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ElevateToTranslationZAnimation { float getTargetShadowSize(); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] append(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] append(int[],int,int); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] append(boolean[],int,boolean); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] append(long[],int,long); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] insert(int[],int,int,int); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] insert(long[],int,int,long); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSink { void emitFrame(boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$4 { void run(); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] insert(boolean[],int,int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { boolean contains(int[],int); }
-keepclassmembers class android.graphics.Color { int alpha(int); }
-keepclassmembers class android.graphics.Color { int rgb(int,int,int); }
-keepclassmembers class android.graphics.Color { int red(int); }
-keepclassmembers class android.graphics.Color { int green(int); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int growSize(int); }
-keepclassmembers class android.transition.Visibility { void setMode(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { int[][] getBasicFilter(); }
-keepclassmembers class android.graphics.Color { int blue(int); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSink { void close(); }
-keepclassmembers class android.app.Activity { boolean onSearchRequested(); }
-keepclassmembers class android.graphics.Color { int parseColor(java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSink { void flush(); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSink { void write(okio.Buffer,long); }
-keepclassmembers class android.graphics.Color { void colorToHSV(int,float[]); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { int searchForNewChapters(int,android.content.Context,boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { void enlargeBuffer(int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readBitString(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void appendNull(); }
-keepclassmembers class libcore.reflect.Types { java.lang.String toString(java.lang.Class[]); }
-keepclassmembers class libcore.reflect.Types { void appendTypeName(java.lang.StringBuilder,java.lang.Class); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char[]); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(java.lang.String); }
-keepclassmembers class android.graphics.Color { int argb(int,int,int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void delete0(int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { int findInsertIndex(java.util.ArrayList,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char[],int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void deleteCharAt0(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char[],int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { int getOrdering(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char[]); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char); }
-keepclassmembers class java.lang.AbstractStringBuilder { void replace0(int,int,java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { void move(int,int); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { void <init>(int,int,okio.Source); }
-keepclassmembers class android.support.v7.preference.ListPreferenceDialogFragmentCompat { void putCharSequenceArray(android.os.Bundle,java.lang.String,java.lang.CharSequence[]); }
-keepclassmembers class org.apache.harmony.security.utils.Array { java.lang.String getBytesAsString(byte[]); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { void clearDynamicTable(); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { int evictToRecoverBytes(int); }
-keepclassmembers class org.apache.harmony.security.utils.Array { java.lang.String toString(byte[],java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { void adjustDynamicTableByteCount(); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { int dynamicTableIndex(int); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { okio.ByteString getName(int); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { void insertIntoDynamicTable(int,okhttp3.internal.http2.Header); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class java.lang.StringToReal { java.lang.StringToReal$StringExponentPair initialParse(java.lang.String,int,boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String toString(); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { int readByte(); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { void readIndexedHeader(int); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { boolean isStaticHeader(int); }
-keepclassmembers class android.app.Activity { java.lang.String getLocalClassName(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { void getPadding(android.graphics.Rect); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { okio.ByteString readByteString(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.view.MenuItem findItem(int); }
-keepclassmembers class java.lang.StringToReal { float parseName(java.lang.String,boolean); }
-keepclassmembers class java.lang.StringToReal { double parseDouble(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsUnread { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { void <init>(java.util.AbstractList,int,int); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { void readHeaders(); }
-keepclassmembers class android.app.Activity { void setProgress(int); }
-keepclassmembers class android.app.Activity { void setSecondaryProgress(int); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { int readInt(int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void flagActionItems(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { java.util.ArrayList getVisibleItems(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean hasVisibleItems(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int runStateOf(int); }
-keepclassmembers class java.lang.StringToReal { float parseFloat(java.lang.String); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { void removeRange(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndDecrementWorkerCount(int); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$ThreadPolicy allowThreadDiskReads(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int ctlOf(int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int workerCountOf(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean performItemAction(android.view.MenuItem,android.support.v7.view.menu.MenuPresenter,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndIncrementWorkerCount(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.os.StrictMode { int parseViolationFromMessage(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void restoreActionViewStates(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.NotificationCompatHoneycomb { android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void setExclusiveItemChecked(android.view.MenuItem); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void saveActionViewStates(android.os.Bundle); }
-keepclassmembers class android.os.StrictMode { boolean vmFileUriExposureEnabled(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getChangingConfigurations(); }
-keepclassmembers class okio.RealBufferedSink { void flush(); }
-keepclassmembers class android.os.StrictMode { boolean vmSqliteObjectLeaksEnabled(); }
-keepclassmembers class okio.RealBufferedSink { void close(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setAlpha(int); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink emitCompleteSegments(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.text.SpannableStringInternal { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.os.StrictMode { void onVmPolicyViolation(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getOpacity(); }
-keepclassmembers class android.text.SpannableStringInternal { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class android.animation.PathKeyframes { java.lang.Object getValue(float); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getAlpha(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF interpolateInRange(float,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { void removeSpan(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void processWorkerExit(java.util.concurrent.ThreadPoolExecutor$Worker,boolean); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { android.support.v7.preference.Preference createItem(java.lang.String,java.lang.String[],android.util.AttributeSet); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.animation.PathKeyframes { float interpolate(float,float,float); }
-keepclassmembers class android.os.StrictMode { void readAndHandleBinderCallViolations(android.os.Parcel); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF pointForIndex(int); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanFlags(java.lang.Object); }
-keepclassmembers class okhttp3.internal.http2.Huffman { void addCode(int,int,byte); }
-keepclassmembers class android.text.SpannableStringInternal { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$Span enterCriticalSpan(java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void runWorker(java.util.concurrent.ThreadPoolExecutor$Worker); }
-keepclassmembers class android.widget.ProgressBar { void doRefreshProgress(int,int,boolean,boolean); }
-keepclassmembers class okhttp3.internal.http2.Huffman { void buildTree(); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class okhttp3.internal.http2.Huffman { byte[] decode(byte[]); }
-keepclassmembers class okhttp3.internal.http.BridgeInterceptor { java.lang.String cookieHeader(java.util.List); }
-keepclassmembers class java.lang.System { void arraycopy(byte[],int,byte[],int,int); }
-keepclassmembers class okhttp3.internal.http.BridgeInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class okhttp3.internal.http2.Huffman { void encode(okio.ByteString,okio.BufferedSink); }
-keepclassmembers class okhttp3.internal.http2.Huffman { int encodedLength(okio.ByteString); }
-keepclassmembers class android.widget.ProgressBar { void refreshProgress(int,int,boolean); }
-keepclassmembers class android.widget.ProgressBar { void updateDrawableBounds(int,int); }
-keepclassmembers class android.text.SpannableStringInternal { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringInternal { int hashCode(); }
-keepclassmembers class java.lang.System { void arraycopy(char[],int,char[],int,int); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { java.lang.Object next(); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void remove(); }
-keepclassmembers class java.lang.System { void arraycopy(int[],int,int[],int,int); }
-keepclassmembers class android.widget.ProgressBar { void drawTrack(android.graphics.Canvas); }
-keepclassmembers class android.widget.ProgressBar { void onMeasure(int,int); }
-keepclassmembers class java.lang.System { void arraycopy(long[],int,long[],int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.lang.String toString(); }
-keepclassmembers class android.widget.ProgressBar { void onAttachedToWindow(); }
-keepclassmembers class java.lang.System { void arraycopy(boolean[],int,boolean[],int,int); }
-keepclassmembers class com.android.internal.util.XmlUtils { int convertValueToInt(java.lang.CharSequence,int); }
-keepclassmembers class java.lang.System { java.util.Map getenv(); }
-keepclassmembers class java.lang.System { void arraycopy(float[],int,float[],int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getOpacity(); }
-keepclassmembers class java.lang.System { void parsePropertyAssignments(java.util.Properties,java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canConstantState(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class java.net.NetworkInterface { void collectIpv6Addresses(java.lang.String,int,java.util.List,java.util.List,java.lang.String[]); }
-keepclassmembers class android.content.res.XmlBlock { void decOpenCountLocked(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int translateFieldId(java.text.FieldPosition); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$VPage$1 { void run(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean isStateful(); }
-keepclassmembers class android.content.res.XmlBlock { int access$008(android.content.res.XmlBlock); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canApplyTheme(); }
-keepclassmembers class android.content.res.XmlBlock { android.content.res.XmlResourceParser newParser(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void reconfigure(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class java.util.Arrays$ArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class java.net.NetworkInterface { java.util.List getNetworkInterfacesList(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnection openConnectionLocked(android.database.sqlite.SQLiteDatabaseConfiguration,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void releaseConnection(android.database.sqlite.SQLiteConnection); }
-keepclassmembers class libcore.internal.StringPool { java.lang.String get(char[],int,int); }
-keepclassmembers class libcore.internal.StringPool { boolean contentEquals(java.lang.String,char[],int,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void reconfigureAllConnectionsLocked(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$FixedLengthSink { void close(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void markAcquiredConnectionsLocked(android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void closeExcessConnectionsAndLogExceptionsLocked(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnection waitForConnection(java.lang.String,int,android.os.CancellationSignal); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void logConnectionPoolBusyLocked(long,int); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$FixedLengthSink { void write(okio.Buffer,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnection tryAcquireNonPrimaryConnectionLocked(java.lang.String,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { int getPriority(int); }
-keepclassmembers class java.util.EnumMap { java.lang.Object putImpl(java.lang.Enum,java.lang.Object); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { int getEmbeddedMenuWidthLimit(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void setMaxConnectionPoolSizeLocked(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void finishAcquireConnectionLocked(android.database.sqlite.SQLiteConnection,int); }
-keepclassmembers class java.util.Collections { void reverse(java.util.List); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void recycleConnectionWaiterLocked(android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter); }
-keepclassmembers class android.view.RenderNodeAnimator { void cancel(); }
-keepclassmembers class java.util.Collections { void sort(java.util.List); }
-keepclassmembers class android.view.RenderNodeAnimator { void start(); }
-keepclassmembers class java.util.Collections { void sort(java.util.List,java.util.Comparator); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onTouchEvent(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$1 { void run(); }
-keepclassmembers class android.view.RenderNodeAnimator { void notifyStartListeners(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartDelay(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void onFinished(); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean processDelayed(long); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator setDuration(long); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onGenericMotionEvent(android.view.MotionEvent,int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onUnhandledEvent(android.view.InputEvent,int); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int fixMethodFlags(int); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void acquireReference(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { void checkValidity(java.lang.Class[]); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void run(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void finishEvent(); }
-keepclassmembers class java.util.Collections { boolean addAll(java.util.Collection,java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.system.StructTimeval { android.system.StructTimeval fromMillis(long); }
-keepclassmembers class java.util.Collections { int secondaryHash(int); }
-keepclassmembers class java.net.URL { void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText recycle(android.text.MeasuredText); }
-keepclassmembers class java.util.Collections { int roundUpToPowerOfTwo(int); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean ok(char[],char); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText obtain(); }
-keepclassmembers class android.text.method.NumberKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void releaseReference(); }
-keepclassmembers class android.text.MeasuredText { void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class java.net.URL { void setupStreamHandler(); }
-keepclassmembers class java.net.URL { void fixURL(boolean); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class java.util.AbstractMap { java.lang.String toString(); }
-keepclassmembers class java.util.AbstractMap { int hashCode(); }
-keepclassmembers class android.text.MeasuredText { void setPos(int); }
-keepclassmembers class android.text.MeasuredText { int breakText(int,boolean,float); }
-keepclassmembers class android.text.MeasuredText { float measure(int,int); }
-keepclassmembers class java.lang.Runtime { void exit(int); }
-keepclassmembers class java.lang.Runtime { java.lang.String[] initLibPaths(); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { int getCompoundPaddingLeft(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String expandEntities(java.lang.String); }
-keepclassmembers class java.lang.Runtime { void loadLibrary(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { int lookupEntity(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { boolean etag_cdata(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void etag_basic(char[],int,int); }
-keepclassmembers class android.content.res.Configuration { boolean isLayoutSizeAtLeast(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pop(); }
-keepclassmembers class android.widget.Editor$Blink { void run(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void restartablyPop(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void push(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class java.lang.Throwable { void setStackTrace(java.lang.StackTraceElement[]); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.lang.Appendable,java.lang.String,java.lang.StackTraceElement[]); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$7 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String trimquotes(java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateDstRectAndInsetsIfDirty(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String[] split(java.lang.String); }
-keepclassmembers class android.content.res.Configuration { int updateFrom(android.content.res.Configuration); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String cleanPublicid(java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pcdata(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pi(char[],int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void <init>(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String makeName(char[],int,int); }
-keepclassmembers class android.content.res.Configuration { boolean needNewResources(int,int); }
-keepclassmembers class android.content.res.Configuration { int compareTo(android.content.res.Configuration); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$4$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.content.res.Configuration { int getLayoutDirection(); }
-keepclassmembers class android.content.res.ColorStateList$1 { android.content.res.ColorStateList createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.res.Configuration { void setLayoutDirection(java.util.Locale); }
-keepclassmembers class android.content.res.Configuration { int getScreenLayoutNoDirection(int); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { long getDelayForView(android.view.View); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { boolean willOverlap(); }
-keepclassmembers class android.support.v4.app.BackStackState { void <init>(android.support.v4.app.BackStackRecord); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters); }
-keepclassmembers class android.widget.AbsListView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters); }
-keepclassmembers class org.json.JSONObject { void <init>(org.json.JSONObject,java.lang.String[]); }
-keepclassmembers class libcore.io.HeapBufferIterator { int readInt(); }
-keepclassmembers class libcore.io.HeapBufferIterator { short readShort(); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityGingerbread { void checkForValidRequestCode(int); }
-keepclassmembers class libcore.io.HeapBufferIterator { void skip(int); }
-keepclassmembers class android.support.v4.app.BackStackState { android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl); }
-keepclassmembers class android.widget.AbsListView { void updateOnScreenCheckedViews(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void showPopup(int,int,boolean,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean contentFits(); }
-keepclassmembers class android.support.v7.app.AlertController { boolean canTextInput(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void addChapterDownloadPool(android.app.Activity,ar.rulosoft.mimanganu.componentes.Chapter,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void attachListener(ar.rulosoft.mimanganu.services.ChapterDownload$OnErrorListener,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { int generateCacheKey(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.preference.MultiSelectListPreferenceDialogFragmentCompat { void onPrepareDialogBuilder(android.support.v7.app.AlertDialog$Builder); }
-keepclassmembers class android.support.v7.app.AlertController { void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20$Builder { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String,android.widget.RemoteViews,android.widget.RemoteViews); }
-keepclassmembers class okhttp3.Route { int hashCode(); }
-keepclassmembers class org.json.JSONObject { java.lang.String numberToString(java.lang.Number); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { boolean next(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int start(); }
-keepclassmembers class android.widget.AbsListView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int limit(); }
-keepclassmembers class android.widget.AbsListView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.support.v7.app.AlertController { void setupButtons(android.view.ViewGroup); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$VPage { float getVisiblePercent(); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollExtent(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void initPool(); }
-keepclassmembers class android.widget.AdapterView { int getLastVisiblePosition(); }
-keepclassmembers class android.widget.AdapterView { int getPositionForView(android.view.View); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollRange(); }
-keepclassmembers class android.media.MediaCodecList { void initCodecList(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$VPage { boolean isVisible(); }
-keepclassmembers class android.media.MediaCodecList { android.media.MediaCodecInfo getNewCodecInfoAt(int); }
-keepclassmembers class android.widget.AbsListView { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.support.v7.app.AlertController { void setupView(); }
-keepclassmembers class android.widget.AbsListView { void onMeasure(int,int); }
-keepclassmembers class android.widget.AbsListView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$5 { int compare(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollDown(); }
-keepclassmembers class android.widget.AbsListView { android.view.View getSelectedView(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { boolean areErrors(); }
-keepclassmembers class java.util.DualPivotQuicksort { void sort(int[]); }
-keepclassmembers class android.widget.AdapterView { void handleDataChanged(); }
-keepclassmembers class android.widget.AdapterView { boolean isScrollableForAccessibility(); }
-keepclassmembers class java.util.DualPivotQuicksort { void sort(int[],int,int); }
-keepclassmembers class java.util.DualPivotQuicksort { void doSort(int[],int,int); }
-keepclassmembers class android.widget.AdapterView { void checkSelectionChanged(); }
-keepclassmembers class android.widget.AdapterView { int findSyncPosition(); }
-keepclassmembers class android.widget.AdapterView { void rememberSyncState(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { int getNext(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void pauseDownload(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { void onChange(ar.rulosoft.mimanganu.services.SingleDownload); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { void reset(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void removeAll(); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View,boolean,float,float); }
-keepclassmembers class java.util.DualPivotQuicksort { void dualPivotQuicksort(int[],int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { boolean removeDownload(int,android.content.Context); }
-keepclassmembers class android.widget.AbsListView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void removeDownloaded(); }
-keepclassmembers class android.widget.AbsListView { boolean isPaddingOffsetRequired(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { void setErrorIdx(int); }
-keepclassmembers class android.widget.AbsListView { int getLeftPaddingOffset(); }
-keepclassmembers class android.widget.AbsListView { int getTopPaddingOffset(); }
-keepclassmembers class android.widget.AbsListView { int getRightPaddingOffset(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void resumeDownloads(android.content.Context); }
-keepclassmembers class android.widget.AbsListView { void keyPressed(); }
-keepclassmembers class android.widget.AbsListView { int getBottomPaddingOffset(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void retryError(android.content.Context); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { android.widget.RemoteViews applyStandardTemplate(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,int,int,int,boolean); }
-keepclassmembers class android.widget.AbsListView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.app.Notification$MediaStyle { android.widget.RemoteViews makeMediaContentView(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { boolean hasDownloadsPending(); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Float evaluate(float,java.lang.Number,java.lang.Number); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void onChange(ar.rulosoft.mimanganu.services.SingleDownload); }
-keepclassmembers class java.util.Hashtable$HashIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class android.app.Notification$MediaStyle { android.widget.RemoteViews makeMediaBigContentView(); }
-keepclassmembers class java.util.Hashtable$HashIterator { java.util.Hashtable$HashtableEntry nextEntry(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void retryError(android.content.Context,ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.services.ChapterDownload$OnErrorListener); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenu(float,float,int); }
-keepclassmembers class java.util.Hashtable$HashIterator { java.util.Hashtable$HashtableEntry nextEntryNotFailFast(); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.AbsListView { int pointToPosition(int,int); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class android.content.Intent { android.content.Intent addFlags(int); }
-keepclassmembers class android.widget.AbsListView { boolean startScrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <init>(android.content.Context); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void updateScroll(float); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void adjustDuration(int,int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startScroll(int,int,int); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { int getCacheVersion(); }
-keepclassmembers class android.view.GestureDetector { void init(android.content.Context); }
-keepclassmembers class android.widget.AbsListView { void scrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startSpringback(int,int,int); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void <clinit>(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fling(int,int,int,int,int); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { int calculateTopPadding(android.content.Context); }
-keepclassmembers class android.view.GestureDetector { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { android.widget.RemoteViews applyStandardTemplateWithActions(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,int,int,int,boolean,java.util.ArrayList); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { float getPixelSize(); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { float constrain(float,float,float); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineDeceleration(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineFlingDistance(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int getSplineFlingDuration(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fitOnBounceCurve(int,int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startBounceAfterEdge(int,int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startAfterEdge(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int applyAlpha(int,float); }
-keepclassmembers class android.view.animation.ScaleAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { android.graphics.Bitmap createIconWithBackground(android.content.Context,int,int,int,int); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference { void onBindViewHolder(android.support.v7.preference.PreferenceViewHolder); }
-keepclassmembers class android.widget.AbsListView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.content.Intent { void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.view.animation.ScaleAnimation { float resolveScale(float,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStrokeInternal(int,int,float,float); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean continueWhenFinished(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void onEdgeReached(); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference { boolean onKey(android.view.View,int,android.view.KeyEvent); }
-keepclassmembers class android.view.GestureDetector { boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class android.widget.AbsListView { void onTouchDown(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference { void onProgressChanged(android.widget.SeekBar,int,boolean); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean update(); }
-keepclassmembers class android.widget.AbsListView { void onTouchMove(android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int modulateAlpha(int); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Writer { void <init>(int,boolean,okio.Buffer); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Writer { void adjustDynamicTableByteCount(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { android.widget.RemoteViews generateContentViewMedia(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,int,java.util.List,int[],boolean,android.app.PendingIntent,boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Writer { int evictToRecoverBytes(int); }
-keepclassmembers class android.widget.AbsListView { void onTouchUp(android.view.MotionEvent); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Writer { void clearDynamicTable(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Writer { void insertIntoDynamicTable(okhttp3.internal.http2.Header); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class java.util.StringTokenizer { boolean hasMoreTokens(); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Writer { void writeHeaders(java.util.List); }
-keepclassmembers class java.util.StringTokenizer { java.lang.String nextToken(); }
-keepclassmembers class android.widget.AbsListView { void onTouchCancel(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <clinit>(); }
-keepclassmembers class android.content.Intent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.AbsListView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { android.widget.RemoteViews generateMediaBigView(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,int,int,java.util.List,boolean,android.app.PendingIntent,boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.widget.AbsListView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Writer { void writeInt(int,int,int); }
-keepclassmembers class android.widget.AbsListView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.widget.AbsListView { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { void overrideMediaBigContentView(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,int,int,java.util.List,boolean,android.app.PendingIntent,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.app.TwilightCalculator { void calculateTwilight(long,double,double); }
-keepclassmembers class android.widget.AbsListView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean ensureValidRect(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.content.Intent { boolean migrateExtraStreamToClipData(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean$Builder { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,int,java.lang.CharSequence,boolean,android.os.Bundle,java.lang.String,boolean,java.lang.String,android.widget.RemoteViews,android.widget.RemoteViews); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollList(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getChangingConfigurations(); }
-keepclassmembers class okhttp3.internal.http.HttpDate { java.util.Date parse(java.lang.String); }
-keepclassmembers class android.graphics.Paint { void <init>(int); }
-keepclassmembers class android.widget.AbsListView { boolean trackMotionScroll(int,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$3 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous,android.view.MotionEvent,float,float); }
-keepclassmembers class android.graphics.Paint { void setCompatibilityScaling(float); }
-keepclassmembers class android.graphics.Paint { boolean isAntiAlias(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawablePadding(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.Paint { boolean isDither(); }
-keepclassmembers class okhttp3.internal.http2.Settings { int getHeaderTableSize(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$3 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class okhttp3.internal.http2.Settings { int getInitialWindowSize(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class okhttp3.internal.http2.Settings { boolean isSet(int); }
-keepclassmembers class okhttp3.internal.http2.Settings { int getMaxConcurrentStreams(int); }
-keepclassmembers class android.widget.AbsListView { int reconcileSelectedPosition(); }
-keepclassmembers class android.widget.AbsListView { int findClosestMotionRow(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateDrawableCorners(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.Paint { boolean isFilterBitmap(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class okhttp3.internal.http2.Settings { okhttp3.internal.http2.Settings set(int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableStroke(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicHeight(); }
-keepclassmembers class okhttp3.internal.http2.Settings { void merge(okhttp3.internal.http2.Settings); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { java.util.ArrayList getMangasFromFrontpage(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelection(); }
-keepclassmembers class okhttp3.internal.http2.Settings { int getMaxFrameSize(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableGradient(android.content.res.Resources,android.content.res.TypedArray); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { int setExtra(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.widget.AbsListView { void confirmCheckedPositionsById(); }
-keepclassmembers class java.util.Grego { boolean isLeapYear(int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int getThreadDefaultConnectionFlags(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.widget.AbsListView { void handleDataChanged(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSolid(android.content.res.TypedArray); }
-keepclassmembers class java.util.Grego { int[] dayToFields(long,int[]); }
-keepclassmembers class android.graphics.Paint { float measureText(char[],int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSize(android.content.res.TypedArray); }
-keepclassmembers class android.support.v7.app.TwilightManager { android.location.Location getLastKnownLocation(); }
-keepclassmembers class java.util.Grego { long floorDivide(long,long,long[]); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence); }
-keepclassmembers class android.widget.AbsListView { void positionPopup(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.Paint { float measureText(java.lang.String); }
-keepclassmembers class android.support.v7.app.TwilightManager { boolean isStateValid(); }
-keepclassmembers class android.util.Rational { void <init>(int,int); }
-keepclassmembers class android.support.v7.app.TwilightManager { void updateState(android.location.Location); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { boolean deleteDatabase(java.io.File); }
-keepclassmembers class android.widget.AbsListView { int getDistance(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { int[] append(int[],int,int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void reopenReadWrite(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int[] extractStateSet(android.util.AttributeSet); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { java.lang.String decode(byte[],char[],int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaque(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(android.graphics.drawable.VectorDrawable$VGroup,android.util.ArrayMap); }
-keepclassmembers class android.util.Rational { int gcd(int,int); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { java.lang.Object[] append(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class java.nio.FileChannelImpl$1 { int compare(java.nio.channels.FileLock,java.nio.channels.FileLock); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.util.Rational { int compareTo(android.util.Rational); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { int growSize(int); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { void encode(byte[],int,java.lang.String); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { long countBytes(java.lang.String,boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void updateLocalMatrix(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { byte[] encode(java.lang.String); }
-keepclassmembers class java.io.RandomAccessFile { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.app.BackStackState { void <init>(android.app.FragmentManagerImpl,android.app.BackStackRecord); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeSpansAt(android.text.Editable,int,java.lang.Object[]); }
-keepclassmembers class android.widget.AbsListView { void setCacheColorHint(int); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(java.lang.String,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(char[],int,int,int,int,int); }
-keepclassmembers class java.io.RandomAccessFile { void readFully(byte[],int,int); }
-keepclassmembers class android.widget.AbsListView { void setSelectionFromTop(int,int); }
-keepclassmembers class java.io.RandomAccessFile { void seek(long); }
-keepclassmembers class android.app.BackStackState { android.app.BackStackRecord instantiate(android.app.FragmentManagerImpl); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl { void onAnimationUpdate(android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.String,int,int,int,int,int); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(int[][],int[]); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int); }
-keepclassmembers class android.content.res.ColorStateList { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void setAlpha(float); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { okio.Source getTransferStream(okhttp3.Response); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { float getAlpha(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { okio.Sink createRequestBody(okhttp3.Request,long); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { boolean isReadOnlyLocked(); }
-keepclassmembers class android.content.res.ColorStateList { int getColorForState(int[],int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { boolean recursiveCanApplyTheme(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void init(android.view.View); }
-keepclassmembers class android.content.res.ColorStateList { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void disableWriteAheadLogging(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void recursiveApplyTheme(android.graphics.drawable.VectorDrawable$VGroup,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void drawGroupTree(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.widget.EdgeEffect { void setSize(int,int); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { void writeRequest(okhttp3.Headers,java.lang.String); }
-keepclassmembers class android.widget.EdgeEffect { void onPull(float,float); }
-keepclassmembers class android.widget.EdgeEffect { void <init>(android.content.Context); }
-keepclassmembers class android.widget.EdgeEffect { void onAbsorb(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void drawPath(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.drawable.VectorDrawable$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.widget.EdgeEffect { boolean draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.Matrix { void checkPointArrays(float[],int,float[],int,int); }
-keepclassmembers class libcore.io.Memory { int peekInt(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void doHide(boolean); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch$GestureListener { boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class android.widget.EdgeEffect { void update(); }
-keepclassmembers class android.widget.EdgeEffect { int getMaxHeight(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void doShow(boolean); }
-keepclassmembers class libcore.io.Memory { long peekLong(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[]); }
-keepclassmembers class java.util.jar.JarFile { boolean endsWithIgnoreCase(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.io.Memory { short peekShort(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class java.util.jar.JarFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeAlpha(int,int); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeComponent(int,int,int,int,int); }
-keepclassmembers class android.graphics.Matrix { void mapVectors(float[]); }
-keepclassmembers class libcore.io.Memory { void pokeInt(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int setAlphaComponent(int,int); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl { boolean isRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class libcore.io.Memory { void pokeLong(byte[],int,long,java.nio.ByteOrder); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void <init>(java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class libcore.io.Memory { void pokeShort(byte[],int,short,java.nio.ByteOrder); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readHeader(); }
-keepclassmembers class org.acra.file.LastModifiedComparator { int compare(java.io.File,java.io.File); }
-keepclassmembers class okio.AsyncTimeout { okio.AsyncTimeout awaitTimeout(); }
-keepclassmembers class okio.AsyncTimeout { long remainingNanos(long); }
-keepclassmembers class okio.AsyncTimeout { void scheduleTimeout(okio.AsyncTimeout,long,boolean); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setDisplayOptions(int,int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readIndex(libcore.io.BufferIterator,int,int); }
-keepclassmembers class okio.AsyncTimeout { void enter(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void add(android.view.View); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { void forceUniformWidth(int,int); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class android.net.Uri { java.lang.String toSafeString(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { java.lang.Object next(); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { boolean tryOnMeasure(int,int); }
-keepclassmembers class java.lang.Enum { int hashCode(); }
-keepclassmembers class android.widget.SpellChecker { void resetSession(); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class java.lang.Enum { java.lang.Enum valueOf(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.SpellChecker { void closeSession(); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float o(float,float); }
-keepclassmembers class android.widget.SpellChecker { int nextSpellCheckSpanIndex(); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class android.widget.SpellChecker { void addSpellCheckSpan(android.text.Editable,int,int); }
-keepclassmembers class android.net.Uri { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.InputStreamReader { int read(char[],int,int); }
-keepclassmembers class okhttp3.internal.http2.Huffman$Node { void <init>(int,int); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(int,int); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$ViewPositionComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class okhttp3.Dispatcher { int runningCallsForHost(okhttp3.RealCall$AsyncCall); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getThemeAttrColor(android.content.Context,int,float); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspaceOrForwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent,boolean); }
-keepclassmembers class com.squareup.duktape.Duktape { com.squareup.duktape.Duktape create(); }
-keepclassmembers class okhttp3.Dispatcher { int runningCallsCount(); }
-keepclassmembers class com.squareup.duktape.Duktape { void close(); }
-keepclassmembers class android.text.method.BaseKeyListener { int makeTextContentType(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class java.lang.Throwable { int countDuplicates(java.lang.StackTraceElement[],java.lang.StackTraceElement[]); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { java.lang.CharSequence invertCharSequenceColors(java.lang.CharSequence); }
-keepclassmembers class okhttp3.FormBody { long writeOrCountBytes(okio.BufferedSink,boolean); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { android.text.style.TextAppearanceSpan processTextAppearanceSpan(android.text.style.TextAppearanceSpan); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { int processColor(int); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.animation.AnimatorSet { void playTogether(android.animation.Animator[]); }
-keepclassmembers class com.android.internal.util.ImageUtils { boolean isGrayscale(android.graphics.Bitmap); }
-keepclassmembers class android.animation.AnimatorSet { void playSequentially(android.animation.Animator[]); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void startIfReady(android.animation.Animator); }
-keepclassmembers class com.android.internal.util.ImageUtils { boolean isGrayscale(int); }
-keepclassmembers class android.app.RemoteInput$Builder { void setFlag(int,boolean); }
-keepclassmembers class android.animation.AnimatorSet { int getChangingConfigurations(); }
-keepclassmembers class java.lang.VMClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class java.lang.VMClassLoader { java.util.List getResources(java.lang.String); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void assignSpans(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,boolean); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void cachePreLayoutSpanMapping(); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { boolean hasBody(okhttp3.Response); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector { org.json.JSONObject collectCapabilitiesForType(android.media.MediaCodecInfo,java.lang.String); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { int[] calculateItemBorders(int[],int,int); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet setDuration(long); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { int parseSeconds(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void ensureAnchorIsInCorrectSpan(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { int skipUntil(java.lang.String,int,java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Hpack { okio.ByteString checkLowercase(okio.ByteString); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { int skipWhitespace(java.lang.String,int); }
-keepclassmembers class okhttp3.internal.http2.Hpack { java.util.Map nameToFirstIndex(); }
-keepclassmembers class android.animation.AnimatorSet { void start(); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector { org.acra.model.Element collectMediaCodecList(); }
-keepclassmembers class android.view.GhostView { void setGhostedVisibility(int); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void guessMeasurement(float,int); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void measureChild(android.view.View,int,boolean); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector { org.acra.collector.MediaCodecListCollector$CodecType identifyCodecType(android.media.MediaCodecInfo); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInRelativeDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.view.FocusFinder { void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void updateMeasurements(); }
-keepclassmembers class android.view.GhostView { android.view.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix); }
-keepclassmembers class libcore.io.IoBridge { void connectErrno(java.io.FileDescriptor,java.net.InetAddress,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters { java.lang.Integer doInBackground(java.lang.Void[]); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet clone(); }
-keepclassmembers class android.view.GhostView { int moveGhostViewsToTop(android.view.ViewGroup,java.util.ArrayList); }
-keepclassmembers class android.view.FocusFinder { android.view.View getNextFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class ar.rulosoft.custompref.NumPickDialogPref { void onBindDialogView(android.view.View); }
-keepclassmembers class android.view.FocusFinder { android.view.View getPreviousFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class okhttp3.internal.http.StatusLine { okhttp3.internal.http.StatusLine parse(java.lang.String); }
-keepclassmembers class android.view.GhostView { int getInsertIndex(android.view.ViewGroup,java.util.ArrayList,java.util.ArrayList,int); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { android.view.View findReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int,int); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector { void prepare(); }
-keepclassmembers class android.view.FocusFinder { int getWeightedDistanceFor(int,int); }
-keepclassmembers class android.view.GhostView { boolean isOnTop(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters { void onProgressUpdate(java.lang.Integer[]); }
-keepclassmembers class android.animation.AnimatorSet { void sortNodes(); }
-keepclassmembers class android.view.GhostView { boolean isOnTop(android.view.View,android.view.View); }
-keepclassmembers class android.app.ActivityTransitionState { int addExitTransitionCoordinator(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.animation.ArgbEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { int getSpaceForSpanRange(int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int clamp(int,int,int); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { long read(okio.Buffer,long); }
-keepclassmembers class android.animation.AnimatorSet { boolean canReverse(); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getVerticalScrollFactorCompat(); }
-keepclassmembers class android.view.FocusFinder { int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.os.Looper { void loop(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean inChild(int,int); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isWithinDeltaOfScreen(android.view.View,int,int); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void layoutChunk(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$LayoutState,android.support.v7.widget.LinearLayoutManager$LayoutChunkResult); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]); }
-keepclassmembers class java.io.ByteArrayOutputStream { void expand(int); }
-keepclassmembers class libcore.io.IoBridge { java.io.FileDescriptor open(java.lang.String,int); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(int); }
-keepclassmembers class libcore.io.IoBridge { void write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void computeScroll(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollRange(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void fling(int); }
-keepclassmembers class android.animation.LayoutTransition { void runChangeTransition(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int getScrollRange(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.animation.LayoutTransition { void setupChangeAnimation(android.view.ViewGroup,int,android.animation.Animator,long,android.view.View); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class okhttp3.internal.http2.Header { void <init>(okio.ByteString,okio.ByteString); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { android.view.View onFocusSearchFailed(android.view.View,int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class okhttp3.internal.http2.Header { int hashCode(); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Enum); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { void setFlag(int,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class java.net.PlainSocketImpl { java.net.Socks4Message socksReadReply(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onMeasure(int,int); }
-keepclassmembers class android.animation.LayoutTransition { void layoutChange(android.view.ViewGroup); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class java.net.PlainSocketImpl { void write(byte[],int,int); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float a(float,float); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class android.animation.LayoutTransition { long access$314(android.animation.LayoutTransition,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void describe(java.lang.StringBuilder,boolean); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object get(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void setMeasuredDimension(android.graphics.Rect,int,int); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class ar.rulosoft.mimanganu.services.BootAndUpdateReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources); }
-keepclassmembers class okhttp3.Cookie { int dateCharacterOffset(java.lang.String,int,int,boolean); }
-keepclassmembers class okhttp3.Cookie { boolean domainMatch(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class okio.Okio$1 { void write(okio.Buffer,long); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void scrollTo(int,int); }
-keepclassmembers class okhttp3.Cookie { okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void addBitmapMemory(android.graphics.Bitmap); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void smoothScrollBy(int,int); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void increment(int); }
-keepclassmembers class okhttp3.Cookie { long parseExpires(java.lang.String,int,int); }
-keepclassmembers class okhttp3.Cookie { java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String toString(); }
-keepclassmembers class java.util.jar.ManifestReader { void readName(); }
-keepclassmembers class okhttp3.Cookie { long parseMaxAge(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int hashIntArray(int[]); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout { int hashCode(); }
-keepclassmembers class okhttp3.Cookie { int hashCode(); }
-keepclassmembers class java.util.jar.ManifestReader { void readValue(); }
-keepclassmembers class okhttp3.Cookie { java.lang.String toString(boolean); }
-keepclassmembers class okhttp3.Cookie { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$AddAllMangaInDirectoryTask { java.lang.Void doInBackground(java.lang.String[]); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { boolean getContentRect(android.graphics.Rect); }
-keepclassmembers class android.text.InputFilter$LengthFilter { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$3 { void run(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { int setExtra(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void onMeasure(int,int); }
-keepclassmembers class okio.RealBufferedSource { boolean exhausted(); }
-keepclassmembers class okio.RealBufferedSource { boolean rangeEquals(long,okio.ByteString,int,int); }
-keepclassmembers class okio.RealBufferedSource { long indexOf(byte,long,long); }
-keepclassmembers class android.support.graphics.drawable.PathParser { float[] copyOfRange(float[],int,int); }
-keepclassmembers class okio.RealBufferedSource { long read(okio.Buffer,long); }
-keepclassmembers class android.support.graphics.drawable.PathParser { android.support.graphics.drawable.PathParser$PathDataNode[] deepCopyNodes(android.support.graphics.drawable.PathParser$PathDataNode[]); }
-keepclassmembers class android.support.graphics.drawable.PathParser { android.support.graphics.drawable.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String); }
-keepclassmembers class okio.RealBufferedSource { void readFully(byte[]); }
-keepclassmembers class android.support.graphics.drawable.PathParser { float[] getFloats(java.lang.String); }
-keepclassmembers class okio.RealBufferedSource { long readHexadecimalUnsignedLong(); }
-keepclassmembers class android.support.graphics.drawable.PathParser { void extract(java.lang.String,int,android.support.graphics.drawable.PathParser$ExtractFloatResult); }
-keepclassmembers class android.support.graphics.drawable.PathParser { int nextStart(java.lang.String,int); }
-keepclassmembers class android.widget.Spinner { int getBaseline(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$ChunkedSource { void readChunkSize(); }
-keepclassmembers class okio.RealBufferedSource { boolean request(long); }
-keepclassmembers class android.widget.Spinner { void layout(int,boolean); }
-keepclassmembers class android.text.method.MultiTapKeyListener { android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class android.app.TaskStackBuilder { android.content.Intent[] getIntents(); }
-keepclassmembers class okio.RealBufferedSource { java.lang.String readUtf8LineStrict(long); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$ChunkedSource { long read(okio.Buffer,long); }
-keepclassmembers class android.widget.Spinner { void setUpChild(android.view.View,boolean); }
-keepclassmembers class java.util.concurrent.CountDownLatch$Sync { boolean tryReleaseShared(int); }
-keepclassmembers class okio.RealBufferedSource { void skip(long); }
-keepclassmembers class android.text.method.MultiTapKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.Spinner { int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <clinit>(); }
-keepclassmembers class rapid.decoder.ResourceBitmapLoader$Identifier { int hashCode(); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void removeTimeouts(android.text.Spannable); }
-keepclassmembers class android.support.v4.util.MapCollections$EntrySet { int hashCode(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void inheritValues(java.lang.ThreadLocal$Values); }
-keepclassmembers class java.text.SimpleDateFormat { void validatePattern(java.lang.String); }
-keepclassmembers class rapid.decoder.BitmapDecoder$ScaleBy { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.ThreadLocal$Values { void initializeTable(int); }
-keepclassmembers class rapid.decoder.BitmapDecoder$ScaleBy { int hashCode(); }
-keepclassmembers class android.view.InputEvent { boolean isFromSource(int); }
-keepclassmembers class java.lang.ThreadLocal$Values { void cleanUp(); }
-keepclassmembers class java.lang.ThreadLocal$Values { boolean rehash(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplBase { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer formatImpl(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition,java.util.List); }
-keepclassmembers class java.lang.ThreadLocal$Values { void add(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class java.lang.ThreadLocal$Values { void put(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class android.text.AndroidBidi { int bidi(int,char[],byte[],int,boolean); }
-keepclassmembers class java.text.SimpleDateFormat { void append(java.lang.StringBuffer,java.text.FieldPosition,java.util.List,char,int); }
-keepclassmembers class android.app.Dialog { void show(); }
-keepclassmembers class java.lang.ThreadLocal$Values { java.lang.Object getAfterMiss(java.lang.ThreadLocal); }
-keepclassmembers class java.lang.ThreadLocal$Values { int next(int); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.lang.String canonicalizeHost(java.lang.String,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { void appendMonth(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class okhttp3.HttpUrl$Builder { boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.text.AndroidBidi { android.text.Layout$Directions directions(int,byte[],int,char[],int,int); }
-keepclassmembers class java.text.SimpleDateFormat { void appendMilliseconds(java.lang.StringBuffer,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { void appendNumericTimeZone(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.net.InetAddress decodeIpv6(java.lang.String,int,int); }
-keepclassmembers class okhttp3.CertificatePinner { void check(java.lang.String,java.util.List); }
-keepclassmembers class java.text.SimpleDateFormat { int parse(java.lang.String,int,char,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getOID(int[]); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.lang.String inet6AddressToAscii(byte[]); }
-keepclassmembers class okhttp3.CertificatePinner { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void addOID(org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class java.text.SimpleDateFormat { int parseFractionalSeconds(java.lang.String,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void pop(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int portColonOffset(java.lang.String,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { int hashIntArray(int[]); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void push(java.lang.String,int,int,boolean,boolean); }
-keepclassmembers class java.text.SimpleDateFormat { java.util.Date parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.support.v7.widget.ViewBoundsCheck { android.view.View findOneViewWithinBoundFlags(int,int,int,int); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void resolvePath(java.lang.String,int,int); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int schemeDelimiterOffset(java.lang.String,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.Number parseNumber(int,java.lang.String,java.text.ParsePosition); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int slashCount(java.lang.String,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { int parseNumber(int,java.lang.String,int,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { int parseText(java.lang.String,int,java.lang.String[],int); }
-keepclassmembers class java.text.SimpleDateFormat { int parseTimeZone(java.lang.String,int); }
-keepclassmembers class java.util.Vector { void addElement(java.lang.Object); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class java.util.Vector { void growByOne(); }
-keepclassmembers class okhttp3.MultipartBody { java.lang.StringBuilder appendQuotedString(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class okhttp3.MultipartBody { long writeOrCountBytes(okio.BufferedSink,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObservable { void notifyChanged(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObservable { void notifyItemRangeChanged(int,int,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObservable { void notifyItemMoved(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObservable { void notifyItemRangeInserted(int,int); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder reencodeForUri(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObservable { void notifyItemRangeRemoved(int,int); }
-keepclassmembers class okhttp3.MultipartBody { long contentLength(); }
-keepclassmembers class org.acra.collector.SettingsCollector { org.acra.model.Element collectGlobalSettings(); }
-keepclassmembers class okio.Util { boolean arrayRangeEquals(byte[],int,byte[],int,int); }
-keepclassmembers class okio.Util { void checkOffsetAndCount(long,long,long); }
-keepclassmembers class okio.Util { int reverseBytesInt(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsRead { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class okio.Util { short reverseBytesShort(short); }
-keepclassmembers class android.graphics.FontListParser { void skip(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.acra.collector.SettingsCollector { org.acra.model.Element collectSystemSettings(); }
-keepclassmembers class org.acra.collector.SettingsCollector { org.acra.model.Element collectSecureSettings(); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.IntKeyframeSet clone(); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader$ContinuationSource { long read(okio.Buffer,long); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader$ContinuationSource { void readContinuationHeader(); }
-keepclassmembers class android.text.method.Touch { void scrollTo(android.widget.TextView,android.text.Layout,int,int); }
-keepclassmembers class android.animation.IntKeyframeSet { int getIntValue(float); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void close(); }
-keepclassmembers class android.text.method.Touch { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.lang.Object transfer(java.lang.Object,boolean,long); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.util.concurrent.SynchronousQueue$TransferStack$SNode awaitFulfill(java.util.concurrent.SynchronousQueue$TransferStack$SNode,boolean,long); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean isFulfilling(int); }
-keepclassmembers class android.text.method.TextKeyListener { void <clinit>(); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class android.text.method.TextKeyListener { void updatePrefs(android.content.ContentResolver); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState { void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void checkValidJavaClassName(java.lang.String); }
-keepclassmembers class android.transition.Transition { boolean isValidTarget(android.view.View); }
-keepclassmembers class okio.SegmentedByteString { void <init>(okio.Buffer,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float cross(float,float,float,float); }
-keepclassmembers class okio.SegmentedByteString { int segment(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void drawGroupTree(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void log(int,java.lang.String,java.lang.Throwable); }
-keepclassmembers class okio.SegmentedByteString { boolean rangeEquals(int,okio.ByteString,int,int); }
-keepclassmembers class android.view.KeyCharacterMap { void addDeadKey(int,int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void drawPath(android.support.graphics.drawable.VectorDrawableCompat$VGroup,android.support.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel); }
-keepclassmembers class android.transition.Transition { void captureValues(android.view.ViewGroup,boolean); }
-keepclassmembers class android.view.KeyCharacterMap { int get(int,int); }
-keepclassmembers class android.view.KeyCharacterMap { int getDeadChar(int,int); }
-keepclassmembers class android.support.v4.view.animation.LookupTableInterpolator { void <init>(float[]); }
-keepclassmembers class okio.SegmentedByteString { int size(); }
-keepclassmembers class android.support.v4.view.animation.LookupTableInterpolator { float getInterpolation(float); }
-keepclassmembers class okio.SegmentedByteString { byte[] toByteArray(); }
-keepclassmembers class java.util.zip.InflaterInputStream { long skip(long); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float getMatrixScale(android.graphics.Matrix); }
-keepclassmembers class android.transition.Transition { void captureHierarchy(android.view.View,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void setAlpha(float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { float getAlpha(); }
-keepclassmembers class org.acra.util.ApplicationStartupProcessor { boolean hasNonSilentApprovedReports(java.io.File[]); }
-keepclassmembers class org.acra.util.ApplicationStartupProcessor { void deleteUnsentReportsFromOldAppVersion(); }
-keepclassmembers class android.app.ProgressDialog$1 { void handleMessage(android.os.Message); }
-keepclassmembers class okhttp3.internal.http.CallServerInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView { boolean isOutOfBounds(int,int); }
-keepclassmembers class android.text.method.DialerKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class android.util.LongSparseArray { void gc(); }
-keepclassmembers class android.util.LongSparseArray { void put(long,java.lang.Object); }
-keepclassmembers class android.widget.Editor { void destroyDisplayListsData(); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence get(int); }
-keepclassmembers class android.util.LongSparseArray { void clear(); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingLeftWithForeground(); }
-keepclassmembers class android.widget.Editor { void showError(); }
-keepclassmembers class android.util.LongSparseArray { java.lang.String toString(); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingRightWithForeground(); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingTopWithForeground(); }
-keepclassmembers class android.transition.Transition { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.FrameLayout { void onMeasure(int,int); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingBottomWithForeground(); }
-keepclassmembers class android.widget.Editor { int getErrorX(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void forceUniformHeight(int,int); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$2 { void run(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void forceUniformWidth(int,int); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence applyStyles(java.lang.String,int[],android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.widget.Editor { int getErrorY(); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.FrameLayout { void layoutChildren(int,int,int,int,boolean); }
-keepclassmembers class android.widget.FrameLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawHorizontalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawVerticalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawDividersVertical(android.graphics.Canvas); }
-keepclassmembers class android.widget.Editor { void adjustInputType(boolean,boolean,boolean,boolean); }
-keepclassmembers class android.widget.Editor { void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void drawDividersHorizontal(android.graphics.Canvas); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String validate(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.widget.Editor { boolean selectCurrentWord(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getBaseline(); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi21$Builder { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.lang.String,java.util.ArrayList,android.os.Bundle,int,int,android.app.Notification,java.lang.String,boolean,java.lang.String,android.widget.RemoteViews,android.widget.RemoteViews,android.widget.RemoteViews); }
-keepclassmembers class libcore.net.UriCodec { void validateSimple(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Editor { long getCharRange(int); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { void <init>(android.text.method.MultiTapKeyListener,android.text.Editable); }
-keepclassmembers class libcore.net.UriCodec { void appendEncoded(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset,boolean); }
-keepclassmembers class android.content.res.StringBlock { void addParagraphSpan(android.text.Spannable,java.lang.Object,int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean hasDividerBeforeChildAt(int); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String decode(java.lang.String,boolean,java.nio.charset.Charset,boolean); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String subtag(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor(java.lang.Class[],boolean); }
-keepclassmembers class libcore.net.UriCodec { int hexToInt(char); }
-keepclassmembers class android.widget.Editor { boolean isPositionOnText(float,float); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void layoutHorizontal(int,int,int,int); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String encode(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructorInternal(java.lang.Class[]); }
-keepclassmembers class java.lang.Class { void getDeclaredConstructors(boolean,java.util.List); }
-keepclassmembers class android.widget.Editor { void downgradeEasyCorrectionSpans(); }
-keepclassmembers class libcore.net.UriCodec { void appendHex(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[],boolean); }
-keepclassmembers class android.widget.Editor { void sendOnTextChanged(int,int); }
-keepclassmembers class android.widget.Editor { void beginBatchEdit(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void layoutVertical(int,int,int,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getPublicMethodRecursive(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.widget.Editor { boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethodInternal(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.support.v4.util.LogWriter { void write(char[],int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method[] getDeclaredMethods(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.lang.Class { void getDeclaredMethodsUnchecked(boolean,java.util.List); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void show(); }
-keepclassmembers class java.lang.Class { void getPublicMethodsInternal(java.util.List); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHotspotX(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCursorOffset(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onMeasure(int,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field[] getDeclaredFields(); }
-keepclassmembers class android.widget.Editor { void endBatchEdit(); }
-keepclassmembers class java.lang.Class { void getDeclaredFieldsUnchecked(boolean,java.util.List); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field[] getFields(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.ArtField findByName(java.lang.String,java.lang.reflect.ArtField[]); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { java.lang.Object colGetEntry(int,int); }
-keepclassmembers class java.lang.Class { void getPublicFieldsRecursive(java.util.List); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.widget.Editor { void drawHardwareAccelerated(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureHorizontal(int,int); }
-keepclassmembers class ar.rulosoft.navegadores.CFInterceptor { okhttp3.Response resolveOverCF(okhttp3.Interceptor$Chain,okhttp3.Response); }
-keepclassmembers class android.widget.Editor { int getAvailableDisplayListIndex(int[],int,int); }
-keepclassmembers class android.view.View$ScrollabilityCache { void setFadeColor(int); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getInterfaces(); }
-keepclassmembers class android.support.v4.app.RemoteInputCompatApi20 { android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]); }
-keepclassmembers class java.lang.Class { int getModifiers(); }
-keepclassmembers class java.lang.Class { java.lang.String getSimpleName(); }
-keepclassmembers class android.widget.Editor { void drawCursor(android.graphics.Canvas,int); }
-keepclassmembers class android.widget.Editor { void updateCursorsPositions(); }
-keepclassmembers class android.widget.Editor { void invalidateTextDisplayList(); }
-keepclassmembers class java.lang.Class { boolean isEnum(); }
-keepclassmembers class java.lang.Class { boolean isProxy(); }
-keepclassmembers class java.lang.Class { boolean isInterface(); }
-keepclassmembers class java.lang.Class { boolean isAnnotation(); }
-keepclassmembers class java.lang.Class { boolean isAssignableFrom(java.lang.Class); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void acquireConnection(java.lang.String,int,android.os.CancellationSignal); }
-keepclassmembers class android.widget.Editor { boolean isCursorInsideEasyCorrectionSpan(); }
-keepclassmembers class java.util.Hashtable { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void releaseConnection(); }
-keepclassmembers class java.util.Hashtable { int capacityForInitSize(int); }
-keepclassmembers class android.widget.Editor { void updateCursorPosition(int,int,int,float); }
-keepclassmembers class java.util.Hashtable { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$ShadowDelegateImpl { float getRadius(); }
-keepclassmembers class java.util.Hashtable { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.Editor { void onDrop(android.view.DragEvent); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$ShadowDelegateImpl { void setShadowPadding(int,int,int,int); }
-keepclassmembers class java.util.Hashtable { void constructorPut(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] makeTable(int); }
-keepclassmembers class android.widget.Editor { void makeBlink(); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] doubleCapacity(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void getSortedViews(android.view.View[],int[]); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { java.util.ArrayDeque findRoots(int[]); }
-keepclassmembers class org.acra.builder.ReportExecutor$TimeHelper { long getElapsedTime(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureVertical(int,int); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void clear(); }
-keepclassmembers class libcore.reflect.AnnotationFactory { libcore.reflect.AnnotationMember[] getElementsDescription(java.lang.Class); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter { ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page getPage(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class libcore.reflect.AnnotationFactory { void <init>(java.lang.Class,libcore.reflect.AnnotationMember[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$HPage$HSegment { boolean checkVisibility(); }
-keepclassmembers class android.view.DisplayEventReceiver { void scheduleVsync(); }
-keepclassmembers class android.view.animation.TranslateAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void gc(); }
-keepclassmembers class android.os.Handler { boolean sendMessageDelayed(android.os.Message,long); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$HPage$HSegment { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator { void <clinit>(); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter { void setPageScroll(float); }
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator { byte skipEntityBackward(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter { void updateDisplayType(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { void absoluteScroll(float,float); }
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator { byte skipEntityForward(); }
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator { byte skipTagBackward(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setGravity(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { void calculateParticularScale(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { void calculateParticularScale(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void put(long,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { void calculateVisibilities(); }
-keepclassmembers class java.lang.HexStringParser { void <init>(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { float getPagePosition(int); }
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator { byte skipTagForward(); }
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator { byte dirTypeBackward(); }
-keepclassmembers class java.lang.HexStringParser { long parse(java.lang.String,boolean); }
-keepclassmembers class java.lang.HexStringParser { void parseExponent(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { void goToPage(int); }
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator { byte dirTypeForward(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class java.lang.HexStringParser { void parseMantissa(java.lang.String); }
-keepclassmembers class java.lang.HexStringParser { void checkedAddExponent(long); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.String toString(); }
-keepclassmembers class java.lang.HexStringParser { void processNormalNumber(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { boolean onSingleTapConfirmed(android.view.MotionEvent); }
-keepclassmembers class java.lang.HexStringParser { void fitMantissaInDesiredWidth(int); }
-keepclassmembers class java.lang.HexStringParser { void processSubNormalNumber(); }
-keepclassmembers class java.lang.HexStringParser { void discardTrailingBits(long); }
-keepclassmembers class java.lang.HexStringParser { void round(); }
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator { int getEntryDir(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { void relativeScroll(double,double); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class java.lang.HexStringParser { int getOffset(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.jar.JarVerifier { java.util.jar.JarVerifier$VerifierEntry initEntry(java.lang.String); }
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator { int getExitDir(); }
-keepclassmembers class java.lang.Short { short reverseBytes(short); }
-keepclassmembers class java.lang.Short { java.lang.Short valueOf(short); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { int measureHeightOfChildrenCompat(int,int,int,int,int); }
-keepclassmembers class java.lang.HexStringParser { int countBitsLength(long); }
-keepclassmembers class java.lang.Short { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { void reloadImage(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { void seekPage(int); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void positionSelectorCompat(int,android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { int transformPage(int); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { java.net.InetSocketAddress nextInetSocketAddress(); }
-keepclassmembers class java.math.BigInt { void makeValid(); }
-keepclassmembers class java.util.jar.JarVerifier { boolean verify(java.util.jar.Attributes,java.lang.String,byte[],int,int,boolean,boolean); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { java.net.Proxy nextProxy(); }
-keepclassmembers class java.math.BigInt { java.lang.String checkString(java.lang.String,int); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int,int,int); }
-keepclassmembers class java.util.Arrays { int binarySearch(long[],int,int,long); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void resetNextInetSocketAddress(java.net.Proxy); }
-keepclassmembers class android.view.animation.BounceInterpolator { float bounce(float); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { void freePage(int); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class android.view.animation.BounceInterpolator { float getInterpolation(float); }
-keepclassmembers class java.math.BigInt { java.lang.String toAscii(java.lang.String,int); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { java.lang.String getPath(int); }
-keepclassmembers class java.math.BigInt { boolean twosCompFitsIntoBytes(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { void reloadImage(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { boolean onSingleTapConfirmed(android.view.MotionEvent); }
-keepclassmembers class java.util.Arrays { void fill(byte[],int,int,byte); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { void seekPage(int); }
-keepclassmembers class java.util.Arrays { void fill(char[],char); }
-keepclassmembers class java.util.Arrays { void fill(int[],int); }
-keepclassmembers class java.util.Arrays { void fill(char[],int,int,char); }
-keepclassmembers class java.util.Arrays { void fill(int[],int,int,int); }
-keepclassmembers class android.os.Environment$UserEnvironment { void <init>(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { int transformPage(int); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class java.lang.reflect.Method { int hashCode(); }
-keepclassmembers class java.util.Arrays { int hashCode(int[]); }
-keepclassmembers class java.util.Arrays { int hashCode(byte[]); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],java.lang.Object); }
-keepclassmembers class android.view.View$MeasureSpec { int makeMeasureSpec(int,int); }
-keepclassmembers class android.view.View$MeasureSpec { int adjust(int,int); }
-keepclassmembers class android.view.View$MeasureSpec { int getSize(int); }
-keepclassmembers class java.util.Arrays { int hashCode(java.lang.Object[]); }
-keepclassmembers class java.util.Arrays { boolean equals(byte[],byte[]); }
-keepclassmembers class android.view.View$MeasureSpec { int getMode(int); }
-keepclassmembers class android.widget.PopupWindow { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Arrays { boolean equals(int[],int[]); }
-keepclassmembers class java.util.Arrays { boolean equals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class java.util.Arrays { boolean equals(boolean[],boolean[]); }
-keepclassmembers class android.support.v7.util.DiffUtil { android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback,boolean); }
-keepclassmembers class java.util.logging.LogRecord { void <init>(java.util.logging.Level,java.lang.String); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] emptyArray(java.lang.Class); }
-keepclassmembers class android.support.design.widget.ViewGroupUtilsHoneycomb { void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class java.util.Arrays { void checkOffsetAndCount(int,int,int); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(boolean[]); }
-keepclassmembers class java.net.Proxy { int hashCode(); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(byte[]); }
-keepclassmembers class android.support.v7.util.DiffUtil { android.support.v7.util.DiffUtil$Snake diffPartial(android.support.v7.util.DiffUtil$Callback,int,int,int,int,int[],int[],int); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(double[]); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(float[]); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(long[]); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(short[]); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(char[]); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(int[]); }
-keepclassmembers class android.widget.PopupWindow { int computeFlags(int); }
-keepclassmembers class java.util.Arrays { java.lang.String deepToString(java.lang.Object[]); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.StringBuilder normalizeDigits(java.lang.String,boolean); }
-keepclassmembers class rapid.decoder.BitmapDecoder$Region { int hashCode(); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(java.lang.Object[]); }
-keepclassmembers class android.widget.PopupWindow { boolean findDropDownPosition(android.view.View,android.view.WindowManager$LayoutParams,int,int,int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean nonfairTryAcquire(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeHelper(java.lang.String,java.util.Map,boolean); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean tryRelease(int); }
-keepclassmembers class java.util.Arrays { void deepToStringImpl(java.lang.Object[],java.lang.Object[],java.lang.StringBuilder); }
-keepclassmembers class java.lang.Double { long doubleToLongBits(double); }
-keepclassmembers class java.lang.Double { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { int getIndex(java.lang.Object); }
-keepclassmembers class java.util.Arrays { boolean deepToStringImplContains(java.lang.Object[],java.lang.Object); }
-keepclassmembers class java.util.Arrays { byte[] copyOfRange(byte[],int,int); }
-keepclassmembers class java.lang.Double { int hashCode(); }
-keepclassmembers class java.lang.Double { boolean isInfinite(double); }
-keepclassmembers class java.util.Arrays { char[] copyOfRange(char[],int,int); }
-keepclassmembers class java.lang.Double { boolean isNaN(double); }
-keepclassmembers class android.widget.PopupWindow { int getMaxAvailableHeight(android.view.View,int,boolean); }
-keepclassmembers class java.util.Arrays { float[] copyOfRange(float[],int,int); }
-keepclassmembers class java.lang.Double { int compare(double,double); }
-keepclassmembers class java.lang.Double { java.lang.String toHexString(double); }
-keepclassmembers class java.util.Arrays { int[] copyOfRange(int[],int,int); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOfRange(java.lang.Object[],int,int); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Cover { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { boolean shouldPreserveIconSpacing(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,android.view.KeyEvent); }
-keepclassmembers class libcore.reflect.InternalNames { java.lang.Class getClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(long,int); }
-keepclassmembers class ar.rulosoft.mimanganu.services.SingleDownload { void run(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter { void setCurrentPage(int); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int); }
-keepclassmembers class dalvik.system.DalvikLogging { java.lang.String loggerNameToTag(java.lang.String); }
-keepclassmembers class android.view.MotionEvent { void recycle(); }
-keepclassmembers class android.view.MotionEvent { int getActionMasked(); }
-keepclassmembers class android.view.MotionEvent { void setTainted(boolean); }
-keepclassmembers class android.view.MotionEvent { int getActionIndex(); }
-keepclassmembers class android.view.MotionEvent { boolean isTargetAccessibilityFocus(); }
-keepclassmembers class android.view.MotionEvent { boolean isTainted(); }
-keepclassmembers class android.view.MotionEvent { void setTargetAccessibilityFocus(boolean); }
-keepclassmembers class android.view.MotionEvent { long getDownTime(); }
-keepclassmembers class android.view.MotionEvent { long getEventTime(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean isBound(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean isAdapterPositionUnknown(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean isRecyclable(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean isInvalid(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean isTmpDetached(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean isRemoved(); }
-keepclassmembers class android.view.MotionEvent { void ensureSharedTempPointerCapacity(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean shouldIgnore(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean needsUpdate(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { void <init>(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPager { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void <init>(java.util.AbstractList,int); }
-keepclassmembers class android.view.MotionEvent { void offsetLocation(float,float); }
-keepclassmembers class java.util.AbstractList$FullListIterator { java.lang.Object previous(); }
-keepclassmembers class com.fedorvlasov.lazylist.MemCache { void <init>(); }
-keepclassmembers class android.view.MotionEvent { long getHistoricalEventTime(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(byte[],int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class java.util.TreeMap$Node { int hashCode(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayoutStep1(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.lang.String getName0(java.lang.String); }
-keepclassmembers class android.view.MotionEvent { int getPointerIdBits(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int next(); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.text.HtmlToSpannedConverter { android.text.Spanned convert(); }
-keepclassmembers class android.view.DisplayInfo { void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder,int,int); }
-keepclassmembers class libcore.io.Base64 { byte[] decode(byte[],int); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent split(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readEnumerated(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int extractCountryCode(java.lang.StringBuilder,java.lang.StringBuilder); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayoutStep3(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readGeneralizedTime(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleStartTag(java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.view.MotionEvent { java.lang.String actionToString(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { void completeTransaction(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchOnItemTouch(android.view.MotionEvent); }
-keepclassmembers class android.widget.LinearLayout { void drawDividersVertical(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { void onStartEnterTransition(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String buttonStateToString(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { void startListening(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchOnItemTouchIntercept(android.view.MotionEvent); }
-keepclassmembers class android.widget.LinearLayout { void drawDividersHorizontal(android.graphics.Canvas); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPager { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.MotionEvent { boolean isButtonPressed(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void findMinMaxChildLayoutPositions(int[]); }
-keepclassmembers class android.widget.LinearLayout { void drawVerticalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.widget.LinearLayout { void drawHorizontalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.widget.LinearLayout { int getBaseline(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readUTCTime(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void addAddedFragments(android.support.v4.util.ArraySet); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.View findNextViewToFocus(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readInteger(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleP(android.text.SpannableStringBuilder); }
-keepclassmembers class android.widget.LinearLayout { boolean hasDividerBeforeChildAt(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void completeExecute(android.support.v4.app.BackStackRecord,boolean,boolean,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String maybeStripExtension(java.lang.StringBuilder); }
-keepclassmembers class android.text.HtmlToSpannedConverter { java.lang.Object getLast(android.text.Spanned,java.lang.Class); }
-keepclassmembers class android.support.v7.widget.RecyclerView { float getScrollFactor(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readOID(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void endAnimatingAwayFragments(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endFont(android.text.SpannableStringBuilder); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void executeOps(java.util.ArrayList,java.util.ArrayList,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void handleMissingPreInfoForChangeError(long,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.widget.LinearLayout { void measureVertical(int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setItalianLeadingZerosForPhoneNumber(java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void characters(char[],int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean hasUpdatedView(); }
-keepclassmembers class java.net.Inet4Address { boolean isLoopbackAddress(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isPreferredNextFocus(android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.util.DebugUtils { void buildShortClassTag(java.lang.Object,java.lang.StringBuilder); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment findFragmentUnder(android.support.v4.app.Fragment); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformWidth(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { byte[] getEncoded(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int strToInt(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int read(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void buildNationalNumberForParsing(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void makeRemovedFragmentsInvisible(android.support.v4.util.ArraySet); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readContent(); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { void <init>(android.view.View); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endHeader(android.text.SpannableStringBuilder); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean modifiesAlpha(android.view.animation.Animation); }
-keepclassmembers class android.widget.LinearLayout { void measureHorizontal(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.provider.Settings$NameValueCache { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void optimizeAndExecuteOps(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { int beginOperation(java.lang.String,java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.nio.ByteArrayBuffer { void <init>(int,byte[],int,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void pullGlows(float,float,float,float); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer compact(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void decodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class java.util.HashSet { void <init>(java.util.Collection); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean pointInView(android.view.View,float,float,float); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { boolean endOperationDeferLogLocked(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,android.support.v4.util.ArraySet); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void recoverFocusFromState(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { android.database.sqlite.SQLiteConnection$Operation getOperationLocked(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { int newOperationCookieLocked(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void releaseGlows(); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String canonicalizePath(java.lang.String,boolean); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String getSchemePrefix(java.lang.String); }
-keepclassmembers class okhttp3.CipherSuite { java.util.List forJavaNames(java.lang.String[]); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformHeight(int,int); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { boolean begin(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void requestChildOnScreen(android.view.View,android.view.View); }
-keepclassmembers class android.support.v7.widget.DialogTitle { void onMeasure(int,int); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { void close(); }
-keepclassmembers class android.widget.LinearLayout { void layoutVertical(int,int,int,int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { android.graphics.Bitmap decode(android.graphics.Rect,boolean,android.graphics.Bitmap$Config,android.graphics.BitmapFactory$Options); }
-keepclassmembers class java.util.zip.CRC32 { void update(byte[],int,int); }
-keepclassmembers class okio.Timeout { void throwIfReached(); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { int getHeight(); }
-keepclassmembers class okio.Timeout { okio.Timeout timeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { int getWidth(); }
-keepclassmembers class java.lang.RealToString { java.lang.String convertDouble(java.lang.AbstractStringBuilder,double); }
-keepclassmembers class android.widget.ScrollBarDrawable { void drawThumb(android.graphics.Canvas,android.graphics.Rect,int,int,boolean); }
-keepclassmembers class android.widget.LinearLayout { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.LinearLayout { void layoutHorizontal(int,int,int,int); }
-keepclassmembers class android.view.textservice.TextInfo { void <init>(java.lang.CharSequence,int,int,int,int); }
-keepclassmembers class java.lang.RealToString { java.lang.String convertFloat(java.lang.AbstractStringBuilder,float); }
-keepclassmembers class java.lang.Long { int compare(long,long); }
-keepclassmembers class java.lang.Long { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void clearOldPositions(); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper); }
-keepclassmembers class java.lang.RealToString { void freeFormatExponential(java.lang.AbstractStringBuilder,boolean); }
-keepclassmembers class java.lang.Long { int hashCode(); }
-keepclassmembers class java.lang.RealToString { void freeFormat(java.lang.AbstractStringBuilder,boolean); }
-keepclassmembers class libcore.net.url.UrlUtils { int findFirstOf(java.lang.String,java.lang.String,int,int); }
-keepclassmembers class java.lang.Long { long parse(java.lang.String,int,int,boolean); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayedInternal(int,java.lang.Object,java.lang.Object,long); }
-keepclassmembers class okhttp3.internal.Util { void checkOffsetAndCount(long,long,long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void considerReleasingGlowsOnScroll(int,int); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String[] concat(java.lang.String[],java.lang.String); }
-keepclassmembers class android.view.Choreographer { long getFrameTime(); }
-keepclassmembers class java.lang.Long { long highestOneBit(long); }
-keepclassmembers class android.widget.LinearLayout { void setGravity(int); }
-keepclassmembers class okhttp3.internal.Util { boolean containsInvalidHostnameAsciiCodes(java.lang.String); }
-keepclassmembers class java.lang.Long { int numberOfLeadingZeros(long); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { int allocBackStackIndex(android.support.v4.app.BackStackRecord); }
-keepclassmembers class java.lang.RealToString { void longDigitGenerator(long,int,boolean,boolean,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void defaultOnMeasure(int,int); }
-keepclassmembers class okhttp3.internal.Util { int delimiterOffset(java.lang.String,int,int,char); }
-keepclassmembers class android.view.Choreographer { void scheduleFrameLocked(long); }
-keepclassmembers class java.lang.Long { int numberOfTrailingZeros(long); }
-keepclassmembers class java.lang.Long { int bitCount(long); }
-keepclassmembers class okhttp3.internal.Util { int delimiterOffset(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchChildDetached(android.view.View); }
-keepclassmembers class android.view.Choreographer { void doFrame(long,int); }
-keepclassmembers class java.lang.Long { void <clinit>(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void <init>(java.net.URL); }
-keepclassmembers class java.lang.Long { int signum(long); }
-keepclassmembers class java.lang.RealToString { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchOnScrollStateChanged(int); }
-keepclassmembers class java.lang.Long { java.lang.Long valueOf(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchOnScrolled(int,int); }
-keepclassmembers class okhttp3.internal.Util { int indexOfControlOrNonAscii(java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { int indexOf(java.util.Comparator,java.lang.String[],java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchPendingImportantForAccessibilityChanges(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$2 { int getChildEnd(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$2 { int getChildStart(android.view.View); }
-keepclassmembers class okhttp3.internal.Util { boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[]); }
-keepclassmembers class okhttp3.internal.Util { boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.text.TextUtils { void getChars(java.lang.CharSequence,int,int,char[],int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$2 { int getParentEnd(); }
-keepclassmembers class okhttp3.internal.Util { int skipTrailingAsciiWhitespace(java.lang.String,int,int); }
-keepclassmembers class okhttp3.internal.Util { int skipLeadingAsciiWhitespace(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void draw(android.graphics.Canvas); }
-keepclassmembers class libcore.net.url.FtpURLConnection { int getReply(); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void port(); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void sendFile(); }
-keepclassmembers class android.text.TextUtils { boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureLeftGlow(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void eatRequestLayout(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureBottomGlow(); }
-keepclassmembers class android.text.TextUtils { java.lang.String substring(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureRightGlow(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void doPendingDeferredStart(); }
-keepclassmembers class android.text.TextUtils { boolean equals(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void ensureTopGlow(); }
-keepclassmembers class okhttp3.internal.publicsuffix.PublicSuffixDatabase { java.lang.String binarySearchBytes(byte[],byte[][],int); }
-keepclassmembers class android.text.TextUtils { void writeToParcel(java.lang.CharSequence,android.os.Parcel,int); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult { void dispatchAdditions(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder findViewHolderForItemId(long); }
-keepclassmembers class android.app.Notification$InboxStyle { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class okhttp3.internal.publicsuffix.PublicSuffixDatabase { java.lang.String[] findMatchingRule(java.lang.String[]); }
-keepclassmembers class android.support.v7.widget.SwitchCompat$ThumbAnimation { void <init>(android.support.v7.widget.SwitchCompat,float,float); }
-keepclassmembers class android.text.TextUtils { int getOffsetBefore(java.lang.CharSequence,int); }
-keepclassmembers class android.support.v7.widget.SwitchCompat$ThumbAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class okhttp3.internal.publicsuffix.PublicSuffixDatabase { java.lang.String getEffectiveTldPlusOne(java.lang.String); }
-keepclassmembers class android.text.TextUtils { int getOffsetAfter(java.lang.CharSequence,int); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult { void dispatchRemovals(java.util.List,android.support.v7.util.ListUpdateCallback,int,int,int); }
-keepclassmembers class android.text.TextUtils { void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void addCustomViewsWithGravity(java.util.List,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment findFragmentByWho(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.View focusSearch(android.view.View,int); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult { void findAddition(int,int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureNavButtonView(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment findFragmentByTag(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildHorizontalGravity(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureMenuView(); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback,android.text.TextDirectionHeuristic,java.lang.String); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult { boolean findMatchingItem(int,int,int,boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildTop(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getChildVerticalGravity(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getVerticalMargins(android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult { void findMatchingItems(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int layoutChildLeft(android.view.View,int,int[],int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.database.CursorWindow { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getViewListMeasuredWidth(java.util.List,int[]); }
-keepclassmembers class android.support.v7.widget.Toolbar { int layoutChildRight(android.view.View,int,int[],int); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult { void findRemoval(int,int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getHorizontalMargins(android.view.View); }
-keepclassmembers class android.support.v7.widget.Toolbar { int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult { android.support.v7.util.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.graphics.Rect getItemDecorInsetsForChild(android.view.View); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult { void dispatchUpdatesTo(android.support.v7.util.ListUpdateCallback); }
-keepclassmembers class android.database.CursorWindow { void dispose(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void offsetChildrenHorizontal(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void markKnownViewsInvalid(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean shouldCollapse(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void markItemDecorInsetsDirty(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void measureChildConstrained(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void offsetChildrenVertical(int); }
-keepclassmembers class android.database.CursorWindow { java.lang.String getString(int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void makeActive(android.support.v4.app.Fragment); }
-keepclassmembers class android.database.CursorWindow { long getLong(int,int); }
-keepclassmembers class android.text.TextUtils { float setPara(android.text.MeasuredText,android.text.TextPaint,java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic); }
-keepclassmembers class android.view.animation.PathInterpolator { void initPath(android.graphics.Path); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onAttachedToWindow(); }
-keepclassmembers class android.database.CursorWindow { double getDouble(int,int); }
-keepclassmembers class android.view.animation.PathInterpolator { float getInterpolation(float); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveFragmentToExpectedState(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onEnterLayoutOrScroll(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class java.util.AbstractCollection { java.lang.String toString(); }
-keepclassmembers class android.text.TextUtils { boolean doesNotNeedBidi(char[],int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveToState(int,boolean); }
-keepclassmembers class android.text.TextUtils { boolean isDigitsOnly(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onExitLayoutOrScroll(); }
-keepclassmembers class android.database.CursorWindow { java.lang.String printStats(); }
-keepclassmembers class android.text.TextUtils { int getCapsMode(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.TextUtils { java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class); }
-keepclassmembers class android.text.TextUtils { boolean delimitedStringContains(java.lang.String,char,java.lang.String); }
-keepclassmembers class android.text.TextUtils { long packRangeInLong(int,int); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.TextUtils { int unpackRangeStartFromLong(long); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void checkDNS(java.lang.String); }
-keepclassmembers class android.widget.AbsSeekBar { void setMax(int); }
-keepclassmembers class android.text.TextUtils { int unpackRangeEndFromLong(long); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int[] oidStrToInts(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Time { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.AbsSeekBar { void updateThumbAndTrackPos(int,int); }
-keepclassmembers class android.widget.AbsSeekBar { void drawableStateChanged(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.AbsSeekBar { float getScale(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onMeasure(int,int); }
-keepclassmembers class java.util.Properties { void load(java.io.Reader); }
-keepclassmembers class android.widget.AbsSeekBar { void drawThumb(android.graphics.Canvas); }
-keepclassmembers class android.widget.AbsSeekBar { void setThumbPos(int,android.graphics.drawable.Drawable,float,int); }
-keepclassmembers class android.widget.AbsSeekBar { void drawTrack(android.graphics.Canvas); }
-keepclassmembers class android.widget.AbsSeekBar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.AbsSeekBar { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void repositionShadowingViews(); }
-keepclassmembers class android.widget.AbsSeekBar { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.AbsSeekBar { void trackTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void resumeRequestLayout(boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void saveOldPositions(); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File,int); }
-keepclassmembers class android.app.Notification$Builder { void setFlag(int,boolean); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean scrollByInternal(int,int,android.view.MotionEvent); }
-keepclassmembers class java.util.zip.ZipFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class java.lang.Thread { void create(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { boolean begin(); }
-keepclassmembers class android.support.v4.util.ArraySet { void allocArrays(int); }
-keepclassmembers class java.util.zip.ZipFile { void readCentralDir(); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { void close(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void parkNanos(java.lang.Object,long); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { int getHeight(); }
-keepclassmembers class android.os.BaseBundle { void writeToParcelInner(android.os.Parcel,int); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { android.graphics.Bitmap decode(android.graphics.Rect,boolean,android.graphics.Bitmap$Config,android.graphics.BitmapFactory$Options); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { int getWidth(); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { boolean hasAlpha(); }
-keepclassmembers class java.lang.Thread { void interrupt(); }
-keepclassmembers class android.os.BaseBundle { void readFromParcelInner(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.util.ArraySet { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class java.lang.Thread { boolean isAlive(); }
-keepclassmembers class android.support.v4.util.ArraySet { int indexOfNull(); }
-keepclassmembers class android.text.Layout$TabStops { void reset(int,java.lang.Object[]); }
-keepclassmembers class java.lang.Thread { void setDaemon(boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveToState(android.support.v4.app.Fragment,int,int,int,boolean); }
-keepclassmembers class android.support.v4.util.ArraySet { int indexOf(java.lang.Object,int); }
-keepclassmembers class android.text.Layout$TabStops { float nextTab(float); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews applyStandardTemplate(int,boolean); }
-keepclassmembers class android.app.Notification$Builder { boolean showsTimeOrChronometer(); }
-keepclassmembers class android.text.Layout$TabStops { float nextDefaultStop(float,int); }
-keepclassmembers class java.lang.Thread { void sleep(long,int); }
-keepclassmembers class android.app.Notification$Builder { int calculateTopPadding(android.content.Context,boolean,float); }
-keepclassmembers class android.support.v4.util.ArraySet { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void bfsAddViewChildren(java.util.List,android.view.View); }
-keepclassmembers class java.lang.Thread { void parkFor(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews applyStandardTemplateWithActions(int); }
-keepclassmembers class java.lang.Thread { void parkUntil(long); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void addTargets(java.lang.Object,java.util.ArrayList); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void captureTransitioningViews(java.util.ArrayList,android.view.View); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { boolean containedBeforeIndex(java.util.List,android.view.View,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int); }
-keepclassmembers class java.util.WeakHashMap { void computeMaxSize(); }
-keepclassmembers class java.util.WeakHashMap { void clear(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void findNamedViews(java.util.Map,android.view.View); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void getBoundsOnScreen(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.util.WeakHashMap { java.util.WeakHashMap$Entry getEntry(java.lang.Object); }
-keepclassmembers class android.support.v4.util.ArraySet { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.TimeUnit { long x(long,long,long); }
-keepclassmembers class java.util.WeakHashMap { void removeEntry(java.util.WeakHashMap$Entry); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void reportBackStackChanged(); }
-keepclassmembers class java.io.PushbackReader { int read(); }
-keepclassmembers class android.support.v4.util.ArraySet { boolean add(java.lang.Object); }
-keepclassmembers class android.app.Notification$Builder { int sanitizeColor(); }
-keepclassmembers class java.util.WeakHashMap { void rehash(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification buildUnstyled(); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.util.ArrayList prepareSetNameOverridesOptimized(java.util.ArrayList); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getLocalName(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getURI(int); }
-keepclassmembers class java.io.OutputStreamWriter { void write(java.lang.String,int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getQName(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getType(int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class java.io.PushbackReader { void unread(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getValue(int); }
-keepclassmembers class java.util.AbstractList { int hashCode(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void dispatchAnimationEnd(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { int getIndex(java.lang.String); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void dispatchAnimationUpdate(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void dispatchAnimationStart(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setNameOverridesOptimized(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void clear(); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer wrap(byte[],int,int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void update(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void setAttributes(org.xml.sax.Attributes); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void setAttribute(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void removeAttribute(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setViewTypeCount(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void markChildrenDirty(); }
-keepclassmembers class android.view.animation.Animation$Description { android.view.animation.Animation$Description parseValue(android.util.TypedValue); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void ensureCapacity(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getActiveView(int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void fillActiveViews(int,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clear(); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByTenPow(java.math.BigInteger,long); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearTransientStateViews(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void scrapActiveViews(); }
-keepclassmembers class java.math.Multiplication { void <clinit>(); }
-keepclassmembers class android.support.v7.util.BatchingListUpdateCallback { void onInserted(int,int); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger powerOf10(long); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeSkippedScrap(); }
-keepclassmembers class android.support.v7.util.BatchingListUpdateCallback { void onChanged(int,int,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void pruneScrapViews(); }
-keepclassmembers class android.text.util.Linkify { boolean addLinks(android.text.Spannable,int); }
-keepclassmembers class android.support.v7.util.BatchingListUpdateCallback { void onRemoved(int,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View retrieveFromScrap(java.util.ArrayList,int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setCacheColorHint(int); }
-keepclassmembers class java.util.regex.Matcher { void appendEvaluated(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(int,int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginEnd(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearScrap(java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compateOids(org.apache.harmony.security.utils.ObjectIdentifier,org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void setLayoutDirection(int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginStart(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void dispatchAnimationCancel(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void gc(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher usePattern(java.util.regex.Pattern); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getLayoutDirection(); }
-keepclassmembers class okhttp3.Handshake { int hashCode(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void doResolveMargins(); }
-keepclassmembers class android.support.v4.text.BidiFormatter { boolean getStereoReset(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void clear(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { boolean isLayoutRtl(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void append(int,java.lang.Object); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { boolean hasNext(); }
-keepclassmembers class android.text.util.Linkify { java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.os.Parcelable saveAllState(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment { int getGridColumnSizeFromWidth(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void put(int,java.lang.Object); }
-keepclassmembers class android.text.util.Linkify { void gatherMapLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class android.text.util.Linkify { void pruneOverlaps(java.util.ArrayList); }
-keepclassmembers class java.util.regex.Matcher { int end(int); }
-keepclassmembers class java.util.regex.Matcher { int start(int); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String group(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.R2LReader { void absoluteScroll(float,float); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.android.internal.app.AlertController { boolean canTextInput(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.R2LReader { void calculateVisibilities(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.R2LReader { float getPagePosition(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.R2LReader { boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class java.io.ObjectOutputStream { void drain(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment { void onCreatePreferences(android.os.Bundle,java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { int nextHandle(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.R2LReader { boolean onSingleTapConfirmed(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void setBackStackIndex(int,android.support.v4.app.BackStackRecord); }
-keepclassmembers class android.text.DynamicLayout { void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.R2LReader { void relativeScroll(double,double); }
-keepclassmembers class ar.rulosoft.custompref.ArrayAdapterDirectory { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.io.ObjectOutputStream { int writeClassDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void startPendingDeferredFragments(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFieldDescriptors(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { char charAt(int); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getPropertyName(); }
-keepclassmembers class android.text.SpannableStringBuilder { int length(); }
-keepclassmembers class android.text.DynamicLayout { void reflow(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.text.DynamicLayout { void createBlocks(); }
-keepclassmembers class android.text.SpannableStringBuilder { void moveGapTo(int); }
-keepclassmembers class android.text.SpannableStringBuilder { void resizeFor(int); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFieldValues(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class java.io.ObjectOutputStream { void writeHierarchy(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder delete(int,int); }
-keepclassmembers class java.util.TimeZone { java.lang.String getDisplayName(boolean,int,java.util.Locale); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void setStateLocked(int); }
-keepclassmembers class java.util.TimeZone { java.lang.String createGmtOffsetString(boolean,boolean,int); }
-keepclassmembers class android.text.DynamicLayout { void addBlockAtOffset(int); }
-keepclassmembers class java.util.TimeZone { void appendNumber(java.lang.StringBuilder,int,int); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewArray(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass,java.lang.Class,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { void change(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class com.android.internal.app.AlertController { boolean setupButtons(); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getCustomTimeZone(java.lang.String); }
-keepclassmembers class android.text.DynamicLayout { void updateBlocks(int,int,int); }
-keepclassmembers class android.text.DynamicLayout { int getLineCount(); }
-keepclassmembers class android.animation.ObjectAnimator { boolean hasSameTargetAndProperties(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.text.DynamicLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.text.DynamicLayout { int getLineStart(int); }
-keepclassmembers class android.text.DynamicLayout { int getParagraphDirection(int); }
-keepclassmembers class android.animation.ObjectAnimator { void start(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { int getTotalSpaceChange(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader$1 { void onPageScrolled(int,float,int); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNewClassDesc(java.io.ObjectStreamClass); }
-keepclassmembers class com.android.internal.app.AlertController { void setBackground(android.content.res.TypedArray,android.view.View,android.view.View,android.view.View,android.view.View,boolean,boolean,boolean); }
-keepclassmembers class android.animation.ObjectAnimator { void initAnimation(); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$1 { int getChildEnd(android.view.View); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewString(java.lang.String,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$1 { int getParentEnd(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$1 { int getChildStart(android.view.View); }
-keepclassmembers class android.animation.ObjectAnimator { void setupEndValues(); }
-keepclassmembers class android.text.SpannableStringBuilder { int updatedIntervalBound(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String toString(); }
-keepclassmembers class android.animation.ObjectAnimator { void setupStartValues(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeObjectInternal(java.lang.Object,boolean,boolean,boolean); }
-keepclassmembers class android.animation.ObjectAnimator { void animateValue(float); }
-keepclassmembers class org.acra.collector.ConfigurationCollector { java.lang.String activeFlags(android.util.SparseArray,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class java.nio.CharArrayBuffer { char get(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page$SetImageTask { android.graphics.Bitmap doInBackground(java.lang.Void[]); }
-keepclassmembers class org.acra.legacy.ReportMigrator { void migrate(); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendToSpanWatchers(int,int,int); }
-keepclassmembers class org.acra.collector.ConfigurationCollector { org.acra.model.Element configToElement(android.content.res.Configuration); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(byte[],java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean hasNonExclusiveExclusiveSpanAt(java.lang.CharSequence,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setFrame(int,boolean,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(boolean,java.lang.Object,int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void nextFrame(boolean); }
-keepclassmembers class java.util.ArrayList { boolean add(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { void add(int,java.lang.Object); }
-keepclassmembers class java.util.ArrayList { boolean addAll(java.util.Collection); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(java.lang.Object); }
-keepclassmembers class org.acra.collector.ConfigurationCollector { java.util.Map getValueArrays(); }
-keepclassmembers class java.util.zip.ZipEntry { boolean containsNulByte(byte[]); }
-keepclassmembers class java.util.ArrayList { boolean addAll(int,java.util.Collection); }
-keepclassmembers class java.util.ArrayList { int newCapacity(int); }
-keepclassmembers class java.util.ArrayList { void clear(); }
-keepclassmembers class java.util.ArrayList { void ensureCapacity(int); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl { void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class java.util.ArrayList { int lastIndexOf(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean cancelExitingRipples(); }
-keepclassmembers class java.util.ArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.util.ArrayList { java.lang.Object remove(int); }
-keepclassmembers class java.util.ArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class java.lang.Byte { java.lang.Byte valueOf(byte); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class java.lang.Byte { void <clinit>(); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.ArrayList { void trimToSize(); }
-keepclassmembers class java.util.ArrayList { void removeRange(int,int); }
-keepclassmembers class java.util.ArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void setState(int[]); }
-keepclassmembers class android.text.SpannableStringBuilder { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class java.util.ArrayList { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { int hashCode(); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingRight(); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { android.view.MotionEvent$PointerProperties[] createArray(int); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingLeft(); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class android.widget.CompoundButton { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendBeforeTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { int modulateColorAlpha(int,float); }
-keepclassmembers class android.text.SpannableStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleExit(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onHotspotBoundsChanged(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.widget.CompoundButton { int[] onCreateDrawableState(int); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void removeRipple(android.graphics.drawable.Ripple); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getRippleIndex(android.graphics.drawable.Ripple); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getMaskType(); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart appendEncodedSegment(android.net.Uri$PathPart,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawContent(android.graphics.Canvas); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathSegments getPathSegments(); }
-keepclassmembers class android.text.SpannableStringBuilder { void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawBackgroundAndRipples(android.graphics.Canvas); }
-keepclassmembers class android.text.SpannableStringBuilder { void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$4 { int compare(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.text.SpannableStringBuilder { float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint); }
-keepclassmembers class android.text.SpannableStringBuilder { int getTextRunCursor(int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class android.text.SpannableStringBuilder { int hashCode(); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendAfterTextChanged(android.text.TextWatcher[]); }
-keepclassmembers class java.nio.Buffer { int remaining(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { ar.rulosoft.mimanganu.componentes.Chapter getItem(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { ar.rulosoft.mimanganu.componentes.Chapter[] getSelectedChapters(); }
-keepclassmembers class java.util.HashMap$HashMapEntry { int hashCode(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { char charAt(int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class okhttp3.internal.tls.BasicCertificateChainCleaner { java.util.List clean(java.util.List,java.lang.String); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { java.lang.Object transfer(java.lang.Object,boolean,long); }
-keepclassmembers class java.util.TimSort { void <init>(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { java.lang.Object awaitFulfill(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.lang.Object,boolean,long); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void selectFrom(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void selectAll(); }
-keepclassmembers class java.util.TimSort { void sort(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void selectTo(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void setSelectedOrUnselected(int); }
-keepclassmembers class java.util.TimSort { void binarySort(java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class java.util.TimSort { int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class java.util.TimSort { int minRunLength(int); }
-keepclassmembers class android.util.MapCollections { java.lang.Object[] toArrayHelper(int); }
-keepclassmembers class java.util.TimSort { void pushRun(int,int); }
-keepclassmembers class java.util.TimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.TimSort { void mergeCollapse(); }
-keepclassmembers class java.util.TimSort { void mergeAt(int); }
-keepclassmembers class java.util.TimSort { void mergeForceCollapse(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean add(java.lang.Object); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object remove(int); }
-keepclassmembers class java.util.TimSort { int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class java.util.TimSort { int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void removeRange(int,int); }
-keepclassmembers class java.util.TimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int indexOf(java.lang.Object,java.lang.Object[],int,int); }
-keepclassmembers class java.util.TimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void showAsDropDown(android.view.View,int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void update(android.view.View,int,int,int,int); }
-keepclassmembers class java.util.TimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void dispose(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void open(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void <init>(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setAutoCheckpointInterval(); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void showAsDropDown(android.view.View,int,int,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setForeignKeyModeFromConfiguration(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setPageSize(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setWalModeFromConfiguration(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setJournalSizeLimit(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void bind(int,java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void bindAllArgsAsStrings(java.lang.String[]); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.TypedArray obtain(android.content.res.Resources,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void prepare(java.lang.String,android.database.sqlite.SQLiteStatementInfo); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void reconfigure(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromStream(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setLocaleFromConfiguration(); }
-keepclassmembers class android.view.animation.RotateAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseArgumentIndexAndFlags(java.util.Formatter$FormatToken); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { char advance(); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence getText(int); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getString(int); }
-keepclassmembers class android.content.res.TypedArray { boolean getBoolean(int,boolean); }
-keepclassmembers class org.acra.util.IOUtils { java.lang.String streamToStringNonBlockingRead(java.io.InputStream,com.android.internal.util.Predicate,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int nextInt(); }
-keepclassmembers class android.content.res.TypedArray { int getInt(int,int); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class android.content.res.TypedArray { int getColor(int,int); }
-keepclassmembers class android.content.res.TypedArray { float getFloat(int,float); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class android.content.res.TypedArray { int getInteger(int,int); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelOffset(int,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,android.os.CancellationSignal); }
-keepclassmembers class android.content.res.TypedArray { int getLayoutDimension(int,int); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelSize(int,int); }
-keepclassmembers class android.content.res.TypedArray { float getDimension(int,float); }
-keepclassmembers class android.widget.TextView$Marquee { void tick(); }
-keepclassmembers class android.util.SizeF { boolean equals(java.lang.Object); }
-keepclassmembers class android.content.res.TypedArray { int getResourceId(int,int); }
-keepclassmembers class android.content.res.TypedArray { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.content.res.TypedArray { boolean getValue(int,android.util.TypedValue); }
-keepclassmembers class android.widget.TextView$Marquee { void <init>(android.widget.TextView); }
-keepclassmembers class android.content.res.TypedArray { boolean hasValue(int); }
-keepclassmembers class android.widget.TextView$Marquee { void start(int); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class android.util.SizeF { int hashCode(); }
-keepclassmembers class android.widget.TextView$Marquee { boolean shouldDrawGhost(); }
-keepclassmembers class android.content.res.TypedArray { android.util.TypedValue peekValue(int); }
-keepclassmembers class android.content.res.TypedArray { int getIndex(int); }
-keepclassmembers class java.util.Random { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void detachCancellationSignal(android.os.CancellationSignal); }
-keepclassmembers class android.widget.TextView$Marquee { boolean shouldDrawLeftFade(); }
-keepclassmembers class java.util.Random { int next(int); }
-keepclassmembers class android.support.design.widget.MathUtils { float constrain(float,float,float); }
-keepclassmembers class android.content.res.TypedArray { int[] extractThemeAttrs(); }
-keepclassmembers class android.widget.TextView$Marquee { int access$710(android.widget.TextView$Marquee); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void attachCancellationSignal(android.os.CancellationSignal); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void bindArguments(android.database.sqlite.SQLiteConnection$PreparedStatement,java.lang.Object[]); }
-keepclassmembers class android.content.res.TypedArray { int getChangingConfigurations(); }
-keepclassmembers class java.util.Random { float nextFloat(); }
-keepclassmembers class android.content.res.TypedArray { boolean getValueAt(int,android.util.TypedValue); }
-keepclassmembers class android.util.LogWriter { void write(char[],int,int); }
-keepclassmembers class java.util.Random { void setSeed(long); }
-keepclassmembers class android.database.AbstractCursor { boolean moveToNext(); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node find(java.lang.Object,java.util.TreeMap$Relation); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence loadStringValueAt(int); }
-keepclassmembers class java.util.TreeMap { void clear(); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { void start(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.Annotation getAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class); }
-keepclassmembers class android.widget.FastScroller { void updateAppearance(); }
-keepclassmembers class java.util.TreeMap { void rebalance(java.util.TreeMap$Node,boolean); }
-keepclassmembers class libcore.reflect.AnnotationAccess { int getAnnotationSetOffset(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class java.util.TreeMap { void rotateLeft(java.util.TreeMap$Node); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onWriteToDisk(); }
-keepclassmembers class android.widget.FastScroller { void setStyle(int); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onNetwork(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onReadFromDisk(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolation(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolationWithTimingAttempt(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Object getDefaultValue(java.lang.reflect.Method); }
-keepclassmembers class android.widget.FastScroller { void onItemCountChanged(int,int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.EncodedValueReader getAnnotationReader(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String,int); }
-keepclassmembers class java.lang.String { void <init>(java.lang.String); }
-keepclassmembers class java.util.TreeMap { void rotateRight(java.util.TreeMap$Node); }
-keepclassmembers class android.widget.FastScroller { void updateLongList(int,int); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.nio.charset.Charset); }
-keepclassmembers class java.lang.String { void <init>(char[],int,int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.reflect.AccessibleObject indexToMethod(java.lang.Class,com.android.dex.Dex,int); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int); }
-keepclassmembers class java.lang.String { char charAt(int); }
-keepclassmembers class java.lang.String { char foldCase(char); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void updateAtStartUp(long); }
-keepclassmembers class android.widget.FastScroller { void updateLayout(); }
-keepclassmembers class android.widget.FastScroller { void applyLayout(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.widget.FastScroller { void measureViewToSide(android.view.View,android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class java.lang.String { int compareToIgnoreCase(java.lang.String); }
-keepclassmembers class java.lang.String { boolean endsWith(java.lang.String); }
-keepclassmembers class java.lang.String { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class,com.android.dex.Dex,java.lang.Class,com.android.dex.EncodedValueReader); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.String { boolean equalsIgnoreCase(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void measureFloating(android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.widget.FastScroller { void updateContainerRect(); }
-keepclassmembers class java.lang.String { void getChars(int,int,char[],int); }
-keepclassmembers class java.lang.reflect.Field { int getModifiers(); }
-keepclassmembers class java.lang.String { void _getChars(int,int,char[],int); }
-keepclassmembers class java.lang.reflect.Field { int hashCode(); }
-keepclassmembers class java.lang.String { int hashCode(); }
-keepclassmembers class java.lang.String { int lastIndexOf(int); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String,int); }
-keepclassmembers class android.widget.FastScroller { void layoutTrack(); }
-keepclassmembers class java.lang.String { int lastIndexOf(int,int); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[]); }
-keepclassmembers class android.os.Environment { java.io.File buildPath(java.io.File,java.lang.String[]); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String,int); }
-keepclassmembers class android.widget.FastScroller { void onScroll(int,int,int); }
-keepclassmembers class java.lang.String { boolean regionMatches(int,java.lang.String,int,int); }
-keepclassmembers class android.widget.Editor$HandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.Environment { android.os.storage.StorageVolume getStorageVolume(java.io.File); }
-keepclassmembers class android.widget.Editor$HandleView { void filterOnTouchUp(); }
-keepclassmembers class java.util.LinkedList { boolean addLastImpl(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller { void scrollTo(float); }
-keepclassmembers class java.lang.reflect.Proxy { void getMethodsRecursive(java.lang.Class[],java.util.List); }
-keepclassmembers class android.app.Notification$BigTextStyle { int calculateMaxLines(); }
-keepclassmembers class java.lang.String { boolean regionMatches(boolean,int,java.lang.String,int,int); }
-keepclassmembers class android.widget.Editor$HandleView { void addPositionToTouchUpFilter(int); }
-keepclassmembers class java.lang.String { java.lang.String replace(char,char); }
-keepclassmembers class java.util.LinkedList { void clear(); }
-keepclassmembers class java.lang.String { java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List deduplicateAndGetExceptions(java.util.List); }
-keepclassmembers class java.lang.String { java.lang.String substring(int); }
-keepclassmembers class android.widget.Editor$HandleView { void positionAtCursorOffset(int,boolean); }
-keepclassmembers class android.widget.FastScroller { boolean transitionPreviewLayout(int); }
-keepclassmembers class android.widget.FastScroller { void setThumbPos(float); }
-keepclassmembers class android.widget.FastScroller { float getPosFromMotionEvent(float); }
-keepclassmembers class java.lang.String { java.lang.String substring(int,int); }
-keepclassmembers class android.widget.Editor$HandleView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class java.lang.String { java.lang.String trim(); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class[] intersectExceptions(java.lang.Class[],java.lang.Class[]); }
-keepclassmembers class libcore.io.DeleteOnExit { void run(); }
-keepclassmembers class android.widget.Editor$HandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.Editor$HandleView { int getHorizontalOffset(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object remove(int); }
-keepclassmembers class android.widget.FastScroller { float getPosFromItemCount(int,int,int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean offer(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller { void startPendingDrag(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.util.LinkedList { java.lang.Object removeFirstImpl(); }
-keepclassmembers class android.view.GLES20Canvas { void translate(float,float); }
-keepclassmembers class android.view.GLES20Canvas { void setupFinalizer(); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.FastScroller { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.String { int codePointAt(int); }
-keepclassmembers class java.lang.String { int codePointBefore(int); }
-keepclassmembers class android.view.GLES20Canvas { int saveLayer(float,float,float,float,android.graphics.Paint,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void onResume(); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideY(float); }
-keepclassmembers class java.lang.Float { int floatToIntBits(float); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideX(float); }
-keepclassmembers class android.view.GLES20Canvas { int saveLayerAlpha(float,float,float,float,int,int); }
-keepclassmembers class java.lang.String { java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void setListManga(boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean hasCollapsibleActionView(); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator groupAnimatorOfFloat(android.util.Property,float,android.view.View[]); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isActionButton(); }
-keepclassmembers class java.lang.Float { boolean isInfinite(float); }
-keepclassmembers class java.lang.Float { boolean isNaN(float); }
-keepclassmembers class java.lang.Float { java.lang.String toHexString(float); }
-keepclassmembers class okhttp3.Address { int hashCode(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isCheckable(); }
-keepclassmembers class java.lang.String { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isExclusiveCheckable(); }
-keepclassmembers class java.lang.Float { int compare(float,float); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isChecked(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isEnabled(); }
-keepclassmembers class android.text.PackedIntVector { void <init>(int); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isVisible(); }
-keepclassmembers class android.text.PackedIntVector { int getValue(int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void setCheckedInt(boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setChecked(boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setCheckable(boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setEnabled(boolean); }
-keepclassmembers class libcore.io.IoUtils$FileReader { libcore.io.IoUtils$FileReader readFully(); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.text.PackedIntVector { void setValueInternal(int,int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void setShowAsAction(int); }
-keepclassmembers class android.text.PackedIntVector { void insertAt(int,int[]); }
-keepclassmembers class android.text.PackedIntVector { void adjustValuesBelow(int,int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void setExclusiveCheckable(boolean); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { java.lang.String toString(); }
-keepclassmembers class android.text.PackedIntVector { void deleteAt(int,int); }
-keepclassmembers class android.view.GLES20Canvas { void drawLines(float[],int,int,android.graphics.Paint); }
-keepclassmembers class android.text.PackedIntVector { int size(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean setVisibleInt(boolean); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void calculatePageOffsets(fr.castorflex.android.verticalviewpager.VerticalViewPager$ItemInfo,int,fr.castorflex.android.verticalviewpager.VerticalViewPager$ItemInfo); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean showsTextAsAction(); }
-keepclassmembers class android.text.PackedIntVector { void moveRowGapTo(int); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(char[],int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.text.PackedIntVector { void growBuffer(); }
-keepclassmembers class android.text.PackedIntVector { void moveValueGapTo(int,int); }
-keepclassmembers class android.support.v4.widget.ListViewAutoScrollHelper { boolean canTargetScrollVertically(int); }
-keepclassmembers class com.franmontiel.persistentcookiejar.PersistentCookieJar { boolean isCookieExpired(okhttp3.Cookie); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { int determineTargetPage(int,float,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$HPage { float getVisiblePercent(); }
-keepclassmembers class android.view.GLES20Canvas { void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$HPage { boolean isVisible(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void enableLayers(boolean); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void completeScroll(boolean); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { fr.castorflex.android.verticalviewpager.VerticalViewPager$ItemInfo infoForCurrentScrollPosition(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { int getClientHeight(); }
-keepclassmembers class java.io.File { java.lang.String join(java.lang.String,java.lang.String); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { boolean isGutterDrag(float,float); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { boolean pageScrolled(int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { boolean performDrag(float); }
-keepclassmembers class android.graphics.Canvas { void drawText(char[],int,int,float,float,android.graphics.Paint); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int end(); }
-keepclassmembers class android.view.animation.AlphaAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.graphics.Canvas { void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class java.io.File { java.lang.String fixSlashes(java.lang.String); }
-keepclassmembers class java.io.File { java.lang.String getName(); }
-keepclassmembers class android.graphics.Canvas { void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class java.io.File { int hashCode(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void recomputeScrollPosition(int,int,int,int); }
-keepclassmembers class android.graphics.Canvas { void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void scrollToItem(int,boolean,int,boolean); }
-keepclassmembers class java.io.File { java.lang.String getParent(); }
-keepclassmembers class java.io.File { long lastModified(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void sortChildDrawingOrder(); }
-keepclassmembers class java.io.File { java.io.File[] filenamesToFiles(java.lang.String[]); }
-keepclassmembers class java.io.File { java.io.File[] listFiles(java.io.FileFilter); }
-keepclassmembers class java.io.File { boolean createNewFile(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class java.util.jar.Attributes$Name { void <init>(java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { void splitAndAdd(java.lang.String,boolean,java.util.ArrayList); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void removeNonDecorViews(); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.Class findClass(java.lang.String,java.util.List); }
-keepclassmembers class java.io.File { java.lang.String getAbsoluteName(); }
-keepclassmembers class dalvik.system.DexPathList { java.net.URL findResource(java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String optimizedPathFor(java.io.File,java.io.File); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { void onCancelled(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { boolean canScroll(android.view.View,boolean,int,int,int); }
-keepclassmembers class dalvik.system.DexPathList { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { java.lang.Integer doInBackground(java.lang.Void[]); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { void onProgressUpdate(java.lang.Integer[]); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void dataSetChanged(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] lookupHostByName(java.lang.String,int); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress parseNumericAddressNoThrow(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface,int); }
-keepclassmembers class java.nio.charset.Charset { void checkCharsetName(java.lang.String); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.TextView { int getLineHeight(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$1 { void run(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { float distanceInfluenceForSnapDuration(float); }
-keepclassmembers class java.net.InetAddress { boolean isIPv4MappedAddress(byte[]); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingTop(); }
-keepclassmembers class java.net.InetAddress { byte[] ipv4MappedToIPv4(byte[]); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingLeft(); }
-keepclassmembers class java.math.BigInteger { void <init>(java.math.BigInt); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingRight(); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingBottom(); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingBottom(); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingTop(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingTop(); }
-keepclassmembers class java.math.BigInteger { void setJavaRepresentation(int,int,int[]); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger valueOf(long); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { boolean equals(java.lang.Object); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void draw(android.graphics.Canvas); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { int hashCode(); }
-keepclassmembers class java.math.BigInteger { boolean testBit(int); }
-keepclassmembers class java.math.BigInteger { int getLowestSetBit(); }
-keepclassmembers class java.net.JarURLConnection { void <init>(java.net.URL); }
-keepclassmembers class java.math.BigInteger { int intValue(); }
-keepclassmembers class java.math.BigInteger { long longValue(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { int getChildDrawingOrder(int,int); }
-keepclassmembers class java.math.BigInteger { int hashCode(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { fr.castorflex.android.verticalviewpager.VerticalViewPager$ItemInfo infoForPosition(int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { fr.castorflex.android.verticalviewpager.VerticalViewPager$ItemInfo infoForChild(android.view.View); }
-keepclassmembers class java.util.Date { int compareTo(java.util.Date); }
-keepclassmembers class java.util.Date { int hashCode(); }
-keepclassmembers class java.util.Date { boolean equals(java.lang.Object); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.CursorAdapter { void init(android.content.Context,android.database.Cursor,int); }
-keepclassmembers class java.util.Date { int getYear(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.lang.String getWithTimeout(java.lang.String,java.lang.String,int,int,int); }
-keepclassmembers class java.math.BigInteger { int getFirstNonzeroDigit(); }
-keepclassmembers class java.math.BigInteger { byte[] twosComplement(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { boolean hasNext(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void updateMinAndMaxOffsets(android.view.MotionEvent); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { void remove(); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { java.lang.Object next(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingBottom(); }
-keepclassmembers class android.widget.TextView { void setTextScaleX(float); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void onMeasure(int,int); }
-keepclassmembers class android.widget.TextView { void setRawTextSize(float); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder$1 { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TextView { void setGravity(int); }
-keepclassmembers class android.widget.TextView { void setLetterSpacing(float); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.util.PathParser { android.util.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String); }
-keepclassmembers class java.util.logging.Logger { void setManager(java.util.logging.LogManager); }
-keepclassmembers class android.widget.TextView { void removeMisspelledSpans(android.text.Spannable); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void onPageScrolled(int,float,int); }
-keepclassmembers class android.util.PathParser { android.util.PathParser$PathDataNode[] deepCopyNodes(android.util.PathParser$PathDataNode[]); }
-keepclassmembers class android.util.PathParser { boolean canMorph(android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[]); }
-keepclassmembers class android.util.PathParser { int nextStart(java.lang.String,int); }
-keepclassmembers class android.util.PathParser { float[] getFloats(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int); }
-keepclassmembers class android.content.res.Resources { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void populate(int); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.LogRecord); }
-keepclassmembers class android.content.res.Resources { void clearDrawableCachesLocked(android.util.ArrayMap,int); }
-keepclassmembers class android.media.MediaCodecInfo { void <init>(java.lang.String,boolean,android.media.MediaCodecInfo$CodecCapabilities[]); }
-keepclassmembers class android.widget.TextView { boolean isMultilineInputType(int); }
-keepclassmembers class android.content.res.Resources { boolean resourceHasPackage(int); }
-keepclassmembers class android.widget.TextView { void setInputType(int,boolean); }
-keepclassmembers class android.content.res.Resources { void clearDrawableCacheLocked(android.util.LongSparseArray,int); }
-keepclassmembers class android.text.TextLine { android.text.TextLine obtain(); }
-keepclassmembers class android.content.res.Resources { void flushLayoutCache(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void setAdapter(android.support.v4.view.PagerAdapter); }
-keepclassmembers class android.util.PathParser { void extract(java.lang.String,int,android.util.PathParser$ExtractFloatResult); }
-keepclassmembers class android.content.res.Resources { boolean verifyPreloadConfig(int,int,int,java.lang.String); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence); }
-keepclassmembers class android.text.TextLine { android.text.TextLine recycle(android.text.TextLine); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.TextLine { void set(android.text.TextPaint,java.lang.CharSequence,int,int,int,android.text.Layout$Directions,boolean,android.text.Layout$TabStops); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.Editable,android.text.InputFilter[]); }
-keepclassmembers class android.widget.TextView { int getBoxHeight(android.text.Layout); }
-keepclassmembers class android.content.res.Resources { void cacheDrawable(android.util.TypedValue,android.content.res.Resources$Theme,boolean,android.util.ArrayMap,long,android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.TextLine { void draw(android.graphics.Canvas,float,int,int,int); }
-keepclassmembers class android.widget.TextView { int getBottomVerticalOffset(boolean); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void smoothScrollTo(int,int,int); }
-keepclassmembers class android.widget.TextView { void invalidateRegion(int,int,boolean); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void setCurrentItemInternal(int,boolean,boolean,int); }
-keepclassmembers class android.text.TextLine { float measure(int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.widget.TextView { int getVerticalOffset(boolean); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <init>(java.lang.Object); }
-keepclassmembers class android.widget.TextView { boolean onPreDraw(); }
-keepclassmembers class android.widget.TextView { boolean isPaddingOffsetRequired(); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int); }
-keepclassmembers class android.widget.TextView { int getTopPaddingOffset(); }
-keepclassmembers class android.widget.TextView { int getBottomPaddingOffset(); }
-keepclassmembers class android.widget.TextView { void invalidateCursorPath(); }
-keepclassmembers class android.widget.TextView { int getLeftPaddingOffset(); }
-keepclassmembers class android.database.DatabaseUtils { int cursorPickFillWindowStartPosition(int,int); }
-keepclassmembers class android.widget.TextView { int getRightPaddingOffset(); }
-keepclassmembers class android.widget.TextView { int getFudgedPaddingRight(); }
-keepclassmembers class android.support.v7.widget.CardViewApi21 { float getMinHeight(android.support.v7.widget.CardViewDelegate); }
-keepclassmembers class android.support.v7.widget.CardViewApi21 { float getMinWidth(android.support.v7.widget.CardViewDelegate); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.String[][] create(java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.TextLine { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void internStrings(java.lang.String[][]); }
-keepclassmembers class android.widget.TextView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.widget.TextView { android.graphics.Path getUpdatedHighlightPath(); }
-keepclassmembers class android.text.TextLine { float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean); }
-keepclassmembers class android.database.DatabaseUtils { int findRowIdColumnIndex(java.lang.String[]); }
-keepclassmembers class android.widget.TextView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment$1 { void run(); }
-keepclassmembers class android.text.TextLine { int getOffsetBeforeAfter(int,int,int,boolean,int,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch find(int); }
-keepclassmembers class android.widget.TextView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractMatch(java.lang.CharSequence,int); }
-keepclassmembers class android.widget.TextView { int getFadeTop(boolean); }
-keepclassmembers class android.text.TextLine { float handleText(android.text.TextPaint,int,int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractInnerMatch(java.lang.String,int); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { android.util.SparseArray buildActionExtrasMap(java.util.List); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch parseAndVerify(java.lang.String,int); }
-keepclassmembers class android.widget.TextView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnEnter(); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnTab(); }
-keepclassmembers class android.widget.TextView { int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { int getBaseline(); }
-keepclassmembers class android.text.TextLine { float handleReplacement(android.text.style.ReplacementSpan,android.text.TextPaint,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class android.text.TextLine { void drawTextRun(android.graphics.Canvas,android.text.TextPaint,int,int,int,int,boolean,float,int); }
-keepclassmembers class android.widget.TextView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.text.TextLine { float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class android.text.TextLine { float ascent(int); }
-keepclassmembers class android.widget.TextView { android.text.Layout$Alignment getLayoutAlignment(); }
-keepclassmembers class java.math.Conversion { double bigInteger2Double(java.math.BigInteger); }
-keepclassmembers class android.widget.TextView { void assumeLayout(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamiliesWithDefault(android.graphics.FontFamily[]); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamilies(android.graphics.FontFamily[]); }
-keepclassmembers class android.graphics.Typeface { void init(); }
-keepclassmembers class android.graphics.Typeface { void <init>(long); }
-keepclassmembers class java.util.ArrayDeque { void allocateElements(int); }
-keepclassmembers class android.graphics.Typeface { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.ArrayDeque { void addLast(java.lang.Object); }
-keepclassmembers class android.graphics.Typeface { int hashCode(); }
-keepclassmembers class java.util.ArrayDeque { void doubleCapacity(); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object pollFirst(); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.TextView { int desired(android.text.Layout); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object pollLast(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Paths { java.lang.String cleanFileName(java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean compressText(float); }
-keepclassmembers class java.util.ArrayDeque { boolean removeFirstOccurrence(java.lang.Object); }
-keepclassmembers class java.util.ArrayDeque { boolean delete(int); }
-keepclassmembers class java.util.ArrayDeque { void clear(); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(android.text.Layout,boolean); }
-keepclassmembers class android.widget.TextView { void onMeasure(int,int); }
-keepclassmembers class android.util.Pair { int hashCode(); }
-keepclassmembers class android.widget.TextView { void checkForRelayout(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class java.util.ArrayDeque { int size(); }
-keepclassmembers class android.widget.TextView { boolean bringTextIntoView(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getChangingConfigurations(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence localizeDigits(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class java.util.Formatter { void doFormat(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence insertGrouping(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAlpha(int); }
-keepclassmembers class android.widget.TextView { boolean bringPointIntoView(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { void freePage(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { java.lang.String getPath(int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { char charAt(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { void reloadImage(int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence padding(java.lang.CharSequence,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void jumpToCurrentState(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromString(); }
-keepclassmembers class android.widget.TextView { boolean moveCursorToVisibleOffset(); }
-keepclassmembers class android.widget.TextView { void convertFromViewportToContentCoordinates(android.graphics.Rect); }
-keepclassmembers class java.util.Formatter { java.lang.StringBuilder wrapParentheses(java.lang.StringBuilder); }
-keepclassmembers class android.widget.TextView { void getInterestingRect(android.graphics.Rect,int); }
-keepclassmembers class android.widget.TextView { int viewportToContentVerticalOffset(); }
-keepclassmembers class android.widget.TextView { void setInputTypeSingleLine(boolean); }
-keepclassmembers class android.widget.TextView { int viewportToContentHorizontalOffset(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean selectDrawable(int); }
-keepclassmembers class android.widget.TextView { boolean canMarquee(); }
-keepclassmembers class android.widget.TextView { void startMarquee(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromBigInteger(); }
-keepclassmembers class java.util.Formatter { boolean appendT(java.lang.StringBuilder,char,java.util.Calendar); }
-keepclassmembers class android.widget.TextView { void sendBeforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromInteger(); }
-keepclassmembers class android.widget.TextView { void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void animate(boolean); }
-keepclassmembers class android.widget.TextView { void removeAdjacentSuggestionSpans(int); }
-keepclassmembers class android.widget.TextView { void sendOnTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.widget.TextView { void sendAfterTextChanged(android.text.Editable); }
-keepclassmembers class java.util.zip.Inflater { int getRemaining(); }
-keepclassmembers class java.util.Formatter { void appendLocalized(java.lang.StringBuilder,long,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromSpecialNumber(double); }
-keepclassmembers class java.util.zip.Inflater { void checkOpen(); }
-keepclassmembers class java.util.zip.Inflater { void end(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromFloat(); }
-keepclassmembers class java.util.Formatter { boolean startsWithMinusSign(java.lang.CharSequence,java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.Formatter { void transformE(java.lang.StringBuilder); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$VPage$VSegment { boolean checkVisibility(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$VPage$VSegment { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.TextView { float getLeftFadingEdgeStrength(); }
-keepclassmembers class android.widget.TextView { void updateAfterEdit(); }
-keepclassmembers class java.util.Formatter { void transformF(java.lang.StringBuilder); }
-keepclassmembers class android.widget.TextView { float getRightFadingEdgeStrength(); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollExtent(); }
-keepclassmembers class java.util.Formatter { void transformA(java.lang.StringBuilder); }
-keepclassmembers class android.widget.TextView { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { int computeHorizontalScrollRange(); }
-keepclassmembers class java.util.Formatter { void transformG(java.lang.StringBuilder); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[],int,int); }
-keepclassmembers class java.nio.CharBuffer { char charAt(int); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.Context wrap(android.content.Context); }
-keepclassmembers class android.widget.TextView { boolean isSuggestionsEnabled(); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.TextView { float convertToLocalHorizontalCoordinate(float); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { float[] createLUT(android.animation.TimeInterpolator,long); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect); }
-keepclassmembers class android.view.Gravity { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void completeScroll(boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo); }
-keepclassmembers class android.support.v4.view.ViewPager { int determineTargetPage(int,float,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnPageScrolled(int,float,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnScrollStateChanged(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void dispatchOnPageSelected(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void enableLayers(boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { int getClientWidth(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean isGutterDrag(float,float); }
-keepclassmembers class android.widget.TextView { void paste(int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean performDrag(float); }
-keepclassmembers class android.widget.TextView { int getLineAtCoordinate(float); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean pageScrolled(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void recomputeScrollPosition(int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void removeNonDecorViews(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean resetTouch(); }
-keepclassmembers class android.support.v4.view.ViewPager { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void scrollToItem(int,boolean,int,boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean canScroll(android.view.View,boolean,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void sortChildDrawingOrder(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean canScrollHorizontally(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager { float distanceInfluenceForSnapDuration(float); }
-keepclassmembers class android.support.v4.view.ViewPager { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForPosition(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewPager { void onPageScrolled(int,float,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewPager { void populate(int); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.support.v4.view.ViewPager { void onMeasure(int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void setAdapter(android.support.v4.view.PagerAdapter); }
-keepclassmembers class android.support.v4.view.ViewPager { void smoothScrollTo(int,int,int); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void release(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItemInternal(int,boolean,boolean,int); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void streamFailed(java.io.IOException); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void streamFinished(boolean,okhttp3.internal.http.HttpCodec); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(boolean,boolean); }
-keepclassmembers class okio.AsyncTimeout$1 { void write(okio.Buffer,long); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(boolean,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class android.text.method.DigitsKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.DigitsKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.view.animation.Animation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.view.animation.Animation { android.view.animation.Animation clone(); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { void <init>(ar.rulosoft.mimanganu.MangaFragment,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void resolveAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.WebViewFactoryProvider getProvider(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { boolean verifyAnchorView(android.view.View,android.support.design.widget.CoordinatorLayout); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.GapWorker { void flushTaskWithDeadline(android.support.v7.widget.GapWorker$Task,long); }
-keepclassmembers class android.widget.ImageView$ScaleType { android.widget.ImageView$ScaleType[] values(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { boolean isViewValidAsAnchor(android.view.View,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.view.animation.Animation { void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.CompoundAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.view.animation.Animation { void initializeInvalidateRegion(int,int,int,int); }
-keepclassmembers class android.os.StatFs { int getAvailableBlocks(); }
-keepclassmembers class java.text.NumberFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.View$13 { void setValue(java.lang.Object,float); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { android.graphics.RectF getBitmapRect(android.graphics.Matrix); }
-keepclassmembers class android.view.View$13 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page initValues(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void freeMemory(); }
-keepclassmembers class android.os.StatFs { int getBlockCount(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.util.SparseArray { android.util.SparseArray clone(); }
-keepclassmembers class android.app.ActivityOptions { void <init>(android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerJellybeanMr1 { android.view.Display[] getDisplays(java.lang.Object); }
-keepclassmembers class android.hardware.input.InputManager { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class android.os.StatFs { int getBlockSize(); }
-keepclassmembers class android.content.IIntentSender$Stub { android.content.IIntentSender asInterface(android.os.IBinder); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void scrollBy(float,float); }
-keepclassmembers class android.text.AutoText { void init(android.content.res.Resources); }
-keepclassmembers class android.animation.Animator { android.animation.Animator clone(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void <init>(byte[]); }
-keepclassmembers class android.graphics.RectF { void set(android.graphics.Rect); }
-keepclassmembers class android.view.ViewPropertyAnimator { void cancel(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeadServer { java.lang.String getServerName(ar.rulosoft.mimanganu.componentes.Manga); }
-keepclassmembers class android.graphics.Rect { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.ViewPropertyAnimator { void animatePropertyBy(int,float,float); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void scrollBy(float,float,double); }
-keepclassmembers class java.security.Security { java.security.Provider[] getProviders(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { int addManga(android.content.Context,ar.rulosoft.mimanganu.componentes.Manga); }
-keepclassmembers class android.view.GLES20RecordingCanvas { android.view.GLES20RecordingCanvas obtain(android.view.RenderNode); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.animation.StateListAnimator { android.view.View getTarget(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.util.SparseBooleanArray { android.util.SparseBooleanArray clone(); }
-keepclassmembers class rapid.decoder.BitmapLoader { void <init>(); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { android.support.v7.preference.DialogPreference getPreference(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { void onBindDialogView(android.view.View); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { boolean compareAndSet(boolean,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { int searchForNewChapters(int,android.content.Context,boolean); }
-keepclassmembers class java.io.DataInputStream { byte readByte(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { ar.rulosoft.mimanganu.componentes.Manga getFullManga(android.content.Context,int,boolean); }
-keepclassmembers class java.io.DataInputStream { char readChar(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$PaintPool { android.graphics.Paint obtain(int); }
-keepclassmembers class rapid.decoder.BitmapLoader { boolean equals(java.lang.Object); }
-keepclassmembers class rapid.decoder.TwiceReadableInputStream { rapid.decoder.TwiceReadableInputStream getInstanceFrom(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { boolean equals(java.lang.Object); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$PaintPool { void onReset(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void inactivateFragment(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void markAllChapters(android.content.Context,int,boolean); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { boolean isNested(android.view.View,android.util.ArrayMap); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.view.ViewGroup getDecor(); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void <init>(byte[]); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { void addItemView(android.view.View,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setEpicenter(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void markChapter(android.content.Context,int,boolean); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { android.content.ContentValues setMangaCV(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { android.support.v7.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void setUpgradable(android.content.Context,int,boolean); }
-keepclassmembers class android.util.Range { void <init>(java.lang.Comparable,java.lang.Comparable); }
-keepclassmembers class org.acra.legacy.ReportConverter { void convert(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void showView(android.view.View,boolean); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void createListView(com.android.internal.app.AlertController); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaAdapter$ViewHolder { void <init>(android.view.View,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void updateChapterPlusDownload(android.content.Context,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { java.lang.Object findRealOwner(java.lang.Object); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { boolean isInTransitionGroup(android.view.ViewParent,android.view.ViewGroup); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$InitialPosition { it.sephiroth.android.library.imagezoom.ImageViewTouchBase$InitialPosition[] values(); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.CipherSuite$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(java.lang.Object); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void initContentView(); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex { java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.HorizontalPagedReader { void init(); }
-keepclassmembers class com.fedorvlasov.lazylist.MemCache$1 { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.json.JSONArray { org.json.JSONObject getJSONObject(int); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { android.view.ViewGroup$ViewLocationHolder obtain(android.view.ViewGroup,android.view.View); }
-keepclassmembers class org.json.JSONArray { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.util.MapCollections { boolean equalsSetHelper(java.util.Set,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$5 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.transition.Scene { android.transition.Scene getCurrentScene(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { boolean onBackPressed(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void setReader(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onAttach(android.content.Context); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setEmbeddedTabView(android.support.v7.widget.ScrollingTabContainerView); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { org.apache.harmony.security.x509.InfoAccessSyntax decode(byte[]); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.BackStackRecord { void configureTransitions(int,android.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onStart(); }
-keepclassmembers class android.graphics.RadialGradient { android.graphics.Shader copy(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onEndOver(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void postStartMessage(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.view.View$4 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.app.ProgressDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.view.View$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void startAnimation(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class okhttp3.internal.platform.Platform { void logCloseableLeak(java.lang.String,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment$2 { void run(); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer value(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.GapWorker$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.IdentifiableCookie { java.util.List decorateAll(java.util.Collection); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void removeStartMessage(android.view.View); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void applyFixedSizeWindow(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.IdentifiableCookie { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { boolean testLogin(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.widget.NumberPicker { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean initializePanelContent(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { android.view.ViewGroup createSubDecor(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { void assignPositionFromScrapList(android.view.View); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean apply(java.lang.Object); }
-keepclassmembers class okhttp3.ConnectionPool { java.net.Socket deduplicate(okhttp3.Address,okhttp3.internal.connection.StreamAllocation); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { void startAnimating(); }
-keepclassmembers class okhttp3.ConnectionPool { okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route); }
-keepclassmembers class android.widget.NumberPicker { void postBeginSoftInputOnLongPressCommand(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void closePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,boolean); }
-keepclassmembers class rapid.decoder.ResourceBitmapLoader { android.graphics.Bitmap decode(android.graphics.BitmapFactory$Options); }
-keepclassmembers class rapid.decoder.ResourceBitmapLoader { java.io.InputStream getInputStream(); }
-keepclassmembers class android.support.v4.text.ICUCompatApi23 { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void initWindowDecorActionBar(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class rapid.decoder.ResourceBitmapLoader { boolean equals(java.lang.Object); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator { okhttp3.Cookie next(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void setContentView(int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void setContentView(android.view.View); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub { android.webkit.IWebViewUpdateService asInterface(android.os.IBinder); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableColorFilterAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { void requestPermissions(android.app.Activity,java.lang.String[],int); }
-keepclassmembers class com.android.internal.policy.PolicyManager { void <clinit>(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SharedPrefsCookiePersistor { java.util.List loadAll(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SharedPrefsCookiePersistor { void saveAll(java.util.Collection); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeAccessibilityRecordToParcel(android.view.accessibility.AccessibilityRecord,android.os.Parcel,int); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SharedPrefsCookiePersistor { void removeAll(java.util.Collection); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaAdapter { void <init>(android.content.Context,java.util.List,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { java.lang.String intListToString(java.util.List); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.widget.ArrayAdapter { void init(android.content.Context,int,int,java.util.List); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable getChild(int); }
-keepclassmembers class android.widget.ArrayAdapter { long getItemId(int); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View createViewFromResource(int,android.view.View,android.view.ViewGroup,int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { void onBindViewHolder(ar.rulosoft.mimanganu.adapters.ServerRecAdapter$ServerViewHolder,int); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verify(java.lang.String,javax.net.ssl.SSLSession); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { android.text.method.TextKeyListener$Capitalize[] values(); }
-keepclassmembers class android.text.Layout { int getParagraphLeft(int); }
-keepclassmembers class org.acra.collector.MemoryInfoCollector { org.acra.model.Element collectMemInfo(); }
-keepclassmembers class android.text.Layout { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,byte[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void addIdentifier(java.util.TreeMap,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$3 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1$1$1$2$1 { void run(); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(java.lang.Object,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.util.Collection getValues(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class okhttp3.HttpUrl { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$3 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void data(boolean,int,okio.BufferedSource,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga { void <init>(ar.rulosoft.mimanganu.componentes.Manga,android.app.Activity,android.view.View,boolean,boolean,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { void onAttach(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1ValueCollection { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.widget.EditText { android.text.Editable getText(); }
-keepclassmembers class android.graphics.Bitmap$Config { android.graphics.Bitmap$Config[] values(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { void onResume(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.graphics.Rect acquireTempRect(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class okhttp3.Headers { void <init>(okhttp3.Headers$Builder); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean shouldHideActionBarOnFling(float,float); }
-keepclassmembers class okhttp3.Headers { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getCharacterWidth(android.widget.TextView); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { int getActionBarHideOffset(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void layoutChildWithAnchor(android.view.View,android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void pullChildren(); }
-keepclassmembers class rapid.decoder.StreamBitmapLoader { void <init>(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void setActionBarHideOffset(int); }
-keepclassmembers class java.net.InterfaceAddress { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.View getChildAt(int); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.ViewGroup$ChildListForAccessibility obtain(android.view.ViewGroup,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.InitGlobals { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.util.AbstractSet { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.support.design.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getLastChildRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.app.FragmentState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.support.design.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View); }
-keepclassmembers class android.widget.ScrollView { void flingWithNestedDispatch(int); }
-keepclassmembers class android.widget.ScrollView { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class android.widget.ScrollView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.text.DecimalFormat { java.lang.Number parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.widget.ScrollView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.support.v4.text.ICUCompatIcs { java.lang.String getScript(java.lang.String); }
-keepclassmembers class android.support.v4.text.ICUCompatIcs { java.lang.String addLikelySubtags(java.util.Locale); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onLayoutChild(android.view.View,int); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable$Callback getCallback(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$calcStorage { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity); }
-keepclassmembers class android.widget.ListView { boolean handleHorizontalFocusWithinListItem(int); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter { void <init>(android.support.v7.preference.PreferenceGroup); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter { void syncMyPreferences(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void scheduleNext(); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void recordLastChildRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { boolean _isConnected(android.content.Context); }
-keepclassmembers class android.widget.ListView { boolean isViewAncestorOf(android.view.View,android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$8 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int,float); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getIntrinsicHeight(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getIntrinsicWidth(); }
-keepclassmembers class java.security.KeyFactory { java.security.KeyFactory getInstance(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$6 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus { ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus[] values(); }
-keepclassmembers class android.animation.AnimatorInflater { void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float); }
-keepclassmembers class java.util.Locale { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePattern(java.lang.String,java.util.Locale); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void bindItemView(android.support.v7.view.menu.MenuItemImpl,android.support.v7.view.menu.MenuView$ItemView); }
-keepclassmembers class android.animation.AnimatorInflater { void setupValues(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,boolean,int,boolean,int); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class java.util.Locale { java.lang.String makeLanguageTag(); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.Fragment getFragment(android.os.Bundle,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.view.View getItemView(android.support.v7.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean hideOverflowMenu(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ValueAnimator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float); }
-keepclassmembers class rapid.decoder.NextLayoutInspector$LayoutChangeInspector { void onGlobalLayout(); }
-keepclassmembers class java.util.Locale { java.lang.String serializeExtensions(java.util.Map); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.SetCookieCache { void addAll(java.util.Collection); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$LoadMangasTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean showOverflowMenu(); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$LoadMangasTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.util.HashMap { void <init>(); }
-keepclassmembers class okhttp3.internal.Util$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.HashMap { void <init>(int); }
-keepclassmembers class java.util.HashMap { void constructorPutAll(java.util.Map); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$calcStorage { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.util.HashMap { java.lang.Object clone(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { boolean isConnected(android.content.Context,int); }
-keepclassmembers class java.util.Locale { void addUnicodeExtensionToExtensionsMap(java.util.Set,java.util.Map,java.util.Map); }
-keepclassmembers class java.util.zip.ZipFile$1 { java.util.zip.ZipEntry nextElement(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.widget.TextView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(android.app.Fragment,int,int,int,boolean); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String getInstructionSet(java.lang.String); }
-keepclassmembers class java.util.Locale { java.lang.String convertGrandfatheredTag(java.lang.String); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatHC { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { boolean isShowing(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void mutate(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void show(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { android.view.Display getDisplay(android.view.View); }
-keepclassmembers class android.app.FragmentManagerImpl { void removeFragment(android.app.Fragment,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { int getMinimumWidth(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { int getMinimumHeight(android.view.View); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node clone(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void resolveRules(int); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.animation.PathKeyframes$2 { float getFloatValue(float); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.animation.LayoutTransition$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class libcore.util.ZoneInfo { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { android.graphics.drawable.GradientDrawable$Orientation[] values(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Field checkAndGetReflectionField(java.io.ObjectStreamField); }
-keepclassmembers class libcore.util.ZoneInfo { boolean hasSameRules(java.util.TimeZone); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { void waitForRelroCreationCompleted(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList getTintListFromCache(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void ping(boolean,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void dataFrame(int,byte,okio.Buffer,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getFields(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean canScrollVertically(android.view.View,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.WeakHashMap getCache(); }
-keepclassmembers class java.io.FileOutputStream { void write(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$9 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean isNestedScrollingEnabled(android.view.View); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { ar.rulosoft.custompref.ColorListDialogFragment newInstance(android.support.v7.preference.Preference); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass lookupStreamClass(java.lang.Class); }
-keepclassmembers class android.transition.TransitionValues { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.VelocityTracker { android.view.VelocityTracker obtain(); }
-keepclassmembers class android.transition.TransitionValues { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { android.view.MenuItem setActionProvider(android.view.MenuItem,android.support.v4.view.ActionProvider); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPagerVertical { boolean canScroll(android.view.View,boolean,int,int,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { android.view.View getActionView(android.view.MenuItem); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition getTransitionAt(int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { android.view.MenuItem setActionView(android.view.MenuItem,android.view.View); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { android.view.MenuItem setActionView(android.view.MenuItem,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { boolean isActionViewExpanded(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { void setShowAsAction(android.view.MenuItem,int); }
-keepclassmembers class android.transition.TransitionManager { android.util.ArrayMap getRunningTransitions(); }
-keepclassmembers class rapid.decoder.BitmapTransformer { boolean equals(java.lang.Object); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeSetup(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$2 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class rapid.decoder.BitmapTransformer { rapid.decoder.BitmapDecoder region(int,int,int,int); }
-keepclassmembers class android.transition.TransitionSet { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$CanvasPool { android.graphics.Canvas obtain(android.graphics.Bitmap); }
-keepclassmembers class okhttp3.MediaType { boolean equals(java.lang.Object); }
-keepclassmembers class android.transition.TransitionSet { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$CanvasPool { boolean onRecycle(android.graphics.Canvas); }
-keepclassmembers class java.math.BigDecimal { void <init>(int,int); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$CanvasPool { boolean onRecycle(java.lang.Object); }
-keepclassmembers class android.os.storage.StorageVolume { void <init>(android.os.Parcel); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$CanvasPool { void onReset(java.lang.Object); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { javax.net.ssl.TrustManagerFactory getInstance(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { void applyFilter(int[][]); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase { void <init>(android.support.v4.media.session.MediaSessionCompat$Token); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { int getIndex(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub { android.hardware.display.IDisplayManager asInterface(android.os.IBinder); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { void onMangaClick(ar.rulosoft.mimanganu.componentes.Manga); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { void onPause(); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { void onResume(); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object convertBack(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase$CreateGroupByMangaNotificationsTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupStartValue(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase$CreateGroupByMangaNotificationsTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class rapid.decoder.FileBitmapLoader { android.graphics.BitmapRegionDecoder createBitmapRegionDecoder(); }
-keepclassmembers class rapid.decoder.FileBitmapLoader { android.graphics.Bitmap decode(android.graphics.BitmapFactory$Options); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { void onRequestedLastItem(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class rapid.decoder.FileBitmapLoader { java.io.InputStream getInputStream(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$GetPagesTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$GetPagesTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$GetPagesTask { void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.view.RenderNode { void end(android.view.HardwareCanvas); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfoNoScroll { void initialize(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$GetPagesTask { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { void <init>(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.servers.ServerBase,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(java.lang.Object,int); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Manifest$Chunk getChunk(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { void onPostExecute(java.lang.Object); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Attributes getAttributes(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfTransition(int,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatementCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void setItem(android.view.MenuItem); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.lang.String); }
-keepclassmembers class java.security.MessageDigest { java.security.MessageDigest getInstance(java.lang.String); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { java.util.List getExtendedKeyUsage(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger toBigInteger(); }
-keepclassmembers class java.net.InetSocketAddress { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex { java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate); }
-keepclassmembers class rapid.decoder.BitmapDecoder { rapid.decoder.BitmapLoader from(android.content.Context,android.net.Uri,boolean); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean showCharacterPicker(android.view.View,android.text.Editable,char,boolean,int); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.IWindowManager$Stub { android.view.IWindowManager asInterface(android.os.IBinder); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.Object); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.CertificateFactory getInstance(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$1 { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddAllMangaInDirectoryTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddAllMangaInDirectoryTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment valueOf(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddAllMangaInDirectoryTask { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment[] values(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.RippleDrawable,android.content.res.Resources); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddAllMangaInDirectoryTask { void onPreExecute(); }
-keepclassmembers class android.view.MenuInflater$MenuState { void setItem(android.view.MenuItem); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$ReDownloadImage { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { int getMaxAvailableHeight(android.view.View,int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$ReDownloadImage { void onPostExecute(java.lang.Object); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,java.util.List); }
-keepclassmembers class java.lang.Character { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void receiveData(okio.BufferedSource,int); }
-keepclassmembers class java.lang.Character { char toUpperCase(char); }
-keepclassmembers class java.lang.Character { char toLowerCase(char); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.Character { char toTitleCase(char); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SearchForNewChapters { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void removePromptView(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SearchForNewChapters { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(android.util.Property,float[]); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void createNotificationWithProgressbar(android.content.Context,int,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone(); }
-keepclassmembers class android.os.ServiceManager { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class java.util.jar.Attributes { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { org.apache.harmony.security.x509.AuthorityKeyIdentifier decode(byte[]); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String getValue(java.util.jar.Attributes$Name); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatLollipop { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { java.util.jar.JarEntry nextElement(); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { java.lang.Object get(long,android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void put(long,android.content.res.Resources$Theme,android.content.res.ConstantState); }
-keepclassmembers class java.lang.Boolean { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(java.lang.Object,int); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void addViewInt(android.view.View,int,boolean); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object findRealOwner(java.lang.Object); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler); }
-keepclassmembers class android.app.Notification$Action$Builder { android.app.Notification$Action build(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void attachView(android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void <init>(byte[]); }
-keepclassmembers class java.net.Socket { int getSoTimeout(); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData get(java.util.Locale); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getBottomDecorationHeight(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec { void writeRequestHeaders(okhttp3.Request); }
-keepclassmembers class java.net.Socket { void connect(java.net.SocketAddress,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getPosition(android.view.View); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivity(android.os.IBinder,int,android.content.Intent,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { int getEntity(java.lang.String); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getRightDecorationWidth(android.view.View); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { android.support.v7.preference.PreferenceScreen inflateFromResource(android.content.Context,int,android.support.v7.preference.PreferenceScreen); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getTopDecorationHeight(android.view.View); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void run(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getLeftDecorationWidth(android.view.View); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean canChildScrollUp(); }
-keepclassmembers class android.support.v7.widget.CardViewGingerbread { android.support.v7.widget.RoundRectDrawableWithShadow getShadowBackground(android.support.v7.widget.CardViewDelegate); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void startScaleUpAnimation(android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class android.os.Parcel { void writeMapInternal(java.util.Map); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class android.view.View { void sendAccessibilityHoverEvent(int); }
-keepclassmembers class android.widget.Toast { android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void connectTls(okhttp3.internal.connection.ConnectionSpecSelector); }
-keepclassmembers class android.os.Parcel { void writeValue(java.lang.Object); }
-keepclassmembers class android.view.View { android.view.ViewParent getParentForAccessibility(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean moveActivityTaskToBack(android.os.IBinder,boolean); }
-keepclassmembers class java.net.Socks4Message { void setCommandOrResult(int); }
-keepclassmembers class java.net.Socks4Message { void setPort(int); }
-keepclassmembers class java.net.Socks4Message { void setVersionNumber(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void defineAttributeDefault(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$12 { boolean onPreferenceClick(android.support.v7.preference.Preference); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { int toIntValue(java.lang.Object); }
-keepclassmembers class android.app.ActivityManagerProxy { int getTaskForActivity(android.os.IBinder,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object fromIntValue(int); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence readCharSequence(); }
-keepclassmembers class java.security.cert.Certificate { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.math.BigInteger toBigIntegerValue(java.lang.Object); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { void init(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.internal.http.HttpCodec newCodec(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable readParcelable(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable$Creator readParcelableCreator(java.lang.ClassLoader); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { boolean supportsUrl(okhttp3.HttpUrl); }
-keepclassmembers class android.view.View { boolean isInScrollingContainer(); }
-keepclassmembers class android.os.Parcel { java.io.Serializable readSerializable(java.lang.ClassLoader); }
-keepclassmembers class android.text.Selection { int getSelectionStart(java.lang.CharSequence); }
-keepclassmembers class android.text.Selection { int getSelectionEnd(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { android.view.SubMenu setHeaderTitle(java.lang.CharSequence); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AlarmReceiver { void setAlarms(android.content.Context,long,long); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AlarmReceiver { void stopAlarms(android.content.Context); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { void setLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.View { boolean hasAncestorThatBlocksDescendantFocus(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void configureTransitionsOptimized(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void addBigStyleToBuilderJellybean(android.app.Notification,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void configureTransitionsUnoptimized(android.support.v4.app.FragmentManagerImpl,int,android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.view.View,android.support.v4.util.ArrayMap); }
-keepclassmembers class android.view.View { android.view.View getProjectionReceiver(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.View { void transformRect(android.graphics.Rect); }
-keepclassmembers class android.view.View { void invalidateParentIfNeeded(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.view.View getInEpicenterView(android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean); }
-keepclassmembers class android.util.Size { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.app.NotificationCompat { android.widget.RemoteViews addStyleGetContentViewIcs(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.support.v7.app.NotificationCompat { android.widget.RemoteViews addStyleGetContentViewJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.support.v7.app.NotificationCompat { android.widget.RemoteViews addStyleGetContentViewLollipop(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void setOutEpicenter(java.lang.Object,java.lang.Object,android.support.v4.util.ArrayMap,boolean,android.support.v4.app.BackStackRecord); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1$1$1 { void onShow(android.content.DialogInterface); }
-keepclassmembers class android.app.ActivityManagerProxy { void setImmersive(android.os.IBinder,boolean); }
-keepclassmembers class java.util.logging.Level { java.util.logging.Level parse(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class java.util.logging.Level { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { void onResume(); }
-keepclassmembers class okhttp3.RequestBody$2 { long contentLength(); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { void onResume(); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { void onStart(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.app.ActivityManagerProxy { android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean requestVisibleBehind(android.os.IBinder,boolean); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { boolean imageViewReUse(ar.rulosoft.mimanganu.componentes.Imaginable,java.lang.String); }
-keepclassmembers class java.util.SimpleTimeZone { java.lang.Object clone(); }
-keepclassmembers class android.view.View { void damageShadowReceiver(); }
-keepclassmembers class java.util.concurrent.FutureTask { java.lang.Object report(int); }
-keepclassmembers class android.graphics.drawable.Ripple { void exitSoftware(int,int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamField { int compareTo(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.Class getTypeInternal(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { void <init>(ar.rulosoft.mimanganu.MangaFragment,int); }
-keepclassmembers class android.view.ViewGroup { android.view.View getDeepestFocusedChild(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { void onPostExecute(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$4 { void onServerClick(ar.rulosoft.mimanganu.servers.ServerBase); }
-keepclassmembers class android.graphics.LinearGradient { android.graphics.Shader copy(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllListInfosSelectable(java.util.ArrayList); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { okhttp3.internal.http2.Http2Stream getStream(int); }
-keepclassmembers class android.util.SparseIntArray { android.util.SparseIntArray clone(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { void <init>(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.servers.ServerBase,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { okhttp3.internal.http2.Http2Stream removeStream(int); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { okhttp3.internal.http2.Ping removePing(int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$LoadMode { ar.rulosoft.mimanganu.ReaderFragment$LoadMode[] values(); }
-keepclassmembers class android.widget.ResourceCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor); }
-keepclassmembers class android.view.View { void setBackgroundRenderNodeProperties(android.view.RenderNode); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.View { android.view.RenderNode getDrawableRenderNode(android.graphics.drawable.Drawable,android.view.RenderNode); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { android.widget.ProgressBar$RefreshData obtain(int,int,boolean); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void draw(android.graphics.Canvas,int); }
-keepclassmembers class android.view.View { boolean isLayoutModeOptical(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$1 { void run(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int); }
-keepclassmembers class android.view.ViewGroup { android.view.View findChildWithAccessibilityFocus(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.util.TypedValue getTypedValue(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.animation.ValueAnimator { void cancel(); }
-keepclassmembers class android.view.View { void setBackgroundColor(int); }
-keepclassmembers class android.animation.ValueAnimator { int getCurrentAnimationsCount(); }
-keepclassmembers class okio.ByteString { okio.ByteString of(byte[]); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator$AnimationHandler getOrCreateAnimationHandler(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.view.View { android.view.View getRootView(); }
-keepclassmembers class okio.ByteString { int compareTo(java.lang.Object); }
-keepclassmembers class java.util.LinkedHashMap { void preModify(java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.view.View { void transformMatrixToGlobal(android.graphics.Matrix); }
-keepclassmembers class java.util.LinkedHashMap { void postRemove(java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.view.View { void transformMatrixToLocal(android.graphics.Matrix); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { com.android.internal.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void fillRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void adjustAppearance(); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void setActionView(android.view.View); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateInsideOut(android.view.View,com.android.internal.util.Predicate); }
-keepclassmembers class java.util.TreeMap$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroupOverlay getOverlay(); }
-keepclassmembers class okio.ByteString { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(android.util.Property,int[]); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder$IntPropertyValuesHolder clone(); }
-keepclassmembers class java.lang.Integer { double doubleValue(); }
-keepclassmembers class okhttp3.internal.http2.ErrorCode { okhttp3.internal.http2.ErrorCode[] values(); }
-keepclassmembers class java.lang.Integer { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Integer { float floatValue(); }
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerCompat { android.support.v4.hardware.display.DisplayManagerCompat getInstance(android.content.Context); }
-keepclassmembers class java.lang.Integer { long longValue(); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String,int); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator$1 { void onShow(android.content.DialogInterface); }
-keepclassmembers class android.view.View { boolean startNestedScroll(int); }
-keepclassmembers class java.io.ObjectInputStream { void checkReadPrimitiveTypes(); }
-keepclassmembers class android.content.res.AssetManager { boolean getResourceValue(int,int,android.util.TypedValue,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$AsyncAddChapters { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$AsyncAddChapters { java.lang.Void doInBackground(ar.rulosoft.mimanganu.componentes.Chapter[]); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDesc(); }
-keepclassmembers class android.view.ViewGroup { boolean damageChildDeferred(android.view.View); }
-keepclassmembers class okio.ByteString { byte[] toByteArray(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Exception readException(); }
-keepclassmembers class android.view.ViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.os.Bundle { android.os.Bundle getBundle(java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { void xmlBlockGone(int); }
-keepclassmembers class android.os.Bundle { android.os.Parcelable getParcelable(java.lang.String); }
-keepclassmembers class android.os.Bundle { android.os.Parcelable[] getParcelableArray(java.lang.String); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getParcelableArrayList(java.lang.String); }
-keepclassmembers class android.os.Bundle { android.util.SparseArray getSparseParcelableArray(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.Object getLastCustomNonConfigurationInstance(); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { android.text.Layout makeLayout(java.lang.CharSequence); }
-keepclassmembers class android.os.Bundle { android.os.IBinder getBinder(java.lang.String); }
-keepclassmembers class android.view.View { boolean inLiveRegion(); }
-keepclassmembers class java.io.ObjectInputStream { void readObjectNoData(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void <init>(byte[]); }
-keepclassmembers class android.util.LongSparseLongArray { android.util.LongSparseLongArray clone(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readEnumDesc(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$ViewElevationComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { boolean tryShow(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readEnum(boolean); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewLongString(boolean); }
-keepclassmembers class org.acra.util.JsonUtils { org.acra.collector.CrashReportData toCrashReportData(org.json.JSONObject); }
-keepclassmembers class org.acra.util.JsonUtils { org.json.JSONObject toJson(org.acra.collector.CrashReportData); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { org.apache.harmony.security.x509.SubjectKeyIdentifier decode(byte[]); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class android.app.Service { void attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { long getItemId(int); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.widget.RelativeLayout { android.view.View getRelatedView(int[],int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.RelativeLayout { android.widget.RelativeLayout$LayoutParams getRelatedViewParams(int[],int); }
-keepclassmembers class okio.GzipSource { void consumeTrailer(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Package getPackage(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void drawRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int); }
-keepclassmembers class android.support.v4.app.DialogFragment { android.view.LayoutInflater getLayoutInflater(android.os.Bundle); }
-keepclassmembers class java.io.ObjectInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SerializableCookie { okhttp3.Cookie decode(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.v7.util.DiffUtil$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.ServiceManagerNative { android.os.IServiceManager asInterface(android.os.IBinder); }
-keepclassmembers class android.app.INotificationManager$Stub { android.app.INotificationManager asInterface(android.os.IBinder); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { java.lang.String map2AlgName(java.lang.String); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { org.json.JSONObject collectDisplayData(android.view.Display); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void collectMetrics(android.util.DisplayMetrics,org.json.JSONObject); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLContext getInstance(java.lang.String); }
-keepclassmembers class java.security.SecureRandom { void <init>(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void startExitTransition(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$1 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class android.graphics.Interpolator { android.graphics.Interpolator$Result timeToValues(float[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void markRead(android.content.Context,boolean); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void setEnterTransition(java.lang.Object); }
-keepclassmembers class android.app.Activity { boolean showDialog(int,android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.TintResources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.app.Activity { void removeDialog(int); }
-keepclassmembers class android.app.Activity { void dismissDialog(int); }
-keepclassmembers class android.graphics.Color { int getHtmlColor(java.lang.String); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object get(java.lang.Object,int); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void <init>(byte[]); }
-keepclassmembers class org.acra.collector.DropBoxCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter { void run(); }
-keepclassmembers class java.lang.reflect.Array { int getLength(java.lang.Object); }
-keepclassmembers class android.widget.Spinner$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.lang.reflect.Array { void set(java.lang.Object,int,java.lang.Object); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void dispatchPresenterUpdate(boolean); }
-keepclassmembers class java.lang.reflect.Array { void setBoolean(java.lang.Object,int,boolean); }
-keepclassmembers class java.lang.reflect.Array { void setByte(java.lang.Object,int,byte); }
-keepclassmembers class java.lang.reflect.Array { void setDouble(java.lang.Object,int,double); }
-keepclassmembers class java.lang.reflect.Array { void setChar(java.lang.Object,int,char); }
-keepclassmembers class java.lang.reflect.Array { void setFloat(java.lang.Object,int,float); }
-keepclassmembers class java.lang.reflect.Array { void setInt(java.lang.Object,int,int); }
-keepclassmembers class java.lang.reflect.Array { void setLong(java.lang.Object,int,long); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean dispatchSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder,android.support.v7.view.menu.MenuPresenter); }
-keepclassmembers class java.lang.reflect.Array { void setShort(java.lang.Object,int,short); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$1 { void onShow(android.content.DialogInterface); }
-keepclassmembers class android.support.v7.preference.ListPreferenceDialogFragmentCompat { java.lang.CharSequence[] getCharSequenceArray(android.os.Bundle,java.lang.String); }
-keepclassmembers class android.support.v7.preference.ListPreferenceDialogFragmentCompat { android.support.v7.preference.ListPreference getListPreference(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.app.Activity { android.net.Uri getReferrer(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setCharAt(int,char); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void close(boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsUnread { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.view.MenuItem getItem(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsUnread { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean selectTransition(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void checkShutdownAccess(); }
-keepclassmembers class android.os.StrictMode { void setBlockGuardPolicy(int); }
-keepclassmembers class android.os.StrictMode { boolean tooManyViolationsThisLoop(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void removeMenuPresenter(android.support.v7.view.menu.MenuPresenter); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { ar.rulosoft.mimanganu.componentes.Chapter getChapter(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void interruptIdleWorkers(boolean); }
-keepclassmembers class android.support.v4.app.FragmentState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.lang.Runnable getTask(); }
-keepclassmembers class android.view.View$3 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { void rInflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.Preference,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.view.View$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.os.IRemoteCallback$Stub { android.os.IRemoteCallback asInterface(android.os.IBinder); }
-keepclassmembers class android.widget.ProgressBar { void startAnimation(); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { android.support.v7.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,android.support.v7.preference.PreferenceGroup); }
-keepclassmembers class android.animation.LayoutTransition$6 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.ProgressBar { void stopAnimation(); }
-keepclassmembers class android.widget.ProgressBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { android.view.View$AttachInfo$InvalidateInfo obtain(); }
-keepclassmembers class java.net.NetworkInterface { void collectIpv4Address(java.lang.String,java.util.List,java.util.List); }
-keepclassmembers class java.net.NetworkInterface { java.net.NetworkInterface getByInetAddress(java.net.InetAddress); }
-keepclassmembers class android.animation.PathKeyframes$3 { int getIntValue(float); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class org.acra.ErrorReporter { org.acra.builder.ReportPrimer getReportPrimer(org.acra.config.ACRAConfiguration); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <init>(int,java.lang.Object[],org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.pkcs7.AuthenticatedAttributes,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],java.util.List); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.net.NetworkInterface { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.EnumMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.EnumMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { org.apache.harmony.security.x509.NameConstraints decode(byte[]); }
-keepclassmembers class java.net.NetworkInterface { java.lang.String toString(); }
-keepclassmembers class org.acra.collector.CrashReportData { java.lang.String getProperty(org.acra.ReportField); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnection tryAcquirePrimaryConnectionLocked(int); }
-keepclassmembers class java.util.EnumMap { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.InhibitAnyPolicy { void <init>(byte[]); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { boolean onPreferenceTreeClick(android.support.v7.preference.Preference); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void onNavigateToScreen(android.support.v7.preference.PreferenceScreen); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { android.support.v7.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void onDisplayPreferenceDialog(android.support.v7.preference.Preference); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$UpdateListTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.view.RenderNodeAnimator { void applyInterpolator(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { android.graphics.Rect getEmptyTempRect(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.graphics.Canvas); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog { void <init>(android.content.Context,ar.rulosoft.mimanganu.servers.ServerBase); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.view.RenderNodeAnimator { java.util.ArrayList cloneListeners(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator$DelayedAnimationHelper getHelper(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { void <init>(android.app.Application); }
-keepclassmembers class java.lang.reflect.AbstractMethod { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.RequestBody { okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int); }
-keepclassmembers class android.support.v7.preference.EditTextPreferenceDialogFragmentCompat { void onBindDialogView(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable { void run(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.util.Set reportContent(); }
-keepclassmembers class java.net.URL { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo$BatotoLoginInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class java.util.AbstractMap { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.AbstractMap { void putAll(java.util.Map); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object clone(); }
-keepclassmembers class android.support.v7.preference.EditTextPreferenceDialogFragmentCompat { android.support.v7.preference.EditTextPreference getEditTextPreference(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setProperty(java.lang.String,java.lang.Object); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void write(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void parse(org.xml.sax.InputSource); }
-keepclassmembers class java.lang.Runtime { java.lang.String doLoad(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class java.lang.Runtime { int availableProcessors(); }
-keepclassmembers class android.content.res.Configuration { void setTo(android.content.res.Configuration); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getStackTrace(); }
-keepclassmembers class org.acra.collector.DeviceIdCollector { java.lang.String getDeviceId(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat { android.support.v4.media.session.MediaControllerCompat getMediaController(android.app.Activity); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat { void setMediaController(android.app.Activity,android.support.v4.media.session.MediaControllerCompat); }
-keepclassmembers class android.support.v7.app.ResourcesFlusher { boolean flushLollipops(android.content.res.Resources); }
-keepclassmembers class android.support.v7.app.ResourcesFlusher { boolean flushThemedResourcesCache(java.lang.Object); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$2 { boolean areContentsTheSame(int,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean draw(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$2 { boolean areItemsTheSame(int,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean isFinished(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean onAbsorb(java.lang.Object,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean onRelease(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { boolean onPull(java.lang.Object,float); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { void setSize(java.lang.Object,int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.app.ActivityThread { android.content.Intent getIntentBeingBroadcast(); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector$CodecType { org.acra.collector.MediaCodecListCollector$CodecType[] values(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$RectPool { void onReset(java.lang.Object); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$RectPool { android.graphics.Rect obtain(int,int,int,int); }
-keepclassmembers class android.text.style.EasyEditSpan { void <init>(android.os.Parcel); }
-keepclassmembers class org.json.JSONObject { void <init>(java.util.Map); }
-keepclassmembers class java.text.Normalizer$Form { java.text.Normalizer$Form[] values(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void <init>(); }
-keepclassmembers class org.json.JSONObject { void <init>(org.json.JSONTokener); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { android.support.v7.view.menu.MenuPopup createPopup(); }
-keepclassmembers class android.support.v4.app.BackStackState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.preference.MultiSelectListPreferenceDialogFragmentCompat { android.support.v7.preference.internal.AbstractMultiSelectListPreference getListPreference(); }
-keepclassmembers class android.support.v7.app.AlertController { void centerButton(android.widget.Button); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { boolean equals(java.lang.Object); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject put(java.lang.String,java.lang.Object); }
-keepclassmembers class android.support.v7.app.AlertController { android.view.ViewGroup resolvePanel(android.view.View,android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void forceStop(int); }
-keepclassmembers class org.json.JSONObject { org.json.JSONArray getJSONArray(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject getJSONObject(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.json.JSONObject { void writeTo(org.json.JSONStringer); }
-keepclassmembers class okhttp3.Route { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment { ar.rulosoft.custompref.PreferenceListDirFragment newInstance(android.support.v7.preference.Preference); }
-keepclassmembers class android.widget.AbsListView { boolean acceptFilter(); }
-keepclassmembers class org.json.JSONObject { java.lang.Object wrap(java.lang.Object); }
-keepclassmembers class android.support.v7.app.AlertController { void setupContent(android.view.ViewGroup); }
-keepclassmembers class android.support.v7.app.AlertController { void setupCustomContent(android.view.ViewGroup); }
-keepclassmembers class android.support.v7.app.AlertController { void setupTitle(android.view.ViewGroup); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment { void onBindDialogView(android.view.View); }
-keepclassmembers class android.media.MediaCodecList { android.media.MediaCodecInfo[] getCodecInfos(); }
-keepclassmembers class android.widget.AbsListView { android.view.View getAccessibilityFocusedChild(android.view.View); }
-keepclassmembers class android.widget.AbsListView { android.view.View obtainView(int,boolean[]); }
-keepclassmembers class android.widget.AbsListView { void setFilterText(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$5 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void setItemViewLayoutParams(android.view.View,int); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { boolean isNewDownload(int); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean apply(java.lang.Object); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void onWindowFocusChanged(boolean); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[][] getZoneStrings(java.util.Locale); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void initServiceInfo(java.security.Provider); }
-keepclassmembers class android.view.GestureDetector { void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void appendServiceLocked(java.lang.String,java.security.Provider$Service); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.util.ArrayList getServices(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference { void onInfoChanged(); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$2 { void onClick(android.view.View); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$2 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.animation.PathKeyframes$1 { float getFloatValue(float); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference { void onSetInitialValue(boolean,java.lang.Object); }
-keepclassmembers class android.content.Intent { android.content.ClipData$Item makeClipItem(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { android.widget.RelativeLayout$DependencyGraph$Node acquire(android.view.View); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean$Builder { android.app.Notification build(); }
-keepclassmembers class okhttp3.internal.http.HttpDate { java.lang.String format(java.util.Date); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.RemoteViews$SetDrawableParameters { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteSession getThreadSession(); }
-keepclassmembers class java.beans.PropertyChangeSupport { void firePropertyChange(java.beans.PropertyChangeEvent); }
-keepclassmembers class android.support.v7.app.TwilightManager { android.support.v7.app.TwilightManager getInstance(android.content.Context); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { boolean isFinished(); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults); }
-keepclassmembers class java.util.Grego { int[] timeToFields(long,int[]); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void stop(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(int,int); }
-keepclassmembers class android.util.Rational { int compareTo(java.lang.Object); }
-keepclassmembers class java.nio.FileChannelImpl$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { android.widget.EditText getTextFilterInput(); }
-keepclassmembers class android.widget.AbsListView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.widget.Filter$RequestHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList valueOf(int); }
-keepclassmembers class android.support.v7.widget.CardView { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { android.support.v7.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class android.graphics.Matrix { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.io.File,boolean,int); }
-keepclassmembers class okhttp3.internal.connection.ConnectInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.JarEntry getJarEntry(java.lang.String); }
-keepclassmembers class android.widget.EdgeEffect { void <clinit>(); }
-keepclassmembers class java.util.jar.JarFile { java.util.HashMap readMetaEntries(java.util.zip.ZipFile,boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void mutate(); }
-keepclassmembers class android.support.v4.app.NotificationCompat { void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList); }
-keepclassmembers class android.support.v4.app.NotificationCompat { void addStyleToBuilderApi24(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style); }
-keepclassmembers class java.util.jar.JarFile { java.util.List getMetaEntries(java.util.zip.ZipFile); }
-keepclassmembers class org.acra.util.Installation { java.lang.String readInstallationFile(java.io.File); }
-keepclassmembers class java.util.TreeMap$Bound { java.util.TreeMap$Bound[] values(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter$ServerViewHolder { void <init>(ar.rulosoft.mimanganu.adapters.ServerRecAdapter,android.view.View); }
-keepclassmembers class android.support.v4.app.NotificationCompat { void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style); }
-keepclassmembers class android.support.design.widget.Snackbar { android.view.ViewGroup findSuitableParent(android.view.View); }
-keepclassmembers class android.support.v7.app.NotificationCompat$Builder { java.lang.CharSequence resolveText(); }
-keepclassmembers class org.acra.file.LastModifiedComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View); }
-keepclassmembers class android.support.design.widget.Snackbar { android.support.design.widget.Snackbar make(android.view.View,java.lang.CharSequence,int); }
-keepclassmembers class android.support.v7.app.NotificationCompat$Builder { java.lang.CharSequence resolveTitle(); }
-keepclassmembers class android.support.design.widget.Snackbar { android.support.design.widget.Snackbar setText(java.lang.CharSequence); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1$1$1$2 { void onClick(android.view.View); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.util.ZoneInfo makeTimeZone(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { int resolveMinimumHeight(android.view.View); }
-keepclassmembers class android.net.Uri { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class java.lang.Enum { java.lang.Enum[] getSharedConstants(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$ViewPositionComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$19$1 { void onShow(android.content.DialogInterface); }
-keepclassmembers class ar.rulosoft.custompref.ArrayAdapterColor { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class okhttp3.Dispatcher { void promoteCalls(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { android.util.TypedValue getTypedValue(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback { boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.database.DefaultDatabaseErrorHandler { void onCorruption(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { boolean isGrayscaleIcon(android.graphics.Bitmap); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { boolean isGrayscaleIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteLine(android.view.View,android.text.Editable); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void insertIconView(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void insertRadioButton(); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$LoadLastTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$LoadLastTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void onMeasure(int,int); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void handleMessage(android.os.Message); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$LoadLastTask { void onPostExecute(java.util.ArrayList); }
-keepclassmembers class android.graphics.SweepGradient { android.graphics.Shader copy(); }
-keepclassmembers class android.animation.AnimatorSet { void playTogether(java.util.Collection); }
-keepclassmembers class android.app.ISearchManager$Stub { android.app.ISearchManager asInterface(android.os.IBinder); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList getChildAnimations(); }
-keepclassmembers class android.animation.AnimatorSet { void setTarget(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet { void cancel(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void insertCheckBox(); }
-keepclassmembers class android.animation.AnimatorSet { void end(); }
-keepclassmembers class android.view.GhostView { void <init>(android.view.View); }
-keepclassmembers class android.view.FocusFinder { android.view.FocusFinder getInstance(); }
-keepclassmembers class android.view.GhostView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.GhostView { void onDetachedFromWindow(); }
-keepclassmembers class libcore.io.IoBridge { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.view.GhostView { void calculateMatrix(android.view.View,android.view.ViewGroup,android.graphics.Matrix); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters { void <init>(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.servers.ServerBase,int,android.view.ActionMode); }
-keepclassmembers class android.widget.TextView$Drawables { void setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters { void onPostExecute(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.GhostView { boolean isGhostWrapper(android.view.View); }
-keepclassmembers class libcore.io.IoBridge { boolean isConnected(java.io.FileDescriptor,java.net.InetAddress,int,int,int); }
-keepclassmembers class android.view.GhostView { void getParents(android.view.View,java.util.ArrayList); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { android.support.v7.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.animation.AnimatorSet { void reverse(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class libcore.io.IoBridge { java.lang.Object getSocketOptionErrno(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.io.IoBridge { void setSocketOptionErrno(java.io.FileDescriptor,int,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void flingWithNestedDispatch(int); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]); }
-keepclassmembers class java.math.RoundingMode { java.math.RoundingMode[] values(); }
-keepclassmembers class android.os.Looper { android.os.Looper myLooper(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]); }
-keepclassmembers class android.app.ActivityTransitionState { void startExitOutTransition(android.app.Activity,android.os.Bundle); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean setFlag(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class libcore.io.IoBridge { java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.IoBridge { int getSocketLocalPort(java.io.FileDescriptor); }
-keepclassmembers class org.apache.harmony.security.x509.AlternativeName { void <init>(boolean,byte[]); }
-keepclassmembers class java.net.PlainSocketImpl { void accept(java.net.SocketImpl); }
-keepclassmembers class android.hardware.input.IInputManager$Stub { android.hardware.input.IInputManager asInterface(android.os.IBinder); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(int); }
-keepclassmembers class okhttp3.internal.http2.Header { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.PlainSocketImpl { int socksGetServerPort(); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(); }
-keepclassmembers class java.net.PlainSocketImpl { java.net.InetAddress socksGetServerAddress(); }
-keepclassmembers class android.animation.LayoutTransition { void runDisappearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.animation.LayoutTransition { void runAppearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class java.net.PlainSocketImpl { void connect(java.net.SocketAddress,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.lang.Thread$State { java.lang.Thread$State[] values(); }
-keepclassmembers class android.support.design.widget.SnackbarManager$1 { boolean handleMessage(android.os.Message); }
-keepclassmembers class java.util.jar.ManifestReader { void readEntries(java.util.Map,java.util.Map); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$AddAllMangaInDirectoryTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$AddAllMangaInDirectoryTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class java.lang.ThreadGroup { void setMaxPriority(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$AddAllMangaInDirectoryTask { void onPreExecute(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$AddAllMangaInDirectoryTask { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter$ViewHolder { void <init>(android.view.View); }
-keepclassmembers class android.graphics.BitmapRegionDecoder { android.graphics.BitmapRegionDecoder newInstance(java.io.InputStream,boolean); }
-keepclassmembers class android.view.ViewStub { void setVisibility(int); }
-keepclassmembers class android.view.ViewStub { android.view.View inflate(); }
-keepclassmembers class java.io.ObjectStreamClass$2 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader$BitmapDisplay { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(byte[]); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object[] create(java.lang.Class); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class rapid.decoder.ResourceBitmapLoader$Identifier { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.widget.Spinner { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.support.v4.util.MapCollections$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.FragmentActivity getActivity(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <init>(java.lang.ThreadLocal$Values); }
-keepclassmembers class rapid.decoder.BitmapDecoder$ScaleBy { rapid.decoder.BitmapDecoder$ScaleBy obtain(float,float); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { java.net.URL nextElement(); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class dalvik.system.BlockGuard { dalvik.system.BlockGuard$Policy getThreadPolicy(); }
-keepclassmembers class java.text.SimpleDateFormat { void appendTimeZone(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class okhttp3.CertificatePinner { java.lang.String pin(java.security.cert.Certificate); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.CompoundGroup$1 { void onClick(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getObjectIdentifier(java.lang.String); }
-keepclassmembers class java.text.DateFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class okhttp3.CertificatePinner { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.CertificatePinner { java.util.List findMatchingPins(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page { void init(); }
-keepclassmembers class java.util.logging.LogManager { void addToFamilyTree(java.util.logging.Logger,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page { void unloadImage(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner { java.util.List clean(java.util.List,java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$11$1 { void onShow(android.content.DialogInterface); }
-keepclassmembers class java.util.Vector { java.lang.Object[] newElementArray(int); }
-keepclassmembers class java.util.logging.LogManager { void readConfigurationImpl(java.io.InputStream); }
-keepclassmembers class java.util.logging.LogManager { void reset(); }
-keepclassmembers class java.util.logging.LogManager { void setLevelRecursively(java.util.logging.Logger,java.util.logging.Level); }
-keepclassmembers class java.util.logging.LogManager { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MisMangasAdapter$ViewHolder { void <init>(ar.rulosoft.mimanganu.adapters.MisMangasAdapter,android.view.View); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <clinit>(); }
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub { android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsRead { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsRead { void onPostExecute(java.lang.Object); }
-keepclassmembers class org.acra.collector.SettingsCollector { boolean isAuthorized(java.lang.reflect.Field); }
-keepclassmembers class org.acra.ReportField { org.acra.ReportField[] values(); }
-keepclassmembers class org.acra.ReportField { org.acra.ReportField valueOf(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void decl(char[],int,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { void cancel(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$2 { void onReset(java.lang.Object); }
-keepclassmembers class okhttp3.internal.http2.PushObserver$1 { boolean onData(int,okio.BufferedSource,int,boolean); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollX(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollY(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.Touch { boolean isSelectionStarted(android.text.Spannable); }
-keepclassmembers class android.text.method.Touch { boolean isActivelySelecting(android.text.Spannable); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat setDuration(long); }
-keepclassmembers class rapid.decoder.IntegerMaker$2 { int toInteger(float); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat setListener(android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat setUpdateListener(android.support.v4.view.ViewPropertyAnimatorUpdateListener); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { void start(); }
-keepclassmembers class ar.rulosoft.navegadores.VolatileCookieJar { boolean contain(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { android.support.v4.view.ViewPropertyAnimatorCompat translationY(float); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class ar.rulosoft.navegadores.VolatileCookieJar { java.util.List loadForRequest(okhttp3.HttpUrl); }
-keepclassmembers class ar.rulosoft.navegadores.VolatileCookieJar { void saveFromResponse(okhttp3.HttpUrl,java.util.List); }
-keepclassmembers class com.android.internal.app.AlertController$ButtonHandler { void handleMessage(android.os.Message); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { java.lang.Object next(); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void readClass(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.acra.util.NonBlockingBufferedReader { java.lang.String readLine(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { boolean isCleartextTrafficPermitted(java.lang.String); }
-keepclassmembers class okio.SegmentedByteString { boolean equals(java.lang.Object); }
-keepclassmembers class android.transition.Transition { void addViewValues(android.transition.TransitionValuesMaps,android.view.View,android.transition.TransitionValues); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$11 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(byte[],int,int); }
-keepclassmembers class java.util.zip.InflaterInputStream { void fill(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatBase { android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater); }
-keepclassmembers class android.transition.Transition { android.transition.Transition clone(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class android.widget.Editor { void setFrame(); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class java.lang.Class { java.lang.String getDexCacheString(com.android.dex.Dex,int); }
-keepclassmembers class android.widget.Editor { void prepareCursorControllers(); }
-keepclassmembers class java.lang.Class { java.lang.Class getDexCacheType(com.android.dex.Dex,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor[] getDeclaredConstructors(); }
-keepclassmembers class android.widget.Editor { void onFocusChanged(boolean,int); }
-keepclassmembers class ar.rulosoft.mimanganu.LicenseFragment { void onResume(); }
-keepclassmembers class android.widget.Editor { void sendUpdateSelection(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$19 { boolean onPreferenceClick(android.support.v7.preference.Preference); }
-keepclassmembers class org.acra.ReportingInteractionMode { org.acra.ReportingInteractionMode[] values(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updateSelection(int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method[] getMethods(); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MisMangasAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$7 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.util.Hashtable { void <init>(int); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class java.util.Hashtable { void <init>(); }
-keepclassmembers class android.widget.Editor { void onTouchUpEvent(android.view.MotionEvent); }
-keepclassmembers class java.security.Signature$SignatureImpl { java.security.SignatureSpi getSpi(java.security.Key); }
-keepclassmembers class libcore.reflect.AnnotationFactory { java.lang.annotation.Annotation createAnnotation(java.lang.Class,libcore.reflect.AnnotationMember[]); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class java.util.Hashtable { void constructorPutAll(java.util.Map); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.HexStringParser { float parseFloat(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.Short { double doubleValue(); }
-keepclassmembers class java.lang.Short { long longValue(); }
-keepclassmembers class java.lang.Short { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Short { short parseShort(java.lang.String,int); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Object); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle handleGetBundle(boolean,java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class java.util.jar.JarVerifier { boolean readCertificates(); }
-keepclassmembers class java.util.ResourceBundle { java.util.Hashtable getLoaderCache(java.lang.Object); }
-keepclassmembers class java.util.jar.JarVerifier { void verifyCertificate(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$GetPageTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV23 { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$2 { boolean onQueryTextSubmit(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$GetPageTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class java.math.BigInt { java.math.BigInt exp(java.math.BigInt,int); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { okhttp3.Route nextPostponed(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.Reader$Direction { ar.rulosoft.mimanganu.componentes.readers.Reader$Direction[] values(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int,boolean); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.json.JSON { java.lang.String toString(java.lang.Object); }
-keepclassmembers class org.json.JSON { java.lang.Integer toInteger(java.lang.Object); }
-keepclassmembers class com.android.internal.util.ArrayUtils { byte[] newUnpaddedByteArray(int); }
-keepclassmembers class android.support.design.widget.ViewGroupUtilsHoneycomb { void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix); }
-keepclassmembers class com.android.internal.util.ArrayUtils { char[] newUnpaddedCharArray(int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.util.Map$Entry next(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { boolean[] newUnpaddedBooleanArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { int[] newUnpaddedIntArray(int); }
-keepclassmembers class android.widget.PopupWindow { void setContentView(android.view.View); }
-keepclassmembers class com.android.internal.util.ArrayUtils { float[] newUnpaddedFloatArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { long[] newUnpaddedLongArray(int); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub { android.view.accessibility.IAccessibilityManager asInterface(android.os.IBinder); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <init>(java.lang.String,com.android.i18n.phonenumbers.MetadataLoader,java.util.Map); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedObjectArray(int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class java.net.Proxy { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class rapid.decoder.BitmapDecoder$Region { boolean equals(java.lang.Object); }
-keepclassmembers class rapid.decoder.BitmapDecoder$Region { rapid.decoder.BitmapDecoder$Region obtain(int,int,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void loadMetadataFromFile(java.lang.String,java.lang.String,int,com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class android.widget.PopupWindow { void setLayoutDirectionFromAnchor(); }
-keepclassmembers class android.widget.PopupWindow { void dismiss(); }
-keepclassmembers class java.lang.Double { int intValue(); }
-keepclassmembers class java.lang.Double { long longValue(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { android.graphics.PorterDuff$Mode valueOf(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int,boolean); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,boolean,int,int,boolean,int,int,int); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getActive(java.lang.CharSequence,java.lang.Object,int,int); }
-keepclassmembers class android.widget.PopupWindow { void unregisterForScrollChanged(); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String); }
-keepclassmembers class android.app.Instrumentation { void checkStartActivityResult(int,java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int); }
-keepclassmembers class android.support.v7.app.AlertController$AlertParams { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPager { boolean canScroll(android.view.View,boolean,int,int,int); }
-keepclassmembers class android.support.v7.app.AlertController$AlertParams { void createListView(android.support.v7.app.AlertController); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { android.support.v7.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getRegionCodeForCountryCode(int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1$1 { void run(); }
-keepclassmembers class com.fedorvlasov.lazylist.MemCache { android.graphics.Bitmap getImageInMem(java.lang.String); }
-keepclassmembers class java.util.TreeMap$Node { boolean equals(java.lang.Object); }
-keepclassmembers class android.os.AsyncTask$Status { android.os.AsyncTask$Status[] values(); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub { com.android.internal.widget.ILockSettings asInterface(android.os.IBinder); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toolTypeToString(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getDeepestFocusedViewWithId(android.view.View); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endA(android.text.SpannableStringBuilder); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean onTouchForwarded(android.view.MotionEvent); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$3 { void onRefresh(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void forcePostponedTransactions(); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean onTouchObserved(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$9 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class java.util.HashSet { java.lang.Object clone(); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.support.v7.app.NotificationCompatImpl21 { void addMediaStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,int[],java.lang.Object); }
-keepclassmembers class okhttp3.CipherSuite { okhttp3.CipherSuite forJavaName(java.lang.String); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <init>(android.view.View,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void setHWLayerAnimListenerIfAlpha(android.view.View,android.view.animation.Animation); }
-keepclassmembers class java.lang.RealToString { java.lang.RealToString getInstance(); }
-keepclassmembers class android.support.v7.app.NotificationCompatImpl24 { void addDecoratedCustomViewStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <clinit>(); }
-keepclassmembers class android.support.v7.app.NotificationCompatImpl24 { void addDecoratedMediaCustomViewStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor); }
-keepclassmembers class org.acra.util.IOUtils$1 { boolean apply(java.lang.Object); }
-keepclassmembers class java.lang.Long { double doubleValue(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1$1$1$1 { void onClick(android.view.View); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer getInstance(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.lang.Long { int intValue(); }
-keepclassmembers class okhttp3.internal.Util { java.nio.charset.Charset bomAwareCharset(okio.BufferedSource,java.nio.charset.Charset); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentActivityCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean); }
-keepclassmembers class android.graphics.Path { void detectSimplePath(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentAttached(android.support.v4.app.Fragment,android.content.Context,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$ViewHolder { void <init>(android.view.View,boolean); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentCreated(android.support.v4.app.Fragment,android.os.Bundle,boolean); }
-keepclassmembers class okhttp3.internal.Util { java.util.List immutableList(java.lang.Object[]); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void connect(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentPaused(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentDetached(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentPreAttached(android.support.v4.app.Fragment,android.content.Context,boolean); }
-keepclassmembers class android.support.design.widget.SnackbarManager { boolean cancelSnackbarLocked(android.support.design.widget.SnackbarManager$SnackbarRecord,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentDestroyed(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.support.design.widget.SnackbarManager { void scheduleTimeoutLocked(android.support.design.widget.SnackbarManager$SnackbarRecord); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentResumed(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { void onResume(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentSaveInstanceState(android.support.v4.app.Fragment,android.os.Bundle,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentStarted(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.support.design.widget.SnackbarManager { void showNextSnackbarLocked(); }
-keepclassmembers class android.os.storage.IMountService$Stub { android.os.storage.IMountService asInterface(android.os.IBinder); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentStopped(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentViewCreated(android.support.v4.app.Fragment,android.view.View,android.os.Bundle,boolean); }
-keepclassmembers class libcore.net.url.FtpURLConnection { java.lang.String readLine(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchOnFragmentViewDestroyed(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult { void addRootSnake(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.View findContainingItemView(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean fling(int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void addSystemView(android.view.View,boolean); }
-keepclassmembers class android.app.Notification$InboxStyle { void addExtras(android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$CheckForAppUpdates { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureMenu(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { long getChangedHolderKey(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.text.style.SpellCheckSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String); }
-keepclassmembers class android.database.CursorWindow { int getInt(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$CheckForAppUpdates { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$CheckForAppUpdates { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.database.CursorWindow { float getFloat(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.Dialog$ListenersHandler { void handleMessage(android.os.Message); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void checkURI(java.lang.String); }
-keepclassmembers class android.text.TextUtils { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.os.BaseBundle { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$1 { void run(); }
-keepclassmembers class sun.misc.Unsafe { long objectFieldOffset(java.lang.reflect.Field); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String,int); }
-keepclassmembers class android.os.BaseBundle { java.lang.String getString(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { java.util.ArrayList getCharSequenceArrayList(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { java.lang.CharSequence getCharSequence(java.lang.String); }
-keepclassmembers class sun.misc.Unsafe { void unpark(java.lang.Object); }
-keepclassmembers class java.util.zip.ZipFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { void shrinkLine3Text(android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { void unshrinkLine3Text(android.widget.RemoteViews); }
-keepclassmembers class android.os.BaseBundle { java.lang.String[] getStringArray(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { int[] getIntArray(java.lang.String); }
-keepclassmembers class android.view.View$2 { boolean apply(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void addTarget(java.lang.Object,android.view.View); }
-keepclassmembers class android.util.Xml { android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void beginDelayedTransition(android.view.ViewGroup,java.lang.Object); }
-keepclassmembers class okhttp3.OkHttpClient { void <init>(okhttp3.OkHttpClient$Builder); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.String findKeyForValue(java.util.Map,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$13 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.X509TrustManager systemDefaultTrustManager(); }
-keepclassmembers class okhttp3.ResponseBody { okhttp3.ResponseBody create(okhttp3.MediaType,byte[]); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object cloneTransition(java.lang.Object); }
-keepclassmembers class java.util.WeakHashMap { void poll(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void removeTarget(java.lang.Object,android.view.View); }
-keepclassmembers class android.support.design.widget.BaseTransientBottomBar$1 { boolean handleMessage(android.os.Message); }
-keepclassmembers class java.util.AbstractList { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setEpicenter(java.lang.Object,android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setEpicenter(java.lang.Object,android.view.View); }
-keepclassmembers class java.util.TreeMap$Relation { java.util.TreeMap$Relation[] values(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { java.util.regex.Pattern getPatternForRegex(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.Object wrapTransitionInSet(java.lang.Object); }
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl { void <init>(android.content.Context); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void addScrapView(android.view.View,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getTransientStateView(int); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { java.lang.Object fromToken(android.content.Context,java.lang.Object); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { java.lang.Object getSessionToken(java.lang.Object); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { void setMediaController(android.app.Activity,java.lang.Object); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { int getIndex(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class okhttp3.Handshake { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.DownloadsFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.util.Linkify { void gatherTelLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class ar.rulosoft.mimanganu.DownloadsFragment { void onResume(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment { void setFirstRunDefaults(); }
-keepclassmembers class android.support.v4.text.BidiFormatter { java.lang.CharSequence unicodeWrap(java.lang.CharSequence,android.support.v4.text.TextDirectionHeuristicCompat,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment { void setNumberOfThreadsToBeEqualToNumberOfCores(int,java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class org.acra.dialog.BaseCrashReportDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment$PerformSearchTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment$PerformSearchTask { void onPostExecute(java.util.ArrayList); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment$PerformSearchTask { void onPreExecute(); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment$PerformSearchTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.android.internal.app.AlertController { void setupView(); }
-keepclassmembers class android.animation.AnimatorSet$Builder { void <init>(android.animation.AnimatorSet,android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder with(android.animation.Animator); }
-keepclassmembers class com.android.internal.app.AlertController { boolean setupTitle(android.view.ViewGroup); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder before(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment { void onResume(); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager asInterface(android.os.IBinder); }
-keepclassmembers class android.animation.PathKeyframes$4 { int getIntValue(float); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager getDefault(); }
-keepclassmembers class com.android.internal.app.AlertController { void setupContent(android.view.ViewGroup); }
-keepclassmembers class android.app.Notification$Builder { void populateExtras(android.os.Bundle); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getDefault(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void handleNotifyAccessibilityStateChanged(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void handleNotifyHighTextContrastStateChanged(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void handleNotifyTouchExplorationStateChanged(); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void showStrictModeViolation(boolean); }
-keepclassmembers class com.android.internal.app.AlertController { void centerButton(android.widget.Button); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getTimeZone(java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewObject(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.text.DynamicLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator clone(); }
-keepclassmembers class java.util.TreeMap$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page$SetImageTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewEnum(java.lang.Object,java.lang.Class,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class org.acra.collector.LogCatCollector$1 { boolean apply(java.lang.Object); }
-keepclassmembers class org.acra.collector.ConfigurationCollector { java.lang.Object getFieldValueName(java.util.Map,android.content.res.Configuration,java.lang.reflect.Field); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { android.support.v7.view.menu.MenuView getMenuView(android.view.ViewGroup); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page$SetImageTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class java.lang.Byte { double doubleValue(); }
-keepclassmembers class java.lang.Byte { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { java.lang.Object clone(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.Byte { long longValue(); }
-keepclassmembers class android.support.v7.app.AlertController$ButtonHandler { void handleMessage(android.os.Message); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.HtmlUnescape { java.lang.String Unescape(java.lang.String); }
-keepclassmembers class android.widget.CompoundButton { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { android.view.View inflate(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void setVisibility(int); }
-keepclassmembers class android.support.v4.app.SupportActivity { android.support.v4.app.SupportActivity$ExtraData getExtraData(java.lang.Class); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void <init>(ar.rulosoft.mimanganu.MainActivity,java.util.ArrayList,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { javax.security.auth.x500.X500Principal getIssuer(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SortAndLoadChapters { void onPostExecute(java.lang.Object); }
-keepclassmembers class okhttp3.internal.tls.BasicCertificateChainCleaner { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.HashMap$HashMapEntry { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void onStatusChanged(ar.rulosoft.mimanganu.services.ChapterDownload); }
-keepclassmembers class android.view.LayoutInflater { android.view.LayoutInflater from(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { org.apache.harmony.security.x509.IssuingDistributionPoint decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void wrapOnScrollChangedListener(android.widget.PopupWindow); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void <init>(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { org.apache.harmony.security.x509.CRLDistributionPoints decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.acra.file.Directory { org.acra.file.Directory[] values(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SortAndLoadChapters { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.os.storage.IMountService$Stub$Proxy { android.os.storage.StorageVolume[] getVolumeList(); }
-keepclassmembers class org.acra.collector.SimpleValuesCollector { java.lang.String getLocalIpAddress(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { android.database.sqlite.SQLiteConnection$PreparedStatement acquirePreparedStatement(java.lang.String); }
-keepclassmembers class android.widget.TextView$Marquee { void resetScroll(); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.Map); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { void cancel(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatGingerbread { android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatGingerbread { void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class[] getExceptions(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatGingerbread { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.String getInnerClassName(java.lang.Class); }
-keepclassmembers class android.widget.FastScroller { void setScrollbarPosition(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.util.HashMap$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { org.apache.harmony.security.x509.CertificatePolicies decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { android.view.ViewGroup getMMView(android.view.ViewGroup); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { android.view.ViewGroup getServerListView(android.view.ViewGroup); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.BufferIterator bigEndianIterator(); }
-keepclassmembers class android.widget.FastScroller { void transitionToHidden(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.reflect.Field { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.widget.FastScroller { void getSectionsFromIndexer(); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Proxy { void validateReturnTypes(java.util.List); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.widget.Editor$HandleView { void showActionPopupWindow(int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1 { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class android.media.AudioAttributes$Builder { android.media.AudioAttributes build(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void onStart(); }
-keepclassmembers class java.lang.Float { double doubleValue(); }
-keepclassmembers class okhttp3.Address { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Float { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Float { long longValue(); }
-keepclassmembers class java.lang.Float { int intValue(); }
-keepclassmembers class android.view.GLES20Canvas { void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.widget.FastScroller { void <clinit>(); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Object); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$LoadDetailsTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$LoadDetailsTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean startNestedScroll(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$1$1 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$LoadDetailsTask { void onPostExecute(java.lang.Void); }
-keepclassmembers class libcore.io.IoUtils$FileReader { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { org.apache.harmony.security.pkcs7.SignedData getSignedData(); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(android.graphics.Rect); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(android.graphics.Rect,android.graphics.Region$Op); }
-keepclassmembers class libcore.net.MimeUtils { void applyOverrides(); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(int,int,int,int); }
-keepclassmembers class libcore.net.MimeUtils { java.lang.String guessMimeTypeFromExtension(java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class com.franmontiel.persistentcookiejar.PersistentCookieJar { java.util.List filterPersistentCookies(java.util.List); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.franmontiel.persistentcookiejar.PersistentCookieJar { java.util.List loadForRequest(okhttp3.HttpUrl); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class org.acra.ACRA { void init(android.app.Application); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType { it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType valueOf(java.lang.String); }
-keepclassmembers class android.app.Fragment { android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType { it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType[] values(); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.File { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class dalvik.system.DexPathList { void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.io.File); }
-keepclassmembers class dalvik.system.DexPathList { java.io.File[] splitLibraryPath(java.lang.String); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexPathList$Element[] makeDexElements(java.util.ArrayList,java.io.File,java.util.ArrayList); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat23 { int noteProxyOp(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { void <clinit>(); }
-keepclassmembers class java.util.jar.Attributes$Name { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { void <init>(android.content.Context,android.view.View,android.content.SharedPreferences); }
-keepclassmembers class java.net.InetAddress { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.io.File { int compareTo(java.lang.Object); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] getAllByName(java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] getAllByNameImpl(java.lang.String,int); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getHostByAddrImpl(java.net.InetAddress); }
-keepclassmembers class android.widget.TextView { void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.net.InetAddress { byte[] getAddress(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset cacheCharset(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class android.widget.TextView { android.text.Editable getEditableText(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forName(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setKeyListenerOnly(android.text.method.KeyListener); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void findJarFile(); }
-keepclassmembers class android.widget.TextView { void setTransformationMethod(android.text.method.TransformationMethod); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { fr.castorflex.android.verticalviewpager.VerticalViewPager$ItemInfo infoForAnyChild(android.view.View); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.lang.String getAndReturnResponseCodeOnFailure(java.lang.String,int,int,int); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[],int); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.math.BigInteger { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { okhttp3.RequestBody getPostParams(); }
-keepclassmembers class java.math.BigInteger { int compareTo(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.lang.String get(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.lang.String get(java.lang.String,okhttp3.Interceptor); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.lang.String get(java.lang.String,int,int,int); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { okhttp3.Headers getHeaders(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.io.InputStream getStream(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.lang.String post(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase { ar.rulosoft.mimanganu.componentes.Manga getItem(int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.util.logging.Logger { void updateDalvikLogHandler(); }
-keepclassmembers class android.view.ViewRootImpl { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class android.widget.TextView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Handler[] getHandlers(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { android.animation.Keyframes clone(); }
-keepclassmembers class java.util.Date { int compareTo(java.lang.Object); }
-keepclassmembers class android.media.MediaCodecInfo { java.lang.String[] getSupportedTypes(); }
-keepclassmembers class android.media.MediaCodecInfo { android.media.MediaCodecInfo$CodecCapabilities getCapabilitiesForType(java.lang.String); }
-keepclassmembers class android.media.MediaCodecInfo { android.media.MediaCodecInfo makeRegular(); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class java.util.logging.Logger { void reset(); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable$ConstantState getConstantStateLocked(android.util.LongSparseArray,long); }
-keepclassmembers class android.support.v7.widget.CardViewApi21 { android.support.v7.widget.RoundRectDrawable getCardBackground(android.support.v7.widget.CardViewDelegate); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getCachedColorStateList(long); }
-keepclassmembers class android.content.res.Resources { android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.view.ViewRootImpl { android.view.ViewRootImpl$RunQueue getRunQueue(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { void <init>(android.content.Context,android.app.Activity,boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { ar.rulosoft.mimanganu.services.ChapterDownload getItem(int); }
-keepclassmembers class java.security.cert.X509Certificate { javax.security.auth.x500.X500Principal getIssuerX500Principal(); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.security.cert.X509Certificate { javax.security.auth.x500.X500Principal getSubjectX500Principal(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(android.graphics.Typeface,int); }
-keepclassmembers class android.widget.TextView { void nullLayouts(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.acra.util.ProcessFinisher { void stopServices(); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getCachedDrawable(android.util.ArrayMap,long,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.Typeface { android.graphics.FontFamily makeFamilyFromParsed(android.graphics.FontListParser$Family); }
-keepclassmembers class android.widget.TextView { android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean); }
-keepclassmembers class android.widget.TextView { void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean); }
-keepclassmembers class java.security.Signature { java.security.Signature getSignature(java.lang.String,java.security.Provider); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithm(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class android.util.Pair { boolean equals(java.lang.Object); }
-keepclassmembers class java.security.Signature { void initVerify(java.security.cert.Certificate); }
-keepclassmembers class java.util.Formatter { libcore.icu.NativeDecimalFormat getDecimalFormat(java.lang.String); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transform(java.util.Formatter$FormatToken,java.lang.Object); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromCharacter(); }
-keepclassmembers class java.util.Formatter { java.lang.StringBuilder toStringBuilder(java.lang.CharSequence); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromDateTime(); }
-keepclassmembers class android.widget.TextView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.widget.TextView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { void updateTextServicesLocaleLocked(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$3 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.widget.TextView { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class android.widget.TextView { boolean selectAllText(); }
-keepclassmembers class android.widget.TextView { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { void deleteText_internal(int,int); }
-keepclassmembers class android.widget.TextView { boolean canPaste(); }
-keepclassmembers class android.widget.TextView { void setPrimaryClip(android.content.ClipData); }
-keepclassmembers class android.widget.TextView { void replaceText_internal(int,int,java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.os.AsyncTask$InternalHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class org.acra.builder.LastActivityManager { void waitForActivityStop(int); }
-keepclassmembers class org.acra.builder.LastActivityManager { android.app.Activity getLastActivity(); }
-keepclassmembers class org.acra.collector.SharedPreferencesCollector { org.acra.model.Element collect(); }
-keepclassmembers class org.acra.collector.SharedPreferencesCollector { boolean filteredKey(java.lang.String); }
-keepclassmembers class java.io.PrintWriter { void print(java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { java.net.Socket releaseAndAcquire(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class android.support.design.widget.BaseTransientBottomBar { void <init>(android.view.ViewGroup,android.view.View,android.support.design.widget.BaseTransientBottomBar$ContentViewCallback); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources); }
-keepclassmembers class android.os.BaseBundle { void <init>(int); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void <init>(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.animation.ObjectAnimator { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.FutureTask { boolean cancel(boolean); }
-keepclassmembers class android.graphics.Typeface { void <clinit>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void data(boolean,int,okio.Buffer,int); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { void <clinit>(); }
-keepclassmembers class android.view.animation.Animation { void <init>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void <init>(android.support.design.widget.CoordinatorLayout$LayoutParams); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$4 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class android.graphics.PointF { void <clinit>(); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { java.util.concurrent.Future submit(java.lang.Runnable); }
-keepclassmembers class android.support.v7.widget.GapWorker { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.GapWorker { void <init>(); }
-keepclassmembers class android.view.animation.Animation { void setListenerHandler(android.os.Handler); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void <init>(); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.Class getFactoryClass(); }
-keepclassmembers class org.acra.sender.HttpSender$Type { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { void onPreExecute(); }
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.view.animation.Animation { void ensureInterpolator(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { java.lang.String toString(); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String[] getWebViewNativeLibraryPaths(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.CompoundAdapter { void <init>(android.content.Context); }
-keepclassmembers class android.webkit.WebViewFactory { void loadNativeLibrary(); }
-keepclassmembers class java.nio.FileChannelImpl { void <init>(java.io.Closeable,java.io.FileDescriptor,int); }
-keepclassmembers class android.webkit.WebViewFactory { void <clinit>(); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.IWebViewUpdateService getUpdateService(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void <clinit>(); }
-keepclassmembers class android.text.BoringLayout { void <clinit>(); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor tagSocket(java.io.FileDescriptor); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <clinit>(); }
-keepclassmembers class android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub { android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class java.text.NumberFormat { java.lang.String format(double); }
-keepclassmembers class libcore.io.BlockGuardOs { void untagSocket(java.io.FileDescriptor); }
-keepclassmembers class android.view.animation.Animation { void <clinit>(); }
-keepclassmembers class android.os.StatFs { android.system.StructStatVfs doStat(java.lang.String); }
-keepclassmembers class java.text.NumberFormat { java.lang.String format(long); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addConditionWaiter(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getIntegerInstance(java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.x509.X509PublicKey { java.lang.String toString(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.lang.String,java.util.Locale); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getNumberInstance(java.util.Locale); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <clinit>(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getPercentInstance(java.util.Locale); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signal(); }
-keepclassmembers class android.database.sqlite.SQLiteQueryBuilder { java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signalAll(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void reportInterruptAfterWait(int); }
-keepclassmembers class android.util.SparseArray { void <init>(int); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void await(); }
-keepclassmembers class org.acra.collector.ConfigurationCollector$1 { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void generateDrawPool(); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { void <init>(android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { void fillWindow(int); }
-keepclassmembers class java.text.NumberFormat { void <clinit>(); }
-keepclassmembers class java.nio.FileChannelImpl { void <clinit>(); }
-keepclassmembers class android.app.ActivityOptions { android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.app.ExitTransitionCoordinator,java.util.ArrayList,int,android.content.Intent); }
-keepclassmembers class android.util.SparseArray { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { void <init>(javax.security.auth.x500.X500Principal); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$9 { android.view.IWindowManager create(); }
-keepclassmembers class android.database.sqlite.SQLiteQueryBuilder { void <clinit>(); }
-keepclassmembers class android.hardware.input.InputManager { void <init>(android.hardware.input.IInputManager); }
-keepclassmembers class android.hardware.input.InputManager { android.hardware.input.InputManager getInstance(); }
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerJellybeanMr1 { java.lang.Object getDisplayManager(android.content.Context); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void enqueueToast(java.lang.String,android.app.ITransientNotification,int); }
-keepclassmembers class android.app.ActivityOptions { android.os.Bundle toBundle(); }
-keepclassmembers class android.support.v4.util.Pools$SynchronizedPool { void <init>(int); }
-keepclassmembers class java.util.TreeMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.database.Observable { void <init>(); }
-keepclassmembers class org.acra.util.PackageManagerWrapper { android.content.pm.PackageInfo getPackageInfo(); }
-keepclassmembers class android.animation.Animator { void addListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.database.Observable { void registerObserver(java.lang.Object); }
-keepclassmembers class android.animation.Animator { void reverse(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeadServer { void <init>(android.content.Context); }
-keepclassmembers class android.database.Observable { void unregisterObserver(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeadServer { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeadServer { java.util.ArrayList getMangas(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeadServer { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.text.AutoText { android.text.AutoText getInstance(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeadServer { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.animation.Animator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeadServer { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.view.DisplayInfo$1 { android.view.DisplayInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { java.lang.String getMessage(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void setImageBitmap(android.graphics.Bitmap,android.graphics.Matrix,float,float); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { void <clinit>(); }
-keepclassmembers class java.io.FileDescriptor { void <clinit>(); }
-keepclassmembers class android.text.AutoText { void <clinit>(); }
-keepclassmembers class android.view.ViewPropertyAnimator { void <init>(android.view.View); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node predecessor(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void setImageDrawable(android.graphics.drawable.Drawable,android.graphics.Matrix,float,float); }
-keepclassmembers class java.util.TreeSet { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <clinit>(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getCanonicalName(); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.Comparator); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.IllegalArgumentException incorrectInputEncoding(java.io.IOException); }
-keepclassmembers class android.graphics.Rect { java.lang.String toString(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getName(); }
-keepclassmembers class android.content.BroadcastReceiver { android.os.Bundle getResultExtras(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.Rect { java.lang.String toShortString(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { void <clinit>(); }
-keepclassmembers class java.util.UnknownFormatConversionException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Rect { java.lang.String toShortString(java.lang.StringBuilder); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class java.util.UnknownFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters$1 { void run(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { void <init>(android.content.Context); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { java.util.ArrayList getMangasSource(java.lang.String); }
-keepclassmembers class java.security.Security { void registerDefaultProviders(); }
-keepclassmembers class android.support.v4.app.NavUtils { void <clinit>(); }
-keepclassmembers class android.support.v4.app.NavUtils { android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void <clinit>(); }
-keepclassmembers class java.util.logging.LoggingPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Path$Direction { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class android.support.v4.app.NavUtils { java.lang.String getParentActivityName(android.app.Activity); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void addChapter(android.content.Context,ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { java.util.ArrayList getMangasFiltered(int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader { ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page getNewPage(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder { void <init>(android.content.Context); }
-keepclassmembers class java.security.Security { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class android.graphics.Rect { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void copyDbToSd(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void deleteChapter(android.content.Context,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { boolean doesTableExist(android.database.sqlite.SQLiteDatabase,java.lang.String); }
-keepclassmembers class android.graphics.RectF { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void deleteManga(android.content.Context,int); }
-keepclassmembers class java.security.Security { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.Time { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { java.util.ArrayList getChapters(android.content.Context,int); }
-keepclassmembers class android.animation.StateListAnimator { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { ar.rulosoft.mimanganu.componentes.Chapter getChapter(android.content.Context,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.animation.StateListAnimator { void initAnimatorListener(); }
-keepclassmembers class android.animation.StateListAnimator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class android.util.SparseBooleanArray { void <init>(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { java.util.ArrayList getChapters(android.content.Context,int,java.lang.String,boolean); }
-keepclassmembers class android.animation.StateListAnimator { void setTarget(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { java.util.ArrayList getFromFolderMangas(android.content.Context); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe$IntKeyframe clone(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { android.database.sqlite.SQLiteDatabase getDatabase(android.content.Context); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <clinit>(); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class java.io.DataInputStream { boolean readBoolean(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { ar.rulosoft.mimanganu.componentes.Manga getManga(android.content.Context,int); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void <init>(android.app.Activity,android.content.Context,android.os.Handler,int); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void doLoaderStart(); }
-keepclassmembers class rapid.decoder.BitmapLoader { android.graphics.Bitmap decodeBuiltIn(rapid.decoder.TwiceReadableInputStream); }
-keepclassmembers class rapid.decoder.TwiceReadableInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.graphics.Bitmap$2 { void <clinit>(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$PaintPool { android.graphics.Paint newInstance(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class java.io.DataInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.io.DataInputStream { java.lang.String decodeUTF(int,java.io.DataInput); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompatApi21$SharedElementCallback21); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void computeBitmapSize(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void decodeExtensionValue(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { java.util.ArrayList getMangasCondition(android.content.Context,java.lang.String,java.lang.String,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { java.util.ArrayList getMangasForUpdates(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { java.util.ArrayList getMangasFromCursor(android.database.Cursor); }
-keepclassmembers class rapid.decoder.BitmapLoader { rapid.decoder.BitmapLoader id(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { void <init>(android.content.Context); }
-keepclassmembers class android.os.PersistableBundle { void <clinit>(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void <init>(android.view.Window,java.util.ArrayList,android.app.SharedElementCallback,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { void <init>(); }
-keepclassmembers class android.view.animation.Transformation { void <init>(); }
-keepclassmembers class android.view.animation.Transformation { void clear(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { void setExtra(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.os.ResultReceiver { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <clinit>(); }
-keepclassmembers class android.os.PersistableBundle { java.lang.String toString(); }
-keepclassmembers class android.os.ResultReceiver { void <clinit>(); }
-keepclassmembers class okhttp3.TlsVersion { void <clinit>(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { android.text.method.DateTimeKeyListener getInstance(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util$3 { void run(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setEpicenter(android.view.View); }
-keepclassmembers class okhttp3.TlsVersion { okhttp3.TlsVersion forJavaName(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setRawInput(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setExtension(java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearRawInput(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void outputChapterDebugInformation(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$1 { boolean shouldWrapException(java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setPreferredDomesticCarrierCode(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void outputChapterDebugInformation(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearPreferredDomesticCarrierCode(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCodeSource(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$1 { void uncaughtException(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void initializeWithState(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void outputMangaDebugInformation(ar.rulosoft.mimanganu.componentes.Manga); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { ar.rulosoft.navegadores.Navigator getNavigatorWithNeededHeader(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder$1 { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void removeOrphanedChapters(android.content.Context); }
-keepclassmembers class android.util.Range { android.util.Range create(java.lang.Comparable,java.lang.Comparable); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.util.Slog { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { void <init>(android.content.Context); }
-keepclassmembers class libcore.icu.NativeNormalizer$1 { void <clinit>(); }
-keepclassmembers class libcore.io.Libcore { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void updateChapter(android.content.Context,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.graphics.drawable.StateListDrawable,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Message); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void growArray(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void updateChapterDownloaded(android.content.Context,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class libcore.math.MathUtils { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void updateChapterPage(android.content.Context,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.os.Message { void recycle(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$InitialPosition { void <clinit>(); }
-keepclassmembers class android.util.TypedValue { java.lang.String toString(); }
-keepclassmembers class android.os.Message { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void updateManga(android.content.Context,ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.util.TimeUtils { void <clinit>(); }
-keepclassmembers class android.util.TypedValue { void <clinit>(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { void <clinit>(); }
-keepclassmembers class android.graphics.Paint$Style { void <clinit>(); }
-keepclassmembers class java.util.EnumMap$Entry { void checkEntryStatus(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void createPopupWindow(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { void inflate(int,android.view.Menu); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void updateMangaLastIndex(android.content.Context,int,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { void hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void updateMangaRead(android.content.Context,int); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(int,int,int,int); }
-keepclassmembers class android.app.BackStackRecord { java.lang.String toString(); }
-keepclassmembers class android.graphics.Insets { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void updateMangaScrollSensitive(android.content.Context,int,float); }
-keepclassmembers class java.nio.charset.CoderResult { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <init>(); }
-keepclassmembers class java.nio.charset.CoderResult { void throwException(); }
-keepclassmembers class android.app.Notification$BigPictureStyle { void addExtras(android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager$SpanSizeLookup { void <init>(); }
-keepclassmembers class org.json.JSONArray { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void updateReadOrder(android.content.Context,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void vacuumDatabase(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void onCreate(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.json.JSONArray { java.lang.Object get(int); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void registerCallback(android.hardware.display.IDisplayManagerCallback); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int); }
-keepclassmembers class java.io.Writer { void <init>(java.lang.Object); }
-keepclassmembers class org.json.JSONArray { java.lang.String getString(int); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <clinit>(); }
-keepclassmembers class org.json.JSONArray { java.lang.String toString(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.util.Iterator iterator(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void initMenu(); }
-keepclassmembers class android.support.v4.util.MapCollections { java.util.Set getKeySet(); }
-keepclassmembers class android.support.v4.util.MapCollections { java.util.Set getEntrySet(); }
-keepclassmembers class android.support.v4.util.MapCollections { java.util.Collection getValues(); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void <clinit>(); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void addSuppressedIfPossible(java.io.IOException,java.io.IOException); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void updateIcon(it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onChange(ar.rulosoft.mimanganu.services.SingleDownload); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$1$1 { void onClick(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <init>(java.util.List,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { java.lang.String toString(); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplJellybean { void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$19$1$1 { void onClick(android.view.View); }
-keepclassmembers class org.acra.file.BulkReportDeleter { void <init>(android.content.Context); }
-keepclassmembers class android.app.BackStackRecord { java.util.ArrayList captureExitingViews(android.transition.Transition,android.app.Fragment,android.util.ArrayMap,android.view.View); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.app.BackStackRecord { android.util.ArrayMap remapSharedElements(android.app.BackStackRecord$TransitionState,android.app.Fragment,boolean); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onError(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.os.Trace { void <clinit>(); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition mergeTransitions(android.transition.Transition,android.transition.Transition,android.transition.Transition,android.app.Fragment,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getDefaultPageSize(); }
-keepclassmembers class android.app.BackStackRecord { java.util.ArrayList addTransitionTargets(android.app.BackStackRecord$TransitionState,android.transition.Transition,android.transition.Transition,android.transition.Transition,android.view.View,android.app.Fragment,android.app.Fragment,java.util.ArrayList,boolean,java.util.ArrayList); }
-keepclassmembers class android.os.Trace { void beginSection(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { java.lang.String getDefaultJournalMode(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getJournalSizeLimit(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getWALAutoCheckpoint(); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { android.net.Uri$PathSegments build(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { java.lang.String getDefaultSyncMode(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getWALConnectionPoolSize(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { java.lang.String getWALSyncMode(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { void <init>(org.acra.config.ConfigurationBuilder); }
-keepclassmembers class android.text.Layout$Ellipsizer { java.lang.String toString(); }
-keepclassmembers class okhttp3.CertificatePinner$Builder { okhttp3.CertificatePinner build(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.ddm.DdmHandleHello { void <clinit>(); }
-keepclassmembers class okhttp3.CertificatePinner$Builder { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onMenuRequired(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onStartOver(); }
-keepclassmembers class android.app.BackStackRecord { void removeTargetedViewsFromTransitions(android.view.ViewGroup,android.view.View,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList); }
-keepclassmembers class android.app.ProgressDialog { void initFormats(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void reDownloadCurrentImage(); }
-keepclassmembers class android.support.v7.preference.Preference { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.security.Provider$Service,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void <init>(org.apache.harmony.security.x509.DistributionPointName,org.apache.harmony.security.x509.ReasonFlags,org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void <clinit>(); }
-keepclassmembers class android.app.BackStackRecord { void setEpicenter(android.transition.Transition,android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { java.util.ArrayList getServices(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { java.lang.String generateImageLink(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { java.security.NoSuchAlgorithmException notFound(java.lang.String,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { java.lang.String getPagesNumber(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.support.v7.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void addListener(android.support.design.widget.ValueAnimatorCompat$AnimatorListener); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { void <clinit>(); }
-keepclassmembers class okhttp3.internal.platform.Platform { okhttp3.internal.platform.Platform findPlatform(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void addUpdateListener(android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class okhttp3.internal.platform.Platform { void <clinit>(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.SetCookieCache { void <init>(); }
-keepclassmembers class org.json.JSONStringer { void <init>(); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer endArray(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { void <init>(android.content.Context); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer object(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.transition.TransitionValuesMaps { void <init>(); }
-keepclassmembers class okhttp3.internal.platform.Platform { okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer array(); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer endObject(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.SetCookieCache { java.util.Iterator iterator(); }
-keepclassmembers class okhttp3.internal.platform.Platform { java.lang.Object getStackTraceForCloseable(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer open(org.json.JSONStringer$Scope,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { boolean hasCredentials(); }
-keepclassmembers class org.json.JSONStringer { org.json.JSONStringer key(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor); }
-keepclassmembers class org.json.JSONStringer { void beforeValue(); }
-keepclassmembers class org.json.JSONStringer { void beforeKey(); }
-keepclassmembers class java.text.NumberFormat$Field { void <clinit>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class java.net.URI$PartEncoder { boolean isRetained(char); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonIcs { void hide(android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener,boolean); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreferenceFloat$1 { void onStopTrackingTouch(android.widget.SeekBar); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { android.support.v7.widget.AppCompatTextHelper create(android.widget.TextView); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { void <clinit>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean initializePanelDecor(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean initializePanelMenu(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { android.support.v7.widget.TintInfo createTintInfo(android.content.Context,android.support.v7.widget.AppCompatDrawableManager,int); }
-keepclassmembers class android.support.v4.app.FragmentTransition$2 { void run(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSource { void <clinit>(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(int,int,int,int,int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { void <init>(android.content.Context); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSource { void <init>(okhttp3.internal.http2.Http2Stream,long); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSource { void checkNotClosed(); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable newSpannable(java.lang.CharSequence); }
-keepclassmembers class android.text.Spannable$Factory { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { void setExtra(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void setAllCaps(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState); }
-keepclassmembers class java.util.IllegalFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class okhttp3.ConnectionPool { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.ThemeColors { int getReaderColor(android.content.SharedPreferences); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { ar.rulosoft.navegadores.Navigator getNavigatorWithNeededHeader(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.Paint getPaint(android.graphics.ColorFilter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.widget.NumberPicker { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton { void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void updateCachedBitmap(int,int); }
-keepclassmembers class okhttp3.ConnectionPool { boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class android.widget.NumberPicker { int makeMeasureSpec(int,int); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class java.util.UUID { java.util.UUID randomUUID(); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView$SavedState { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <init>(byte[],int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean preparePanel(android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.KeyEvent); }
-keepclassmembers class okhttp3.ConnectionPool { void put(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.graphics.Path$FillType { void <clinit>(); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { void <clinit>(); }
-keepclassmembers class android.widget.NumberPicker { void postChangeCurrentByOneFromLongPress(boolean,long); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader { void addOnPageChangeListener(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { int sanitizeWindowFeatureId(int); }
-keepclassmembers class org.acra.collections.ImmutableList { void <init>(java.util.Collection); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void <init>(java.io.Writer,boolean,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void throwFeatureRequestIfSubDecorInstalled(); }
-keepclassmembers class android.app.PendingIntent { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class rapid.decoder.ResourceBitmapLoader { void <init>(android.content.res.Resources,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.support.v7.app.AppCompatDialog { int getThemeResId(android.content.Context,int); }
-keepclassmembers class android.support.v4.text.ICUCompatApi23 { void <clinit>(); }
-keepclassmembers class android.widget.NumberPicker { java.lang.String formatNumberWithLocale(int); }
-keepclassmembers class android.content.ClipDescription { void <init>(java.lang.CharSequence,java.lang.String[]); }
-keepclassmembers class android.widget.GridView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { void setExtra(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.widget.NumberPicker { void <clinit>(); }
-keepclassmembers class android.text.SpannableString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { ar.rulosoft.navegadores.Navigator getNavigatorWithNeededHeader(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { java.io.PrintWriter append(java.lang.CharSequence,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.v4.view.GravityCompat { void <clinit>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void doInvalidatePanelMenu(int); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { android.view.ViewGroup wrap(android.view.View); }
-keepclassmembers class android.content.ClipDescription { void <clinit>(); }
-keepclassmembers class okio.Segment { void <init>(); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void installViewFactory(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.text.Layout { void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class android.view.ScaleGestureDetector { void setQuickScaleEnabled(boolean); }
-keepclassmembers class android.telephony.PhoneNumberUtils { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$1 { void <clinit>(); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void <init>(); }
-keepclassmembers class java.util.Formatter$CachedDecimalFormat { libcore.icu.NativeDecimalFormat update(libcore.icu.LocaleData,java.lang.String); }
-keepclassmembers class android.util.DisplayMetrics { int getDeviceDensity(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.LevelListDrawable$LevelListState cloneConstantState(); }
-keepclassmembers class android.support.v7.appcompat.R$styleable { void <clinit>(); }
-keepclassmembers class rapid.decoder.BitmapDecoder$ScaleBy$1 { rapid.decoder.BitmapDecoder$ScaleBy newInstance(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void appendRecord(android.view.accessibility.AccessibilityRecord); }
-keepclassmembers class ar.rulosoft.custompref.NumPickDialogPref$1 { void onScrollStateChange(android.widget.NumberPicker,int); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SharedPrefsCookiePersistor { java.lang.String createCookieKey(okhttp3.Cookie); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String toString(); }
-keepclassmembers class android.text.Layout { void increaseWidthTo(int); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SharedPrefsCookiePersistor { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { android.app.SharedElementCallback createCallback(android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class java.util.PropertyResourceBundle { void <init>(java.io.Reader); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { void setExtra(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,java.lang.Object[]); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,int,java.lang.Object[]); }
-keepclassmembers class okhttp3.CacheControl { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { void <init>(ar.rulosoft.mimanganu.servers.ServerBase[],android.content.SharedPreferences,android.support.v4.app.FragmentActivity); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { ar.rulosoft.navegadores.Navigator getNavigatorWithNeededHeader(); }
-keepclassmembers class org.acra.collections.ImmutableSet { void <init>(java.util.Collection); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context); }
-keepclassmembers class org.acra.collections.ImmutableSet { java.util.Iterator iterator(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <clinit>(); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { void <clinit>(); }
-keepclassmembers class android.widget.ImageView { void initImageView(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,java.util.List); }
-keepclassmembers class android.view.View$1 { void onClick(android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void <init>(); }
-keepclassmembers class android.widget.ImageView { void setImageBitmap(android.graphics.Bitmap); }
-keepclassmembers class android.widget.ArrayAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class android.widget.ImageView { void setScaleType(android.widget.ImageView$ScaleType); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void growArray(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { ar.rulosoft.mimanganu.adapters.ServerRecAdapter$ServerViewHolder onCreateViewHolder(android.view.ViewGroup,int); }
-keepclassmembers class android.widget.ImageView { android.graphics.Matrix getImageMatrix(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class android.support.v7.view.WindowCallbackWrapper { void <init>(android.view.Window$Callback); }
-keepclassmembers class android.widget.ImageView { void resolveUri(); }
-keepclassmembers class android.net.Uri$AbstractPart { void writeTo(android.os.Parcel); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <clinit>(); }
-keepclassmembers class org.acra.collector.LogCatCollector { void <init>(org.acra.config.ACRAConfiguration,org.acra.util.PackageManagerWrapper); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources); }
-keepclassmembers class org.acra.collector.LogCatCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class org.acra.collector.LogCatCollector { boolean shouldCollect(java.util.Set,org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void <init>(); }
-keepclassmembers class libcore.net.url.JarHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class okio.Okio$2 { java.lang.String toString(); }
-keepclassmembers class android.app.SearchManager { void <init>(android.content.Context,android.os.Handler); }
-keepclassmembers class org.acra.collector.MemoryInfoCollector { void <init>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <init>(boolean); }
-keepclassmembers class libcore.net.url.JarHandler { java.lang.String toExternalForm(java.net.URL); }
-keepclassmembers class okhttp3.HttpUrl { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { java.lang.Object take(); }
-keepclassmembers class org.acra.collector.MemoryInfoCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.text.style.SuggestionSpan { void <clinit>(); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(boolean); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { java.lang.Object poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class android.widget.GridView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean offer(java.lang.Object); }
-keepclassmembers class android.os.AsyncTask$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.widget.ImageView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class okio.ForwardingTimeout { void <init>(okio.Timeout); }
-keepclassmembers class ar.rulosoft.mimanganu.services.SingleDownload$Status { void <clinit>(); }
-keepclassmembers class okhttp3.HttpUrl { int defaultPort(java.lang.String); }
-keepclassmembers class okio.ForwardingTimeout { okio.ForwardingTimeout setDelegate(okio.Timeout); }
-keepclassmembers class android.widget.ImageView { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ViewUtils { void <clinit>(); }
-keepclassmembers class java.lang.RealToString$1 { java.lang.RealToString initialValue(); }
-keepclassmembers class android.support.v7.widget.ViewUtils { void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl parse(java.lang.String); }
-keepclassmembers class android.widget.ImageView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.Bitmap); }
-keepclassmembers class android.support.v7.widget.ViewUtils { void makeOptionalFitsSystemWindows(android.view.View); }
-keepclassmembers class android.os.AsyncTask$1 { void <init>(); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$8 { void run(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page { void showOnLoad(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl$Builder newBuilder(); }
-keepclassmembers class libcore.net.url.FileURLConnection { void <init>(java.net.URL); }
-keepclassmembers class okhttp3.HttpUrl { boolean isHttps(); }
-keepclassmembers class libcore.net.url.FileURLConnection { void connect(); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl$Builder newBuilder(java.lang.String); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class android.view.ViewTreeObserver { void checkIsAlive(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void applyAndAckSettings(okhttp3.internal.http2.Settings); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.lang.String getContentTypeForPlainFiles(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void <init>(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader); }
-keepclassmembers class android.system.OsConstants { java.lang.String errnoName(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.HttpUrl { java.net.URI uri(); }
-keepclassmembers class libcore.net.url.FileURLConnection { void <clinit>(); }
-keepclassmembers class org.acra.collector.SettingsCollector$1 { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { void loadChapters(java.util.ArrayList); }
-keepclassmembers class java.net.AddressCache { void <init>(); }
-keepclassmembers class java.net.AddressCache { void put(java.lang.String,int,java.net.InetAddress[]); }
-keepclassmembers class android.content.ContentValues { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { void loadInfo(ar.rulosoft.mimanganu.componentes.Manga); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.hardware.display.DisplayManagerGlobal getInstance(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void <init>(android.hardware.display.IDisplayManager); }
-keepclassmembers class java.net.AddressCache { void putUnknownHost(java.lang.String,int,java.lang.String); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { java.lang.String getString(java.lang.String,java.lang.String,int); }
-keepclassmembers class org.acra.sender.SenderServiceStarter { void startService(boolean,boolean); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { android.widget.Editor$InsertionHandleView getHandle(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void registerCallbackIfNeededLocked(); }
-keepclassmembers class android.widget.AbsSpinner { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga { void onPostExecute(java.lang.Void); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga { void onPreExecute(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga { void onProgressUpdate(java.lang.Integer[]); }
-keepclassmembers class android.util.LruCache { void <init>(int); }
-keepclassmembers class android.view.WindowManagerGlobal { void <init>(); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowManager getWindowManagerService(); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.WindowManagerGlobal getInstance(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { void <clinit>(); }
-keepclassmembers class android.widget.AbsSpinner { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AbsSpinner { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.content.ContentValues { void <clinit>(); }
-keepclassmembers class android.util.LruCache { int safeSizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowSession peekWindowSession(); }
-keepclassmembers class android.widget.EditText { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.EditText { void setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.util.LruCache { void resize(int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean { java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { android.text.method.PasswordTransformationMethod getInstance(); }
-keepclassmembers class android.graphics.Bitmap$Config { void <clinit>(); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.CharSequence createFromParcel(android.os.Parcel); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(int); }
-keepclassmembers class android.os.Debug { void <clinit>(); }
-keepclassmembers class android.support.v4.util.Pools$SimplePool { void <init>(int); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { void <init>(java.lang.String,char); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void <clinit>(); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { java.lang.String getMessage(); }
-keepclassmembers class android.support.v4.app.FragmentController { android.support.v4.app.FragmentController createController(android.support.v4.app.FragmentHostCallback); }
-keepclassmembers class org.acra.builder.ReportExecutor { android.content.Intent createCrashReportDialogIntent(java.io.File,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int getKeyline(int); }
-keepclassmembers class android.widget.EditText { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.support.v7.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class okhttp3.Headers { okhttp3.Headers$Builder newBuilder(); }
-keepclassmembers class org.acra.builder.ReportExecutor { void dialogAndEnd(org.acra.builder.ReportBuilder,java.io.File,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState { void <clinit>(); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.xmlpull.v1.XmlPullParser { void <clinit>(); }
-keepclassmembers class android.widget.ScrollView { void initScrollView(); }
-keepclassmembers class org.acra.builder.ReportExecutor { void endApplication(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View,int); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.os.MessageQueue { void <init>(boolean); }
-keepclassmembers class org.acra.builder.ReportExecutor { java.io.File getReportFileName(org.acra.collector.CrashReportData); }
-keepclassmembers class org.acra.builder.ReportExecutor { void startSendingReports(boolean); }
-keepclassmembers class org.acra.builder.ReportExecutor { void saveCrashReportFile(java.io.File,org.acra.collector.CrashReportData); }
-keepclassmembers class org.acra.builder.ReportExecutor { void execute(org.acra.builder.ReportBuilder); }
-keepclassmembers class android.support.design.widget.CheckableImageButton { void <clinit>(); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateLanguage(java.lang.String,boolean); }
-keepclassmembers class android.util.Pools$SimplePool { void <init>(int); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateRegion(java.lang.String,boolean); }
-keepclassmembers class java.net.InterfaceAddress { java.lang.String toString(); }
-keepclassmembers class android.os.MessageQueue { void quit(boolean); }
-keepclassmembers class org.acra.builder.ReportExecutor { void handReportToDefaultExceptionHandler(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateScript(java.lang.String,boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void addPreDrawListener(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <init>(); }
-keepclassmembers class java.net.URLEncoder { void <clinit>(); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ScrollView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { boolean isEndToEnd(java.lang.String); }
-keepclassmembers class android.widget.ScrollView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <clinit>(); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(java.util.Locale); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.InitGlobals { java.lang.Void doInBackground(android.content.Context[]); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(); }
-keepclassmembers class java.util.Calendar { void <init>(java.util.TimeZone); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void <init>(org.ccil.cowan.tagsoup.ElementType,boolean); }
-keepclassmembers class java.net.URI { java.net.URI create(java.lang.String); }
-keepclassmembers class java.util.Calendar { java.util.Date getTime(); }
-keepclassmembers class java.util.Hashtable$Values { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { java.lang.Object getValue(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.support.design.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { java.lang.Object getKey(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper { java.lang.String toString(); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { java.lang.String toString(); }
-keepclassmembers class java.text.DecimalFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class java.io.StringReader { void checkNotClosed(); }
-keepclassmembers class android.app.FragmentState { android.app.Fragment instantiate(android.app.Activity,android.app.Fragment); }
-keepclassmembers class java.text.DecimalFormat { void initNative(java.lang.String); }
-keepclassmembers class android.app.FragmentState { void <clinit>(); }
-keepclassmembers class java.net.URI { int getEffectivePort(java.lang.String,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.SubManga { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node enq(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.SubManga { void <init>(android.content.Context); }
-keepclassmembers class android.widget.ScrollView { void setOverScrollMode(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.SubManga { java.util.ArrayList getMangas(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.SubManga { java.lang.String getPagesNumber(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onAttachedToWindow(); }
-keepclassmembers class android.content.pm.ActivityInfo { void <clinit>(); }
-keepclassmembers class java.net.URI { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.SubManga { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.widget.ScrollView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.net.URI { java.net.URL toURL(); }
-keepclassmembers class android.support.v4.text.ICUCompatIcs { void <clinit>(); }
-keepclassmembers class java.text.DecimalFormat { void checkBufferAndFieldPosition(java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.SubManga { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doAcquireInterruptibly(int); }
-keepclassmembers class java.net.URI { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$calcStorage { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doAcquireSharedInterruptibly(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(int,int,int,int); }
-keepclassmembers class java.util.Calendar { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquireSharedInterruptibly(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquireInterruptibly(int); }
-keepclassmembers class java.text.DecimalFormat { void setRoundingMode(java.math.RoundingMode); }
-keepclassmembers class java.text.DecimalFormat { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setCallback(android.graphics.drawable.Drawable$Callback); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getBounds(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void <clinit>(); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder create(android.content.Context); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class okhttp3.internal.Util$2 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <clinit>(); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { int fullyRelease(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.util.MathUtils { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter { android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout createPreferenceLayout(android.support.v7.preference.Preference,android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { java.util.ArrayList getMangas(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class org.acra.collector.SimpleValuesCollector$1 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { com.android.internal.view.ActionBarPolicy get(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { java.lang.String getPagesNumber(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.support.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.support.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs { java.lang.Object newAccessibilityDelegateDefaultImpl(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { boolean isConnected(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { boolean isConnectedNonDestructive(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { java.util.ArrayList getMangas(); }
-keepclassmembers class android.transition.AutoTransition { void init(); }
-keepclassmembers class java.io.PrintWriter { java.io.PrintWriter append(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable drawableFromBitmap(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { void <init>(); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class android.util.Pools$SynchronizedPool { void <init>(int); }
-keepclassmembers class java.io.PrintWriter { java.io.PrintWriter append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.Shader { void copyLocalMatrix(android.graphics.Shader); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <init>(); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <clinit>(); }
-keepclassmembers class android.widget.ExpandableListView { void <clinit>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void <clinit>(); }
-keepclassmembers class dalvik.system.SocketTagger { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ServerFilter$FilterType { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus { void <clinit>(); }
-keepclassmembers class java.security.KeyFactory { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Locale { java.util.Locale forLanguageTag(java.lang.String); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String); }
-keepclassmembers class java.util.Locale { void <init>(boolean,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Map,java.util.Map,boolean); }
-keepclassmembers class android.view.Display { void <init>(android.hardware.display.DisplayManagerGlobal,int,android.view.DisplayInfo,android.view.DisplayAdjustments); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$SavedState { void <clinit>(); }
-keepclassmembers class java.util.Locale { java.lang.Object clone(); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayCountry(java.util.Locale); }
-keepclassmembers class android.app.FragmentManagerImpl { void <init>(); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayLanguage(java.util.Locale); }
-keepclassmembers class android.app.FragmentManagerImpl { void throwException(java.lang.RuntimeException); }
-keepclassmembers class android.app.FragmentManagerImpl { void popBackStack(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.TypeEvaluator setupAnimatorForPath(android.animation.ValueAnimator,android.content.res.TypedArray); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void <init>(android.content.Context); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayVariant(java.util.Locale); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayScript(java.util.Locale); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void engineSetSeed(byte[]); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$InflatedOnMenuItemClickListener { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getPositionDescription(); }
-keepclassmembers class android.ddm.DdmHandleThread { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { void <clinit>(); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ObjectAnimator loadObjectAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float); }
-keepclassmembers class java.util.Locale { java.lang.String toNewString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map); }
-keepclassmembers class libcore.icu.ICU { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorInflater { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { android.support.v7.widget.MenuPopupWindow createPopupWindow(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(int); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$LoadMangasTask { void onPostExecute(java.util.List); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$LoadMangasTask { void <init>(ar.rulosoft.mimanganu.ServerListFragment); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fedorvlasov.lazylist.FileCache { void <init>(android.content.Context); }
-keepclassmembers class com.fedorvlasov.lazylist.FileCache { void writeFile(java.io.InputStream,java.io.File); }
-keepclassmembers class com.fedorvlasov.lazylist.FileCache { java.io.File getFile(java.lang.String); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatHC { void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { byte[] getRandomBytes(int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatJB { void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class org.acra.collector.CrashReportDataFactory { void <init>(android.content.Context,org.acra.config.ACRAConfiguration,android.content.SharedPreferences,java.util.Calendar,org.acra.model.Element); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.TextView$SavedState { java.lang.String toString(); }
-keepclassmembers class org.acra.collector.CrashReportDataFactory { java.util.List getCollectorsOrdered(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { float getAttributeFloatValue(int,float); }
-keepclassmembers class java.util.Locale { java.lang.String adjustLanguageCode(java.lang.String); }
-keepclassmembers class java.util.HashMap { void addNewEntryForNullKey(java.lang.Object); }
-keepclassmembers class java.util.HashMap { void addNewEntry(java.lang.Object,java.lang.Object,int,int); }
-keepclassmembers class android.widget.TextView$SavedState { void <clinit>(); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry constructorNewEntry(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitInstructionSet(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.graphics.drawable.LevelListDrawable,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask { void <init>(ar.rulosoft.mimanganu.componentes.MangaFolderSelect); }
-keepclassmembers class dalvik.system.VMRuntime { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void growArray(int,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.v4.util.LruCache { void <init>(int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.HashMap { java.util.Set keySet(); }
-keepclassmembers class android.support.v4.util.LruCache { int safeSizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.HashMap { java.util.Set entrySet(); }
-keepclassmembers class android.app.FragmentManagerImpl { void makeInactive(android.app.Fragment); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { java.util.Locale constructLocaleFromString(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask { void onProgressUpdate(java.lang.Integer[]); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newKeyIterator(); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newValueIterator(); }
-keepclassmembers class android.app.FragmentManagerImpl { void addFragment(android.app.Fragment,boolean); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newEntryIterator(); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <clinit>(); }
-keepclassmembers class java.util.HashMap { java.util.Collection values(); }
-keepclassmembers class android.animation.AnimatorSet$Node { void addDependency(android.animation.AnimatorSet$Dependency); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { void <clinit>(); }
-keepclassmembers class java.util.Locale { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void hideFragment(android.app.Fragment,int,int); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { void <init>(android.content.Context,android.content.res.Resources); }
-keepclassmembers class java.util.HashMap { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void attachFragment(android.app.Fragment,int,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void showFragment(android.app.Fragment,int,int); }
-keepclassmembers class android.os.Build { java.lang.String deriveFingerprint(); }
-keepclassmembers class android.app.FragmentManagerImpl { void detachFragment(android.app.Fragment,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.String toString(); }
-keepclassmembers class android.os.Build { java.lang.String getString(java.lang.String); }
-keepclassmembers class android.os.Build { java.lang.String[] getStringList(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.FragmentManagerImpl { void checkStateLoss(); }
-keepclassmembers class okhttp3.Headers$Builder { void <init>(); }
-keepclassmembers class android.provider.Settings$Global { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$2 { void onRefresh(); }
-keepclassmembers class android.app.FragmentManagerImpl { void enqueueAction(java.lang.Runnable,boolean); }
-keepclassmembers class libcore.util.ZoneInfo { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <clinit>(); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers build(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class java.util.TreeMap$MapIterator { java.util.TreeMap$Node stepForward(); }
-keepclassmembers class android.provider.Settings$Global { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void <clinit>(); }
-keepclassmembers class java.util.IllegalFormatConversionException { void <init>(char,java.lang.Class); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void <init>(); }
-keepclassmembers class java.net.ProxySelectorImpl { void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException); }
-keepclassmembers class java.util.IllegalFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class android.app.FragmentManagerImpl { void freeBackStackIndex(int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void addDelegate(java.lang.String,android.support.v7.widget.AppCompatDrawableManager$InflateDelegate); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { java.util.Iterator iterator(); }
-keepclassmembers class java.net.ProxySelectorImpl { java.net.Proxy selectOneProxy(java.net.URI); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$18$2 { void run(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void <init>(android.text.DynamicLayout); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void <init>(okio.BufferedSink,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void checkVectorDrawableSetup(android.content.Context); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.String toString(); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void <clinit>(); }
-keepclassmembers class java.net.ProxySelectorImpl { java.net.Proxy lookupProxy(java.lang.String,java.lang.String,java.net.Proxy$Type,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void applyAndAckSettings(okhttp3.internal.http2.Settings); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void addBackStackState(android.app.BackStackRecord); }
-keepclassmembers class java.io.ObjectStreamClass { void <init>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void connectionPreface(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.support.v7.widget.AppCompatDrawableManager get(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void installDefaultInflateDelegates(android.support.v7.widget.AppCompatDrawableManager); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean isVectorDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void flush(); }
-keepclassmembers class android.app.FragmentManagerImpl { void saveFragmentViewState(android.app.Fragment); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String descriptorForSignature(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { android.os.Bundle saveFragmentBasicState(android.app.Fragment); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { android.text.method.SingleLineTransformationMethod getInstance(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Field fieldSerialPersistentFields(java.lang.Class); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void rstStream(int,okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void synStream(boolean,int,int,java.util.List); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class java.io.FileOutputStream { void close(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void tintDrawable(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo,int[]); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.List makeHierarchy(); }
-keepclassmembers class java.io.ObjectStreamClass { int primitiveSize(java.lang.Class); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void <init>(android.support.v4.app.FragmentManagerImpl); }
-keepclassmembers class java.io.ObjectStreamClass { void resolveProperties(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class checkAndGetTcEnumClass(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String toString(); }
-keepclassmembers class java.util.ServiceLoader { void <init>(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator,boolean); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class java.io.ObjectStreamClass { void <clinit>(); }
-keepclassmembers class java.util.ServiceLoader { void internalLoad(); }
-keepclassmembers class android.widget.OverScroller { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.support.v4.content.ContextCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.content.ContextCompat { int checkSelfPermission(android.content.Context,java.lang.String); }
-keepclassmembers class java.util.ServiceLoader { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v4.content.ContextCompat { java.io.File createFilesDir(java.io.File); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { boolean hasConditions(okhttp3.Request); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { android.view.View onCreateDialogView(android.content.Context); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { okhttp3.internal.cache.CacheStrategy get(); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.File); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <clinit>(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { void onStart(); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.view.KeyCharacterMap$KeyData { void <init>(); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.lang.String); }
-keepclassmembers class java.io.FileInputStream { void close(); }
-keepclassmembers class android.support.v4.content.ContextCompat { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class java.util.Collections$EmptyList { java.lang.Object get(int); }
-keepclassmembers class android.transition.TransitionValues { void <init>(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { int commitInternal(boolean); }
-keepclassmembers class android.database.CursorIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class android.support.v4.content.ContextCompat { java.io.File getNoBackupFilesDir(android.content.Context); }
-keepclassmembers class android.transition.TransitionSet { void <init>(); }
-keepclassmembers class android.view.VelocityTracker { void addMovement(android.view.MotionEvent); }
-keepclassmembers class android.view.VelocityTracker { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { void <clinit>(); }
-keepclassmembers class android.widget.NumberPicker$AccessibilityNodeProviderImpl { void <init>(android.widget.NumberPicker); }
-keepclassmembers class android.support.v4.view.MenuItemCompat { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.HtmlUnescape$1 { void <init>(); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String,int); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String); }
-keepclassmembers class java.util.regex.Pattern { boolean matches(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Matcher matcher(java.lang.CharSequence); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setOrdering(int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation loadAnimation(android.content.Context,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.transition.TransitionManager { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { void <clinit>(); }
-keepclassmembers class android.text.Layout$1 { void <clinit>(); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeRunTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { void setExtra(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.media.session.MediaController { void <init>(android.content.Context,android.media.session.ISessionController); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { void <init>(android.content.Context); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { void <init>(android.content.Context); }
-keepclassmembers class android.widget.NumberPicker$AccessibilityNodeProviderImpl { void sendAccessibilityEventForVirtualButton(int,int,java.lang.String); }
-keepclassmembers class android.support.v4.app.BackStackRecord { boolean generateOps(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.Context,int); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { void ensureAutoNightModeManager(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class android.text.method.BaseKeyListener$1 { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { ar.rulosoft.navegadores.Navigator getNavigatorWithNeededHeader(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator createInterpolatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v4.app.ActivityCompat { android.support.v4.app.ActivityCompatApi23$SharedElementCallback23 createCallback23(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.support.v4.app.ActivityCompat { android.support.v4.app.ActivityCompatApi21$SharedElementCallback21 createCallback(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void requestPermissions(android.app.Activity,java.lang.String[],int); }
-keepclassmembers class android.media.session.MediaController { void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { void onCreate(android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$CanvasPool { android.graphics.Canvas newInstance(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String); }
-keepclassmembers class okhttp3.MediaType { void <clinit>(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead$1 { void run(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.text.Html$HtmlParser { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(android.util.Property,int[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(java.lang.String,int[]); }
-keepclassmembers class android.provider.Settings { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[]); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { java.lang.String getDefaultAlgorithm(); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void <clinit>(); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class java.lang.Object { java.lang.String toString(); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { void <init>(android.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase$CreateGroupByMangaNotificationsTask { void <init>(ar.rulosoft.mimanganu.servers.ServerBase,java.util.ArrayList,ar.rulosoft.mimanganu.componentes.Manga,android.content.Context); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <clinit>(); }
-keepclassmembers class android.widget.CompoundButton$SavedState { java.lang.String toString(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String makeSchemeSpecificPart(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupGetter(java.lang.Class); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void appendSspTo(java.lang.StringBuilder); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String makeUriString(); }
-keepclassmembers class android.content.ClipData { void <init>(android.content.ClipData); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupValue(java.lang.Object,android.animation.Keyframe); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload$DownloadStatus { void <clinit>(); }
-keepclassmembers class java.lang.CaseMapper { void <clinit>(); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri); }
-keepclassmembers class android.content.ClipData { void <init>(java.lang.CharSequence,java.lang.String[],android.content.ClipData$Item); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class android.content.ClipData { void addItem(android.content.ClipData$Item); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String toString(); }
-keepclassmembers class okio.AsyncTimeout$Watchdog { void <init>(); }
-keepclassmembers class rapid.decoder.FileBitmapLoader { void <init>(java.lang.String); }
-keepclassmembers class okio.InflaterSource { void <init>(okio.BufferedSource,java.util.zip.Inflater); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$GetPagesTask { ar.rulosoft.mimanganu.componentes.Chapter doInBackground(ar.rulosoft.mimanganu.componentes.Chapter[]); }
-keepclassmembers class android.text.SpannedString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$GetPagesTask { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getMethodName(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.RuntimePermission { void <init>(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <clinit>(); }
-keepclassmembers class android.content.ClipData { void <clinit>(); }
-keepclassmembers class android.app.Application { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$GetPagesTask { void onCancelled(); }
-keepclassmembers class android.app.Notification$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.app.Notification$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[]); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class android.app.Notification$Action { void <clinit>(); }
-keepclassmembers class android.app.Application { void registerOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$GetPagesTask { void onPreExecute(); }
-keepclassmembers class android.view.RenderNode { long getNativeDisplayList(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$GetPagesTask { void onProgressUpdate(java.lang.Void[]); }
-keepclassmembers class android.view.RenderNode { android.view.RenderNode create(java.lang.String,android.view.View); }
-keepclassmembers class android.widget.TextView$BufferType { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.graphics.drawable.AnimatedStateListDrawable,android.content.res.Resources); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class java.util.jar.Manifest { void <init>(byte[],boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin { void onPreExecute(); }
-keepclassmembers class android.view.RenderNode { boolean setOutline(android.graphics.Outline); }
-keepclassmembers class java.util.jar.Manifest { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { void onPostExecute(java.lang.Integer); }
-keepclassmembers class java.util.Currency { void <init>(java.lang.String); }
-keepclassmembers class java.util.jar.Manifest { void read(byte[]); }
-keepclassmembers class android.support.design.widget.SnackbarManager$SnackbarRecord { void <init>(int,android.support.design.widget.SnackbarManager$Callback); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { void onPreExecute(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setGeneralDesc(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class java.util.jar.Manifest { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobile(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setFixedLine(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class java.util.Currency { java.lang.String getSymbol(java.util.Locale); }
-keepclassmembers class java.util.Currency { void <clinit>(); }
-keepclassmembers class android.view.RenderNode { void addAnimator(android.view.RenderNodeAnimator); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setTollFree(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class java.security.MessageDigest { void update(byte[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPremiumRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class java.security.MessageDigest { void <clinit>(); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstanceForFullKeyboard(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSharedCost(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPersonalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoip(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPager(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class java.net.ProxySelector { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setEmergency(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setUan(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setShortCode(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoicemail(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCarrierSpecific(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setStandardRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNoInternationalDialling(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$SavedState { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe$FloatKeyframe clone(); }
-keepclassmembers class rapid.decoder.BitmapDecoder { void <clinit>(); }
-keepclassmembers class okhttp3.MultipartBody$Part { okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String,okhttp3.RequestBody); }
-keepclassmembers class okhttp3.MultipartBody$Part { okhttp3.MultipartBody$Part create(okhttp3.Headers,okhttp3.RequestBody); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void <clinit>(); }
-keepclassmembers class rapid.decoder.BitmapDecoder { rapid.decoder.BitmapDecoder from(android.graphics.Bitmap); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.View { void <init>(android.content.Context); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.net.InetAddress,int); }
-keepclassmembers class rapid.decoder.BitmapDecoder { rapid.decoder.BitmapLoader from(java.io.InputStream); }
-keepclassmembers class android.app.ActivityManager { void <clinit>(); }
-keepclassmembers class rapid.decoder.BitmapDecoder { rapid.decoder.BitmapLoader from(java.lang.String,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages$1 { void run(); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetSocketAddress createUnresolved(java.lang.String,int); }
-keepclassmembers class rapid.decoder.BitmapDecoder { void addCraft(java.lang.Object); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddAllMangaInDirectoryTask { void <init>(ar.rulosoft.mimanganu.componentes.MangaFolderSelect); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class android.os.AsyncTask { android.os.Handler getHandler(); }
-keepclassmembers class android.os.AsyncTask { void <init>(); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String toTitleCase(java.lang.String); }
-keepclassmembers class android.app.SharedElementCallback { void <clinit>(); }
-keepclassmembers class java.security.cert.CertificateFactory { void <clinit>(); }
-keepclassmembers class android.view.DragEvent { java.lang.String toString(); }
-keepclassmembers class android.os.AsyncTask { android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]); }
-keepclassmembers class android.view.DragEvent { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask { java.lang.Object postResult(java.lang.Object); }
-keepclassmembers class android.os.AsyncTask { void publishProgress(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddAllMangaInDirectoryTask { void onProgressUpdate(java.lang.Integer[]); }
-keepclassmembers class android.text.Layout$Alignment { void <clinit>(); }
-keepclassmembers class java.lang.Character { void checkValidCodePoint(int); }
-keepclassmembers class java.lang.Character { java.lang.Character valueOf(char); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.support.v7.widget.LinearLayoutManager$LayoutState createLayoutState(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { boolean isStoragePermissionGiven(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void requestStoragePermission(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void showUpdateDialog(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$ReDownloadImage { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.view.MenuInflater$MenuState { java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$ReDownloadImage { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class rapid.decoder.cache.CacheSource { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setPopupClipToScreenEnabled(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void onResume(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$ReDownloadImage { void onPreExecute(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void setColorToBars(); }
-keepclassmembers class java.net.URLStreamHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void <clinit>(); }
-keepclassmembers class android.text.method.TextKeyListener$SettingsObserver { void <init>(android.text.method.TextKeyListener); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class okhttp3.Protocol { void <clinit>(); }
-keepclassmembers class android.support.v4.app.RemoteInputCompatJellybean { android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { boolean closeInternal(okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class java.io.BufferedInputStream { java.io.IOException streamClosed(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class okhttp3.Protocol { okhttp3.Protocol get(java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void cancelStreamIfNecessary(); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void checkOutNotClosed(); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { okio.Sink getSink(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void receiveFin(); }
-keepclassmembers class java.io.BufferedInputStream { void reset(); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String toExternalForm(java.net.URL,boolean); }
-keepclassmembers class java.net.URLStreamHandler { void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void initialize(android.support.v7.view.menu.MenuItemImpl,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void receiveHeaders(java.util.List); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void show(); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void waitForIo(); }
-keepclassmembers class java.nio.charset.IllegalCharsetNameException { void <init>(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.MessageActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SearchForNewChapters { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { java.util.List takeResponseHeaders(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SearchForNewChapters { java.lang.Integer doInBackground(java.lang.Void[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SearchForNewChapters { void onPostExecute(java.lang.Integer); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String stringOf(char[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SearchForNewChapters { void onPreExecute(); }
-keepclassmembers class android.view.View$BaseSavedState { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void changeNotificationWithProgressbar(int,int,int,java.lang.String,java.lang.String,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void cancelNotification(int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void changeSearchingForUpdatesNotification(android.content.Context,int,int,int,java.lang.String,java.lang.String,boolean); }
-keepclassmembers class java.lang.IntegralToString { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void changeNotificationWithProgressbar(int,int,int,java.lang.String,boolean); }
-keepclassmembers class android.graphics.Region { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void <init>(org.apache.harmony.security.asn1.ASN1Type,java.lang.Object); }
-keepclassmembers class android.app.Notification$Style { void checkBuilder(); }
-keepclassmembers class android.app.Notification$Style { android.widget.RemoteViews getStandardView(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void setOrientation(int); }
-keepclassmembers class android.app.Notification$Style { void addExtras(android.os.Bundle); }
-keepclassmembers class android.view.View { android.util.SparseArray getAttributeMap(); }
-keepclassmembers class android.text.method.LinkMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void <clinit>(); }
-keepclassmembers class org.acra.collector.StacktraceCollector { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit); }
-keepclassmembers class org.acra.collector.StacktraceCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.os.ServiceManager { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getChoiceLength(org.apache.harmony.security.asn1.ASN1Choice); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper$1 { void <init>(android.support.v7.widget.ToolbarWidgetWrapper); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <clinit>(); }
-keepclassmembers class java.util.jar.Attributes { void <init>(); }
-keepclassmembers class java.util.jar.Attributes { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void <clinit>(); }
-keepclassmembers class java.io.DataOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.view.View { void initializeScrollbarsInternal(android.content.res.TypedArray); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void <init>(java.lang.String,android.support.v4.app.FragmentHostCallback,boolean); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String getValue(java.lang.String); }
-keepclassmembers class android.view.View { void initScrollCache(); }
-keepclassmembers class org.acra.collector.StacktraceCollector { java.lang.String getStackTrace(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.View { android.view.View$ListenerInfo getListenerInfo(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(android.content.Context,android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources); }
-keepclassmembers class android.view.View { void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void <init>(okio.BufferedSource,boolean); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void <init>(android.content.res.Resources); }
-keepclassmembers class java.lang.Boolean { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void toast(android.content.Context,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void toast(android.content.Context,java.lang.String,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.support.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class okhttp3.Authenticator { void <clinit>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setupAnimatorsForTarget(java.lang.String,android.animation.Animator); }
-keepclassmembers class android.app.ActivityManagerProxy { int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void <init>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,byte,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context,java.lang.Object); }
-keepclassmembers class android.support.v4.app.NotificationCompatKitKat$Builder { android.app.Notification build(); }
-keepclassmembers class android.view.MenuInflater { void inflate(int,android.view.Menu); }
-keepclassmembers class android.view.MenuInflater { void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View { void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { java.lang.String toString(); }
-keepclassmembers class android.view.MenuInflater { void <clinit>(); }
-keepclassmembers class okhttp3.ConnectionSpec { void <clinit>(); }
-keepclassmembers class java.net.Socket { void <init>(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getPageHeight(android.widget.TextView); }
-keepclassmembers class java.net.Socket { void <init>(java.net.Proxy); }
-keepclassmembers class okhttp3.ConnectionSpec { okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.app.Notification$Action$Builder { void <init>(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.app.Notification$Action$Builder { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[]); }
-keepclassmembers class java.net.Socket { void checkDestination(java.net.InetAddress,int); }
-keepclassmembers class android.view.View { android.view.View findLabelForView(android.view.View,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void <clinit>(); }
-keepclassmembers class android.app.Notification$Action$Builder { android.app.Notification$Action$Builder addRemoteInput(android.app.RemoteInput); }
-keepclassmembers class okhttp3.ConnectionSpec { java.lang.String toString(); }
-keepclassmembers class java.net.Socket { java.io.InputStream getInputStream(); }
-keepclassmembers class java.lang.ProcessBuilder { void <init>(java.lang.String[]); }
-keepclassmembers class java.net.Socket { java.io.OutputStream getOutputStream(); }
-keepclassmembers class java.lang.ProcessBuilder { void <init>(java.util.List); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void <clinit>(); }
-keepclassmembers class android.app.Notification$Action$Builder { android.app.Notification$Action$Builder setAllowGeneratedReplies(boolean); }
-keepclassmembers class java.lang.ProcessBuilder { java.lang.ProcessBuilder command(java.util.List); }
-keepclassmembers class libcore.icu.LocaleData { java.util.Locale mapInvalidAndNullLocales(java.util.Locale); }
-keepclassmembers class java.net.Socket { void setSoTimeout(int); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec { void <clinit>(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <clinit>(); }
-keepclassmembers class android.transition.ChangeBounds$1 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class java.net.Socket { java.lang.String toString(); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData initLocaleData(java.util.Locale); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle); }
-keepclassmembers class java.net.Socket { void checkOpenAndCreate(boolean); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class libcore.icu.LocaleData { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void elementType(java.lang.String,int,int,int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void attribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void parent(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { java.lang.String getDefaultSharedPreferencesName(android.content.Context); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void entity(java.lang.String,int); }
-keepclassmembers class android.app.ActivityManagerProxy { void finishSubActivity(android.os.IBinder,java.lang.String,int); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { android.view.animation.Animation startAlphaAnimation(int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivityAffinity(android.os.IBinder); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec { okhttp3.ResponseBody openResponseBody(okhttp3.Response); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean releaseActivityInstance(android.os.IBinder); }
-keepclassmembers class android.text.method.TimeKeyListener { android.text.method.TimeKeyListener getInstance(); }
-keepclassmembers class org.acra.collector.LogFileCollector$1 { void <clinit>(); }
-keepclassmembers class android.text.method.TimeKeyListener { void <clinit>(); }
-keepclassmembers class dalvik.system.CloseGuard { dalvik.system.CloseGuard get(); }
-keepclassmembers class android.support.v7.widget.CardViewGingerbread { void <init>(); }
-keepclassmembers class dalvik.system.CloseGuard { void open(java.lang.String); }
-keepclassmembers class dalvik.system.CloseGuard { void warnIfOpen(); }
-keepclassmembers class dalvik.system.CloseGuard { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.CardViewGingerbread { void initStatic(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <init>(); }
-keepclassmembers class android.view.View { android.view.View findViewInsideOutShouldExist(android.view.View,int); }
-keepclassmembers class android.view.View { android.view.View findUserSetNextFocus(android.view.View,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void checkRelaxed(java.lang.String); }
-keepclassmembers class android.widget.Toast { void <init>(android.content.Context); }
-keepclassmembers class android.app.ActivityManagerProxy { java.lang.String getCallingPackage(android.os.IBinder); }
-keepclassmembers class android.widget.Toast { void show(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.ComponentName getCallingActivity(android.os.IBinder); }
-keepclassmembers class android.app.RemoteInput { void <clinit>(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void <init>(okhttp3.ConnectionPool,okhttp3.Route); }
-keepclassmembers class android.widget.Toast { android.app.INotificationManager getService(); }
-keepclassmembers class android.view.View { void notifyViewAccessibilityStateChangedIfNeeded(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void moveView(int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readDoctype(boolean); }
-keepclassmembers class java.text.BreakIterator { java.text.BreakIterator getWordInstance(java.util.Locale); }
-keepclassmembers class java.net.Socks4Message { void <init>(); }
-keepclassmembers class java.text.BreakIterator { void setText(java.lang.String); }
-keepclassmembers class java.net.Socks4Message { java.lang.String getErrorString(int); }
-keepclassmembers class android.os.Parcel { void writeSerializable(java.io.Serializable); }
-keepclassmembers class java.nio.NioUtils { java.nio.channels.FileChannel newFileChannel(java.io.Closeable,java.io.FileDescriptor,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class okhttp3.Dns$1 { java.util.List lookup(java.lang.String); }
-keepclassmembers class android.os.Parcel { int readExceptionCode(); }
-keepclassmembers class android.os.Parcel { void readException(int,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void <clinit>(); }
-keepclassmembers class android.support.design.widget.ViewUtils { void <clinit>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readNotationDeclaration(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Request createTunnelRequest(); }
-keepclassmembers class android.os.Parcel { java.util.HashMap readHashMap(java.lang.ClassLoader); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void startScaleDownAnimation(android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.os.Parcel { android.os.Bundle readBundle(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { android.util.Size readSize(); }
-keepclassmembers class android.os.Parcel { android.util.SizeF readSizeF(); }
-keepclassmembers class android.content.res.Resources$Theme { void applyStyle(int,boolean); }
-keepclassmembers class android.os.Parcel { java.util.ArrayList readArrayList(java.lang.ClassLoader); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void connect(int,int,int,boolean); }
-keepclassmembers class android.os.Parcel { java.lang.Object[] readArray(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { android.util.SparseArray readSparseArray(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { android.util.SparseBooleanArray readSparseBooleanArray(); }
-keepclassmembers class android.util.StateSet { int[] trimStateSet(int[],int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void <clinit>(); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray resolveAttributes(int[],int[]); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$21 { boolean onPreferenceClick(android.support.v7.preference.Preference); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.util.StateSet { void <clinit>(); }
-keepclassmembers class android.content.res.Resources$Theme { void <init>(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class okio.RealBufferedSource$1 { java.lang.String toString(); }
-keepclassmembers class java.lang.ProcessManager { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { void addOnPageChangeListener(); }
-keepclassmembers class okhttp3.internal.http2.Http2 { java.lang.String frameLog(boolean,int,int,byte,byte); }
-keepclassmembers class okhttp3.internal.http2.Http2 { java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.http2.Http2 { java.io.IOException ioException(java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.json.JSONTokener { void <init>(java.lang.String); }
-keepclassmembers class android.widget.CursorAdapter$ChangeObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { java.lang.String toString(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.os.IBinder peekService(android.content.Intent,java.lang.String); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { void <init>(); }
-keepclassmembers class okio.ForwardingSource { void <init>(okio.Source); }
-keepclassmembers class java.lang.ProcessManager { void <clinit>(); }
-keepclassmembers class okio.ForwardingSource { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void <clinit>(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable); }
-keepclassmembers class org.json.JSONTokener { org.json.JSONException syntaxError(java.lang.String); }
-keepclassmembers class android.os.Parcel { void <clinit>(); }
-keepclassmembers class org.json.JSONTokener { java.lang.String toString(); }
-keepclassmembers class android.view.View { void ensureTransformationInfo(); }
-keepclassmembers class android.view.View { android.graphics.Matrix getInverseMatrix(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void connectSocket(int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { int getRequestedOrientation(android.os.IBinder); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri build(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { java.lang.String getActionViewStatesKey(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AlarmReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.text.Selection { void <clinit>(); }
-keepclassmembers class android.database.sqlite.DatabaseObjectNotClosedException { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.util.ArrayList configureEnteringExitingViews(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void ensurePadding(); }
-keepclassmembers class android.database.sqlite.SQLiteDebug { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object configureSharedElementsOptimized(android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.content.SharedPreferencesCompat$EditorCompat { void <init>(); }
-keepclassmembers class android.support.v4.content.SharedPreferencesCompat$EditorCompat { android.support.v4.content.SharedPreferencesCompat$EditorCompat getInstance(); }
-keepclassmembers class android.transition.ChangeBounds { void <init>(); }
-keepclassmembers class libcore.io.IoUtils { java.lang.String readFileAsString(java.lang.String); }
-keepclassmembers class libcore.io.IoUtils { void <clinit>(); }
-keepclassmembers class org.acra.collections.ImmutableMap { void <init>(java.util.Map); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getNamespaceCount(int); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object configureSharedElementsUnoptimized(android.view.ViewGroup,android.view.View,android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.transition.ChangeBounds { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class libcore.util.CollectionUtils { java.lang.Iterable dereferenceIterable(java.lang.Iterable,boolean); }
-keepclassmembers class android.app.ITransientNotification$Stub { void <init>(); }
-keepclassmembers class javax.net.DefaultSocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class android.app.ActivityManagerProxy { void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getText(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.support.v4.app.FragmentTransition$FragmentContainerTransition ensureContainer(android.support.v4.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$11$1$1 { void onClick(android.view.View); }
-keepclassmembers class org.kxml2.io.KXmlParser { int nextTag(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void require(int,java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Size { java.lang.String toString(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String nextText(); }
-keepclassmembers class android.view.View { void postSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class android.app.ActivityManagerProxy { void setRequestedOrientation(android.os.IBinder,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void pushContentSource(char[]); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void replaceHide(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <clinit>(); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void scheduleTargetChange(android.view.ViewGroup,android.support.v4.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class android.transition.ChangeBounds { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { void overridePendingTransition(android.os.IBinder,java.lang.String,int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertFromTranslucent(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isImmersive(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isTopOfTask(android.os.IBinder); }
-keepclassmembers class android.graphics.Bitmap { void checkXYSign(int,int); }
-keepclassmembers class android.graphics.Bitmap { void checkWidthHeight(int,int); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { void <init>(); }
-keepclassmembers class android.view.View { void assignParent(android.view.ViewParent); }
-keepclassmembers class android.support.v7.app.NotificationCompat { android.text.style.TextAppearanceSpan makeFontColorSpan(int); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class java.util.logging.Level { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean invalidatesCache(java.lang.String); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean permitsRequestBody(java.lang.String); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void setBackgroundColor(android.content.Context,android.widget.RemoteViews,int); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean redirectsToGet(java.lang.String); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean redirectsWithBody(java.lang.String); }
-keepclassmembers class android.support.v4.util.ArrayMap { android.support.v4.util.MapCollections getCollection(); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean requiresRequestBody(java.lang.String); }
-keepclassmembers class android.view.View { boolean canResolveLayoutDirection(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setFeature(java.lang.String,boolean); }
-keepclassmembers class android.support.design.widget.AnimationUtils { void <clinit>(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { void <init>(); }
-keepclassmembers class okhttp3.Request$Builder { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent); }
-keepclassmembers class android.util.FloatProperty { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { java.util.Iterator iterator(); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request build(); }
-keepclassmembers class android.media.session.ISessionControllerCallback$Stub { void <init>(); }
-keepclassmembers class android.view.WindowCallbackWrapper { void <init>(android.view.Window$Callback); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void <init>(java.lang.String,int,int,int,org.ccil.cowan.tagsoup.Schema); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String namespace(java.lang.String,boolean); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody); }
-keepclassmembers class android.view.View { void setLayerType(int,android.graphics.Paint); }
-keepclassmembers class android.os.ServiceManagerProxy { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setAttribute(org.ccil.cowan.tagsoup.AttributesImpl,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { void reportActivityFullyDrawn(android.os.IBinder); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder url(java.lang.String); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.PathKeyframes ofPath(android.graphics.Path,float); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder url(okhttp3.HttpUrl); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { void <clinit>(); }
-keepclassmembers class android.util.ArrayMap { android.util.MapCollections getCollection(); }
-keepclassmembers class android.util.ArrayMap { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { void startLockTaskMode(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { void stopLockTaskMode(); }
-keepclassmembers class android.graphics.Bitmap { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { void setTaskDescription(android.os.IBinder,android.app.ActivityManager$TaskDescription); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { void <clinit>(); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isBackgroundVisibleBehind(android.os.IBinder); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$3 { android.os.Handler initialValue(); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { android.graphics.Bitmap getBitmap(java.lang.String); }
-keepclassmembers class android.support.v7.widget.DividerItemDecoration { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.DividerItemDecoration { void <init>(android.content.Context,int); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { void queuePhoto(java.lang.String,ar.rulosoft.mimanganu.componentes.Imaginable); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { ar.rulosoft.navegadores.Navigator getNavigatorWithNeededHeader(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { java.lang.String getPagesNumber(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class android.support.v7.widget.DividerItemDecoration { void setDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.DividerItemDecoration { void setOrientation(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.Paint getPaint(android.graphics.ColorFilter); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void updateCachedBitmap(android.graphics.Rect); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class java.util.concurrent.FutureTask { void <init>(java.util.concurrent.Callable); }
-keepclassmembers class android.graphics.drawable.Ripple { android.graphics.Paint getTempPaint(android.graphics.Paint); }
-keepclassmembers class java.util.AbstractQueue { boolean add(java.lang.Object); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.view.View { void setLayerPaint(android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.Ripple { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.View { android.graphics.Rect getClipBounds(); }
-keepclassmembers class android.graphics.drawable.Ripple { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,float,float); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class,boolean); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.Class getType(); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getTypeString(); }
-keepclassmembers class java.util.SimpleTimeZone { void checkRange(int,int,int); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String toString(); }
-keepclassmembers class java.util.SimpleTimeZone { void checkDay(int,int); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor); }
-keepclassmembers class java.util.concurrent.FutureTask { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamField { boolean defaultResolve(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { java.util.ArrayList getMangas(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { java.lang.String getPagesNumber(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { java.util.LinkedHashMap$LinkedEntry nextEntry(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { void onPreExecute(); }
-keepclassmembers class android.view.ViewGroup { boolean shouldBlockFocusForTouchscreen(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class java.util.SimpleTimeZone { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void onChildVisibilityChanged(android.view.View,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources); }
-keepclassmembers class java.util.concurrent.Executors$DefaultThreadFactory { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.util.concurrent.Executors$DefaultThreadFactory { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$ChunkedSink { void <init>(okhttp3.internal.http1.Http1Codec); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$ChunkedSink { void close(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void <init>(); }
-keepclassmembers class android.view.ViewGroup { android.graphics.PointF getLocalPoint(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void remove(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompatApi21 { java.lang.Object verifyToken(java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setupAnimatorsForTarget(java.lang.String,android.animation.Animator); }
-keepclassmembers class libcore.io.Streams { byte[] readFullyNoClose(java.io.InputStream); }
-keepclassmembers class okio.Buffer { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void pushHeadersLater(int,java.util.List,boolean); }
-keepclassmembers class android.util.SparseIntArray { void <init>(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void pushRequestLater(int,java.util.List); }
-keepclassmembers class libcore.io.Streams { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void pushResetLater(int,okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$LoadMode { void <clinit>(); }
-keepclassmembers class okio.Buffer { void clear(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <clinit>(); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createFloat(float); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createPaint(android.graphics.Paint); }
-keepclassmembers class android.graphics.CanvasProperty { void <init>(long); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator ofInt(int[]); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator ofFloat(float[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { void onPreExecute(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.animation.ValueAnimator { void setIntValues(int[]); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.animation.ValueAnimator { void setFloatValues(float[]); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void writePingLater(boolean,int,int,okhttp3.internal.http2.Ping); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.BootClassLoader getInstance(); }
-keepclassmembers class android.animation.ValueAnimator { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat { void <clinit>(); }
-keepclassmembers class java.util.concurrent.Executors$DefaultThreadFactory { void <init>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void writeSynResetLater(int,okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void writeWindowUpdateLater(int,long); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void <init>(android.widget.Editor); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void setTextAppearance(int); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat { void <clinit>(); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Package getPackage(java.lang.String); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$3 { boolean onQueryTextChange(java.lang.String); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteQuery { int fillWindow(android.database.CursorWindow,int,int,boolean); }
-keepclassmembers class java.util.WeakHashMap$2 { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect); }
-keepclassmembers class android.animation.ValueAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.animation.ValueAnimator { void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList inflateColorStateList(android.content.Context,int); }
-keepclassmembers class android.database.sqlite.SQLiteQuery { java.lang.String toString(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void enter(boolean); }
-keepclassmembers class android.view.WindowInsets { android.graphics.Rect getSystemWindowInsets(); }
-keepclassmembers class android.view.ViewGroup { float[] getTempPoint(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool { void <init>(); }
-keepclassmembers class android.view.ViewOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.view.WindowInsets { android.view.WindowInsets consumeSystemWindowInsets(); }
-keepclassmembers class libcore.net.url.FtpHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class libcore.net.url.FtpHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class okio.Buffer { java.io.InputStream inputStream(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.graphics.Paint getTempPaint(android.graphics.Paint); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread$1 { void run(); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class android.view.ViewGroup { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class android.view.View { void setBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class okio.Buffer { byte[] readByteArray(); }
-keepclassmembers class android.view.View { void setBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.WindowInsets { void <clinit>(); }
-keepclassmembers class okio.Buffer { okio.ByteString readByteString(); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class okio.Buffer { okio.ByteString readByteString(long); }
-keepclassmembers class android.widget.RemoteViews { void addAction(android.widget.RemoteViews$Action); }
-keepclassmembers class android.widget.RemoteViews { void addView(int,android.widget.RemoteViews); }
-keepclassmembers class android.widget.RemoteViews { void removeAllViews(int); }
-keepclassmembers class android.widget.RemoteViews { void setViewVisibility(int,int); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewText(int,java.lang.CharSequence); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewTextSize(int,int,float); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewCompoundDrawablesRelative(int,int,int,int,int); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewCompoundDrawablesRelativeColorFilter(int,int,int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.RemoteViews { void setImageViewResource(int,int); }
-keepclassmembers class android.widget.RemoteViews { void setImageViewBitmap(int,android.graphics.Bitmap); }
-keepclassmembers class okio.ByteString { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews { void setProgressBar(int,int,int,boolean); }
-keepclassmembers class android.widget.RemoteViews { void setOnClickPendingIntent(int,android.app.PendingIntent); }
-keepclassmembers class android.view.ViewGroup { void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int); }
-keepclassmembers class android.view.InputDevice { void addMotionRange(int,int,float,float,float,float,float); }
-keepclassmembers class android.text.method.DateKeyListener { android.text.method.DateKeyListener getInstance(); }
-keepclassmembers class android.widget.RemoteViews { void setProgressTintList(int,android.content.res.ColorStateList); }
-keepclassmembers class android.text.method.DateKeyListener { void <clinit>(); }
-keepclassmembers class android.support.v4.os.ParcelableCompat { android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class android.widget.RemoteViews { void setProgressBackgroundTintList(int,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.RemoteViews { void setProgressIndeterminateTintList(int,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.RemoteViews { void setTextColor(int,int); }
-keepclassmembers class java.util.LinkedHashMap { void init(); }
-keepclassmembers class okio.ByteString { okio.ByteString encodeUtf8(java.lang.String); }
-keepclassmembers class okio.ByteString { okio.ByteString digest(java.lang.String); }
-keepclassmembers class android.widget.RemoteViews { void setViewPadding(int,int,int,int,int); }
-keepclassmembers class java.util.LinkedHashMap { void addNewEntry(java.lang.Object,java.lang.Object,int,int); }
-keepclassmembers class java.util.LinkedHashMap { void addNewEntryForNullKey(java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews { void setBoolean(int,java.lang.String,boolean); }
-keepclassmembers class android.widget.RemoteViews { void setLong(int,java.lang.String,long); }
-keepclassmembers class android.view.View { android.view.ViewTreeObserver getViewTreeObserver(); }
-keepclassmembers class android.widget.RemoteViews { void setInt(int,java.lang.String,int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <init>(android.app.Activity); }
-keepclassmembers class java.util.LinkedHashMap { java.util.HashMap$HashMapEntry constructorNewEntry(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class okio.Buffer { java.lang.String readString(java.nio.charset.Charset); }
-keepclassmembers class okio.Buffer { java.lang.String readUtf8(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <init>(android.app.Dialog); }
-keepclassmembers class android.widget.RemoteViews { void setCharSequence(int,java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.animation.ValueAnimator { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews { void setBitmap(int,java.lang.String,android.graphics.Bitmap); }
-keepclassmembers class android.view.InputDevice { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews { void setContentDescription(int,java.lang.CharSequence); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void <clinit>(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newKeyIterator(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newValueIterator(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newEntryIterator(); }
-keepclassmembers class android.support.graphics.drawable.AndroidResources { void <clinit>(); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { android.graphics.drawable.StateListDrawable createDefaultBackground(); }
-keepclassmembers class okio.ByteString { okio.ByteString sha1(); }
-keepclassmembers class okio.ByteString { okio.ByteString sha256(); }
-keepclassmembers class okio.Buffer { okio.ByteString snapshot(int); }
-keepclassmembers class android.widget.RemoteViews { void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int); }
-keepclassmembers class android.widget.RemoteViews { android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int); }
-keepclassmembers class okio.Buffer { okio.Buffer write(okio.ByteString); }
-keepclassmembers class okio.Buffer { okio.Buffer write(byte[]); }
-keepclassmembers class android.view.View { void setKeyedTag(int,java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$ImagesStates { void <clinit>(); }
-keepclassmembers class okio.ByteString { java.lang.String toString(); }
-keepclassmembers class android.view.InputDevice$1 { android.view.InputDevice createFromParcel(android.os.Parcel); }
-keepclassmembers class android.os.UserHandle { void <clinit>(); }
-keepclassmembers class okio.ByteString { java.lang.String utf8(); }
-keepclassmembers class java.lang.Void { java.lang.Class lookupType(); }
-keepclassmembers class java.util.GregorianCalendar { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$5 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.support.v4.app.OneShotPreDrawListener { android.support.v4.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHideOnContentScrollEnabled(boolean); }
-keepclassmembers class java.lang.Integer { java.lang.NumberFormatException invalidInt(java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.ErrorCode { void <clinit>(); }
-keepclassmembers class android.widget.RadioButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { void <init>(android.content.Context); }
-keepclassmembers class android.view.ViewGroup { android.view.animation.Transformation getChildTransformation(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { void setExtra(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerCompat { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.app.ActivityManagerNative$1 { android.app.IActivityManager create(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { java.util.ArrayList getMangas(); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int); }
-keepclassmembers class android.widget.RadioButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class java.text.Format { java.lang.String format(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { android.content.Context getThemedContext(); }
-keepclassmembers class java.util.EventObject { void <init>(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup$LayoutParams,int,int); }
-keepclassmembers class okio.Base64 { void <clinit>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <clinit>(); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <clinit>(); }
-keepclassmembers class java.nio.charset.StandardCharsets { void <clinit>(); }
-keepclassmembers class android.view.View { void setOverScrollMode(int); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class libcore.util.BasicLruCache { void <init>(int); }
-keepclassmembers class android.app.IntentService { void onCreate(); }
-keepclassmembers class android.content.res.AssetManager { void ensureSystemAssets(); }
-keepclassmembers class android.content.res.AssetManager { void <init>(boolean); }
-keepclassmembers class org.acra.collector.PackageManagerCollector$1 { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { void defaultReadObject(); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { byte[] readBlockDataLong(); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeAction(android.view.KeyEvent,int); }
-keepclassmembers class java.io.Reader { void <init>(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void <clinit>(); }
-keepclassmembers class org.acra.ACRA$1 { void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readContent(byte); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNonPrimitiveContent(boolean); }
-keepclassmembers class android.view.View { boolean canResolveTextDirection(); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void animateThumbToCheckedState(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$14 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void enforceNotSealed(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.view.View { boolean canResolveTextAlignment(); }
-keepclassmembers class android.view.View { android.view.ViewPropertyAnimator animate(); }
-keepclassmembers class android.os.Bundle { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.lang.String toString(); }
-keepclassmembers class java.io.ObjectInputStream { java.util.List cacheSuperclassesFor(java.lang.Class); }
-keepclassmembers class android.content.res.AssetManager { void <clinit>(); }
-keepclassmembers class android.view.KeyEvent { void <clinit>(); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class org.acra.collections.BoundedLinkedList { java.lang.String toString(); }
-keepclassmembers class com.google.android.collect.Lists { java.util.ArrayList newArrayList(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.Object onRetainNonConfigurationInstance(); }
-keepclassmembers class android.os.Bundle { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat { void <clinit>(); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(boolean); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void show(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class java.io.ObjectInputStream { java.io.InvalidClassException missingClassDescriptor(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObjectOverride(); }
-keepclassmembers class android.view.ViewGroup { void addDisappearingView(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void startViewTransition(android.view.View); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDescriptor(); }
-keepclassmembers class java.io.ObjectInputStream { void readStreamHeader(); }
-keepclassmembers class android.app.Service { void stopSelf(int); }
-keepclassmembers class java.io.ObjectInputStream { void resetSeenObjects(); }
-keepclassmembers class android.app.Service { boolean stopSelfResult(int); }
-keepclassmembers class android.app.Service { void setForeground(boolean); }
-keepclassmembers class java.util.HashMap$HashIterator { void remove(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.app.Service { void startForeground(int,android.app.Notification); }
-keepclassmembers class android.text.TextDirectionHeuristics { void <clinit>(); }
-keepclassmembers class android.app.Service { void stopForeground(boolean); }
-keepclassmembers class android.app.Service { void stopForeground(int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void setListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class java.io.ObjectInputStream { void checkedSetSuperClassDesc(java.io.ObjectStreamClass,java.io.ObjectStreamClass); }
-keepclassmembers class okio.GzipSource { void <init>(okio.Source); }
-keepclassmembers class java.io.ObjectInputStream { void <clinit>(); }
-keepclassmembers class okio.GzipSource { void checkEqual(java.lang.String,int,int); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader createSystemClassLoader(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.ClassLoader,boolean); }
-keepclassmembers class android.widget.RelativeLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.RelativeLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.lang.ClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class android.widget.RelativeLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.RelativeLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.Menu getMenu(); }
-keepclassmembers class android.widget.RelativeLayout { void <clinit>(); }
-keepclassmembers class org.acra.collector.DeviceFeaturesCollector { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment { void loadBitmap(); }
-keepclassmembers class android.view.ViewGroup { android.graphics.Paint getDebugPaint(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL); }
-keepclassmembers class android.view.ViewGroup { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page); }
-keepclassmembers class android.widget.CheckedTextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.CheckedTextView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.CheckedTextView { void <clinit>(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SerializableCookie { void <clinit>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperStateBase { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { okhttp3.MediaType contentType(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setPopupTheme(int); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$CloseGuard { okhttp3.internal.platform.AndroidPlatform$CloseGuard get(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$CloseGuard { java.lang.Object createAndOpen(java.lang.String); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$CloseGuard { boolean warnIfOpen(java.lang.Object); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SerializableCookie { java.lang.String encode(okhttp3.Cookie); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <clinit>(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Builder buildUpon(); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga$1 { void run(); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void collectCurrentSizeRange(android.view.Display,org.json.JSONObject); }
-keepclassmembers class org.acra.collector.ReflectionCollector { void <init>(android.content.Context,org.acra.config.ACRAConfiguration); }
-keepclassmembers class org.acra.collector.ReflectionCollector { java.lang.Class getBuildConfigClass(); }
-keepclassmembers class org.acra.collector.ReflectionCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void collectIsValid(android.view.Display,org.json.JSONObject); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { java.lang.String normalize(java.lang.String); }
-keepclassmembers class android.app.Activity { void <init>(); }
-keepclassmembers class org.acra.dialog.CrashReportDialog { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.BitmapShader { android.graphics.Shader copy(); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void collectMetrics(android.view.Display,org.json.JSONObject); }
-keepclassmembers class android.graphics.Shader$TileMode { void <clinit>(); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <init>(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Method); }
-keepclassmembers class org.acra.dialog.CrashReportDialog { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.app.Activity { android.app.LoaderManager getLoaderManager(); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void collectRealMetrics(android.view.Display,org.json.JSONObject); }
-keepclassmembers class android.support.v4.content.IntentCompat { void <clinit>(); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void collectRealSize(android.view.Display,org.json.JSONObject); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void collectRectSize(android.view.Display,org.json.JSONObject); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { int addClient(android.view.accessibility.IAccessibilityManagerClient,int); }
-keepclassmembers class android.widget.NumberPicker$TwoDigitFormatter { void <init>(); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void collectName(android.view.Display,org.json.JSONObject); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void collectSize(android.view.Display,org.json.JSONObject); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { void collectRotation(android.view.Display,org.json.JSONObject); }
-keepclassmembers class android.widget.NumberPicker$TwoDigitFormatter { java.util.Formatter createFormatter(java.util.Locale); }
-keepclassmembers class org.acra.collector.DisplayManagerCollector { java.lang.String rotationToString(int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void startExit(int,android.content.Intent); }
-keepclassmembers class android.app.Activity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class java.util.Collections$SingletonList { java.lang.Object get(int); }
-keepclassmembers class javax.net.ssl.SSLContext { void <clinit>(); }
-keepclassmembers class java.util.MissingFormatWidthException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void fadeOutBackground(); }
-keepclassmembers class java.security.SecureRandom { void <clinit>(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.transition.Transition getExitTransition(); }
-keepclassmembers class android.graphics.Interpolator { android.graphics.Interpolator$Result timeToValues(int,float[]); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader,int); }
-keepclassmembers class android.app.Activity { void startManagingCursor(android.database.Cursor); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources); }
-keepclassmembers class java.io.BufferedReader { void checkNotClosed(); }
-keepclassmembers class android.app.Activity { void setActionBar(android.widget.Toolbar); }
-keepclassmembers class android.support.v4.app.NotificationCompatBase { android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent); }
-keepclassmembers class android.os.StrictMode$2 { java.util.ArrayList initialValue(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void deleteImages(android.content.Context,ar.rulosoft.mimanganu.componentes.Manga,ar.rulosoft.mimanganu.servers.ServerBase); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class android.app.Activity { void initWindowDecorActionBar(); }
-keepclassmembers class android.app.Activity { void setDefaultKeyMode(int); }
-keepclassmembers class android.app.Activity { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { android.support.v7.widget.DropDownListView createDropDownListView(android.content.Context,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void reset(android.content.Context,ar.rulosoft.mimanganu.componentes.Manga,ar.rulosoft.mimanganu.servers.ServerBase); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void setTouchModal(boolean); }
-keepclassmembers class android.content.ComponentName { java.lang.String toShortString(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { void <init>(android.content.Context); }
-keepclassmembers class android.content.ComponentName { android.content.ComponentName readFromParcel(android.os.Parcel); }
-keepclassmembers class android.app.Activity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { java.lang.String getFirstMatch(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ComponentName { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { ar.rulosoft.mimanganu.servers.ServerBase getServer(int,android.content.Context); }
-keepclassmembers class android.app.Activity { boolean onNavigateUp(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { ar.rulosoft.mimanganu.servers.ServerBase[] getServers(android.content.Context); }
-keepclassmembers class android.view.ViewConfiguration { void <clinit>(); }
-keepclassmembers class android.view.ViewConfiguration { int getLongPressTimeout(); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSink { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.TintResources { void <init>(android.content.Context,android.content.res.Resources); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSink { void <init>(okhttp3.internal.http2.Http2Stream); }
-keepclassmembers class android.graphics.Paint$Cap { void <clinit>(); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class android.transition.Visibility { void captureValues(android.transition.TransitionValues,int); }
-keepclassmembers class android.graphics.Color { void RGBToHSV(int,int,int,float[]); }
-keepclassmembers class java.lang.reflect.Array { java.lang.IllegalArgumentException notAnArray(java.lang.Object); }
-keepclassmembers class android.graphics.Color { int HSVToColor(int,float[]); }
-keepclassmembers class android.app.Activity { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.IllegalArgumentException incompatibleType(java.lang.Object); }
-keepclassmembers class android.graphics.Color { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.RuntimeException badArray(java.lang.Object); }
-keepclassmembers class android.app.Activity { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class org.acra.collector.DropBoxCollector { void <clinit>(); }
-keepclassmembers class org.acra.collector.DropBoxCollector { void <init>(android.content.Context,org.acra.config.ACRAConfiguration,org.acra.util.PackageManagerWrapper); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter { void <init>(android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.app.Activity { void startActivityAsCaller(android.content.Intent,android.os.Bundle,int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { void <clinit>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.math.BigDecimal$1 { void <clinit>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class org.acra.collector.DropBoxCollector { boolean shouldCollect(java.util.Set,org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { int next(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(); }
-keepclassmembers class android.transition.Visibility { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object newInstance(java.lang.Class,int); }
-keepclassmembers class android.widget.Spinner$SavedState { void <clinit>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(int); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readBoolean(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readOctetString(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.support.v7.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readString(org.apache.harmony.security.asn1.ASN1StringType); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readUTCTime(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.StringIndexOutOfBoundsException indexAndLength(int); }
-keepclassmembers class libcore.reflect.Types { void <clinit>(); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readGeneralizedTime(); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void <clinit>(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void ensurePreDrawListener(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <clinit>(); }
-keepclassmembers class android.support.v7.preference.ListPreferenceDialogFragmentCompat { android.support.v7.preference.ListPreferenceDialogFragmentCompat newInstance(java.lang.String); }
-keepclassmembers class android.app.Activity { void recreate(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$15 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.String getMessage(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void addMenuPresenter(android.support.v7.view.menu.MenuPresenter,android.content.Context); }
-keepclassmembers class android.app.Activity { void finishAffinity(); }
-keepclassmembers class android.support.v7.preference.ListPreferenceDialogFragmentCompat { void onPrepareDialogBuilder(android.support.v7.app.AlertDialog$Builder); }
-keepclassmembers class android.support.v7.preference.ListPreferenceDialogFragmentCompat { void onCreate(android.os.Bundle); }
-keepclassmembers class android.app.Activity { android.app.PendingIntent createPendingResult(int,android.content.Intent,int); }
-keepclassmembers class android.support.v7.preference.ListPreferenceDialogFragmentCompat { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.app.Activity { void ensureSearchManager(); }
-keepclassmembers class java.lang.StringToReal { java.lang.NumberFormatException invalidReal(java.lang.String,boolean); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask$3 { void done(); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { void readLiteralHeaderWithIncrementalIndexingIndexedName(int); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { void readLiteralHeaderWithIncrementalIndexingNewName(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { void readLiteralHeaderWithoutIndexingIndexedName(int); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { void readLiteralHeaderWithoutIndexingNewName(); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { java.util.List getAndResetHeaderList(); }
-keepclassmembers class android.app.Activity { void setTaskDescription(android.app.ActivityManager$TaskDescription); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setLength(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <clinit>(); }
-keepclassmembers class android.app.Activity { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class org.acra.sender.SenderService { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { java.lang.String toString(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { java.lang.String getActionViewStatesKey(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <clinit>(); }
-keepclassmembers class org.acra.file.ReportLocator { java.io.File getApprovedFolder(); }
-keepclassmembers class org.acra.file.ReportLocator { java.io.File[] getApprovedReports(); }
-keepclassmembers class org.acra.file.ReportLocator { java.io.File getUnapprovedFolder(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { void onPaddingUpdated(android.graphics.Rect); }
-keepclassmembers class org.acra.file.ReportLocator { java.io.File[] getUnapprovedReports(); }
-keepclassmembers class android.graphics.Interpolator$Result { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsUnread { void onPostExecute(java.lang.Void); }
-keepclassmembers class android.support.v4.app.FragmentState { void <clinit>(); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { int size(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void <init>(int,java.lang.String,java.lang.String,boolean); }
-keepclassmembers class java.util.Hashtable$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.app.BackStackRecord$TransitionState { void <init>(android.app.BackStackRecord); }
-keepclassmembers class android.os.StrictMode { void dropboxViolationAsync(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.os.StrictMode { void executeDeathPenalty(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseTransition(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.app.FragmentState { android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentHostCallback,android.support.v4.app.Fragment,android.support.v4.app.FragmentManagerNonConfig); }
-keepclassmembers class okio.RealBufferedSink { void <init>(okio.Sink); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseItem(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Activity { boolean navigateUpTo(android.content.Intent); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { void <clinit>(); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { void <init>(android.content.Context,android.support.v7.preference.PreferenceManager); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState cloneConstantState(); }
-keepclassmembers class android.app.Activity { android.content.Intent getParentActivityIntent(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(); }
-keepclassmembers class okhttp3.internal.http2.Huffman { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean addWorker(java.lang.Runnable,boolean); }
-keepclassmembers class okio.RealBufferedSink { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <clinit>(); }
-keepclassmembers class android.os.StrictMode { void onFileUriExposed(java.lang.String); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink write(okio.ByteString); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink write(byte[],int,int); }
-keepclassmembers class libcore.reflect.AnnotationMember$DefaultValues { void <clinit>(); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeByte(int); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink write(byte[]); }
-keepclassmembers class android.animation.PathKeyframes { void <init>(android.graphics.Path,float); }
-keepclassmembers class okio.RealBufferedSink { void write(okio.Buffer,long); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeDecimalLong(long); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeInt(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeShort(int); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeHexadecimalUnsignedLong(long); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatHoneycomb { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createYFloatKeyframes(); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeUtf8(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createXFloatKeyframes(); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createXIntKeyframes(); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createYIntKeyframes(); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { void init(android.support.v7.preference.PreferenceManager); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { android.text.method.TextKeyListener$NullKeyListener getInstance(); }
-keepclassmembers class okhttp3.internal.http2.Huffman { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes { void <clinit>(); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { android.support.v7.preference.Preference createItemFromTag(java.lang.String,android.util.AttributeSet); }
-keepclassmembers class android.app.Activity { void <clinit>(); }
-keepclassmembers class android.app.Activity { boolean shouldShowRequestPermissionRationale(java.lang.String); }
-keepclassmembers class android.os.StrictMode { java.lang.Object trackActivity(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class android.os.StrictMode { void <clinit>(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void add(java.lang.ref.Reference); }
-keepclassmembers class android.text.SpannableStringInternal { void checkRange(java.lang.String,int,int); }
-keepclassmembers class android.app.Activity { void requestPermissions(java.lang.String[],int); }
-keepclassmembers class android.text.SpannableStringInternal { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String region(int,int); }
-keepclassmembers class android.widget.ProgressBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.ProgressBar { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.ProgressBar { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.ProgressBar { void scheduleAccessibilityEventSender(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <clinit>(); }
-keepclassmembers class com.android.internal.util.XmlUtils { boolean convertValueToBoolean(java.lang.CharSequence,boolean); }
-keepclassmembers class java.lang.System { java.lang.String getenv(java.lang.String); }
-keepclassmembers class android.view.DisplayAdjustments { void setCompatibilityInfo(android.content.res.CompatibilityInfo); }
-keepclassmembers class org.acra.ErrorReporter { void performDeprecatedReportPriming(); }
-keepclassmembers class org.acra.ErrorReporter { void handleException(java.lang.Throwable,boolean); }
-keepclassmembers class android.view.DisplayAdjustments { void <clinit>(); }
-keepclassmembers class java.lang.System { java.util.Properties initUnchangeableSystemProperties(); }
-keepclassmembers class org.acra.ErrorReporter { void setEnabled(boolean); }
-keepclassmembers class org.acra.ErrorReporter { void uncaughtException(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class java.lang.System { void setDefaultChangeableProperties(java.util.Properties); }
-keepclassmembers class org.acra.ErrorReporter { void <init>(android.app.Application,org.acra.config.ACRAConfiguration,android.content.SharedPreferences,boolean,boolean,boolean); }
-keepclassmembers class java.lang.System { java.util.Properties createSystemProperties(); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList add(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <clinit>(); }
-keepclassmembers class android.graphics.Bitmap$1 { android.graphics.Bitmap createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.System { void checkPropertyName(java.lang.String); }
-keepclassmembers class java.net.NetworkInterface { void <init>(java.lang.String,int,java.util.List,java.util.List); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.lang.System { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void <init>(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class java.net.NetworkInterface { java.lang.String[] readIfInet6Lines(); }
-keepclassmembers class java.net.NetworkInterface { java.net.NetworkInterface getByNameInternal(java.lang.String,java.lang.String[]); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <init>(java.lang.String,java.text.DecimalFormatSymbols); }
-keepclassmembers class android.widget.Editor$InputMethodState { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnectionPool open(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void open(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void dispose(boolean); }
-keepclassmembers class java.net.NetworkInterface { int readIntFile(java.lang.String); }
-keepclassmembers class java.util.Arrays$ArrayList { void <init>(java.lang.Object[]); }
-keepclassmembers class android.support.v4.view.ViewCompat { void <clinit>(); }
-keepclassmembers class android.content.res.XmlBlock { void <init>(android.content.res.AssetManager,long); }
-keepclassmembers class java.net.NetworkInterface { java.net.SocketException rethrowAsSocketException(java.lang.Exception); }
-keepclassmembers class android.provider.Settings$System { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.provider.Settings$System { android.net.Uri getUriFor(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { boolean recycleConnectionLocked(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { void <init>(android.content.Context); }
-keepclassmembers class libcore.internal.StringPool { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void closeConnectionAndLogExceptionsLocked(android.database.sqlite.SQLiteConnection); }
-keepclassmembers class java.net.NetworkInterface { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$FixedLengthSink { void <init>(okhttp3.internal.http1.Http1Codec,long); }
-keepclassmembers class android.provider.Settings$System { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPattern(long,boolean,java.lang.String); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setRoundingMode(java.math.RoundingMode,double); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { android.support.v7.view.ActionBarPolicy get(android.content.Context); }
-keepclassmembers class java.util.EnumMap { void initialization(java.lang.Class); }
-keepclassmembers class java.util.EnumMap { java.util.Set entrySet(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <clinit>(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void <init>(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void requirePreferenceManager(); }
-keepclassmembers class org.acra.collector.CrashReportData { void putBoolean(org.acra.ReportField,boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class org.acra.collector.CrashReportData { void putNumber(org.acra.ReportField,java.lang.Number); }
-keepclassmembers class org.acra.collector.CrashReportData { void <init>(); }
-keepclassmembers class org.acra.collector.CrashReportData { void putString(org.acra.ReportField,java.lang.String); }
-keepclassmembers class java.util.Collections { java.util.Enumeration enumeration(java.util.Collection); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { android.support.v7.widget.RecyclerView$Adapter onCreateAdapter(android.support.v7.preference.PreferenceScreen); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { android.support.v7.widget.RecyclerView$LayoutManager onCreateLayoutManager(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void throwIfClosedLocked(); }
-keepclassmembers class org.apache.harmony.security.x509.InhibitAnyPolicy { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter obtainConnectionWaiterLocked(java.lang.Thread,long,int,boolean,java.lang.String,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { void <clinit>(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int,java.lang.String); }
-keepclassmembers class java.util.Collections { java.util.List singletonList(java.lang.Object); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isNativeInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.view.RenderNodeAnimator { void init(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void checkMutable(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$UpdateListTask { void onPostExecute(java.lang.Integer); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { void setExtra(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.view.RenderNode); }
-keepclassmembers class java.util.Collections { java.util.ArrayList list(java.util.Enumeration); }
-keepclassmembers class com.android.internal.util.XmlUtils { void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator clone(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class java.util.Collections { java.util.Map synchronizedMap(java.util.Map); }
-keepclassmembers class android.view.RenderNodeAnimator { void <clinit>(); }
-keepclassmembers class java.util.Collections { java.util.Map unmodifiableMap(java.util.Map); }
-keepclassmembers class java.lang.reflect.AbstractMethod { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.ViewCompatLollipop$OnApplyWindowInsetsListenerBridge); }
-keepclassmembers class java.util.Collections { java.util.List unmodifiableList(java.util.List); }
-keepclassmembers class java.util.Collections { java.util.Set unmodifiableSet(java.util.Set); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureMetaStateIsNormalized(int); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String[] additionalDropBoxTags(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String[] additionalSharedPreferences(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String applicationLogFile(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensurePointerCountIsOneForThisAction(android.view.MotionEvent); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { org.acra.config.ACRAConfiguration build(); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.Class buildConfigClass(); }
-keepclassmembers class okhttp3.RequestBody { okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String certificatePath(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String certificateType(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String[] excludeMatchingSharedPreferencesKeys(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String formUri(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String formUriBasicAuthLogin(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void appendEvent(java.lang.StringBuilder,int,android.view.InputEvent,boolean); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String formUriBasicAuthPassword(); }
-keepclassmembers class android.support.v7.preference.EditTextPreferenceDialogFragmentCompat { android.support.v7.preference.EditTextPreferenceDialogFragmentCompat newInstance(java.lang.String); }
-keepclassmembers class java.util.Collections { void <clinit>(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.Class keyStoreFactoryClass(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String[] logcatArguments(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void problem(java.lang.String); }
-keepclassmembers class android.support.v7.preference.EditTextPreferenceDialogFragmentCompat { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { void <clinit>(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String[] excludeMatchingSettingsKeys(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <clinit>(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String mailTo(); }
-keepclassmembers class android.support.v7.preference.EditTextPreferenceDialogFragmentCompat { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.Class reportDialogClass(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.Class[] reportSenderFactoryClasses(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.Class reportPrimerClass(); }
-keepclassmembers class android.content.Context { java.io.File getDataDir(); }
-keepclassmembers class android.content.Context { android.content.Context createDeviceProtectedStorageContext(); }
-keepclassmembers class android.content.Context { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class android.content.Context { boolean isDeviceProtectedStorage(); }
-keepclassmembers class android.content.Context { java.lang.Object getSystemService(java.lang.Class); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { void <clinit>(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.Class retryPolicyClass(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.text.MeasuredText { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.lang.String sharedPreferencesName(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void <init>(); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(java.net.Proxy); }
-keepclassmembers class java.net.URL { java.net.URI toURI(); }
-keepclassmembers class java.net.URL { java.lang.String toExternalForm(); }
-keepclassmembers class android.text.MeasuredText { void <clinit>(); }
-keepclassmembers class org.acra.collector.DeviceIdCollector { void <init>(android.content.Context,org.acra.util.PackageManagerWrapper,android.content.SharedPreferences); }
-keepclassmembers class org.acra.collector.DeviceIdCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class org.acra.collector.DeviceIdCollector { boolean shouldCollect(java.util.Set,org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <clinit>(); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void verify(); }
-keepclassmembers class java.net.URL { void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.Runtime { void <init>(); }
-keepclassmembers class java.net.URL { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setup(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.io.Reader getReader(org.xml.sax.InputSource); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.io.InputStream getInputStream(java.lang.String,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void aval(char[],int,int); }
-keepclassmembers class java.lang.Package { java.lang.String toString(); }
-keepclassmembers class java.lang.Package { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { java.lang.String toString(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void eof(char[],int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { void <init>(android.content.Context); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable newEditable(java.lang.CharSequence); }
-keepclassmembers class android.text.Editable$Factory { void <clinit>(); }
-keepclassmembers class java.lang.Runtime { void addShutdownHook(java.lang.Thread); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap); }
-keepclassmembers class java.lang.Runtime { void <clinit>(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$GhostViewListeners { void <init>(android.view.View,android.view.View,android.view.ViewGroup); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String prefixOf(java.lang.String); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { boolean foreign(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintStream); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateMirrorMatrix(float); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintWriter); }
-keepclassmembers class java.lang.Throwable { java.lang.String toString(); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable initCause(java.lang.Throwable); }
-keepclassmembers class java.lang.Throwable { void addSuppressed(java.lang.Throwable); }
-keepclassmembers class android.support.v7.app.ResourcesFlusher { boolean flushNougats(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void gi(char[],int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$17 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void verifyState(android.content.res.TypedArray); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Intent); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void rectify(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompatIcs { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class android.content.Intent { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http2.StreamResetException { void <init>(okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class java.text.Normalizer$Form { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.TextViewCompat { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector$CodecType { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { void setOverScrollMode(int); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$RectPool { android.graphics.Rect newInstance(); }
-keepclassmembers class android.widget.AbsListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat$DrawableWrapperStateKitKat { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.Paint$Join { void <clinit>(); }
-keepclassmembers class android.support.v4.app.BackStackState { void <clinit>(); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler); }
-keepclassmembers class org.json.JSONObject { void <init>(); }
-keepclassmembers class org.json.JSONObject { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int,int); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void <clinit>(); }
-keepclassmembers class libcore.io.HeapBufferIterator { libcore.io.BufferIterator iterator(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { void setChoiceMode(int); }
-keepclassmembers class android.widget.AbsListView { void setMultiChoiceModeListener(android.widget.AbsListView$MultiChoiceModeListener); }
-keepclassmembers class org.json.JSONObject { java.lang.String checkName(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollEnabled(boolean); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerEnabledUiThread(boolean); }
-keepclassmembers class org.json.JSONObject { java.lang.Object get(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollAlwaysVisible(boolean); }
-keepclassmembers class android.support.v7.preference.MultiSelectListPreferenceDialogFragmentCompat { void <init>(); }
-keepclassmembers class android.support.v7.app.AlertController { void <init>(android.content.Context,android.support.v7.app.AppCompatDialog,android.view.Window); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { void <clinit>(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object); }
-keepclassmembers class android.support.v7.preference.MultiSelectListPreferenceDialogFragmentCompat { android.support.v7.preference.MultiSelectListPreferenceDialogFragmentCompat newInstance(java.lang.String); }
-keepclassmembers class org.json.JSONObject { int getInt(java.lang.String); }
-keepclassmembers class android.support.v7.preference.MultiSelectListPreferenceDialogFragmentCompat { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { void <init>(); }
-keepclassmembers class org.json.JSONObject { java.lang.String getString(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.KeyCharacterMap$1 { android.view.KeyCharacterMap createFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.preference.MultiSelectListPreferenceDialogFragmentCompat { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class org.json.JSONObject { org.json.JSONArray names(); }
-keepclassmembers class android.content.Intent { java.lang.String resolveType(android.content.ContentResolver); }
-keepclassmembers class org.json.JSONObject { java.lang.String toString(); }
-keepclassmembers class okhttp3.Route { void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { libcore.icu.NativeDecimalFormat$FieldPositionIterator forFieldPosition(java.text.FieldPosition); }
-keepclassmembers class okhttp3.Route { java.lang.String toString(); }
-keepclassmembers class android.content.res.Configuration { void <clinit>(); }
-keepclassmembers class org.json.JSONObject { void <clinit>(); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment { void onPrepareDialogBuilder(android.support.v7.app.AlertDialog$Builder); }
-keepclassmembers class android.view.FocusFinder$1 { android.view.FocusFinder initialValue(); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AdapterView { void removeView(android.view.View); }
-keepclassmembers class android.widget.AdapterView { void removeViewAt(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$VPage { ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment getNewSegment(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class rapid.decoder.builtin.BuiltInDecoder { android.graphics.Bitmap decodeJpeg(android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.media.MediaCodecList { android.media.MediaCodecInfo getCodecInfoAt(int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$2 { boolean onPreferenceClick(android.support.v7.preference.Preference); }
-keepclassmembers class rapid.decoder.builtin.BuiltInDecoder { android.graphics.Bitmap decodePng(android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.support.v7.app.AlertController { boolean shouldCenterSingleButton(android.content.Context); }
-keepclassmembers class rapid.decoder.builtin.BuiltInDecoder { void validateRegion(int,int); }
-keepclassmembers class android.support.v7.app.AlertController { int getIconAttributeResId(int); }
-keepclassmembers class rapid.decoder.builtin.BuiltInDecoder { android.graphics.Bitmap decode(android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.widget.AdapterView { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.widget.AdapterView { void selectionChanged(); }
-keepclassmembers class android.support.v7.app.ResourcesFlusher { boolean flushMarshmallows(android.content.res.Resources); }
-keepclassmembers class android.media.MediaCodecList { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class org.acra.legacy.LegacyFileHandler { void updateToCurrentVersionIfNecessary(); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.app.AlertController { void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message); }
-keepclassmembers class android.content.Intent { android.content.ComponentName resolveActivity(android.content.pm.PackageManager); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void initValues(android.content.Context); }
-keepclassmembers class android.content.Intent { android.content.Intent addCategory(java.lang.String); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,boolean); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,int); }
-keepclassmembers class android.app.Notification$MediaStyle { android.app.Notification buildStyled(android.app.Notification); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.io.Serializable); }
-keepclassmembers class android.widget.AbsListView { void setSelector(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Notification$MediaStyle { void addExtras(android.os.Bundle); }
-keepclassmembers class android.widget.AbsListView { void onAttachedToWindow(); }
-keepclassmembers class android.app.Notification$MediaStyle { android.widget.RemoteViews generateMediaActionButton(android.app.Notification$Action); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$1 { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void onCreate(); }
-keepclassmembers class android.widget.AbsListView { android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatLollipop { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$6 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void startService(android.content.Context); }
-keepclassmembers class libcore.icu.TimeZoneNames { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void <init>(int,org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.HttpDate$1 { java.text.DateFormat initialValue(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference { void <clinit>(); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String getDisplayName(java.lang.String[][],java.lang.String,boolean,int); }
-keepclassmembers class android.content.Intent { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { android.graphics.Bitmap createColoredBitmap(android.content.Context,int,int,int); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { android.widget.RemoteViews generateActionButton(android.content.Context,android.support.v4.app.NotificationCompat$Action); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$SavedState { java.lang.String toString(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$SavedState { void <clinit>(); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <clinit>(); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { android.widget.RemoteViews generateMediaActionButton(android.content.Context,android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Writer { void writeByteString(okio.ByteString); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.widget.BaseAdapter { void <init>(); }
-keepclassmembers class android.content.Intent { android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.app.TwilightCalculator { android.support.v7.app.TwilightCalculator getInstance(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void <clinit>(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { void <clinit>(); }
-keepclassmembers class android.content.Intent { void prepareToLeaveProcess(); }
-keepclassmembers class android.support.v4.view.animation.LinearOutSlowInInterpolator { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.logging.Logger$1 { void publish(java.util.logging.Logger,java.lang.String,java.util.logging.Level,java.lang.String); }
-keepclassmembers class okhttp3.internal.http.HttpDate { void <clinit>(); }
-keepclassmembers class android.support.v4.view.animation.FastOutSlowInInterpolator { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { void clearScrollingCache(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyThemeChildElements(android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.reflect.AccessibleObject { void setAccessible(boolean); }
-keepclassmembers class android.graphics.Paint$Align { void <clinit>(); }
-keepclassmembers class android.content.Intent { void <clinit>(); }
-keepclassmembers class java.beans.PropertyChangeSupport { void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.beans.PropertyChangeSupport { void <init>(java.lang.Object); }
-keepclassmembers class okio.Buffer$2 { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { void <clinit>(); }
-keepclassmembers class android.net.Uri$PathSegments { java.lang.String get(int); }
-keepclassmembers class okhttp3.internal.http2.Settings { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { void <init>(android.content.Context); }
-keepclassmembers class android.net.Uri$PathSegments { void <clinit>(); }
-keepclassmembers class okhttp3.Dns { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser$1 { java.io.Reader autoDetectingReader(java.io.InputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void <init>(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler); }
-keepclassmembers class android.support.v7.app.AlertDialog$Builder { void <init>(android.content.Context,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.support.v7.app.AlertDialog$Builder { android.support.v7.app.AlertDialog create(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources); }
-keepclassmembers class android.graphics.Paint { void setTextLocale(java.util.Locale); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteSession createSession(); }
-keepclassmembers class android.graphics.Paint { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class java.beans.PropertyChangeSupport { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$FontMetricsInt getFontMetricsInt(); }
-keepclassmembers class android.support.v7.app.TwilightManager { void <init>(android.content.Context,android.location.LocationManager); }
-keepclassmembers class android.support.v7.app.TwilightManager { android.location.Location getLastKnownLocationForProvider(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part from(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Grego { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.v7.content.res.GrowingArrayUtils { void <clinit>(); }
-keepclassmembers class android.net.Uri$Part { void <clinit>(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.support.v7.app.TwilightManager { boolean isNight(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void openInner(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void open(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(); }
-keepclassmembers class android.widget.AbsListView { boolean sendToTextFilter(int,int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.StateListDrawable$StateListState cloneConstantState(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase$CursorFactory); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void setVersion(int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$2$1 { void run(); }
-keepclassmembers class android.widget.AbsListView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { java.lang.String findEditTable(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteStatement compileStatement(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void createTextFilter(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int getVersion(); }
-keepclassmembers class android.util.Rational { void <clinit>(); }
-keepclassmembers class android.widget.TextView$4 { void <clinit>(); }
-keepclassmembers class java.io.RandomAccessFile { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$StreamTimeout { java.io.IOException newTimeoutException(java.io.IOException); }
-keepclassmembers class android.support.v7.widget.CardView { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class android.graphics.Canvas$EdgeType { void <clinit>(); }
-keepclassmembers class android.view.Choreographer$1 { android.view.Choreographer initialValue(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void <clinit>(); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void <init>(android.app.Activity,boolean); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$Builder { okhttp3.internal.http2.Http2Connection build(); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.app.BackStackState { void <clinit>(); }
-keepclassmembers class java.math.MathContext { void checkValid(); }
-keepclassmembers class android.widget.AbsListView { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int delete(java.lang.String,java.lang.String,java.lang.String[]); }
-keepclassmembers class java.util.TreeMap$Bound { void <clinit>(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void <init>(android.app.Dialog); }
-keepclassmembers class android.widget.Toast$TN { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <init>(); }
-keepclassmembers class java.math.MathContext { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <init>(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int executeSql(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence,java.lang.String,android.content.Intent,android.net.Uri); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { okio.Sink newChunkedSink(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { okio.Sink newFixedLengthSink(long); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { okio.Source newChunkedSource(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { okio.Source newUnknownLengthSource(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { okio.Source newFixedLengthSource(long); }
-keepclassmembers class android.content.res.ColorStateList { java.lang.String toString(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { okhttp3.Headers readHeaders(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { okhttp3.ResponseBody openResponseBody(okhttp3.Response); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { void <clinit>(); }
-keepclassmembers class android.content.res.ColorStateList { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { okhttp3.Response$Builder readResponseHeaders(boolean); }
-keepclassmembers class okhttp3.RealCall { okhttp3.Response getResponseWithInterceptorChain(); }
-keepclassmembers class okhttp3.RealCall { void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager { void setup(); }
-keepclassmembers class okhttp3.RealCall { void captureCallStackTrace(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { java.util.List getAttachedDbs(); }
-keepclassmembers class okhttp3.RealCall { okhttp3.Response execute(); }
-keepclassmembers class okhttp3.internal.http2.PushObserver { void <clinit>(); }
-keepclassmembers class android.graphics.Matrix { boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { java.lang.String toString(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void throwIfNotOpenLocked(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void <clinit>(); }
-keepclassmembers class android.app.ActivityThread { void <clinit>(); }
-keepclassmembers class android.content.ClipData$Item { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class java.util.jar.JarFile { java.util.Enumeration entries(); }
-keepclassmembers class android.content.ClipData$Item { java.lang.String toString(); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class java.lang.ProcessManager$ProcessImpl { void <init>(int,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.Manifest getManifest(); }
-keepclassmembers class android.graphics.Matrix { void getValues(float[]); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.graphics.drawable.AnimationDrawable,android.content.res.Resources); }
-keepclassmembers class android.graphics.Matrix { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.NotificationCompat { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.Matrix { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <clinit>(); }
-keepclassmembers class java.lang.ProcessManager$ProcessImpl { void destroy(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void growArray(int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class org.acra.util.Installation { java.lang.String id(android.content.Context); }
-keepclassmembers class android.graphics.Matrix { void <clinit>(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { android.content.Context getThemedContext(); }
-keepclassmembers class rapid.decoder.IntegerMaker { void <clinit>(); }
-keepclassmembers class java.util.jar.JarFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class org.acra.util.Installation { void writeInstallationFile(java.io.File); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class okhttp3.FormBody$Builder { void <init>(); }
-keepclassmembers class android.support.v7.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$BuilderExtender getExtender(); }
-keepclassmembers class okhttp3.FormBody$Builder { okhttp3.FormBody$Builder add(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.util.Preconditions { java.lang.Object checkNotNull(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.preference.PreferenceManager { java.lang.String getDefaultSharedPreferencesName(android.content.Context); }
-keepclassmembers class okhttp3.FormBody$Builder { okhttp3.FormBody build(); }
-keepclassmembers class com.android.internal.util.Preconditions { float checkArgumentFinite(float,java.lang.String); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readZoneTab(libcore.io.BufferIterator,int,int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { boolean loadData(java.lang.String); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setHideOnContentScrollEnabled(boolean); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class okio.AsyncTimeout { okio.Source source(okio.Source); }
-keepclassmembers class java.net.SocketImpl { java.lang.String toString(); }
-keepclassmembers class okio.AsyncTimeout { okio.Sink sink(okio.Sink); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$SectionsPagerAdapter { void <init>(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class android.net.Uri { android.net.Uri fromFile(java.io.File); }
-keepclassmembers class android.os.storage.StorageVolume$1 { android.os.storage.StorageVolume[] newArray(int); }
-keepclassmembers class android.net.Uri { android.net.Uri parse(java.lang.String); }
-keepclassmembers class android.ddm.DdmHandleHeap { void <clinit>(); }
-keepclassmembers class android.widget.SpellChecker { void <init>(android.widget.TextView); }
-keepclassmembers class android.os.storage.StorageVolume$1 { android.os.storage.StorageVolume createFromParcel(android.os.Parcel); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$9 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.widget.SpellChecker { void setLocale(java.util.Locale); }
-keepclassmembers class java.lang.Enum { void <clinit>(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <clinit>(); }
-keepclassmembers class java.io.InputStreamReader { int read(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$calcStorage$2 { void run(); }
-keepclassmembers class okhttp3.internal.http2.Huffman$Node { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void <init>(); }
-keepclassmembers class android.net.Uri { void checkFileUriExposed(java.lang.String); }
-keepclassmembers class android.net.Uri { boolean isAllowed(char,java.lang.String); }
-keepclassmembers class android.net.Uri { void <clinit>(); }
-keepclassmembers class android.os.FileUtils { boolean contains(java.io.File,java.io.File); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void setHasStableIds(boolean); }
-keepclassmembers class okhttp3.Dispatcher { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void <clinit>(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <init>(java.lang.String,android.graphics.Bitmap,int); }
-keepclassmembers class android.os.StrictMode$4 { android.os.StrictMode$AndroidBlockGuardPolicy initialValue(); }
-keepclassmembers class okhttp3.Dispatcher { void finished(java.util.Deque,java.lang.Object,boolean); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { void <clinit>(); }
-keepclassmembers class android.os.FileUtils { void <clinit>(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <clinit>(); }
-keepclassmembers class android.widget.SpellChecker { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$Listener { void <clinit>(); }
-keepclassmembers class okhttp3.Dispatcher { java.util.concurrent.ExecutorService executorService(); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { void <init>(); }
-keepclassmembers class com.squareup.duktape.Duktape { void <clinit>(); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { com.android.internal.util.NotificationColorUtil getInstance(android.content.Context); }
-keepclassmembers class android.database.DefaultDatabaseErrorHandler { void deleteDatabaseFile(java.lang.String); }
-keepclassmembers class com.squareup.duktape.Duktape { java.lang.Object evaluate(java.lang.String); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { void <init>(android.content.Context); }
-keepclassmembers class android.media.session.MediaSession$Token { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$LoadLastTask { void <init>(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class okhttp3.FormBody { void <clinit>(); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { boolean isGrayscaleIcon(android.content.Context,int); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$LoadLastTask { java.util.ArrayList doInBackground(java.lang.Integer[]); }
-keepclassmembers class android.text.method.BaseKeyListener { void <clinit>(); }
-keepclassmembers class org.acra.sender.HttpSender$Method { void <clinit>(); }
-keepclassmembers class android.graphics.SweepGradient { void <init>(float,float,int[],float[]); }
-keepclassmembers class org.acra.ACRAConstants { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorSet { void <init>(); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { void <clinit>(); }
-keepclassmembers class com.android.internal.util.ImageUtils { void <init>(); }
-keepclassmembers class android.view.GestureDetector$GestureHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.app.RemoteInput$Builder { void <init>(java.lang.String); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector { void <clinit>(); }
-keepclassmembers class com.android.internal.util.ImageUtils { void ensureBufferSize(int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void <init>(android.content.Context,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector { void <init>(); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput build(); }
-keepclassmembers class okhttp3.internal.http2.Hpack { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet$Builder play(android.animation.Animator); }
-keepclassmembers class android.support.v7.preference.PreferenceRecyclerViewAccessibilityDelegate { void <init>(android.support.v7.widget.RecyclerView); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { long contentLength(okhttp3.Headers); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { void <clinit>(); }
-keepclassmembers class android.view.FocusFinder { void <init>(); }
-keepclassmembers class android.widget.TextView$Drawables { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void ensureViewSet(); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { int getSpanIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { int getSpanSize(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { int getSpanGroupIndex(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int,java.util.ArrayList); }
-keepclassmembers class libcore.io.IoBridge { void connect(java.io.FileDescriptor,java.net.InetAddress,int,int); }
-keepclassmembers class libcore.io.IoBridge { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class libcore.io.IoBridge { java.lang.String connectDetail(java.net.InetAddress,int,int,android.system.ErrnoException); }
-keepclassmembers class libcore.io.IoBridge { int available(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.IoBridge { void closeAndSignalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class android.view.GhostView { void insertIntoOverlay(android.view.ViewGroup,android.view.ViewGroup,android.view.GhostView,java.util.ArrayList,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters { void onPreExecute(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters { void onPostExecute(java.lang.Integer); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ar.rulosoft.custompref.NumPickDialogPref { void onSetInitialValue(boolean,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { android.support.v7.widget.RecyclerView$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.view.FocusFinder { boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class okhttp3.internal.http.StatusLine { java.lang.String toString(); }
-keepclassmembers class android.view.FocusFinder { boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.animation.ArgbEvaluator { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void ensureGlows(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void <clinit>(); }
-keepclassmembers class android.os.Looper { android.os.Looper getMainLooper(); }
-keepclassmembers class android.view.FocusFinder { boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.os.Looper { void prepare(boolean); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec build(); }
-keepclassmembers class android.os.Looper { void <init>(boolean); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean); }
-keepclassmembers class android.app.ActivityTransitionState { boolean startExitBackTransition(android.app.Activity); }
-keepclassmembers class android.os.Looper { void <clinit>(); }
-keepclassmembers class java.math.RoundingMode { void <clinit>(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(); }
-keepclassmembers class libcore.io.IoBridge { int getGroupSourceReqOp(int); }
-keepclassmembers class java.net.ServerSocket { void <init>(int,int,java.net.InetAddress); }
-keepclassmembers class java.io.ByteArrayOutputStream { byte[] toByteArray(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(int); }
-keepclassmembers class okio.Okio { void <clinit>(); }
-keepclassmembers class okio.Okio { okio.BufferedSink buffer(okio.Sink); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View); }
-keepclassmembers class okio.Okio { okio.BufferedSource buffer(okio.Source); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View,int); }
-keepclassmembers class java.io.ByteArrayOutputStream { java.lang.String toString(java.lang.String); }
-keepclassmembers class okio.Okio { boolean isAndroidGetsocknameError(java.lang.AssertionError); }
-keepclassmembers class okio.Okio { okio.Sink sink(java.io.OutputStream,okio.Timeout); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class okio.Okio { okio.Sink sink(java.net.Socket); }
-keepclassmembers class android.view.FocusFinder { void <clinit>(); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class java.net.ServerSocket { java.net.Socket accept(); }
-keepclassmembers class java.net.ServerSocket { void checkListen(int); }
-keepclassmembers class okio.Okio { okio.Source source(java.io.InputStream); }
-keepclassmembers class okio.Okio { okio.AsyncTimeout timeout(java.net.Socket); }
-keepclassmembers class okio.Okio { okio.Source source(java.io.InputStream,okio.Timeout); }
-keepclassmembers class java.net.ServerSocket { void setSoTimeout(int); }
-keepclassmembers class okio.Okio { okio.Source source(java.net.Socket); }
-keepclassmembers class libcore.io.IoBridge { int recvfrom(boolean,java.io.FileDescriptor,byte[],int,int,int,java.net.DatagramPacket,boolean); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void <init>(long,int); }
-keepclassmembers class java.net.ServerSocket { void checkOpen(); }
-keepclassmembers class libcore.io.IoBridge { int maybeThrowAfterRecvfrom(boolean,boolean,android.system.ErrnoException); }
-keepclassmembers class android.support.v4.app.FragmentManagerState { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setText(java.lang.String); }
-keepclassmembers class java.util.Formatter$FormatToken { void checkFlags(java.lang.Object); }
-keepclassmembers class org.acra.collector.LogCatCollector$2 { void <clinit>(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { libcore.icu.NativeBreakIterator getWordInstance(java.util.Locale); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector$1 { void <clinit>(); }
-keepclassmembers class java.util.Formatter$FormatToken { java.util.UnknownFormatConversionException unknownFormatConversionException(); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(java.io.FileDescriptor); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { java.lang.String toString(); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(java.net.Proxy); }
-keepclassmembers class org.apache.harmony.security.x509.AlternativeName { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http2.Header { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http2.Header { java.lang.String toString(); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(); }
-keepclassmembers class java.net.PlainSocketImpl { void checkNotClosed(); }
-keepclassmembers class java.net.PlainSocketImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class java.net.PlainSocketImpl { java.io.OutputStream getOutputStream(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksConnect(java.net.InetAddress,int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { void <init>(android.content.Context); }
-keepclassmembers class java.net.PlainSocketImpl { void socksAccept(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksRequestConnection(java.net.InetAddress,int); }
-keepclassmembers class java.net.PlainSocketImpl { void socksBind(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksSendRequest(int,java.net.InetAddress,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$BuilderExtender getExtender(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { void <init>(int,int); }
-keepclassmembers class java.net.PlainSocketImpl { int read(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { void <init>(android.support.v7.widget.RecyclerView$LayoutParams); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.animation.LayoutTransition { void addTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.lang.Thread$State { void <clinit>(); }
-keepclassmembers class android.animation.LayoutTransition { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { java.lang.String getStatus(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void <clinit>(); }
-keepclassmembers class okio.Okio$1 { java.lang.String toString(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <clinit>(); }
-keepclassmembers class java.lang.ThreadLocal { void <clinit>(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$Values initializeValues(java.lang.Thread); }
-keepclassmembers class java.lang.ThreadLocal { void <init>(); }
-keepclassmembers class android.widget.ScrollView$SavedState { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void setSpanCount(int); }
-keepclassmembers class android.widget.ScrollView$SavedState { void <clinit>(); }
-keepclassmembers class okhttp3.Cookie { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.ViewDebug { java.lang.String formatIntToHexString(int); }
-keepclassmembers class android.view.SoundEffectConstants { int getContantForFocusDirection(int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$22 { boolean onPreferenceClick(android.support.v7.preference.Preference); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { java.security.PublicKey getPublicKey(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.lang.String toString(); }
-keepclassmembers class java.util.jar.ManifestReader { void <init>(byte[],java.util.jar.Attributes); }
-keepclassmembers class android.support.v4.app.Fragment$2 { android.view.View onFindViewById(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void <init>(int[],java.lang.String,java.lang.Object); }
-keepclassmembers class okhttp3.Cookie { java.lang.String parseDomain(java.lang.String); }
-keepclassmembers class android.R$styleable { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void validateOid(int[]); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String toOIDString(); }
-keepclassmembers class java.io.PrintStream { void <init>(java.io.OutputStream); }
-keepclassmembers class okhttp3.Cookie { boolean pathMatch(okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class java.lang.ThreadGroup { void add(java.lang.ThreadGroup); }
-keepclassmembers class okhttp3.CookieJar { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$22$1 { void run(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <clinit>(); }
-keepclassmembers class java.io.PrintStream { void print(java.lang.String); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { android.support.design.widget.FloatingActionButtonImpl createImpl(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util$LazyHolder { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$AddAllMangaInDirectoryTask { void <init>(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class java.io.PrintStream { java.io.PrintStream append(java.lang.CharSequence); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { void <clinit>(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener wrapOnVisibilityChangedListener(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener); }
-keepclassmembers class okio.RealBufferedSource { void <init>(okio.Source); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$AddAllMangaInDirectoryTask { void onProgressUpdate(java.lang.Integer[]); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String toString(); }
-keepclassmembers class java.lang.ThreadGroup { void addThread(java.lang.Thread); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set entrySet(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void setBackgroundColor(int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set keySet(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { void <clinit>(); }
-keepclassmembers class okio.RealBufferedSource { java.io.InputStream inputStream(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class android.graphics.BitmapRegionDecoder { android.graphics.BitmapRegionDecoder newInstance(java.lang.String,boolean); }
-keepclassmembers class android.support.graphics.drawable.PathParser { void addNode(java.util.ArrayList,char,float[]); }
-keepclassmembers class android.system.ErrnoException { java.lang.String getMessage(); }
-keepclassmembers class android.view.ViewDebug { java.lang.Object resolveId(android.content.Context,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.system.ErrnoException { java.net.SocketException rethrowAsSocketException(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { java.util.ArrayList getMangas(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.app.TaskStackBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.app.TaskStackBuilder { android.app.TaskStackBuilder create(android.content.Context); }
-keepclassmembers class okio.RealBufferedSource { java.lang.String readString(java.nio.charset.Charset); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { java.lang.String getPagesNumber(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.support.v4.view.animation.FastOutLinearInInterpolator { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle); }
-keepclassmembers class okio.RealBufferedSource { void require(long); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void reverse(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment { void <clinit>(); }
-keepclassmembers class okio.RealBufferedSource { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi24 { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.Fragment$AnimationInfo ensureAnimationInfo(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <clinit>(); }
-keepclassmembers class android.widget.Spinner { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.Spinner { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.Spinner { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.support.v4.app.Fragment { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.database.ContentObserver { void <init>(android.os.Handler); }
-keepclassmembers class java.text.SimpleDateFormat { void validatePatternCharacter(char); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.util.Locale); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener); }
-keepclassmembers class rapid.decoder.BitmapDecoder$ScaleBy { void <clinit>(); }
-keepclassmembers class org.acra.builder.ReportBuilder { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { android.content.res.Resources getResources(); }
-keepclassmembers class org.acra.builder.ReportBuilder { void build(org.acra.builder.ReportExecutor); }
-keepclassmembers class android.view.InputEvent { void <clinit>(); }
-keepclassmembers class android.util.IntProperty { void <init>(java.lang.String); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <init>(int,java.util.HashMap); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <clinit>(); }
-keepclassmembers class android.support.v4.app.Fragment { void instantiateChildFragmentManager(); }
-keepclassmembers class android.support.v4.util.MapCollections$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void <clinit>(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void <init>(); }
-keepclassmembers class android.app.Dialog { void dismissDialog(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <clinit>(); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl build(); }
-keepclassmembers class android.app.Dialog { android.os.Bundle onSaveInstanceState(); }
-keepclassmembers class android.view.InputEvent { void recycle(); }
-keepclassmembers class dalvik.system.BlockGuard { void setThreadPolicy(dalvik.system.BlockGuard$Policy); }
-keepclassmembers class dalvik.system.BlockGuard { void <clinit>(); }
-keepclassmembers class okhttp3.CertificatePinner { void <clinit>(); }
-keepclassmembers class android.support.v4.app.Fragment { void performActivityCreated(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class android.app.Dialog { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class android.database.sqlite.SQLiteDirectCursorDriver { android.database.Cursor query(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String[]); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(int[],org.apache.harmony.security.x501.AttributeValue); }
-keepclassmembers class android.support.v4.app.Fragment { void performCreate(android.os.Bundle); }
-keepclassmembers class java.text.DateFormat { java.lang.String format(java.util.Date); }
-keepclassmembers class android.support.v4.app.Fragment { void performDestroy(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void appendName(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class android.support.v4.app.Fragment { void performDestroyView(); }
-keepclassmembers class java.text.SimpleDateFormat { void appendNumber(java.lang.StringBuffer,int,int); }
-keepclassmembers class android.support.v4.app.Fragment { void performDetach(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { boolean isDot(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl$Builder { boolean isDotDot(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$1 { void run(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int parsePort(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.app.Fragment { void performPause(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.ViewBoundsCheck { void <init>(android.support.v7.widget.ViewBoundsCheck$Callback); }
-keepclassmembers class android.support.v4.app.Fragment { void performResume(); }
-keepclassmembers class okhttp3.CertificatePinner { okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner); }
-keepclassmembers class android.support.v4.app.Fragment { void performSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.util.logging.LogManager { void <init>(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.app.Fragment { void performStop(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void <clinit>(); }
-keepclassmembers class android.support.v4.app.Fragment { void restoreChildFragmentState(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void performStart(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page { void setImage(); }
-keepclassmembers class android.app.Dialog { void setOnCancelListener(android.content.DialogInterface$OnCancelListener); }
-keepclassmembers class android.support.v4.app.Fragment { void restoreViewState(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void setArguments(android.os.Bundle); }
-keepclassmembers class android.app.Dialog { void setOnDismissListener(android.content.DialogInterface$OnDismissListener); }
-keepclassmembers class java.util.Vector { void <init>(int,int); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(); }
-keepclassmembers class android.support.v4.app.Fragment { void setIndex(int,android.support.v4.app.Fragment); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { java.lang.Object getInstanceByClass(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder addPathSegment(java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment { void setOnStartEnterTransitionListener(android.support.v4.app.Fragment$OnStartEnterTransitionListener); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl build(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger getOrCreate(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder encodedQuery(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder host(java.lang.String); }
-keepclassmembers class org.acra.file.CrashReportFileNameParser { boolean isApproved(java.lang.String); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class java.text.SimpleDateFormat { void <clinit>(); }
-keepclassmembers class android.support.v4.app.Fragment { void startPostponedEnterTransition(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.String toString(); }
-keepclassmembers class okhttp3.MultipartBody { void <init>(okio.ByteString,okhttp3.MediaType,java.util.List); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaReader { void <init>(android.content.Context); }
-keepclassmembers class java.lang.ref.FinalizerReference { void finalizeAllEnqueued(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder port(int); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean enqueueSentinelReference(java.lang.ref.FinalizerReference$Sentinel); }
-keepclassmembers class java.lang.ref.FinalizerReference { void <clinit>(); }
-keepclassmembers class java.util.MissingFormatArgumentException { void <init>(java.lang.String); }
-keepclassmembers class java.util.MissingFormatArgumentException { java.lang.String getMessage(); }
-keepclassmembers class org.acra.collector.SettingsCollector { void <init>(android.content.Context,org.acra.config.ACRAConfiguration); }
-keepclassmembers class android.app.FragmentManagerState { void <clinit>(); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config readFamilies(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder scheme(java.lang.String); }
-keepclassmembers class okio.Util { void <clinit>(); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Family readFamily(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.acra.ReportField { void <clinit>(); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Alias readAlias(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class okhttp3.internal.http.RequestLine { java.lang.String get(okhttp3.Request,java.net.Proxy$Type); }
-keepclassmembers class okhttp3.MultipartBody { void <clinit>(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.lang.String toString(); }
-keepclassmembers class org.acra.prefs.SharedPreferencesFactory { android.content.SharedPreferences create(); }
-keepclassmembers class okhttp3.internal.http.RequestLine { java.lang.String requestPath(okhttp3.HttpUrl); }
-keepclassmembers class org.acra.collector.SettingsCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$2 { android.graphics.BitmapFactory$Options newInstance(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat { void <init>(android.view.View); }
-keepclassmembers class android.app.Notification { void <init>(); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { void <init>(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class android.widget.Filter { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { void updateParametersFrom(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsRead { void onPostExecute(java.lang.Void); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { boolean isInMemoryDb(); }
-keepclassmembers class android.transition.Transition { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { java.lang.String stripPathForLogs(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { void <clinit>(); }
-keepclassmembers class java.text.RuleBasedBreakIterator { void checkOffset(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.util.concurrent.SynchronousQueue$TransferStack$SNode snode(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.lang.Object,java.util.concurrent.SynchronousQueue$TransferStack$SNode,int); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence,android.widget.Filter$FilterListener); }
-keepclassmembers class android.support.v4.text.ICUCompat { void <clinit>(); }
-keepclassmembers class java.nio.ByteOrder { void <clinit>(); }
-keepclassmembers class android.app.Notification { java.lang.CharSequence safeCharSequence(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.app.AlertController$ButtonHandler { void <init>(android.content.DialogInterface); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void <clinit>(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void <init>(); }
-keepclassmembers class android.text.method.TextKeyListener { void initPrefs(android.content.Context); }
-keepclassmembers class ar.rulosoft.navegadores.VolatileCookieJar { void <init>(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { java.util.ArrayList getArray(); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void <init>(java.util.ServiceLoader,java.util.ServiceLoader); }
-keepclassmembers class android.view.View$TransformationInfo { void <init>(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { int[] getInputDeviceIds(); }
-keepclassmembers class org.acra.util.NonBlockingBufferedReader { void <init>(java.io.BufferedReader); }
-keepclassmembers class android.app.Notification { void <clinit>(); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context,int); }
-keepclassmembers class java.nio.charset.UnsupportedCharsetException { void <init>(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState { void setupAnimatorSet(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$4 { boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { okhttp3.internal.platform.Platform buildIfSupported(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <clinit>(); }
-keepclassmembers class okhttp3.Response$Builder { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <init>(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class okhttp3.Response$Builder { void checkPriorResponse(okhttp3.Response); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response build(); }
-keepclassmembers class okhttp3.Response$Builder { void checkSupportResponse(java.lang.String,okhttp3.Response); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder cacheResponse(okhttp3.Response); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void connectSocket(java.net.Socket,java.net.InetSocketAddress,int); }
-keepclassmembers class okio.SegmentedByteString { okio.ByteString toByteString(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder networkResponse(okhttp3.Response); }
-keepclassmembers class android.support.v7.preference.SwitchPreferenceCompat { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog create(); }
-keepclassmembers class org.acra.util.ToastSender { void sendToast(android.content.Context,int,int); }
-keepclassmembers class android.widget.Button { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyCharacterMap load(int); }
-keepclassmembers class android.widget.RemoteViews$4 { void <clinit>(); }
-keepclassmembers class android.view.KeyCharacterMap { char getMatch(int,char[],int); }
-keepclassmembers class android.widget.Button { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.util.zip.InflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater,int); }
-keepclassmembers class java.text.DateFormat$Field { void <clinit>(); }
-keepclassmembers class android.view.KeyCharacterMap { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.zip.InflaterInputStream { void checkClosed(); }
-keepclassmembers class android.support.v7.widget.CardViewJellybeanMr1 { void initStatic(); }
-keepclassmembers class android.view.KeyCharacterMap { void <clinit>(); }
-keepclassmembers class android.view.KeyCharacterMap { boolean getKeyData(int,android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class org.acra.collector.TimeCollector { void <init>(java.util.Calendar); }
-keepclassmembers class org.acra.util.ApplicationStartupProcessor { void deleteAllUnapprovedReportsBarOne(); }
-keepclassmembers class org.acra.collector.TimeCollector { java.lang.String getTimeString(java.util.Calendar); }
-keepclassmembers class org.acra.util.ApplicationStartupProcessor { int getAppVersion(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatBase { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class org.acra.util.ApplicationStartupProcessor { void sendApprovedReports(); }
-keepclassmembers class org.acra.collector.TimeCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class java.util.Formatter$1 { java.util.Formatter$CachedDecimalFormat initialValue(); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { void <clinit>(); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <clinit>(); }
-keepclassmembers class android.widget.Editor { void <init>(android.widget.TextView); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat { void <clinit>(); }
-keepclassmembers class android.text.method.DialerKeyListener { android.text.method.DialerKeyListener getInstance(); }
-keepclassmembers class android.text.method.DialerKeyListener { void <clinit>(); }
-keepclassmembers class android.widget.FrameLayout { android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class libcore.icu.NativePluralRules { libcore.icu.NativePluralRules forLocale(java.util.Locale); }
-keepclassmembers class android.widget.FrameLayout { void setForeground(android.graphics.drawable.Drawable); }
-keepclassmembers class android.database.sqlite.SQLiteStatement { java.lang.String toString(); }
-keepclassmembers class android.util.LongSparseArray { void <clinit>(); }
-keepclassmembers class android.widget.Editor { void setErrorIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { okhttp3.internal.platform.Platform buildIfSupported(); }
-keepclassmembers class java.security.spec.EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class android.widget.Editor { void createInputContentTypeIfNeeded(); }
-keepclassmembers class android.widget.Editor { void createInputMethodStateIfNeeded(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { void afterHandshake(javax.net.ssl.SSLSocket); }
-keepclassmembers class android.transition.Transition { void <clinit>(); }
-keepclassmembers class com.android.internal.os.BinderInternal { void <clinit>(); }
-keepclassmembers class android.content.IntentFilter { void <init>(); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class android.widget.FrameLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.Editor { void updateSpellCheckSpans(int,int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$7 { void onRefresh(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$DrawableWrapperStateHoneycomb { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.support.v7.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class okhttp3.Request { okhttp3.Request$Builder newBuilder(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable); }
-keepclassmembers class okhttp3.Request { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.support.v7.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.FrameLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.content.res.StringBlock { android.text.style.CharacterStyle getColor(java.lang.String,boolean); }
-keepclassmembers class java.util.Collections$1 { java.lang.Object next(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void <init>(float,java.lang.Object); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe$ObjectKeyframe clone(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener getPositionListener(); }
-keepclassmembers class android.widget.Editor { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setInternalBackgroundTint(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.LicenseFragment { void showLicense(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.LicenseFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$18 { boolean onPreferenceClick(android.support.v7.preference.Preference); }
-keepclassmembers class android.support.v4.util.LogWriter { void <init>(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.LicenseFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { android.support.v7.app.AppCompatDelegate create(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void hideAfterDelay(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { ar.rulosoft.navegadores.Navigator getNavigatorWithNeededHeader(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfo { void setSynopsis(java.lang.String); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class org.acra.ReportingInteractionMode { void <clinit>(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getDeclaredField(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void <init>(android.database.sqlite.SQLiteConnectionPool); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getDeclaredFieldInternal(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MisMangasAdapter { void <init>(android.app.Activity,java.util.List,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void beginTransactionUnchecked(int,android.database.sqlite.SQLiteTransactionListener,int,android.os.CancellationSignal); }
-keepclassmembers class java.lang.Class { boolean classNameImpliesTopLevel(); }
-keepclassmembers class ar.rulosoft.navegadores.CFInterceptor { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void endTransaction(android.os.CancellationSignal); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void endTransactionUnchecked(android.os.CancellationSignal,boolean); }
-keepclassmembers class ar.rulosoft.navegadores.CFInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class java.io.InvalidClassException { java.lang.String getMessage(); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <init>(android.view.ViewConfiguration,android.view.View); }
-keepclassmembers class android.database.sqlite.SQLiteSession { long executeForLong(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void prepare(java.lang.String,int,android.os.CancellationSignal,android.database.sqlite.SQLiteStatementInfo); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <clinit>(); }
-keepclassmembers class java.lang.Class { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteSession { int executeForChangedRowCount(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal); }
-keepclassmembers class android.database.sqlite.SQLiteSession { long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal); }
-keepclassmembers class android.widget.Editor { boolean startSelectionActionMode(); }
-keepclassmembers class android.content.IntentFilter { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void throwIfNoTransaction(); }
-keepclassmembers class android.database.sqlite.SQLiteSession { int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,int,android.os.CancellationSignal); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$InsertionPointCursorController getInsertionController(); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void throwIfTransactionMarkedSuccessful(); }
-keepclassmembers class java.lang.Class { java.lang.Object newInstance(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$SelectionModifierCursorController getSelectionController(); }
-keepclassmembers class org.acra.file.CrashReportPersister { org.acra.collector.CrashReportData load(java.io.File); }
-keepclassmembers class org.acra.file.CrashReportPersister { void store(org.acra.collector.CrashReportData,java.io.File); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteSession { android.database.sqlite.SQLiteSession$Transaction obtainTransaction(int,android.database.sqlite.SQLiteTransactionListener); }
-keepclassmembers class android.widget.Editor { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class java.lang.Class { java.lang.String toString(); }
-keepclassmembers class java.util.WeakHashMap$1 { java.util.Iterator iterator(); }
-keepclassmembers class android.widget.Editor { void addSpanWatchers(android.text.Spannable); }
-keepclassmembers class java.lang.Class { java.lang.Object cast(java.lang.Object); }
-keepclassmembers class java.util.Hashtable { java.util.Collection values(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void <init>(); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.lang.String toString(); }
-keepclassmembers class java.util.Hashtable { java.util.Enumeration keys(); }
-keepclassmembers class android.widget.Editor { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class dalvik.system.DexPathList$Element { void maybeInit(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void start(int); }
-keepclassmembers class java.util.Hashtable { java.util.Set entrySet(); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.net.URL findResource(java.lang.String); }
-keepclassmembers class android.os.StrictMode$8 { android.os.StrictMode$ThreadSpanState initialValue(); }
-keepclassmembers class java.security.Signature$SignatureImpl { void <init>(java.lang.String,java.security.Provider); }
-keepclassmembers class java.lang.IntegralToString$1 { char[] initialValue(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.content.res.Resources getResources(); }
-keepclassmembers class java.util.Hashtable { void <clinit>(); }
-keepclassmembers class okhttp3.MultipartBody$Builder { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex { okhttp3.internal.tls.TrustRootIndex get(java.security.cert.X509Certificate[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter { void <init>(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Handler$Callback,boolean); }
-keepclassmembers class okhttp3.MultipartBody$Builder { okhttp3.MultipartBody$Builder addPart(okhttp3.MultipartBody$Part); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex { okhttp3.internal.tls.TrustRootIndex get(javax.net.ssl.X509TrustManager); }
-keepclassmembers class okhttp3.MultipartBody$Builder { okhttp3.MultipartBody build(); }
-keepclassmembers class org.json.JSONObject$1 { java.lang.String toString(); }
-keepclassmembers class okhttp3.MultipartBody$Builder { okhttp3.MultipartBody$Builder setType(okhttp3.MediaType); }
-keepclassmembers class android.view.DisplayEventReceiver { void <init>(android.os.Looper); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <init>(int); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <clinit>(); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtTime(android.os.Message,long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtFrontOfQueue(android.os.Message); }
-keepclassmembers class java.util.ResourceBundle { java.util.MissingResourceException missingResourceException(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.Inet6Address { java.net.Inet6Address getByAddress(java.lang.String,byte[],int); }
-keepclassmembers class libcore.reflect.AnnotationFactory { void <clinit>(); }
-keepclassmembers class android.os.Handler { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page getNewPage(); }
-keepclassmembers class java.lang.HexStringParser { double parseDouble(java.lang.String); }
-keepclassmembers class android.os.AsyncTask$4 { void <clinit>(); }
-keepclassmembers class java.lang.HexStringParser { void parseHexSign(java.lang.String); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void <clinit>(); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException invalidDigest(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.net.Inet6Address { java.lang.String toString(); }
-keepclassmembers class java.lang.Character$Subset { void <init>(java.lang.String); }
-keepclassmembers class java.net.Inet6Address { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException failedVerification(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.HexStringParser { java.lang.String getNormalizedSignificand(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.jar.JarVerifier { void <init>(java.lang.String,java.util.jar.Manifest,java.util.HashMap); }
-keepclassmembers class android.ddm.DdmHandleExit { void <clinit>(); }
-keepclassmembers class java.lang.HexStringParser { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$GetPageTask { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class com.android.internal.R$styleable { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$GetPageTask { ar.rulosoft.mimanganu.componentes.Chapter doInBackground(ar.rulosoft.mimanganu.componentes.Chapter[]); }
-keepclassmembers class java.util.ResourceBundle { java.util.Locale strip(java.util.Locale); }
-keepclassmembers class java.util.ResourceBundle { void <clinit>(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$GetPageTask { void onPostExecute(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class org.acra.collector.LogFileCollector { void <init>(android.content.Context,org.acra.config.ACRAConfiguration); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void setSelector(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.jar.JarVerifier { void <clinit>(); }
-keepclassmembers class org.acra.collector.LogFileCollector { java.io.InputStream getStream(org.acra.file.Directory,java.lang.String); }
-keepclassmembers class java.util.Arrays { java.util.List asList(java.lang.Object[]); }
-keepclassmembers class java.math.BigInt { java.math.BigInt newBigInt(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt copy(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat { void <clinit>(); }
-keepclassmembers class java.math.BigInt { java.lang.NumberFormatException invalidBigInteger(java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 { void execute(); }
-keepclassmembers class org.acra.collector.LogFileCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { void addOnPageChangeListener(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV23 { android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { okhttp3.Route next(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { void setPaths(java.util.List); }
-keepclassmembers class java.util.Arrays { void checkBinarySearchBounds(int,int,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void close(); }
-keepclassmembers class java.net.URLEncoder$1 { boolean isRetained(char); }
-keepclassmembers class android.support.design.widget.ViewGroupUtilsHoneycomb { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.Reader$Direction { void <clinit>(); }
-keepclassmembers class android.view.View$MeasureSpec { java.lang.String toString(int); }
-keepclassmembers class org.json.JSON { double checkDouble(double); }
-keepclassmembers class java.lang.reflect.Method { void <clinit>(); }
-keepclassmembers class org.json.JSON { org.json.JSONException typeMismatch(java.lang.Object,java.lang.Object,java.lang.String); }
-keepclassmembers class java.lang.reflect.Method { java.lang.String toString(); }
-keepclassmembers class org.json.JSON { org.json.JSONException typeMismatch(java.lang.Object,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String createExtnPattern(java.lang.String); }
-keepclassmembers class android.support.v7.util.DiffUtil { void <clinit>(); }
-keepclassmembers class java.util.Arrays { void checkStartAndEnd(int,int,int); }
-keepclassmembers class java.net.Proxy { void <init>(java.net.Proxy$Type,java.net.SocketAddress); }
-keepclassmembers class java.net.Proxy { java.lang.String toString(); }
-keepclassmembers class java.net.Proxy { void <clinit>(); }
-keepclassmembers class java.util.logging.LogRecord { void <clinit>(); }
-keepclassmembers class android.graphics.DashPathEffect { void <init>(float[],float); }
-keepclassmembers class rapid.decoder.BitmapDecoder$Region { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow { void preparePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection loadMetadataAndCloseInput(java.io.ObjectInputStream); }
-keepclassmembers class android.widget.PopupWindow { android.view.WindowManager$LayoutParams createPopupLayout(android.os.IBinder); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String extractPossibleNumber(java.lang.String); }
-keepclassmembers class com.android.internal.util.ArrayUtils { void <clinit>(); }
-keepclassmembers class java.util.Arrays { float[] copyOf(float[],int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject newCondition(); }
-keepclassmembers class java.util.Arrays { int[] copyOf(int[],int); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOf(java.lang.Object[],int); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil createInstance(com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference$SavedState { void <clinit>(); }
-keepclassmembers class android.graphics.Region$Op { void <clinit>(); }
-keepclassmembers class java.lang.Double { java.lang.Double valueOf(double); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegionOrCallingCode(int,java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl$Builder$ParseResult { void <clinit>(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <clinit>(); }
-keepclassmembers class java.text.DateFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class java.lang.Double { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow { void registerForScrollChanged(android.view.View,int,int,int); }
-keepclassmembers class android.widget.PopupWindow { void setOverlapAnchor(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.services.SingleDownload { void writeErrorImage(java.io.File); }
-keepclassmembers class android.widget.PopupWindow { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow { void setEnterTransition(android.transition.Transition); }
-keepclassmembers class libcore.reflect.InternalNames { java.lang.String getInternalName(java.lang.Class); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String getTimeZoneDisplayName(java.util.TimeZone,boolean,int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangasRecAdapter { void <init>(java.util.ArrayList,android.content.Context,boolean); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getNationalSignificantNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util$2 { void run(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.Reader$Type { void <clinit>(); }
-keepclassmembers class android.graphics.TemporaryBuffer { char[] obtain(int); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { void <init>(android.view.View); }
-keepclassmembers class android.graphics.TemporaryBuffer { void recycle(char[]); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtainNoHistory(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { java.lang.String toString(); }
-keepclassmembers class android.text.Html { android.text.Spanned fromHtml(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { byte[] encode(java.lang.Object); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void set(java.lang.Object); }
-keepclassmembers class android.text.Html { android.text.Spanned fromHtml(java.lang.String,int); }
-keepclassmembers class com.fedorvlasov.lazylist.MemCache { com.fedorvlasov.lazylist.MemCache getInstance(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver { void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21,android.os.Handler); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.String toString(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.Reader { ar.rulosoft.mimanganu.componentes.readers.Reader getNewReader(android.content.Context,ar.rulosoft.mimanganu.componentes.readers.Reader$Direction,ar.rulosoft.mimanganu.componentes.readers.Reader$Type); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.Name { javax.security.auth.x500.X500Principal getX500Principal(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.lang.String getName(java.lang.String); }
-keepclassmembers class android.os.AsyncTask$Status { void <clinit>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void <init>(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler,org.ccil.cowan.tagsoup.Parser); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult isPossibleNumberWithReason(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readBitString(); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invoke(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readBoolean(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int maybeExtractCountryCode(java.lang.String,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class libcore.io.Base64 { void <clinit>(); }
-keepclassmembers class android.view.DisplayInfo { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String axisToString(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean parsePrefixAsIdd(java.util.regex.Pattern,java.lang.StringBuilder); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleEndTag(java.lang.String); }
-keepclassmembers class android.view.MotionEvent { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void checkStateLoss(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean maybeStripNationalPrefixAndCarrierCode(java.lang.StringBuilder,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleBr(android.text.SpannableStringBuilder); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readOctetString(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { org.apache.harmony.security.asn1.ASN1Exception expected(java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startImg(android.text.SpannableStringBuilder,org.xml.sax.Attributes,android.text.Html$ImageGetter); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startFont(android.text.SpannableStringBuilder,org.xml.sax.Attributes); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v4.view.NestedScrollingChildHelper getScrollingChildHelper(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void ensureExecReady(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parseAndKeepRawInput(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startA(android.text.SpannableStringBuilder,org.xml.sax.Attributes); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$20 { boolean onPreferenceClick(android.support.v7.preference.Preference); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void <clinit>(); }
-keepclassmembers class okhttp3.internal.Version { java.lang.String userAgent(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseHelper(java.lang.String,java.lang.String,boolean,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class java.net.Inet4Address { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class java.net.Proxy$Type { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isPreferredNextFocusAbsolute(android.view.View,android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readString(org.apache.harmony.security.asn1.ASN1StringType); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <init>(java.lang.String,android.net.Uri,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.text.BidiFormatter$Builder { android.support.v4.text.BidiFormatter build(); }
-keepclassmembers class android.view.MotionEvent { void transform(android.graphics.Matrix); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { void addDetachListenerBase(android.view.View); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { void addDetachListenerApi12(android.view.View); }
-keepclassmembers class okio.Okio$4 { java.io.IOException newTimeoutException(java.io.IOException); }
-keepclassmembers class okio.Okio$4 { void timedOut(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void <init>(); }
-keepclassmembers class okhttp3.CipherSuite { void <clinit>(); }
-keepclassmembers class java.util.HashSet { void <init>(); }
-keepclassmembers class java.nio.ByteArrayBuffer { int protectedArrayOffset(); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <clinit>(); }
-keepclassmembers class java.nio.ByteArrayBuffer { byte[] protectedArray(); }
-keepclassmembers class android.media.AudioAttributes { void <clinit>(); }
-keepclassmembers class java.util.HashSet { void <init>(int); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String authoritySafePath(java.lang.String,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void logOperationLocked(int,java.lang.String); }
-keepclassmembers class okhttp3.CipherSuite { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ScrollBarDrawable { void <init>(); }
-keepclassmembers class okio.Timeout { void <clinit>(); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { void initDecoder(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void addBackStackState(android.support.v4.app.BackStackRecord); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void throwException(java.lang.RuntimeException); }
-keepclassmembers class android.view.textservice.TextInfo { void <clinit>(); }
-keepclassmembers class okio.Timeout { long deadlineNanoTime(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void addFragment(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class java.lang.RealToString { void <init>(); }
-keepclassmembers class android.support.v7.preference.Preference$BaseSavedState { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void attachController(android.support.v4.app.FragmentHostCallback,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration,int); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void attachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.widget.LinearLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.ScrollBarDrawable { void <clinit>(); }
-keepclassmembers class java.lang.Long { java.lang.NumberFormatException invalidLong(java.lang.String); }
-keepclassmembers class android.graphics.Path { void <init>(android.graphics.Path); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$1$2 { void onClick(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void assertNotInLayoutOrScroll(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.app.FragmentTransaction beginTransaction(); }
-keepclassmembers class okhttp3.internal.Util { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void detachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.database.AbstractWindowedCursor { void checkPosition(); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayed(int,java.lang.Runnable,java.lang.Object,long); }
-keepclassmembers class android.view.Choreographer { void postFrameCallbackDelayed(android.view.Choreographer$FrameCallback,long); }
-keepclassmembers class android.view.Choreographer { void removeFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class android.database.AbstractWindowedCursor { void clearOrCreateWindow(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void consumePendingUpdateOperations(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplN { android.view.Window$Callback wrapWindowCallback(android.view.Window$Callback); }
-keepclassmembers class android.view.Choreographer { long getFrameTimeNanos(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayout(); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String hostHeader(okhttp3.HttpUrl,boolean); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void <clinit>(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void cd(); }
-keepclassmembers class okhttp3.internal.Util { java.util.List immutableList(java.util.List); }
-keepclassmembers class android.graphics.Path { void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord obtainCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.Path { void addRoundRect(float,float,float,float,float[],android.graphics.Path$Direction); }
-keepclassmembers class okhttp3.internal.Util { boolean isAndroidGetsocknameError(java.lang.AssertionError); }
-keepclassmembers class android.view.Choreographer { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { void <init>(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void connectInternal(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void getFile(); }
-keepclassmembers class android.support.design.widget.SnackbarManager { void <init>(); }
-keepclassmembers class android.support.design.widget.SnackbarManager { android.support.design.widget.SnackbarManager getInstance(); }
-keepclassmembers class com.android.i18n.phonenumbers.CountryCodeToRegionCodeMap { java.util.Map getCountryCodeToRegionCodeMap(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void login(); }
-keepclassmembers class android.graphics.Path { void <clinit>(); }
-keepclassmembers class okhttp3.internal.Util { java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean); }
-keepclassmembers class android.provider.Settings$Secure { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.provider.Settings$Secure { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class android.support.design.widget.SnackbarManager { void show(int,android.support.design.widget.SnackbarManager$Callback); }
-keepclassmembers class android.text.TextUtils { java.lang.String join(java.lang.CharSequence,java.lang.Iterable); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void setType(); }
-keepclassmembers class android.provider.Settings$Secure { boolean isLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class okhttp3.internal.publicsuffix.PublicSuffixDatabase { void <init>(); }
-keepclassmembers class android.app.Notification$InboxStyle { void <init>(android.app.Notification$Builder); }
-keepclassmembers class okhttp3.internal.publicsuffix.PublicSuffixDatabase { void <clinit>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void enqueueAction(android.support.v4.app.FragmentManagerImpl$OpGenerator,boolean); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence); }
-keepclassmembers class android.provider.Settings$Secure { int getLocationModeForUser(android.content.ContentResolver,int); }
-keepclassmembers class org.acra.collector.MemoryInfoCollector$1 { void <clinit>(); }
-keepclassmembers class android.provider.Settings$Secure { void <clinit>(); }
-keepclassmembers class okhttp3.internal.publicsuffix.PublicSuffixDatabase { void readTheList(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureContentInsets(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void ensureLogoView(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void freeBackStackIndex(int); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$CheckForAppUpdates { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.animation.PathInterpolator { void parseInterpolatorFromTypeArray(android.content.res.TypedArray); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void hideFragment(android.support.v4.app.Fragment); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$CheckForAppUpdates { void onPostExecute(java.lang.Void); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult { void dispatchUpdatesTo(android.support.v7.widget.RecyclerView$Adapter); }
-keepclassmembers class android.view.animation.PathInterpolator { void initQuad(float,float); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.Toolbar$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void makeInactive(android.support.v4.app.Fragment); }
-keepclassmembers class java.util.AbstractCollection { java.util.ArrayList toArrayList(); }
-keepclassmembers class android.view.animation.PathInterpolator { void initCubic(float,float,float,float); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(int,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(byte[]); }
-keepclassmembers class android.database.CursorWindow { void recordNewWindow(int,long); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.support.v7.widget.DecorToolbar getWrapper(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$18$1 { void run(); }
-keepclassmembers class android.database.CursorWindow { void <clinit>(); }
-keepclassmembers class android.database.CursorWindow { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void fixDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.BaseBundle { void <init>(java.lang.ClassLoader,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.BaseBundle); }
-keepclassmembers class android.os.BaseBundle { void unparcel(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.text.TextUtils { void <clinit>(); }
-keepclassmembers class android.app.Dialog$ListenersHandler { void <init>(android.app.Dialog); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] ipStrToBytes(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate { android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.String ipBytesToStr(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <clinit>(); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException); }
-keepclassmembers class java.util.Properties { void load(java.io.InputStream); }
-keepclassmembers class android.app.Notification$Builder { void <init>(android.content.Context); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void wtf(java.lang.String,java.lang.Throwable,boolean); }
-keepclassmembers class sun.misc.Unsafe { sun.misc.Unsafe getUnsafe(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase$FilteredType { void <clinit>(); }
-keepclassmembers class android.widget.AbsSeekBar { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AbsSeekBar { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class sun.misc.Unsafe { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void scrollBy(int,int); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.Runnable); }
-keepclassmembers class org.acra.collector.SharedPreferencesCollector$1 { void <clinit>(); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { void <init>(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.Runnable,java.lang.String); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setPopupTheme(int); }
-keepclassmembers class android.database.sqlite.SQLiteOpenHelper { void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { void <init>(okhttp3.OkHttpClient); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.graphics.Point { void <clinit>(); }
-keepclassmembers class java.util.zip.ZipFile { void checkNotClosed(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setTitle(java.lang.CharSequence); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient build(); }
-keepclassmembers class java.util.zip.ZipFile { java.util.Enumeration entries(); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.drawable.Drawable getProfileBadgeDrawable(); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.Bitmap getProfileBadge(); }
-keepclassmembers class android.support.v4.util.ArraySet { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteOpenHelper { android.database.sqlite.SQLiteDatabase getDatabaseLocked(boolean); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setLayoutFrozen(boolean); }
-keepclassmembers class android.app.Notification$Builder { void resetStandardTemplate(android.widget.RemoteViews); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { void initDecoder(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setLayoutManager(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class java.util.zip.ZipFile { void throwZipException(java.lang.String,int); }
-keepclassmembers class android.database.sqlite.SQLiteOpenHelper { void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$5 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteOpenHelper { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void smoothScrollBy(int,int,android.view.animation.Interpolator); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.lang.Thread { void checkNotStarted(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState mutateConstantState(); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.lang.Thread { void setName(java.lang.String); }
-keepclassmembers class android.util.Xml { org.xmlpull.v1.XmlPullParser newPullParser(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void popBackStack(int,int); }
-keepclassmembers class android.util.Xml { void <clinit>(); }
-keepclassmembers class java.lang.Thread { java.lang.String toString(); }
-keepclassmembers class okhttp3.OkHttpClient { void <clinit>(); }
-keepclassmembers class java.util.WeakHashMap { java.util.WeakHashMap$Entry[] newEntryArray(int); }
-keepclassmembers class java.util.WeakHashMap { void <init>(int); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews generateActionButton(android.app.Notification$Action); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager); }
-keepclassmembers class java.lang.Thread { void setPriority(int); }
-keepclassmembers class java.util.WeakHashMap { java.util.Set entrySet(); }
-keepclassmembers class java.util.WeakHashMap { java.util.Set keySet(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.OkHttpClient$Builder newBuilder(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$10 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Call newCall(okhttp3.Request); }
-keepclassmembers class android.app.Notification$Builder { void applyLargeIconBackground(android.widget.RemoteViews); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void removeFragment(android.support.v4.app.Fragment); }
-keepclassmembers class okhttp3.ResponseBody { okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource); }
-keepclassmembers class java.io.OutputStreamWriter { void <init>(java.io.OutputStream,java.lang.String); }
-keepclassmembers class java.io.PushbackReader { void <init>(java.io.Reader,int); }
-keepclassmembers class android.app.Notification$Builder { void removeLargeIconBackground(android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { void processSmallRightIcon(int,android.widget.RemoteViews); }
-keepclassmembers class java.io.PushbackReader { void checkNotClosed(); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <clinit>(); }
-keepclassmembers class java.io.OutputStreamWriter { void checkStatus(); }
-keepclassmembers class org.acra.collector.ThreadCollector { void <init>(); }
-keepclassmembers class java.util.AbstractList { void add(int,java.lang.Object); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void <clinit>(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map); }
-keepclassmembers class java.util.AbstractList { java.util.Iterator iterator(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <clinit>(); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(int); }
-keepclassmembers class org.acra.collector.ThreadCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class java.util.AbstractList { java.lang.Object remove(int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void addListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy); }
-keepclassmembers class java.util.AbstractList { java.util.List subList(int,int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void addUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy); }
-keepclassmembers class java.util.TreeMap$2 { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer allocate(int); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { void setNameOverridesUnoptimized(android.view.View,java.util.ArrayList,java.util.Map); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { void <init>(int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void start(); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class java.util.TreeMap$Relation { void <clinit>(); }
-keepclassmembers class android.app.Notification$Builder { void setBuilderContentView(android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerCompat$LegacyImpl { android.view.Display[] getDisplays(); }
-keepclassmembers class android.app.Notification$Builder { void setBuilderBigContentView(android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.app.Notification$Builder { void setBuilderHeadsUpContentView(android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class android.support.v4.view.ViewParentCompatLollipop { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByPositiveInt(java.math.BigInteger,int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setRemoteInputHistory(java.lang.CharSequence[]); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void badIndex(int); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class java.io.ObjectStreamClass$5 { java.util.WeakHashMap initialValue(); }
-keepclassmembers class android.view.AbsSavedState { void <clinit>(); }
-keepclassmembers class okhttp3.Handshake { okhttp3.Handshake get(javax.net.ssl.SSLSession); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v4.text.BidiFormatter { void <clinit>(); }
-keepclassmembers class android.support.v4.text.BidiFormatter { int getEntryDir(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.text.BidiFormatter { android.support.v4.text.BidiFormatter getInstance(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void <init>(int); }
-keepclassmembers class android.text.util.Linkify { void applyLink(java.lang.String,int,int,android.text.Spannable); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceFirst(java.lang.String); }
-keepclassmembers class android.support.v4.text.BidiFormatter { int getExitDir(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.text.BidiFormatter { java.lang.String markAfter(java.lang.CharSequence,android.support.v4.text.TextDirectionHeuristicCompat); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceAll(java.lang.String); }
-keepclassmembers class android.support.v4.text.BidiFormatter { java.lang.String markBefore(java.lang.CharSequence,android.support.v4.text.TextDirectionHeuristicCompat); }
-keepclassmembers class javax.net.SocketFactory { javax.net.SocketFactory getDefault(); }
-keepclassmembers class java.util.regex.Matcher { boolean find(int); }
-keepclassmembers class android.text.util.Linkify { void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class java.util.regex.Matcher { void ensureMatch(); }
-keepclassmembers class ar.rulosoft.mimanganu.DownloadsFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { java.lang.Object next(); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float,int); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float,java.lang.Object); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float,float); }
-keepclassmembers class org.acra.dialog.BaseCrashReportDialog { void cancelReports(); }
-keepclassmembers class com.android.internal.app.AlertController { boolean shouldCenterSingleButton(android.content.Context); }
-keepclassmembers class android.text.util.Linkify { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment$PerformSearchTask { void <init>(ar.rulosoft.mimanganu.SearchResultsFragment); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment); }
-keepclassmembers class org.acra.dialog.BaseCrashReportDialog { void sendCrash(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController { void <init>(android.content.Context,android.content.DialogInterface,android.view.Window); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment$PerformSearchTask { java.util.ArrayList doInBackground(java.lang.Void[]); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void saveFragmentViewState(android.support.v4.app.Fragment); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { void defaultWriteObject(); }
-keepclassmembers class com.android.internal.app.AlertController { void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message); }
-keepclassmembers class com.android.internal.app.AlertController { int getIconAttributeResId(int); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { void checkWritePrimitiveTypes(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.AccessibilityManager getInstance(android.content.Context); }
-keepclassmembers class java.io.ObjectOutputStream { void resetSeenObjects(); }
-keepclassmembers class com.android.internal.app.AlertController { void setupDecor(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { java.lang.String toString(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <init>(android.content.Context,android.view.accessibility.IAccessibilityManager,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void showFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[]); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment { void onDisplayPreferenceDialog(android.support.v7.preference.Preference); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void tryConnectToServiceLocked(); }
-keepclassmembers class java.util.TimeZone { java.lang.Object clone(); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { float getCurrentAnimatorScale(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { void <init>(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { android.support.v7.widget.OrientationHelper createHorizontalHelper(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { android.support.v7.widget.OrientationHelper createVerticalHelper(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { android.support.v7.widget.OrientationHelper createOrientationHelper(android.support.v7.widget.RecyclerView$LayoutManager,int); }
-keepclassmembers class android.animation.ObjectAnimator { void setIntValues(int[]); }
-keepclassmembers class okio.AsyncTimeout$2 { java.lang.String toString(); }
-keepclassmembers class java.util.TimeZone { void setID(java.lang.String); }
-keepclassmembers class android.animation.ObjectAnimator { void setFloatValues(float[]); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[]); }
-keepclassmembers class java.util.TimeZone { void <clinit>(); }
-keepclassmembers class android.widget.CheckBox { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { boolean hasNavigationBar(); }
-keepclassmembers class libcore.net.url.FileHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class android.text.DynamicLayout { void <clinit>(); }
-keepclassmembers class libcore.net.url.FileHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.widget.CheckBox { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.animation.ObjectAnimator { void setTarget(java.lang.Object); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharArrayBuffer copy(java.nio.CharArrayBuffer,int,boolean); }
-keepclassmembers class java.util.concurrent.CountDownLatch { void <init>(int); }
-keepclassmembers class java.util.TreeMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class org.acra.legacy.ReportMigrator { java.io.File[] getCrashReportFiles(); }
-keepclassmembers class libcore.icu.NativeNormalizer { int toUNormalizationMode(java.text.Normalizer$Form); }
-keepclassmembers class android.text.style.LocaleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class org.acra.collector.ConfigurationCollector { void <init>(android.content.Context,org.acra.model.Element); }
-keepclassmembers class org.acra.collector.ConfigurationCollector { org.acra.model.Element collectConfiguration(android.content.Context); }
-keepclassmembers class org.acra.legacy.ReportMigrator { void <init>(android.content.Context); }
-keepclassmembers class org.acra.builder.LastActivityManager$1 { void onActivityCreated(android.app.Activity,android.os.Bundle); }
-keepclassmembers class org.acra.builder.LastActivityManager$1 { void onActivityResumed(android.app.Activity); }
-keepclassmembers class org.acra.builder.LastActivityManager$1 { void onActivityDestroyed(android.app.Activity); }
-keepclassmembers class org.acra.builder.LastActivityManager$1 { void onActivityPaused(android.app.Activity); }
-keepclassmembers class org.acra.builder.LastActivityManager$1 { void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page$SetImageTask { void onPostExecute(android.graphics.Bitmap); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { android.widget.ListAdapter getAdapter(); }
-keepclassmembers class org.acra.builder.LastActivityManager$1 { void onActivityStarted(android.app.Activity); }
-keepclassmembers class org.acra.builder.LastActivityManager$1 { void onActivityStopped(android.app.Activity); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObjectOverride(java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.util.MapCollections$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.ArrayList { void <init>(java.util.Collection); }
-keepclassmembers class java.util.ArrayList { void <init>(int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.AnimationDrawable$AnimationState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class org.acra.collector.ConfigurationCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl { void setWindowLayoutType(android.widget.PopupWindow,int); }
-keepclassmembers class java.util.ArrayList { java.lang.IndexOutOfBoundsException throwIndexOutOfBoundsException(int,int); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.acra.collector.StacktraceCollector$1 { void <clinit>(); }
-keepclassmembers class android.support.v7.app.AlertController$ButtonHandler { void <init>(android.content.DialogInterface); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void addState(int[],android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.ArrayList { java.util.Iterator iterator(); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleEnter(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundEnter(boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String toString(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompatApi21 { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.HtmlUnescape { void <clinit>(); }
-keepclassmembers class android.widget.CompoundButton { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateMaskShaderIfNeeded(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompatApi21 { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class android.widget.CompoundButton { void <clinit>(); }
-keepclassmembers class org.acra.collector.CustomDataCollector { void <init>(java.util.Map); }
-keepclassmembers class android.widget.CompoundButton { android.graphics.drawable.Drawable getButtonDrawable(); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String region(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void checkRange(java.lang.String,int,int); }
-keepclassmembers class android.net.Uri$PathPart { java.lang.String getEncoded(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void <clinit>(); }
-keepclassmembers class org.acra.collector.CustomDataCollector { org.acra.model.Element createCustomInfoElement(java.util.Map); }
-keepclassmembers class java.nio.Buffer { void <init>(int,int,long); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Paint getRipplePaint(); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart from(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.RippleDrawable$RippleState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart makeAbsolute(android.net.Uri$PathPart); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources); }
-keepclassmembers class android.net.Uri$PathPart { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void <clinit>(); }
-keepclassmembers class android.support.v4.app.SupportActivity { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SortAndLoadChapters { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class android.text.SpannableStringBuilder { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void setColor(boolean,int,int); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer limit(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void <init>(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.String toString(); }
-keepclassmembers class org.acra.util.ProcessFinisher$1 { void run(); }
-keepclassmembers class android.view.ContextThemeWrapper { void applyOverrideConfiguration(android.content.res.Configuration); }
-keepclassmembers class java.nio.Buffer { void checkIndex(int); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.String toString(); }
-keepclassmembers class java.nio.Buffer { void positionImpl(int); }
-keepclassmembers class android.text.SpannableStringBuilder { void <clinit>(); }
-keepclassmembers class android.view.ContextThemeWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class libcore.icu.NativeIDN { java.lang.String convert(java.lang.String,int,boolean); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void <clinit>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.util.Iterator iterator(); }
-keepclassmembers class android.util.MapCollections { java.util.Set getKeySet(); }
-keepclassmembers class android.util.MapCollections { java.util.Collection getValues(); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class okhttp3.Response { okhttp3.Response$Builder newBuilder(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void <clinit>(); }
-keepclassmembers class okhttp3.Response { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void setTextAppearance(int); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet { java.util.Iterator iterator(); }
-keepclassmembers class java.io.StringWriter { void <init>(); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatKK { void setUpdateListener(android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener); }
-keepclassmembers class java.net.URLConnection { void <init>(java.net.URL); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { android.database.sqlite.SQLiteConnection open(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String canonicalizeSyncMode(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void bindString(int,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setJournalMode(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setSyncMode(java.lang.String); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <init>(java.util.List,byte[]); }
-keepclassmembers class java.net.URLConnection { java.net.FileNameMap getFileNameMap(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString { void <clinit>(); }
-keepclassmembers class android.view.LayoutInflater { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { okhttp3.Address createAddress(okhttp3.HttpUrl); }
-keepclassmembers class android.os.storage.IMountService$Stub$Proxy { java.lang.String getVolumeState(java.lang.String); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.graphics.FastBitmapDrawable { void <init>(android.graphics.Bitmap); }
-keepclassmembers class org.acra.file.Directory { void <clinit>(); }
-keepclassmembers class android.content.res.TypedArray { int length(); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { okhttp3.Request followUpRequest(okhttp3.Response); }
-keepclassmembers class org.acra.util.IOUtils { void <clinit>(); }
-keepclassmembers class android.content.res.TypedArray { int getIndexCount(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void execute(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.Resources getResources(); }
-keepclassmembers class org.acra.util.IOUtils { void deleteReport(java.io.File); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseFormatToken(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long executeForLong(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class org.acra.util.IOUtils { java.lang.String streamToString(java.io.InputStream,com.android.internal.util.Predicate,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.UnknownFormatConversionException unknownFormatConversionException(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$14 { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerNative { void <clinit>(); }
-keepclassmembers class java.net.URLConnection { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String executeForString(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { int executeForChangedRowCount(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class org.acra.collector.SimpleValuesCollector { void <init>(android.content.Context); }
-keepclassmembers class org.acra.collector.SimpleValuesCollector { java.lang.String getApplicationFilePath(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.acra.collector.SimpleValuesCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.util.Log { int i(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.util.SizeF { void <init>(float,float); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options); }
-keepclassmembers class org.acra.collector.TimeCollector$1 { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil { void <clinit>(); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.util.SizeF { java.lang.String toString(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void postDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.util.Log { int wtf(int,java.lang.String,java.lang.String,java.lang.Throwable,boolean,boolean); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil { void checkAppUpdates(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil { android.content.Intent getUpdateIntent(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil { void download(android.support.v7.app.AppCompatActivity,java.lang.String,android.widget.ProgressBar,android.widget.TextView,android.content.DialogInterface); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil { void generatUpdateDialog(android.content.Context); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.util.Log { java.lang.String getStackTraceString(java.lang.Throwable); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getPositionDescription(); }
-keepclassmembers class android.content.res.TypedArray { void recycle(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStreamInternal(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.util.Log { void <clinit>(); }
-keepclassmembers class org.acra.builder.ReportExecutor$3 { void run(); }
-keepclassmembers class android.database.AbstractCursor { void <init>(); }
-keepclassmembers class android.util.LogWriter { void <init>(int,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void throwIfStatementForbidden(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.widget.FastScroller { void <init>(android.widget.AbsListView,int); }
-keepclassmembers class android.content.res.TypedArray { void <init>(android.content.res.Resources,int[],int[],int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { java.io.InputStream loadMetadata(java.lang.String); }
-keepclassmembers class android.database.AbstractCursor { void checkPosition(); }
-keepclassmembers class java.nio.charset.MalformedInputException { java.lang.String getMessage(); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String toString(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { android.database.sqlite.SQLiteConnection$PreparedStatement obtainPreparedStatement(java.lang.String,long,int,int,boolean); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.reflect.AccessibleObject getEnclosingMethodOrConstructor(java.lang.Class); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class getEnclosingClass(java.lang.Class); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String trimSqlForDisplay(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void <clinit>(); }
-keepclassmembers class java.util.TreeMap { java.util.Set keySet(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void startHandlingViolationException(dalvik.system.BlockGuard$BlockGuardPolicyException); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isAnonymousClass(java.lang.Class); }
-keepclassmembers class libcore.reflect.AnnotationAccess { int getInnerClassFlags(java.lang.Class,int); }
-keepclassmembers class android.widget.FastScroller { android.widget.TextView createPreviewTextView(android.content.Context); }
-keepclassmembers class java.util.TreeMap { java.util.Set entrySet(); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException indexAndLength(int); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException failedBoundsCheck(int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void startUpdate(); }
-keepclassmembers class java.util.TreeMap { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <clinit>(); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { java.lang.String toString(); }
-keepclassmembers class android.os.Environment { void initForCurrentUser(); }
-keepclassmembers class android.os.Environment { java.io.File getLegacyExternalStorageDirectory(); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void <clinit>(); }
-keepclassmembers class android.os.Environment { java.lang.String getExternalStorageState(java.io.File); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void <clinit>(); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.nio.charset.Charset); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { boolean onBackPressed(); }
-keepclassmembers class java.lang.reflect.Field { void <init>(java.lang.reflect.ArtField); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void onClick(android.view.View); }
-keepclassmembers class java.lang.String { int indexOfSupplementary(int,int); }
-keepclassmembers class android.os.Environment { java.lang.String getCanonicalPathOrNull(java.lang.String); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy { boolean isCacheable(okhttp3.Response,okhttp3.Request); }
-keepclassmembers class android.os.Environment { void throwIfUserRequired(); }
-keepclassmembers class android.os.Environment { java.io.File getDirectory(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.MemoryMappedFile mmapRO(java.lang.String); }
-keepclassmembers class java.lang.reflect.Field { boolean isAnnotationPresent(java.lang.Class); }
-keepclassmembers class android.widget.FastScroller { void transitionToDragging(); }
-keepclassmembers class android.widget.FastScroller { void transitionToVisible(); }
-keepclassmembers class java.lang.String { int lastIndexOfSupplementary(int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.LinkedList { void <init>(); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler); }
-keepclassmembers class java.lang.reflect.Field { void <clinit>(); }
-keepclassmembers class android.os.Environment { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.String toString(); }
-keepclassmembers class android.app.Notification$BigTextStyle { void addExtras(android.os.Bundle); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List getMethods(java.lang.Class[]); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate { android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.lang.String { char[] toCharArray(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void <clinit>(); }
-keepclassmembers class android.view.GLES20Canvas { float[] getLineStorage(); }
-keepclassmembers class java.lang.reflect.Proxy { void <clinit>(); }
-keepclassmembers class libcore.io.DeleteOnExit { libcore.io.DeleteOnExit getInstance(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[]); }
-keepclassmembers class android.media.AudioAttributes$Builder { void <init>(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[],int,int); }
-keepclassmembers class libcore.io.DeleteOnExit { void <init>(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char); }
-keepclassmembers class okhttp3.Address { void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { java.lang.String getShortcutLabel(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(java.lang.Object); }
-keepclassmembers class java.lang.String { boolean contains(java.lang.CharSequence); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(boolean); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateScaleX(android.view.View,float); }
-keepclassmembers class java.util.LinkedList { java.util.ListIterator listIterator(int); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateBounds(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateAlpha(android.view.View,float); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean invoke(); }
-keepclassmembers class java.lang.Float { java.lang.Float valueOf(float); }
-keepclassmembers class okhttp3.Address { java.lang.String toString(); }
-keepclassmembers class java.lang.Float { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setActionProvider(android.view.ActionProvider); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$LoadDetailsTask { void <init>(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void <clinit>(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.support.v4.internal.view.SupportMenuItem setActionView(int); }
-keepclassmembers class android.graphics.Canvas { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void setBitmap(android.graphics.Bitmap); }
-keepclassmembers class libcore.io.IoUtils$FileReader { java.lang.String toString(java.nio.charset.Charset); }
-keepclassmembers class android.support.design.widget.ViewUtils$1 { android.support.design.widget.ValueAnimatorCompat createAnimator(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <clinit>(); }
-keepclassmembers class libcore.net.MimeUtils { java.io.InputStream getContentTypesPropertiesStream(); }
-keepclassmembers class android.graphics.Canvas { void <init>(android.graphics.Bitmap); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.support.v4.internal.view.SupportMenuItem setSupportActionProvider(android.support.v4.view.ActionProvider); }
-keepclassmembers class android.support.design.widget.ThemeUtils { void <clinit>(); }
-keepclassmembers class android.support.design.widget.ThemeUtils { void checkAppCompatTheme(android.content.Context); }
-keepclassmembers class libcore.net.MimeUtils { void <clinit>(); }
-keepclassmembers class org.acra.ACRA { void <clinit>(); }
-keepclassmembers class android.view.ViewOutlineProvider { void <clinit>(); }
-keepclassmembers class org.acra.ACRA { java.lang.String getCurrentProcessName(); }
-keepclassmembers class org.acra.ACRA { org.acra.ErrorReporter getErrorReporter(); }
-keepclassmembers class android.graphics.Canvas { void drawOval(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$HPage { ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment getNewSegment(); }
-keepclassmembers class android.graphics.Canvas { void throwIfCannotDraw(android.graphics.Bitmap); }
-keepclassmembers class org.acra.ACRA { boolean isACRASenderServiceProcess(); }
-keepclassmembers class org.acra.ACRA { void init(android.app.Application,org.acra.config.ACRAConfiguration,boolean); }
-keepclassmembers class org.acra.ACRA { boolean shouldDisableACRA(android.content.SharedPreferences); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLSchema { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { void <init>(int,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType { void <clinit>(); }
-keepclassmembers class org.acra.collector.PackageManagerCollector { void <init>(org.acra.util.PackageManagerWrapper); }
-keepclassmembers class org.acra.collector.PackageManagerCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class org.acra.ACRA { void init(android.app.Application,org.acra.config.ConfigurationBuilder,boolean); }
-keepclassmembers class java.io.File { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat { void <clinit>(); }
-keepclassmembers class java.io.File { java.io.File getAbsoluteFile(); }
-keepclassmembers class java.io.File { java.lang.String getAbsolutePath(); }
-keepclassmembers class java.io.File { java.io.File getCanonicalFile(); }
-keepclassmembers class java.io.File { java.io.File getParentFile(); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String toString(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { fr.castorflex.android.verticalviewpager.VerticalViewPager$ItemInfo addNewItem(int,int); }
-keepclassmembers class dalvik.system.DexPathList { java.util.ArrayList splitPaths(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexFile loadDexFile(java.io.File,java.io.File); }
-keepclassmembers class java.io.File { java.net.URL toURL(); }
-keepclassmembers class java.io.File { java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File); }
-keepclassmembers class java.io.File { java.net.URI toURI(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$16 { boolean onPreferenceChange(android.support.v7.preference.Preference,java.lang.Object); }
-keepclassmembers class java.lang.CaseMapper$1 { libcore.icu.Transliterator initialValue(); }
-keepclassmembers class java.io.File { void <clinit>(); }
-keepclassmembers class java.util.jar.Attributes$Name { void <clinit>(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token); }
-keepclassmembers class android.graphics.FontListParser$Config { void <init>(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress makeInetAddress(byte[],java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void attachBaseContext(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { void onPostExecute(java.lang.Integer); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 { void requestExtraBinder(); }
-keepclassmembers class java.net.InetAddress { java.lang.String toString(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress parseNumericAddress(java.lang.String); }
-keepclassmembers class java.math.BigInteger { void <init>(int,long); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forNameUEE(java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] loopbackAddresses(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { java.util.jar.JarFile openJarFile(); }
-keepclassmembers class java.net.InetAddress { java.net.UnknownHostException badAddressLength(byte[]); }
-keepclassmembers class java.lang.StringBuffer { void <clinit>(); }
-keepclassmembers class java.math.BigInteger { void <init>(java.lang.String); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset getDefaultCharset(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void findJarEntry(); }
-keepclassmembers class java.nio.charset.Charset { void <clinit>(); }
-keepclassmembers class java.net.InetAddress { void <clinit>(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class android.app.Fragment { void <clinit>(); }
-keepclassmembers class java.math.BigInteger { void <init>(byte[]); }
-keepclassmembers class libcore.util.EmptyArray { void <clinit>(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInt getBigInt(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState { android.support.v7.view.menu.MenuView getListMenuView(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void <clinit>(); }
-keepclassmembers class java.math.BigInteger { void prepareJavaRepresentation(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState { void setStyle(android.content.Context); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger abs(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger add(java.math.BigInteger); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeft(int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { void <init>(android.content.Context); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger multiply(java.math.BigInteger); }
-keepclassmembers class java.net.JarURLConnection { java.lang.String decode(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <clinit>(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.util.HashMap getFormParamsFromSource(java.lang.String); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger pow(int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger divide(java.math.BigInteger); }
-keepclassmembers class android.support.v7.app.AlertDialog { int resolveDialogTheme(android.content.Context,int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger[] divideAndRemainder(java.math.BigInteger); }
-keepclassmembers class android.support.v7.app.AlertDialog { void <init>(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { void flushParameter(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { void addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.lang.String formatResponseBody(okhttp3.ResponseBody); }
-keepclassmembers class android.widget.TextView { android.graphics.drawable.Drawable[] getCompoundDrawables(); }
-keepclassmembers class java.math.BigInteger { void <clinit>(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { void addPost(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablePadding(int); }
-keepclassmembers class java.util.Date { java.lang.String toString(); }
-keepclassmembers class android.content.res.Resources { void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder); }
-keepclassmembers class java.util.Date { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { android.content.res.Resources getSystem(); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence getText(int); }
-keepclassmembers class android.content.res.Resources { java.lang.String getString(int); }
-keepclassmembers class android.widget.TextView { void setTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.TextView { android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class android.content.res.Resources { java.lang.String[] getStringArray(int); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.lang.String getWithTimeout(java.lang.String); }
-keepclassmembers class android.content.res.Resources { int getDimensionPixelSize(int); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$AbstractSource { void <init>(okhttp3.internal.http1.Http1Codec); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$AbstractSource { void endOfInput(boolean); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.ExecutorService newFixedThreadPool(int); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { void setCookieJar(okhttp3.CookieJar); }
-keepclassmembers class android.content.res.Resources { int getColor(int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.ThreadFactory defaultThreadFactory(); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.Callable callable(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.content.res.Resources { boolean getBoolean(int); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { int getInteger(int); }
-keepclassmembers class java.util.logging.Logger { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.logging.Logger { java.util.ResourceBundle loadResourceBundle(java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getLayout(int); }
-keepclassmembers class android.content.res.Resources { float getFloat(int); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getXml(int); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getAnimation(int); }
-keepclassmembers class android.util.PathParser { android.graphics.Path createPathFromPathData(java.lang.String); }
-keepclassmembers class android.widget.TextView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.media.session.MediaController$CallbackStub { void <init>(android.media.session.MediaController); }
-keepclassmembers class java.util.logging.Logger { void initResourceBundle(java.lang.String); }
-keepclassmembers class java.util.logging.Logger { void setParent(java.util.logging.Logger); }
-keepclassmembers class okhttp3.EventListener { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { void getValue(int,android.util.TypedValue,boolean); }
-keepclassmembers class okhttp3.EventListener { okhttp3.EventListener$Factory factory(okhttp3.EventListener); }
-keepclassmembers class android.util.PathParser { void addNode(java.util.ArrayList,char,float[]); }
-keepclassmembers class android.content.res.Resources { android.content.res.Resources$Theme newTheme(); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.media.MediaCodecInfo { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { java.lang.String adjustLanguageTag(java.lang.String); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { okhttp3.internal.platform.Jdk9Platform buildIfSupported(); }
-keepclassmembers class android.util.PathParser { void <clinit>(); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplBase { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceName(int); }
-keepclassmembers class android.content.res.Resources { int getIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourcePackageName(int); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceEntryName(int); }
-keepclassmembers class android.content.res.Resources { java.io.InputStream openRawResource(int,android.util.TypedValue); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceTypeName(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle); }
-keepclassmembers class java.util.logging.Logger { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.text.TextLine { void <init>(); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String); }
-keepclassmembers class android.os.SystemProperties { int getInt(java.lang.String,int); }
-keepclassmembers class android.os.SystemProperties { long getLong(java.lang.String,long); }
-keepclassmembers class android.os.SystemProperties { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class android.widget.TextView { void onEditorAction(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { java.util.ArrayList getMangasSource(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.widget.TextView { void setInputExtras(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { java.util.ArrayList getMangasFiltered(int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable loadDrawableForCookie(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class java.nio.charset.UnmappableCharacterException { java.lang.String getMessage(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { java.util.ArrayList getMangasFromSource(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { java.util.ArrayList getMangas(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { void <clinit>(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.view.ViewRootImpl { void <clinit>(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean); }
-keepclassmembers class android.database.DatabaseUtils { int getSqlStatementType(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.content.res.Resources { void <clinit>(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$4 { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { void <init>(); }
-keepclassmembers class libcore.util.ZoneInfoDB { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.String limit(int,int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper$1 { void <init>(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { void onStatusChanged(int,ar.rulosoft.mimanganu.services.ChapterDownload); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { void onChapterRemoved(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { void onChapterAdded(boolean,ar.rulosoft.mimanganu.services.ChapterDownload); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { void onChaptersRemoved(java.util.ArrayList); }
-keepclassmembers class android.widget.ImageButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class java.security.cert.X509Certificate { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void <clinit>(); }
-keepclassmembers class android.text.TextLine { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { java.lang.String toString(); }
-keepclassmembers class android.widget.ImageButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.math.Conversion { void <clinit>(); }
-keepclassmembers class org.acra.util.ProcessFinisher { void finishLastActivity(java.lang.Thread); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void <init>(); }
-keepclassmembers class android.util.Patterns { void <clinit>(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void addListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy); }
-keepclassmembers class android.app.AlertDialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void addUpdateListener(android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy); }
-keepclassmembers class android.app.AlertDialog { int resolveDialogTheme(android.content.Context,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch next(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void setFloatValues(float,float); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <clinit>(); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(java.lang.Throwable); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <clinit>(); }
-keepclassmembers class android.graphics.Typeface { java.io.File getSystemFontConfigLocation(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$1 { void <clinit>(); }
-keepclassmembers class rapid.decoder.BitmapDecoder$Region$1 { rapid.decoder.BitmapDecoder$Region newInstance(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask$1 { void run(); }
-keepclassmembers class java.util.ArrayDeque { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Paths { void <clinit>(); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object removeFirst(); }
-keepclassmembers class java.util.ArrayDeque { java.util.Iterator iterator(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Paths { java.lang.String generateBasePath(ar.rulosoft.mimanganu.servers.ServerBase,ar.rulosoft.mimanganu.componentes.Manga,android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Paths { java.lang.String generateBasePath(ar.rulosoft.mimanganu.servers.ServerBase,ar.rulosoft.mimanganu.componentes.Manga,ar.rulosoft.mimanganu.componentes.Chapter,android.content.Context); }
-keepclassmembers class java.security.Signature { java.security.Signature getInstance(java.lang.String); }
-keepclassmembers class android.util.Pair { android.util.Pair create(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.acra.collector.ReflectionCollector$1 { void <clinit>(); }
-keepclassmembers class java.util.Formatter { void <init>(java.lang.Appendable,java.util.Locale); }
-keepclassmembers class java.security.Signature { boolean verify(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <clinit>(); }
-keepclassmembers class java.security.Signature { void <clinit>(); }
-keepclassmembers class java.security.Signature { void update(byte[]); }
-keepclassmembers class java.util.Formatter { void checkNotClosed(); }
-keepclassmembers class java.util.Formatter { java.lang.Object getArgument(java.lang.Object[],int,java.util.Formatter$FormatSpecifierParser,java.lang.Object,boolean); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.preference.R$styleable { void <clinit>(); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.util.Formatter { java.util.IllegalFormatConversionException badArgumentType(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromBoolean(); }
-keepclassmembers class dalvik.system.DexFile { dalvik.system.DexFile loadDex(java.lang.String,java.lang.String,int); }
-keepclassmembers class dalvik.system.DexFile { long openDexFile(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromHashCode(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { void setPaths(java.util.List); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromPercent(); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.URISyntaxException { java.lang.String getMessage(); }
-keepclassmembers class java.util.zip.Inflater { int inflate(byte[],int,int); }
-keepclassmembers class java.util.zip.Inflater { void <init>(boolean); }
-keepclassmembers class java.util.Formatter { void <clinit>(); }
-keepclassmembers class org.json.JSONStringer$Scope { void <clinit>(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromNull(); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { void <init>(android.content.Context); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer allocate(int); }
-keepclassmembers class android.widget.TextView { boolean shouldSpeakPasswordsForAccessibility(); }
-keepclassmembers class android.widget.TextView { void updateTextServicesLocaleAsync(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.TextView { void createEditorIfNeeded(); }
-keepclassmembers class android.widget.TextView { void setTextAppearance(int); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop$DrawableWrapperStateLollipop { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.support.v4.view.ViewPager { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void <clinit>(); }
-keepclassmembers class android.widget.SeekBar { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.SeekBar { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.support.v4.view.KeyEventCompat { void <clinit>(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean isDecorView(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void addOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener); }
-keepclassmembers class android.support.v4.view.ViewPager { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v4.view.ViewPager { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.text.StringCharacterIterator { char setIndex(int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { void <clinit>(); }
-keepclassmembers class android.support.v4.view.ViewPager { void setChildrenDrawingOrderEnabledCompat(boolean); }
-keepclassmembers class org.acra.builder.LastActivityManager { void <init>(android.app.Application); }
-keepclassmembers class okio.AsyncTimeout$1 { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.CancelIntentReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInput[],boolean); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { java.net.Socket deallocate(boolean,boolean,boolean); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void <clinit>(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void <init>(okhttp3.ConnectionPool,okhttp3.Address,java.lang.Object); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader$ImageGet { void run(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void acquire(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.http.HttpCodec newStream(okhttp3.OkHttpClient,boolean); }
-keepclassmembers class org.acra.collector.SharedPreferencesCollector { void <init>(android.content.Context,org.acra.config.ACRAConfiguration,android.content.SharedPreferences); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(java.lang.String); }
-keepclassmembers class org.acra.collector.SharedPreferencesCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.support.design.widget.BaseTransientBottomBar { void <clinit>(); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <clinit>(); }
-keepclassmembers class org.acra.collector.MemoryInfoCollector { boolean shouldCollect(java.util.Set,org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { boolean hasOverlappingRendering(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class rapid.decoder.FileBitmapLoader { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { boolean connectionFailed(java.io.IOException); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void addBigStyleToBuilderLollipop(android.app.Notification,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void addHeadsUpToBuilderLollipop(android.app.Notification,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter); }
-keepclassmembers class android.widget.RelativeLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void addStyleToBuilderApi24(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AbsListView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <init>(java.lang.String,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.FrameLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.Editor { boolean extractedTextModeWillBeStarted(); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { boolean isCompatTintEnabled(); }
-keepclassmembers class android.widget.LinearLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { boolean isRecoverable(java.io.IOException,boolean); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { boolean recover(java.io.IOException,boolean,okhttp3.Request); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { java.lang.CharSequence getTitleCondensed(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress disallowDeprecatedFormats(java.lang.String,java.net.InetAddress); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView { void setMovementMethod(android.text.method.MovementMethod); }
-keepclassmembers class android.widget.Editor { boolean hasPasswordTransformationMethod(); }
-keepclassmembers class android.widget.TextView { boolean hasPasswordTransformationMethod(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView { boolean hasOverlappingRendering(); }
-keepclassmembers class android.widget.TextView { boolean isTextEditable(); }
-keepclassmembers class android.database.DatabaseUtils { int getTypeOfObject(java.lang.Object); }
-keepclassmembers class android.widget.TextView { boolean textCanBeSelected(); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithmWithProvider(java.security.Key,java.security.Provider$Service); }
-keepclassmembers class android.support.v4.view.ViewPager { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { void <init>(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { boolean shouldWrap(android.content.Context); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.graphics.PointF { void <init>(); }
-keepclassmembers class android.view.animation.LayoutAnimationController$AnimationParameters { void <init>(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$HoneycombMr2Impl { int getSmallestScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class org.acra.sender.HttpSender$Type { void <init>(java.lang.String,int); }
-keepclassmembers class org.acra.sender.HttpSender$Type { void <init>(java.lang.String,int,org.acra.sender.HttpSender$1); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter$1 { void <init>(ar.rulosoft.mimanganu.adapters.ChapterAdapter,ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.widget.TextView { boolean canCut(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { boolean canConstantState(); }
-keepclassmembers class android.graphics.PointF { void set(float,float); }
-keepclassmembers class android.support.v7.util.DiffUtil$Snake { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.widget.TextView$Marquee$3 { void doFrame(long); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class android.widget.TextView$Marquee$3 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$4 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void <init>(android.content.res.Resources); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.XmlResourceParser getAnimation(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getColor(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { boolean getBoolean(int); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <init>(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { ar.rulosoft.mimanganu.componentes.Chapter access$1600(ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$1 { void <init>(android.support.v7.preference.PreferenceGroupAdapter); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getDimensionPixelSize(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$1 { void run(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { ar.rulosoft.mimanganu.componentes.Chapter access$1602(ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { void <init>(java.lang.String,int,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { java.lang.String access$100(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { int access$200(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.util.DisplayMetrics getDisplayMetrics(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.view.animation.Animation { void reset(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { java.util.ArrayList access$300(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { void <init>(java.lang.String,int,java.util.ArrayList,org.apache.harmony.security.fortress.Engine$1); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.animation.Animation { void cancel(); }
-keepclassmembers class android.view.animation.Animation { void detach(); }
-keepclassmembers class android.view.animation.Animation { void initialize(int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { int getInteger(int); }
-keepclassmembers class android.view.animation.Animation { boolean isInitialized(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.XmlResourceParser getLayout(int); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void <init>(int); }
-keepclassmembers class android.view.animation.Animation { void setStartOffset(long); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { void onCancelled(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void start(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { void assignCoordinateFromPadding(); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceEntryName(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { void <init>(android.support.v7.widget.LinearLayoutManager); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceName(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourcePackageName(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { void onPostExecute(java.lang.Void); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getResourceTypeName(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getString(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class android.view.animation.Animation { void setStartTime(long); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.String[] getStringArray(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { boolean checkAnchorChanged(); }
-keepclassmembers class android.view.animation.Animation { void start(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.CharSequence getText(int); }
-keepclassmembers class android.view.animation.Animation { void setRepeatMode(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void acceptNestedScroll(boolean); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.lang.CharSequence[] getTextArray(int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { boolean dependsOn(android.support.design.widget.CoordinatorLayout,android.view.View,android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead { void onProgressUpdate(java.lang.Integer[]); }
-keepclassmembers class android.view.animation.Animation { void setRepeatCount(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void getValue(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.view.animation.Animation { void setFillEnabled(boolean); }
-keepclassmembers class android.view.animation.Animation { void setFillBefore(boolean); }
-keepclassmembers class android.view.animation.Animation { boolean isFillEnabled(); }
-keepclassmembers class android.view.animation.Animation { void setFillAfter(boolean); }
-keepclassmembers class android.view.animation.Animation { void setZAdjustment(int); }
-keepclassmembers class android.view.animation.Animation { float getScaleFactor(); }
-keepclassmembers class android.view.animation.Animation { void setBackgroundColor(int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.XmlResourceParser getXml(int); }
-keepclassmembers class android.view.animation.Animation { void setDetachWallpaper(boolean); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { android.view.View findAnchorView(android.support.design.widget.CoordinatorLayout,android.view.View); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void run(); }
-keepclassmembers class android.view.animation.Animation { long getStartTime(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void scheduleAnimation(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { android.support.design.widget.CoordinatorLayout$Behavior getBehavior(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void <init>(android.animation.ValueAnimator$1); }
-keepclassmembers class android.view.animation.Animation { long getStartOffset(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { java.io.InputStream openRawResource(int,android.util.TypedValue); }
-keepclassmembers class android.view.animation.Animation { boolean getFillBefore(); }
-keepclassmembers class android.view.animation.Animation { long getDuration(); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeBounds(); }
-keepclassmembers class android.view.animation.Animation { boolean getFillAfter(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle); }
-keepclassmembers class android.support.v7.widget.GapWorker { android.support.v7.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(android.support.v7.widget.RecyclerView,int,long); }
-keepclassmembers class android.view.animation.Animation { void setAnimationListener(android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.ResourcesWrapper { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics); }
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate { android.support.v4.view.AccessibilityDelegateCompat getItemDelegate(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { boolean isNestedScrollAccepted(); }
-keepclassmembers class android.app.Notification$Action$1 { void <init>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void resetNestedScroll(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void resetChangedAfterNestedScroll(); }
-keepclassmembers class android.support.v7.widget.GapWorker { void add(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$AnchorInfo { void reset(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void resetTouchBehaviorTracking(); }
-keepclassmembers class android.support.v7.widget.GapWorker { void prefetch(long); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$LayoutParams { void setBehavior(android.support.design.widget.CoordinatorLayout$Behavior); }
-keepclassmembers class android.text.BoringLayout { int getHeight(); }
-keepclassmembers class android.text.BoringLayout { int getLineCount(); }
-keepclassmembers class android.support.v7.widget.GapWorker { void remove(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.text.BoringLayout { int getLineTop(int); }
-keepclassmembers class android.text.BoringLayout { int getLineDescent(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.CompoundAdapter { void add(android.widget.CompoundButton); }
-keepclassmembers class android.text.BoringLayout { int getLineStart(int); }
-keepclassmembers class android.text.BoringLayout { int getParagraphDirection(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.CompoundAdapter { int getCount(); }
-keepclassmembers class android.text.BoringLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.text.BoringLayout { float getLineMax(int); }
-keepclassmembers class android.support.v4.content.res.ResourcesCompat { android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void <init>(java.lang.Object); }
-keepclassmembers class android.text.BoringLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { boolean casNext(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class android.text.BoringLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.os.StrictMode$1 { void <init>(); }
-keepclassmembers class android.text.BoringLayout { int getEllipsisCount(int); }
-keepclassmembers class android.os.StrictMode$1 { java.util.ArrayList initialValue(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void tryCancel(); }
-keepclassmembers class java.nio.FileChannelImpl { void implCloseChannel(); }
-keepclassmembers class libcore.io.BlockGuardOs { void <init>(libcore.io.Os); }
-keepclassmembers class android.os.StrictMode$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationRepeat(); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationStart(); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationEnd(); }
-keepclassmembers class android.view.animation.Animation { boolean getTransformation(long,android.view.animation.Transformation,float); }
-keepclassmembers class android.support.v7.app.AlertController$4 { void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View); }
-keepclassmembers class android.view.animation.Animation { boolean hasStarted(); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress); }
-keepclassmembers class android.view.animation.Animation { boolean hasEnded(); }
-keepclassmembers class android.view.animation.Animation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.support.v4.app.FragmentTransition$1 { void <init>(java.util.ArrayList); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean access(java.lang.String,int); }
-keepclassmembers class java.text.ParsePosition { void <init>(int); }
-keepclassmembers class android.support.v4.app.FragmentTransition$1 { void run(); }
-keepclassmembers class android.os.StatFs { void <init>(java.lang.String); }
-keepclassmembers class libcore.io.BlockGuardOs { void close(java.io.FileDescriptor); }
-keepclassmembers class android.os.IRemoteCallback$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.text.NumberFormat { void <init>(); }
-keepclassmembers class java.text.ParsePosition { int getIndex(); }
-keepclassmembers class android.os.StatFs { long getBlockSizeLong(); }
-keepclassmembers class libcore.io.BlockGuardOs { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class java.text.ParsePosition { int getErrorIndex(); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean isLingerSocket(java.io.FileDescriptor); }
-keepclassmembers class android.os.StatFs { long getBlockCountLong(); }
-keepclassmembers class java.text.ParsePosition { void setErrorIndex(int); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class java.text.ParsePosition { void setIndex(int); }
-keepclassmembers class android.view.animation.Animation { boolean hasAlpha(); }
-keepclassmembers class libcore.io.BlockGuardOs { long lseek(java.io.FileDescriptor,long,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void <init>(java.util.concurrent.locks.AbstractQueuedSynchronizer); }
-keepclassmembers class android.widget.RemoteViews$ViewPaddingAction { void <init>(android.widget.RemoteViews,int,int,int,int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class libcore.io.BlockGuardOs { void mkdir(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.X509PublicKey { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class android.widget.RemoteViews$ViewPaddingAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignalAll(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class libcore.io.BlockGuardOs { int poll(android.system.StructPollfd[],int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator$1$2 { void <init>(ar.rulosoft.mimanganu.componentes.FilterViewGenerator$1,android.content.DialogInterface); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void unlinkCancelledWaiters(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool$1 { void <init>(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter,int); }
-keepclassmembers class android.view.View$ListenerInfo { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator$1$2 { void onClick(android.view.View); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void fireOnDrawableChangeListener(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.StatFs { long getAvailableBlocksLong(); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$100(android.view.View$ListenerInfo); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.util.Locale); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$102(android.view.View$ListenerInfo,java.util.ArrayList); }
-keepclassmembers class java.text.NumberFormat { int getMaximumFractionDigits(); }
-keepclassmembers class java.text.NumberFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void fireOnLayoutChangeListener(int,int,int,int); }
-keepclassmembers class java.lang.NumberFormatException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$13 { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.concurrent.CopyOnWriteArrayList access$200(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.concurrent.CopyOnWriteArrayList access$202(android.view.View$ListenerInfo,java.util.concurrent.CopyOnWriteArrayList); }
-keepclassmembers class android.view.View$13 { void setValue(android.view.View,float); }
-keepclassmembers class android.view.View$13 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnKeyListener access$302(android.view.View$ListenerInfo,android.view.View$OnKeyListener); }
-keepclassmembers class java.text.NumberFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { boolean getBitmapChanged(); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnTouchListener access$402(android.view.View$ListenerInfo,android.view.View$OnTouchListener); }
-keepclassmembers class libcore.io.BlockGuardOs { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { android.graphics.RectF getBitmapRect(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { float access$000(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnKeyListener access$300(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnTouchListener access$400(android.view.View$ListenerInfo); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { int checkInterruptWhileWaiting(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { android.graphics.PointF getCenter(); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnHoverListener access$600(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnDragListener access$700(android.view.View$ListenerInfo); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { float access$100(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { java.io.InputStream access$200(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous,java.lang.String); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnGenericMotionListener access$500(android.view.View$ListenerInfo); }
-keepclassmembers class libcore.io.BlockGuardOs { int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { java.io.InputStream getBitmapFromAsset(java.lang.String); }
-keepclassmembers class libcore.io.BlockGuardOs { void remove(java.lang.String); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnSystemUiVisibilityChangeListener access$1200(android.view.View$ListenerInfo); }
-keepclassmembers class libcore.io.BlockGuardOs { void rename(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat { android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater); }
-keepclassmembers class android.database.sqlite.SQLiteQueryBuilder { void appendClause(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int read(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void freePage(int); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int read(byte[],int,int); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void <init>(java.io.InputStream,java.net.Socket); }
-keepclassmembers class android.view.Choreographer$FrameDisplayEventReceiver { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor socket(int,int,int); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int available(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void close(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { long skip(long); }
-keepclassmembers class libcore.io.BlockGuardOs { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class java.text.NumberFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class java.text.NumberFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { java.lang.String getPath(int); }
-keepclassmembers class java.text.NumberFormat { void setMinimumFractionDigits(int); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStatVfs statvfs(java.lang.String); }
-keepclassmembers class java.text.NumberFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class android.util.SparseArray { void <init>(); }
-keepclassmembers class libcore.io.BlockGuardOs { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class java.text.NumberFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int,java.lang.Object); }
-keepclassmembers class android.util.SparseArray { void delete(int); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void invalidate(); }
-keepclassmembers class android.util.SparseArray { void remove(int); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { android.database.sqlite.SQLiteDatabase getDatabase(); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { int getCount(); }
-keepclassmembers class android.util.SparseArray { void removeAt(int); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { boolean onDown(android.view.MotionEvent); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter,android.widget.CursorAdapter$1); }
-keepclassmembers class android.util.SparseArray { int size(); }
-keepclassmembers class android.util.SparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.util.SparseArray { int keyAt(int); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { void close(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void onLongPress(android.view.MotionEvent); }
-keepclassmembers class android.util.SparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class android.app.ActivityOptions { void <init>(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { android.graphics.Matrix getImageViewMatrix(); }
-keepclassmembers class android.util.SparseArray { int indexOfKey(int); }
-keepclassmembers class android.view.MotionEvent$1 { void <init>(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { android.graphics.Matrix getImageViewMatrix(android.graphics.Matrix); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { boolean onSingleTapUp(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void onShowPress(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void setMaxTexture(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.method.CharacterPickerDialog$OptionsAdapter { void <init>(android.text.method.CharacterPickerDialog,android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void setPage(int); }
-keepclassmembers class android.app.ActivityOptions { int getAnimationType(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous { void setScrollSensitive(float); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { float getScale(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { float getScale(android.graphics.Matrix); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { float getValue(android.graphics.Matrix,int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$2 { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void onDrawableChanged(android.graphics.drawable.Drawable); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$2 { void onClick(android.view.View); }
-keepclassmembers class android.app.ActivityOptions { int getExitCoordinatorKey(); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <init>(java.lang.String,java.lang.String,byte[],org.apache.harmony.security.x509.EDIPartyName$1); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <init>(java.lang.String,java.lang.String,byte[]); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void onImageMatrixChanged(); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { java.lang.String access$100(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { void <init>(java.io.RandomAccessFile,long); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { void <init>(java.io.RandomAccessFile,long,long); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { java.lang.String access$200(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class android.os.StrictMode$9 { void <init>(); }
-keepclassmembers class android.os.StrictMode$9 { java.lang.Object create(); }
-keepclassmembers class org.acra.util.PackageManagerWrapper { void <init>(android.content.Context); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int read(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long access$200(java.util.zip.ZipFile$RAFStream); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long access$102(java.util.zip.ZipFile$RAFStream,long); }
-keepclassmembers class java.util.TreeMap$KeySet { void <init>(java.util.TreeMap); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangasRecAdapterText { void <init>(java.util.ArrayList,android.content.Context,boolean); }
-keepclassmembers class java.util.TreeMap$KeySet { int size(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl { void <init>(); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { void <init>(android.util.MapCollections,int); }
-keepclassmembers class org.acra.util.PackageManagerWrapper { boolean hasPermission(java.lang.String); }
-keepclassmembers class android.animation.Animator { void <init>(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl { boolean isActionViewExpanded(android.view.MenuItem); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { boolean hasNext(); }
-keepclassmembers class java.util.TreeMap$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$IcsMenuVersionImpl { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.view.animation.BaseInterpolator { int getChangingConfiguration(); }
-keepclassmembers class android.view.animation.BaseInterpolator { void <init>(); }
-keepclassmembers class android.support.v4.util.Pools$SynchronizedPool { java.lang.Object acquire(); }
-keepclassmembers class android.animation.Animator { void removeListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.animation.Animator { java.util.ArrayList getListeners(); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { void <init>(); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { void <init>(android.graphics.drawable.Ripple$1); }
-keepclassmembers class android.support.v4.util.Pools$SynchronizedPool { boolean release(java.lang.Object); }
-keepclassmembers class android.animation.Animator { int getChangingConfigurations(); }
-keepclassmembers class android.view.animation.BaseInterpolator { void setChangingConfiguration(int); }
-keepclassmembers class android.animation.Animator { boolean canReverse(); }
-keepclassmembers class android.animation.Animator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.database.Observable { void unregisterAll(); }
-keepclassmembers class android.animation.Animator { void setTarget(java.lang.Object); }
-keepclassmembers class android.graphics.RectF { void <init>(); }
-keepclassmembers class android.graphics.RectF { void <init>(float,float,float,float); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeadServer { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class android.animation.Animator { android.animation.Animator$AnimatorConstantState access$002(android.animation.Animator,android.animation.Animator$AnimatorConstantState); }
-keepclassmembers class android.graphics.RectF { void <init>(android.graphics.RectF); }
-keepclassmembers class android.text.AutoText { void <init>(android.content.res.Resources); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeadServer { boolean hasList(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void onLayoutChanged(int,int,int,int); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void onZoom(float); }
-keepclassmembers class android.text.AutoText { java.lang.String get(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class org.acra.model.BooleanElement { void <init>(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(android.graphics.drawable.VectorDrawable$VPath); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(); }
-keepclassmembers class org.acra.model.BooleanElement { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void toPath(android.graphics.Path); }
-keepclassmembers class org.acra.model.BooleanElement { java.lang.Object value(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void postScale(float,float,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { java.lang.String getPathName(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.animation.AnimatorSet$1 { void <init>(android.animation.AnimatorSet,java.util.ArrayList); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { boolean canApplyTheme(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { boolean isClipPath(); }
-keepclassmembers class android.animation.AnimatorSet$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void setDisplayType(it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void setImageBitmap(android.graphics.Bitmap); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { boolean defaultIsRtl(); }
-keepclassmembers class android.view.DisplayInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.RectF { void set(float,float,float,float); }
-keepclassmembers class android.view.DisplayInfo$1 { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.graphics.RectF { void setEmpty(); }
-keepclassmembers class android.graphics.RectF { void set(android.graphics.RectF); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { int getPolicy(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$3 { void <init>(android.support.v4.widget.SwipeRefreshLayout); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void setImageDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.database.sqlite.SQLiteException { void <init>(java.lang.String); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void setInitialPosition(it.sephiroth.android.library.imagezoom.ImageViewTouchBase$InitialPosition); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void setImageMatrix(android.graphics.Matrix); }
-keepclassmembers class android.database.sqlite.SQLiteException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.io.FileDescriptor { void <init>(); }
-keepclassmembers class java.io.FileDescriptor { boolean valid(); }
-keepclassmembers class java.io.FileDescriptor { int getInt$(); }
-keepclassmembers class java.io.FileDescriptor { void setInt$(int); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void setScrollFactor(float); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket(); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.Collection); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { boolean isShared(); }
-keepclassmembers class java.util.TreeSet { boolean add(java.lang.Object); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(java.lang.Thread,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.TreeSet { boolean addAll(java.util.Collection); }
-keepclassmembers class java.util.TreeSet { void clear(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(java.lang.Thread,int); }
-keepclassmembers class java.util.TreeSet { boolean contains(java.lang.Object); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.content.BroadcastReceiver { void <init>(); }
-keepclassmembers class android.content.BroadcastReceiver { android.content.BroadcastReceiver$PendingResult goAsync(); }
-keepclassmembers class java.util.TreeSet { boolean isEmpty(); }
-keepclassmembers class java.util.TreeSet { java.util.Iterator iterator(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase { void zoomTo(float,float); }
-keepclassmembers class android.graphics.RectF { void union(android.graphics.RectF); }
-keepclassmembers class java.util.TreeSet { int size(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultCode(int); }
-keepclassmembers class android.content.BroadcastReceiver { android.os.IBinder peekService(android.content.Context,android.content.Intent); }
-keepclassmembers class android.content.BroadcastReceiver { int getResultCode(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultExtras(android.os.Bundle); }
-keepclassmembers class android.graphics.Rect { void <init>(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$6 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.graphics.Rect { void <init>(int,int,int,int); }
-keepclassmembers class android.content.BroadcastReceiver { void setResult(int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultData(java.lang.String); }
-keepclassmembers class android.content.BroadcastReceiver { java.lang.String getResultData(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$6 { void onTranslucentConversionComplete(boolean); }
-keepclassmembers class android.graphics.Rect { void <init>(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.content.BroadcastReceiver { boolean getAbortBroadcast(); }
-keepclassmembers class android.content.BroadcastReceiver { void abortBroadcast(); }
-keepclassmembers class android.animation.LayoutTransition$3 { void <init>(android.animation.LayoutTransition,android.animation.Animator,int,long,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.content.BroadcastReceiver { boolean isOrderedBroadcast(); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator scaleX(float); }
-keepclassmembers class android.content.BroadcastReceiver { void setOrderedHint(boolean); }
-keepclassmembers class android.content.BroadcastReceiver { void clearAbortBroadcast(); }
-keepclassmembers class android.content.BroadcastReceiver { void setPendingResult(android.content.BroadcastReceiver$PendingResult); }
-keepclassmembers class android.content.BroadcastReceiver { boolean isInitialStickyBroadcast(); }
-keepclassmembers class android.content.BroadcastReceiver { android.content.BroadcastReceiver$PendingResult getPendingResult(); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator alpha(float); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator scaleY(float); }
-keepclassmembers class android.content.BroadcastReceiver { void setDebugUnregister(boolean); }
-keepclassmembers class android.content.BroadcastReceiver { boolean getDebugUnregister(); }
-keepclassmembers class android.content.BroadcastReceiver { int getSendingUserId(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters$1 { void <init>(ar.rulosoft.mimanganu.MangaFragment$ResetChapters,int); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[]); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { java.util.ArrayList getMangas(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { int hashCode(); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[],java.lang.String); }
-keepclassmembers class android.graphics.Rect { boolean isEmpty(); }
-keepclassmembers class android.graphics.NinePatch { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class android.graphics.Rect { void setEmpty(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$calcStorage$1 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$calcStorage,double); }
-keepclassmembers class android.graphics.Rect { void set(int,int,int,int); }
-keepclassmembers class android.graphics.NinePatch { void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.graphics.Rect { void set(android.graphics.Rect); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void recycle(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { long finishRecording(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void <init>(); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$2 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class android.view.GLES20RecordingCanvas { boolean isRecordingFor(java.lang.Object); }
-keepclassmembers class android.graphics.NinePatch { void drawSoftware(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.graphics.Rect { boolean contains(int,int); }
-keepclassmembers class android.graphics.NinePatch { int getDensity(); }
-keepclassmembers class android.graphics.NinePatch { int getWidth(); }
-keepclassmembers class android.support.v4.app.NavUtils { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class android.graphics.Rect { boolean contains(android.graphics.Rect); }
-keepclassmembers class android.graphics.NinePatch { boolean hasAlpha(); }
-keepclassmembers class android.graphics.NinePatch { int getHeight(); }
-keepclassmembers class android.graphics.Rect { boolean intersect(int,int,int,int); }
-keepclassmembers class android.graphics.Path$Direction { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.app.NavUtils { java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName); }
-keepclassmembers class android.support.v4.app.NavUtils { void navigateUpTo(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.support.v4.app.NavUtils { boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { java.util.ArrayList getMangas(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { boolean hasList(); }
-keepclassmembers class android.graphics.Rect { boolean intersects(int,int,int,int); }
-keepclassmembers class java.util.TreeMap$KeySet$1 { void <init>(java.util.TreeMap$KeySet,java.util.TreeMap$Node); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder { java.util.ArrayList getMangas(); }
-keepclassmembers class android.text.method.WordIterator { void <init>(java.util.Locale); }
-keepclassmembers class android.graphics.Rect { void union(android.graphics.Rect); }
-keepclassmembers class android.graphics.Rect { void union(int,int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder { boolean hasList(); }
-keepclassmembers class java.util.TreeMap$KeySet$1 { java.lang.Object next(); }
-keepclassmembers class android.graphics.drawable.Ripple$1 { void <init>(android.graphics.drawable.Ripple); }
-keepclassmembers class android.graphics.drawable.Ripple$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader { void <init>(android.content.Context); }
-keepclassmembers class android.text.method.WordIterator { boolean isOnLetterOrDigit(int); }
-keepclassmembers class android.graphics.Rect { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader { boolean onDoubleTapEvent(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.text.method.WordIterator { boolean isAfterLetterOrDigit(int); }
-keepclassmembers class android.transition.Transition$TransitionListenerAdapter { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader { void reset(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { boolean hasList(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.TuMangaOnline { boolean needRefererForImages(); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.KissManga { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$3 { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$3 { boolean onLongClick(android.view.View); }
-keepclassmembers class android.support.v7.transition.ActionBarTransition { void beginDelayedTransition(android.view.ViewGroup); }
-keepclassmembers class android.support.v4.view.ViewPager$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec$StreamFinishingSource { void <init>(okhttp3.internal.http2.Http2Codec,okio.Source); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader { void postLayout(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$5 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec$StreamFinishingSource { void close(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$5 { void handleMessage(android.os.Message); }
-keepclassmembers class android.util.SparseBooleanArray { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { java.util.ArrayList getChapters(android.content.Context,int,java.lang.String); }
-keepclassmembers class android.support.v7.app.AlertController$AlertParams$3 { void <init>(android.support.v7.app.AlertController$AlertParams,android.support.v7.app.AlertController); }
-keepclassmembers class android.animation.StateListAnimator { void start(android.animation.StateListAnimator$Tuple); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <init>(java.util.List); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { int size(); }
-keepclassmembers class android.animation.StateListAnimator { void cancel(); }
-keepclassmembers class android.animation.StateListAnimator { int getChangingConfigurations(); }
-keepclassmembers class android.animation.StateListAnimator { void jumpToCurrentState(); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int,boolean); }
-keepclassmembers class android.animation.StateListAnimator { void setChangingConfigurations(int); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$000(android.animation.StateListAnimator); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$002(android.animation.StateListAnimator,android.animation.Animator); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator$StateListAnimatorConstantState access$202(android.animation.StateListAnimator,android.animation.StateListAnimator$StateListAnimatorConstantState); }
-keepclassmembers class android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper { void apply(android.content.SharedPreferences$Editor); }
-keepclassmembers class android.support.v4.content.SharedPreferencesCompat$EditorCompat$Helper { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Small { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Small { void <init>(); }
-keepclassmembers class android.app.Dialog$1 { void <init>(android.app.Dialog); }
-keepclassmembers class android.app.Dialog$1 { void run(); }
-keepclassmembers class java.lang.reflect.ArtMethod { java.lang.String getMethodName(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <init>(int,int,int,int,boolean,boolean); }
-keepclassmembers class rapid.decoder.BitmapLoader { rapid.decoder.BitmapLoader config(android.graphics.Bitmap$Config); }
-keepclassmembers class rapid.decoder.BitmapLoader { rapid.decoder.BitmapDecoder config(android.graphics.Bitmap$Config); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float); }
-keepclassmembers class org.acra.legacy.ReportConverter { void <init>(android.content.Context); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { int getIntValue(); }
-keepclassmembers class android.util.SparseBooleanArray { int size(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { java.lang.Object getValue(); }
-keepclassmembers class android.util.SparseBooleanArray { int keyAt(int); }
-keepclassmembers class android.util.SparseBooleanArray { boolean valueAt(int); }
-keepclassmembers class java.lang.reflect.ArtMethod { boolean equalMethodParameters(java.lang.reflect.ArtMethod,java.lang.Class[]); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { void <init>(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class android.util.SparseBooleanArray { int indexOfKey(int); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { void requestInputMethod(android.app.Dialog); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { boolean needInputMethod(); }
-keepclassmembers class android.util.SparseBooleanArray { void clear(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { int hashCode(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <init>(boolean); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <init>(); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { boolean get(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[]); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void set(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { java.util.List access$000(org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { ar.rulosoft.mimanganu.componentes.Manga getFullManga(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { java.lang.String getId(); }
-keepclassmembers class java.io.DataInputStream { int read(byte[],int,int); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { void onPrepareDialogBuilder(android.support.v7.app.AlertDialog$Builder); }
-keepclassmembers class android.support.v7.preference.PreferenceDialogFragmentCompat { android.view.View onCreateDialogView(android.content.Context); }
-keepclassmembers class java.io.DataInputStream { float readFloat(); }
-keepclassmembers class rapid.decoder.BitmapLoader { void decodeBounds(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void <init>(android.support.v4.app.FragmentActivity); }
-keepclassmembers class java.io.DataInputStream { double readDouble(); }
-keepclassmembers class java.io.DataInputStream { void readFully(byte[],int,int); }
-keepclassmembers class java.io.DataInputStream { int readInt(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$3 { void <init>(int); }
-keepclassmembers class rapid.decoder.BitmapLoader { android.graphics.Bitmap decodeRegional(android.graphics.BitmapFactory$Options,android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { void doLoaderStop(boolean); }
-keepclassmembers class java.io.DataInputStream { void readFully(byte[]); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$PaintPool { void <init>(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$PaintPool { java.lang.Object newInstance(); }
-keepclassmembers class java.io.DataInputStream { long readLong(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$PaintPool { void onReset(android.graphics.Paint); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { void finishAfterTransition(android.app.Activity); }
-keepclassmembers class java.io.DataInputStream { short readShort(); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { void postponeEnterTransition(android.app.Activity); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.app.Activity getActivity(); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompatApi21$SharedElementCallback21); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.content.Context getContext(); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.support.v4.app.FragmentManagerImpl getFragmentManagerImpl(); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompatApi21$SharedElementCallback21); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21 { void startPostponedEnterTransition(android.app.Activity); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { android.os.Handler getHandler(); }
-keepclassmembers class java.io.DataInputStream { java.lang.String readUTF(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,byte[]); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTargetDensity(int); }
-keepclassmembers class rapid.decoder.TwiceReadableInputStream { void close(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class java.io.DataInputStream { java.lang.String decodeUTF(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Insets scaleFromDensity(android.graphics.Insets,int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Style { void addCompatExtras(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.FragmentHostCallback { boolean getRetainLoaders(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Style { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { java.lang.String getAlgorithm(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { java.util.ArrayList getMangas(android.content.Context,java.lang.String,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { java.lang.String getAlgorithmName(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { byte[] getParameters(); }
-keepclassmembers class java.net.DefaultFileNameMap { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Style { void setBuilder(android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class rapid.decoder.BitmapLoader { android.graphics.Bitmap executeDecoding(); }
-keepclassmembers class rapid.decoder.TwiceReadableInputStream { boolean isSecondReading(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 { void <init>(); }
-keepclassmembers class android.os.PersistableBundle { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setNinePatch(android.graphics.NinePatch); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV11 { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class rapid.decoder.BitmapLoader { rapid.decoder.BitmapMeta getCachedMeta(); }
-keepclassmembers class rapid.decoder.BitmapLoader { android.graphics.Bitmap getCachedBitmap(); }
-keepclassmembers class android.os.PersistableBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class rapid.decoder.TwiceReadableInputStream { void setTransactionSucceeded(boolean); }
-keepclassmembers class rapid.decoder.TwiceReadableInputStream { void startSecondRead(); }
-keepclassmembers class rapid.decoder.TwiceReadableInputStream { void setCacheOutputStream(rapid.decoder.cache.TransactionOutputStream); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getAlpha(); }
-keepclassmembers class rapid.decoder.TwiceReadableInputStream { void seekToBeginning(); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class rapid.decoder.BitmapLoader { rapid.decoder.BitmapLoader id(android.net.Uri); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader); }
-keepclassmembers class android.os.PersistableBundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setDither(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader$1 { void onPageScrollStateChanged(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class rapid.decoder.BitmapLoader { boolean isMemoryCacheEnabled(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean needsMirroring(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader$1 { void onPageSelected(int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isAutoMirrored(); }
-keepclassmembers class org.acra.config.ACRAConfigurationException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class org.acra.config.ACRAConfigurationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class rapid.decoder.BitmapLoader { void onDecodingStarted(boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue,org.apache.harmony.security.x509.Extension$1); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader$1 { void onPageScrolled(int,float,int); }
-keepclassmembers class rapid.decoder.BitmapLoader { int sourceHeight(); }
-keepclassmembers class rapid.decoder.BitmapLoader { int sourceWidth(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { int[] access$100(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$1 { void <init>(android.support.design.widget.ValueAnimatorCompat,android.support.design.widget.ValueAnimatorCompat$AnimatorUpdateListener); }
-keepclassmembers class rapid.decoder.BitmapLoader { rapid.decoder.BitmapDecoder useBuiltInDecoder(boolean); }
-keepclassmembers class android.transition.PathMotion { void <init>(); }
-keepclassmembers class rapid.decoder.BitmapLoader { rapid.decoder.BitmapLoader useBuiltInDecoder(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { byte[] access$300(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getCountryCode(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { boolean access$200(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class rapid.decoder.BitmapLoader { rapid.decoder.BitmapLoader useMemoryCache(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCode(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$1 { void onAnimationUpdate(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { android.view.Display getDisplay(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.os.ResultReceiver { void <init>(android.os.Handler); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void viewsReady(android.util.ArrayMap); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { long getNationalNumber(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNationalNumber(long); }
-keepclassmembers class android.view.animation.Transformation { int getTransformationType(); }
-keepclassmembers class android.util.MutableInt { void <init>(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setItalianLeadingZero(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { boolean isItalianLeadingZero(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <init>(); }
-keepclassmembers class android.view.animation.Transformation { android.graphics.Matrix getMatrix(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.view.Window getWindow(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util$3 { void <init>(ar.rulosoft.mimanganu.utils.Util,android.content.Context,java.lang.String,int); }
-keepclassmembers class android.text.method.DateTimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { int getInputType(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { java.util.ArrayList getMangas(); }
-keepclassmembers class android.view.animation.Transformation { void setAlpha(float); }
-keepclassmembers class android.view.animation.Transformation { void setClipRect(android.graphics.Rect); }
-keepclassmembers class android.view.animation.Transformation { void set(android.view.animation.Transformation); }
-keepclassmembers class okhttp3.TlsVersion { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getNumberOfLeadingZeros(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNumberOfLeadingZeros(int); }
-keepclassmembers class android.view.animation.Transformation { void setClipRect(int,int,int,int); }
-keepclassmembers class android.view.animation.Transformation { float getAlpha(); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.view.animation.Transformation { android.graphics.Rect getClipRect(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getMinimumWidth(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$1 { void <init>(java.lang.Thread$UncaughtExceptionHandler); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { void <init>(android.content.Context,int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getMinimumHeight(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCodeSource(); }
-keepclassmembers class org.acra.model.NumberElement { void <init>(java.lang.Number); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.transition.Transition configureTransition(android.transition.Transition,boolean); }
-keepclassmembers class org.acra.model.NumberElement { java.lang.String toString(); }
-keepclassmembers class org.acra.model.NumberElement { java.lang.Object value(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getOpacity(); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(android.os.StrictMode$ThreadSpanState); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void apply(com.android.internal.app.AlertController); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { boolean filterLeftoverView(android.view.ViewGroup,int); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { android.support.v7.view.menu.MenuPresenter$Callback getCallback(); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1800(android.os.StrictMode$Span); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$2102(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class android.os.StrictMode$Span { long access$2002(android.os.StrictMode$Span,long); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1902(android.os.StrictMode$Span,java.lang.String); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1900(android.os.StrictMode$Span); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1802(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.graphics.drawable.NinePatchDrawable$1); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { boolean hasList(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsNineManga { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { void setCallback(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.util.Slog { int d(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$3 { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.BaseMenuPresenter { boolean onSubMenuSelected(android.support.v7.view.menu.SubMenuBuilder); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$6 { void <init>(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class com.android.internal.app.AlertController$2 { void <init>(com.android.internal.app.AlertController,android.view.View); }
-keepclassmembers class okhttp3.EventListener$1 { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void <init>(java.util.concurrent.ThreadPoolExecutor,java.lang.Runnable); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$6 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.util.Slog { int wtfStack(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void lock(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void run(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryAcquire(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryLock(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void unlock(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryRelease(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isHeldExclusively(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isLocked(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { java.util.ArrayList getMangas(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int addStateSet(int[],android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { java.util.ArrayList getMangas(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { boolean canApplyTheme(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { boolean hasList(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void access$000(android.graphics.drawable.StateListDrawable$StateListState); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void clearState(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaKawaii { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { long getFadeDuration(); }
-keepclassmembers class libcore.util.CollectionUtils$1 { void <init>(java.lang.Iterable,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(); }
-keepclassmembers class rapid.decoder.Decodable { void <init>(); }
-keepclassmembers class java.util.Collections$EmptySet { int size(); }
-keepclassmembers class java.util.Collections$EmptySet { java.util.Iterator iterator(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(java.util.Collections$1); }
-keepclassmembers class rapid.decoder.Decodable { boolean isMemoryCacheEnabled(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void startTransition(java.lang.Runnable); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void transitionStarted(); }
-keepclassmembers class java.util.FormatterClosedException { void <init>(); }
-keepclassmembers class rapid.decoder.Decodable { rapid.decoder.Decodable useMemoryCache(boolean); }
-keepclassmembers class android.util.TypedValue { void <init>(); }
-keepclassmembers class android.util.TypedValue { float getFloat(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { boolean hasList(); }
-keepclassmembers class android.os.Message { void sendToTarget(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEden { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.os.Message { java.lang.String toString(); }
-keepclassmembers class android.util.TypedValue { float getDimension(android.util.DisplayMetrics); }
-keepclassmembers class android.os.Message { void <init>(); }
-keepclassmembers class android.util.TypedValue { float getFraction(float,float); }
-keepclassmembers class android.view.AbsSavedState$2 { void <init>(); }
-keepclassmembers class android.util.TypedValue { java.lang.CharSequence coerceToString(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaAdapter$ViewHolder { android.widget.TextView access$000(ar.rulosoft.mimanganu.adapters.MangaAdapter$ViewHolder); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader$1 { void onPageScrollStateChanged(int); }
-keepclassmembers class android.util.TimeUtils { void formatDuration(long,java.lang.StringBuilder); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader$1 { void onPageScrolled(int,float,int); }
-keepclassmembers class java.util.EnumMap$Entry { void <init>(java.lang.Enum,java.lang.Object,java.util.EnumMap); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader$1 { void onPageSelected(int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry,java.util.LinkedHashMap$LinkedEntry,java.util.LinkedHashMap$LinkedEntry); }
-keepclassmembers class java.util.EnumMap$Entry { java.lang.Object getValue(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntry { void <init>(); }
-keepclassmembers class java.util.EnumMap$Entry { java.lang.Enum getKey(); }
-keepclassmembers class java.util.EnumMap$Entry { java.lang.Object getKey(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$InitialPosition { void <init>(java.lang.String,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$1 { void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class android.graphics.Paint$Style { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$8 { void <init>(android.support.v4.widget.SwipeRefreshLayout); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$1 { void execute(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void <init>(); }
-keepclassmembers class okhttp3.CipherSuite$1 { void <init>(); }
-keepclassmembers class android.graphics.Insets { void <init>(int,int,int,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { android.support.design.widget.ValueAnimatorCompat createAnimator(android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void access$000(ar.rulosoft.mimanganu.ReaderFragment,float); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { android.widget.RelativeLayout access$100(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex { int hashCode(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater { java.lang.Object getRealOwner(); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(android.graphics.Rect); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { android.app.AlertDialog access$200(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { android.app.AlertDialog access$202(ar.rulosoft.mimanganu.ReaderFragment,android.app.AlertDialog); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { ar.rulosoft.mimanganu.servers.ServerBase access$1000(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { ar.rulosoft.mimanganu.componentes.Chapter access$300(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { void getPadding(android.graphics.Rect); }
-keepclassmembers class java.nio.charset.CoderResult { void <init>(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { android.content.SharedPreferences access$400(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { ar.rulosoft.mimanganu.componentes.Chapter access$500(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { boolean access$902(ar.rulosoft.mimanganu.ReaderFragment,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void access$600(ar.rulosoft.mimanganu.ReaderFragment,ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.ReaderFragment$LoadMode); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { boolean access$702(ar.rulosoft.mimanganu.ReaderFragment,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void hideSystemUI(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { ar.rulosoft.mimanganu.componentes.Manga access$800(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { void jumpDrawableToCurrentState(); }
-keepclassmembers class android.app.BackStackRecord { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { void onDrawableStateChanged(int[]); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isMalformed(); }
-keepclassmembers class android.app.Notification$BigPictureStyle { void <init>(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle setBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.animation.AnimatorSet$Dependency { void <init>(android.animation.AnimatorSet$Node,int); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle setSummaryText(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle bigPicture(android.graphics.Bitmap); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle bigLargeIcon(android.graphics.Bitmap); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isUnmappable(); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.app.Notification$BigPictureStyle { void populateBigContentView(android.app.Notification); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread { void setBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager$SpanSizeLookup { int getCachedSpanIndex(int,int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void <init>(android.support.v7.widget.Toolbar,boolean); }
-keepclassmembers class org.json.JSONArray { void <init>(java.util.Collection); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void setComparisonStrategy(int); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void recycle(); }
-keepclassmembers class org.json.JSONArray { int length(); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager$SpanSizeLookup { void invalidateSpanIndexCache(); }
-keepclassmembers class org.json.JSONArray { org.json.JSONArray put(int); }
-keepclassmembers class android.app.BackStackRecord { void <init>(android.app.FragmentManagerImpl); }
-keepclassmembers class org.json.JSONArray { org.json.JSONArray put(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void clear(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void init(android.view.ViewGroup,android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.HorizontalPagedReader { void setPagerAdapter(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.HorizontalPagedReader { void <init>(android.content.Context); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$1 { void <init>(android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1,android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorUpdateListenerProxy); }
-keepclassmembers class android.widget.AbsSpinner$SavedState$1 { void <init>(); }
-keepclassmembers class java.io.Writer { void <init>(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$1 { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class com.fedorvlasov.lazylist.MemCache$1 { void <init>(com.fedorvlasov.lazylist.MemCache,int); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { android.content.Context getContext(); }
-keepclassmembers class java.io.Writer { void write(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { int getDisplayOptions(); }
-keepclassmembers class org.json.JSONArray { void writeTo(org.json.JSONStringer); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter$1 { void <init>(ar.rulosoft.mimanganu.adapters.ServerRecAdapter,ar.rulosoft.mimanganu.servers.ServerBase,int); }
-keepclassmembers class org.json.JSONArray { int hashCode(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { void <init>(java.util.Collection); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean contains(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { int getNavigationMode(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setCollapsible(boolean); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean isEmpty(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void showSystemUI(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { int size(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.Object[] toArray(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setDefaultNavigationContentDescription(int); }
-keepclassmembers class android.support.v4.util.MapCollections { void <init>(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.String toString(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.support.v4.util.MapCollections { boolean containsAllHelper(java.util.Map,java.util.Collection); }
-keepclassmembers class okhttp3.ConnectionPool$1 { void <init>(okhttp3.ConnectionPool); }
-keepclassmembers class android.database.CursorWindow$1 { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompatBase$Action { void <init>(); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(char,float[]); }
-keepclassmembers class android.view.animation.CycleInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { void <init>(java.lang.String,int); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(android.util.PathParser$PathDataNode); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { long toNanos(long); }
-keepclassmembers class android.support.v4.util.MapCollections { boolean retainAllHelper(java.util.Map,java.util.Collection); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$5 { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setHomeButtonEnabled(boolean); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void <init>(java.io.IOException); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.transition.Scene { void setCurrentScene(android.view.View,android.transition.Scene); }
-keepclassmembers class android.os.storage.StorageVolume { void <clinit>(); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void addConnectException(java.io.IOException); }
-keepclassmembers class okhttp3.internal.connection.RouteException { java.io.IOException getLastConnectException(); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment$1 { void <init>(ar.rulosoft.custompref.ColorListDialogFragment); }
-keepclassmembers class android.app.BackStackRecord { void setLastIn(android.util.SparseArray,android.app.Fragment); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$1$1 { void <init>(ar.rulosoft.mimanganu.componentes.LoginDialog$1); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(int); }
-keepclassmembers class android.app.BackStackRecord { void setFirstOut(android.util.SparseArray,android.app.Fragment); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$19$1$1 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$19$1,android.content.DialogInterface); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { void <init>(android.widget.PopupWindow,android.content.Context); }
-keepclassmembers class android.app.ActivityTransitionState$1 { void <init>(android.app.ActivityTransitionState,android.view.ViewGroup,android.app.Activity); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition cloneTransition(android.transition.Transition); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.InfoAccessSyntax$1); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition getEnterTransition(android.app.Fragment,boolean); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void <init>(android.content.Context); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition getExitTransition(android.app.Fragment,boolean); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator$1$1 { void <init>(ar.rulosoft.mimanganu.componentes.FilterViewGenerator$1,android.content.DialogInterface); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void dispatchFitSystemWindows(android.graphics.Rect); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { void sendAccessibilityEvent(int); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int findPointerIndex(android.view.MotionEvent,int); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition getSharedElementTransition(android.app.Fragment,android.app.Fragment,boolean); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class android.support.v7.app.AlertController$CheckedItemAdapter { void <init>(android.content.Context,int,int,java.lang.CharSequence[]); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onAttachedToWindow(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onDestroy(); }
-keepclassmembers class android.support.v7.widget.ContentFrameLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { int getPointerId(android.view.MotionEvent,int); }
-keepclassmembers class java.util.logging.LogManager$1 { void <init>(java.util.logging.LogManager); }
-keepclassmembers class android.support.v7.preference.ListPreferenceDialogFragmentCompat$1 { void <init>(android.support.v7.preference.ListPreferenceDialogFragmentCompat); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { float getY(android.view.MotionEvent,int); }
-keepclassmembers class java.util.logging.LogManager$1 { void run(); }
-keepclassmembers class android.graphics.Matrix$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.AbsSavedState$2 { void <init>(); }
-keepclassmembers class android.os.Trace { void traceBegin(long,java.lang.String); }
-keepclassmembers class android.os.Trace { void traceEnd(long); }
-keepclassmembers class android.support.v4.view.MotionEventCompat { float getX(android.view.MotionEvent,int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.os.Trace { void asyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class android.text.Layout$Ellipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.os.Trace { void asyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { void <init>(); }
-keepclassmembers class android.content.res.Configuration$1 { void <init>(); }
-keepclassmembers class android.text.Layout$Ellipsizer { int length(); }
-keepclassmembers class android.ddm.DdmHandleHello { void <init>(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { org.acra.collections.ImmutableSet additionalDropBoxTags(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { java.lang.String applicationLogFile(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { org.acra.collections.ImmutableSet additionalSharedPreferences(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { int applicationLogFileLines(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { boolean alsoReportToAndroidFramework(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { java.lang.Class buildConfigClass(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { boolean deleteOldUnsentReportsOnApplicationStart(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { org.acra.file.Directory applicationLogFileDir(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { boolean deleteUnapprovedReportsOnApplicationStart(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$1 { void <init>(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { int dropboxCollectionMinutes(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { org.acra.collections.ImmutableSet getReportFields(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { boolean includeDropBoxSystemTags(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onPause(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { org.acra.collections.ImmutableList logcatArguments(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { org.acra.collections.ImmutableSet excludeMatchingSettingsKeys(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { org.acra.ReportingInteractionMode mode(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { org.acra.collections.ImmutableSet excludeMatchingSharedPreferencesKeys(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { boolean nonBlockingReadForLogcat(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { boolean logcatFilterByPid(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { java.lang.Class reportDialogClass(); }
-keepclassmembers class android.graphics.ColorFilter { void <init>(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { java.lang.Class reportPrimerClass(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { it.sephiroth.android.library.TapListener access$000(it.sephiroth.android.library.imagezoom.ImageViewTouch); }
-keepclassmembers class java.io.ByteArrayInputStream { void close(); }
-keepclassmembers class java.io.ByteArrayInputStream { void <init>(byte[]); }
-keepclassmembers class java.io.ByteArrayInputStream { void mark(int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onResume(); }
-keepclassmembers class java.io.ByteArrayInputStream { boolean markSupported(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { int resNotifIcon(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.app.BackStackRecord { boolean hasSimpleTarget(android.transition.Transition); }
-keepclassmembers class org.acra.config.ACRAConfiguration { int resToastText(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { int resNotifText(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { int resNotifTickerText(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { int sharedPreferencesMode(); }
-keepclassmembers class java.io.ByteArrayInputStream { void reset(); }
-keepclassmembers class android.app.BackStackRecord { boolean isNullOrEmpty(java.util.List); }
-keepclassmembers class org.acra.config.ACRAConfiguration { int resNotifTitle(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { java.lang.String sharedPreferencesName(); }
-keepclassmembers class org.acra.config.ACRAConfiguration { boolean stopServicesOnCrash(); }
-keepclassmembers class android.app.ProgressDialog { void <init>(android.content.Context); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { boolean onDown(android.view.MotionEvent); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { boolean onSingleTapConfirmed(android.view.MotionEvent); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment { void onStatusChanged(ar.rulosoft.mimanganu.services.ChapterDownload); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { void setTapListener(it.sephiroth.android.library.TapListener); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { void setScaleEnabled(boolean); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch { boolean onSingleTapUp(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.ReasonFlags access$100(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.DistributionPointName access$000(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.GeneralNames access$200(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener); }
-keepclassmembers class android.app.ProgressDialog { void onStop(); }
-keepclassmembers class android.view.View$4 { void <init>(java.lang.String); }
-keepclassmembers class android.app.ProgressDialog { void setProgress(int); }
-keepclassmembers class android.view.View$4 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.app.ProgressDialog { void setSecondaryProgress(int); }
-keepclassmembers class android.view.View$4 { void setValue(android.view.View,float); }
-keepclassmembers class android.app.ProgressDialog { void onStart(); }
-keepclassmembers class android.util.PathParser$PathDataNode { char access$100(android.util.PathParser$PathDataNode); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(android.util.PathParser$PathDataNode,android.util.PathParser$1); }
-keepclassmembers class android.util.PathParser$PathDataNode { float[] access$200(android.util.PathParser$PathDataNode); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(char,float[],android.util.PathParser$1); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { void <init>(android.content.Context,android.content.res.TypedArray); }
-keepclassmembers class android.app.ProgressDialog { void setProgressDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl { void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class android.app.ProgressDialog { void setMax(int); }
-keepclassmembers class android.app.ProgressDialog { void setIndeterminate(boolean); }
-keepclassmembers class android.app.ProgressDialog { void setIndeterminateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { java.util.ArrayList getMangas(); }
-keepclassmembers class android.app.ProgressDialog { void setMessage(java.lang.CharSequence); }
-keepclassmembers class android.app.ProgressDialog { android.widget.ProgressBar access$000(android.app.ProgressDialog); }
-keepclassmembers class android.app.ProgressDialog { android.widget.TextView access$200(android.app.ProgressDialog); }
-keepclassmembers class android.app.ProgressDialog { java.lang.String access$100(android.app.ProgressDialog); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { boolean getBoolean(int,boolean); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getColor(int,int); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class android.app.ProgressDialog { void onProgressChanged(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$2 { void <init>(android.support.v4.app.FragmentManagerImpl,android.view.View,android.view.animation.Animation,android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getDimensionPixelOffset(int,int); }
-keepclassmembers class android.app.ProgressDialog { java.text.NumberFormat access$300(android.app.ProgressDialog); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$2 { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { boolean hasList(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getDimensionPixelSize(int,int); }
-keepclassmembers class android.app.ProgressDialog { android.widget.TextView access$400(android.app.ProgressDialog); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaStream { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.v7.preference.Preference { java.lang.String getFragment(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.view.View$TintInfo { void <init>(android.view.View$1); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { android.graphics.drawable.Drawable getDrawableIfKnown(int); }
-keepclassmembers class android.app.ExitTransitionCoordinator$9 { void <init>(android.app.ExitTransitionCoordinator,java.util.ArrayList); }
-keepclassmembers class android.support.v7.preference.Preference { java.lang.String getKey(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getInt(int,int); }
-keepclassmembers class android.view.View$TintInfo { void <init>(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void <init>(android.support.design.widget.ValueAnimatorCompat$Impl); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getLayoutDimension(int,int); }
-keepclassmembers class android.app.BackStackRecord { java.lang.String getName(); }
-keepclassmembers class android.os.StrictMode$StrictModeViolation { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { int getResourceId(int,int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void cancel(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void end(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { float getAnimatedFraction(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl { void <init>(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { java.lang.CharSequence getText(int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void setDuration(long); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void setFloatValues(float,float); }
-keepclassmembers class android.support.v7.preference.Preference { java.lang.CharSequence getSummary(); }
-keepclassmembers class android.support.v7.preference.Preference { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { float getFloat(int,float); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat { void start(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.SetCookieCache { java.util.Set access$000(com.franmontiel.persistentcookiejar.cache.SetCookieCache); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { void recycle(); }
-keepclassmembers class okhttp3.internal.platform.Platform { void <init>(); }
-keepclassmembers class android.support.v7.preference.Preference { void onAttached(); }
-keepclassmembers class android.support.v7.preference.Preference { void notifyChanged(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$7 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$7 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$7 { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$7 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { ar.rulosoft.mimanganu.servers.ServerBase$FilteredType getFilteredType(); }
-keepclassmembers class okhttp3.internal.platform.Platform { void afterHandshake(javax.net.ssl.SSLSocket); }
-keepclassmembers class android.support.v7.widget.TintTypedArray { boolean hasValue(int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$7 { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class okhttp3.internal.platform.Platform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { java.util.ArrayList getMangas(); }
-keepclassmembers class okhttp3.internal.platform.Platform { boolean isCleartextTrafficPermitted(java.lang.String); }
-keepclassmembers class android.support.v7.preference.Preference { void onDependencyChanged(android.support.v7.preference.Preference,boolean); }
-keepclassmembers class okhttp3.internal.platform.Platform { void connectSocket(java.net.Socket,java.net.InetSocketAddress,int); }
-keepclassmembers class okhttp3.internal.platform.Platform { void log(int,java.lang.String,java.lang.Throwable); }
-keepclassmembers class okhttp3.internal.platform.Platform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventJellyBeanImpl { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteSession$Transaction { void <init>(); }
-keepclassmembers class android.support.v7.preference.Preference { void onInitializeAccessibilityNodeInfo(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat); }
-keepclassmembers class android.database.sqlite.SQLiteSession$Transaction { void <init>(android.database.sqlite.SQLiteSession$1); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { boolean hasList(); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment$2 { void <init>(ar.rulosoft.mimanganu.SearchResultsFragment,ar.rulosoft.mimanganu.componentes.Manga); }
-keepclassmembers class android.support.v7.widget.GapWorker$1 { void <init>(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void <init>(); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.IdentifiableCookie { void <init>(okhttp3.Cookie); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void <init>(int); }
-keepclassmembers class android.widget.NumberPicker { void onMeasure(int,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonIcs { void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { void <init>(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class android.support.v7.preference.Preference { void onDetached(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonIcs { boolean shouldAnimateVisibilityChange(); }
-keepclassmembers class java.text.NumberFormat$Field { void <init>(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$ScaleListener { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous); }
-keepclassmembers class org.json.JSONStringer { java.lang.String toString(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void <clinit>(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.IdentifiableCookie { okhttp3.Cookie getCookie(); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int getTotalDuration(); }
-keepclassmembers class java.net.URI$PartEncoder { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.preference.Preference { void onParentChanged(android.support.v7.preference.Preference,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.preference.Preference { void setOnPreferenceClickListener(android.support.v7.preference.Preference$OnPreferenceClickListener); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventStubImpl { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonIcs { boolean requirePreDrawListener(); }
-keepclassmembers class android.text.PackedObjectVector { void <init>(int); }
-keepclassmembers class android.support.v7.preference.Preference { void setSelectable(boolean); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void clear(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreferenceFloat$1 { void onStartTrackingTouch(android.widget.SeekBar); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[]); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo { boolean needLogin(); }
-keepclassmembers class android.support.v7.preference.Preference { void setTitle(java.lang.CharSequence); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$ScaleListener { void onScaleEnd(android.view.ScaleGestureDetector); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable,java.lang.String); }
-keepclassmembers class android.widget.NumberPicker { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable,java.lang.String,int); }
-keepclassmembers class java.util.IllegalFormatException { void <init>(); }
-keepclassmembers class android.support.v7.preference.Preference { java.lang.String toString(); }
-keepclassmembers class android.animation.LayoutTransition$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void ensureSubDecor(); }
-keepclassmembers class android.animation.LayoutTransition$2 { void <init>(android.animation.LayoutTransition,android.view.View); }
-keepclassmembers class android.support.v4.app.FragmentTransition$2 { void <init>(java.lang.Object,android.view.View,android.support.v4.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread$1 { void <init>(android.support.design.widget.ValueAnimatorCompatImplGingerbread); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void <init>(android.widget.TextView); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread$1 { void run(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { void assignPositionFromScrapList(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void applyCompoundDrawablesTints(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void applyCompoundDrawableTint(android.graphics.drawable.Drawable,android.support.v7.widget.TintInfo); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplBase { void <init>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutState { boolean hasMore(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplBase { void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.widget.NumberPicker { int computeVerticalScrollOffset(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { boolean canApplyTheme(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask$SingleUpdateSerch { void <init>(ar.rulosoft.mimanganu.services.AutomaticUpdateTask,ar.rulosoft.mimanganu.componentes.Manga,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { int getChangingConfigurations(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(android.view.View); }
-keepclassmembers class android.widget.NumberPicker { int getSolidColor(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setColors(int[]); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int indexOfKey(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setColorStateList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { int access$902(android.view.View$MatchLabelForPredicate,int); }
-keepclassmembers class android.widget.NumberPicker { boolean performClick(); }
-keepclassmembers class android.widget.NumberPicker { int computeVerticalScrollExtent(); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean apply(android.view.View); }
-keepclassmembers class android.widget.NumberPicker { boolean performLongClick(); }
-keepclassmembers class android.widget.NumberPicker { void showSoftInput(); }
-keepclassmembers class java.lang.NegativeArraySizeException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$1 { void <init>(android.graphics.drawable.AnimatedVectorDrawable); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { boolean isEmpty(); }
-keepclassmembers class android.widget.NumberPicker { void hideSoftInput(); }
-keepclassmembers class android.text.Spannable$Factory { void <init>(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$JellybeanMr1Impl { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelper { void onSetTextAppearance(android.content.Context,int); }
-keepclassmembers class java.util.IllegalFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadii(float[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void access$000(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSource { void close(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { java.util.ArrayList getMangas(); }
-keepclassmembers class java.util.TreeMap$Bound$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.NumberPicker { boolean getWrapSelectorWheel(); }
-keepclassmembers class android.widget.NumberPicker { int getValue(); }
-keepclassmembers class android.util.ArrayMap$1 { void <init>(android.util.ArrayMap); }
-keepclassmembers class android.widget.NumberPicker { int getMinValue(); }
-keepclassmembers class android.util.ArrayMap$1 { int colGetSize(); }
-keepclassmembers class android.widget.NumberPicker { int getMaxValue(); }
-keepclassmembers class android.util.ArrayMap$1 { int colIndexOfValue(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton { boolean needsDividerBefore(); }
-keepclassmembers class android.util.ArrayMap$1 { void colRemoveAt(int); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo { void <init>(android.support.v7.widget.MenuPopupWindow,android.support.v7.view.menu.MenuBuilder,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton { boolean performClick(); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton { boolean needsDividerAfter(); }
-keepclassmembers class android.widget.NumberPicker { float getBottomFadingEdgeStrength(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo { android.widget.ListView getListView(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean canReuseCache(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.widget.NumberPicker { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.NumberPicker { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void createCachedBitmapIfNeeded(int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet$1 { void <init>(java.util.EnumMap$EnumMapEntrySet); }
-keepclassmembers class okhttp3.ConnectionPool { void <init>(); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet$1 { java.lang.Object get(java.util.MapEntry); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet$1 { java.util.Map$Entry get(java.util.MapEntry); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { int getChangingConfigurations(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$1$2 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$1); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean canReuseBitmap(int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { void updateCacheStates(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$1$2 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState { boolean hasTranslucentRoot(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void updateLocalState(android.content.res.Resources); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$1$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$1$2 { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean updateTint(int[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$1$2 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class java.util.UUID { void <init>(long,long); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RuNineManga { boolean hasList(); }
-keepclassmembers class android.widget.NumberPicker { int resolveSizeAndStateRespectingMinSize(int,int,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSource { okio.Timeout timeout(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int size(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getIntrinsicWidth(); }
-keepclassmembers class android.widget.NumberPicker { void setValueInternal(int,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getMinimumHeight(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getMinimumWidth(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getIntrinsicHeight(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int getOpacity(); }
-keepclassmembers class java.lang.Number { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener { void <init>(android.support.v7.view.menu.ActionMenuItemView); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean isCompatTintEnabled(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.widget.NumberPicker { void onScrollerFinished(android.widget.Scroller); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener { android.support.v7.view.menu.ShowableListMenu getPopup(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener { boolean onForwardingStarted(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean isStateful(); }
-keepclassmembers class android.widget.NumberPicker { void onScrollStateChange(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { int[] getState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { int constrain(int,int,int); }
-keepclassmembers class android.graphics.Path$FillType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.widget.NumberPicker { void fling(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable newDrawableFromState(android.graphics.drawable.Drawable$ConstantState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setAlpha(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { android.graphics.drawable.Drawable getWrappedDrawable(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean onLevelChange(int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { void requestStop(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setDither(boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader { ar.rulosoft.mimanganu.componentes.readers.Reader$ReaderListener access$000(ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setFilterBitmap(boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean setState(int[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader { ar.rulosoft.mimanganu.componentes.readers.Reader$ReaderListener access$100(ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.NumberPicker { java.lang.String formatNumber(int); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <init>(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { void cancelTargetTouch(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader { void onEndOver(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.widget.NumberPicker { void notifyChange(int,int); }
-keepclassmembers class android.widget.ProgressBar$SavedState$1 { void <init>(); }
-keepclassmembers class android.widget.NumberPicker { void removeChangeCurrentByOneFromLongPress(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.graphics.drawable.ClipDrawable,android.content.res.Resources); }
-keepclassmembers class android.widget.NumberPicker { void removeAllCallbacks(); }
-keepclassmembers class android.widget.NumberPicker { void removeBeginSoftInputCommand(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void setWrappedDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setEdgeType(int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setActivationDelay(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader { void onStartOver(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setEnabled(boolean); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.R2LPagedReader { void seekPage(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setMaximumEdges(float,float); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { boolean canConstantState(); }
-keepclassmembers class org.acra.collections.ImmutableList { void <init>(java.lang.Object[]); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setRampDownDuration(int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setRampUpDuration(int); }
-keepclassmembers class android.app.PendingIntent { void <init>(android.content.IIntentSender); }
-keepclassmembers class android.app.PendingIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { android.support.v4.widget.AutoScrollHelper setRelativeEdges(float,float); }
-keepclassmembers class android.widget.NumberPicker { android.widget.EditText access$100(android.widget.NumberPicker); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpCodec,okhttp3.internal.connection.RealConnection,int,okhttp3.Request); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void initDefaultEncoder(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void setError(); }
-keepclassmembers class android.widget.NumberPicker { void access$200(android.widget.NumberPicker,boolean); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { boolean shouldAnimate(); }
-keepclassmembers class org.acra.collections.ImmutableList { int indexOf(java.lang.Object); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.internal.http.HttpCodec httpStream(); }
-keepclassmembers class org.acra.collections.ImmutableList { java.lang.Object get(int); }
-keepclassmembers class android.widget.NumberPicker { java.lang.String[] access$900(android.widget.NumberPicker); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.Response proceed(okhttp3.Request); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.Connection connection(); }
-keepclassmembers class android.support.v4.content.res.ResourcesCompatApi21 { android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.NumberPicker { int access$1900(android.widget.NumberPicker); }
-keepclassmembers class android.widget.NumberPicker { int access$1100(android.widget.NumberPicker); }
-keepclassmembers class java.util.concurrent.Executors$RunnableAdapter { void <init>(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class org.acra.collections.ImmutableList { int size(); }
-keepclassmembers class android.widget.NumberPicker { int access$1400(android.widget.NumberPicker); }
-keepclassmembers class org.acra.collections.ImmutableList { java.lang.Object[] toArray(); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { int[] toIntArray(java.lang.String); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushBytesLocked(); }
-keepclassmembers class java.util.concurrent.Executors$RunnableAdapter { java.lang.Object call(); }
-keepclassmembers class android.view.ScaleGestureDetector { void <init>(android.content.Context,android.view.ScaleGestureDetector$OnScaleGestureListener); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { boolean isOID(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { java.util.ArrayList getMangas(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void callOnPanelClosed(int,android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState,android.view.Menu); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void checkCloseActionMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v7.app.AppCompatDialog { void <init>(android.content.Context,int); }
-keepclassmembers class rapid.decoder.ResourceBitmapLoader { android.graphics.BitmapRegionDecoder createBitmapRegionDecoder(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void closePanel(int); }
-keepclassmembers class android.database.DataSetObserver { void <init>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flush(); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.Request request(); }
-keepclassmembers class android.support.v7.app.AppCompatDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v7.app.AppCompatDialog { android.support.v7.app.AppCompatDelegate getDelegate(); }
-keepclassmembers class android.support.v7.app.AppCompatDialog { void onStop(); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.internal.connection.StreamAllocation streamAllocation(); }
-keepclassmembers class android.widget.NumberPicker { int access$5200(android.widget.NumberPicker); }
-keepclassmembers class android.widget.NumberPicker { int access$5300(android.widget.NumberPicker); }
-keepclassmembers class android.widget.NumberPicker { int access$5700(android.widget.NumberPicker); }
-keepclassmembers class android.widget.NumberPicker { int access$5600(android.widget.NumberPicker); }
-keepclassmembers class android.support.v7.app.AppCompatDialog { void setContentView(android.view.View); }
-keepclassmembers class android.widget.NumberPicker { android.content.Context access$5800(android.widget.NumberPicker); }
-keepclassmembers class android.support.v7.app.AppCompatDialog { void setContentView(int); }
-keepclassmembers class android.widget.NumberPicker { android.content.Context access$5900(android.widget.NumberPicker); }
-keepclassmembers class android.widget.NumberPicker { int access$5400(android.widget.NumberPicker); }
-keepclassmembers class android.widget.NumberPicker { android.content.Context access$6000(android.widget.NumberPicker); }
-keepclassmembers class android.widget.NumberPicker { int access$5500(android.widget.NumberPicker); }
-keepclassmembers class android.view.ScaleGestureDetector { void clearTouchHistory(); }
-keepclassmembers class android.support.v7.app.AppCompatDialog { boolean supportRequestWindowFeature(int); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.widget.GridView { void <init>(android.content.Context); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void println(); }
-keepclassmembers class android.widget.GridView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.text.SpannableString { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class android.text.SpannableString { void removeSpan(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { int hashCode(); }
-keepclassmembers class android.widget.NumberPicker { int access$6600(android.widget.NumberPicker); }
-keepclassmembers class android.widget.NumberPicker { boolean access$6700(android.widget.NumberPicker); }
-keepclassmembers class android.widget.NumberPicker { int access$6900(android.widget.NumberPicker); }
-keepclassmembers class android.widget.GridView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.text.SpannableString { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.NumberPicker { int access$6800(android.widget.NumberPicker,int); }
-keepclassmembers class android.widget.NumberPicker { java.lang.String access$7000(android.widget.NumberPicker,int); }
-keepclassmembers class android.text.SpannableString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.text.SpannableString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void <init>(); }
-keepclassmembers class android.text.SpannableString { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.GridView { android.widget.ListAdapter getAdapter(); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void setDocumentLocator(org.xml.sax.Locator); }
-keepclassmembers class android.widget.GridView { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { boolean hasList(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void write(java.lang.String,int,int); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startDocument(); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endPrefixMapping(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.NineManga { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endDocument(); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { android.view.View findViewById(int); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startPrefixMapping(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.Choreographer$2 { void <init>(); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endElement(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ClipDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void ignorableWhitespace(char[],int,int); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void characters(char[],int,int); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void processingInstruction(java.lang.String,java.lang.String); }
-keepclassmembers class okio.Segment { void <init>(okio.Segment); }
-keepclassmembers class android.animation.LayoutTransition$1 { void <init>(android.animation.LayoutTransition,android.view.ViewGroup); }
-keepclassmembers class android.support.v4.view.GravityCompat { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { void <init>(android.content.Context); }
-keepclassmembers class okio.Segment { void <init>(byte[],int,int); }
-keepclassmembers class android.support.v4.view.GravityCompat { int getAbsoluteGravity(int,int); }
-keepclassmembers class okio.Segment { okio.Segment pop(); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class java.lang.OutOfMemoryError { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.NoSaveStateFrameLayout { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class okio.Segment { okio.Segment push(okio.Segment); }
-keepclassmembers class android.util.DisplayMetrics { void <init>(); }
-keepclassmembers class android.view.ScaleGestureDetector { boolean inDoubleTapMode(); }
-keepclassmembers class java.io.UnsupportedEncodingException { void <init>(java.lang.String); }
-keepclassmembers class android.util.DisplayMetrics { void setTo(android.util.DisplayMetrics); }
-keepclassmembers class android.view.ScaleGestureDetector { float getFocusX(); }
-keepclassmembers class android.view.ScaleGestureDetector { boolean isInProgress(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void invalidateOptionsMenu(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV23$AppCompatWindowCallbackV23 { void <init>(android.support.v7.app.AppCompatDelegateImplV23,android.view.Window$Callback); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.text.Layout { void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.text.Layout { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.ScaleGestureDetector { android.view.MotionEvent access$002(android.view.ScaleGestureDetector,android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$2$2 { void <init>(ar.rulosoft.mimanganu.utils.UpdateUtil$2); }
-keepclassmembers class android.view.ScaleGestureDetector { int access$102(android.view.ScaleGestureDetector,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$2$2 { void run(); }
-keepclassmembers class rapid.decoder.BitmapDecoder$ScaleBy$1 { void <init>(); }
-keepclassmembers class java.util.Formatter$CachedDecimalFormat { void <init>(); }
-keepclassmembers class rapid.decoder.BitmapDecoder$ScaleBy$1 { java.lang.Object newInstance(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void clearMutated(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onMenuModeChange(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void addDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void removeDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources,android.graphics.drawable.LevelListDrawable$1); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void scheduleCallback(); }
-keepclassmembers class android.widget.ScrollView$SavedState$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPager$PagerObserver { void <init>(android.support.v4.view.ViewPager); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onSubDecorInstalled(android.view.ViewGroup); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onStop(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { void onTitleChanged(java.lang.CharSequence); }
-keepclassmembers class android.animation.RectEvaluator { void <init>(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator { java.lang.Object next(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Underline { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9 { boolean requestWindowFeature(int); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator { void remove(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator { boolean hasNext(); }
-keepclassmembers class android.support.v4.app.FragmentActivity$1 { void <init>(android.support.v4.app.FragmentActivity); }
-keepclassmembers class com.franmontiel.persistentcookiejar.cache.SetCookieCache$SetCookieCacheIterator { void <init>(com.franmontiel.persistentcookiejar.cache.SetCookieCache); }
-keepclassmembers class android.support.v4.app.FragmentActivity$1 { void handleMessage(android.os.Message); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener { void <init>(android.support.v4.view.ViewPropertyAnimatorCompat); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getRecordCount(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$7 { void <init>(java.util.ArrayList,java.util.Map); }
-keepclassmembers class ar.rulosoft.mimanganu.MiMangaNuApplication { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MiMangaNuApplication { void attachBaseContext(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$2 { void <init>(ar.rulosoft.mimanganu.ServerListFragment); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MiMangaNuApplication { void onCreate(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getContentChangeTypes(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Underline { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableColorFilterAction { void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(android.app.Activity$1); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getEventType(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setEventType(int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setPackageName(java.lang.CharSequence); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setContentChangeTypes(int); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$2 { boolean onQueryTextSubmit(java.lang.String); }
-keepclassmembers class java.lang.IncompatibleClassChangeError { void <init>(); }
-keepclassmembers class java.lang.IncompatibleClassChangeError { void <init>(java.lang.String); }
-keepclassmembers class android.text.Layout { long getLineRangeForDraw(android.graphics.Canvas); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$2 { boolean onQueryTextChange(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(int); }
-keepclassmembers class java.security.SignatureSpi { void <init>(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$SpiAndProvider { void <init>(java.lang.Object,java.security.Provider,org.apache.harmony.security.fortress.Engine$1); }
-keepclassmembers class android.support.v4.app.ActivityCompat$SharedElementCallback21Impl { void <init>(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class ar.rulosoft.custompref.NumPickDialogPref$1 { void <init>(ar.rulosoft.custompref.NumPickDialogPref); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void lock(); }
-keepclassmembers class android.text.Layout { java.lang.CharSequence getText(); }
-keepclassmembers class android.text.Layout { android.text.TextPaint getPaint(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void lockInterruptibly(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$SpiAndProvider { void <init>(java.lang.Object,java.security.Provider); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void unlock(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { java.util.concurrent.locks.Condition newCondition(); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class android.text.Layout { float getSpacingAdd(); }
-keepclassmembers class com.android.internal.policy.PolicyManager { android.view.Window makeNewWindow(android.content.Context); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23 { void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class android.text.Layout { float getSpacingMultiplier(); }
-keepclassmembers class android.text.Layout { int getHeight(); }
-keepclassmembers class android.text.Layout { int getWidth(); }
-keepclassmembers class android.text.Layout { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class android.view.ViewGroupOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$ItemInfo { void <init>(); }
-keepclassmembers class android.view.ViewGroupOverlay { void add(android.view.View); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SharedPrefsCookiePersistor { void <init>(android.content.SharedPreferences); }
-keepclassmembers class android.text.Layout { float getSecondaryHorizontal(int,boolean); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState$1 { void <init>(); }
-keepclassmembers class android.widget.TextView$Marquee$1 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class android.widget.TextView$Marquee$1 { void doFrame(long); }
-keepclassmembers class android.content.res.Resources$NotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { java.util.ArrayList getMangas(); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,boolean); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class okhttp3.CacheControl { void <init>(okhttp3.CacheControl$Builder); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ResetElevationAnimation { void <init>(android.support.design.widget.FloatingActionButtonGingerbread); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ResetElevationAnimation { float getTargetShadowSize(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { ar.rulosoft.mimanganu.adapters.ServerRecAdapter$OnServerClickListener access$000(ar.rulosoft.mimanganu.adapters.ServerRecAdapter); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { void clearSelections(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { int getItemCount(); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { void onDetachedFromWindow(); }
-keepclassmembers class okhttp3.CacheControl { void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String); }
-keepclassmembers class android.widget.ArrayAdapter { void remove(java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.ExpandedMenuView { boolean invokeItem(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,android.text.Layout$TabStops,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getCapacity(); }
-keepclassmembers class android.widget.ArrayAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChildCount(); }
-keepclassmembers class org.acra.collections.ImmutableSet { boolean contains(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable[] getChildren(); }
-keepclassmembers class org.acra.collections.ImmutableSet { void <init>(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { boolean hasList(); }
-keepclassmembers class org.acra.collections.ImmutableSet { java.lang.Object[] toArray(); }
-keepclassmembers class android.widget.ArrayAdapter { android.content.Context getContext(); }
-keepclassmembers class android.widget.ArrayAdapter { java.lang.Object getItem(int); }
-keepclassmembers class org.acra.collections.ImmutableSet { boolean isEmpty(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.DeNineManga { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.widget.GridView { android.view.View makeAndAddView(int,int,boolean,int,boolean,int); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setVariablePadding(boolean); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.ArrayList access$100(android.widget.ArrayAdapter); }
-keepclassmembers class android.widget.ArrayAdapter { int getCount(); }
-keepclassmembers class android.widget.ArrayAdapter { java.lang.Object access$200(android.widget.ArrayAdapter); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.List access$300(android.widget.ArrayAdapter); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftOf(int); }
-keepclassmembers class android.text.Layout { int getOffsetToRightOf(int); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { void <init>(); }
-keepclassmembers class android.view.View$1 { void <init>(android.view.View,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { android.support.v7.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setConstantSize(boolean); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.ArrayList access$102(android.widget.ArrayAdapter,java.util.ArrayList); }
-keepclassmembers class android.widget.ImageView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.List access$302(android.widget.ArrayAdapter,java.util.List); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isConstantSize(); }
-keepclassmembers class android.widget.ImageView { boolean hasOverlappingRendering(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { void onDestroyActionMode(android.view.ActionMode); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu); }
-keepclassmembers class android.widget.ImageView { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantWidth(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantHeight(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { void setEndActionModeListener(ar.rulosoft.mimanganu.adapters.ServerRecAdapter$OnEndActionModeListener); }
-keepclassmembers class android.widget.GridView { void setSelection(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumWidth(); }
-keepclassmembers class android.widget.ImageView { void setAdjustViewBounds(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { void setOnServerClickListener(ar.rulosoft.mimanganu.adapters.ServerRecAdapter$OnServerClickListener); }
-keepclassmembers class android.widget.ImageView { void setMaxWidth(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { boolean startActionMode(); }
-keepclassmembers class android.widget.ImageView { android.graphics.drawable.Drawable getDrawable(); }
-keepclassmembers class android.text.Layout { boolean shouldClampCursor(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumHeight(); }
-keepclassmembers class android.widget.ImageView { void setMaxHeight(int); }
-keepclassmembers class android.widget.GridView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter { void toggleSelection(int); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView); }
-keepclassmembers class android.widget.GridView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ListView$FocusSelector { android.widget.ListView$FocusSelector setup(int,int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(); }
-keepclassmembers class android.widget.ImageView { void setImageResource(int); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verify(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.widget.GridView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView,android.widget.ListView$1); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setExitFadeDuration(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setEnterFadeDuration(int); }
-keepclassmembers class android.widget.ImageView { void setImageDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { java.util.List getMetadataList(); }
-keepclassmembers class okhttp3.CacheControl { int maxStaleSeconds(); }
-keepclassmembers class okhttp3.CacheControl { boolean isPublic(); }
-keepclassmembers class okhttp3.CacheControl { int maxAgeSeconds(); }
-keepclassmembers class okhttp3.CacheControl { int minFreshSeconds(); }
-keepclassmembers class android.widget.ImageView { void applyImageTint(); }
-keepclassmembers class okhttp3.CacheControl { boolean isPrivate(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class okhttp3.CacheControl { boolean noStore(); }
-keepclassmembers class okhttp3.CacheControl { boolean onlyIfCached(); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(); }
-keepclassmembers class okhttp3.CacheControl { java.lang.String toString(); }
-keepclassmembers class android.widget.ImageView { void setSelected(boolean); }
-keepclassmembers class android.widget.GridView { boolean commonKey(int,int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable getDrawable(); }
-keepclassmembers class android.widget.ImageView { void setImageMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.InputEvent$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void access$000(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class okhttp3.CacheControl { boolean noCache(); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { void <init>(); }
-keepclassmembers class java.lang.ArithmeticException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class android.view.animation.Animation$3 { void <init>(android.view.animation.Animation); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21$SharedElementCallbackImpl { void <init>(android.support.v4.app.ActivityCompatApi21$SharedElementCallback21); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.net.Uri$AbstractPart { java.lang.String getDecoded(); }
-keepclassmembers class android.net.Uri$AbstractPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { void setEnabled(boolean); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ListViewCompat$GateKeeperDrawable { boolean setState(int[]); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.ImageView { void updateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getOpacity(); }
-keepclassmembers class android.widget.ImageView { void resizeFromDrawable(); }
-keepclassmembers class android.widget.ImageView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.view.DragEvent$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.text.style.SubscriptSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$3 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment,java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void clearMutated(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$PagerObserver { void <init>(fr.castorflex.android.verticalviewpager.VerticalViewPager); }
-keepclassmembers class org.acra.collector.LogCatCollector { java.lang.String streamToString(java.io.InputStream,com.android.internal.util.Predicate,int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$PagerObserver { void <init>(fr.castorflex.android.verticalviewpager.VerticalViewPager,fr.castorflex.android.verticalviewpager.VerticalViewPager$1); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources,android.graphics.drawable.ScaleDrawable$1); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$PagerObserver { void onInvalidated(); }
-keepclassmembers class android.widget.ImageView { int resolveAdjustedSize(int,int,int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$PagerObserver { void onChanged(); }
-keepclassmembers class libcore.net.url.JarHandler { void <init>(); }
-keepclassmembers class okio.Okio$2 { void <init>(okio.Timeout,java.io.InputStream); }
-keepclassmembers class android.widget.ImageView { boolean setFrame(int,int,int,int); }
-keepclassmembers class okio.Okio$2 { void close(); }
-keepclassmembers class android.os.Bundle$1 { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { java.lang.String getSystemId(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void resetDocumentLocator(java.lang.String,java.lang.String); }
-keepclassmembers class okio.Okio$2 { okio.Timeout timeout(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$1 { void <init>(android.graphics.drawable.DrawableContainer); }
-keepclassmembers class android.os.StrictMode$StrictModeNetworkViolation { void <init>(int); }
-keepclassmembers class android.text.Layout { void access$000(android.text.Layout,int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.text.Layout { java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class); }
-keepclassmembers class android.widget.GridView { void setGravity(int); }
-keepclassmembers class android.text.Layout { char getEllipsisChar(android.text.TextUtils$TruncateAt); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void unread(java.io.PushbackReader,int); }
-keepclassmembers class android.widget.GridView { void setHorizontalSpacing(int); }
-keepclassmembers class android.widget.GridView { void setStretchMode(int); }
-keepclassmembers class android.widget.GridView { void setColumnWidth(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <init>(); }
-keepclassmembers class android.widget.GridView { void setVerticalSpacing(int); }
-keepclassmembers class android.widget.GridView { void setNumColumns(int); }
-keepclassmembers class android.text.style.SuggestionSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.ImageView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.widget.ImageView { void drawableStateChanged(); }
-keepclassmembers class android.text.style.SuggestionSpan$1 { void <init>(); }
-keepclassmembers class android.widget.GridView { int getNumColumns(); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean isEmpty(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { int size(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean remove(java.lang.Object); }
-keepclassmembers class android.widget.ImageView { int getBaseline(); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void init(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { byte[] getEncoded(); }
-keepclassmembers class android.widget.GridView { android.widget.Adapter getAdapter(); }
-keepclassmembers class okhttp3.HttpUrl { void <init>(okhttp3.HttpUrl$Builder); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,boolean,org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$1 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$2 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$2 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void mark(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void startCDATA(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$2 { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class android.widget.ImageView { void setVisibility(int); }
-keepclassmembers class android.widget.ImageView { void onAttachedToWindow(); }
-keepclassmembers class android.widget.ImageView { void onDetachedFromWindow(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void <init>(byte[]); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout clearTimeout(); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout clearDeadline(); }
-keepclassmembers class okio.ForwardingTimeout { long deadlineNanoTime(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,byte[],int); }
-keepclassmembers class okio.ForwardingTimeout { boolean hasDeadline(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { int getTag(); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout deadlineNanoTime(long); }
-keepclassmembers class java.lang.RealToString$1 { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl$1 { void <init>(android.app.FragmentManagerImpl); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout delegate(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.SingleDownload$Status { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { boolean checkTag(int); }
-keepclassmembers class java.lang.RealToString$1 { java.lang.Object initialValue(); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout timeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.support.v7.widget.ViewUtils { boolean isLayoutRtl(android.view.View); }
-keepclassmembers class android.support.v7.preference.PreferenceRecyclerViewAccessibilityDelegate$1 { void <init>(android.support.v7.preference.PreferenceRecyclerViewAccessibilityDelegate); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1$1$1$2$1 { void <init>(ar.rulosoft.mimanganu.utils.UpdateUtil$1$1$1$2); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String percentDecode(java.lang.String,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page { java.lang.String getPath(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.text.Selection$END { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$1 { void <init>(android.graphics.Rect); }
-keepclassmembers class android.text.Selection$END { void <init>(android.text.Selection$1); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$1 { void <init>(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$MenuBuilderCallback { void <init>(android.support.v7.widget.ActionMenuView); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$MenuBuilderCallback { void onMenuModeChange(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$MenuBuilderCallback { boolean onMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.view.animation.AnimationSet { void reset(); }
-keepclassmembers class android.view.ViewTreeObserver { void <init>(); }
-keepclassmembers class android.view.animation.AnimationSet { java.util.List getAnimations(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase$AppCompatWindowCallbackBase { void <init>(android.support.v7.app.AppCompatDelegateImplBase,android.view.Window$Callback); }
-keepclassmembers class android.widget.FastScroller$6 { void <init>(java.lang.String); }
-keepclassmembers class android.view.animation.AnimationSet { android.view.animation.Animation clone(); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(android.view.View,int); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Integer get(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$8 { void <init>(ar.rulosoft.mimanganu.ReaderFragment,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { void close(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { void <init>(java.net.PlainSocketImpl); }
-keepclassmembers class okhttp3.HttpUrl { int hashCode(); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String host(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int available(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int read(byte[],int,int); }
-keepclassmembers class android.view.ViewTreeObserver { void removeGlobalOnLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$3 { void <init>(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int read(); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class okhttp3.HttpUrl { int port(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$SearchForNewChapters access$000(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { android.widget.ListView access$100(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread access$1002(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$SearchForNewChapters access$002(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.MangaFragment$SearchForNewChapters); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { android.content.SharedPreferences access$1300(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread access$1000(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { int access$1800(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { int access$1500(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { int access$1400(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase { void <init>(); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl resolve(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { int access$1502(ar.rulosoft.mimanganu.MangaFragment,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { int access$1802(ar.rulosoft.mimanganu.MangaFragment,int); }
-keepclassmembers class android.view.ViewTreeObserver { boolean isAlive(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$GetPagesTask access$200(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void ackSettings(); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { int access$2102(ar.rulosoft.mimanganu.MangaFragment,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { int access$2100(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$GetPagesTask access$202(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.MangaFragment$GetPagesTask); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String scheme(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity$1 { void <init>(ar.rulosoft.mimanganu.MainActivity); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { int access$2502(ar.rulosoft.mimanganu.MangaFragment,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { int access$2802(ar.rulosoft.mimanganu.MangaFragment,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { int access$2500(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class android.app.SharedElementCallback$1 { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.adapters.ChapterAdapter access$400(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { int access$2800(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void execute(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$RemoveChapters access$800(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead access$600(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$DeleteImages access$700(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$ResetChapters access$902(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.MangaFragment$ResetChapters); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$DeleteImages access$702(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.MangaFragment$DeleteImages); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead access$602(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$RemoveChapters access$802(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.MangaFragment$RemoveChapters); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { ar.rulosoft.mimanganu.MangaFragment$ResetChapters access$900(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class java.util.Collections$EmptyMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.text.style.StyleSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.Collections$EmptyMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Collections$EmptyMap { java.util.Set entrySet(); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void <init>(); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(java.util.Collections$1); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class rapid.decoder.NullBitmapLoader { void <init>(); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources$ColorStateListCacheEntry { void <init>(android.content.res.ColorStateList,android.content.res.Configuration); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void ping(boolean,int,int); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void jumpToCurrentState(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangasRecAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void priority(int,int,int,boolean); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class rapid.decoder.NullBitmapLoader { rapid.decoder.BitmapDecoder useBuiltInDecoder(boolean); }
-keepclassmembers class android.content.ContentValues { void put(java.lang.String,java.lang.String); }
-keepclassmembers class rapid.decoder.NullBitmapLoader { rapid.decoder.BitmapLoader useBuiltInDecoder(boolean); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void setHotspot(float,float); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void pushPromise(int,int,java.util.List); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable { void rstStream(int,okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class android.content.ContentValues { void put(java.lang.String,java.lang.Integer); }
-keepclassmembers class android.content.ContentValues { void put(java.lang.String,java.lang.Long); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { boolean setState(int[]); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransition$FragmentContainerTransition { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga { android.app.Activity access$100(ar.rulosoft.mimanganu.utils.AsyncAddManga); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga { android.app.ProgressDialog access$000(ar.rulosoft.mimanganu.utils.AsyncAddManga); }
-keepclassmembers class android.support.v7.graphics.drawable.DrawableWrapper { void setWrappedDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.ContentValues { void put(java.lang.String,java.lang.Float); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga { int access$200(ar.rulosoft.mimanganu.utils.AsyncAddManga); }
-keepclassmembers class org.acra.sender.SenderServiceStarter { void <init>(android.content.Context,org.acra.config.ACRAConfiguration); }
-keepclassmembers class android.content.ContentValues { java.lang.Object get(java.lang.String); }
-keepclassmembers class android.content.ContentValues { int size(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getRealDisplay(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.content.ContentValues { void put(java.lang.String,java.lang.Boolean); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void show(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void onDetached(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void hide(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.widget.AbsSpinner { void resetList(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.AbsSpinner { int getChildHeight(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { void onDetach(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { void <init>(java.util.Date,java.util.Date); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date getNotBefore(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date access$000(org.apache.harmony.security.x509.Validity); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date getNotAfter(); }
-keepclassmembers class android.widget.AbsSpinner { void setSelection(int); }
-keepclassmembers class android.widget.AbsSpinner { int getChildWidth(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date access$100(org.apache.harmony.security.x509.Validity); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1ValueCollection { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.widget.AbsSpinner { void requestLayout(); }
-keepclassmembers class android.widget.TextView$1 { void <init>(android.widget.TextView,java.lang.CharSequence); }
-keepclassmembers class android.widget.AbsSpinner { int getCount(); }
-keepclassmembers class android.content.ContentValues { java.util.Set keySet(); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.AbsSpinner { android.widget.SpinnerAdapter getAdapter(); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.util.LruCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.LruCache { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.LruCache { void evictAll(); }
-keepclassmembers class android.widget.AbsSpinner { android.widget.Adapter getAdapter(); }
-keepclassmembers class android.util.LruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.widget.EditText { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class android.widget.ListView { int getHeaderViewsCount(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$1 { void <init>(int); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperGingerbread { int getSmallestScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.text.TextUtils$1 { void <init>(); }
-keepclassmembers class android.widget.EditText { java.lang.CharSequence getText(); }
-keepclassmembers class android.graphics.Bitmap$Config { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.widget.ListView { int getFooterViewsCount(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <init>(); }
-keepclassmembers class android.widget.ListView { void addHeaderView(android.view.View); }
-keepclassmembers class android.widget.ListView { android.widget.ListAdapter getAdapter(); }
-keepclassmembers class android.widget.ListView { void resetList(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment { void onPause(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$4 { void execute(); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$4 { void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$3 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void addActionBarHideOffset(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void postAddActionBarHideOffset(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void postRemoveActionBarHideOffset(); }
-keepclassmembers class android.text.method.BaseMovementMethod { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void removeActionBarHideOffset(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class okhttp3.Headers { void <init>(java.lang.String[]); }
-keepclassmembers class org.acra.builder.ReportExecutor { void <init>(android.content.Context,org.acra.config.ACRAConfiguration,org.acra.collector.CrashReportDataFactory,java.lang.Thread$UncaughtExceptionHandler,org.acra.builder.ReportPrimer,org.acra.util.ProcessFinisher); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.acra.builder.ReportExecutor { android.content.Context access$100(org.acra.builder.ReportExecutor); }
-keepclassmembers class org.acra.builder.ReportExecutor { org.acra.config.ACRAConfiguration access$200(org.acra.builder.ReportExecutor); }
-keepclassmembers class org.acra.builder.ReportExecutor { void access$400(org.acra.builder.ReportExecutor,org.acra.builder.ReportBuilder,java.io.File,boolean); }
-keepclassmembers class java.util.EnumMap$EnumMapIterator { void <init>(java.util.MapEntry$Type,java.util.EnumMap); }
-keepclassmembers class android.support.v4.app.FragmentController { void <init>(android.support.v4.app.FragmentHostCallback); }
-keepclassmembers class android.support.v4.app.FragmentController { void attachHost(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchCreate(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean hasDependencies(android.view.View); }
-keepclassmembers class okhttp3.Headers { java.lang.String get(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void haltActionBarHideOffsetAnimations(); }
-keepclassmembers class android.view.inputmethod.ComposingText { void <init>(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray$Access { void <init>(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class android.view.View$8 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchResume(); }
-keepclassmembers class android.support.v4.app.FragmentController { void dispatchReallyStop(); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$Impl { void <init>(); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.app.SupportActivity$ExtraData { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentController { void doLoaderStart(); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.FragmentController { void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.v4.app.FragmentController { void doLoaderStop(boolean); }
-keepclassmembers class android.support.v4.app.FragmentController { boolean execPendingActions(); }
-keepclassmembers class android.support.v4.app.FragmentController { android.support.v4.app.Fragment findFragmentByWho(java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v4.app.FragmentController { android.support.v4.app.FragmentManager getSupportFragmentManager(); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getTopLine(android.widget.TextView); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.widget.ScrollView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.support.v4.app.FragmentController { void restoreAllState(android.os.Parcelable,android.support.v4.app.FragmentManagerNonConfig); }
-keepclassmembers class android.support.v4.app.FragmentController { void restoreLoaderNonConfig(android.support.v4.util.SimpleArrayMap); }
-keepclassmembers class android.support.v4.app.FragmentController { android.os.Parcelable saveAllState(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState { void copyFrom(android.support.v7.widget.RecyclerView$SavedState); }
-keepclassmembers class android.widget.ScrollView { void setFillViewport(boolean); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$1 { void onHidden(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$1 { void <init>(android.support.design.widget.FloatingActionButton,android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor$1 { void <init>(android.os.AsyncTask$SerialExecutor,java.lang.Runnable); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.widget.ListView { boolean recycleOnMeasure(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor$1 { void run(); }
-keepclassmembers class rapid.decoder.StreamBitmapLoader { android.graphics.BitmapRegionDecoder createBitmapRegionDecoder(); }
-keepclassmembers class android.widget.ScrollView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.widget.ScrollView { void recycleVelocityTracker(); }
-keepclassmembers class android.widget.ScrollView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class rapid.decoder.StreamBitmapLoader { android.graphics.Bitmap decode(android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.support.design.widget.CheckableImageButton { void setChecked(boolean); }
-keepclassmembers class android.database.DataSetObservable { void <init>(); }
-keepclassmembers class rapid.decoder.StreamBitmapLoader { java.io.InputStream getInputStream(); }
-keepclassmembers class android.widget.ScrollView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class rapid.decoder.StreamBitmapLoader { void onDecodingStarted(boolean); }
-keepclassmembers class rapid.decoder.StreamBitmapLoader { void setCacheOutputStream(rapid.decoder.cache.TransactionOutputStream); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollTop(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { void onWindowVisibilityChanged(int); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment$1 { void <init>(ar.rulosoft.custompref.PreferenceListDirFragment); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.util.ArraySet { void <init>(android.util.ArraySet); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.util.ArraySet { void ensureCapacity(int); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class org.acra.builder.ReportExecutor { boolean isEnabled(); }
-keepclassmembers class org.acra.builder.ReportExecutor { void setEnabled(boolean); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater,int,java.util.zip.ZipEntry); }
-keepclassmembers class android.util.ArraySet { void <init>(); }
-keepclassmembers class android.view.Choreographer$FrameHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.util.ArraySet { java.lang.Object valueAt(int); }
-keepclassmembers class java.net.InterfaceAddress { void <init>(java.net.Inet4Address,java.net.Inet4Address,java.net.Inet4Address); }
-keepclassmembers class android.view.Choreographer$FrameHandler { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class java.net.InterfaceAddress { void <init>(java.net.Inet6Address,short); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void <init>(android.support.graphics.drawable.PathParser$PathDataNode); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void releaseTempRect(android.graphics.Rect); }
-keepclassmembers class android.os.MessageQueue { boolean hasMessages(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class java.util.Locale$Builder { boolean isValidVariantSubtag(java.lang.String); }
-keepclassmembers class android.util.ArraySet { int size(); }
-keepclassmembers class android.support.graphics.drawable.PathParser$PathDataNode { void <init>(char,float[]); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int getLayerType(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int getMeasuredState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { android.graphics.Matrix getMatrix(android.view.View); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int resolveKeylineGravity(int); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { float getScaleX(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int combineMeasuredStates(int,int); }
-keepclassmembers class android.widget.ScrollView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void jumpDrawablesToCurrentState(android.view.View); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { int resolveAnchoredChildGravity(int); }
-keepclassmembers class android.os.MessageQueue { void removeMessages(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setAlpha(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { float getTranslationY(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { void <init>(okhttp3.internal.cache.InternalCache); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setScaleX(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setTranslationY(android.view.View,float); }
-keepclassmembers class java.net.URLEncoder { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.MessageQueue { void removeMessages(android.os.Handler,java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void recycle(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { void setScaleY(android.view.View,float); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { int getChildCount(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void sort(java.util.ArrayList); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi21$SharedElementCallback21 { void <init>(); }
-keepclassmembers class android.os.MessageQueue { void removeCallbacksAndMessages(android.os.Handler,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void clear(); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1100(java.lang.String,boolean); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1000(java.lang.String,boolean); }
-keepclassmembers class java.util.Calendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class java.util.Locale$Builder { boolean access$1300(java.lang.String); }
-keepclassmembers class android.os.MessageQueue { void removeAllMessagesLocked(); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1200(java.lang.String); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1400(java.lang.String,boolean); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Response stripBody(okhttp3.Response); }
-keepclassmembers class java.util.Calendar { int get(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$PopBackStackState { void <init>(android.support.v4.app.FragmentManagerImpl,java.lang.String,int,int); }
-keepclassmembers class java.util.Calendar { void complete(); }
-keepclassmembers class java.util.AbstractSet { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$PopBackStackState { boolean generateOps(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.widget.ScrollView { void doScrollY(int); }
-keepclassmembers class android.widget.ScrollView { boolean isOffScreen(android.view.View); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void drawableStateChanged(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.InitGlobals { void <init>(); }
-keepclassmembers class java.util.Calendar { int getMinimalDaysInFirstWeek(); }
-keepclassmembers class java.util.Calendar { long getTimeInMillis(); }
-keepclassmembers class java.util.Calendar { java.util.TimeZone getTimeZone(); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplIcs { void <init>(); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplIcs { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class android.widget.ScrollView { int computeVerticalScrollOffset(); }
-keepclassmembers class java.util.Calendar { boolean isLenient(); }
-keepclassmembers class java.util.Hashtable$Values { void <init>(java.util.Hashtable); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.AttributesImpl atts(); }
-keepclassmembers class java.util.Calendar { void set(int,int); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.Element next(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void setNext(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.widget.ListView { android.view.View makeAndAddView(int,int,boolean,int,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String namespace(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String localName(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { int model(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { int flags(); }
-keepclassmembers class java.util.Calendar { int getFirstDayOfWeek(); }
-keepclassmembers class java.util.Calendar { void setFirstDayOfWeek(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.ElementType parent(); }
-keepclassmembers class java.util.Calendar { void setLenient(boolean); }
-keepclassmembers class java.util.Calendar { void setMinimalDaysInFirstWeek(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { boolean canContain(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.Calendar { void setTime(java.util.Date); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void setAttribute(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.content.ContextCompatApi21 { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { boolean hasNext(); }
-keepclassmembers class android.support.v4.content.ContextCompatApi21 { java.io.File getNoBackupFilesDir(android.content.Context); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getChildRect(android.view.View,boolean,android.graphics.Rect); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { void <init>(java.util.Collections$UnmodifiableCollection); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String name(); }
-keepclassmembers class java.util.Calendar { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class java.util.LinkedList$Link { void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { boolean hasNext(); }
-keepclassmembers class android.widget.ScrollView { void scrollToChild(android.view.View); }
-keepclassmembers class android.support.v4.util.MapCollections$MapIterator { java.lang.Object next(); }
-keepclassmembers class android.app.FragmentState { void <init>(android.app.Fragment); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { java.lang.Object next(); }
-keepclassmembers class java.util.Hashtable$Values { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void preclose(); }
-keepclassmembers class android.widget.ScrollView { boolean scrollToChildRect(android.graphics.Rect,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { boolean isPreclosed(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatBase$FactoryWrapper { void <init>(android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class java.lang.NoClassDefFoundError { void <init>(java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void getDescendantRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.io.StringReader { void <init>(java.lang.String); }
-keepclassmembers class rapid.decoder.LazyInputStream { void <init>(rapid.decoder.StreamOpener); }
-keepclassmembers class java.io.StringReader { void close(); }
-keepclassmembers class android.widget.ScrollView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class java.io.StringReader { boolean isClosed(); }
-keepclassmembers class rapid.decoder.LazyInputStream { void close(); }
-keepclassmembers class java.net.URI { java.lang.String getRawSchemeSpecificPart(); }
-keepclassmembers class android.widget.ScrollView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class java.net.URI { java.lang.String getHost(); }
-keepclassmembers class java.net.URI { java.lang.String getScheme(); }
-keepclassmembers class android.widget.ScrollView { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.ScrollView { void requestLayout(); }
-keepclassmembers class android.widget.ListView { boolean canAnimate(); }
-keepclassmembers class android.text.util.Linkify$3 { void <init>(); }
-keepclassmembers class android.widget.ListView { void setSelection(int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible); }
-keepclassmembers class java.security.SignatureException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ScrollView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.net.URI { boolean isAbsolute(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { int getState(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetState(int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <init>(); }
-keepclassmembers class android.system.StructPollfd { void <init>(); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void unparkSuccessor(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setState(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doReleaseShared(); }
-keepclassmembers class android.widget.ScrollView { void endDrag(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setHeadAndPropagate(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int); }
-keepclassmembers class android.widget.ListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ScrollView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class java.text.DecimalFormat { boolean isParseBigDecimal(); }
-keepclassmembers class java.text.DecimalFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class java.text.DecimalFormat { boolean isParseIntegerOnly(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void cancelAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.SubManga { boolean hasFilteredNavigation(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.SubManga { boolean hasList(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean shouldParkAfterFailedAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.widget.ListView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ScrollView { void onStopNestedScroll(android.view.View); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean parkAndCheckInterrupt(); }
-keepclassmembers class java.text.DecimalFormat { void setGroupingUsed(boolean); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl { void <init>(); }
-keepclassmembers class java.text.DecimalFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompatICS { boolean hasPermanentMenuKey(android.view.ViewConfiguration); }
-keepclassmembers class java.text.DecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class java.nio.CharSequenceAdapter { void <init>(java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$6 { void <init>(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Super { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Super { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class java.text.DecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean acquireQueued(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$2 { void <init>(android.support.design.widget.ValueAnimatorCompat,android.support.design.widget.ValueAnimatorCompat$AnimatorListener); }
-keepclassmembers class android.support.v4.text.ICUCompatIcs { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class android.support.v7.app.AlertController$3 { void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.SubManga { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v7.app.AlertController$3 { void run(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$2 { void onAnimationCancel(); }
-keepclassmembers class java.lang.ref.Reference { void clear(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$2 { void onAnimationStart(); }
-keepclassmembers class java.lang.ref.Reference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$2 { void onAnimationEnd(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object get(); }
-keepclassmembers class android.support.v4.app.Fragment$1 { void <init>(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.Fragment$1 { void run(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquire(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void <init>(); }
-keepclassmembers class android.support.v7.widget.ButtonBarLayout { boolean isStacked(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { void copyBounds(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean release(int); }
-keepclassmembers class android.util.MathUtils { int constrain(int,int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setDither(boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean releaseShared(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean hasQueuedThreads(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperHoneycombMr2 { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.Drawable { void setChangingConfigurations(int); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperHoneycombMr2 { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.graphics.Point$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { void invalidateSelf(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelperHoneycombMr2 { int getSmallestScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.Drawable { void scheduleSelf(java.lang.Runnable,long); }
-keepclassmembers class android.graphics.drawable.Drawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 { void <init>(android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener); }
-keepclassmembers class android.graphics.drawable.Drawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class android.support.v4.app.BackStackRecord$Op { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLayoutDirection(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 { void run(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.graphics.drawable.Drawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void onMeasureChild(android.view.View,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.Drawable { void clearColorFilter(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.Drawable { void setLayoutDirection(int); }
-keepclassmembers class okhttp3.internal.Util$2 { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isProjected(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setState(int[]); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean isOnSyncQueue(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { android.os.IBinder asBinder(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.Drawable { int[] getState(); }
-keepclassmembers class android.graphics.drawable.Drawable { void jumpToCurrentState(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean findNodeFromTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setLevel(int); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLevel(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isVisible(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { void SetHost(java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean transferAfterCancelledWait(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean transferForSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.graphics.drawable.Drawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isAutoMirrored(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean canApplyTheme(); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { int resolveOpacity(int,int); }
-keepclassmembers class android.widget.ListView { boolean arrowScroll(int); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicWidth(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$1 { void <init>(android.support.v4.app.FragmentManagerImpl); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$1 { void run(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumHeight(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumWidth(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter { void access$000(android.support.v7.preference.PreferenceGroupAdapter); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.graphics.drawable.Drawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter { void addPreferenceClassName(android.support.v7.preference.Preference); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetWaitStatus(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.graphics.drawable.Drawable { void clearMutated(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetNext(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.widget.ListView { boolean arrowScrollImpl(int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { void <init>(java.util.Map$Entry); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void startActivities(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { java.lang.Object getKey(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(android.os.AsyncTask$1); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { void <init>(android.content.Context); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void removePreDrawListener(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { java.lang.Object getValue(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView$1 { void <init>(android.widget.Editor$InsertionHandleView); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { boolean hasList(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean hasEmbeddedTabs(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaPanda { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer,boolean); }
-keepclassmembers class android.widget.ListView { int getArrowScrollPreviewLength(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean enableHomeButtonByDefault(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus getConnectionStatus(android.content.Context); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float); }
-keepclassmembers class android.support.graphics.drawable.TypedArrayUtils { int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus getConnectionStatus(android.content.Context,boolean); }
-keepclassmembers class java.io.PrintWriter { void flush(); }
-keepclassmembers class java.io.PrintWriter { void close(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout { void setVisibility(int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { void <init>(); }
-keepclassmembers class java.io.PrintWriter { void print(java.lang.Object); }
-keepclassmembers class java.io.PrintWriter { void println(); }
-keepclassmembers class java.io.PrintWriter { void print(int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { boolean isMobileConnected(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { boolean isWifiConnected(android.content.Context); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromPath(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean needMirroring(); }
-keepclassmembers class java.io.PrintWriter { void print(boolean); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.String); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.Object); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.Exception); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int); }
-keepclassmembers class okhttp3.internal.NamedRunnable { void <init>(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.io.PrintWriter { void println(int); }
-keepclassmembers class okhttp3.internal.NamedRunnable { void run(); }
-keepclassmembers class java.io.PrintWriter { void println(boolean); }
-keepclassmembers class java.io.PrintWriter { void write(char[]); }
-keepclassmembers class java.io.PrintWriter { void write(char[],int,int); }
-keepclassmembers class java.io.PrintWriter { void setError(); }
-keepclassmembers class java.io.PrintWriter { void doWrite(char[],int,int); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void <init>(android.widget.TextView,int,int); }
-keepclassmembers class android.transition.AutoTransition { void <init>(); }
-keepclassmembers class java.lang.VirtualMachineError { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class java.io.PrintWriter { void write(java.lang.String); }
-keepclassmembers class android.graphics.Shader { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { void <init>(); }
-keepclassmembers class android.graphics.Shader { void init(long); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void fixDirection(boolean); }
-keepclassmembers class android.graphics.Shader { boolean getLocalMatrix(android.graphics.Matrix); }
-keepclassmembers class android.graphics.Shader { void setLocalMatrix(android.graphics.Matrix); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { void connected(okhttp3.Route); }
-keepclassmembers class android.widget.Editor$ErrorPopup { int getResourceId(int,int); }
-keepclassmembers class android.util.Pools$SynchronizedPool { java.lang.Object acquire(); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { void failed(okhttp3.Route); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { boolean hasList(); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { boolean shouldPostpone(okhttp3.Route); }
-keepclassmembers class android.util.Pools$SynchronizedPool { boolean release(java.lang.Object); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void update(int,int,int,int,boolean); }
-keepclassmembers class android.graphics.Shader { long getNativeInstance(); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.String); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { void <init>(); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplBase { void navigateUpTo(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class java.io.PrintWriter { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void <init>(android.widget.RemoteViews,int,android.widget.RemoteViews); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.transition.Transition$EpicenterCallback { void <init>(); }
-keepclassmembers class android.support.v7.preference.Preference$BaseSavedState$1 { void <init>(); }
-keepclassmembers class java.util.IllegalFormatWidthException { void <init>(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.IllegalFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean canApplyTheme(); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaFox { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void clearColorFilter(); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <init>(boolean); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void <init>(java.lang.Object,boolean); }
-keepclassmembers class dalvik.system.SocketTagger { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean casNext(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress { void <init>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void tryCancel(java.lang.Object); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean casItem(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.TextView$3 { void <init>(android.widget.TextView); }
-keepclassmembers class android.widget.TextView$3 { void run(); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype$1 { void <init>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean isCancelled(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$8 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean isOffList(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.Context,int); }
-keepclassmembers class java.security.Security$SecurityDoor { java.util.List getAliases(java.security.Provider$Service); }
-keepclassmembers class java.security.Security$SecurityDoor { void <init>(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$6 { void <init>(); }
-keepclassmembers class java.security.Security$SecurityDoor { void renumProviders(); }
-keepclassmembers class java.security.Security$SecurityDoor { void <init>(java.security.Security$1); }
-keepclassmembers class java.util.ComparableTimSort { void sort(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ServerFilter$FilterType { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getMinimumHeight(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getMinimumWidth(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int getOpacity(); }
-keepclassmembers class org.acra.builder.ReportExecutor$2 { void <init>(org.acra.builder.ReportExecutor,org.acra.builder.ReportExecutor$TimeHelper,org.acra.builder.ReportBuilder,java.io.File,boolean); }
-keepclassmembers class java.security.KeyFactory { void <init>(java.security.KeyFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { int[] getState(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { java.lang.Object getTargetByName(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver$ConnectionStatus { void <init>(java.lang.String,int); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void invalidateSelf(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean isAutoMirrored(); }
-keepclassmembers class java.security.KeyFactory { java.security.PublicKey generatePublic(java.security.spec.KeySpec); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean isStateful(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void jumpToCurrentState(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAlpha(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean onStateChange(int[]); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAutoMirrored(boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$SavedState { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setChangingConfigurations(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setAllowCaching(boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$SavedState { void <init>(android.support.v7.widget.LinearLayoutManager$SavedState); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$SavedState { void invalidateAnchor(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setFilterBitmap(boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$SavedState { boolean hasValidAnchor(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setHotspot(float,float); }
-keepclassmembers class java.util.Locale { java.lang.String getCountry(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean setState(int[]); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]); }
-keepclassmembers class android.view.Display { void getRectSize(android.graphics.Rect); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayLanguage(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean executePendingTransactions(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void reverse(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void start(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { boolean canReverse(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void stop(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean popBackStackImmediate(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.support.v7.view.menu.MenuBuilder access$100(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.support.v7.view.menu.MenuBuilder access$000(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.support.v7.view.menu.MenuBuilder access$300(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.support.v7.view.menu.MenuBuilder access$400(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { android.support.v7.view.menu.MenuView access$500(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.widget.ListView { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.app.FragmentManagerImpl { int getBackStackEntryCount(); }
-keepclassmembers class android.widget.ListView { void drawDivider(android.graphics.Canvas,android.graphics.Rect,int); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean filterLeftoverView(android.view.ViewGroup,int); }
-keepclassmembers class android.widget.ListView { android.graphics.drawable.Drawable getDivider(); }
-keepclassmembers class java.util.Locale { java.lang.String getLanguage(); }
-keepclassmembers class java.util.Locale { java.lang.String getVariant(); }
-keepclassmembers class java.util.Locale { java.lang.String getScript(); }
-keepclassmembers class java.util.Locale { java.lang.String toLanguageTag(); }
-keepclassmembers class android.ddm.DdmHandleThread { void <init>(); }
-keepclassmembers class android.widget.ListView { int getDividerHeight(); }
-keepclassmembers class android.widget.ListView { void setDivider(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ListView { void setDividerHeight(int); }
-keepclassmembers class android.support.v7.app.AlertController$AlertParams$1 { void <init>(android.support.v7.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],android.support.v7.app.AlertController$RecycleListView); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void <init>(android.content.res.XmlBlock,long,android.content.res.XmlBlock); }
-keepclassmembers class android.widget.ListView { void setOverscrollHeader(android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.util.Locale); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.util.Locale); }
-keepclassmembers class android.view.Display { void updateDisplayInfoLocked(); }
-keepclassmembers class android.widget.ListView { android.view.View findViewTraversal(int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayCountry(java.util.Locale,java.util.Locale); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayLanguage(java.util.Locale,java.util.Locale); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayVariant(java.util.Locale,java.util.Locale); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencySymbol(java.util.Locale,java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getDepth(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getText(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayScript(java.util.Locale,java.util.Locale); }
-keepclassmembers class libcore.icu.ICU { java.util.Locale addLikelySubtags(java.util.Locale); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getLineNumber(); }
-keepclassmembers class android.widget.ListView { void setOverscrollFooter(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getEventType(); }
-keepclassmembers class java.util.Locale { java.lang.String toString(); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getName(); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Header { void <init>(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Header { int access$900(android.text.HtmlToSpannedConverter$Header); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeCount(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean isOverflowMenuShowing(); }
-keepclassmembers class android.animation.AnimatorInflater { int getChangingConfigs(android.content.res.Resources,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void jumpToCurrentState(); }
-keepclassmembers class android.app.FragmentManagerImpl { android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean hideSubMenus(); }
-keepclassmembers class android.support.v7.widget.FitWindowsFrameLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$LoadMangasTask { void <init>(ar.rulosoft.mimanganu.ServerListFragment,ar.rulosoft.mimanganu.ServerListFragment$1); }
-keepclassmembers class android.widget.Editor$InputContentType { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void performPendingDeferredStart(android.app.Fragment); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void setExpandedActionViewsExclusive(boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void setReserveOverflow(boolean); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { int getInitialMenuPosition(); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$LoadMangasTask { java.util.List doInBackground(java.lang.Void[]); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { boolean shouldIncludeItem(int,android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter { void setMenuView(android.support.v7.widget.ActionMenuView); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$LoadMangasTask { void onPreExecute(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeNameResource(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutChunkResult { void <init>(); }
-keepclassmembers class okhttp3.internal.Util$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Locale { boolean isValidBcp47Alphanum(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$LayoutChunkResult { void resetInternal(); }
-keepclassmembers class okhttp3.internal.Util$1 { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ListView { android.widget.Adapter getAdapter(); }
-keepclassmembers class java.util.HashMap { void <init>(java.util.Map); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 { void <init>(); }
-keepclassmembers class java.util.HashMap { void init(); }
-keepclassmembers class java.util.HashMap { boolean isEmpty(); }
-keepclassmembers class java.util.HashMap { int size(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class java.util.zip.ZipFile$1 { boolean hasMoreElements(); }
-keepclassmembers class java.util.zip.ZipFile$1 { void <init>(java.util.zip.ZipFile,java.util.Iterator); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean canApplyTheme(); }
-keepclassmembers class java.util.zip.ZipFile$1 { java.lang.Object nextElement(); }
-keepclassmembers class android.widget.TextView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeResourceValue(int,int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeIntValue(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class dalvik.system.VMRuntime { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { boolean closeMenuOnSubMenuOpened(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.util.HashMap { void preModify(java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void addMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.CharSequence getPooledString(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.util.HashMap { void putAll(java.util.Map); }
-keepclassmembers class java.util.ArrayDeque$DeqIterator { void <init>(java.util.ArrayDeque); }
-keepclassmembers class java.util.ArrayDeque$DeqIterator { boolean hasNext(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean isStateful(); }
-keepclassmembers class java.util.ArrayDeque$DeqIterator { void <init>(java.util.ArrayDeque,java.util.ArrayDeque$1); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void addLevel(int,int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources,android.graphics.drawable.ClipDrawable$1); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void access$000(android.graphics.drawable.LevelListDrawable$LevelListState); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void clearMutated(); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitAbi(java.lang.String); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class java.util.HashMap { void postRemove(java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(android.app.Fragment); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setAnchorView(android.view.View); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,boolean); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setCallback(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class java.util.Locale { boolean access$000(java.lang.String,int,int); }
-keepclassmembers class android.preference.DialogPreference { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.support.v4.util.LruCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.Locale { boolean access$200(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setForceShowIcon(boolean); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setGravity(int); }
-keepclassmembers class android.preference.DialogPreference { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class java.util.Locale { java.lang.String access$400(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask { void onPostExecute(java.lang.Void); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class java.util.Locale { boolean access$300(java.lang.String); }
-keepclassmembers class android.preference.DialogPreference { void onActivityDestroy(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setHorizontalOffset(int); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setShowTitle(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatIcs$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { boolean hasRelativeRules(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup { void setVerticalOffset(int); }
-keepclassmembers class android.animation.AnimatorSet$Node { void <init>(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask { void onPreExecute(); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompatBase { boolean isLaidOut(android.view.View); }
-keepclassmembers class java.net.UnknownHostException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.util.LruCache { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.HashMap { boolean access$600(java.util.HashMap,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$202(android.animation.AnimatorSet$Node,android.animation.AnimatorSet$Node); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { void <init>(android.util.PathParser$PathDataNode[]); }
-keepclassmembers class android.animation.PathKeyframes$2 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.animation.LayoutTransition$5 { void <init>(android.animation.LayoutTransition,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int[] getRules(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int[] getRules(int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController$3 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$100(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$200(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$300(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$400(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { android.view.View getActionView(android.view.MenuItem); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$102(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { boolean isActionViewExpanded(android.view.MenuItem); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$202(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { android.view.MenuItem setActionView(android.view.MenuItem,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$402(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.content.Context,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { android.view.MenuItem setActionView(android.view.MenuItem,android.view.View); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$200(android.animation.AnimatorSet$Node); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$BaseMenuVersionImpl { void setShowAsAction(android.view.MenuItem,int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { int getOrder(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$302(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.content.Context,int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { android.graphics.drawable.Drawable superGetDrawable(int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int[] access$700(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class libcore.util.ZoneInfo { int getDSTSavings(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void start(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { android.view.animation.Animation getAnimation(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(); }
-keepclassmembers class libcore.util.ZoneInfo { int getRawOffset(); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.Object clone(); }
-keepclassmembers class android.provider.Settings$Global { java.lang.String getString(android.content.ContentResolver,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void start(); }
-keepclassmembers class android.os.Build { long getLong(java.lang.String); }
-keepclassmembers class android.os.Build { java.lang.String access$000(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void stop(); }
-keepclassmembers class android.os.Build { java.lang.String[] access$100(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$1 { void <init>(android.support.v7.view.menu.CascadingMenuPopup); }
-keepclassmembers class android.support.v4.app.ActivityCompat$SharedElementCallback23Impl { void <init>(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$11 { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$11 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$2 { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class java.util.zip.DataFormatException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void reverse(); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder add(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { boolean canReverse(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getOpacity(); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean isStateful(); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder set(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getIntrinsicWidth(); }
-keepclassmembers class java.util.TreeMap$MapIterator { void <init>(java.util.TreeMap,java.util.TreeMap$Node); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.TreeMap$MapIterator { boolean hasNext(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.content.res.CompatibilityInfo$2 { void <init>(); }
-keepclassmembers class java.io.EOFException { void <init>(); }
-keepclassmembers class java.io.EOFException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.reflect.Constructor { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class java.net.ProxySelectorImpl { void <init>(); }
-keepclassmembers class java.net.ProxySelectorImpl { java.util.List select(java.net.URI); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class getDeclaringClass(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class[] getExceptionTypes(); }
-keepclassmembers class java.lang.reflect.Constructor { int getModifiers(); }
-keepclassmembers class java.lang.reflect.Constructor { int hashCode(); }
-keepclassmembers class android.support.v4.os.ParcelableCompat$CompatCreator { void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class java.lang.reflect.Constructor { boolean equals(java.lang.Object); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$18$2 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$18); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesDuration(int); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Object newInstance(java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources,android.graphics.drawable.AnimatedRotateDrawable$1); }
-keepclassmembers class android.support.v7.widget.DropDownListView { void clickPressedItem(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.DropDownListView { void <init>(android.content.Context,boolean); }
-keepclassmembers class java.net.ProxySelectorImpl { int getSystemPropertyInt(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { void close(); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean isFocused(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void <init>(); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean hasFocus(); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean hasWindowFocus(); }
-keepclassmembers class android.content.res.StringBlock$Height { void <init>(int); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { int getEnd(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.PorterDuff$Mode getTintMode(int); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { int getStart(); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void setDirection(boolean); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean isInTouchMode(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getNationalNumberPattern(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setNationalNumberPattern(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { boolean hasNationalNumberPattern(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setPossibleNumberPattern(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getPossibleNumberPattern(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setExampleNumber(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RtlSpacingHelper { void setRelative(int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.support.v7.widget.DropDownListView { boolean touchModeDrawsInPressedStateCompat(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(); }
-keepclassmembers class android.os.AsyncTask$2 { void <init>(android.os.AsyncTask); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.support.v7.widget.DropDownListView { void setListSelectionHidden(boolean); }
-keepclassmembers class android.support.v4.view.AbsSavedState { android.os.Parcelable getSuperState(); }
-keepclassmembers class okhttp3.internal.http2.Http2Writer { int maxDataLength(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void <init>(android.support.v4.view.AbsSavedState$1); }
-keepclassmembers class java.io.OptionalDataException { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String descriptorForFieldSignature(java.lang.String); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <init>(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getOriginal(); }
-keepclassmembers class android.os.AsyncTask$2 { java.lang.Object call(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getReplacement(); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class forClass(); }
-keepclassmembers class android.support.v4.view.AbsSavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompatKitKat { void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object newInstance(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.File); }
-keepclassmembers class android.view.ViewGroup$3 { void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class java.io.ObjectStreamClass { boolean inSamePackage(java.lang.Class,java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] fields(); }
-keepclassmembers class android.view.ViewGroup$3 { void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class java.io.FileOutputStream { void write(byte[],int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$9 { void <init>(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.List getHierarchy(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getLoadFields(); }
-keepclassmembers class java.io.ObjectStreamClass { byte getFlags(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.view.Display getDisplay(android.view.View); }
-keepclassmembers class android.view.ViewGroup$3 { void <init>(android.view.ViewGroup); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getElevation(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass getSuperclass(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getName(); }
-keepclassmembers class java.io.ObjectStreamClass { long getSerialVersionUID(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { long getFrameTime(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isSerializable(java.lang.Class); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isExternalizable(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getLayerType(android.view.View); }
-keepclassmembers class android.support.v4.app.FragmentTransition$3 { void <init>(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,android.view.View,android.graphics.Rect); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$3 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isSerializable(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isPrimitiveType(char); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getLayoutDirection(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isExternalizable(); }
-keepclassmembers class android.support.v4.app.FragmentTransition$3 { void run(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isProxy(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMeasuredState(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isEnum(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl { boolean hasPermanentMenuKey(android.view.ViewConfiguration); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { android.graphics.Matrix getMatrix(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMinimumHeight(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass lookup(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getMinimumWidth(android.view.View); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void hide(); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { boolean isShowing(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getScaleX(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { java.lang.String getTransitionName(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodWriteReplace(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method findPrivateMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.content.res.ColorStateList getTintList(android.content.Context,int); }
-keepclassmembers class android.support.v7.app.NotificationCompat$JellybeanExtender { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodWriteReplace(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodReadResolve(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getTranslationZ(android.view.View); }
-keepclassmembers class android.support.v7.app.NotificationCompat$JellybeanExtender { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodWriteObject(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodWriteObject(); }
-keepclassmembers class android.graphics.Xfermode { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { float getTranslationY(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadObject(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadObjectNoData(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodReadObjectNoData(); }
-keepclassmembers class java.io.ObjectStreamClass { void initPrivateFields(java.io.ObjectStreamClass); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { void setClass(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadResolve(); }
-keepclassmembers class java.io.ObjectStreamClass { void setFields(java.io.ObjectStreamField[]); }
-keepclassmembers class java.io.ObjectStreamClass { void setLoadFields(java.io.ObjectStreamField[]); }
-keepclassmembers class java.io.ObjectStreamClass { void setFlags(byte); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean hasTransientState(android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass { void setSerialVersionUID(long); }
-keepclassmembers class java.io.ObjectStreamClass { void setName(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { void setSuperclass(java.io.ObjectStreamClass); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { boolean isLaidOut(android.view.View); }
-keepclassmembers class android.view.RenderNodeAnimator$1 { void <init>(int); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager { android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,android.support.v7.widget.VectorEnabledTintResources,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void jumpDrawablesToCurrentState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class java.lang.reflect.Method$1 { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchCreate(); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void <clinit>(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupDataSetObserver { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupDataSetObserver { void onChanged(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void cancel(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupDataSetObserver { void onInvalidated(); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$4 { void <init>(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$4 { void run(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setAlpha(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setAccessibilityLiveRegion(android.view.View,int); }
-keepclassmembers class java.util.ServiceLoader { void reload(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setBackground(android.view.View,android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.net.MalformedURLException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class); }
-keepclassmembers class java.net.MalformedURLException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v4.app.BackStackRecord { boolean isFragmentPostponed(android.support.v4.app.BackStackRecord$Op); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { boolean isFreshnessLifetimeHeuristic(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment); }
-keepclassmembers class android.widget.OverScroller { boolean isFinished(); }
-keepclassmembers class android.widget.OverScroller { int getCurrX(); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { void <init>(); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { int access$000(ar.rulosoft.custompref.ColorListDialogFragment); }
-keepclassmembers class android.widget.OverScroller { int getCurrY(); }
-keepclassmembers class java.util.ServiceLoader { java.lang.ClassLoader access$000(java.util.ServiceLoader); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setElevation(android.view.View,float); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { int access$002(ar.rulosoft.custompref.ColorListDialogFragment,int); }
-keepclassmembers class java.util.ServiceLoader { java.lang.Class access$100(java.util.ServiceLoader); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { java.lang.String[] access$100(ar.rulosoft.custompref.ColorListDialogFragment); }
-keepclassmembers class java.net.MalformedURLException { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setFitsSystemWindows(android.view.View,boolean); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void addOp(android.support.v4.app.BackStackRecord$Op); }
-keepclassmembers class java.util.ServiceLoader { java.util.Set access$200(java.util.ServiceLoader); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { ar.rulosoft.custompref.ColorListDialogPref access$200(ar.rulosoft.custompref.ColorListDialogFragment); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void setDuration(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,long); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <init>(java.lang.String,int); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { java.lang.String[] getCodeList(); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { java.lang.String[] getNameList(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { void onDialogClosed(boolean); }
-keepclassmembers class java.util.Collections$EmptyList { int size(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void setInterpolator(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { void onBindDialogView(android.view.View); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(java.util.Collections$1); }
-keepclassmembers class android.support.v4.content.ContextCompat { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void start(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View); }
-keepclassmembers class ar.rulosoft.custompref.ColorListDialogFragment { void setParent(ar.rulosoft.custompref.ColorListDialogPref); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl { void translationY(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,float); }
-keepclassmembers class java.io.FileInputStream { int available(); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setScaleX(android.view.View,float); }
-keepclassmembers class android.widget.OverScroller { void startScroll(int,int,int,int); }
-keepclassmembers class android.widget.OverScroller { void startScroll(int,int,int,int,int); }
-keepclassmembers class android.support.v4.content.ContextCompat { int getColor(android.content.Context,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setScaleY(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setTranslationY(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat$BaseViewCompatImpl { void setScrollIndicators(android.view.View,int,int); }
-keepclassmembers class android.widget.OverScroller { boolean springBack(int,int,int,int,int,int); }
-keepclassmembers class java.io.FileInputStream { int read(); }
-keepclassmembers class android.app.FragmentManagerImpl { int reverseTransit(int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { int commit(); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { int commitAllowingStateLoss(); }
-keepclassmembers class java.io.FileInputStream { int read(byte[],int,int); }
-keepclassmembers class android.app.FragmentManagerImpl { int transitToStyleIndex(int,boolean); }
-keepclassmembers class android.view.VelocityTracker { void recycle(); }
-keepclassmembers class android.support.v4.app.BackStackRecord { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(java.lang.String); }
-keepclassmembers class android.view.VelocityTracker { void <init>(java.lang.String); }
-keepclassmembers class android.view.VelocityTracker { void clear(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean isCollapsed(android.view.View); }
-keepclassmembers class android.support.v4.content.ContextCompat { boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.view.VelocityTracker { float getXVelocity(); }
-keepclassmembers class android.view.VelocityTracker { void computeCurrentVelocity(int,float); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void drawableStateChanged(); }
-keepclassmembers class android.view.VelocityTracker { float getYVelocity(); }
-keepclassmembers class android.widget.OverScroller { void abortAnimation(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(); }
-keepclassmembers class android.view.VelocityTracker { float getXVelocity(int); }
-keepclassmembers class android.view.VelocityTracker { float getYVelocity(int); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { android.view.View getTabContainer(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void jumpDrawablesToCurrentState(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void onFinishInflate(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPagerVertical { void onSwipeOutAtEnd(); }
-keepclassmembers class android.app.FragmentManagerImpl$6 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPagerVertical { void onSwipeOutAtStart(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String[] split(java.lang.CharSequence,int); }
-keepclassmembers class android.transition.TransitionSet { int getTransitionCount(); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String pattern(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { void <init>(android.graphics.drawable.Drawable$ConstantState); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String toString(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState { int getChangingConfigurations(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPagerVertical { void setOnSwipeOutListener(ar.rulosoft.mimanganu.componentes.OnSwipeOutListener); }
-keepclassmembers class rapid.decoder.BitmapTransformer { void <init>(android.graphics.Bitmap); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.util.Collections$UnmodifiableList { void <init>(java.util.List); }
-keepclassmembers class rapid.decoder.BitmapTransformer { android.graphics.Bitmap redraw(android.graphics.Bitmap,android.graphics.Rect,int,int); }
-keepclassmembers class android.support.design.widget.StateListAnimator$1 { void <init>(android.support.design.widget.StateListAnimator); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$3 { void <init>(int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class java.util.Collections$UnmodifiableList { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.NumberPicker$AccessibilityNodeProviderImpl { boolean performAction(int,int,android.os.Bundle); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.lang.Object get(int); }
-keepclassmembers class android.support.design.widget.StateListAnimator$1 { void onAnimationEnd(android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class java.util.Collections$UnmodifiableList { int hashCode(); }
-keepclassmembers class android.transition.TransitionManager { void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.support.v4.view.ViewCompatKitKat { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatKitKat { boolean isLaidOut(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewCompatKitKat { void setAccessibilityLiveRegion(android.view.View,int); }
-keepclassmembers class rapid.decoder.BitmapTransformer { rapid.decoder.BitmapDecoder config(android.graphics.Bitmap$Config); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable$3 { void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Settings); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable$3 { void execute(); }
-keepclassmembers class android.media.session.MediaController { void <init>(android.content.Context,android.media.session.MediaSession$Token); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.widget.NumberPicker$AccessibilityNodeProviderImpl { void sendAccessibilityEventForVirtualView(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { java.util.ArrayList getMangas(); }
-keepclassmembers class android.widget.NumberPicker$AccessibilityNodeProviderImpl { void sendAccessibilityEventForVirtualText(int); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { void setVisibility(int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { java.lang.String getName(); }
-keepclassmembers class android.support.v7.widget.ActionBarContainer { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$ICSMotionEventVersionImpl { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { int getNightMode(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { java.util.ArrayList getMangas(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$2 { void <init>(android.support.v7.app.AppCompatActivity,java.lang.String,android.widget.TextView,android.widget.ProgressBar,android.content.DialogInterface); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void finishAffinity(android.app.Activity); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { boolean hasList(); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void finishAfterTransition(android.app.Activity); }
-keepclassmembers class rapid.decoder.BitmapTransformer { rapid.decoder.BitmapDecoder filterBitmap(boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { boolean applyDayNight(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ItNineManga { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { int mapNightMode(int); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void setEnterSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void postponeEnterTransition(android.app.Activity); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void setExitSharedElementCallback(android.app.Activity,android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14 { void onStop(); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction setCustomAnimations(int,int); }
-keepclassmembers class rapid.decoder.BitmapTransformer { rapid.decoder.BitmapDecoder mutable(boolean); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter$MenuAdapter { void <init>(android.support.v7.view.menu.ListMenuPresenter); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { boolean hasList(); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.BackStackRecord { android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int); }
-keepclassmembers class rapid.decoder.BitmapTransformer { int sourceHeight(); }
-keepclassmembers class rapid.decoder.BitmapTransformer { int sourceWidth(); }
-keepclassmembers class android.widget.NumberPicker$AccessibilityNodeProviderImpl { boolean hasVirtualDecrementButton(); }
-keepclassmembers class android.support.v4.app.ActivityCompat { void startPostponedEnterTransition(android.app.Activity); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.widget.NumberPicker$AccessibilityNodeProviderImpl { boolean hasVirtualIncrementButton(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$CanvasPool { java.lang.Object newInstance(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$CanvasPool { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead$1 { void <init>(ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsRead,int); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter$MenuAdapter { void notifyDataSetChanged(); }
-keepclassmembers class okhttp3.MediaType { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.FragmentManagerImpl$6 { void <init>(android.app.FragmentManagerImpl,android.app.Fragment); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition clone(); }
-keepclassmembers class android.support.v4.view.ViewCompatMarshmallow { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatMarshmallow { void setScrollIndicators(android.view.View,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.LeoManga { boolean needRefererForImages(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition removeTarget(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatMarshmallow { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.widget.Editor$1 { void <init>(android.widget.Editor); }
-keepclassmembers class android.app.BackStackRecord$3 { void <init>(android.graphics.Rect); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setDuration(long); }
-keepclassmembers class okhttp3.MediaType { java.lang.String type(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class okhttp3.MediaType { java.nio.charset.Charset charset(java.nio.charset.Charset); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { void <init>(android.support.v4.util.MapCollections); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class okhttp3.MediaType { java.lang.String toString(); }
-keepclassmembers class java.math.BigDecimal { void <init>(long,int); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { boolean containsAll(java.util.Collection); }
-keepclassmembers class android.os.storage.StorageVolume { java.lang.String getPath(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$CanvasPool { void onReset(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.util.MapCollections$KeySet { int size(); }
-keepclassmembers class android.os.storage.StorageVolume { java.io.File getPathFile(); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase access$000(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase access$002(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment,ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$LoadLastTask access$1002(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment,ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$LoadLastTask); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { android.widget.ProgressBar access$400(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { int access$100(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { int[][] access$500(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { boolean access$202(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { ar.rulosoft.mimanganu.servers.ServerBase access$300(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplHoneycomb { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { int access$602(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment,int); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { int access$600(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils$ViewGroupUtilsImplHoneycomb { void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { boolean access$802(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { boolean access$900(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void init(java.security.KeyStore); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void <init>(javax.net.ssl.TrustManagerFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { android.support.v7.widget.RecyclerView access$700(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { boolean access$902(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment,boolean); }
-keepclassmembers class android.support.v4.app.NavUtilsJB { java.lang.String getParentActivityName(android.content.pm.ActivityInfo); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { javax.net.ssl.TrustManager[] getTrustManagers(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect { java.lang.String access$000(ar.rulosoft.mimanganu.componentes.MangaFolderSelect); }
-keepclassmembers class android.support.v4.app.NavUtilsJB { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect { java.lang.String access$002(ar.rulosoft.mimanganu.componentes.MangaFolderSelect,java.lang.String); }
-keepclassmembers class android.support.v4.app.NavUtilsJB { void navigateUpTo(android.app.Activity,android.content.Intent); }
-keepclassmembers class java.math.BigDecimal { void <init>(double,java.math.MathContext); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect { android.widget.ListView access$100(ar.rulosoft.mimanganu.componentes.MangaFolderSelect); }
-keepclassmembers class android.support.v4.app.NavUtilsJB { boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect { ar.rulosoft.mimanganu.MainFragment access$400(ar.rulosoft.mimanganu.componentes.MangaFolderSelect); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect { android.widget.TextView access$300(ar.rulosoft.mimanganu.componentes.MangaFolderSelect); }
-keepclassmembers class java.lang.Object { void <init>(); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(android.widget.Filter$1); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(); }
-keepclassmembers class java.lang.Object { boolean equals(java.lang.Object); }
-keepclassmembers class java.math.BigDecimal { void <init>(long); }
-keepclassmembers class java.lang.Object { java.lang.Class getClass(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect { int access$502(ar.rulosoft.mimanganu.componentes.MangaFolderSelect,int); }
-keepclassmembers class android.os.AsyncTask$WorkerRunnable { void <init>(android.os.AsyncTask$1); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.lang.Object { void wait(long); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect { android.content.Context access$200(ar.rulosoft.mimanganu.componentes.MangaFolderSelect); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect { void setMainFragment(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class android.widget.Editor$TextDisplayList { void <init>(java.lang.String); }
-keepclassmembers class android.os.storage.StorageVolume { void <init>(android.os.Parcel,android.os.storage.StorageVolume$1); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$1$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$1); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$1$1 { void run(); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { android.view.Window$Callback getWrappedWindowCallback(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment { void onDetach(); }
-keepclassmembers class android.content.ActivityNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { void <init>(java.util.List); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 { void <init>(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getScheme(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { android.net.Uri$Part getSsp(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 { int getAbsoluteGravity(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$4$2 { void <init>(ar.rulosoft.mimanganu.MangaFragment$4); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$4$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String toString(); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase$CreateGroupByMangaNotificationsTask { void onPostExecute(java.lang.Integer); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload$DownloadStatus { void <init>(java.lang.String,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase$CreateGroupByMangaNotificationsTask { void onPreExecute(); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(); }
-keepclassmembers class okio.InflaterSource { void close(); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreferenceFloat { float access$000(ar.rulosoft.custompref.SeekBarCustomPreferenceFloat); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { void <init>(android.widget.ImageView); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreferenceFloat { float access$002(ar.rulosoft.custompref.SeekBarCustomPreferenceFloat,float); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreferenceFloat { float access$100(ar.rulosoft.custompref.SeekBarCustomPreferenceFloat); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreferenceFloat { float access$200(ar.rulosoft.custompref.SeekBarCustomPreferenceFloat); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreferenceFloat { java.lang.String access$300(ar.rulosoft.custompref.SeekBarCustomPreferenceFloat); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreferenceFloat { android.widget.TextView access$400(ar.rulosoft.custompref.SeekBarCustomPreferenceFloat); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreferenceFloat { boolean access$500(ar.rulosoft.custompref.SeekBarCustomPreferenceFloat,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatImageHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreferenceFloat { void access$600(ar.rulosoft.custompref.SeekBarCustomPreferenceFloat); }
-keepclassmembers class android.animation.PropertyValuesHolder { void init(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.animation.PropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setPropertyName(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setProperty(android.util.Property); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getPropertyName(); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object getAnimatedValue(); }
-keepclassmembers class com.android.internal.app.AlertController$6 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(android.net.Uri$1); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplN$AppCompatWindowCallbackN { void <init>(android.support.v7.app.AppCompatDelegateImplN,android.view.Window$Callback); }
-keepclassmembers class okio.AsyncTimeout$Watchdog { void run(); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class android.graphics.Region$1 { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$200(java.lang.Object,long,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$300(java.lang.Class,java.lang.String); }
-keepclassmembers class android.text.SpannedString { int hashCode(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$400(java.lang.Object,long,float); }
-keepclassmembers class android.text.SpannedString { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$500(java.lang.Class,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$GetPagesTask { void <init>(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.MangaFragment$1); }
-keepclassmembers class android.text.SpannedString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.text.SpannedString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.SpannedString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.text.SpannedString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.text.SpannedString { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.net.Uri$Part$EmptyPart { void <init>(java.lang.String); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { void <init>(); }
-keepclassmembers class android.net.Uri$Part$EmptyPart { boolean isEmpty(); }
-keepclassmembers class android.support.v4.view.GravityCompatJellybeanMr1 { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi24$Builder { android.app.Notification build(); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi24$Builder { android.app.Notification$Builder getBuilder(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { void <init>(android.view.ViewRootImpl$1); }
-keepclassmembers class android.support.v4.view.GravityCompatJellybeanMr1 { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.app.Application { void onCreate(); }
-keepclassmembers class android.app.Application { void onTerminate(); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toNanos(long); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toMillis(long); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toSeconds(long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void <init>(android.content.Context); }
-keepclassmembers class android.app.Application { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void <init>(); }
-keepclassmembers class android.app.Notification$Action { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.Application { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.app.Notification$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[],android.app.Notification$1); }
-keepclassmembers class android.app.Application { void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class android.app.Application { void unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { int getDeltaX(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { int getDeltaY(); }
-keepclassmembers class android.view.RenderNode { void <init>(java.lang.String,android.view.View); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeScrollExtent(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.app.Application { void unregisterOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class android.view.RenderNode { android.view.HardwareCanvas start(int,int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void setRampDownDuration(int); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void setRampUpDuration(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeScrollOffset(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void setTargetVelocity(float,float); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin { void <init>(ar.rulosoft.mimanganu.componentes.LoginDialog,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.RenderNode { void destroyDisplayListData(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ClampedScroller { void start(); }
-keepclassmembers class android.view.RenderNode { boolean isValid(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin { java.lang.Boolean doInBackground(ar.rulosoft.mimanganu.servers.ServerBase[]); }
-keepclassmembers class android.view.RenderNode { boolean hasIdentityMatrix(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfoNoScroll { void <init>(android.content.Context); }
-keepclassmembers class android.widget.TextView$BufferType { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.RenderNode { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeScrollRange(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.view.RenderNode { void getInverseMatrix(android.graphics.Matrix); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { void <init>(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class android.view.RenderNode { boolean setLayerType(int); }
-keepclassmembers class android.view.RenderNode { boolean setLayerPaint(android.graphics.Paint); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void <init>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findFirstPartiallyOrCompletelyInvisibleChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getEnd(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findFirstReferenceChild(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.view.RenderNode { boolean setClipToBounds(boolean); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void clear(); }
-keepclassmembers class android.view.RenderNode { boolean setProjectBackwards(boolean); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getEndPadding(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { ar.rulosoft.mimanganu.componentes.Chapter access$2900(ar.rulosoft.mimanganu.MangaFragment$ResetChapters); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getMode(); }
-keepclassmembers class android.view.RenderNode { boolean setProjectionReceiver(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { ar.rulosoft.mimanganu.componentes.Chapter access$2902(ar.rulosoft.mimanganu.MangaFragment$ResetChapters,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getModeInOther(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { ar.rulosoft.mimanganu.servers.ServerBase access$3000(ar.rulosoft.mimanganu.MangaFragment$ResetChapters); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getStartAfterPadding(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getTransformedEndWithDecoration(android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void mutate(); }
-keepclassmembers class java.math.BigDecimal { int signum(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { int getTransformedStartWithDecoration(android.view.View); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$1 { void offsetChildren(int); }
-keepclassmembers class java.util.jar.Manifest { java.util.Map getEntries(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addStateSet(int[],android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.view.RenderNode { boolean setStaticMatrix(android.graphics.Matrix); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfKeyframe(int[]); }
-keepclassmembers class android.view.RenderNode { boolean setAnimationMatrix(android.graphics.Matrix); }
-keepclassmembers class android.widget.FastScroller$3 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int getKeyframeIdAt(int); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { void onCancelled(); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.view.RenderNode { boolean setAlpha(float); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { android.content.Intent getParentActivityIntent(android.app.Activity); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfoNoScroll { void setAuthor(java.lang.String); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.view.RenderNode { boolean setHasOverlappingRendering(boolean); }
-keepclassmembers class android.support.design.widget.SnackbarManager$SnackbarRecord { boolean isSnackbar(android.support.design.widget.SnackbarManager$Callback); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { void navigateUpTo(android.app.Activity,android.content.Intent); }
-keepclassmembers class java.util.jar.Manifest { void removeChunks(); }
-keepclassmembers class android.view.RenderNode { boolean setElevation(float); }
-keepclassmembers class java.util.jar.Manifest { int getMainAttributesEnd(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findReferenceChildClosestToEnd(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.view.RenderNode { float getElevation(); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfoNoScroll { void setColor(boolean,int); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationX(float); }
-keepclassmembers class android.support.v4.app.NavUtils$NavUtilsImplJB { android.content.Intent superGetParentActivityIntent(android.app.Activity); }
-keepclassmembers class android.view.RenderNode { float getTranslationX(); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationY(float); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findReferenceChildClosestToStart(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.view.RenderNode { float getTranslationY(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$ResetChapters { void onProgressUpdate(java.lang.Integer[]); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationZ(float); }
-keepclassmembers class android.view.RenderNode { float getTranslationZ(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfoNoScroll { void setGenre(java.lang.String); }
-keepclassmembers class android.view.RenderNode { boolean setRotation(float); }
-keepclassmembers class android.view.RenderNode { float getRotation(); }
-keepclassmembers class android.view.RenderNode { boolean setRotationX(float); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfoNoScroll { void setImageBitmap(android.graphics.Bitmap); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void access$200(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState); }
-keepclassmembers class android.view.RenderNode { float getRotationX(); }
-keepclassmembers class android.view.RenderNode { boolean setRotationY(float); }
-keepclassmembers class java.security.MessageDigest { void <init>(java.lang.String); }
-keepclassmembers class android.view.RenderNode { float getRotationY(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfoNoScroll { void setLastUpdate(java.lang.String); }
-keepclassmembers class android.view.RenderNode { boolean setScaleX(float); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatementCache { void <init>(android.database.sqlite.SQLiteConnection,int); }
-keepclassmembers class android.view.RenderNode { float getScaleX(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfoNoScroll { void setServer(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView$PopupCallback { void <init>(); }
-keepclassmembers class android.view.RenderNode { boolean setScaleY(float); }
-keepclassmembers class android.view.RenderNode { float getScaleY(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfoNoScroll { void setStatus(java.lang.String); }
-keepclassmembers class android.view.RenderNode { boolean setPivotX(float); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfoNoScroll { void setSynopsis(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getGeneralDesc(); }
-keepclassmembers class android.view.RenderNode { float getPivotX(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatementCache { void entryRemoved(boolean,java.lang.String,android.database.sqlite.SQLiteConnection$PreparedStatement,android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.view.RenderNode { boolean setPivotY(float); }
-keepclassmembers class android.view.RenderNode { float getPivotY(); }
-keepclassmembers class java.util.Currency { java.lang.String getCurrencyCode(); }
-keepclassmembers class android.view.RenderNode { boolean isPivotExplicitlySet(); }
-keepclassmembers class android.view.RenderNode { boolean setLeft(int); }
-keepclassmembers class android.view.RenderNode { boolean setTop(int); }
-keepclassmembers class android.view.RenderNode { boolean setRight(int); }
-keepclassmembers class android.support.design.internal.BaselineLayout { int getBaseline(); }
-keepclassmembers class java.security.MessageDigest { void update(byte); }
-keepclassmembers class android.view.RenderNode { boolean setBottom(int); }
-keepclassmembers class android.view.RenderNode { boolean setLeftTopRightBottom(int,int,int,int); }
-keepclassmembers class java.util.Currency { java.lang.String toString(); }
-keepclassmembers class android.view.RenderNode { boolean offsetLeftAndRight(int); }
-keepclassmembers class android.view.RenderNode { boolean offsetTopAndBottom(int); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean,boolean); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(byte[]); }
-keepclassmembers class ar.rulosoft.custompref.ArrayAdapterDirectory$ViewHolder { void <init>(); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class org.json.JSONException { void <init>(java.lang.String); }
-keepclassmembers class java.net.ProxySelector { void <init>(); }
-keepclassmembers class java.util.concurrent.RejectedExecutionException { void <init>(java.lang.String); }
-keepclassmembers class java.security.MessageDigest { java.security.Provider access$102(java.security.MessageDigest,java.security.Provider); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void <init>(android.support.v7.view.SupportMenuInflater,android.view.Menu); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { char getShortcut(java.lang.String); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { void <init>(android.support.v4.util.MapCollections,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { int getItemId(); }
-keepclassmembers class android.support.v4.util.MapCollections$ArrayIterator { boolean hasNext(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { android.view.ContextMenu$ContextMenuInfo getMenuInfo(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void recycleByLayoutState(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.LinearLayoutManager$LayoutState); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float,float); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { float getFloatValue(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { java.lang.Object getValue(); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View); }
-keepclassmembers class okhttp3.MultipartBody$Part { void <init>(okhttp3.Headers,okhttp3.RequestBody); }
-keepclassmembers class android.view.View$UnsetPressedState { void run(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void addItem(); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void <init>(byte[]); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { void <init>(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { android.view.SubMenu addSubMenuItem(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setId(java.lang.String); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { boolean hasAddedItem(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { byte[] getEncoded(); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$1 { void <init>(android.support.v7.widget.ForwardingListener); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int getCountryCode(); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$1 { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void readGroup(android.util.AttributeSet); }
-keepclassmembers class okhttp3.MultipartBody$Part { okhttp3.MultipartBody$Part createFormData(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCountryCode(int); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$1 { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItem { android.view.MenuItem setIcon(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getInternationalPrefix(); }
-keepclassmembers class rapid.decoder.BitmapDecoder { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setInternationalPrefix(java.lang.String); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getEnd(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getEndPadding(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredInternationalPrefix(java.lang.String); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getMode(); }
-keepclassmembers class java.net.BindException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getModeInOther(); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getStartAfterPadding(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefix(java.lang.String); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getTransformedEndWithDecoration(android.view.View); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { int getTransformedStartWithDecoration(android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredExtnPrefix(java.lang.String); }
-keepclassmembers class android.support.v7.widget.OrientationHelper$2 { void offsetChildren(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages$1 { void <init>(ar.rulosoft.mimanganu.MangaFragment$DeleteImages,int); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixForParsing(); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixForParsing(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixTransformRule(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixTransformRule(java.lang.String); }
-keepclassmembers class android.support.v7.view.SupportMenuInflater$MenuState { void resetGroup(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSameMobileAndFixedLinePattern(boolean); }
-keepclassmembers class java.math.BigDecimal { long longValue(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void resolveShouldLayoutReverse(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int numberFormatSize(); }
-keepclassmembers class java.math.BigDecimal { int intValue(); }
-keepclassmembers class android.support.v7.util.DiffUtil$PostponedUpdate { void <init>(int,int,boolean); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV11 { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplHC { void <init>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.graphics.drawable.InsetDrawable,android.content.res.Resources); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplHC { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int intlNumberFormatSize(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean updateAnchorFromChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { boolean canApplyTheme(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMainCountryForCode(boolean); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { boolean canConstantState(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingDigits(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingZeroPossible(boolean); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(); }
-keepclassmembers class rapid.decoder.BitmapDecoder { rapid.decoder.BitmapLoader from(android.net.Uri,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobileNumberPortableRegion(boolean); }
-keepclassmembers class rapid.decoder.BitmapDecoder { rapid.decoder.BitmapLoader from(java.lang.String); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.net.InetSocketAddress { int getPort(); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetAddress getAddress(); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String getHostName(); }
-keepclassmembers class java.util.MapEntry { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$1 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class rapid.decoder.BitmapDecoder { void invalidateCrafts(); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex { void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method); }
-keepclassmembers class rapid.decoder.BitmapDecoder { boolean craftsEqual(rapid.decoder.BitmapDecoder); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { void <init>(android.content.Context,boolean); }
-keepclassmembers class rapid.decoder.BitmapDecoder { int craftsHash(); }
-keepclassmembers class rapid.decoder.BitmapDecoder { float densityRatio(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean hasFocus(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger getUnscaledValue(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean hasWindowFocus(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$7 { void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class java.math.BigDecimal { void setUnscaledValue(java.math.BigInteger); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean isFocused(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean isInTouchMode(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { boolean onForwardedEvent(android.view.MotionEvent,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$7 { void execute(); }
-keepclassmembers class java.lang.AssertionError { void <init>(); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class rapid.decoder.BitmapDecoder { android.graphics.Bitmap postProcess(android.graphics.Bitmap); }
-keepclassmembers class android.app.SharedElementCallback { void <init>(); }
-keepclassmembers class java.security.cert.CertificateFactory { void <init>(java.security.cert.CertificateFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.view.DragEvent { void <init>(); }
-keepclassmembers class android.app.SharedElementCallback { void onMapSharedElements(java.util.List,java.util.Map); }
-keepclassmembers class android.view.DragEvent { void init(int,float,float,android.content.ClipDescription,android.content.ClipData,java.lang.Object,boolean); }
-keepclassmembers class rapid.decoder.BitmapDecoder { int regionHeight(); }
-keepclassmembers class rapid.decoder.BitmapDecoder { int regionWidth(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow$MenuDropDownListView { void setHoverListener(android.support.v7.widget.MenuItemHoverListener); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.Certificate generateCertificate(java.io.InputStream); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(android.view.DragEvent); }
-keepclassmembers class android.view.DragEvent { int getAction(); }
-keepclassmembers class android.os.AsyncTask { void postResultIfNotInvoked(java.lang.Object); }
-keepclassmembers class android.view.DragEvent { float getX(); }
-keepclassmembers class android.view.DragEvent { float getY(); }
-keepclassmembers class android.view.DragEvent { android.content.ClipData getClipData(); }
-keepclassmembers class java.lang.NoSuchMethodException { void <init>(java.lang.String); }
-keepclassmembers class android.view.DragEvent { java.lang.Object getLocalState(); }
-keepclassmembers class android.os.AsyncTask { android.os.AsyncTask$Status getStatus(); }
-keepclassmembers class android.os.AsyncTask { void onPreExecute(); }
-keepclassmembers class android.os.AsyncTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.os.AsyncTask { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class android.os.AsyncTask { void onCancelled(java.lang.Object); }
-keepclassmembers class android.os.AsyncTask { void onCancelled(); }
-keepclassmembers class android.os.AsyncTask { boolean isCancelled(); }
-keepclassmembers class android.os.AsyncTask { boolean cancel(boolean); }
-keepclassmembers class android.os.AsyncTask { android.os.AsyncTask execute(java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { boolean checkTag(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddAllMangaInDirectoryTask { void onPostExecute(java.lang.Void); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateLayoutStateToFillEnd(android.support.v7.widget.LinearLayoutManager$AnchorInfo); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void startTransition(int); }
-keepclassmembers class android.os.AsyncTask { void execute(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void resetTransition(); }
-keepclassmembers class android.os.AsyncTask { void finish(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void updateLayoutStateToFillStart(android.support.v7.widget.LinearLayoutManager$AnchorInfo); }
-keepclassmembers class android.os.AsyncTask { java.util.concurrent.atomic.AtomicBoolean access$200(android.os.AsyncTask); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void assertNotInLayoutOrScroll(java.lang.String); }
-keepclassmembers class android.os.AsyncTask { java.lang.Object access$300(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean canScrollHorizontally(); }
-keepclassmembers class android.os.AsyncTask { void access$400(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean canScrollVertically(); }
-keepclassmembers class android.os.AsyncTask { void access$500(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class java.util.concurrent.TimeUnit$7 { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.PathEffect { void <init>(); }
-keepclassmembers class android.text.Layout$Alignment { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.Character { void <init>(char); }
-keepclassmembers class java.lang.Character { char charValue(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeHorizontalScrollExtent(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeHorizontalScrollOffset(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources,android.graphics.drawable.TransitionDrawable$1); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Character); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeHorizontalScrollRange(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.lang.Character { boolean isValidCodePoint(int); }
-keepclassmembers class java.lang.Character { boolean isSupplementaryCodePoint(int); }
-keepclassmembers class android.view.MenuInflater$MenuState { void <init>(android.view.MenuInflater,android.view.Menu); }
-keepclassmembers class java.lang.Character { boolean isHighSurrogate(char); }
-keepclassmembers class android.view.MenuInflater$MenuState { void resetGroup(); }
-keepclassmembers class java.lang.Character { boolean isLowSurrogate(char); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeVerticalScrollExtent(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeVerticalScrollOffset(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.view.MenuInflater$MenuState { void readGroup(android.util.AttributeSet); }
-keepclassmembers class java.lang.Character { boolean isSurrogatePair(char,char); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int computeVerticalScrollRange(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.lang.Character { int charCount(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int convertFocusDirectionToLayoutDirection(int); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void ensureLayoutState(); }
-keepclassmembers class org.xml.sax.SAXNotRecognizedException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.AbsActionBarView { void setVisibility(int); }
-keepclassmembers class android.view.MenuInflater$MenuState { char getShortcut(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader); }
-keepclassmembers class java.util.AbstractList$SubAbstractListRandomAccess { void <init>(java.util.AbstractList,int,int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatKK$1 { void <init>(android.support.v4.view.ViewPropertyAnimatorUpdateListener,android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void enableHomeButton(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void onBackPressed(); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.MenuItem addItem(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.SubMenu addSubMenuItem(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void run(); }
-keepclassmembers class android.view.MenuInflater$MenuState { boolean hasAddedItem(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int findFirstVisibleItemPosition(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { boolean canApplyTheme(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.ActionProvider access$000(android.view.MenuInflater$MenuState); }
-keepclassmembers class java.net.URLConnection$DefaultContentHandler { void <init>(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class rapid.decoder.cache.CacheSource { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { void <init>(java.io.InputStream,long,java.util.jar.JarVerifier$VerifierEntry); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void onRequestPermissionsResult(int,java.lang.String[],int[]); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void clearListSelection(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$ReDownloadImage { void onPostExecute(java.lang.Void); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void replaceFragment(android.support.v4.app.Fragment,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void dismiss(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { android.view.View findOneVisibleChild(int,int,boolean,boolean); }
-keepclassmembers class java.lang.Character { int digit(char,int); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int available(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { android.view.View getAnchorView(); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { long skip(long); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void replaceFragmentAllowStateLoss(android.support.v4.app.Fragment,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { int getHorizontalOffset(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { android.widget.ListView getListView(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void setTitle(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { int getVerticalOffset(); }
-keepclassmembers class java.net.URLStreamHandler { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { boolean isInputMethodNotNeeded(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { boolean isShowing(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[],byte[],org.apache.harmony.security.x509.OtherName$1); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { java.lang.String access$100(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { byte[] access$200(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { boolean defaultIsRtl(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean,android.text.TextDirectionHeuristics$1); }
-keepclassmembers class java.lang.Character { int getType(char); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.lang.Character { byte getDirectionality(char); }
-keepclassmembers class java.lang.Character { byte getDirectionality(int); }
-keepclassmembers class java.io.BufferedInputStream { void close(); }
-keepclassmembers class okhttp3.Protocol { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class java.lang.Character { int hashCode(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int getExtraLayoutSpace(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int getOrientation(); }
-keepclassmembers class okhttp3.Protocol { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean isLayoutRTL(); }
-keepclassmembers class java.lang.Character { boolean isDigit(char); }
-keepclassmembers class java.lang.Character { boolean isDigit(int); }
-keepclassmembers class java.util.LinkedList$LinkIterator { boolean hasNext(); }
-keepclassmembers class java.io.BufferedInputStream { void mark(int); }
-keepclassmembers class java.io.BufferedInputStream { boolean markSupported(); }
-keepclassmembers class java.lang.Character { boolean isISOControl(char); }
-keepclassmembers class java.lang.Character { boolean isISOControl(int); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierPart(char); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void close(okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void closeLater(okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { int getId(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setAnchorView(android.view.View); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { okio.Source getSource(); }
-keepclassmembers class android.support.v7.app.TwilightManager$TwilightState { void <init>(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setDropDownGravity(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setEpicenterBounds(android.graphics.Rect); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { boolean isOpen(); }
-keepclassmembers class java.lang.Character { boolean isLetter(char); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setHorizontalOffset(int); }
-keepclassmembers class java.lang.Character { boolean isLetter(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setInputMethodMode(int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean shouldAllowTextWithIcon(); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(char); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setModal(boolean); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { okio.Timeout readTimeout(); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(char); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { android.support.v7.view.menu.MenuItemImpl getItemData(); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(char); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean hasText(); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToString(int); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String toExternalForm(java.net.URL); }
-keepclassmembers class java.lang.IntegralToString { void appendInt(java.lang.AbstractStringBuilder,int); }
-keepclassmembers class java.lang.Character { boolean isTitleCase(char); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setVerticalOffset(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow { void setWidth(int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean needsDividerAfter(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean needsDividerBefore(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onClick(android.view.View); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { void receiveRstStream(okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(char); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(char); }
-keepclassmembers class java.net.URLStreamHandler { boolean equals(java.net.URL,java.net.URL); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(int); }
-keepclassmembers class java.util.TreeMap$Bound$1 { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.URLStreamHandler { int hashCode(java.net.URL); }
-keepclassmembers class java.net.URLStreamHandler { boolean hostsEqual(java.net.URL,java.net.URL); }
-keepclassmembers class java.lang.Character { java.lang.String toString(); }
-keepclassmembers class java.lang.Character { java.lang.String toString(char); }
-keepclassmembers class java.net.URLStreamHandler { boolean sameFile(java.net.URL,java.net.URL); }
-keepclassmembers class android.webkit.WebView { java.lang.String findAddress(java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream { okio.Timeout writeTimeout(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.Character { void access$100(int); }
-keepclassmembers class java.lang.Character { int access$200(int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { boolean prefersCondensedTitle(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToString(long); }
-keepclassmembers class java.lang.IntegralToString { void appendLong(java.lang.AbstractStringBuilder,long); }
-keepclassmembers class ar.rulosoft.mimanganu.MessageActivity { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setItemInvoker(android.support.v7.view.menu.MenuBuilder$ItemInvoker); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setPadding(int,int,int,int); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setPopupCallback(android.support.v7.view.menu.ActionMenuItemView$PopupCallback); }
-keepclassmembers class android.support.v7.view.menu.ActionMenuItemView { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback { void <init>(android.support.v7.widget.ActionMenuView); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$ActionMenuPresenterCallback { boolean onOpenSubMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.graphics.Region { void <init>(); }
-keepclassmembers class android.graphics.Region { void <init>(android.graphics.Region); }
-keepclassmembers class android.graphics.Region { void setEmpty(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$BigTextStyle { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$BigTextStyle { android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.NotificationCompat$BigTextStyle { android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class java.io.OutputStream { void <init>(); }
-keepclassmembers class java.io.OutputStream { void close(); }
-keepclassmembers class java.io.OutputStream { void flush(); }
-keepclassmembers class java.io.OutputStream { void write(byte[]); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void <init>(ar.rulosoft.mimanganu.utils.Util$1); }
-keepclassmembers class android.view.View$BaseSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { int getCorrectIcon(); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <init>(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class android.graphics.Region { boolean op(int,int,int,int,android.graphics.Region$Op); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$FloatKeyframes); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void onLayoutCompleted(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,float[]); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { java.lang.Object getAnimatedValue(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean resolveIsInfinite(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompatJellybeanMr1 { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class org.acra.collections.UnmodifiableIteratorWrapper { void <init>(java.util.Iterator); }
-keepclassmembers class android.text.util.Linkify$1 { void <init>(); }
-keepclassmembers class org.acra.collections.UnmodifiableIteratorWrapper { boolean hasNext(); }
-keepclassmembers class org.acra.collections.UnmodifiableIteratorWrapper { java.lang.Object next(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class android.support.v7.preference.UnPressableLinearLayout { void dispatchSetPressed(boolean); }
-keepclassmembers class android.app.Notification$Style { void <init>(); }
-keepclassmembers class android.app.Notification$Style { void internalSetBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Style { void internalSetSummaryText(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Style { void setBuilder(android.app.Notification$Builder); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.lang.Math { int abs(int); }
-keepclassmembers class java.lang.SecurityException { void <init>(); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void scrollToPosition(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.lang.Math { int max(int,int); }
-keepclassmembers class android.app.Notification$Style { void applyTopPadding(android.widget.RemoteViews); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { void setReverseLayout(boolean); }
-keepclassmembers class java.lang.Math { int min(int,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean shouldMeasureTwice(); }
-keepclassmembers class android.app.Notification$Style { android.app.Notification buildStyled(android.app.Notification); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(float); }
-keepclassmembers class java.io.NotSerializableException { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.Notification$Style { void populateTickerView(android.app.Notification); }
-keepclassmembers class android.app.Notification$Style { void populateContentView(android.app.Notification); }
-keepclassmembers class android.content.ClipDescription$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager { boolean supportsPredictiveItemAnimations(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.method.LinkMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.app.Notification$Style { void populateHeadsUpContentView(android.app.Notification); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$5 { void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List,boolean); }
-keepclassmembers class android.app.Notification$Style { boolean hasProgress(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { boolean checkTag(int); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$5 { void execute(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter$2 { void <init>(ar.rulosoft.mimanganu.adapters.ChapterAdapter,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter$2 { void run(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.os.RemoteException { void <init>(); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplBase { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v4.view.GravityCompat$GravityCompatImplBase { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int get(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void set(int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { android.text.Spanned fromHtml(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void <init>(byte[],org.apache.harmony.security.x509.GeneralNames,java.math.BigInteger); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { boolean compareAndSet(int,int); }
-keepclassmembers class org.acra.collector.StacktraceCollector { boolean shouldCollect(java.util.Set,org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { java.lang.String getFirstMatchDefault(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.ProcessManager$ProcessOutputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class java.lang.ProcessManager$ProcessOutputStream { void close(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSequenceOfLength(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSetOfLength(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class java.lang.ProcessManager$ProcessOutputStream { void <init>(java.io.FileDescriptor,java.lang.ProcessManager$1); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskReadViolation { void <init>(int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$2$3 { void <init>(ar.rulosoft.mimanganu.utils.UpdateUtil$2); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$2$3 { void run(); }
-keepclassmembers class android.support.v7.widget.ToolbarWidgetWrapper$1 { void onClick(android.view.View); }
-keepclassmembers class java.util.jar.Attributes { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.io.DataOutputStream { void flush(); }
-keepclassmembers class java.util.jar.Attributes { java.util.Set entrySet(); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object get(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void <init>(boolean[]); }
-keepclassmembers class android.view.View { void initializeFadingEdgeInternal(android.content.res.TypedArray); }
-keepclassmembers class android.view.View { int getVerticalFadingEdgeLength(); }
-keepclassmembers class android.view.View { void setFadingEdgeLength(int); }
-keepclassmembers class android.view.View { int getHorizontalFadingEdgeLength(); }
-keepclassmembers class java.util.jar.Attributes { int size(); }
-keepclassmembers class java.io.DataOutputStream { void writeChar(int); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { boolean[] access$000(org.apache.harmony.security.x509.ReasonFlags); }
-keepclassmembers class android.view.View { int getVerticalScrollbarWidth(); }
-keepclassmembers class java.io.DataOutputStream { void writeDouble(double); }
-keepclassmembers class java.util.jar.Attributes { int hashCode(); }
-keepclassmembers class android.view.View { int getHorizontalScrollbarHeight(); }
-keepclassmembers class java.io.DataOutputStream { void writeFloat(float); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$13 { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$13 { void run(); }
-keepclassmembers class android.support.v4.widget.Space { int getDefaultSize2(int,int); }
-keepclassmembers class android.support.v4.widget.Space { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(); }
-keepclassmembers class android.support.v4.widget.Space { void onMeasure(int,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void <init>(android.content.Context); }
-keepclassmembers class java.io.DataOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ViewBoundsCheck$BoundFlags { void <init>(); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { void <init>(java.util.Enumeration,java.util.jar.JarFile); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { boolean hasMoreElements(); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { java.lang.Object nextElement(); }
-keepclassmembers class android.view.View { int getVerticalScrollbarPosition(); }
-keepclassmembers class java.lang.Boolean { void <init>(boolean); }
-keepclassmembers class java.lang.Boolean { boolean booleanValue(); }
-keepclassmembers class android.view.View { void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void restartApp(android.content.Context); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Boolean); }
-keepclassmembers class android.view.View { void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener); }
-keepclassmembers class android.support.v7.widget.ViewBoundsCheck$BoundFlags { int compare(int,int); }
-keepclassmembers class java.lang.Boolean { int compare(boolean,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void showFastSnackBar(java.lang.String,android.view.View,android.content.Context); }
-keepclassmembers class android.view.View { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.support.v7.widget.ViewBoundsCheck$BoundFlags { void resetFlags(); }
-keepclassmembers class java.lang.Boolean { int hashCode(); }
-keepclassmembers class android.view.View { boolean hasOnClickListeners(); }
-keepclassmembers class java.lang.Boolean { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.ViewBoundsCheck$BoundFlags { void setBounds(int,int,int,int); }
-keepclassmembers class android.view.View { void setOnLongClickListener(android.view.View$OnLongClickListener); }
-keepclassmembers class android.view.View { void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void showSlowSnackBar(java.lang.String,android.view.View,android.content.Context); }
-keepclassmembers class android.view.View { boolean performLongClick(); }
-keepclassmembers class android.view.View { boolean performClick(); }
-keepclassmembers class java.lang.Boolean { java.lang.Boolean valueOf(boolean); }
-keepclassmembers class android.view.View { boolean showContextMenu(); }
-keepclassmembers class android.view.View { boolean showContextMenu(float,float,int); }
-keepclassmembers class android.view.View { void setOnKeyListener(android.view.View$OnKeyListener); }
-keepclassmembers class android.os.AsyncTask$WorkerRunnable { void <init>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { java.util.List readHeaderBlock(int,short,byte,int); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect); }
-keepclassmembers class android.view.View { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.view.View { void setOnTouchListener(android.view.View$OnTouchListener); }
-keepclassmembers class org.acra.sender.HttpSender$Type$1 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.preference.Preference$1 { void <init>(android.support.v7.preference.Preference); }
-keepclassmembers class android.app.ActivityManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment$1 { void <init>(ar.rulosoft.mimanganu.ServerListFragment); }
-keepclassmembers class android.view.View { void clearFocus(); }
-keepclassmembers class libcore.io.NioBufferIterator { void seek(int); }
-keepclassmembers class android.view.View { void notifyGlobalFocusCleared(android.view.View); }
-keepclassmembers class libcore.io.NioBufferIterator { void <init>(long,int,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl$1 { void <init>(android.support.v4.view.ViewCompat$LollipopViewCompatImpl,android.support.v4.view.OnApplyWindowInsetsListener); }
-keepclassmembers class android.view.View { boolean rootViewRequestFocus(); }
-keepclassmembers class android.view.View { void unFocus(android.view.View); }
-keepclassmembers class android.widget.FastScroller$5 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(android.view.View,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean canApplyTheme(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.view.View { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.view.View { void sendAccessibilityEvent(int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getIntrinsicHeight(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getIntrinsicWidth(); }
-keepclassmembers class android.support.v4.app.NotificationCompatKitKat$Builder { void addAction(android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class android.view.View { void sendAccessibilityEventInternal(int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getMinimumWidth(); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void clearColorFilter(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getOpacity(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void <init>(java.net.PlainSocketImpl); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void close(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int[] getState(); }
-keepclassmembers class android.support.v4.app.NotificationCompatKitKat$Builder { android.app.Notification$Builder getBuilder(); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { int getMinimumHeight(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int chooseSize(int,int,int); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void detachViewInternal(int,android.view.View); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader { void close(); }
-keepclassmembers class android.view.MenuInflater { void registerMenu(android.view.MenuItem,android.util.AttributeSet); }
-keepclassmembers class android.view.MenuInflater { void registerMenu(android.view.SubMenu,android.util.AttributeSet); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object getRealOwner(); }
-keepclassmembers class android.view.View { void getBoundsOnScreen(android.graphics.Rect); }
-keepclassmembers class android.view.MenuInflater { android.content.Context access$100(android.view.MenuInflater); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object[] access$300(android.view.MenuInflater); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object access$400(android.view.MenuInflater); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object[] access$600(android.view.MenuInflater); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean isAutoMirrored(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean isStateful(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void jumpToCurrentState(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean isSelecting(android.text.Spannable); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean onLevelChange(int); }
-keepclassmembers class okhttp3.ConnectionSpec { void <init>(okhttp3.ConnectionSpec$Builder); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getCurrentLineTop(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean onStateChange(int[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void <init>(int,int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean isMeasurementUpToDate(int,int,int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setAlpha(int); }
-keepclassmembers class okhttp3.ConnectionSpec { void apply(javax.net.ssl.SSLSocket,boolean); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setAutoMirrored(boolean); }
-keepclassmembers class okhttp3.ConnectionSpec { java.util.List cipherSuites(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setChangingConfigurations(int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void scrapOrRecycleView(android.support.v7.widget.RecyclerView$Recycler,int,android.view.View); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setFilterBitmap(boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void addDisappearingView(android.view.View); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setHotspot(float,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void addDisappearingView(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void addView(android.view.View); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void addView(android.view.View,int); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean setState(int[]); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean isCompatible(javax.net.ssl.SSLSocket); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void assertNotInLayoutOrScroll(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.app.Notification$Action$Builder { android.app.Notification$Action$Builder addExtras(android.os.Bundle); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean isTls(); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.net.Socket { void close(); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean supportsTlsExtensions(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat { boolean setVisible(boolean,boolean); }
-keepclassmembers class okhttp3.ConnectionSpec { java.util.List tlsVersions(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void attachView(android.view.View,int,android.support.v7.widget.RecyclerView$LayoutParams); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.net.Socket { java.net.InetAddress getLocalAddress(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean checkLayoutParams(android.support.v7.widget.RecyclerView$LayoutParams); }
-keepclassmembers class android.view.View { android.view.View$AccessibilityDelegate getAccessibilityDelegate(); }
-keepclassmembers class android.view.View { void setAccessibilityDelegate(android.view.View$AccessibilityDelegate); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.View { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(); }
-keepclassmembers class android.view.View { int getAccessibilityWindowId(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.View { java.lang.CharSequence getContentDescription(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.View { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean isTouchSelecting(boolean,android.text.Spannable); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalBefore(int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.View { void setLabelFor(int); }
-keepclassmembers class java.lang.ProcessBuilder { java.lang.ProcessBuilder redirectErrorStream(boolean); }
-keepclassmembers class libcore.icu.LocaleData { void <init>(); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalAfter(int); }
-keepclassmembers class android.view.View { void onFocusLost(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void detachViewAt(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void dispatchAttachedToWindow(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void dispatchDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { android.view.View findContainingItemView(android.view.View); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.net.Socket { boolean usingSocks(); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec { void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http2.Http2Connection); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(android.graphics.drawable.ColorDrawable$ColorState); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean isAlphaUsedForScale(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { boolean canApplyTheme(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getBaseline(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean isAnimationRunning(android.view.animation.Animation); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { android.view.View getChildAt(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getChildCount(); }
-keepclassmembers class java.net.Socket { boolean isBound(); }
-keepclassmembers class java.net.Socket { boolean isConnected(); }
-keepclassmembers class java.net.Socket { boolean isClosed(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { org.ccil.cowan.tagsoup.ElementType rootElementType(); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context); }
-keepclassmembers class android.support.v4.app.NotificationCompatIceCreamSandwich$Builder { android.app.Notification build(); }
-keepclassmembers class android.support.v4.app.NotificationCompatIceCreamSandwich$Builder { android.app.Notification$Builder getBuilder(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { android.view.View getFocusedChild(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { java.lang.String getURI(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void setColorViewAlpha(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { java.lang.String getPrefix(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getHeight(); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { void setNoCommit(boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getHeightMode(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void setURI(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void setPrefix(java.lang.String); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void setRefreshing(boolean,boolean); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec { okio.Sink createRequestBody(okhttp3.Request,long); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { android.support.v7.preference.Preference findPreference(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getLayoutDirection(); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec { void finishRequest(); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec { void flushRequest(); }
-keepclassmembers class java.net.Socket { boolean isInputShutdown(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getMinimumHeight(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getMinimumWidth(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getPaddingBottom(); }
-keepclassmembers class java.net.Socket { boolean isOutputShutdown(); }
-keepclassmembers class okhttp3.internal.http2.Http2Codec { okhttp3.Response$Builder readResponseHeaders(boolean); }
-keepclassmembers class android.text.method.TimeKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.TimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getPaddingLeft(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void startProgressAlphaMaxAnimation(); }
-keepclassmembers class android.text.method.TimeKeyListener { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getPaddingRight(); }
-keepclassmembers class android.view.View { void setFitsSystemWindows(boolean); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { android.support.v7.preference.PreferenceScreen getPreferenceScreen(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getPaddingTop(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void startProgressAlphaStartAnimation(); }
-keepclassmembers class java.net.Socket { void cacheLocalAddress(); }
-keepclassmembers class android.view.View { void requestApplyInsets(); }
-keepclassmembers class android.view.View { void requestFitSystemWindows(); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(); }
-keepclassmembers class java.net.Socket { void accepted(); }
-keepclassmembers class android.view.View { void setVisibility(int); }
-keepclassmembers class android.view.View { void setFocusable(boolean); }
-keepclassmembers class android.view.View { void setEnabled(boolean); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(android.view.Choreographer$1); }
-keepclassmembers class android.view.View { void setFocusableInTouchMode(boolean); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { void setOnDisplayPreferenceDialogListener(android.support.v7.preference.PreferenceManager$OnDisplayPreferenceDialogListener); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { boolean setPreferences(android.support.v7.preference.PreferenceScreen); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { void setSharedPreferencesName(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate { void <init>(java.security.cert.X509Certificate,byte[]); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate { byte[] getEncoded(); }
-keepclassmembers class android.view.View { boolean isLayoutRtl(); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { void setOnNavigateToScreenListener(android.support.v7.preference.PreferenceManager$OnNavigateToScreenListener); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getWidth(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { int getWidthMode(); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl { void <init>(); }
-keepclassmembers class android.os.Parcel { int dataSize(); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl { int getLayoutDirectionFromFirstChar(java.util.Locale); }
-keepclassmembers class android.os.Parcel { int dataAvail(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class android.os.Parcel { int dataPosition(); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat$TextUtilsCompatImpl { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class android.os.Parcel { void setDataPosition(int); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.os.Parcel { boolean pushAllowFds(boolean); }
-keepclassmembers class dalvik.system.CloseGuard { void <init>(); }
-keepclassmembers class android.view.View { boolean isAttachedToWindow(); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { void setOnPreferenceTreeClickListener(android.support.v7.preference.PreferenceManager$OnPreferenceTreeClickListener); }
-keepclassmembers class android.view.View { void setWillNotDraw(boolean); }
-keepclassmembers class android.os.Parcel { void restoreAllowFds(boolean); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.os.Parcel { void appendFrom(android.os.Parcel,int,int); }
-keepclassmembers class android.view.View { void setWillNotCacheDrawing(boolean); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompatApi23 { void setWindowLayoutType(android.widget.PopupWindow,int); }
-keepclassmembers class android.os.Parcel { boolean hasFileDescriptors(); }
-keepclassmembers class android.os.Parcel { void writeInterfaceToken(java.lang.String); }
-keepclassmembers class android.support.v4.view.MenuItemCompatIcs { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean isNestedScrollingEnabled(); }
-keepclassmembers class android.support.v4.view.MenuItemCompatIcs { boolean isActionViewExpanded(android.view.MenuItem); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[]); }
-keepclassmembers class android.view.View { void setClickable(boolean); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompatApi23 { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[],int,int); }
-keepclassmembers class android.view.View { void setLongClickable(boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean isSmoothScrolling(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean isViewPartiallyVisible(android.view.View,boolean,boolean); }
-keepclassmembers class android.os.Parcel { void writeInt(int); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void onDetachedFromWindow(); }
-keepclassmembers class android.view.View { void setPressed(boolean,float,float); }
-keepclassmembers class dalvik.system.CloseGuard { void close(); }
-keepclassmembers class android.os.Parcel { void writeLong(long); }
-keepclassmembers class android.os.Parcel { void writeFloat(float); }
-keepclassmembers class android.os.Parcel { void writeDouble(double); }
-keepclassmembers class android.os.Parcel { void writeString(java.lang.String); }
-keepclassmembers class android.os.Parcel { void writeCharSequence(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.CardViewGingerbread { float getMinHeight(android.support.v7.widget.CardViewDelegate); }
-keepclassmembers class android.view.View { void dispatchSetPressed(boolean); }
-keepclassmembers class android.support.v7.widget.CardViewGingerbread { float getMinWidth(android.support.v7.widget.CardViewDelegate); }
-keepclassmembers class android.os.Parcel { void writeByte(byte); }
-keepclassmembers class android.os.Parcel { void writeMap(java.util.Map); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$2 { void <init>(int); }
-keepclassmembers class android.view.View { void setSaveFromParentEnabled(boolean); }
-keepclassmembers class android.os.Parcel { void writeStrongBinder(android.os.IBinder); }
-keepclassmembers class android.os.Parcel { void writeBundle(android.os.Bundle); }
-keepclassmembers class android.view.View { android.view.View focusSearch(int); }
-keepclassmembers class android.os.Parcel { void writePersistableBundle(android.os.PersistableBundle); }
-keepclassmembers class android.os.Parcel { void writeSize(android.util.Size); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatStubImpl { void <init>(); }
-keepclassmembers class android.os.Parcel { void writeSizeF(android.util.SizeF); }
-keepclassmembers class android.view.ViewGroup$1 { void <init>(android.view.ViewGroup); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int); }
-keepclassmembers class android.support.v7.widget.CardViewGingerbread { void setBackgroundColor(android.support.v7.widget.CardViewDelegate,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void offsetChildrenHorizontal(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void offsetChildrenVertical(int); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$2 { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onAdapterChanged(android.support.v7.widget.RecyclerView$Adapter,android.support.v7.widget.RecyclerView$Adapter); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean onAddFocusables(android.support.v7.widget.RecyclerView,java.util.ArrayList,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onAttachedToWindow(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onDetachedFromWindow(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onDetachedFromWindow(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.app.RemoteInput { void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],int,android.os.Bundle); }
-keepclassmembers class android.view.GLES20Canvas$CanvasFinalizer { void <init>(long); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.view.View { boolean requestFocus(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.view.View { void clearAccessibilityFocus(); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void <init>(); }
-keepclassmembers class android.view.View { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class android.view.View { boolean requestFocus(int); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class org.acra.sender.HttpSender$Type$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.RemoteInput { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.os.AsyncTask$AsyncTaskResult { void <init>(android.os.AsyncTask,java.lang.Object[]); }
-keepclassmembers class android.app.RemoteInput { void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],int,android.os.Bundle,android.app.RemoteInput$1); }
-keepclassmembers class android.widget.Toast { void setGravity(int,int,int); }
-keepclassmembers class android.util.PathParser$ExtractFloatResult { void <init>(); }
-keepclassmembers class android.util.PathParser$ExtractFloatResult { void <init>(android.util.PathParser$1); }
-keepclassmembers class android.widget.Toast { android.widget.Toast makeText(android.content.Context,int,int); }
-keepclassmembers class android.view.View { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class android.view.View { boolean isActionableForAccessibility(); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplLollipop { void <init>(); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplLollipop { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class android.animation.FloatKeyframeSet { void <init>(android.animation.Keyframe$FloatKeyframe[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { android.view.View onInterceptFocusSearch(android.view.View,int); }
-keepclassmembers class android.animation.FloatKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onItemsChanged(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.animation.FloatKeyframeSet { void invalidateCache(); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean readExternalId(boolean,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onLayoutCompleted(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class java.text.BreakIterator { void <init>(libcore.icu.NativeBreakIterator); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onMeasure(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readElementDeclaration(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.support.v7.widget.RecyclerView$State,android.view.View,android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean onRequestChildFocus(android.support.v7.widget.RecyclerView,android.view.View,android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void onScrollStateChanged(int); }
-keepclassmembers class java.net.Socks4Message { int getPort(); }
-keepclassmembers class java.net.Socks4Message { int getIP(); }
-keepclassmembers class java.net.Socks4Message { void setIP(byte[]); }
-keepclassmembers class java.net.Socks4Message { int getCommandOrResult(); }
-keepclassmembers class java.net.Socks4Message { void setUserId(java.lang.String); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionStart(); }
-keepclassmembers class android.view.View { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class android.view.View { boolean hasListenersForAccessibility(); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionEnd(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void setColorSchemeColors(int[]); }
-keepclassmembers class android.os.Parcel { void writeParcelable(android.os.Parcelable,int); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void setOnRefreshListener(android.support.v4.widget.SwipeRefreshLayout$OnRefreshListener); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void <init>(); }
-keepclassmembers class android.view.View { void dispatchStartTemporaryDetach(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.View { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class android.view.View { void onFinishTemporaryDetach(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$12 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class okhttp3.Dns$1 { void <init>(); }
-keepclassmembers class android.os.Parcel { void readException(); }
-keepclassmembers class android.os.Parcel { int readInt(); }
-keepclassmembers class android.os.Parcel { long readLong(); }
-keepclassmembers class android.os.Parcel { float readFloat(); }
-keepclassmembers class android.os.Parcel { double readDouble(); }
-keepclassmembers class android.os.Parcel { java.lang.String readString(); }
-keepclassmembers class android.os.Parcel { android.os.IBinder readStrongBinder(); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocusedViewOrHost(); }
-keepclassmembers class java.net.Socks4Message { byte[] getBytes(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { boolean startNestedScroll(int); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void stopNestedScroll(); }
-keepclassmembers class java.security.cert.Certificate { void <init>(java.lang.String); }
-keepclassmembers class android.os.Parcel { byte[] createByteArray(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupScrollListener { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupScrollListener { void onScroll(android.widget.AbsListView,int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void removeAndRecycleViewAt(int,android.support.v7.widget.RecyclerView$Recycler); }
-keepclassmembers class android.content.res.Resources$Theme { void setTo(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupScrollListener { void onScrollStateChanged(android.widget.AbsListView,int); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(int[]); }
-keepclassmembers class android.util.StateSet { boolean isWildCard(int[]); }
-keepclassmembers class android.view.View { boolean hasHoveredChild(); }
-keepclassmembers class android.animation.StateListAnimator$1 { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class android.view.View { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { android.view.KeyEvent$DispatcherState getKeyDispatcherState(); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.TypedArray obtainStyledAttributes(int,int[]); }
-keepclassmembers class android.view.View { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout { void setTargetOffsetTopAndBottom(int,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void removeViewAt(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void <init>(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { java.lang.Object get(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void set(java.lang.Object); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { boolean compareAndSet(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean requestChildRectangleOnScreen(android.support.v7.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class android.view.View { boolean hasWindowFocus(); }
-keepclassmembers class android.animation.StateListAnimator$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { java.lang.Object getAndSet(java.lang.Object); }
-keepclassmembers class android.view.View { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { int getIndex(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$21 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void requestLayout(); }
-keepclassmembers class android.view.View { void onWindowVisibilityChanged(int); }
-keepclassmembers class android.content.res.Resources$Theme { boolean resolveAttribute(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.view.View { int getWindowVisibility(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Handshake handshake(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NotificationDeleteIntentReceiver { void <init>(); }
-keepclassmembers class android.content.res.Resources$Theme { android.content.res.Resources getResources(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$2 { void <init>(ar.rulosoft.mimanganu.MainFragment,android.view.Menu); }
-keepclassmembers class android.support.v7.widget.FitWindowsLinearLayout { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$2 { boolean onClose(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setAutoMeasureEnabled(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setExactMeasureSpecsFrom(android.support.v7.widget.RecyclerView); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { boolean isEligible(okhttp3.Address,okhttp3.Route); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.View { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setMeasureSpecs(int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View { void needGlobalAttributesUpdate(boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setMeasuredDimension(int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.view.View { boolean isInTouchMode(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect { int access$500(ar.rulosoft.mimanganu.componentes.MangaFolderSelect); }
-keepclassmembers class android.view.View { android.content.Context getContext(); }
-keepclassmembers class android.content.res.Resources$Theme { java.lang.String getKey(); }
-keepclassmembers class android.view.View { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.content.res.Resources$Theme { java.lang.String access$000(android.content.res.Resources$Theme); }
-keepclassmembers class okio.RealBufferedSource$1 { void <init>(okio.RealBufferedSource); }
-keepclassmembers class android.view.View { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { ar.rulosoft.mimanganu.componentes.readers.Reader$ReaderListener access$000(ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader); }
-keepclassmembers class android.view.View { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.View { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { ar.rulosoft.mimanganu.componentes.readers.Reader$ReaderListener access$100(ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader); }
-keepclassmembers class android.view.View { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.view.View { boolean onCheckIsTextEditor(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.view.View { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { boolean isHealthy(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter$2 { void <init>(ar.rulosoft.mimanganu.adapters.ServerRecAdapter); }
-keepclassmembers class android.view.View { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void setRecyclerView(android.support.v7.widget.RecyclerView); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ServerRecAdapter$2 { boolean onLongClick(android.view.View); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { boolean isMultiplexed(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { void onEndOver(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean shouldMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams); }
-keepclassmembers class okio.RealBufferedSource$1 { void close(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.view.View { void onHoverChanged(boolean); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void onSettings(okhttp3.internal.http2.Http2Connection); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { void onStartOver(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { boolean shouldReMeasureChild(android.view.View,int,int,android.support.v7.widget.RecyclerView$LayoutParams); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void onStream(okhttp3.internal.http2.Http2Stream); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { void seekPage(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.VerticalPagedReader { void setPagerAdapter(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Route route(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { java.net.Socket socket(); }
-keepclassmembers class android.view.View { void removeLongPressCallback(); }
-keepclassmembers class android.view.View { void removePerformClickCallback(); }
-keepclassmembers class android.view.View { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager { void stopSmoothScroller(); }
-keepclassmembers class android.view.View { void cancelLongPress(); }
-keepclassmembers class android.view.View { void removeSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getNumberOfLayers(); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanFlags(java.lang.Object); }
-keepclassmembers class okio.ForwardingSource { void close(); }
-keepclassmembers class okio.ForwardingSource { long read(okio.Buffer,long); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setPaddingMode(int); }
-keepclassmembers class okio.ForwardingSource { okio.Timeout timeout(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$BuilderExtender { void <init>(); }
-keepclassmembers class android.os.Parcel { void <init>(long); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void finishUpdate(android.view.ViewGroup); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void finishUpdate(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.Exceptions.NoConnectionException { void <init>(android.content.Context); }
-keepclassmembers class android.os.Parcel { void freeBuffer(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { int getItemPosition(java.lang.Object); }
-keepclassmembers class android.support.v4.app.NotificationCompat$BuilderExtender { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.PagerAdapter { float getPageWidth(int); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.util.ArrayList access$100(java.lang.Object,android.support.v4.app.Fragment,java.util.ArrayList,android.view.View); }
-keepclassmembers class android.view.View { void bringToFront(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void access$200(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,android.support.v4.util.ArrayMap,boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.support.v4.util.ArrayMap access$300(android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void restoreState(android.os.Parcelable,java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.app.FragmentTransition { void access$000(java.util.ArrayList,int); }
-keepclassmembers class android.support.v4.view.PagerAdapter { android.os.Parcelable saveState(); }
-keepclassmembers class android.view.View { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.support.v4.app.FragmentTransition { android.view.View access$400(android.support.v4.util.ArrayMap,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void setPrimaryItem(android.view.View,int,java.lang.Object); }
-keepclassmembers class android.view.View { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class android.view.View { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.View { android.view.ViewParent getParent(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.view.View { int getScrollX(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.app.ActivityManager$TaskDescription$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void startUpdate(android.view.View); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void startUpdate(android.view.ViewGroup); }
-keepclassmembers class java.security.SecureRandomSpi { void <init>(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.view.View { int getMeasuredWidthAndState(); }
-keepclassmembers class android.net.Uri$Builder { void <init>(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder scheme(java.lang.String); }
-keepclassmembers class android.view.View { android.graphics.Matrix getMatrix(); }
-keepclassmembers class android.support.v4.view.PagerAdapter { void setViewPagerObserver(android.database.DataSetObserver); }
-keepclassmembers class android.view.View { boolean hasIdentityMatrix(); }
-keepclassmembers class android.view.View { int getScrollY(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(android.net.Uri$Part); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(java.lang.String); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder path(android.net.Uri$PathPart); }
-keepclassmembers class android.support.v4.widget.TextViewCompatJbMr2 { void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder appendEncodedPath(java.lang.String); }
-keepclassmembers class android.view.View { float getRotation(); }
-keepclassmembers class android.app.ActionBar { void <init>(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder query(android.net.Uri$Part); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder fragment(android.net.Uri$Part); }
-keepclassmembers class android.view.View { float getRotationY(); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int,int); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int); }
-keepclassmembers class android.view.View { float getScaleX(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder opaquePart(android.net.Uri$Part); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { boolean collapseItemActionView(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.text.Selection { void extendSelection(android.text.Spannable,int); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.text.Selection { void removeSelection(android.text.Spannable); }
-keepclassmembers class android.net.Uri$Builder { boolean hasSchemeOrAuthority(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { boolean expandItemActionView(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.app.ActionBar { boolean invalidateOptionsMenu(); }
-keepclassmembers class android.view.View { float getScaleY(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { android.view.MenuItem getItem(); }
-keepclassmembers class android.view.View { float getPivotX(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { android.support.v7.view.menu.MenuBuilder getRootMenu(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { boolean isQwertyMode(); }
-keepclassmembers class android.view.View { float getRotationX(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekCharacter(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { boolean isShortcutsVisible(); }
-keepclassmembers class android.support.v7.view.menu.SubMenuBuilder { void setCallback(android.support.v7.view.menu.MenuBuilder$Callback); }
-keepclassmembers class android.view.View { float getPivotY(); }
-keepclassmembers class android.text.Selection { boolean moveLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean moveRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.view.View { float getAlpha(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getOpacity(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AlarmReceiver { void <init>(); }
-keepclassmembers class android.text.Selection { boolean extendLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isStateful(); }
-keepclassmembers class android.text.Selection { boolean extendRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean extendToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean extendToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean moveToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean moveToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean moveToPreceding(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class android.text.Selection { boolean moveToFollowing(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class android.view.View { float getTransitionAlpha(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.Reader); }
-keepclassmembers class android.content.ComponentName$1 { void <init>(); }
-keepclassmembers class android.view.View { int getBottom(); }
-keepclassmembers class android.view.View { int getLeft(); }
-keepclassmembers class android.view.View { boolean hasOverlappingRendering(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$ContinueTransitionListener { void <init>(android.app.ActivityTransitionCoordinator); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class android.view.View { int getRight(); }
-keepclassmembers class android.view.View { float getTranslationX(); }
-keepclassmembers class android.view.View { float getElevation(); }
-keepclassmembers class android.view.View { int getTop(); }
-keepclassmembers class android.view.View { float getTranslationY(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token$1 { void <init>(); }
-keepclassmembers class okhttp3.Authenticator$1 { void <init>(); }
-keepclassmembers class okhttp3.Authenticator$1 { okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { void <init>(); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.String[],java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.view.View { void setOutlineProviderFromAttribute(int); }
-keepclassmembers class android.view.View { void setStateListAnimator(android.animation.StateListAnimator); }
-keepclassmembers class android.view.View { float getTranslationZ(); }
-keepclassmembers class android.view.View { void setOutlineProvider(android.view.ViewOutlineProvider); }
-keepclassmembers class android.view.View { android.view.ViewOutlineProvider getOutlineProvider(); }
-keepclassmembers class android.view.View { void rebuildOutline(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase { android.support.v4.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class libcore.io.IoUtils { void close(java.io.FileDescriptor); }
-keepclassmembers class android.support.v4.os.TraceCompat { void beginSection(java.lang.String); }
-keepclassmembers class android.support.v4.content.SharedPreferencesCompat$EditorCompat { void apply(android.content.SharedPreferences$Editor); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.lang.AutoCloseable); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.net.Socket); }
-keepclassmembers class android.text.util.Linkify$4 { void <init>(); }
-keepclassmembers class android.view.View { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class android.view.View { void invalidateOutline(); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(android.text.util.LinkSpec,android.text.util.LinkSpec); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect); }
-keepclassmembers class libcore.io.IoUtils { boolean canOpenReadOnly(java.lang.String); }
-keepclassmembers class android.view.View { android.view.ViewGroup$LayoutParams getLayoutParams(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplBase { void <init>(); }
-keepclassmembers class android.view.View { void resolveLayoutParams(); }
-keepclassmembers class android.view.View { void scrollTo(int,int); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(); }
-keepclassmembers class android.transition.ChangeBounds { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class java.util.EnumMap$EnumMapEntryIterator { void <init>(java.util.MapEntry$Type,java.util.EnumMap); }
-keepclassmembers class android.app.ITransientNotification$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void <init>(java.math.BigInteger,java.util.Date,org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class android.support.v7.app.NotificationCompat { android.support.v4.app.NotificationCompat$MessagingStyle$Message access$000(android.support.v4.app.NotificationCompat$MessagingStyle); }
-keepclassmembers class android.support.v7.app.NotificationCompat { java.lang.CharSequence access$100(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$MessagingStyle,android.support.v4.app.NotificationCompat$MessagingStyle$Message); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void <init>(); }
-keepclassmembers class android.support.v7.app.NotificationCompat { android.widget.RemoteViews access$300(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { boolean checkTag(int); }
-keepclassmembers class android.support.v7.app.NotificationCompat { android.widget.RemoteViews access$400(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class javax.net.DefaultSocketFactory { void <init>(); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void access$500(android.app.Notification,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.support.v7.app.NotificationCompat { android.widget.RemoteViews access$600(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.view.View { void invalidate(); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void access$700(android.app.Notification,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void access$800(android.app.Notification,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void access$900(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getName(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.View { boolean isProjectionReceiver(); }
-keepclassmembers class android.transition.ChangeBounds { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { java.math.BigInteger access$000(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { java.util.Date access$100(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin$2 { void <init>(ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin$2 { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { org.apache.harmony.security.x509.Extensions access$200(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void addDecoratedBigStyleToBuilderJellybean(android.app.Notification,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$4 { void <init>(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void <init>(long); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { long get(); }
-keepclassmembers class android.support.v7.app.NotificationCompat { void addDecoratedHeadsUpToBuilderLollipop(android.app.Notification,android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$11$1$1 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$11$1,android.content.DialogInterface); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object getEnterTransition(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object getExitTransition(android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.view.View { android.view.ViewRootImpl getViewRootImpl(); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.View { boolean post(java.lang.Runnable); }
-keepclassmembers class android.util.Size { void <init>(int,int); }
-keepclassmembers class android.view.View { void postOnAnimation(java.lang.Runnable); }
-keepclassmembers class android.util.Size { int getWidth(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getEventType(); }
-keepclassmembers class android.view.View { void postOnAnimationDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.view.View { boolean removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.view.View { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.view.View { void postInvalidate(int,int,int,int); }
-keepclassmembers class android.util.Size { int getHeight(); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object getSharedElementTransition(android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long,int,int,int,int); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(); }
-keepclassmembers class android.view.View { void postInvalidate(); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long); }
-keepclassmembers class android.support.v4.app.FragmentTransition { java.lang.Object mergeTransitions(java.lang.Object,java.lang.Object,java.lang.Object,android.support.v4.app.Fragment,boolean); }
-keepclassmembers class android.view.View { void computeScroll(); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(int,int,int,int); }
-keepclassmembers class android.view.View { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.view.View { float getLeftFadingEdgeStrength(); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { void recomputePadding(); }
-keepclassmembers class android.database.SQLException { void <init>(java.lang.String); }
-keepclassmembers class android.database.SQLException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1$1$1 { void <init>(ar.rulosoft.mimanganu.utils.UpdateUtil$1$1,android.widget.TextView,android.widget.ProgressBar); }
-keepclassmembers class android.view.View$BaseSavedState$1 { void <init>(); }
-keepclassmembers class android.view.View { int computeHorizontalScrollRange(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void popContentSource(); }
-keepclassmembers class android.view.View { int computeHorizontalScrollExtent(); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object); }
-keepclassmembers class android.view.View { int computeVerticalScrollOffset(); }
-keepclassmembers class android.view.View { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.view.View { int computeVerticalScrollExtent(); }
-keepclassmembers class android.view.View { int computeVerticalScrollRange(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$19$1$1$1 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$19$1$1); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$19$1$1$1 { void run(); }
-keepclassmembers class android.support.v7.app.NotificationCompat { android.widget.RemoteViews getDecoratedContentView(android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { android.widget.ListView access$000(ar.rulosoft.mimanganu.SearchResultsFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { int access$100(ar.rulosoft.mimanganu.SearchResultsFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { boolean access$202(ar.rulosoft.mimanganu.SearchResultsFragment,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { boolean access$302(ar.rulosoft.mimanganu.SearchResultsFragment,boolean); }
-keepclassmembers class java.util.logging.Level { java.lang.String getName(); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { java.lang.String access$500(ar.rulosoft.mimanganu.SearchResultsFragment); }
-keepclassmembers class java.util.logging.Level { int intValue(); }
-keepclassmembers class android.view.View { void onDrawHorizontalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { java.util.ArrayList access$600(ar.rulosoft.mimanganu.SearchResultsFragment); }
-keepclassmembers class android.view.View { void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class android.view.View { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.os.ServiceManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean); }
-keepclassmembers class android.view.View { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class android.view.View { void resetRtlProperties(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class java.util.logging.Level { java.lang.String toString(); }
-keepclassmembers class android.view.View { void onScreenStateChanged(int); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { android.widget.ProgressBar access$400(ar.rulosoft.mimanganu.SearchResultsFragment); }
-keepclassmembers class android.view.View { boolean hasRtlSupport(); }
-keepclassmembers class android.view.View { boolean isRtlCompatibilityMode(); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { void onDetach(); }
-keepclassmembers class android.view.View { void onRtlPropertiesChanged(int); }
-keepclassmembers class java.util.logging.Level { int hashCode(); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.util.ArrayMap { void <init>(); }
-keepclassmembers class android.support.v4.util.ArrayMap { void <init>(int); }
-keepclassmembers class android.support.v4.util.ArrayMap { java.util.Set entrySet(); }
-keepclassmembers class android.support.v4.util.ArrayMap { java.util.Set keySet(); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionInherited(); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.support.v4.util.ArrayMap { boolean retainAll(java.util.Collection); }
-keepclassmembers class android.support.v4.util.ArrayMap { java.util.Collection values(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.L2RReader { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class java.lang.InstantiationException { void <init>(java.lang.String); }
-keepclassmembers class android.util.ArrayMap { void <init>(); }
-keepclassmembers class android.util.ArrayMap { void <init>(int); }
-keepclassmembers class android.media.AudioAttributes$1 { void <init>(); }
-keepclassmembers class android.util.ArrayMap { void <init>(boolean); }
-keepclassmembers class android.util.ArrayMap { void <init>(android.util.ArrayMap); }
-keepclassmembers class android.util.ArrayMap { void clear(); }
-keepclassmembers class android.view.View { void resetResolvedPadding(); }
-keepclassmembers class android.view.View { void onDetachedFromWindow(); }
-keepclassmembers class android.view.View { void cleanupDraw(); }
-keepclassmembers class android.support.v4.app.ActivityCompat$1 { void <init>(java.lang.String[],android.app.Activity,int); }
-keepclassmembers class android.view.View { int getWindowAttachCount(); }
-keepclassmembers class android.view.View { android.os.IBinder getWindowToken(); }
-keepclassmembers class java.io.SerializationHandleMap { int get(java.lang.Object); }
-keepclassmembers class android.view.View { android.os.IBinder getApplicationWindowToken(); }
-keepclassmembers class android.view.View { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class android.util.ArrayMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { boolean containsValue(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet); }
-keepclassmembers class okhttp3.RequestBody$2 { void <init>(okhttp3.MediaType,int,byte[],int); }
-keepclassmembers class okhttp3.RequestBody$2 { okhttp3.MediaType contentType(); }
-keepclassmembers class okhttp3.RequestBody$2 { void writeTo(okio.BufferedSink); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { ar.rulosoft.mimanganu.componentes.Manga access$100(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class android.util.ArrayMap { boolean isEmpty(); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { boolean access$200(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { boolean access$202(ar.rulosoft.mimanganu.DetailsFragment,boolean); }
-keepclassmembers class android.util.ArrayMap { int indexOfKey(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { android.support.design.widget.FloatingActionButton access$300(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { ar.rulosoft.mimanganu.DetailsFragment$LoadDetailsTask access$402(ar.rulosoft.mimanganu.DetailsFragment,ar.rulosoft.mimanganu.DetailsFragment$LoadDetailsTask); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { ar.rulosoft.mimanganu.servers.ServerBase access$600(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { android.support.v4.widget.SwipeRefreshLayout access$500(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { ar.rulosoft.mimanganu.componentes.ControlInfo access$700(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { com.fedorvlasov.lazylist.ImageLoader access$800(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class android.view.View { void cancelPendingInputEvents(); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class okhttp3.Request$Builder { void <init>(okhttp3.Request); }
-keepclassmembers class android.view.View { void saveHierarchyState(android.util.SparseArray); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl { void setListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { void onDetach(); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { void <init>(java.util.Set); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean); }
-keepclassmembers class android.view.View { void restoreHierarchyState(android.util.SparseArray); }
-keepclassmembers class android.view.View { android.view.Display getDisplay(); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class android.animation.KeyframeSet { void invalidateCache(); }
-keepclassmembers class android.animation.KeyframeSet { java.util.List getKeyframes(); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder header(java.lang.String,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity$2 { void <init>(ar.rulosoft.mimanganu.MainActivity); }
-keepclassmembers class android.view.View { long getDrawingTime(); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder headers(okhttp3.Headers); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String name(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String namespace(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String localName(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { int model(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { int flags(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { org.ccil.cowan.tagsoup.AttributesImpl atts(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { org.ccil.cowan.tagsoup.ElementType parent(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDefaultNavigationContentDescription(int); }
-keepclassmembers class android.view.View { boolean hasStaticLayer(); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Float); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder removeHeader(java.lang.String); }
-keepclassmembers class android.view.View { int getLayerType(); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.content.Context getContext(); }
-keepclassmembers class android.util.ArrayMap { int size(); }
-keepclassmembers class android.view.View { android.view.HardwareLayer getHardwareLayer(); }
-keepclassmembers class android.view.View { void setDrawingCacheEnabled(boolean); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowCallback(android.view.Window$Callback); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitle(java.lang.CharSequence); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setAttribute(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setParent(org.ccil.cowan.tagsoup.ElementType); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { void dispatchGetDisplayList(); }
-keepclassmembers class android.util.ArrayMap { boolean retainAll(java.util.Collection); }
-keepclassmembers class android.view.View { boolean canHaveDisplayList(); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.util.ArrayMap { java.util.Set keySet(); }
-keepclassmembers class android.util.ArrayMap { java.util.Collection values(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap access$100(android.os.Parcel); }
-keepclassmembers class android.view.View { android.view.RenderNode getDisplayList(); }
-keepclassmembers class android.animation.KeyframeSet { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.view.View { void resetDisplayList(); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { boolean access$000(com.fedorvlasov.lazylist.ImageLoader,ar.rulosoft.mimanganu.componentes.Imaginable,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { java.util.ArrayList getMangas(); }
-keepclassmembers class android.view.View { void destroyDrawingCache(); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { com.fedorvlasov.lazylist.MemCache access$200(com.fedorvlasov.lazylist.ImageLoader); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <init>(); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { android.os.Handler access$300(com.fedorvlasov.lazylist.ImageLoader); }
-keepclassmembers class android.os.StrictMode$3 { void <init>(); }
-keepclassmembers class android.os.StrictMode$3 { java.lang.Object initialValue(); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { void displayImg(java.lang.String,ar.rulosoft.mimanganu.componentes.Imaginable); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { void <init>(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean draw(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean isFinished(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onAbsorb(java.lang.Object,int); }
-keepclassmembers class android.graphics.drawable.Ripple { void move(float,float); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { boolean onRelease(java.lang.Object); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl { void setSize(java.lang.Object,int,int); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { void <init>(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.res.CompatibilityInfo$1 { void <init>(); }
-keepclassmembers class java.util.SimpleTimeZone { void <init>(int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { boolean canApplyTheme(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { boolean hasList(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean isHardwareAnimating(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean hasTranslucentRoot(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { java.lang.CharSequence access$100(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.widget.Toolbar access$000(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { void <init>(); }
-keepclassmembers class android.graphics.drawable.Ripple { void jump(); }
-keepclassmembers class android.graphics.drawable.Ripple { void createPendingHardwareExit(int,int); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MyMangaIo { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class java.util.concurrent.FutureTask { void <init>(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.Ripple { void endSoftwareAnimations(); }
-keepclassmembers class java.util.SimpleTimeZone { int getDSTSavings(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void createCachedBitmapIfNeeded(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canReuseBitmap(int,int); }
-keepclassmembers class android.view.View { boolean isInEditMode(); }
-keepclassmembers class java.util.AbstractQueue { void <init>(); }
-keepclassmembers class android.view.View { boolean isPaddingOffsetRequired(); }
-keepclassmembers class java.lang.NoSuchFieldException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { int getRightPaddingOffset(); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { android.graphics.Bitmap access$100(com.fedorvlasov.lazylist.ImageLoader,java.lang.String); }
-keepclassmembers class android.view.View { int getTopPaddingOffset(); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context); }
-keepclassmembers class android.view.View { int getBottomPaddingOffset(); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancel(); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancelSoftwareAnimations(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void updateCacheStates(); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class java.util.concurrent.FutureTask { java.lang.Object get(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canReuseCache(); }
-keepclassmembers class android.view.ViewGroup { boolean debugDraw(); }
-keepclassmembers class android.view.View { boolean isHardwareAccelerated(); }
-keepclassmembers class android.view.View { int getLeftPaddingOffset(); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.Ripple { void invalidateSelf(); }
-keepclassmembers class android.graphics.drawable.Ripple { void access$100(android.graphics.drawable.Ripple); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$1 { void <init>(); }
-keepclassmembers class java.util.concurrent.FutureTask { void done(); }
-keepclassmembers class java.util.concurrent.FutureTask { void set(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.Ripple { void removeSelf(); }
-keepclassmembers class android.util.XmlPullAttributes { void <init>(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeCount(); }
-keepclassmembers class java.util.concurrent.FutureTask { void setException(java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getAttributeValue(int); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getPositionDescription(); }
-keepclassmembers class java.util.concurrent.FutureTask { void run(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$2$1 { void <init>(android.support.v7.view.menu.CascadingMenuPopup$2,android.support.v7.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$2$1 { void run(); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeNameResource(int); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getName(); }
-keepclassmembers class java.io.ObjectStreamField { int getOffset(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void <init>(); }
-keepclassmembers class java.util.SimpleTimeZone { int getRawOffset(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int combineMeasuredStates(int,int); }
-keepclassmembers class java.io.ObjectStreamField { char getTypeCode(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { long getFrameTime(); }
-keepclassmembers class java.io.ObjectStreamField { char typeCodeOf(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int getLayerType(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { android.graphics.Matrix getMatrix(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int getMeasuredState(android.view.View); }
-keepclassmembers class java.util.SimpleTimeZone { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class java.util.concurrent.FutureTask { void handlePossibleCancellationInterrupt(int); }
-keepclassmembers class java.util.concurrent.FutureTask { void finishCompletion(); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { float getScaleX(android.view.View); }
-keepclassmembers class android.util.XmlPullAttributes { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class android.view.ViewGroup { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class java.io.ObjectStreamField { boolean isPrimitive(); }
-keepclassmembers class android.view.ViewGroup { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeResourceValue(int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { float getTranslationY(android.view.View); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeIntValue(int,int); }
-keepclassmembers class java.io.ObjectStreamField { void setOffset(int); }
-keepclassmembers class android.view.ViewGroup { void focusableViewAvailable(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.util.XmlPullAttributes { float getAttributeFloatValue(int,float); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.view.ViewGroup { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class java.io.ObjectStreamField { boolean writeField(java.io.DataOutputStream); }
-keepclassmembers class android.view.ViewGroup { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class android.view.ViewGroup { android.view.View focusSearch(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void jumpDrawablesToCurrentState(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class java.io.ObjectStreamField { boolean isUnshared(); }
-keepclassmembers class java.io.ObjectStreamField { void setUnshared(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setScaleX(android.view.View,float); }
-keepclassmembers class java.util.concurrent.FutureTask { void removeWaiter(java.util.concurrent.FutureTask$WaitNode); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setScaleY(android.view.View,float); }
-keepclassmembers class android.view.ViewGroup { boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setTranslationY(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat$HCViewCompatImpl { void setAlpha(android.view.View,float); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionX(); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionY(); }
-keepclassmembers class android.view.ViewGroup { boolean hasTransientState(); }
-keepclassmembers class android.widget.Editor$PositionListener { void onScrollChanged(); }
-keepclassmembers class android.view.ViewGroup { void clearChildFocus(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.view.ViewGroup { void clearFocus(); }
-keepclassmembers class android.widget.Editor$PositionListener { void updatePosition(); }
-keepclassmembers class android.view.ViewGroup { void unFocus(android.view.View); }
-keepclassmembers class android.view.ViewGroup { android.view.View getFocusedChild(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy$1 { void <init>(android.os.StrictMode$AndroidBlockGuardPolicy,android.view.IWindowManager,java.util.ArrayList); }
-keepclassmembers class java.util.SimpleTimeZone { boolean useDaylightTime(); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFocus(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { boolean hasList(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { void onCancelled(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { boolean hasNext(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { void onPostExecute(java.lang.Void); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { ar.rulosoft.mimanganu.componentes.Chapter access$1900(ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator { ar.rulosoft.mimanganu.componentes.FilterViewGenerator$FilterListener access$000(ar.rulosoft.mimanganu.componentes.FilterViewGenerator); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager$DefaultSpanSizeLookup { int getSpanSize(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { void onProgressUpdate(java.lang.Integer[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator { android.app.AlertDialog getDialog(); }
-keepclassmembers class android.app.FragmentManagerState$1 { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator { android.widget.CompoundButton[][] access$100(ar.rulosoft.mimanganu.componentes.FilterViewGenerator); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator { void setFilterListener(ar.rulosoft.mimanganu.componentes.FilterViewGenerator$FilterListener); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator$1$3 { void <init>(ar.rulosoft.mimanganu.componentes.FilterViewGenerator$1); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class android.view.textservice.TextInfo$1 { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.EsMangaHere { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.support.v7.app.AlertController$AlertParams$2 { void <init>(android.support.v7.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,android.support.v7.app.AlertController$RecycleListView,android.support.v7.app.AlertController); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(); }
-keepclassmembers class java.security.Permission { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.style.QuoteSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.app.FragmentManager { void <init>(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$OnPreDrawListener { void <init>(android.support.design.widget.CoordinatorLayout); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token); }
-keepclassmembers class android.text.StaticLayout { int getLineCount(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void <init>(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.view.inputmethod.ExtractedText$1 { void <init>(); }
-keepclassmembers class android.os.Parcel$1 { void <init>(); }
-keepclassmembers class android.text.StaticLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.text.StaticLayout { int getBottomPadding(); }
-keepclassmembers class android.text.StaticLayout { int getTopPadding(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void clearMutated(); }
-keepclassmembers class android.view.ViewGroup { void recomputeViewAttributes(android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.text.StaticLayout { void prepare(); }
-keepclassmembers class android.text.StaticLayout { void finish(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$ChunkedSink { void flush(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { void bringChildToFront(android.view.View); }
-keepclassmembers class android.widget.FastScroller$1 { void <init>(android.widget.FastScroller); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$ChunkedSink { okio.Timeout timeout(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$2 { void <init>(android.support.v7.view.menu.CascadingMenuPopup); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.FontFamily { boolean addFontWeightStyle(java.lang.String,int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread { ar.rulosoft.mimanganu.componentes.Chapter access$1902(ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.support.v7.view.menu.CascadingMenuPopup$2 { void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop$1 { void <init>(android.support.v4.view.ViewCompatLollipop$OnApplyWindowInsetsListenerBridge); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { android.graphics.Matrix access$200(android.support.graphics.drawable.VectorDrawableCompat$VGroup); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { android.graphics.Matrix access$300(android.support.graphics.drawable.VectorDrawableCompat$VGroup); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void <init>(android.view.ViewPropertyAnimator,android.view.ViewPropertyAnimator$1); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { java.lang.String getGroupName(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VGroup { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void flush(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { boolean isShutdown(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { int maxConcurrentStreams(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getHeadersCount(); }
-keepclassmembers class android.text.StaticLayout { int getEllipsizedWidth(); }
-keepclassmembers class okio.Buffer { void <init>(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getFootersCount(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEmpty(); }
-keepclassmembers class libcore.io.Streams { byte[] readFully(java.io.InputStream); }
-keepclassmembers class android.util.SparseIntArray { int get(int); }
-keepclassmembers class android.util.SparseIntArray { void <init>(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources,android.graphics.drawable.AnimatedVectorDrawable$1); }
-keepclassmembers class android.os.Message$1 { void <init>(); }
-keepclassmembers class android.util.SparseIntArray { int get(int,int); }
-keepclassmembers class android.util.SparseIntArray { int size(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { ar.rulosoft.mimanganu.componentes.Chapter access$2200(ar.rulosoft.mimanganu.MangaFragment$DeleteImages); }
-keepclassmembers class android.util.SparseIntArray { int keyAt(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { ar.rulosoft.mimanganu.componentes.Chapter access$2202(ar.rulosoft.mimanganu.MangaFragment$DeleteImages,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$8 { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { ar.rulosoft.mimanganu.servers.ServerBase access$2300(ar.rulosoft.mimanganu.MangaFragment$DeleteImages); }
-keepclassmembers class android.view.ViewGroup { void exitHoverTargets(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$8 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean hasStableIds(); }
-keepclassmembers class android.util.SparseIntArray { void clear(); }
-keepclassmembers class android.view.ViewGroup { void cancelHoverTarget(android.view.View); }
-keepclassmembers class android.database.sqlite.SQLiteStatementInfo { void <init>(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$LoadMode { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { android.view.MotionEvent obtainMotionEventNoHistoryOrSelf(android.view.MotionEvent); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getViewTypeCount(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void shutdown(okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.animation.ValueAnimator { void setDurationScale(float); }
-keepclassmembers class okio.Buffer { void close(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void start(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { void onCancelled(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.ListAdapter getWrappedAdapter(); }
-keepclassmembers class android.view.ViewGroup { boolean hasHoveredChild(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { void onPostExecute(java.lang.Integer); }
-keepclassmembers class android.graphics.CanvasProperty { long getNativeContainer(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(long); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.Locale); }
-keepclassmembers class android.view.View { int getSolidColor(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$UnknownLengthSource { void <init>(okhttp3.internal.http1.Http1Codec); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$UnknownLengthSource { void close(); }
-keepclassmembers class android.text.SpanSet { void <init>(java.lang.Class); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void drawableStateChanged(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$DeleteImages { void onProgressUpdate(java.lang.Integer[]); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void writePing(boolean,int,int,okhttp3.internal.http2.Ping); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { int getCompoundPaddingLeft(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { boolean hasOverlappingRendering(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection { void writeSynReset(int,okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class java.lang.BootClassLoader { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void setButtonDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void setSupportButtonTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat { int noteProxyOp(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatImageButton { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat { java.lang.String permissionToOp(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void setSupportButtonTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.PropertyValuesHolder[] getValues(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangasRecAdapterText$1 { void onClick(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$8 { void <init>(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$8 { void run(); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$1 { void <init>(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void <init>(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setColor(int); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void update(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { boolean updatePath(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat { android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$3 { void <init>(ar.rulosoft.mimanganu.MainFragment,android.support.v7.widget.SearchView); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class android.view.View { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat { void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode); }
-keepclassmembers class rapid.decoder.BitmapDecoder$1 { void <init>(android.net.Uri); }
-keepclassmembers class java.util.Collections$3 { void <init>(java.util.Collection); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void stopAnimation(); }
-keepclassmembers class java.util.Collections$3 { boolean hasMoreElements(); }
-keepclassmembers class android.database.sqlite.SQLiteQuery { void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void access$400(android.widget.Editor$CorrectionHighlighter,boolean); }
-keepclassmembers class java.util.Collections$3 { java.lang.Object nextElement(); }
-keepclassmembers class android.animation.ValueAnimator { long getStartDelay(); }
-keepclassmembers class java.util.WeakHashMap$2 { void <init>(java.util.WeakHashMap); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$3 { boolean onQueryTextSubmit(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.Object getAnimatedValue(); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatCount(int); }
-keepclassmembers class android.view.View { void sizeChange(int,int,int,int); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatMode(int); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class android.view.View { void onFinishInflate(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.view.ViewGroup { void clearTouchTargets(); }
-keepclassmembers class android.support.v7.widget.AppCompatCheckBox { void <init>(android.content.Context); }
-keepclassmembers class android.view.ViewGroup { void cancelAndClearTouchTargets(android.view.MotionEvent); }
-keepclassmembers class android.view.View { android.content.res.Resources getResources(); }
-keepclassmembers class android.support.v7.content.res.AppCompatResources { boolean isColorInt(android.content.Context,int); }
-keepclassmembers class android.view.View { void unscheduleDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.ValueAnimator { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget getTouchTarget(android.view.View); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class android.view.View { void onResolveDrawables(int); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget addTouchTarget(android.view.View,int); }
-keepclassmembers class android.view.View { void drawableStateChanged(); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.view.WindowInsets); }
-keepclassmembers class android.view.View { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.view.View { void resetResolvedDrawables(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool { java.lang.Object obtain(); }
-keepclassmembers class android.view.ViewGroup { void cancelTouchTarget(android.view.View); }
-keepclassmembers class android.view.View { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.widget.RemoteViews { void setNotRoot(); }
-keepclassmembers class android.widget.RemoteViews { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF); }
-keepclassmembers class android.animation.ValueAnimator { void start(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool { boolean onRecycle(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void createPendingHardwareExit(int,int,int); }
-keepclassmembers class android.widget.RemoteViews { boolean hasLandscapeAndPortraitLayouts(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool { void onReset(java.lang.Object); }
-keepclassmembers class android.view.ViewOverlay { android.view.ViewGroup getOverlayView(); }
-keepclassmembers class android.widget.RemoteViews { void configureRemoteViewsAsChild(android.widget.RemoteViews); }
-keepclassmembers class android.view.WindowInsets { boolean isConsumed(); }
-keepclassmembers class android.view.ViewOverlay { boolean isEmpty(); }
-keepclassmembers class android.animation.ValueAnimator { void end(); }
-keepclassmembers class libcore.net.url.FtpHandler { void <init>(); }
-keepclassmembers class android.view.View { void jumpDrawablesToCurrentState(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread$1 { void <init>(ar.rulosoft.mimanganu.MangaFragment$MarkSelectedAsUnread,int); }
-keepclassmembers class android.view.View { void setBackgroundResource(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.CompoundGroup { void add(android.widget.CompoundButton); }
-keepclassmembers class android.view.View { void setBackground(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect); }
-keepclassmembers class android.animation.ValueAnimator { boolean isStarted(); }
-keepclassmembers class android.os.UserHandle$1 { void <init>(); }
-keepclassmembers class okio.Buffer { boolean rangeEquals(long,okio.ByteString); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void jump(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void endSoftwareAnimations(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState$1 { void <init>(); }
-keepclassmembers class android.animation.ValueAnimator { boolean canReverse(); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(android.os.StrictMode$1); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancel(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancelSoftwareAnimations(); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider { void <init>(java.util.List); }
-keepclassmembers class android.view.animation.Animation$1 { void <init>(android.view.animation.Animation); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void invalidateSelf(); }
-keepclassmembers class android.animation.ValueAnimator { boolean isRunning(); }
-keepclassmembers class android.view.View { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.AnimatorListenerAdapter access$100(android.graphics.drawable.RippleBackground); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.ObjectAnimator access$202(android.graphics.drawable.RippleBackground,android.animation.ObjectAnimator); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean access$302(android.graphics.drawable.RippleBackground,boolean); }
-keepclassmembers class android.view.View { android.content.res.ColorStateList getBackgroundTintList(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool { java.lang.Object obtainNotReset(); }
-keepclassmembers class android.view.View { android.graphics.PorterDuff$Mode getBackgroundTintMode(); }
-keepclassmembers class android.view.View { void setPadding(int,int,int,int); }
-keepclassmembers class android.database.ContentObservable { void <init>(); }
-keepclassmembers class android.view.View { int getPaddingTop(); }
-keepclassmembers class android.os.NetworkOnMainThreadException { void <init>(); }
-keepclassmembers class android.view.View { int getPaddingBottom(); }
-keepclassmembers class android.view.View { void applyBackgroundTint(); }
-keepclassmembers class android.widget.RemoteViews { int estimateMemoryUsage(); }
-keepclassmembers class android.view.View { int getPaddingLeft(); }
-keepclassmembers class okio.ByteString { void <init>(byte[]); }
-keepclassmembers class android.view.View { int getPaddingRight(); }
-keepclassmembers class android.animation.ValueAnimator { float getAnimatedFraction(); }
-keepclassmembers class android.view.View { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class android.text.method.DateKeyListener { void <init>(); }
-keepclassmembers class android.text.method.DateKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.DateKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class okio.Buffer { int readIntLe(); }
-keepclassmembers class android.view.View { void resetPaddingToInitialValues(); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPrePerformAccessibilityAction(android.view.View,int,android.os.Bundle); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int,float); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int,float,boolean); }
-keepclassmembers class android.view.View { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int); }
-keepclassmembers class android.view.View { void dispatchSetSelected(boolean); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager$1 { void <init>(android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager); }
-keepclassmembers class android.view.ViewGroup { void dispatchFreezeSelfOnly(android.util.SparseArray); }
-keepclassmembers class okio.Buffer { short readShortLe(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback { void <init>(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.view.View { void dispatchSetActivated(boolean); }
-keepclassmembers class android.view.InputDevice { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$ActionMenuPopupCallback { android.support.v7.view.menu.ShowableListMenu getPopup(); }
-keepclassmembers class android.animation.ValueAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchThawSelfOnly(android.util.SparseArray); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.animation.ValueAnimator { long access$000(android.animation.ValueAnimator); }
-keepclassmembers class android.animation.ValueAnimator { void access$100(android.animation.ValueAnimator,android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class okio.Buffer { java.lang.String readUtf8(long); }
-keepclassmembers class android.animation.ValueAnimator { boolean access$200(android.animation.ValueAnimator,long); }
-keepclassmembers class android.animation.ValueAnimator { boolean access$302(android.animation.ValueAnimator,boolean); }
-keepclassmembers class okio.ByteString { java.lang.String base64(); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel,android.view.InputDevice$1); }
-keepclassmembers class android.view.ViewGroup { boolean isLayoutModeOptical(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Map$Entry eldest(); }
-keepclassmembers class java.util.LinkedHashMap { void clear(); }
-keepclassmembers class okio.ByteString { int hashCode(); }
-keepclassmembers class java.util.GregorianCalendar { int daysInMonth(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setElevation(float); }
-keepclassmembers class android.view.ViewGroup { int sign(int); }
-keepclassmembers class java.util.LinkedHashMap { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHasEmbeddedTabs(boolean); }
-keepclassmembers class android.widget.RemoteViews { int getSequenceNumber(); }
-keepclassmembers class okio.Buffer { long size(); }
-keepclassmembers class android.view.ViewGroup { void drawRectCorners(android.graphics.Canvas,int,int,int,int,android.graphics.Paint,int,int); }
-keepclassmembers class okio.ByteString { byte getByte(int); }
-keepclassmembers class android.view.View { android.view.View findViewTraversal(int); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator clone(); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { boolean shouldExpandActionArea(); }
-keepclassmembers class java.net.ContentHandler { void <init>(); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setShowHideAnimationEnabled(boolean); }
-keepclassmembers class android.view.View { android.view.View findViewById(int); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void initialize(android.support.v7.view.menu.MenuItemImpl,int); }
-keepclassmembers class okio.ByteString { boolean rangeEquals(int,okio.ByteString,int,int); }
-keepclassmembers class okio.ByteString { int size(); }
-keepclassmembers class android.view.KeyCharacterMap$UnavailableException { void <init>(java.lang.String); }
-keepclassmembers class okio.Buffer { okio.Timeout timeout(); }
-keepclassmembers class okio.ByteString { boolean startsWith(okio.ByteString); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicate(com.android.internal.util.Predicate); }
-keepclassmembers class okio.Buffer { java.lang.String toString(); }
-keepclassmembers class android.view.View { void setId(int); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { android.support.v7.view.menu.MenuItemImpl getItemData(); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void setCheckable(boolean); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void setChecked(boolean); }
-keepclassmembers class android.view.View { int getId(); }
-keepclassmembers class android.widget.RemoteViews { android.widget.RemoteViews$BitmapCache access$400(android.widget.RemoteViews); }
-keepclassmembers class android.view.View { java.lang.Object getTag(); }
-keepclassmembers class android.view.View { void setTag(java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews { void access$600(android.widget.RemoteViews,android.widget.RemoteViews); }
-keepclassmembers class android.view.View { java.lang.Object getTag(int); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.RemoteViews { void access$800(android.widget.RemoteViews,android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.os.UserHandle { void <init>(int); }
-keepclassmembers class android.os.UserHandle { int getIdentifier(); }
-keepclassmembers class okio.Buffer { okio.BufferedSink write(okio.ByteString); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setTitle(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class okio.Buffer { okio.BufferedSink write(byte[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$ImagesStates { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.SocketException { void <init>(); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.String); }
-keepclassmembers class android.view.InputDevice$1 { void <init>(); }
-keepclassmembers class okio.Buffer { okio.BufferedSink write(byte[],int,int); }
-keepclassmembers class android.support.design.internal.NavigationMenuItemView { void setTitle(java.lang.CharSequence); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class okio.Timeout$1 { void <init>(); }
-keepclassmembers class okio.Timeout$1 { okio.Timeout deadlineNanoTime(long); }
-keepclassmembers class android.view.InputDevice$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void <init>(android.widget.RemoteViews,int,java.lang.String,android.graphics.Bitmap); }
-keepclassmembers class okio.Timeout$1 { okio.Timeout timeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class okio.ByteString { void write(okio.Buffer); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { int getNavigationMode(); }
-keepclassmembers class java.util.TreeMap$1 { void <init>(); }
-keepclassmembers class java.util.TreeMap$1 { int compare(java.lang.Comparable,java.lang.Comparable); }
-keepclassmembers class android.view.ViewGroup { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.View { int getBaseline(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHomeButtonEnabled(boolean); }
-keepclassmembers class okio.Buffer { okio.BufferedSink writeByte(int); }
-keepclassmembers class okio.Base64 { java.lang.String encode(byte[]); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$IntKeyframes); }
-keepclassmembers class android.view.ViewGroup { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.support.v4.app.OneShotPreDrawListener { void <init>(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.view.ViewGroup { void setClipToPadding(boolean); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,int[]); }
-keepclassmembers class android.support.v4.app.OneShotPreDrawListener { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class android.support.v4.app.OneShotPreDrawListener { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class android.view.View { void onMeasure(int,int); }
-keepclassmembers class java.util.jar.Manifest$Chunk { void <init>(int,int); }
-keepclassmembers class android.support.v4.app.OneShotPreDrawListener { void removeListener(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { java.lang.Object getAnimatedValue(); }
-keepclassmembers class android.widget.RadioButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.Integer { void <init>(int); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Integer); }
-keepclassmembers class okio.Buffer { okio.BufferedSink writeDecimalLong(long); }
-keepclassmembers class java.lang.Integer { int compare(int,int); }
-keepclassmembers class android.widget.RadioButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.view.View { int getDefaultSize(int,int); }
-keepclassmembers class android.view.ViewGroup { boolean getClipToPadding(); }
-keepclassmembers class android.widget.RadioButton { void toggle(); }
-keepclassmembers class android.view.View { int getSuggestedMinimumWidth(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$5 { void <init>(ar.rulosoft.mimanganu.MainFragment,ar.rulosoft.mimanganu.componentes.Manga); }
-keepclassmembers class android.view.View { int getMinimumHeight(); }
-keepclassmembers class android.view.View { int getMinimumWidth(); }
-keepclassmembers class android.view.View { int getSuggestedMinimumHeight(); }
-keepclassmembers class android.view.ViewGroup { boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation); }
-keepclassmembers class android.view.View { void setMinimumWidth(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$AccessibilityDelegate { void <init>(); }
-keepclassmembers class android.view.View { android.view.animation.Animation getAnimation(); }
-keepclassmembers class android.view.View { void setMinimumHeight(int); }
-keepclassmembers class okhttp3.internal.http2.ErrorCode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.view.View { void startAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.View { void clearAnimation(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class android.app.ActivityManagerNative$1 { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View); }
-keepclassmembers class android.app.ActivityManagerNative$1 { java.lang.Object create(); }
-keepclassmembers class java.util.MissingResourceException { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.View { boolean onSetAlpha(int); }
-keepclassmembers class java.lang.Integer { int intValue(); }
-keepclassmembers class android.view.View { void playSoundEffect(int); }
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerCompat { void <init>(); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String); }
-keepclassmembers class android.view.View { boolean performHapticFeedback(int); }
-keepclassmembers class java.lang.Integer { int hashCode(); }
-keepclassmembers class android.view.ViewGroup { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.ViewGroup { void onViewAdded(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void onViewRemoved(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void clearCachedLayoutMode(); }
-keepclassmembers class android.view.ViewGroup { void onAttachedToWindow(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { boolean hasList(); }
-keepclassmembers class android.view.ViewGroup { boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.View { void onWindowSystemUiVisibilityChanged(int); }
-keepclassmembers class android.view.ViewGroup { void onDetachedFromWindow(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.HeavenManga { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(); }
-keepclassmembers class java.text.Format { void <init>(); }
-keepclassmembers class java.lang.Integer { java.lang.String toBinaryString(int); }
-keepclassmembers class java.lang.Integer { java.lang.String toHexString(int); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(int); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { boolean collapseActionView(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat$2 { void <init>(android.support.v7.preference.PreferenceFragmentCompat); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat$2 { void run(); }
-keepclassmembers class android.system.Os { android.system.StructStatVfs statvfs(java.lang.String); }
-keepclassmembers class okio.Buffer { okio.Buffer writeUtf8(java.lang.String); }
-keepclassmembers class android.view.View { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class android.view.ViewGroup { void removeView(android.view.View); }
-keepclassmembers class android.view.View { int getWindowSystemUiVisibility(); }
-keepclassmembers class android.view.ViewGroup { void removeViewInLayout(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void bindLayoutAnimation(android.view.View); }
-keepclassmembers class android.view.View { void onCloseSystemDialogs(java.lang.String); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(int,int,float,float); }
-keepclassmembers class android.view.ViewGroup { void removeViewInternal(int,android.view.View); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDefaultDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean removeViewInternal(android.view.View); }
-keepclassmembers class android.view.ViewGroup { android.animation.LayoutTransition getLayoutTransition(); }
-keepclassmembers class android.view.ViewGroup { void setLayoutTransition(android.animation.LayoutTransition); }
-keepclassmembers class android.view.ViewGroup { void removeViewAt(int); }
-keepclassmembers class android.view.ViewGroup { void removeAllViews(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$2 { void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,long); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.FilterViewGenerator$1 { void <init>(ar.rulosoft.mimanganu.componentes.FilterViewGenerator,ar.rulosoft.mimanganu.componentes.ServerFilter[]); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$2 { void execute(); }
-keepclassmembers class okio.Buffer { okio.BufferedSink writeUtf8(java.lang.String); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(android.content.res.CompatibilityInfo$1); }
-keepclassmembers class libcore.util.BasicLruCache { void trimToSize(int); }
-keepclassmembers class libcore.util.BasicLruCache { void entryEvicted(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class android.view.KeyEvent { int getDeadChar(int,int); }
-keepclassmembers class android.graphics.RectF$1 { void <init>(); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void detachViewFromParent(android.view.View); }
-keepclassmembers class android.view.KeyEvent { void <init>(long,long,int,int,int,int,int,int,int); }
-keepclassmembers class android.view.View { int getOverScrollMode(); }
-keepclassmembers class android.app.IntentService { void setIntentRedelivery(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.os.Bundle { void <init>(); }
-keepclassmembers class android.app.IntentService { void onStart(android.content.Intent,int); }
-keepclassmembers class android.app.IntentService { int onStartCommand(android.content.Intent,int,int); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,long,int); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getResourceText(int); }
-keepclassmembers class android.app.IntentService { void onDestroy(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View); }
-keepclassmembers class android.view.View { void stopNestedScroll(); }
-keepclassmembers class android.app.IntentService { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void <init>(); }
-keepclassmembers class android.view.View { boolean hasNestedScrollingParent(); }
-keepclassmembers class android.view.ViewGroup { void detachViewsFromParent(int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View,int); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Bundle); }
-keepclassmembers class java.io.ObjectInputStream { int available(); }
-keepclassmembers class android.os.Bundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class android.os.Bundle { boolean setAllowFds(boolean); }
-keepclassmembers class android.os.Bundle { void clear(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class java.io.ObjectInputStream { void close(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setChecked(boolean); }
-keepclassmembers class java.io.ObjectInputStream { byte nextTC(); }
-keepclassmembers class java.io.ObjectInputStream { void pushbackTC(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setEnabled(boolean); }
-keepclassmembers class java.io.ObjectInputStream { int read(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$AsyncAddChapters { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class java.io.ObjectInputStream { int read(byte[],int,int); }
-keepclassmembers class org.acra.collector.Collector { void <init>(org.acra.ReportField[]); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setPassword(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$AsyncAddChapters { void <init>(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.MangaFragment$1); }
-keepclassmembers class org.acra.collector.Collector { org.acra.ReportField[] canCollect(); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,int); }
-keepclassmembers class android.content.res.AssetManager { void ensureStringBlocks(); }
-keepclassmembers class org.acra.collector.Collector { boolean shouldCollect(java.util.Set,org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.view.View { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class java.io.ObjectInputStream { boolean readBoolean(); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.app.IntentService { void <init>(java.lang.String); }
-keepclassmembers class android.os.Bundle { void <init>(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Sub { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollable(boolean); }
-keepclassmembers class java.io.ObjectInputStream { void discardData(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setItemCount(int); }
-keepclassmembers class java.io.Reader { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setCurrentItemIndex(int); }
-keepclassmembers class org.acra.ACRA$1 { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setFromIndex(int); }
-keepclassmembers class android.view.KeyEvent { boolean isConfirmKey(int); }
-keepclassmembers class android.os.Bundle { void putFloat(java.lang.String,float); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setToIndex(int); }
-keepclassmembers class android.os.Bundle { void putParcelable(java.lang.String,android.os.Parcelable); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollX(int); }
-keepclassmembers class android.os.Bundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.os.Bundle { void putParcelableArray(java.lang.String,android.os.Parcelable[]); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollY(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setMaxScrollX(int); }
-keepclassmembers class android.view.KeyEvent { int getMetaState(); }
-keepclassmembers class android.view.KeyEvent { boolean isModifierKey(int); }
-keepclassmembers class android.view.KeyEvent { int getFlags(); }
-keepclassmembers class android.os.Bundle { void putSparseParcelableArray(java.lang.String,android.util.SparseArray); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setMaxScrollY(int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readCyclicReference(); }
-keepclassmembers class android.os.Bundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.util.List getText(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setClassName(java.lang.CharSequence); }
-keepclassmembers class android.os.Bundle { void putSerializable(java.lang.String,java.io.Serializable); }
-keepclassmembers class android.os.Bundle { void putCharSequenceArray(java.lang.String,java.lang.CharSequence[]); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.os.Bundle { void putBundle(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.view.View { boolean isTextDirectionInherited(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$14 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.os.Bundle { void putBinder(java.lang.String,android.os.IBinder); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean isSealed(); }
-keepclassmembers class android.view.KeyEvent { boolean hasModifiers(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void doReallyStop(boolean); }
-keepclassmembers class android.os.Bundle { java.lang.CharSequence getCharSequence(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Sub { void <init>(); }
-keepclassmembers class android.view.KeyEvent { int getAction(); }
-keepclassmembers class android.view.KeyEvent { int getRepeatCount(); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class android.view.KeyEvent { int getUnicodeChar(int); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context); }
-keepclassmembers class rapid.decoder.BitmapDecoder$2 { void <init>(android.content.ContentResolver,android.net.Uri); }
-keepclassmembers class android.view.KeyEvent { boolean getKeyData(android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.support.v4.app.FragmentManager getSupportFragmentManager(); }
-keepclassmembers class android.view.KeyEvent { boolean hasNoModifiers(); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.view.KeyEvent { char getMatch(char[],int); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.support.v4.app.LoaderManager getSupportLoaderManager(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$MyHandler { void <init>(android.view.accessibility.AccessibilityManager,android.os.Looper); }
-keepclassmembers class android.view.KeyEvent { char getNumber(); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getCharSequenceArrayList(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.support.v4.media.session.MediaControllerCompat getSupportMediaController(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$MyHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.view.View { boolean isTextAlignmentInherited(); }
-keepclassmembers class android.widget.RelativeLayout { void initFromAttributes(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.RelativeLayout { void queryCompatibilityModes(android.content.Context); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onAttachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.widget.RelativeLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onBackPressed(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$3 { void <init>(ar.rulosoft.mimanganu.componentes.MangaFolderSelect); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.os.Bundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.View { void setTransitionName(java.lang.String); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void cancelPositionAnimator(); }
-keepclassmembers class android.view.View { java.lang.String getTransitionName(); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void cancelSuperTouch(android.view.MotionEvent); }
-keepclassmembers class android.widget.RelativeLayout { void requestLayout(); }
-keepclassmembers class android.content.res.AssetManager { long access$100(android.content.res.AssetManager,long); }
-keepclassmembers class android.content.res.AssetManager { void access$400(android.content.res.AssetManager,long); }
-keepclassmembers class android.content.res.AssetManager { void access$500(android.content.res.AssetManager,long); }
-keepclassmembers class android.support.v4.view.ViewPager$ViewPositionComparator { void <init>(); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.FragmentActivity { android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onLowMemory(); }
-keepclassmembers class android.view.View { int access$2400(android.view.View); }
-keepclassmembers class android.support.v4.app.FragmentActivity { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class java.io.ObjectInputStream { int readInt(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onMultiWindowModeChanged(boolean); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.util.LongSparseLongArray { long get(long,long); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void jumpDrawablesToCurrentState(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.view.ViewGroup { void layout(int,int,int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onPictureInPictureModeChanged(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean canAnimate(); }
-keepclassmembers class android.view.View { boolean access$2500(android.view.View); }
-keepclassmembers class org.acra.collections.BoundedLinkedList { void <init>(int); }
-keepclassmembers class android.util.LongSparseLongArray { long valueAt(int); }
-keepclassmembers class org.acra.collections.BoundedLinkedList { boolean add(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void setAnimationCacheEnabled(boolean); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onReallyStop(); }
-keepclassmembers class android.util.LongSparseLongArray { int indexOfKey(long); }
-keepclassmembers class android.view.ViewGroup { void setAlwaysDrawnWithCacheEnabled(boolean); }
-keepclassmembers class android.widget.RelativeLayout { int getBaseline(); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawnWithCacheEnabled(boolean); }
-keepclassmembers class android.util.LongSparseLongArray { void clear(); }
-keepclassmembers class java.lang.NullPointerException { void <init>(java.lang.String); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$ViewElevationComparator { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class readNewClass(boolean); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onResumeFragments(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onResume(); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int,boolean); }
-keepclassmembers class android.support.v4.app.FragmentActivity { java.lang.Object onRetainCustomNonConfigurationInstance(); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class java.util.HashMap$EntryIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void <init>(android.content.Context); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void addMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void dismiss(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { android.widget.ListView getListView(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { boolean sameWindow(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void rememberWindowAttachCount(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { boolean isShowing(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat { boolean hasPermanentMenuKey(android.view.ViewConfiguration); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void onStateNotSaved(); }
-keepclassmembers class java.lang.StringBuilder { void <init>(); }
-keepclassmembers class java.lang.StringBuilder { void <init>(int); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setAnchorView(android.view.View); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { int readNewHandle(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setCallback(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.view.ViewGroup { int getChildCount(); }
-keepclassmembers class java.util.HashMap$EntryIterator { void <init>(java.util.HashMap); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setForceShowIcon(boolean); }
-keepclassmembers class android.view.ViewGroup { android.view.View getChildAt(int); }
-keepclassmembers class java.lang.NullPointerException { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setGravity(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void setEnterSharedElementCallback(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void onDismiss(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setHorizontalOffset(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void setExitSharedElementCallback(android.support.v4.app.SharedElementCallback); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(int); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setShowTitle(boolean); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void setSupportMediaController(android.support.v4.media.session.MediaControllerCompat); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(long); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup { void setVerticalOffset(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$2 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.widget.RelativeLayout { void measureChild(android.view.View,android.widget.RelativeLayout$LayoutParams,int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(float); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$2 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(double); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$2 { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$2 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[],int,int); }
-keepclassmembers class android.support.v4.app.ActivityCompatJB { void finishAffinity(android.app.Activity); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.ActivityCompatJB { void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewString(boolean); }
-keepclassmembers class android.support.v4.app.ActivityCompatJB { void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder appendCodePoint(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder delete(int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder deleteCharAt(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[]); }
-keepclassmembers class java.text.FieldPosition { void <init>(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void setChecked(boolean); }
-keepclassmembers class java.text.FieldPosition { int getEndIndex(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readUnshared(); }
-keepclassmembers class java.text.FieldPosition { int getField(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,java.lang.String); }
-keepclassmembers class java.text.FieldPosition { java.text.Format$Field getFieldAttribute(); }
-keepclassmembers class java.text.FieldPosition { void setBeginIndex(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char[]); }
-keepclassmembers class android.view.ViewGroup { boolean isViewTransitioning(android.view.View); }
-keepclassmembers class java.text.FieldPosition { void <init>(java.text.Format$Field); }
-keepclassmembers class java.text.FieldPosition { void setEndIndex(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char[],int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportPostponeEnterTransition(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportInvalidateOptionsMenu(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportStartPostponedEnterTransition(); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void validateRequestPermissionsRequestCode(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder replace(int,int,java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String readUTF(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String toString(); }
-keepclassmembers class android.app.Service { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void endViewTransition(android.view.View); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$8$1 { void <init>(ar.rulosoft.mimanganu.ReaderFragment$8); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class android.app.Service { android.app.Application getApplication(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.app.Service { void onCreate(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$8$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class android.app.Service { void onStart(android.content.Intent,int); }
-keepclassmembers class java.lang.StringBuilder { void setLength(int); }
-keepclassmembers class java.lang.StringBuilder { void setCharAt(int,char); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int); }
-keepclassmembers class java.lang.StringBuilder { int length(); }
-keepclassmembers class android.app.Service { void onDestroy(); }
-keepclassmembers class java.lang.StringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class android.app.Service { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.app.Service { void onLowMemory(); }
-keepclassmembers class android.app.Service { void onTrimMemory(int); }
-keepclassmembers class java.lang.StringBuilder { char charAt(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.Appendable append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.app.Service { void onRebind(android.content.Intent); }
-keepclassmembers class android.app.Service { boolean onUnbind(android.content.Intent); }
-keepclassmembers class android.app.Service { void onTaskRemoved(android.content.Intent); }
-keepclassmembers class java.util.HashMap$HashIterator { boolean hasNext(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { void <init>(byte[]); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void setThumbPosition(float); }
-keepclassmembers class java.io.ObjectInputStream { void resetState(); }
-keepclassmembers class android.app.Service { void stopSelf(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void cancel(android.view.View); }
-keepclassmembers class android.text.TextDirectionHeuristics { int isRtlText(int); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { void <init>(android.support.v7.view.menu.MenuBuilder,android.view.LayoutInflater,boolean); }
-keepclassmembers class android.text.TextDirectionHeuristics { int isRtlTextOrFormat(int); }
-keepclassmembers class android.text.TextDirectionHeuristics { int access$100(int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object resolveObject(java.lang.Object); }
-keepclassmembers class android.text.TextDirectionHeuristics { int access$200(int); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { android.support.v7.view.menu.MenuBuilder getAdapterMenu(); }
-keepclassmembers class android.support.v7.widget.SwitchCompat { void toggle(); }
-keepclassmembers class android.app.Activity$ManagedCursor { void <init>(android.database.Cursor); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void setDuration(android.view.View,long); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void setInterpolator(android.view.View,android.view.animation.Interpolator); }
-keepclassmembers class android.app.Activity$ManagedCursor { android.database.Cursor access$100(android.app.Activity$ManagedCursor); }
-keepclassmembers class android.support.v4.app.FragmentActivity { void supportFinishAfterTransition(); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS$1 { void <init>(android.support.v4.view.ViewPropertyAnimatorListener,android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void start(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void requestTransitionStart(android.animation.LayoutTransition); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatICS { void translationY(android.view.View,float); }
-keepclassmembers class java.util.concurrent.TimeUnit$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManager23 { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void dismissPopupMenus(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getSystemResourceAsStream(java.lang.String); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManager23 { int noteProxyOp(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManager23 { java.lang.String permissionToOp(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.RelativeLayout { int getRelatedViewBaseline(int[],int); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class findLoadedClass(java.lang.String); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$LayoutParams { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams(); }
-keepclassmembers class android.view.ViewGroup { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.CheckedTextView { boolean isChecked(); }
-keepclassmembers class android.widget.CheckedTextView { void setChecked(boolean); }
-keepclassmembers class android.view.ViewGroup { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { void setForceShowIcon(boolean); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.view.ViewGroup { void onStopNestedScroll(android.view.View); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.app.AppGlobals { int getIntCoreSetting(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { int getNestedScrollAxes(); }
-keepclassmembers class android.view.ViewGroup { void onSetLayoutParams(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void initialize(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.widget.CheckedTextView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean invokeItem(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class okio.GzipSource { okio.Timeout timeout(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void <init>(); }
-keepclassmembers class android.widget.CheckedTextView { void internalSetPadding(int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { boolean isOverflowMenuShowing(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.CheckedTextView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.CheckedTextView { void setBasePadding(boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class okio.GzipSource { void close(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment { boolean isVisible(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment { void freeMemory(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList access$400(android.view.ViewGroup); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewGroup { boolean access$302(android.view.ViewGroup,boolean); }
-keepclassmembers class android.view.ViewGroup { boolean access$300(android.view.ViewGroup); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { void <init>(char[]); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { char[] access$000(android.text.method.QwertyKeyListener$Replaced); }
-keepclassmembers class android.view.ViewGroup { void access$500(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment { void visibilityChanged(); }
-keepclassmembers class java.lang.InterruptedException { void <init>(); }
-keepclassmembers class android.widget.CheckedTextView { void drawableStateChanged(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl { void <init>(); }
-keepclassmembers class android.widget.CheckedTextView { void drawableHotspotChanged(float,float); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.NoSwipeViewPager { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { int getMinimumHeight(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.NoSwipeViewPager { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { int getMinimumWidth(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$BaseTextViewCompatImpl { void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { boolean hasTransientState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase$1 { android.database.sqlite.SQLiteSession initialValue(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase$1 { void <init>(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.support.v4.app.DialogFragment { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void setBackground(android.view.View,android.graphics.drawable.Drawable); }
-keepclassmembers class com.franmontiel.persistentcookiejar.persistence.SerializableCookie { void <init>(); }
-keepclassmembers class android.support.v4.app.DialogFragment { void dismissInternal(boolean); }
-keepclassmembers class android.system.StructAddrinfo { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$JBViewCompatImpl { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$1 { void <init>(); }
-keepclassmembers class android.support.v4.app.DialogFragment { android.app.Dialog getDialog(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperStateBase { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class java.util.HashMap$ValueIterator { void <init>(java.util.HashMap); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void removeCallbacksLocked(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.HashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class java.util.HashMap$ValueIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer,android.view.Choreographer$1); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$1 { int compare(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.transition.ChangeBounds$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onAttach(android.content.Context); }
-keepclassmembers class android.widget.AbsListView$4 { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onCancel(android.content.DialogInterface); }
-keepclassmembers class android.net.Uri$StringUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.net.Uri$StringUri { int findSchemeSeparator(); }
-keepclassmembers class android.net.Uri$StringUri { int findFragmentSeparator(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { android.support.v7.view.menu.MenuBuilder peekMenu(); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setExpandedActionViewsExclusive(boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setMenuCallbacks(android.support.v7.view.menu.MenuPresenter$Callback,android.support.v7.view.menu.MenuBuilder$Callback); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onDestroyView(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setOnMenuItemClickListener(android.support.v7.widget.ActionMenuView$OnMenuItemClickListener); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getScheme(); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onDetach(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$CloseGuard { void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { void <init>(okhttp3.Headers,okio.BufferedSource); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getSsp(); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { long contentLength(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseScheme(); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { okio.BufferedSource source(); }
-keepclassmembers class android.support.v7.widget.ActionMenuView { void setOverflowReserved(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getAuthorityPart(); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onStop(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$PathPart getPathPart(); }
-keepclassmembers class android.support.v4.app.DialogFragment { void onStart(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getPath(); }
-keepclassmembers class android.net.Uri$StringUri { java.util.List getPathSegments(); }
-keepclassmembers class android.support.v4.app.DialogFragment { void setupDialog(android.app.Dialog,int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$10 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getAuthority(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$1 { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getQueryPart(); }
-keepclassmembers class android.support.v4.app.DialogFragment { void show(android.support.v4.app.FragmentManager,java.lang.String); }
-keepclassmembers class java.nio.charset.CharacterCodingException { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getFragmentPart(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int,com.android.i18n.phonenumbers.PhoneNumberUtil$1); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String toString(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$2 { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class org.acra.dialog.CrashReportDialog { void <init>(); }
-keepclassmembers class android.support.v7.util.DiffUtil$1 { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String,android.net.Uri$1); }
-keepclassmembers class java.beans.PropertyChangeEvent { void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.Hashtable$ValueIterator { java.lang.Object next(); }
-keepclassmembers class java.util.Hashtable$ValueIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class java.util.Hashtable$ValueIterator { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.String getPropertyName(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.AsyncAddManga$1 { void <init>(ar.rulosoft.mimanganu.utils.AsyncAddManga,java.lang.Integer[]); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.Object getNewValue(); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.Object getOldValue(); }
-keepclassmembers class android.text.style.CharacterStyle { void <init>(); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { boolean isOID(java.lang.String); }
-keepclassmembers class android.graphics.BitmapShader { void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class android.app.Activity { android.content.Intent getIntent(); }
-keepclassmembers class android.support.v4.content.ContextCompatHoneycomb { void startActivities(android.content.Context,android.content.Intent[]); }
-keepclassmembers class android.app.Activity { void setIntent(android.content.Intent); }
-keepclassmembers class android.support.v4.widget.ListViewCompat { void scrollListBy(android.widget.ListView,int); }
-keepclassmembers class android.app.Activity { android.app.Application getApplication(); }
-keepclassmembers class android.widget.CheckedTextView { void setVisibility(int); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.app.Activity { boolean isChild(); }
-keepclassmembers class android.app.Activity { android.app.Activity getParent(); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.app.Activity { android.view.Window getWindow(); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { void <init>(); }
-keepclassmembers class android.net.Uri$1 { void <init>(); }
-keepclassmembers class libcore.reflect.AnnotationMember { libcore.reflect.AnnotationMember setDefinition(libcore.reflect.AnnotationMember); }
-keepclassmembers class android.graphics.Shader$TileMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { java.lang.Object newAccessiblityDelegateDefaultImpl(); }
-keepclassmembers class android.app.Activity { android.view.View getCurrentFocus(); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl { java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class android.app.Activity { android.view.WindowManager getWindowManager(); }
-keepclassmembers class android.support.v4.content.IntentCompat { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.widget.NumberPicker$TwoDigitFormatter { void init(java.util.Locale); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void <init>(android.app.Activity,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,boolean); }
-keepclassmembers class android.widget.NumberPicker$TwoDigitFormatter { char getZeroDigit(java.util.Locale); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void stopCancel(); }
-keepclassmembers class android.app.Activity { void onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void delayCancel(); }
-keepclassmembers class android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException { void <init>(java.lang.String); }
-keepclassmembers class android.app.Activity { void onPostCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class org.acra.ReportField$4 { void <init>(java.lang.String,int); }
-keepclassmembers class javax.net.ssl.SSLContext { void <init>(javax.net.ssl.SSLContextSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { long toNanos(long); }
-keepclassmembers class android.app.Activity { void onResume(); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLSocketFactory getSocketFactory(); }
-keepclassmembers class android.app.Activity { boolean isVoiceInteraction(); }
-keepclassmembers class javax.net.ssl.SSLContext { void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom); }
-keepclassmembers class android.app.Activity { android.app.VoiceInteractor getVoiceInteractor(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.app.SharedElementCallback getListener(android.app.Activity,boolean); }
-keepclassmembers class java.util.Collections$SingletonList { void <init>(java.lang.Object); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { void <init>(java.lang.String,int); }
-keepclassmembers class java.security.SecureRandom { void nextBytes(byte[]); }
-keepclassmembers class java.util.Collections$SingletonList { int size(); }
-keepclassmembers class libcore.util.Objects { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.Activity { void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$HPage$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$HPage,boolean); }
-keepclassmembers class java.util.MissingFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class android.app.Activity { boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas); }
-keepclassmembers class java.security.SecureRandom { void setSeed(byte[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader); }
-keepclassmembers class android.app.Activity { void onProvideAssistData(android.os.Bundle); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean isReadyToNotify(); }
-keepclassmembers class android.graphics.Interpolator { void <init>(int,int); }
-keepclassmembers class android.app.Activity { void reportFullyDrawn(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { void <init>(); }
-keepclassmembers class android.app.Activity { int getChangingConfigurations(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void exitTransitionComplete(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void notifyComplete(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void finishIfNecessary(); }
-keepclassmembers class android.app.Activity { java.lang.Object getLastNonConfigurationInstance(); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence onCreateDescription(); }
-keepclassmembers class java.util.Stack { void <init>(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void finish(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean moveSharedElementWithParent(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.transition.Transition getViewsTransition(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$5 { void <init>(int); }
-keepclassmembers class java.util.Stack { java.lang.Object push(java.lang.Object); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$502(android.app.ExitTransitionCoordinator,boolean); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$600(android.app.ExitTransitionCoordinator); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader); }
-keepclassmembers class android.app.Activity { void onTrimMemory(int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$1 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.app.Activity { android.app.FragmentManager getFragmentManager(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$700(android.app.ExitTransitionCoordinator); }
-keepclassmembers class java.io.BufferedReader { void close(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$800(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.animation.ObjectAnimator access$902(android.app.ExitTransitionCoordinator,android.animation.ObjectAnimator); }
-keepclassmembers class android.app.Activity { void onAttachFragment(android.app.Fragment); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$1002(android.app.ExitTransitionCoordinator,boolean); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String); }
-keepclassmembers class org.acra.model.ComplexElement { void <init>(); }
-keepclassmembers class java.io.FilterReader { void <init>(java.io.Reader); }
-keepclassmembers class org.acra.model.ComplexElement { void <init>(java.lang.String); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$500(android.app.ExitTransitionCoordinator); }
-keepclassmembers class org.acra.model.ComplexElement { void <init>(java.util.Map); }
-keepclassmembers class org.acra.model.ComplexElement { void <init>(org.json.JSONObject); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class java.io.BufferedReader { boolean isClosed(); }
-keepclassmembers class org.acra.model.ComplexElement { java.lang.Object value(); }
-keepclassmembers class android.support.v4.os.TraceJellybeanMR2 { void beginSection(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setAlpha(int); }
-keepclassmembers class android.app.Activity { void setPersistent(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.io.BufferedReader { int read(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { float access$000(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.app.Activity { android.view.View findViewById(int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getOpacity(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { float access$002(ar.rulosoft.mimanganu.componentes.Chapter,float); }
-keepclassmembers class java.io.FilterInputStream { int available(); }
-keepclassmembers class java.io.FilterInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.os.StrictMode$2 { void <init>(); }
-keepclassmembers class java.io.FilterInputStream { void close(); }
-keepclassmembers class android.os.StrictMode$2 { java.lang.Object initialValue(); }
-keepclassmembers class android.app.Activity { void setContentView(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void addChapterFirst(ar.rulosoft.mimanganu.componentes.Manga); }
-keepclassmembers class android.app.Activity { void setContentView(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void delete(android.content.Context,ar.rulosoft.mimanganu.componentes.Manga,ar.rulosoft.mimanganu.servers.ServerBase); }
-keepclassmembers class java.io.FilterInputStream { int read(); }
-keepclassmembers class android.app.Activity { android.app.ActionBar getActionBar(); }
-keepclassmembers class android.app.Activity { void addContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.app.Activity { void setContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.io.FilterInputStream { int read(byte[],int,int); }
-keepclassmembers class android.app.Activity { android.transition.TransitionManager getContentTransitionManager(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void deleteImages(android.content.Context); }
-keepclassmembers class java.lang.reflect.Proxy$1 { void <init>(); }
-keepclassmembers class android.app.Activity { void setContentTransitionManager(android.transition.TransitionManager); }
-keepclassmembers class android.app.Activity { android.transition.Scene getContentScene(); }
-keepclassmembers class java.io.FilterInputStream { long skip(long); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityHoneycomb { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void freeSpace(android.content.Context); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void freeSpace(android.content.Context,ar.rulosoft.mimanganu.componentes.Manga,ar.rulosoft.mimanganu.servers.ServerBase); }
-keepclassmembers class android.content.ComponentName { java.lang.String getPackageName(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { java.lang.String getExtra(); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class java.io.BufferedReader { void maybeSwallowLF(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { int getMangaID(); }
-keepclassmembers class android.app.Activity { void setFinishOnTouchOutside(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { int getPages(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { int getId(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { java.lang.String getPath(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { int getPagesRead(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { int getReadStatus(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { java.lang.String getTitle(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { boolean isDownloaded(); }
-keepclassmembers class android.content.ComponentName { void appendShortClassName(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean isStateful(); }
-keepclassmembers class android.view.animation.OvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.app.Activity { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean onStateChange(int[]); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void setDownloaded(boolean); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.app.Activity { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.support.v7.app.AlertController$AlertParams$4 { void <init>(android.support.v7.app.AlertController$AlertParams,android.support.v7.app.AlertController$RecycleListView,android.support.v7.app.AlertController); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void setExtra(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.app.Activity { void onBackPressed(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void setId(int); }
-keepclassmembers class android.app.Activity { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.app.Activity { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void setPagesRead(int); }
-keepclassmembers class android.app.Activity { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void setMangaID(int); }
-keepclassmembers class android.support.v7.widget.CardViewGingerbread$1 { void <init>(android.support.v7.widget.CardViewGingerbread); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void setPath(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void setPages(int); }
-keepclassmembers class android.app.Activity { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { void onWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { void setReadStatus(int); }
-keepclassmembers class android.app.Activity { void onUserInteraction(); }
-keepclassmembers class android.content.ComponentName { void appendShortString(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { void onContentChanged(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.app.Activity { void onAttachedToWindow(); }
-keepclassmembers class android.app.Activity { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.app.Activity { boolean hasWindowFocus(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void onItemHoverEnter(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.app.Activity { void onDetachedFromWindow(); }
-keepclassmembers class android.app.Activity { void onWindowDismissed(); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void onItemHoverExit(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v7.widget.MenuPopupWindow { void setHoverListener(android.support.v7.widget.MenuItemHoverListener); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyShortcutEvent(android.view.KeyEvent); }
-keepclassmembers class android.app.Activity { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean dispatchTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.content.ComponentName,android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.app.Activity { android.view.View onCreatePanelView(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MoreMangasPageTransformer { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$4 { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources,android.graphics.drawable.RotateDrawable$1); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,android.os.Parcel); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$1 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ElevateToTranslationZAnimation { void <init>(android.support.design.widget.FloatingActionButtonGingerbread); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledScrollBarSize(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledFadingEdgeLength(); }
-keepclassmembers class android.app.Activity { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapTouchSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledTouchSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMaximumFlingVelocity(); }
-keepclassmembers class android.app.Activity { void invalidateOptionsMenu(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMaximumDrawingCacheSize(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void clearMutated(); }
-keepclassmembers class android.app.Activity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverflingDistance(); }
-keepclassmembers class android.app.Activity { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMinimumFlingVelocity(); }
-keepclassmembers class android.view.ViewConfiguration { boolean hasPermanentMenuKey(); }
-keepclassmembers class android.view.ViewConfiguration { boolean isFadingMarqueeEnabled(); }
-keepclassmembers class android.app.Activity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.app.Activity { void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class android.app.Activity { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverscrollDistance(); }
-keepclassmembers class android.app.Activity { void closeOptionsMenu(); }
-keepclassmembers class android.app.Activity { boolean onNavigateUpFromChild(android.app.Activity); }
-keepclassmembers class android.app.Activity { void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class java.nio.BufferOverflowException { void <init>(); }
-keepclassmembers class android.app.Activity { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.app.Activity { void registerForContextMenu(android.view.View); }
-keepclassmembers class android.app.Activity { void openOptionsMenu(); }
-keepclassmembers class android.app.Activity { void unregisterForContextMenu(android.view.View); }
-keepclassmembers class android.app.Activity { void closeContextMenu(); }
-keepclassmembers class android.widget.ProgressBar$AccessibilityEventSender { void <init>(android.widget.ProgressBar); }
-keepclassmembers class android.app.Activity { void onContextMenuClosed(android.view.Menu); }
-keepclassmembers class android.app.Activity { void openContextMenu(android.view.View); }
-keepclassmembers class android.app.Activity { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.graphics.Paint$Cap { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.widget.ProgressBar$AccessibilityEventSender { void <init>(android.widget.ProgressBar,android.widget.ProgressBar$1); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$4 { void <init>(java.util.ArrayList,java.util.Map); }
-keepclassmembers class android.text.method.Touch$DragState { void <init>(float,float,int,int); }
-keepclassmembers class android.app.Activity { void showDialog(int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { java.lang.String getFirstMatchDefault(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { int getFlag(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { int getServerID(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { ar.rulosoft.mimanganu.servers.ServerBase$FilteredType getFilteredType(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { int getIcon(); }
-keepclassmembers class android.transition.Visibility { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { java.lang.String getServerName(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { boolean hasCredentials(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { boolean needLogin(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { boolean hasFilteredNavigation(); }
-keepclassmembers class android.app.Activity { void startSearch(java.lang.String,boolean,android.os.Bundle,boolean); }
-keepclassmembers class android.transition.Visibility { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Visibility { void forceVisibility(int,boolean); }
-keepclassmembers class android.transition.Visibility { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.app.Activity { void triggerSearch(java.lang.String,android.os.Bundle); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$FramingSink { okio.Timeout timeout(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { boolean needRefererForImages(); }
-keepclassmembers class android.app.Activity { boolean requestWindowFeature(int); }
-keepclassmembers class android.app.Activity { void takeKeyEvents(boolean); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableResource(int,int); }
-keepclassmembers class android.graphics.Color { int HSVToColor(float[]); }
-keepclassmembers class android.app.Activity { void setFeatureDrawable(int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableUri(int,android.net.Uri); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableAlpha(int,int); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(int); }
-keepclassmembers class android.database.CursorWindowAllocationException { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { android.animation.StateListAnimator newInstance(); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl { void <init>(); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { void setFlag(int); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$HoneycombViewConfigurationVersionImpl { boolean hasPermanentMenuKey(android.view.ViewConfiguration); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { void setIcon(int); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.app.Activity { android.view.LayoutInflater getLayoutInflater(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { void setServerName(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { void setServerID(int); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.UserHandle); }
-keepclassmembers class android.support.design.widget.StateListAnimator$Tuple { void <init>(int[],android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class android.widget.ListView$FixedViewInfo { void <init>(android.widget.ListView); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { boolean testLogin(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { boolean applyDayNight(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.content.Context getActionBarThemedContext(); }
-keepclassmembers class android.text.Annotation { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.Annotation { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.support.v7.app.ActionBar getSupportActionBar(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.view.Window$Callback getWindowCallback(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <init>(byte[]); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { android.support.v7.app.ActionBar peekSupportActionBar(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.widget.Spinner$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { boolean isDestroyed(); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplBase { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[]); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { void <init>(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$2 { void run(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelMenuPresenterCallback { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$2 { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class java.lang.AbstractStringBuilder { char charAt(int); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class java.io.WriteAbortedException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void <init>(android.widget.RemoteViews,int,android.app.PendingIntent); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.Throwable getCause(); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$1 { void <init>(ar.rulosoft.mimanganu.componentes.LoginDialog,ar.rulosoft.mimanganu.servers.ServerBase,android.content.Context); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void setShortcutsVisibleInner(boolean); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.support.v7.preference.ListPreferenceDialogFragmentCompat { void <init>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { int length(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.view.MenuItem add(int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.app.Activity { void overridePendingTransition(int,int); }
-keepclassmembers class android.app.Activity { void setResult(int,android.content.Intent); }
-keepclassmembers class android.app.Activity { java.lang.String getCallingPackage(); }
-keepclassmembers class android.app.Activity { void setVisible(boolean); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void onAttachedToWindow(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { boolean isOrWillBeHidden(); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getCallingActivity(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2 { void <init>(android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1,android.support.design.widget.ValueAnimatorCompat$Impl$AnimatorListenerProxy); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void onDetachedFromWindow(); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Reader { void <init>(int,okio.Source); }
-keepclassmembers class android.app.Activity { boolean isFinishing(); }
-keepclassmembers class android.app.Activity { void setResult(int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.app.Activity { boolean isChangingConfigurations(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { boolean requirePreDrawListener(); }
-keepclassmembers class android.app.Activity { boolean isDestroyed(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1$2 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$15 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void onPaddingUpdated(android.graphics.Rect); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void addMenuPresenter(android.support.v7.view.menu.MenuPresenter); }
-keepclassmembers class android.app.Activity { void finish(boolean); }
-keepclassmembers class android.app.Activity { void finish(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl { void updatePadding(); }
-keepclassmembers class android.app.Activity { void finishFromChild(android.app.Activity); }
-keepclassmembers class android.app.Activity { void finishActivity(int); }
-keepclassmembers class android.support.v7.preference.ListPreferenceDialogFragmentCompat { void onDialogClosed(boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void clear(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void changeMenuMode(); }
-keepclassmembers class android.app.Activity { void finishActivityFromChild(android.app.Activity,int); }
-keepclassmembers class android.app.Activity { void finishAfterTransition(); }
-keepclassmembers class android.app.Activity { boolean releaseInstance(); }
-keepclassmembers class android.app.Activity { void finishAndRemoveTask(); }
-keepclassmembers class android.app.Activity { void onActivityReenter(int,android.content.Intent); }
-keepclassmembers class android.app.Activity { void setRequestedOrientation(int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class android.app.Activity { int getRequestedOrientation(); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void <init>(); }
-keepclassmembers class android.app.Activity { int getTaskId(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectLollipopImpl { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void close(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean dispatchMenuItemSelected(android.support.v7.view.menu.MenuBuilder,android.view.MenuItem); }
-keepclassmembers class android.app.Activity { boolean moveTaskToBack(boolean); }
-keepclassmembers class android.app.Activity { boolean isTaskRoot(); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getComponentName(); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(int,int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.ProgressBar$RefreshProgressRunnable { void <init>(android.widget.ProgressBar); }
-keepclassmembers class android.app.Activity { android.content.SharedPreferences getPreferences(int); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.app.Activity { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Activity { void setTitle(int); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.os.AsyncTask$3 { void <init>(android.os.AsyncTask,java.util.concurrent.Callable); }
-keepclassmembers class android.app.Activity { void setTitleColor(int); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.app.Activity { int getTitleColor(); }
-keepclassmembers class android.widget.ProgressBar$RefreshProgressRunnable { void <init>(android.widget.ProgressBar,android.widget.ProgressBar$1); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsUnread { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsUnread { void <init>(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.MangaFragment$1); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <init>(java.lang.String); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { void <init>(android.support.design.widget.VisibilityAwareImageButton,android.support.design.widget.ShadowViewDelegate,android.support.design.widget.ValueAnimatorCompat$Creator); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { float getElevation(); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.ClassCastException { void <init>(); }
-keepclassmembers class java.lang.ClassCastException { void <init>(java.lang.String); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { void jumpDrawableToCurrentState(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { void onDrawableStateChanged(int[]); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment$3 { void <init>(ar.rulosoft.custompref.PreferenceListDirFragment); }
-keepclassmembers class android.app.Activity { void onTitleChanged(java.lang.CharSequence,int); }
-keepclassmembers class java.lang.System$SystemEnvironment { void <init>(java.util.Map); }
-keepclassmembers class android.support.v4.widget.ListViewCompatKitKat { void scrollListBy(android.widget.ListView,int); }
-keepclassmembers class android.app.Activity { void setProgressBarVisibility(boolean); }
-keepclassmembers class java.lang.System$SystemEnvironment { java.util.Set entrySet(); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminateVisibility(boolean); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminate(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[]); }
-keepclassmembers class com.android.internal.app.AlertController$5 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class android.app.Activity { android.media.session.MediaController getMediaController(); }
-keepclassmembers class android.app.Activity { int getVolumeControlStream(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[],org.apache.harmony.security.x509.CertificateList$1); }
-keepclassmembers class android.app.Activity { void setVolumeControlStream(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { org.apache.harmony.security.x509.TBSCertList access$100(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class android.app.Activity { void runOnUiThread(java.lang.Runnable); }
-keepclassmembers class android.app.Activity { void setMediaController(android.media.session.MediaController); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.content.Context getContext(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { java.util.ArrayList getActionItems(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.support.v7.view.menu.MenuItemImpl getExpandedItem(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { org.apache.harmony.security.x509.AlgorithmIdentifier access$200(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { java.lang.CharSequence getHeaderTitle(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { byte[] access$300(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean getOptionalIconsVisible(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { java.util.ArrayList getNonActionItems(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.content.res.Resources getResources(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicy(android.os.StrictMode$ThreadPolicy); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.support.v7.view.menu.MenuBuilder getRootMenu(); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicyMask(int); }
-keepclassmembers class org.acra.file.ReportLocator { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class libcore.io.ForwardingOs { void <init>(libcore.io.Os); }
-keepclassmembers class android.widget.TextView$CharWrapper { char[] access$002(android.widget.TextView$CharWrapper,char[]); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean isQwertyMode(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonLollipop { boolean requirePreDrawListener(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.Interpolator$Result { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Collections$2 { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean isShortcutsVisible(); }
-keepclassmembers class libcore.io.ForwardingOs { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void onItemActionRequestChanged(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean performIdentifierAction(int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void onItemsChanged(boolean); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void onItemVisibleChanged(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateAtLeast(int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void jumpToCurrentState(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { boolean performItemAction(android.view.MenuItem,int); }
-keepclassmembers class android.app.Activity { boolean isImmersive(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean isRunning(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void decrementWorkerCount(); }
-keepclassmembers class android.app.Activity { boolean isTopOfTask(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateLessThan(int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void advanceRunState(int); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable); }
-keepclassmembers class android.app.BackStackRecord$2 { void <init>(android.app.BackStackRecord,android.view.ViewGroup,android.transition.Transition,android.view.View,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,java.util.ArrayList,android.transition.Transition); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.app.Activity { void convertFromTranslucent(); }
-keepclassmembers class android.app.Activity { boolean convertToTranslucent(android.app.Activity$TranslucentConversionListener,android.app.ActivityOptions); }
-keepclassmembers class android.support.v4.app.FragmentState { void <init>(android.support.v4.app.Fragment); }
-keepclassmembers class libcore.io.ForwardingOs { int fcntlVoid(java.io.FileDescriptor,int); }
-keepclassmembers class android.app.Activity { void onNewActivityOptions(android.app.ActivityOptions); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String[] environ(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void init(); }
-keepclassmembers class libcore.io.ForwardingOs { int fcntlLong(java.io.FileDescriptor,int,long); }
-keepclassmembers class android.app.Activity { boolean requestVisibleBehind(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { java.lang.String getAuthor(); }
-keepclassmembers class android.app.Activity { void onVisibleBehindCanceled(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void tryTerminate(); }
-keepclassmembers class android.app.Activity { boolean isBackgroundVisibleBehind(); }
-keepclassmembers class android.app.Activity { void onEnterAnimationComplete(); }
-keepclassmembers class android.app.Activity { void onBackgroundVisibleBehindChanged(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void addChapter(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.app.Activity { void dispatchEnterAnimationComplete(); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { java.lang.String getGenre(); }
-keepclassmembers class android.app.Activity { void setImmersive(boolean); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String gai_strerror(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { int getId(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { java.util.ArrayList getChapters(); }
-keepclassmembers class android.app.Activity { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { int getLastIndex(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { java.lang.String getLastUpdate(); }
-keepclassmembers class android.app.Activity { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { int getNews(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getenv(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { java.lang.String getPath(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { int getReaderType(); }
-keepclassmembers class android.app.Activity { void onActionModeStarted(android.view.ActionMode); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void interruptIdleWorkers(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { int getReadingDirection(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { float getScrollSensitive(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { int getServerId(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void reject(java.lang.Runnable); }
-keepclassmembers class android.app.Activity { boolean shouldUpRecreateTask(android.content.Intent); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void onShutdown(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { java.lang.String getImages(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { java.lang.String getSynopsis(); }
-keepclassmembers class libcore.io.ForwardingOs { int getpid(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void setCallback(android.support.v7.view.menu.MenuBuilder$Callback); }
-keepclassmembers class android.app.Activity { void onActionModeFinished(android.view.ActionMode); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { java.lang.String getTitle(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setAuthor(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { boolean isFinished(); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setChapters(java.util.ArrayList); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setGenre(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setFinished(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setId(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setLastIndex(int); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.SocketAddress getsockname(java.io.FileDescriptor); }
-keepclassmembers class okio.RealBufferedSink { okio.Buffer buffer(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setLastUpdate(java.lang.String); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setNews(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setImages(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setReaderType(int); }
-keepclassmembers class libcore.io.ForwardingOs { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class android.app.Activity { boolean navigateUpToFromChild(android.app.Activity,android.content.Intent); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setScrollSensitive(float); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void clearMutated(); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setSynopsis(java.lang.String); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { int getuid(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { java.lang.String toString(); }
-keepclassmembers class android.app.Activity { void setEnterSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void clearMutated(); }
-keepclassmembers class android.app.Activity { void setExitSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String); }
-keepclassmembers class okio.RealBufferedSink { okio.Timeout timeout(); }
-keepclassmembers class android.app.Activity { void postponeEnterTransition(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Manga { void setReadingDirection(int); }
-keepclassmembers class android.app.Activity { void startPostponedEnterTransition(); }
-keepclassmembers class android.text.SpannableStringInternal { int length(); }
-keepclassmembers class android.text.SpannableStringInternal { char charAt(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources,android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class libcore.io.ForwardingOs { void kill(int,int); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColor(int); }
-keepclassmembers class libcore.io.ForwardingOs { void listen(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.reflect.AnnotationMember$DefaultValues { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { android.support.v7.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatLollipop { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void addWorkerFailed(java.util.concurrent.ThreadPoolExecutor$Worker); }
-keepclassmembers class android.text.SpannableStringInternal { void getChars(int,int,char[],int); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void setQwertyMode(boolean); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatLollipop { void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { int size(); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void startDispatchingItemsChanged(); }
-keepclassmembers class libcore.io.ForwardingOs { int ioctlInt(java.io.FileDescriptor,int,android.util.MutableInt); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class libcore.io.ForwardingOs { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class android.support.v7.view.menu.MenuBuilder { void stopDispatchingItemsChanged(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.widget.ProgressBar { void setIndeterminate(boolean); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState,android.graphics.drawable.ColorDrawable$1); }
-keepclassmembers class android.app.Activity { android.os.IBinder getActivityToken(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean isStateful(); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable getProgressDrawable(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatHoneycomb { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$11$1$2 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$11$1,android.content.DialogInterface); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$11$1$2 { void onClick(android.view.View); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class org.acra.ReportField$3 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptByte(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptInt(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptGroupReq(java.io.FileDescriptor,int,int,android.system.StructGroupReq); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { void <init>(); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { android.support.v7.preference.PreferenceGroup onMergeRoots(android.support.v7.preference.PreferenceGroup,android.support.v7.preference.PreferenceGroup); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptGroupSourceReq(java.io.FileDescriptor,int,int,android.system.StructGroupSourceReq); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptLinger(java.io.FileDescriptor,int,int,android.system.StructLinger); }
-keepclassmembers class android.widget.Spinner$2 { void <init>(android.widget.Spinner); }
-keepclassmembers class android.widget.ProgressBar { void onResolveDrawables(int); }
-keepclassmembers class libcore.io.ForwardingOs { long sysconf(int); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable getCurrentDrawable(); }
-keepclassmembers class android.widget.ProgressBar { void jumpDrawablesToCurrentState(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <init>(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String strerror(int); }
-keepclassmembers class android.app.Activity { boolean isResumed(); }
-keepclassmembers class android.widget.ProgressBar { void postInvalidate(); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructUtsname uname(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void shutdown(); }
-keepclassmembers class android.app.Activity { void stopLockTask(); }
-keepclassmembers class android.app.Activity { void startLockTask(); }
-keepclassmembers class android.view.View$3 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ProgressBar { void onProgressRefresh(float,boolean); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean isTerminated(); }
-keepclassmembers class android.view.View$3 { void setValue(android.view.View,float); }
-keepclassmembers class java.lang.ref.ReferenceQueue { java.lang.ref.Reference poll(); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { android.support.v7.preference.Preference inflate(int,android.support.v7.preference.PreferenceGroup); }
-keepclassmembers class android.os.StrictMode { int access$1000(java.lang.String); }
-keepclassmembers class android.os.StrictMode { void access$1100(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.view.View$3 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.os.StrictMode { void access$1200(int); }
-keepclassmembers class android.os.StrictMode { void access$1300(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { android.content.Context getContext(); }
-keepclassmembers class android.widget.ProgressBar { void setProgress(int); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$PopupTouchInterceptor { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.util.concurrent.ThreadFactory getThreadFactory(); }
-keepclassmembers class okhttp3.internal.http.BridgeInterceptor { void <init>(okhttp3.CookieJar); }
-keepclassmembers class android.widget.ProgressBar { int getProgress(); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { void skipCurrentTag(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.widget.ProgressBar { void setSecondaryProgress(int); }
-keepclassmembers class android.widget.ProgressBar { void setMax(int); }
-keepclassmembers class android.widget.ProgressBar { void setProgress(int,boolean); }
-keepclassmembers class android.widget.ProgressBar { void setVisibility(int); }
-keepclassmembers class android.widget.ProgressBar { int getMax(); }
-keepclassmembers class android.widget.ProgressBar { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.graphics.Rect$1 { void <init>(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl { void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl { void <init>(); }
-keepclassmembers class android.widget.ProgressBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void <init>(java.util.ArrayList); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean remove(java.lang.Runnable); }
-keepclassmembers class android.animation.LayoutTransition$6 { void <init>(android.animation.LayoutTransition,android.view.View,float,android.view.ViewGroup); }
-keepclassmembers class android.app.FragmentManager { void <init>(); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { android.support.v7.preference.Preference onCreateItem(java.lang.String,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$LollipopCompoundButtonImpl { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.preference.PreferenceInflater { void setDefaultPackages(java.lang.String[]); }
-keepclassmembers class android.support.v7.app.ActionBar { void <init>(); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { boolean hasNext(); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void <init>(java.util.ArrayList,java.util.ArrayList$1); }
-keepclassmembers class android.widget.ProgressBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.ProgressBar { void updateDrawableState(); }
-keepclassmembers class android.widget.ProgressBar { void drawableStateChanged(); }
-keepclassmembers class android.widget.ProgressBar { void drawableHotspotChanged(float,float); }
-keepclassmembers class java.util.WeakHashMap$2$1 { void <init>(java.util.WeakHashMap$2); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorListenerAdapter { void <init>(); }
-keepclassmembers class android.support.v7.view.menu.StandardMenuPopup$1 { void <init>(android.support.v7.view.menu.StandardMenuPopup); }
-keepclassmembers class java.util.WeakHashMap$2$1 { java.lang.Object get(java.util.Map$Entry); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void afterExecute(java.lang.Runnable,java.lang.Throwable); }
-keepclassmembers class android.widget.ProgressBar { void onDetachedFromWindow(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void terminated(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ServerFilter { void <init>(java.lang.String,java.lang.String[],ar.rulosoft.mimanganu.componentes.ServerFilter$FilterType); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ServerFilter { ar.rulosoft.mimanganu.componentes.ServerFilter$FilterType getFilterType(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ServerFilter { java.lang.String[] getOptions(); }
-keepclassmembers class android.support.v7.app.ActionBar { boolean invalidateOptionsMenu(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ServerFilter { java.lang.String getTitle(); }
-keepclassmembers class android.support.v7.preference.TwoStatePreference { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Bold { void <init>(); }
-keepclassmembers class android.support.v7.preference.TwoStatePreference { boolean isChecked(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void beforeExecute(java.lang.Thread,java.lang.Runnable); }
-keepclassmembers class com.android.internal.util.XmlUtils { void skipCurrentTag(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Bold { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.support.v7.preference.TwoStatePreference { void setDisableDependentsState(boolean); }
-keepclassmembers class android.support.v7.preference.TwoStatePreference { java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.view.DisplayAdjustments); }
-keepclassmembers class android.support.v7.preference.TwoStatePreference { void setSummaryOff(java.lang.CharSequence); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.content.res.CompatibilityInfo,android.os.IBinder); }
-keepclassmembers class android.support.v7.preference.TwoStatePreference { void setSummaryOn(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.view.ViewPager$2 { void <init>(); }
-keepclassmembers class java.lang.System { void exit(int); }
-keepclassmembers class android.view.DisplayAdjustments { android.os.IBinder getActivityToken(); }
-keepclassmembers class java.util.HashMap$KeySet { boolean isEmpty(); }
-keepclassmembers class java.util.HashMap$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.HashMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.view.DisplayAdjustments { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class java.util.HashMap$KeySet { int size(); }
-keepclassmembers class org.acra.ErrorReporter { void handleException(java.lang.Throwable); }
-keepclassmembers class android.text.TextPaint { void <init>(); }
-keepclassmembers class android.text.TextPaint { void set(android.text.TextPaint); }
-keepclassmembers class android.text.TextPaint { void <init>(int); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class java.util.HashMap$KeySet { void <init>(java.util.HashMap); }
-keepclassmembers class java.net.PortUnreachableException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$3 { void <init>(ar.rulosoft.mimanganu.adapters.DownloadAdapter); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Bitmap$1 { void <init>(); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$3 { void run(); }
-keepclassmembers class java.util.HashMap$KeySet { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class java.lang.System { void loadLibrary(java.lang.String); }
-keepclassmembers class android.graphics.Bitmap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList remove(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class java.lang.System { void logW(java.lang.String); }
-keepclassmembers class java.lang.System { void logI(java.lang.String); }
-keepclassmembers class java.lang.System { void logE(java.lang.String); }
-keepclassmembers class java.lang.System { void logW(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.System { void logI(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getChangingConfigurations(); }
-keepclassmembers class java.lang.System { void logE(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$002(android.graphics.drawable.LayerDrawable$LayerState,boolean); }
-keepclassmembers class java.net.NetworkInterface { java.util.Enumeration getInetAddresses(); }
-keepclassmembers class java.net.NetworkInterface { int getIndex(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$2 { void <init>(android.view.View,java.util.ArrayList); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$102(android.graphics.drawable.LayerDrawable$LayerState,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$000(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void invalidateCache(); }
-keepclassmembers class android.animation.PathKeyframes$3 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$VPage$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$VPage,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$100(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.content.res.XmlBlock { void close(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void close(); }
-keepclassmembers class android.content.res.XmlBlock { int access$100(long); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <init>(java.lang.String,libcore.icu.LocaleData); }
-keepclassmembers class android.content.res.XmlBlock { int access$600(long); }
-keepclassmembers class android.content.res.XmlBlock { int access$200(long); }
-keepclassmembers class android.content.res.XmlBlock { int access$700(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int access$800(long,int); }
-keepclassmembers class android.content.res.XmlBlock { void access$1500(long); }
-keepclassmembers class android.content.res.XmlBlock { int access$1000(long,java.lang.String,java.lang.String); }
-keepclassmembers class android.provider.Settings$System { java.lang.String getString(android.content.ContentResolver,java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock { int access$1100(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int access$900(long,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatBigInteger(java.math.BigInteger,java.text.FieldPosition); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatBigDecimal(java.math.BigDecimal,java.text.FieldPosition); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnection acquireConnection(java.lang.String,int,android.os.CancellationSignal); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object get(int); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.support.v4.view.ViewPropertyAnimatorCompat animate(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class android.content.res.XmlBlock { void access$1600(android.content.res.XmlBlock); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setDecimalFormatSymbols(libcore.icu.LocaleData); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void updateFieldPosition(java.text.FieldPosition,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class java.util.Arrays$ArrayList { int size(); }
-keepclassmembers class android.provider.Settings$System { int getInt(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean canScrollVertically(android.view.View,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatLong(long,java.text.FieldPosition); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.provider.Settings$System { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { int combineMeasuredStates(int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { java.lang.String getImageFrom(ar.rulosoft.mimanganu.componentes.Chapter,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { ar.rulosoft.mimanganu.servers.ServerBase$FilteredType getFilteredType(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { java.util.ArrayList getMangas(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDouble(double,java.text.FieldPosition); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPattern(java.lang.String); }
-keepclassmembers class java.net.NetworkInterface { int hashCode(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void closeAvailableConnectionsAndLogExceptionsLocked(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { boolean hasCredentials(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { ar.rulosoft.mimanganu.componentes.ServerFilter[] getServerFilters(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { boolean hasList(); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void discardAcquiredConnectionsLocked(); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getLayerType(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.graphics.Matrix getMatrix(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { android.view.Display getDisplay(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMeasuredWidthAndState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getLayoutDirection(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMeasuredState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.Number parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMaximumFractionDigits(); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMinimumHeight(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees,byte[]); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class java.util.EnumMap { void <init>(java.lang.Class); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getOverScrollMode(android.view.View); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMinimumFractionDigits(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getMinimumWidth(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { boolean needLogin(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { javax.security.auth.x500.X500Principal getIssuer(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { java.util.ArrayList search(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoToEs { boolean testLogin(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$FixedLengthSink { okio.Timeout timeout(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.util.List getAuthenticatedAttributes(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestEncryptionAlgorithm(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestEncryptionAlgorithmName(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestAlgorithm(); }
-keepclassmembers class android.support.v4.view.ViewCompat { float getScaleX(android.view.View); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$FixedLengthSink { void flush(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] getEncodedAuthenticatedAttributes(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestAlgorithmName(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isParseBigDecimal(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isParseIntegerOnly(); }
-keepclassmembers class android.support.v4.view.ViewCompat { java.lang.String getTransitionName(android.view.View); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] getEncryptedDigest(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.support.v4.view.ViewCompat { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { float getZ(android.view.View); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setGroupingUsed(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat { float getTranslationY(android.view.View); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { int access$000(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.pkcs7.AuthenticatedAttributes access$400(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.math.BigInteger access$200(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { javax.security.auth.x500.X500Principal access$100(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.util.List access$700(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$500(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean hasTransientState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class java.util.EnumMap { java.lang.Object put(java.lang.Enum,java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean isLaidOut(android.view.View); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] access$600(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat { void jumpDrawablesToCurrentState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat { boolean isNestedScrollingEnabled(android.view.View); }
-keepclassmembers class java.util.EnumMap { int size(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <init>(int,java.lang.Object[],org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.pkcs7.AuthenticatedAttributes,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],java.util.List,org.apache.harmony.security.pkcs7.SignerInfo$1); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.view.ViewCompat { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { int getMaxActionButtons(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { boolean enableHomeButtonByDefault(); }
-keepclassmembers class java.util.EnumMap { boolean isValidKeyType(java.lang.Object); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { boolean showsOverflowMenuButton(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees,byte[],org.apache.harmony.security.x509.NameConstraints$1); }
-keepclassmembers class android.support.v4.view.ViewCompat { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.support.v7.view.ActionBarPolicy { boolean hasEmbeddedTabs(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setAccessibilityLiveRegion(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void wakeConnectionWaitersLocked(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void access$100(android.support.v7.preference.PreferenceFragmentCompat); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setAlpha(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat { int resolveSizeAndState(int,int,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setBackground(android.view.View,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void bindPreferences(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { android.support.v7.widget.RecyclerView access$200(android.support.v7.preference.PreferenceFragmentCompat); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void postBindPreferences(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void unbindPreferences(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setElevation(android.view.View,float); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void addPreferencesFromResource(int); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { android.support.v7.preference.Preference findPreference(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setFitsSystemWindows(android.view.View,boolean); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { android.support.v7.preference.PreferenceScreen getPreferenceScreen(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { android.support.v7.preference.PreferenceManager getPreferenceManager(); }
-keepclassmembers class org.acra.collector.CrashReportData { org.json.JSONObject toJSON(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { android.support.v7.widget.RecyclerView getListView(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void onBindPreferences(); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setLayerType(android.view.View,int,android.graphics.Paint); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setScaleX(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setOnApplyWindowInsetsListener(android.view.View,android.support.v4.view.OnApplyWindowInsetsListener); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setSaveFromParentEnabled(android.view.View,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setScrollIndicators(android.view.View,int,int); }
-keepclassmembers class rapid.decoder.IntegerMaker$1 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setScaleY(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat { void setTranslationY(android.view.View,float); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void onDestroyView(); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,int,float); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,float); }
-keepclassmembers class rapid.decoder.IntegerMaker$1 { int toInteger(float); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$UpdateListTask { void onCancelled(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$UpdateListTask { void <init>(ar.rulosoft.mimanganu.MainFragment,android.content.Context,android.view.View,android.content.SharedPreferences); }
-keepclassmembers class java.io.NotActiveException { void <init>(); }
-keepclassmembers class android.view.RenderNodeAnimator { void moveToRunningState(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void onStart(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$PointPool { void <init>(); }
-keepclassmembers class android.view.RenderNodeAnimator { void doStart(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void onUnbindPreferences(); }
-keepclassmembers class android.widget.Toast$TN$2 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void onStop(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void onViewCreated(android.view.View,android.os.Bundle); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void setDividerHeight(int); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void setDivider(android.graphics.drawable.Drawable); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { java.util.ArrayList getMangas(); }
-keepclassmembers class android.view.RenderNodeAnimator { void end(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat { void setPreferenceScreen(android.support.v7.preference.PreferenceScreen); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$4 { void run(); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$4 { void <init>(ar.rulosoft.mimanganu.adapters.DownloadAdapter); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$UpdateListTask { void onPreExecute(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$1 { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartValue(float); }
-keepclassmembers class android.view.RenderNodeAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl { boolean isCtrlPressed(android.view.KeyEvent); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isStarted(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable$1 { void <init>(android.widget.AbsListView$FlingRunnable); }
-keepclassmembers class android.widget.AdapterView$AdapterContextMenuInfo { void <init>(android.view.View,int,long); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.view.RenderNodeAnimator { long getStartDelay(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { boolean isNestedScrollingEnabled(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { java.lang.String getTransitionName(android.view.View); }
-keepclassmembers class android.view.RenderNodeAnimator { void releaseNativePtr(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OpenOverflowRunnable { void <init>(android.support.v7.widget.ActionMenuPresenter,android.support.v7.widget.ActionMenuPresenter$OverflowPopup); }
-keepclassmembers class android.view.RenderNodeAnimator { long getNativeAnimator(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { float getZ(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog { android.widget.EditText access$000(ar.rulosoft.mimanganu.componentes.LoginDialog); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog { android.content.Context access$300(ar.rulosoft.mimanganu.componentes.LoginDialog); }
-keepclassmembers class android.view.RenderNodeAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { boolean hasList(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog { android.widget.ProgressBar access$200(ar.rulosoft.mimanganu.componentes.LoginDialog); }
-keepclassmembers class com.android.internal.util.XmlUtils { void nextElement(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadMangaToday { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog { android.widget.EditText access$100(ar.rulosoft.mimanganu.componentes.LoginDialog); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog { android.app.AlertDialog access$400(ar.rulosoft.mimanganu.componentes.LoginDialog); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean access$000(android.view.RenderNodeAnimator,long); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void requestApplyInsets(android.view.View); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getModifiers(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$4 { void <init>(int); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment$2 { void <init>(ar.rulosoft.custompref.PreferenceListDirFragment); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getAccessFlags(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getDexMethodIndex(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog { void show(); }
-keepclassmembers class android.support.v4.view.ViewCompatLollipop { void setElevation(android.view.View,float); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { boolean alsoReportToAndroidFramework(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { org.acra.file.Directory applicationLogFileDir(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void <init>(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int applicationLogFileLines(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean startEvent(android.view.InputEvent,int,java.lang.String); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class android.graphics.PointF$1 { void <init>(); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.content.Context { void <init>(); }
-keepclassmembers class android.content.Context { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int connectionTimeout(); }
-keepclassmembers class android.content.Context { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void close(); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { boolean deleteOldUnsentReportsOnApplicationStart(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { boolean deleteUnapprovedReportsOnApplicationStart(); }
-keepclassmembers class android.content.Context { java.lang.CharSequence getText(int); }
-keepclassmembers class android.content.Context { java.lang.String getString(int); }
-keepclassmembers class okhttp3.RequestBody { void <init>(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int dropboxCollectionMinutes(); }
-keepclassmembers class android.content.Context { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class okhttp3.RequestBody { okhttp3.RequestBody create(okhttp3.MediaType,byte[]); }
-keepclassmembers class android.content.Context { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class java.util.Collections { int secondaryHash(java.lang.Object); }
-keepclassmembers class java.lang.UnsatisfiedLinkError { void <init>(); }
-keepclassmembers class java.lang.UnsatisfiedLinkError { void <init>(java.lang.String); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int[]); }
-keepclassmembers class android.support.v7.app.AlertController$1 { void <init>(android.support.v7.app.AlertController); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { java.util.Map httpHeaders(); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int,int[]); }
-keepclassmembers class android.support.v7.preference.EditTextPreferenceDialogFragmentCompat { void <init>(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { org.acra.sender.HttpSender$Method httpMethod(); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class android.text.style.ReplacementSpan { void <init>(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { boolean includeDropBoxSystemTags(); }
-keepclassmembers class android.support.v7.preference.EditTextPreferenceDialogFragmentCompat { boolean needInputMethod(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { boolean logcatFilterByPid(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { android.view.InputEventConsistencyVerifier$KeyState findKeyState(int,int,int,boolean); }
-keepclassmembers class android.support.v7.preference.EditTextPreferenceDialogFragmentCompat { void onDialogClosed(boolean); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { boolean nonBlockingReadForLogcat(); }
-keepclassmembers class android.system.StructTimeval { void <init>(long,long); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$4 { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$4 { void onClick(android.view.View); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.graphics.drawable.ScaleDrawable,android.content.res.Resources); }
-keepclassmembers class java.net.URI$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.app.ActivityThread { android.app.Application currentApplication(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.BatoTo$BatotoLoginInterceptor { void <init>(ar.rulosoft.mimanganu.servers.BatoTo,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View$9 { void <init>(java.lang.String); }
-keepclassmembers class android.app.RemoteInput$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { boolean canApplyTheme(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void close(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { org.acra.sender.HttpSender$Type reportType(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { int getChangingConfigurations(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { org.acra.ReportingInteractionMode reportingInteractionMode(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { boolean canConstantState(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resCertificate(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resDialogCommentPrompt(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resDialogEmailPrompt(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resDialogIcon(); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.util.zip.ZipEntry,java.util.jar.JarFile); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resDialogNegativeButtonText(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resDialogOkToast(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resDialogPositiveButtonText(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resNotifIcon(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resDialogTheme(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resDialogText(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resNotifText(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resDialogTitle(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resNotifTickerText(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resToastText(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { boolean sendReportsInDevMode(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { ar.rulosoft.mimanganu.servers.ServerBase$FilteredType getFilteredType(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int resNotifTitle(); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { void <init>(); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onSingleTapUp(android.view.MotionEvent); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { void onShowPress(android.view.MotionEvent); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { void onLongPress(android.view.MotionEvent); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onDown(android.view.MotionEvent); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onDoubleTapEvent(android.view.MotionEvent); }
-keepclassmembers class java.net.URL { void <init>(java.net.URL,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { java.util.ArrayList getMangas(); }
-keepclassmembers class android.text.method.NumberKeyListener { void <init>(); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onSingleTapConfirmed(android.view.MotionEvent); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onDoubleTap(android.view.MotionEvent); }
-keepclassmembers class android.text.method.NumberKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.AbstractMap { void <init>(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int sharedPreferencesMode(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { boolean stopServicesOnCrash(); }
-keepclassmembers class org.acra.config.ConfigurationBuilder { int socketTimeout(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.JapScan { boolean hasList(); }
-keepclassmembers class java.net.URL { int hashCode(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatICSImpl { void <init>(); }
-keepclassmembers class android.support.v7.app.AlertController$2 { void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class java.util.AbstractMap { int size(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void <init>(); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean); }
-keepclassmembers class java.util.AbstractMap { boolean isEmpty(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.net.URL { java.io.InputStream openStream(); }
-keepclassmembers class java.net.URL { void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void clearColorFilter(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.Boolean truthValue(boolean); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class java.net.URL { java.lang.String toString(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { int[] getState(); }
-keepclassmembers class android.util.Singleton { java.lang.Object get(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { int getMinimumHeight(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { int getMinimumWidth(); }
-keepclassmembers class android.util.Singleton { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void jumpToCurrentState(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setChangingConfigurations(int); }
-keepclassmembers class java.net.URL { int getEffectivePort(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean onLevelChange(int); }
-keepclassmembers class java.net.URL { java.lang.String getProtocol(); }
-keepclassmembers class java.net.URL { java.lang.String getAuthority(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setFilterBitmap(boolean); }
-keepclassmembers class java.net.URL { int getPort(); }
-keepclassmembers class java.net.URL { java.lang.String getUserInfo(); }
-keepclassmembers class java.net.URL { java.lang.String getFile(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setHotspot(float,float); }
-keepclassmembers class java.net.URL { java.lang.String getQuery(); }
-keepclassmembers class java.net.URL { java.lang.String getRef(); }
-keepclassmembers class java.net.URL { java.lang.String getHost(); }
-keepclassmembers class java.net.URL { java.lang.String getPath(); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void <init>(java.lang.String,java.security.MessageDigest,byte[],java.security.cert.Certificate[][],java.util.Hashtable); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.Runtime { java.lang.Process exec(java.lang.String[]); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setContentHandler(org.xml.sax.ContentHandler); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class java.lang.Runtime { java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File); }
-keepclassmembers class android.support.v4.widget.TextViewCompatJbMr1 { void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCommon { boolean setState(int[]); }
-keepclassmembers class android.widget.FastScroller$2 { void <init>(android.widget.FastScroller); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void write(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void <init>(android.widget.CompoundButton); }
-keepclassmembers class android.widget.FastScroller$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.lang.Package { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper$1 { void <init>(android.support.v7.view.menu.MenuPopupHelper); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void aname(char[],int,int); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper$1 { void onDismiss(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void adup(char[],int,int); }
-keepclassmembers class org.acra.ReportField$8 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void applyButtonTint(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { void <init>(com.android.i18n.phonenumbers.NumberParseException$ErrorType,java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void entity(char[],int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { com.android.i18n.phonenumbers.NumberParseException$ErrorType getErrorType(); }
-keepclassmembers class java.lang.Package { java.lang.String getName(); }
-keepclassmembers class java.lang.Runtime { void runFinalization(); }
-keepclassmembers class java.lang.Package { int hashCode(); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void onSetButtonDrawable(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void etag(char[],int,int); }
-keepclassmembers class android.widget.Editor$Blink { void cancel(); }
-keepclassmembers class android.text.Editable$Factory { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void setSupportButtonTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.Editor$Blink { void uncancel(); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void restart(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.support.v7.widget.AppCompatCompoundButtonHelper { void setSupportButtonTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.content.res.Configuration { void <init>(); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.content.res.Configuration { void <init>(android.content.res.Configuration); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$1 { void <init>(); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class java.lang.Throwable { void <init>(); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.Throwable); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void computeBitmapSize(); }
-keepclassmembers class java.lang.Throwable { java.lang.String getMessage(); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable fillInStackTrace(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setMipMap(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAntiAlias(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTargetDensity(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setDither(boolean); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeX(android.graphics.Shader$TileMode); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeY(android.graphics.Shader$TileMode); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getInternalStackTrace(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setGravity(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$7 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean needMirroring(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$2 { void <init>(android.support.v4.widget.SwipeRefreshLayout); }
-keepclassmembers class android.content.res.Configuration { void setToDefaults(); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult$1 { void <init>(android.support.v7.util.DiffUtil$DiffResult,android.support.v7.widget.RecyclerView$Adapter); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable getCause(); }
-keepclassmembers class android.support.v7.app.ResourcesFlusher { boolean flush(android.content.res.Resources); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult$1 { void onChanged(int,int,java.lang.Object); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult$1 { void onInserted(int,int); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$3 { void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],boolean,int,int,okhttp3.internal.http2.Ping); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult$1 { void onMoved(int,int); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult$1 { void onRemoved(int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getAlpha(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$3 { void execute(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean onStateChange(int[]); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$17 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isStateful(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat { android.support.v4.media.session.MediaSessionCompat$Token getSessionToken(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$2 { void <init>(android.support.v7.app.WindowDecorActionBar); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pitarget(char[],int,int); }
-keepclassmembers class android.content.Intent { void <init>(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$2 { void onAnimationEnd(android.view.View); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void stage(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void stagc(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void cmnt(char[],int,int); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { void <init>(); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$2 { void <init>(android.support.v7.preference.PreferenceGroupAdapter,java.util.List,java.util.List,android.support.v7.preference.PreferenceManager$PreferenceComparisonCallback); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String,android.net.Uri); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { int getEntity(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { int getSmallestScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper$GingerbreadImpl { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$2 { int getNewListSize(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { int access$000(com.android.i18n.phonenumbers.RegexCache$LRUCache); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Shader$TileMode parseTileMode(int); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$2 { int getOldListSize(); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean canApplyTheme(); }
-keepclassmembers class org.acra.builder.NoOpReportPrimer { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicHeight(); }
-keepclassmembers class org.acra.builder.NoOpReportPrimer { void primeReport(android.content.Context,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void comment(char[],int,int); }
-keepclassmembers class android.support.v7.preference.SwitchPreferenceCompat$Listener { void <init>(android.support.v7.preference.SwitchPreferenceCompat); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { void <init>(int); }
-keepclassmembers class android.support.v7.preference.SwitchPreferenceCompat$Listener { void <init>(android.support.v7.preference.SwitchPreferenceCompat,android.support.v7.preference.SwitchPreferenceCompat$1); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void endDTD(); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void startDTD(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void setLengthChangesAllowed(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void initializeWithState(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources); }
-keepclassmembers class android.widget.RemoteViews$MutablePair { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources,android.graphics.drawable.BitmapDrawable$1); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class java.text.Normalizer$Form { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View$6 { void <init>(java.lang.String); }
-keepclassmembers class java.lang.ProcessManager$ProcessInputStream { void close(); }
-keepclassmembers class java.lang.ProcessManager$ProcessInputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.support.v4.widget.TextViewCompat { void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.ProcessManager$ProcessInputStream { void <init>(java.io.FileDescriptor,java.lang.ProcessManager$1); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class java.text.Normalizer { java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector$CodecType { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$ViewReference { void <init>(android.view.View); }
-keepclassmembers class android.support.v4.content.ContextCompatJellybean { void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.NoSuchElementException { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$4$1 { void <init>(ar.rulosoft.mimanganu.MangaFragment$4,android.util.SparseBooleanArray,ar.rulosoft.mimanganu.servers.ServerBase,android.view.ActionMode); }
-keepclassmembers class android.support.v4.app.SuperNotCalledException { void <init>(java.lang.String); }
-keepclassmembers class android.content.res.Configuration { boolean equals(android.content.res.Configuration); }
-keepclassmembers class android.widget.AbsListView { void initAbsListView(); }
-keepclassmembers class android.content.res.ColorStateList$1 { void <init>(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$RectPool { void <init>(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$RectPool { java.lang.Object newInstance(); }
-keepclassmembers class android.content.res.ColorStateList$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.AbsListView { int getCheckedItemCount(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$RectPool { void onReset(android.graphics.Rect); }
-keepclassmembers class android.widget.AbsListView { boolean isItemChecked(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat$DrawableWrapperStateKitKat { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.graphics.Paint$Join { void <init>(java.lang.String,int,int); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { void <init>(java.security.cert.X509Certificate); }
-keepclassmembers class android.widget.AbsListView { void clearChoices(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.util.Set getCriticalExtensionOIDs(); }
-keepclassmembers class okhttp3.EventListener$2 { void <init>(okhttp3.EventListener); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class okhttp3.EventListener$2 { okhttp3.EventListener create(okhttp3.Call); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.Principal getIssuerDN(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { boolean hasUnsupportedCriticalExtension(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.Principal getSubjectDN(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { void verify(java.security.PublicKey); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.lang.String toString(); }
-keepclassmembers class java.lang.Throwable { java.lang.String getLocalizedMessage(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { boolean[] getKeyUsage(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.PublicKey getPublicKey(); }
-keepclassmembers class libcore.io.HeapBufferIterator { void <init>(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class libcore.io.HeapBufferIterator { void seek(int); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void registrationComplete(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void <init>(android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean,int); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject put(java.lang.String,double); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject put(java.lang.String,boolean); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject put(java.lang.String,int); }
-keepclassmembers class org.json.JSONObject { org.json.JSONObject put(java.lang.String,long); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityGingerbread { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityGingerbread { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void access$000(ar.rulosoft.mimanganu.services.DownloadPoolService); }
-keepclassmembers class android.widget.AbsListView { int getChoiceMode(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void dismiss(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { android.support.v7.view.menu.MenuPopup getPopup(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { boolean isShowing(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void onDismiss(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void setForceShowIcon(boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void setGravity(int); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { void setPresenterCallback(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class org.json.JSONObject { java.lang.Object opt(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollStyle(int); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { boolean tryShow(); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerAlwaysVisibleUiThread(boolean); }
-keepclassmembers class android.widget.AbsListView { boolean isOwnerThread(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopupHelper { boolean tryShow(int,int); }
-keepclassmembers class android.widget.AbsListView { int getVerticalScrollbarWidth(); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { void <init>(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { boolean isFastScrollEnabled(); }
-keepclassmembers class android.widget.AbsListView { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class android.widget.AbsListView { void setOnScrollListener(android.widget.AbsListView$OnScrollListener); }
-keepclassmembers class android.widget.AbsListView { void setSmoothScrollbarEnabled(boolean); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { java.lang.Object getToken(); }
-keepclassmembers class android.widget.AbsListView { void invokeOnItemScrollListener(); }
-keepclassmembers class android.support.v7.app.AlertController { void manageScrollIndicators(android.view.View,android.view.View,android.view.View); }
-keepclassmembers class android.widget.AbsListView { void sendAccessibilityEvent(int); }
-keepclassmembers class android.support.v4.media.session.MediaSessionCompat$Token { int hashCode(); }
-keepclassmembers class android.support.v7.preference.MultiSelectListPreferenceDialogFragmentCompat { void onDialogClosed(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$ColorFilterLruCache { void <init>(int); }
-keepclassmembers class android.widget.AbsListView { int getSelectionModeForAccessibility(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void detachListener(int); }
-keepclassmembers class android.support.v7.app.AlertController { int selectContentView(); }
-keepclassmembers class android.content.Intent { java.lang.String getAction(); }
-keepclassmembers class android.view.KeyCharacterMap$1 { void <init>(); }
-keepclassmembers class android.content.Intent { java.lang.String getType(); }
-keepclassmembers class org.json.JSONObject { java.util.Iterator keys(); }
-keepclassmembers class android.widget.AbsListView { void setScrollingCacheEnabled(boolean); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.widget.AbsListView { void setTextFilterEnabled(boolean); }
-keepclassmembers class android.view.KeyCharacterMap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.AbsListView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void useDefaultSelector(); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment { android.widget.ListView access$000(ar.rulosoft.custompref.PreferenceListDirFragment); }
-keepclassmembers class android.widget.AbsListView { boolean isStackFromBottom(); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment { java.lang.String access$100(ar.rulosoft.custompref.PreferenceListDirFragment); }
-keepclassmembers class android.widget.AbsListView { void setStackFromBottom(boolean); }
-keepclassmembers class okhttp3.Route { okhttp3.Address address(); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment { java.lang.String access$102(ar.rulosoft.custompref.PreferenceListDirFragment,java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void requestLayoutIfNecessary(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment { android.content.Context access$200(ar.rulosoft.custompref.PreferenceListDirFragment); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { void <init>(); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment { android.widget.TextView access$300(ar.rulosoft.custompref.PreferenceListDirFragment); }
-keepclassmembers class android.content.Intent { java.lang.String resolveTypeIfNeeded(android.content.ContentResolver); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { void <init>(); }
-keepclassmembers class okhttp3.Route { java.net.Proxy proxy(); }
-keepclassmembers class okhttp3.Route { boolean requiresTunnel(); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$000(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class android.content.Intent { android.content.ClipData getClipData(); }
-keepclassmembers class okhttp3.Route { java.net.InetSocketAddress socketAddress(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int fieldId(); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$100(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$400(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$200(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class android.content.Intent { void setAllowFds(boolean); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$500(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Object access$300(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Boolean access$600(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment { void onDialogClosed(boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20$Builder { void addAction(android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class android.widget.AdapterView { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class android.widget.AdapterView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20$Builder { android.app.Notification build(); }
-keepclassmembers class ar.rulosoft.custompref.PreferenceListDirFragment { void setParent(ar.rulosoft.custompref.PreferencesListDir); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20$Builder { android.app.Notification$Builder getBuilder(); }
-keepclassmembers class android.support.v4.app.Fragment$AnimationInfo { java.lang.Boolean access$700(android.support.v4.app.Fragment$AnimationInfo); }
-keepclassmembers class android.view.FocusFinder$1 { void <init>(); }
-keepclassmembers class android.widget.AdapterView { void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener); }
-keepclassmembers class android.content.Intent { int getIntExtra(java.lang.String,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$VPage { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader); }
-keepclassmembers class android.content.Intent { java.lang.String getStringExtra(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.widget.AdapterView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { void requestLayout(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.widget.AbsListView { void resetList(); }
-keepclassmembers class android.view.FocusFinder$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.widget.AdapterView { long getSelectedItemId(); }
-keepclassmembers class android.content.Intent { java.lang.CharSequence getCharSequenceExtra(java.lang.String); }
-keepclassmembers class android.widget.AdapterView { int getCount(); }
-keepclassmembers class android.widget.AdapterView { int getSelectedItemPosition(); }
-keepclassmembers class android.content.Intent { android.os.Parcelable getParcelableExtra(java.lang.String); }
-keepclassmembers class rapid.decoder.builtin.BuiltInDecoder { void <init>(java.io.InputStream); }
-keepclassmembers class android.content.Intent { android.os.Parcelable[] getParcelableArrayExtra(java.lang.String); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getParcelableArrayListExtra(java.lang.String); }
-keepclassmembers class android.widget.AdapterView { int getFirstVisiblePosition(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$2 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment,ar.rulosoft.mimanganu.servers.ServerBase); }
-keepclassmembers class android.widget.AdapterView { void setFocusable(boolean); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getStringArrayListExtra(java.lang.String); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String); }
-keepclassmembers class rapid.decoder.builtin.BuiltInDecoder { android.graphics.Bitmap$Config getDefaultConfig(boolean); }
-keepclassmembers class android.widget.AdapterView { void checkFocus(); }
-keepclassmembers class android.widget.AdapterView { void setFocusableInTouchMode(boolean); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.media.MediaCodecList { void <init>(int); }
-keepclassmembers class android.widget.AdapterView { void updateEmptyStatus(boolean); }
-keepclassmembers class rapid.decoder.builtin.BuiltInDecoder { void close(); }
-keepclassmembers class android.widget.AdapterView { java.lang.Object getItemAtPosition(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$5 { void <init>(); }
-keepclassmembers class android.support.v7.app.AlertController { void installContent(); }
-keepclassmembers class android.widget.AdapterView { long getItemIdAtPosition(int); }
-keepclassmembers class rapid.decoder.builtin.BuiltInDecoder { void setRegion(android.graphics.Rect); }
-keepclassmembers class android.widget.AdapterView { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class rapid.decoder.builtin.BuiltInDecoder { void setUseFilter(boolean); }
-keepclassmembers class android.widget.AdapterView { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.AbsListView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.widget.AdapterView { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class android.widget.AbsListView { void layoutChildren(); }
-keepclassmembers class android.widget.AdapterView { void fireOnSelected(); }
-keepclassmembers class android.widget.AdapterView { void dispatchOnItemSelected(); }
-keepclassmembers class android.support.v7.app.AlertController { void setCustomTitle(android.view.View); }
-keepclassmembers class android.widget.AdapterView { void performAccessibilityActionsOnSelected(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledGridView { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.app.AlertController { void setIcon(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledGridView { void onMeasure(int,int); }
-keepclassmembers class android.widget.AbsListView { void updateScrollIndicators(); }
-keepclassmembers class android.widget.AdapterView { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.WeakHashMap$Entry { void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.widget.AdapterView { boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.app.AlertController { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollUp(); }
-keepclassmembers class android.support.v7.app.AlertController { void setMessage(java.lang.CharSequence); }
-keepclassmembers class java.util.WeakHashMap$Entry { java.lang.Object getValue(); }
-keepclassmembers class android.support.v7.app.AlertController { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.app.AlertController { void setView(int); }
-keepclassmembers class org.acra.legacy.LegacyFileHandler { void <init>(android.content.Context,android.content.SharedPreferences); }
-keepclassmembers class android.support.v7.app.AlertController { void setView(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { void <init>(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.support.v7.app.AlertController { void setView(android.view.View,int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingTop(); }
-keepclassmembers class java.util.WeakHashMap$Entry { java.lang.Object getKey(); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingLeft(); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingRight(); }
-keepclassmembers class android.widget.AdapterView { boolean canAnimate(); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingBottom(); }
-keepclassmembers class android.content.Intent { android.content.ComponentName getComponent(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { void changeStatus(ar.rulosoft.mimanganu.services.ChapterDownload$DownloadStatus); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { ar.rulosoft.mimanganu.componentes.Chapter getChapter(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { void checkProgreso(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$4 { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class android.util.AndroidException { void <init>(); }
-keepclassmembers class android.widget.AdapterView { void setSelectedPositionInt(int); }
-keepclassmembers class android.widget.AdapterView { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class android.content.Intent { android.content.Intent setAction(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { int getPagesStatusLength(); }
-keepclassmembers class android.content.Intent { android.content.Intent setDataAndType(android.net.Uri,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { int getProgress(); }
-keepclassmembers class android.widget.AdapterView { void access$000(android.widget.AdapterView,android.os.Parcelable); }
-keepclassmembers class android.widget.AdapterView { android.os.Parcelable access$100(android.widget.AdapterView); }
-keepclassmembers class android.widget.AdapterView { void setNextSelectedPositionInt(int); }
-keepclassmembers class android.widget.AbsListView { void positionSelectorLikeFocus(int,android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { void onStatusChanged(ar.rulosoft.mimanganu.services.ChapterDownload); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { void setChangeListener(ar.rulosoft.mimanganu.services.StateChangeListener); }
-keepclassmembers class android.content.Intent { void setClipData(android.content.ClipData); }
-keepclassmembers class android.widget.AbsListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { void setErrorListener(ar.rulosoft.mimanganu.services.ChapterDownload$OnErrorListener); }
-keepclassmembers class android.widget.AbsListView { boolean shouldShowSelector(); }
-keepclassmembers class android.widget.AbsListView { boolean touchModeDrawsInPressedState(); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(android.view.View); }
-keepclassmembers class android.widget.AbsListView { void drawSelector(android.graphics.Canvas); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class org.acra.ReportField$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView { android.graphics.drawable.Drawable getSelector(); }
-keepclassmembers class android.app.Notification$MediaStyle { android.app.Notification$MediaStyle setShowActionsInCompactView(int[]); }
-keepclassmembers class android.app.Notification$MediaStyle { android.app.Notification$MediaStyle setMediaSession(android.media.session.MediaSession$Token); }
-keepclassmembers class android.app.Notification$MediaStyle { void populateContentView(android.app.Notification); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean apply(android.view.View); }
-keepclassmembers class android.widget.AbsListView { void updateSelectorState(); }
-keepclassmembers class android.app.Notification$MediaStyle { void populateBigContentView(android.app.Notification); }
-keepclassmembers class android.widget.AbsListView { void drawableStateChanged(); }
-keepclassmembers class android.app.Notification$MediaStyle { void <init>(android.app.Notification$Builder); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.AbsListView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.text.style.UnderlineSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void setDownloadListener(ar.rulosoft.mimanganu.services.DownloadListener); }
-keepclassmembers class android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand { void <init>(android.widget.NumberPicker); }
-keepclassmembers class android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand { void access$500(android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void setStateChangeListener(ar.rulosoft.mimanganu.services.StateChangeListener); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void setDownloadsChangesListener(ar.rulosoft.mimanganu.services.DownloadsChangesListener); }
-keepclassmembers class android.view.View$12 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void onDetachedFromWindow(); }
-keepclassmembers class android.animation.FloatEvaluator { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class android.widget.AbsListView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand { void setStep(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { int onStartCommand(android.content.Intent,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService { void onStatusChanged(ar.rulosoft.mimanganu.services.ChapterDownload); }
-keepclassmembers class android.widget.AbsListView { void onCancelPendingInputEvents(); }
-keepclassmembers class android.app.Notification$MediaStyle { int getBigLayoutResource(int); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Error { void <init>(); }
-keepclassmembers class java.util.Hashtable$HashIterator { boolean hasNext(); }
-keepclassmembers class android.app.Notification$MediaStyle { void styleText(android.widget.RemoteViews); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.app.Notification$MediaStyle { void hideRightIcon(android.widget.RemoteViews); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.Throwable); }
-keepclassmembers class android.animation.PathKeyframes$1 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.app.Notification$MediaStyle { boolean hasProgress(); }
-keepclassmembers class android.animation.LayoutTransition$4 { void <init>(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int,android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.provider.Settings$NameValueTable { android.net.Uri getUriFor(android.net.Uri,java.lang.String); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(int,boolean); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$6 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.content.Intent { android.content.Intent setFlags(int); }
-keepclassmembers class android.widget.AbsListView { void dispatchSetPressed(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSMr1ViewCompatImpl { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class libcore.icu.TimeZoneNames { void access$100(java.lang.String,java.lang.String[][]); }
-keepclassmembers class android.support.v7.widget.SwitchCompat$1 { void <init>(android.support.v7.widget.SwitchCompat,boolean); }
-keepclassmembers class android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 { void <init>(android.support.v4.os.ParcelableCompatCreatorCallbacks); }
-keepclassmembers class android.content.Intent { android.content.Intent setComponent(android.content.ComponentName); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class android.support.v7.widget.SwitchCompat$1 { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class android.support.v7.widget.SwitchCompat$1 { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { java.lang.Object getTargetByName(java.lang.String); }
-keepclassmembers class android.support.v7.widget.SwitchCompat$1 { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float getDeceleration(int); }
-keepclassmembers class android.view.GestureDetector { void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEvent(android.view.View,int); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAlpha(int); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void finish(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AbsListView { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.View$AccessibilityDelegate { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.view.GestureDetector { void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getOpacity(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean springback(int,int,int); }
-keepclassmembers class okhttp3.internal.http.HttpDate$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class okhttp3.internal.http.HttpDate$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void <init>(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void setDefault(java.lang.Object,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void setOptional(int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean draw(android.graphics.Canvas); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean isFinished(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onAbsorb(int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onPull(float,float); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { boolean onRelease(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat { void setSize(int,int); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { android.graphics.Bitmap createColoredBitmap(android.content.Context,int,int); }
-keepclassmembers class android.transition.Fade { void <init>(int); }
-keepclassmembers class android.widget.AbsListView { void onTouchModeChanged(boolean); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(float,float,float,float,int,float,int,float); }
-keepclassmembers class android.view.animation.ScaleAnimation { void initializePivotPoint(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadii(float[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadius(float); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class android.view.GestureDetector { void cancel(); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference { java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int); }
-keepclassmembers class android.view.GestureDetector { void cancelTaps(); }
-keepclassmembers class android.view.GestureDetector { void dispatchLongPress(); }
-keepclassmembers class android.view.animation.ScaleAnimation { void initialize(int,int,int,int); }
-keepclassmembers class android.view.GestureDetector { android.view.MotionEvent access$000(android.view.GestureDetector); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$2 { void <init>(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.view.GestureDetector { boolean access$400(android.view.GestureDetector); }
-keepclassmembers class android.view.GestureDetector { android.view.GestureDetector$OnGestureListener access$100(android.view.GestureDetector); }
-keepclassmembers class android.view.GestureDetector { android.view.GestureDetector$OnDoubleTapListener access$300(android.view.GestureDetector); }
-keepclassmembers class android.view.GestureDetector { boolean access$502(android.view.GestureDetector,boolean); }
-keepclassmembers class android.view.GestureDetector { void access$200(android.view.GestureDetector); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Writer { void <init>(okio.Buffer); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float access$200(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean access$000(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { void buildIntoRemoteViews(android.content.Context,android.widget.RemoteViews,android.widget.RemoteViews); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int access$500(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int access$100(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableAction { void <init>(android.widget.RemoteViews,int,boolean,int,int,int,int); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference { void onStopTrackingTouch(android.widget.SeekBar); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { long access$600(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$2 { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$2 { int compare(ar.rulosoft.mimanganu.componentes.Chapter,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void buildPathIfDirty(); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference { void onStartTrackingTouch(android.widget.SeekBar); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState,android.graphics.drawable.VectorDrawable$1); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean needMirroring(); }
-keepclassmembers class okhttp3.internal.http2.Hpack$Writer { void setHeaderTableSizeSetting(int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAllowCaching(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int access$800(int,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColor(android.content.res.ColorStateList); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$3 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.widget.AbsListView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setDither(boolean); }
-keepclassmembers class android.widget.BaseAdapter { boolean hasStableIds(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.BaseAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.BaseAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setAlpha(int); }
-keepclassmembers class android.widget.BaseAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class android.widget.BaseAdapter { void notifyDataSetInvalidated(); }
-keepclassmembers class android.widget.BaseAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEnabled(int); }
-keepclassmembers class android.graphics.Paint$Align { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.widget.BaseAdapter { int getItemViewType(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEmpty(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$20$1 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$20); }
-keepclassmembers class android.widget.AbsListView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.BaseAdapter { int getViewTypeCount(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getOpacity(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$20$1 { void run(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { int getBigMediaLayoutResource(boolean,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { void hideNormalContent(android.widget.RemoteViews); }
-keepclassmembers class android.support.v7.app.TwilightCalculator { void <init>(); }
-keepclassmembers class java.lang.Exception { void <init>(); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { android.widget.RemoteViews overrideContentViewMedia(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,android.graphics.Bitmap,java.lang.CharSequence,boolean,long,int,java.util.List,int[],boolean,android.app.PendingIntent,boolean); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.Throwable); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.widget.AbsListView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.widget.AbsListView { void recycleVelocityTracker(); }
-keepclassmembers class android.widget.AbsListView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.AbsListView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat { void <init>(); }
-keepclassmembers class java.nio.BufferUnderflowException { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { void release(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(); }
-keepclassmembers class java.util.WeakHashMap$1$1 { void <init>(java.util.WeakHashMap$1); }
-keepclassmembers class java.util.Collections$UnmodifiableSet { void <init>(java.util.Set); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.WeakHashMap$1$1 { java.util.Map$Entry get(java.util.Map$Entry); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin$1 { void <init>(ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin); }
-keepclassmembers class android.widget.AbsListView { void reportScrollStateChange(int); }
-keepclassmembers class java.util.WeakHashMap$1$1 { java.lang.Object get(java.util.Map$Entry); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin$1 { void run(); }
-keepclassmembers class java.io.IOException { void <init>(); }
-keepclassmembers class android.support.v4.view.animation.LinearOutSlowInInterpolator { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.logging.Logger$1 { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void createScrollingCache(); }
-keepclassmembers class android.widget.AbsListView { void scrollListBy(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.Paint { void <init>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean$Builder { void addAction(android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.Paint { void <init>(android.graphics.Paint); }
-keepclassmembers class java.lang.reflect.AccessibleObject { void <init>(); }
-keepclassmembers class java.lang.reflect.AccessibleObject { boolean isAccessible(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean$Builder { android.app.Notification$Builder getBuilder(); }
-keepclassmembers class okio.Buffer$2 { void <init>(okio.Buffer); }
-keepclassmembers class android.graphics.Paint { void setClassVariablesFrom(android.graphics.Paint); }
-keepclassmembers class okio.Buffer$2 { void close(); }
-keepclassmembers class android.graphics.Paint { void set(android.graphics.Paint); }
-keepclassmembers class java.net.PlainServerSocketImpl { void <init>(); }
-keepclassmembers class android.graphics.Paint { void reset(); }
-keepclassmembers class okio.Buffer$2 { int read(byte[],int,int); }
-keepclassmembers class java.net.PlainServerSocketImpl { void create(boolean); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.support.v4.view.animation.FastOutSlowInInterpolator { void <init>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class okhttp3.internal.http2.Settings { void clear(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class okhttp3.internal.http2.Settings { int get(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.net.Uri$PathSegments { void <init>(java.lang.String[],int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setAlpha(int); }
-keepclassmembers class android.widget.AbsListView { int getHeaderViewsCount(); }
-keepclassmembers class android.widget.AbsListView { int getFooterViewsCount(); }
-keepclassmembers class android.support.v7.util.DiffUtil$Range { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void hideSelector(); }
-keepclassmembers class android.net.Uri$PathSegments { java.lang.Object get(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.support.v7.util.DiffUtil$Range { void <init>(int,int,int,int); }
-keepclassmembers class android.view.View$11 { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void <init>(android.graphics.drawable.RippleBackground,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController$AnimationParameters { void <init>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelectionIfNeeded(); }
-keepclassmembers class android.graphics.Paint { void setStyle(android.graphics.Paint$Style); }
-keepclassmembers class okhttp3.internal.http2.Settings { int size(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser$1 { void <init>(org.ccil.cowan.tagsoup.Parser); }
-keepclassmembers class android.net.Uri$PathSegments { int size(); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.graphics.Paint { void setStrokeCap(android.graphics.Paint$Cap); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.Paint { void setStrokeJoin(android.graphics.Paint$Join); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader getShader(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$Style getStyle(); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter getColorFilter(); }
-keepclassmembers class ar.rulosoft.custompref.ArrayAdapterColor$ViewHolder { void <init>(); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader setShader(android.graphics.Shader); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.Paint { android.graphics.PathEffect setPathEffect(android.graphics.PathEffect); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Xfermode setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface getTypeface(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void onAllReferencesReleased(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources,android.graphics.drawable.InsetDrawable$1); }
-keepclassmembers class android.support.v7.app.AlertDialog$Builder { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void dispose(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { java.lang.String getLabel(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void onCorruption(); }
-keepclassmembers class android.graphics.Paint { void setShadowLayer(float,float,float,int); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface setTypeface(android.graphics.Typeface); }
-keepclassmembers class android.widget.RemoteViews$SetDrawableParameters { void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode,int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { java.util.ArrayList getMangas(); }
-keepclassmembers class android.graphics.Paint { java.util.Locale getTextLocale(); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference$SavedState$1 { void <init>(); }
-keepclassmembers class android.support.v7.app.AlertDialog$Builder { android.support.v7.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void beginTransaction(); }
-keepclassmembers class android.graphics.Paint { void setLetterSpacing(float); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { boolean isMainThread(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.Paint { float getLetterSpacing(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void addState(int[],android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(); }
-keepclassmembers class android.graphics.Paint { java.lang.String getFontFeatureSettings(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void beginTransaction(android.database.sqlite.SQLiteTransactionListener,boolean); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean isStateful(); }
-keepclassmembers class android.text.style.SuggestionRangeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void endTransaction(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.support.v7.app.AlertDialog$Builder { android.support.v7.app.AlertDialog$Builder setMessage(java.lang.CharSequence); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter); }
-keepclassmembers class java.io.InputStream { int read(byte[]); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void setTransactionSuccessful(); }
-keepclassmembers class java.io.InputStream { void <init>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.Paint { float getFontSpacing(); }
-keepclassmembers class java.io.InputStream { void close(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { boolean hasList(); }
-keepclassmembers class android.support.v7.app.AlertDialog$Builder { android.support.v7.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener); }
-keepclassmembers class android.net.Uri$Part { boolean isEmpty(); }
-keepclassmembers class android.net.Uri$Part { java.lang.String getEncoded(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaEdenIt { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class java.io.InputStream { long skip(long); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Href { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { float getFloatOrFraction(android.content.res.TypedArray,int,float); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part nonNull(android.net.Uri$Part); }
-keepclassmembers class android.widget.AbsListView { void dismissPopup(); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromEncoded(java.lang.String); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromDecoded(java.lang.String); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaqueForState(); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String,android.net.Uri$1); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter,android.widget.ArrayAdapter$1); }
-keepclassmembers class org.acra.legacy.ReportMigrator$1 { void <init>(org.acra.legacy.ReportMigrator); }
-keepclassmembers class android.util.Rational { boolean isPosInf(); }
-keepclassmembers class android.util.Rational { boolean isNaN(); }
-keepclassmembers class android.util.Rational { boolean isNegInf(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void clearMutated(); }
-keepclassmembers class android.util.Rational { boolean equals(android.util.Rational); }
-keepclassmembers class android.support.v7.app.AlertDialog$Builder { android.support.v7.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int getStateCount(); }
-keepclassmembers class android.widget.AbsListView { boolean isInFilterMode(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int getStateDrawableIndex(int[]); }
-keepclassmembers class android.support.v7.app.AlertDialog$Builder { android.support.v7.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class java.nio.FileChannelImpl$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void setRangeSpan(android.text.Editable,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$2$1 { void <init>(ar.rulosoft.mimanganu.utils.UpdateUtil$2); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeRangeSpan(android.text.Editable); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { java.lang.String getGroupName(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState); }
-keepclassmembers class android.support.v7.app.AlertDialog$Builder { android.support.v7.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources,android.graphics.drawable.StateListDrawable$1); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.graphics.drawable.GradientDrawable$1); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.Drawable getStateDrawable(int); }
-keepclassmembers class android.support.v7.app.AlertDialog$Builder { android.support.v7.app.AlertDialog$Builder setView(android.view.View); }
-keepclassmembers class android.support.v7.app.AlertDialog$Builder { android.support.v7.app.AlertDialog$Builder setTitle(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.graphics.Matrix access$600(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.graphics.Matrix access$700(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.widget.AbsListView { void onGlobalLayout(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Font { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { int access$100(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void <init>(android.graphics.drawable.Animatable); }
-keepclassmembers class java.net.IDN { java.lang.String toASCII(java.lang.String,int); }
-keepclassmembers class java.io.RandomAccessFile { void close(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void start(); }
-keepclassmembers class java.net.IDN { java.lang.String toASCII(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class java.net.IDN { java.lang.String toUnicode(java.lang.String); }
-keepclassmembers class java.io.RandomAccessFile { java.io.FileDescriptor getFD(); }
-keepclassmembers class android.widget.AbsListView { void onFilterComplete(int); }
-keepclassmembers class java.util.TreeMap$Bound { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void stop(); }
-keepclassmembers class java.io.RandomAccessFile { long length(); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$StreamTimeout { void <init>(okhttp3.internal.http2.Http2Stream); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker,android.widget.SpellChecker$1); }
-keepclassmembers class java.util.TreeMap$Bound { void <init>(java.lang.String,int,java.util.TreeMap$1); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$StreamTimeout { void exitAndThrowIfTimedOut(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Http2Stream$StreamTimeout { void timedOut(); }
-keepclassmembers class java.io.RandomAccessFile { int read(byte[],int,int); }
-keepclassmembers class android.widget.AbsListView { void setTranscriptMode(int); }
-keepclassmembers class android.widget.Filter$RequestHandler { void <init>(android.widget.Filter,android.os.Looper); }
-keepclassmembers class android.widget.AbsListView { int getCacheColorHint(); }
-keepclassmembers class java.io.RandomAccessFile { void readFully(byte[]); }
-keepclassmembers class java.io.RandomAccessFile { int readInt(); }
-keepclassmembers class android.graphics.Canvas$EdgeType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.widget.AbsListView { void onRemoteAdapterDisconnected(); }
-keepclassmembers class android.widget.AbsListView { boolean onRemoteAdapterConnected(); }
-keepclassmembers class android.widget.AbsListView { int getSolidColor(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.Cursor rawQuery(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 { void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl { void <init>(android.support.design.widget.FloatingActionButtonGingerbread); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl { void <init>(android.support.design.widget.FloatingActionButtonGingerbread,android.support.design.widget.FloatingActionButtonGingerbread$1); }
-keepclassmembers class android.widget.AbsListView { int access$400(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { void setVisibleRangeHint(int,int); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$ShadowAnimatorImpl { void onAnimationEnd(android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class android.widget.AbsListView { boolean access$1300(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { java.lang.Runnable access$1202(android.widget.AbsListView,java.lang.Runnable); }
-keepclassmembers class android.widget.AbsListView { int access$500(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$1900(android.widget.AbsListView); }
-keepclassmembers class android.view.Choreographer$1 { void <init>(); }
-keepclassmembers class android.widget.AbsListView { int access$2000(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$1902(android.widget.AbsListView,android.os.StrictMode$Span); }
-keepclassmembers class android.view.Choreographer$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.widget.AbsListView { int access$2100(android.widget.AbsListView); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void access$2600(android.widget.AbsListView); }
-keepclassmembers class java.math.MathContext { void <init>(int,java.math.RoundingMode); }
-keepclassmembers class android.support.v7.widget.TintInfo { void <init>(); }
-keepclassmembers class android.support.v7.widget.TintInfo { void clear(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$Builder { void <init>(boolean); }
-keepclassmembers class android.app.BackStackState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.AbsListView { android.widget.FastScroller access$4100(android.widget.AbsListView); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$Builder { okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener); }
-keepclassmembers class java.math.MathContext { int getPrecision(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$Builder { okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink); }
-keepclassmembers class java.math.MathContext { java.math.RoundingMode getRoundingMode(); }
-keepclassmembers class android.support.v7.widget.CardView { void setCardBackgroundColor(int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$1 { void <init>(ar.rulosoft.mimanganu.MainFragment,android.view.Menu); }
-keepclassmembers class java.math.MathContext { void <init>(int); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { boolean checkShowingFlags(boolean,boolean,boolean); }
-keepclassmembers class android.graphics.BitmapFactory$Options { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$1 { void onClick(android.view.View); }
-keepclassmembers class android.support.v7.widget.CardView { void setPadding(int,int,int,int); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void execSQL(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void setRootAlpha(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { int getRootAlpha(); }
-keepclassmembers class android.content.ClipData$Item { void <init>(android.net.Uri); }
-keepclassmembers class android.webkit.WebViewDelegate { void <init>(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { void detachTimeout(okio.ForwardingTimeout); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { void flushRequest(); }
-keepclassmembers class android.widget.AbsListView { void access$4200(android.widget.AbsListView,android.view.View,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { boolean isReadOnly(); }
-keepclassmembers class android.graphics.Matrix { void <init>(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { void finishRequest(); }
-keepclassmembers class android.graphics.Matrix { boolean isIdentity(); }
-keepclassmembers class android.graphics.Matrix { void <init>(android.graphics.Matrix); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.Matrix { boolean rectStaysRect(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { boolean isOpen(); }
-keepclassmembers class android.content.res.ColorStateList { boolean isStateful(); }
-keepclassmembers class android.graphics.Matrix { void set(android.graphics.Matrix); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { java.lang.String getPath(); }
-keepclassmembers class android.content.res.ColorStateList { int getDefaultColor(); }
-keepclassmembers class java.net.ConnectException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.Matrix { void reset(); }
-keepclassmembers class android.graphics.Matrix { int hashCode(); }
-keepclassmembers class java.net.ConnectException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Matrix { void setTranslate(float,float); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$12 { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void onInvalidated(); }
-keepclassmembers class android.graphics.Matrix { void setScale(float,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void setScale(float,float); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setHasEmbeddedTabs(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$12 { void run(); }
-keepclassmembers class android.graphics.Matrix { void setRotate(float,float,float); }
-keepclassmembers class android.graphics.Matrix { void setRotate(float); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$JbMr1TextViewCompatImpl { void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.Matrix { boolean preTranslate(float,float); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager { void <init>(android.support.v7.app.AppCompatDelegateImplV14,android.support.v7.app.TwilightManager); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void updateVisibility(boolean); }
-keepclassmembers class android.widget.EdgeEffect { boolean isFinished(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager { void cleanup(); }
-keepclassmembers class android.graphics.Matrix { boolean preScale(float,float); }
-keepclassmembers class android.graphics.Matrix { boolean preConcat(android.graphics.Matrix); }
-keepclassmembers class android.widget.EdgeEffect { void onPull(float); }
-keepclassmembers class android.graphics.Matrix { boolean postTranslate(float,float); }
-keepclassmembers class android.graphics.Matrix { boolean postScale(float,float,float,float); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec { void writeRequestHeaders(okhttp3.Request); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow$1 { void <init>(java.lang.reflect.Field,android.widget.PopupWindow,android.view.ViewTreeObserver$OnScrollChangedListener); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb { void <init>(); }
-keepclassmembers class android.graphics.Matrix { boolean postScale(float,float); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float,float,float); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AutoNightModeManager { int getApplyableNightMode(); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl { void <init>(); }
-keepclassmembers class android.widget.EdgeEffect { void onRelease(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void completeDeferredDestroyActionMode(); }
-keepclassmembers class okhttp3.internal.connection.ConnectInterceptor { void <init>(okhttp3.OkHttpClient); }
-keepclassmembers class android.support.v4.view.ViewConfigurationCompat$IcsViewConfigurationVersionImpl { boolean hasPermanentMenuKey(android.view.ViewConfiguration); }
-keepclassmembers class android.graphics.Matrix { boolean postConcat(android.graphics.Matrix); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch$GestureListener { boolean onDoubleTapEvent(android.view.MotionEvent); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch$GestureListener { boolean onDown(android.view.MotionEvent); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(); }
-keepclassmembers class android.text.style.SuperscriptSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch$GestureListener { void onLongPress(android.view.MotionEvent); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[],int,float[],int,int); }
-keepclassmembers class android.graphics.Matrix { void mapVectors(float[],int,float[],int,int); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch$GestureListener { boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.drawable.VectorDrawable$VGroup access$000(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch$GestureListener { boolean onSingleTapConfirmed(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$300(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$402(android.graphics.drawable.VectorDrawable$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$302(android.graphics.drawable.VectorDrawable$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouch$GestureListener { boolean onSingleTapUp(android.view.MotionEvent); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatement { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatement { void <init>(android.database.sqlite.SQLiteConnection$1); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$400(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void addFrame(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeProvider { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$100(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeProvider { boolean performAction(int,int,android.os.Bundle); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView,android.widget.AdapterView$1); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void access$200(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$102(android.graphics.drawable.AnimationDrawable$AnimationState,boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat { void <init>(); }
-keepclassmembers class android.graphics.Matrix { long ni(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService$1 { void <init>(ar.rulosoft.mimanganu.services.DownloadPoolService); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { boolean getFitsSystemWindows(android.view.View); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { int getNavigationMode(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.DownloadPoolService$1 { void run(); }
-keepclassmembers class com.android.internal.app.AlertController$4 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class java.lang.ProcessManager$ProcessImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class android.support.v4.graphics.ColorUtils { int compositeColors(int,int); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { int getMinimumHeight(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { int getMinimumWidth(android.view.View); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$1 { void onClick(android.view.View); }
-keepclassmembers class java.lang.ProcessManager$ProcessImpl { int access$300(java.lang.ProcessManager$ProcessImpl); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$1 { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { boolean hasOverlappingRendering(android.view.View); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void postInvalidateOnAnimation(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long); }
-keepclassmembers class java.util.jar.JarFile { void close(); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { boolean hasTransientState(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void requestApplyInsets(android.view.View); }
-keepclassmembers class rapid.decoder.IntegerMaker { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void setBackground(android.view.View,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void hide(); }
-keepclassmembers class rapid.decoder.IntegerMaker { void <init>(java.lang.String,int,rapid.decoder.IntegerMaker$1); }
-keepclassmembers class android.support.v7.widget.RecyclerViewAccessibilityDelegate$1 { void <init>(android.support.v7.widget.RecyclerViewAccessibilityDelegate); }
-keepclassmembers class android.support.v4.view.ViewCompatJB { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl { void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl { boolean doCheck(java.lang.CharSequence,int,int); }
-keepclassmembers class android.media.session.MediaController$TransportControls { void <init>(android.media.session.MediaController); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.design.widget.Snackbar { void <init>(android.view.ViewGroup,android.view.View,android.support.design.widget.BaseTransientBottomBar$ContentViewCallback); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.graphics.drawable.TransitionDrawable,android.content.res.Resources); }
-keepclassmembers class android.support.v7.app.NotificationCompat$Builder { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { int getChangingConfigurations(); }
-keepclassmembers class org.acra.file.LastModifiedComparator { void <init>(); }
-keepclassmembers class libcore.io.Memory { int peekInt(long,boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { void <init>(); }
-keepclassmembers class libcore.net.url.FileURLConnection$1 { void <init>(); }
-keepclassmembers class android.preference.PreferenceManager { android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1$1$1$2 { void <init>(ar.rulosoft.mimanganu.utils.UpdateUtil$1$1$1,android.content.DialogInterface,android.widget.Button,android.widget.Button); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { boolean canScrollVertically(android.view.View,int); }
-keepclassmembers class android.graphics.PathMeasure { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.PathMeasure { void setPath(android.graphics.Path,boolean); }
-keepclassmembers class android.view.KeyEvent$1 { void <init>(); }
-keepclassmembers class android.graphics.PathMeasure { float getLength(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { void setFitsSystemWindows(android.view.View,boolean); }
-keepclassmembers class okio.AsyncTimeout { void <init>(); }
-keepclassmembers class android.graphics.PathMeasure { boolean getSegment(float,float,android.graphics.Path,boolean); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setDefaultDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class java.net.SocketAddress { void <init>(); }
-keepclassmembers class okio.AsyncTimeout { boolean cancelScheduledTimeout(okio.AsyncTimeout); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class java.net.SocketImpl { void <init>(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class android.media.session.MediaController$TransportControls { void <init>(android.media.session.MediaController,android.media.session.MediaController$1); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setElevation(float); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { java.lang.String[] access$000(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class java.net.SocketImpl { java.net.InetAddress getInetAddress(); }
-keepclassmembers class android.ddm.DdmHandleHeap { void <init>(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.io.MemoryMappedFile access$100(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { int[] access$200(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV14$AppCompatWindowCallbackV14 { void <init>(android.support.v7.app.AppCompatDelegateImplV14,android.view.Window$Callback); }
-keepclassmembers class android.transition.ChangeBounds$3 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class okio.AsyncTimeout { void exit(boolean); }
-keepclassmembers class java.net.SocketImpl { int getLocalPort(); }
-keepclassmembers class okio.AsyncTimeout { java.io.IOException exit(java.io.IOException); }
-keepclassmembers class okio.AsyncTimeout { boolean exit(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { void <init>(java.lang.Object[],int,int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { boolean isEmpty(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setHomeButtonEnabled(boolean); }
-keepclassmembers class okio.AsyncTimeout { void timedOut(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void <init>(); }
-keepclassmembers class com.android.internal.view.menu.ActionMenuItem { void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { boolean hasNext(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getDecimalSeparator(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getCurrencySymbol(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getInternationalCurrencySymbol(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.net.Uri { void <init>(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getDigit(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getInfinity(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getMinusSignString(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getPercentString(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getGroupingSeparator(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentIfNeeded(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getMonetaryDecimalSeparator(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getNaN(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentCaches(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getPatternSeparator(); }
-keepclassmembers class android.net.Uri { int hashCode(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getZeroDigit(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getExponentSeparator(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$SectionsPagerAdapter { int getCount(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setShowHideAnimationEnabled(boolean); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getPerMill(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$SectionsPagerAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void show(); }
-keepclassmembers class android.os.storage.StorageVolume$1 { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$SectionsPagerAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ItemDecoration { void <init>(); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream); }
-keepclassmembers class java.lang.Enum { void <init>(java.lang.String,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$SectionsPagerAdapter { boolean isViewFromObject(android.view.View,java.lang.Object); }
-keepclassmembers class android.os.storage.StorageVolume$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(android.widget.ListView$1); }
-keepclassmembers class java.lang.Enum { java.lang.String name(); }
-keepclassmembers class java.lang.Enum { int ordinal(); }
-keepclassmembers class android.os.storage.StorageVolume$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.Enum { boolean equals(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$9 { void <init>(ar.rulosoft.mimanganu.ReaderFragment,android.widget.CheckBox); }
-keepclassmembers class android.widget.SpellChecker { boolean isSessionActive(); }
-keepclassmembers class android.support.v7.widget.AlertDialogLayout { void onMeasure(int,int); }
-keepclassmembers class java.io.InputStreamReader { void close(); }
-keepclassmembers class android.net.Uri { void writeToParcel(android.os.Parcel,android.net.Uri); }
-keepclassmembers class android.net.Uri { java.lang.String encode(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$calcStorage$2 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$calcStorage,double); }
-keepclassmembers class android.widget.SpellChecker { void onSelectionChanged(); }
-keepclassmembers class android.text.Layout$Directions { void <init>(int[]); }
-keepclassmembers class android.transition.ChangeBounds$6 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.net.Uri { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.net.Uri { android.net.Uri withAppendedPath(android.net.Uri,java.lang.String); }
-keepclassmembers class java.io.InputStreamReader { boolean isOpen(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { boolean hasObservers(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { boolean hasStableIds(); }
-keepclassmembers class java.lang.Enum { java.lang.String toString(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void notifyDataSetChanged(); }
-keepclassmembers class java.io.ObjectStreamClass$3 { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.lang.reflect.Constructor,java.lang.reflect.Constructor); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void notifyItemMoved(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void notifyItemChanged(int); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void notifyItemRangeInserted(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void onAttachedToRecyclerView(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void notifyItemRangeChanged(int,int,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void notifyItemRangeRemoved(int,int); }
-keepclassmembers class android.net.Uri { void <init>(android.net.Uri$1); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void onBindViewHolder(android.support.v7.widget.RecyclerView$ViewHolder,int,java.util.List); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { boolean onFailedToRecycleView(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void onViewDetachedFromWindow(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void onDetachedFromRecyclerView(android.support.v7.widget.RecyclerView); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void onViewAttachedToWindow(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void onViewRecycled(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void registerAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver); }
-keepclassmembers class android.support.design.widget.BaseTransientBottomBar$2 { void <init>(android.support.design.widget.BaseTransientBottomBar); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$Adapter { void unregisterAdapterDataObserver(android.support.v7.widget.RecyclerView$AdapterDataObserver); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { java.lang.String getLabel(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap getIcon(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { java.lang.String getIconFilename(); }
-keepclassmembers class ar.rulosoft.navegadores.Parameter { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap loadTaskDescriptionIcon(java.lang.String); }
-keepclassmembers class ar.rulosoft.navegadores.Parameter { java.lang.String getValue(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { int getPrimaryColor(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$ViewPositionComparator { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void setExclusiveOwnerThread(java.lang.Thread); }
-keepclassmembers class ar.rulosoft.navegadores.Parameter { java.lang.String getKey(); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$19$1 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$19,android.widget.EditText); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { boolean canApplyTheme(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class android.os.StrictMode$4 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl { void setUpdateListener(android.support.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.support.v4.view.ViewPropertyAnimatorUpdateListener); }
-keepclassmembers class android.os.StrictMode$4 { java.lang.Object initialValue(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { java.lang.Thread getExclusiveOwnerThread(); }
-keepclassmembers class ar.rulosoft.custompref.ArrayAdapterColor { void <init>(ar.rulosoft.custompref.ColorListDialogFragment,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void jumpToCurrentState(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getDisabledThemeAttrColor(android.content.Context,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setHotspot(android.graphics.drawable.Drawable,float,float); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { int getThemeAttrColor(android.content.Context,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.SpellChecker { boolean haveWordBoundariesChanged(android.text.Editable,int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v7.widget.ThemeUtils { android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int); }
-keepclassmembers class android.widget.SpellChecker { android.widget.TextView access$200(android.widget.SpellChecker); }
-keepclassmembers class android.content.IntentFilter$1 { void <init>(); }
-keepclassmembers class okhttp3.Dispatcher { void executed(okhttp3.RealCall); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.SpellChecker { boolean access$400(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { android.text.method.WordIterator access$500(android.widget.SpellChecker); }
-keepclassmembers class android.text.method.BaseKeyListener { void <init>(); }
-keepclassmembers class android.widget.SpellChecker { android.text.style.SpellCheckSpan[] access$700(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { int[] access$800(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { int access$600(android.widget.SpellChecker); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.SpellChecker { void access$1000(android.widget.SpellChecker); }
-keepclassmembers class okhttp3.Dispatcher { void finished(okhttp3.RealCall); }
-keepclassmembers class android.database.DefaultDatabaseErrorHandler { void <init>(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$Listener { void onSettings(okhttp3.internal.http2.Http2Connection); }
-keepclassmembers class okhttp3.ResponseBody$1 { void <init>(okhttp3.MediaType,long,okio.BufferedSource); }
-keepclassmembers class com.squareup.duktape.Duktape { void <init>(long); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$1$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$1); }
-keepclassmembers class android.widget.SpellChecker { void access$900(android.widget.SpellChecker,android.text.Editable,int,int); }
-keepclassmembers class okhttp3.ResponseBody$1 { long contentLength(); }
-keepclassmembers class okhttp3.ResponseBody$1 { okhttp3.MediaType contentType(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$1$1 { void run(); }
-keepclassmembers class org.acra.util.NonBlockingBufferedReader$1 { void <init>(org.acra.util.NonBlockingBufferedReader,java.io.BufferedReader); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$Listener { void <init>(); }
-keepclassmembers class org.acra.util.NonBlockingBufferedReader$1 { void run(); }
-keepclassmembers class okhttp3.ResponseBody$1 { okio.BufferedSource source(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$PopupPresenterCallback { void <init>(android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteSelection(android.view.View,android.text.Editable); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setSubMenuArrowVisible(boolean); }
-keepclassmembers class android.media.session.MediaSession$Token { void <init>(android.media.session.ISessionController); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { android.support.v7.view.menu.MenuItemImpl getItemData(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { android.view.LayoutInflater getInflater(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void initialize(android.support.v7.view.menu.MenuItemImpl,int); }
-keepclassmembers class okhttp3.FormBody { void <init>(java.util.List,java.util.List); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class okhttp3.FormBody { long contentLength(); }
-keepclassmembers class okhttp3.FormBody { okhttp3.MediaType contentType(); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { boolean prefersCondensedTitle(); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setCheckable(boolean); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { void <init>(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter); }
-keepclassmembers class okhttp3.FormBody { void writeTo(okio.BufferedSink); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setForceShowIcon(boolean); }
-keepclassmembers class org.acra.sender.HttpSender$Method { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter,android.widget.Filter$1); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$LoadLastTask { void onPreExecute(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.GestureDetector$GestureHandler { void <init>(android.view.GestureDetector,android.os.Handler); }
-keepclassmembers class android.graphics.SweepGradient { void <init>(float,float,int,int); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.GestureDetector$GestureHandler { void <init>(android.view.GestureDetector); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.view.menu.ListMenuItemView { void setShortcut(boolean,char); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet$Node,int); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.graphics.drawable.RotateDrawable,android.content.res.Resources); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder setLabel(java.lang.CharSequence); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder addExtras(android.os.Bundle); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { void <init>(); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder setAllowFreeFormInput(boolean); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { boolean canConstantState(); }
-keepclassmembers class java.util.Dictionary { void <init>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { boolean canApplyTheme(); }
-keepclassmembers class android.animation.AnimatorSet { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityJB { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class org.acra.prefs.PrefUtils { void save(android.content.SharedPreferences$Editor); }
-keepclassmembers class android.support.v4.app.BaseFragmentActivityJB { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet { long getStartDelay(); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { long contentLength(okhttp3.Response); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void calculateItemBorders(int); }
-keepclassmembers class java.lang.IllegalAccessException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void clearPreLayoutSpanMappingCache(); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { long stringToLong(java.lang.String); }
-keepclassmembers class android.animation.AnimatorSet { boolean isStarted(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel$1 { void <init>(java.nio.channels.spi.AbstractInterruptibleChannel); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers); }
-keepclassmembers class android.view.GhostView { void setVisibility(int); }
-keepclassmembers class android.widget.TextView$Drawables { void resolveWithLayoutDirection(int); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.widget.TextView$Drawables { void updateDrawablesLayoutDirection(int); }
-keepclassmembers class android.app.BackStackState$1 { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters { ar.rulosoft.mimanganu.componentes.Chapter access$2600(ar.rulosoft.mimanganu.MangaFragment$RemoveChapters); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextUserSpecifiedFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.view.GhostView { void setMatrix(android.graphics.Matrix); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters { android.view.ActionMode access$2700(ar.rulosoft.mimanganu.MangaFragment$RemoveChapters); }
-keepclassmembers class android.view.FocusFinder { void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class android.widget.TextView$Drawables { void applyErrorDrawableIfNeeded(int); }
-keepclassmembers class android.view.GhostView { void copySize(android.view.View,android.view.View); }
-keepclassmembers class ar.rulosoft.custompref.NumPickDialogPref { java.lang.String access$000(ar.rulosoft.custompref.NumPickDialogPref); }
-keepclassmembers class android.view.GhostView { android.view.GhostView addGhost(android.view.View,android.view.ViewGroup); }
-keepclassmembers class ar.rulosoft.custompref.NumPickDialogPref { android.widget.TextView access$200(ar.rulosoft.custompref.NumPickDialogPref); }
-keepclassmembers class ar.rulosoft.custompref.NumPickDialogPref { android.widget.NumberPicker access$100(ar.rulosoft.custompref.NumPickDialogPref); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { boolean checkTag(int); }
-keepclassmembers class okhttp3.internal.http.StatusLine { void <init>(okhttp3.Protocol,int,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters { void onCancelled(); }
-keepclassmembers class android.view.FocusFinder { boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class ar.rulosoft.custompref.NumPickDialogPref { java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int); }
-keepclassmembers class libcore.io.IoBridge { java.lang.Object getSocketOption(java.io.FileDescriptor,int); }
-keepclassmembers class ar.rulosoft.custompref.NumPickDialogPref { void onDialogClosed(boolean); }
-keepclassmembers class java.io.FileNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.app.ActivityTransitionState { void <init>(); }
-keepclassmembers class android.animation.ArgbEvaluator { void <init>(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { void <init>(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink); }
-keepclassmembers class libcore.io.IoBridge { boolean booleanFromInt(int); }
-keepclassmembers class android.view.FocusFinder { boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class libcore.io.IoBridge { void setSocketOption(java.io.FileDescriptor,int,java.lang.Object); }
-keepclassmembers class libcore.io.IoBridge { int booleanToInt(boolean); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { void close(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void endDrag(); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator clone(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { okio.Timeout timeout(); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void doScrollY(int); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator setDuration(long); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$000(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { java.util.HashMap access$300(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$400(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$502(android.animation.AnimatorSet,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$702(android.animation.AnimatorSet,boolean); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$600(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.ValueAnimator access$102(android.animation.AnimatorSet,android.animation.ValueAnimator); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { void <init>(okhttp3.ConnectionSpec); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { void <init>(boolean); }
-keepclassmembers class org.acra.collector.MediaCodecListCollector { boolean shouldCollect(java.util.Set,org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.app.ActivityTransitionState { void clear(); }
-keepclassmembers class android.app.ActivityTransitionState { void restoreExitedViews(); }
-keepclassmembers class java.math.RoundingMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.os.Looper { void quit(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.app.ActivityTransitionState { void onResume(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isOffScreen(android.view.View); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat$1 { void <init>(android.support.v7.preference.PreferenceFragmentCompat); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void recycleVelocityTracker(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat$1 { void handleMessage(android.os.Message); }
-keepclassmembers class java.net.ServerSocket { void <init>(int); }
-keepclassmembers class java.io.ByteArrayOutputStream { void reset(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void close(); }
-keepclassmembers class android.os.Looper { android.os.MessageQueue getQueue(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void scrollToChild(android.view.View); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplJbMr1 { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean scrollToChildRect(android.graphics.Rect,boolean); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class java.security.MessageDigestSpi { void <init>(); }
-keepclassmembers class libcore.io.IoBridge { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.BackStackRecord$Op { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentTransition$4 { void <init>(android.support.v4.util.ArrayMap,java.lang.Object,android.support.v4.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,android.support.v4.app.Fragment,android.support.v4.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect); }
-keepclassmembers class java.net.ServerSocket { void close(); }
-keepclassmembers class android.support.v4.app.FragmentTransition$4 { void run(); }
-keepclassmembers class android.view.FocusFinder { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.net.ServerSocket { void readBackBindState(); }
-keepclassmembers class javax.net.ssl.SSLException { void <init>(java.lang.String); }
-keepclassmembers class java.net.ServerSocket { int getLocalPort(); }
-keepclassmembers class libcore.io.IoBridge { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollRange(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeHorizontalScrollOffset(); }
-keepclassmembers class java.net.ServerSocket { void implAccept(java.net.Socket); }
-keepclassmembers class android.widget.TextView$Marquee$2 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class java.util.Formatter$FormatToken { void <init>(); }
-keepclassmembers class libcore.io.IoBridge { int maybeThrowAfterSendto(boolean,android.system.ErrnoException); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean isDefault(); }
-keepclassmembers class android.widget.TextView$Marquee$2 { void doFrame(long); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean isPrecisionSet(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setWidth(int); }
-keepclassmembers class java.util.Formatter$FormatToken { void setArgIndex(int); }
-keepclassmembers class java.util.Formatter$FormatToken { int getArgIndex(); }
-keepclassmembers class java.util.Formatter$FormatToken { int getWidth(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setPrecision(int); }
-keepclassmembers class java.util.Formatter$FormatToken { int getPrecision(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int computeVerticalScrollOffset(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setConversionType(char); }
-keepclassmembers class java.net.ServerSocket { boolean isClosed(); }
-keepclassmembers class java.util.Formatter$FormatToken { char getConversionType(); }
-keepclassmembers class java.net.ServerSocket { boolean isBound(); }
-keepclassmembers class java.util.Formatter$FormatToken { char getDateSuffix(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setDateSuffix(char); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean requireArgument(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class libcore.io.IoBridge { int postRecvfrom(boolean,java.net.DatagramPacket,boolean,java.net.InetSocketAddress,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.util.MapCollections$ValuesCollection { void <init>(android.util.MapCollections); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int following(int); }
-keepclassmembers class android.support.v4.app.FragmentManagerState { void <init>(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setText(java.lang.String,java.text.CharacterIterator); }
-keepclassmembers class android.support.v4.app.FragmentManagerState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { java.text.CharacterIterator getText(); }
-keepclassmembers class android.util.MapCollections$ValuesCollection { boolean contains(java.lang.Object); }
-keepclassmembers class javax.net.ssl.SSLPeerUnverifiedException { void <init>(java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean isBoundary(int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean hasText(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int preceding(int); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow2(java.lang.Throwable); }
-keepclassmembers class libcore.io.IoBridge { java.io.FileDescriptor socket(boolean); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow(java.lang.Throwable); }
-keepclassmembers class android.util.MapCollections$ValuesCollection { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.Formatter$FormatToken { void <init>(java.util.Formatter$1); }
-keepclassmembers class org.acra.ReportField$12 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { int getNestedScrollAxes(); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void onAnchorReady(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State,android.support.v7.widget.LinearLayoutManager$AnchorInfo,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean isNestedScrollingEnabled(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean hasNestedScrollingParent(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[]); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ActionMenuPresenterCallback { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class android.support.v7.internal.widget.PreferenceImageView { int getMaxHeight(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { byte[] access$300(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { byte[] getEncoded(); }
-keepclassmembers class android.support.v7.internal.widget.PreferenceImageView { int getMaxWidth(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[],org.apache.harmony.security.x509.Certificate$1); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onAttachedToWindow(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { org.apache.harmony.security.x509.AlgorithmIdentifier access$200(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class java.net.PlainSocketImpl { boolean usingSocks(); }
-keepclassmembers class android.support.v7.internal.widget.PreferenceImageView { void onMeasure(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { org.apache.harmony.security.x509.TBSCertificate access$100(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class java.net.PlainSocketImpl { void bind(java.net.InetAddress,int); }
-keepclassmembers class java.net.PlainSocketImpl { int available(); }
-keepclassmembers class android.animation.LayoutTransition { boolean isChangingLayout(); }
-keepclassmembers class android.animation.LayoutTransition { boolean isRunning(); }
-keepclassmembers class java.net.PlainSocketImpl { void close(); }
-keepclassmembers class okhttp3.internal.http2.Header { void <init>(okio.ByteString,java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Header { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl { void <init>(); }
-keepclassmembers class java.net.PlainSocketImpl { java.lang.Object getOption(int); }
-keepclassmembers class java.net.PlainSocketImpl { void connect(java.net.InetAddress,int,int); }
-keepclassmembers class java.net.PlainSocketImpl { void setOption(int,java.lang.Object); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.app.Notification build(); }
-keepclassmembers class java.net.PlainSocketImpl { void listen(int); }
-keepclassmembers class java.net.PlainSocketImpl { void create(boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.widget.RemoteViews getBigContentView(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { int getColor(); }
-keepclassmembers class android.support.v4.view.ViewPager$ItemInfo { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition { boolean hasListeners(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { int getPriority(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.widget.RemoteViews getContentView(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { java.lang.CharSequence resolveText(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.widget.RemoteViews getHeadsUpContentView(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { java.lang.CharSequence resolveTitle(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { long getWhenIfShowing(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class java.net.PlainSocketImpl { int access$000(java.net.PlainSocketImpl,byte[],int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompatKitKat { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.animation.LayoutTransition { void showChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent); }
-keepclassmembers class java.net.PlainSocketImpl { void access$100(java.net.PlainSocketImpl,byte[],int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompatKitKat { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Big { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent); }
-keepclassmembers class android.animation.LayoutTransition { void hideChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.animation.LayoutTransition { void removeTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Big { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class com.android.internal.app.AlertController$1 { void <init>(com.android.internal.app.AlertController); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { int getViewLayoutPosition(); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$000(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$200(android.animation.LayoutTransition); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.animation.LayoutTransition { long access$300(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$100(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$500(android.animation.LayoutTransition); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.animation.LayoutTransition { long access$400(android.animation.LayoutTransition); }
-keepclassmembers class java.lang.Thread$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.animation.LayoutTransition { long access$700(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$800(android.animation.LayoutTransition); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutParams { boolean isItemRemoved(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { long access$1100(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$1200(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { boolean access$1600(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.ArrayList access$1700(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$900(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1900(android.animation.LayoutTransition); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1300(android.animation.LayoutTransition); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void <init>(android.database.sqlite.SQLiteConnection$1); }
-keepclassmembers class android.support.v7.widget.ActionBarOverlayLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1800(android.animation.LayoutTransition); }
-keepclassmembers class okio.Okio$1 { void <init>(okio.Timeout,java.io.OutputStream); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setOngoing(boolean); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1500(android.animation.LayoutTransition); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setPriority(int); }
-keepclassmembers class okio.Okio$1 { void close(); }
-keepclassmembers class java.lang.ThreadLocal { void set(java.lang.Object); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object initialValue(); }
-keepclassmembers class okio.Okio$1 { void flush(); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getPublicId(); }
-keepclassmembers class java.lang.ThreadLocal { int access$200(java.lang.ThreadLocal); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$Values values(java.lang.Thread); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void onItemsChanged(android.support.v7.widget.RecyclerView); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ref.Reference access$300(java.lang.ThreadLocal); }
-keepclassmembers class org.xml.sax.InputSource { void <init>(java.io.Reader); }
-keepclassmembers class org.xml.sax.InputSource { java.io.InputStream getByteStream(); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getEncoding(); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getSystemId(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setSmallIcon(int); }
-keepclassmembers class org.xml.sax.InputSource { void setCharacterStream(java.io.Reader); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23$SharedElementCallback23 { void <init>(); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void onLayoutChildren(android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri); }
-keepclassmembers class org.xml.sax.InputSource { java.io.Reader getCharacterStream(); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { void onLayoutCompleted(android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { int scrollVerticallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$6 { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { int scrollHorizontallyBy(int,android.support.v7.widget.RecyclerView$Recycler,android.support.v7.widget.RecyclerView$State); }
-keepclassmembers class android.media.session.MediaSession$Token$1 { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$6 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.widget.ScrollView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$6 { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$6 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$6 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.widget.ScrollView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ar.rulosoft.mimanganu.services.BootAndUpdateReceiver { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void drawableStateChanged(); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager { boolean supportsPredictiveItemAnimations(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$6 { void <init>(okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$22 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$6 { void execute(); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.support.design.internal.ForegroundLinearLayout { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setWhen(long); }
-keepclassmembers class okhttp3.Cookie { void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void requestLayout(); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int,float); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int,byte[]); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { void stopNestedScroll(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void clear(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { byte[] getEncoded(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { java.security.PublicKey generateKeyForAlgorithm(java.security.spec.KeySpec,java.lang.String); }
-keepclassmembers class android.support.v4.widget.NestedScrollView { boolean startNestedScroll(int); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { int getMemoryUsage(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void <init>(android.widget.RemoteViews); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List getCertificates(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int,byte[],org.apache.harmony.security.x509.SubjectPublicKeyInfo$1); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <init>(int,java.util.List,org.apache.harmony.security.pkcs7.ContentInfo,java.util.List,java.util.List,java.util.List); }
-keepclassmembers class android.support.v4.app.LoaderManager { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void <init>(android.widget.RemoteViews,android.widget.RemoteViews$1); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment$2 { void <init>(android.support.v4.app.Fragment); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { int access$300(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { byte[] access$200(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$100(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List getSignerInfos(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$100(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class android.support.v4.app.Fragment$2 { boolean onHasView(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { org.apache.harmony.security.pkcs7.ContentInfo access$200(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class okhttp3.Cookie { okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$300(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { int access$000(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$400(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$500(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void <init>(int[]); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int[] getOid(); }
-keepclassmembers class android.support.design.widget.SnackbarManager$1 { void <init>(android.support.design.widget.SnackbarManager); }
-keepclassmembers class java.util.jar.ManifestReader { boolean readHeader(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <init>(int,java.util.List,org.apache.harmony.security.pkcs7.ContentInfo,java.util.List,java.util.List,java.util.List,org.apache.harmony.security.pkcs7.SignedData$1); }
-keepclassmembers class java.util.jar.ManifestReader { int getEndOfMainSection(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.Object getGroup(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String getName(); }
-keepclassmembers class android.support.v4.app.ActivityCompatHoneycomb { void invalidateOptionsMenu(android.app.Activity); }
-keepclassmembers class android.text.style.LeadingMarginSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout { void <init>(); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout { int access$202(android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout,int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$22$1 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$22); }
-keepclassmembers class okhttp3.Cookie { java.lang.String domain(); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout { int access$302(android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout,int); }
-keepclassmembers class android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout { java.lang.String access$102(android.support.v7.preference.PreferenceGroupAdapter$PreferenceLayout,java.lang.String); }
-keepclassmembers class java.io.UTFDataFormatException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int hashCode(); }
-keepclassmembers class java.io.PrintStream { void close(); }
-keepclassmembers class java.io.PrintStream { void flush(); }
-keepclassmembers class java.io.PrintStream { void newline(); }
-keepclassmembers class okhttp3.Cookie { long expiresAt(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators { void setManga_title(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <init>(int,int,boolean,int); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { void <init>(java.util.TreeMap$EntrySet,java.util.TreeMap$Node); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { java.util.Map$Entry next(); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { java.lang.Object next(); }
-keepclassmembers class okhttp3.Cookie { boolean matches(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.Cookie { java.lang.String name(); }
-keepclassmembers class okhttp3.Cookie { boolean persistent(); }
-keepclassmembers class okhttp3.Cookie { java.lang.String toString(); }
-keepclassmembers class okhttp3.Cookie { boolean secure(); }
-keepclassmembers class java.lang.ThreadGroup { int getMaxPriority(); }
-keepclassmembers class okhttp3.Cookie { java.lang.String path(); }
-keepclassmembers class okhttp3.Cookie { boolean hostOnly(); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.Object); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String getName(); }
-keepclassmembers class java.io.PrintStream { void setError(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void access$001(android.support.design.widget.FloatingActionButton,android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.PrintStream { void write(byte[],int,int); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.String); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl { void <init>(); }
-keepclassmembers class java.lang.ThreadGroup { boolean isDaemon(); }
-keepclassmembers class okhttp3.Cookie { java.lang.String value(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { android.support.design.widget.FloatingActionButtonImpl getImpl(); }
-keepclassmembers class java.lang.ThreadGroup { boolean isDestroyed(); }
-keepclassmembers class android.text.InputFilter$LengthFilter { void <init>(int); }
-keepclassmembers class java.io.PrintStream { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { int resolveAdjustedSize(int,int); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { int getSizeDimension(int); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void drawableStateChanged(); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(android.os.StrictMode$1); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$3 { void <init>(it.sephiroth.android.library.imagezoom.ImageViewTouchBase,double,long,double,double); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { int getSizeDimension(); }
-keepclassmembers class java.lang.ThreadGroup { void setDaemon(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$AddAllMangaInDirectoryTask { void onPostExecute(java.lang.Void); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void hide(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener,boolean); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void hide(android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener); }
-keepclassmembers class okio.RealBufferedSource { void close(); }
-keepclassmembers class okio.RealBufferedSource { okio.Buffer buffer(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.text.util.LinkSpec { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { void chapterInit(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void onDetachedFromWindow(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void onAttachedToWindow(); }
-keepclassmembers class okio.RealBufferedSource { long indexOf(byte); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 { void <init>(android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,android.support.v4.view.AccessibilityDelegateCompat); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { boolean hasMoreElements(); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { void <init>(java.util.Hashtable); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { java.util.ArrayList getMangas(); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { java.lang.Object nextElement(); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.CompoundButton$SavedState$1 { void <init>(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void setBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class okio.RealBufferedSource { boolean rangeEquals(long,okio.ByteString); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { void <init>(java.util.Map); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskWriteViolation { void <init>(int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { int hashCode(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean isEmpty(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { int size(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton { void setVisibility(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter$ViewHolder { android.widget.TextView access$100(ar.rulosoft.mimanganu.adapters.ChapterAdapter$ViewHolder); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter$ViewHolder { android.widget.TextView access$200(ar.rulosoft.mimanganu.adapters.ChapterAdapter$ViewHolder); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter$ViewHolder { android.widget.ImageView access$300(ar.rulosoft.mimanganu.adapters.ChapterAdapter$ViewHolder); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter$ViewHolder { android.widget.TextView access$000(ar.rulosoft.mimanganu.adapters.ChapterAdapter$ViewHolder); }
-keepclassmembers class java.io.ObjectStreamClass$2 { int compare(java.lang.reflect.Field,java.lang.reflect.Field); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.ObjectStreamClass$2 { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { boolean hasList(); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int,java.lang.Throwable); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ViewComic { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.view.ViewStub { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewStub { void onMeasure(int,int); }
-keepclassmembers class okio.RealBufferedSource { byte readByte(); }
-keepclassmembers class org.acra.ReportField$11 { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.ViewStub { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class okio.RealBufferedSource { byte[] readByteArray(long); }
-keepclassmembers class okio.RealBufferedSource { int readInt(); }
-keepclassmembers class okio.RealBufferedSource { short readShort(); }
-keepclassmembers class okio.RealBufferedSource { okio.ByteString readByteString(long); }
-keepclassmembers class okio.RealBufferedSource { int readIntLe(); }
-keepclassmembers class okio.RealBufferedSource { java.lang.String readUtf8LineStrict(); }
-keepclassmembers class okio.RealBufferedSource { short readShortLe(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { boolean hasList(); }
-keepclassmembers class android.widget.Spinner { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.Spinner { void onMeasure(int,int); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$ChunkedSource { void <init>(okhttp3.internal.http1.Http1Codec,okhttp3.HttpUrl); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader$BitmapDisplay { void <init>(com.fedorvlasov.lazylist.ImageLoader,android.graphics.Bitmap,ar.rulosoft.mimanganu.componentes.Imaginable,java.lang.String); }
-keepclassmembers class android.widget.Spinner { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.Spinner { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void <init>(android.graphics.drawable.AnimatedVectorDrawable,boolean,boolean); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$2 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class java.lang.Enum$1 { void <init>(int); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$ChunkedSource { void close(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void stop(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.MangaHere { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class java.util.concurrent.CountDownLatch$Sync { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void start(); }
-keepclassmembers class java.util.concurrent.CountDownLatch$Sync { int tryAcquireShared(int); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger,byte[]); }
-keepclassmembers class android.widget.Spinner { android.view.View makeView(int,boolean); }
-keepclassmembers class java.io.ObjectStreamClass$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { boolean canReverse(); }
-keepclassmembers class android.support.v4.app.Fragment { void <init>(); }
-keepclassmembers class okio.RealBufferedSource { okio.Timeout timeout(); }
-keepclassmembers class android.support.v4.app.Fragment { void access$800(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.Fragment { void callStartTransitionListener(); }
-keepclassmembers class java.io.ObjectStreamClass$1 { int compare(java.lang.Class,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger,byte[],org.apache.harmony.security.x509.PolicyConstraints$1); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi24 { void <init>(); }
-keepclassmembers class android.widget.Spinner { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.widget.Spinner { boolean performClick(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$3 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$3 { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$3 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class android.support.v4.app.NotificationCompatKitKat { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class android.support.v4.view.animation.FastOutLinearInInterpolator { float getInterpolation(float); }
-keepclassmembers class android.support.v4.view.animation.FastOutLinearInInterpolator { void <init>(); }
-keepclassmembers class rapid.decoder.ResourceBitmapLoader$Identifier { void <init>(android.content.res.Resources,int); }
-keepclassmembers class rapid.decoder.ResourceBitmapLoader$Identifier { void <init>(android.content.res.Resources,int,rapid.decoder.ResourceBitmapLoader$1); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class android.support.v4.util.MapCollections$EntrySet { void <init>(android.support.v4.util.MapCollections); }
-keepclassmembers class android.support.v4.util.MapCollections$EntrySet { boolean containsAll(java.util.Collection); }
-keepclassmembers class android.support.v4.util.MapCollections$EntrySet { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { android.content.res.ColorStateList getBackgroundTintList(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { java.lang.String getTransitionName(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { float getZ(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { boolean isNestedScrollingEnabled(android.view.View); }
-keepclassmembers class android.support.v4.util.MapCollections$EntrySet { int size(); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setElevation(android.view.View,float); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void requestApplyInsets(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setBackgroundTintList(android.view.View,android.content.res.ColorStateList); }
-keepclassmembers class android.view.ScaleGestureDetector$1 { void <init>(android.view.ScaleGestureDetector); }
-keepclassmembers class libcore.io.Posix { void <init>(); }
-keepclassmembers class android.view.ScaleGestureDetector$1 { boolean onDoubleTap(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.app.Fragment { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompat$LollipopViewCompatImpl { void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.Fragment findFragmentByWho(java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment { boolean getAllowReturnTransitionOverlap(); }
-keepclassmembers class android.transition.ChangeBounds$4 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment { android.os.Bundle getArguments(); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.FragmentManager getChildFragmentManager(); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.View getAnimatingAway(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getEnterTransition(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean getAllowEnterTransitionOverlap(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getExitTransition(); }
-keepclassmembers class android.support.v4.app.Fragment { android.content.Context getContext(); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.SharedElementCallback getEnterTransitionCallback(); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.SharedElementCallback getExitTransitionCallback(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.FragmentManager getFragmentManager(); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.LayoutInflater getLayoutInflater(android.os.Bundle); }
-keepclassmembers class libcore.io.Posix { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.support.v4.app.Fragment { int getNextTransition(); }
-keepclassmembers class android.support.v4.app.Fragment { int getNextTransitionStyle(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getReenterTransition(); }
-keepclassmembers class android.support.v4.app.Fragment { int getNextAnim(); }
-keepclassmembers class rapid.decoder.BitmapDecoder$ScaleBy { void <init>(); }
-keepclassmembers class libcore.io.Posix { int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getReturnTransition(); }
-keepclassmembers class android.view.InputEvent { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getSharedElementEnterTransition(); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.Object getSharedElementReturnTransition(); }
-keepclassmembers class android.view.InputEvent { int getSequenceNumber(); }
-keepclassmembers class android.support.v4.app.Fragment { int getStateAfterAnimating(); }
-keepclassmembers class org.acra.builder.ReportBuilder { org.acra.builder.ReportBuilder endApplication(); }
-keepclassmembers class android.view.animation.Animation$2 { void <init>(android.view.animation.Animation); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.String getString(int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplBase { void <init>(); }
-keepclassmembers class org.acra.builder.ReportBuilder { java.util.Map getCustomData(); }
-keepclassmembers class android.view.InputEvent { void prepareForReuse(); }
-keepclassmembers class libcore.io.Posix { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class org.acra.builder.ReportBuilder { java.lang.String getMessage(); }
-keepclassmembers class org.acra.builder.ReportBuilder { java.lang.Thread getUncaughtExceptionThread(); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.Fragment getTargetFragment(); }
-keepclassmembers class org.acra.builder.ReportBuilder { org.acra.builder.ReportBuilder exception(java.lang.Throwable); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Integer); }
-keepclassmembers class org.acra.builder.ReportBuilder { java.lang.Throwable getException(); }
-keepclassmembers class org.acra.builder.ReportBuilder { boolean isSendSilently(); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.View getView(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent$1 { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { int hashCode(); }
-keepclassmembers class org.acra.builder.ReportBuilder { boolean isEndApplication(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isAdded(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isHidden(); }
-keepclassmembers class android.support.v4.app.Fragment { void initState(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void <init>(android.view.View,android.view.animation.Animation); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isInBackStack(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isHideReplaced(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void <init>(android.view.View,android.view.animation.Animation,android.view.animation.Animation$AnimationListener); }
-keepclassmembers class org.acra.builder.ReportBuilder { org.acra.builder.ReportBuilder uncaughtExceptionThread(java.lang.Thread); }
-keepclassmembers class android.support.v4.app.Fragment { boolean isPostponed(); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int); }
-keepclassmembers class android.support.v4.app.Fragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onAttach(android.app.Activity); }
-keepclassmembers class libcore.io.Posix { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.support.v4.app.Fragment { void onAttach(android.content.Context); }
-keepclassmembers class android.support.v4.app.Fragment { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.support.v4.app.Fragment { void onAttachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class android.support.v4.app.Fragment { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.app.Dialog { void setOwnerActivity(android.app.Activity); }
-keepclassmembers class android.widget.AbsListView$SavedState$1 { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void <init>(java.lang.String); }
-keepclassmembers class android.app.Dialog { boolean isShowing(); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.app.Dialog { android.content.Context getContext(); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.animation.Animation onCreateAnimation(int,boolean,int); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { java.lang.String access$000(org.apache.harmony.security.x509.PolicyInformation); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroy(); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroyOptionsMenu(); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroyView(); }
-keepclassmembers class android.app.Dialog { void hide(); }
-keepclassmembers class java.lang.ThreadLocal$Values { java.lang.Object[] access$000(java.lang.ThreadLocal$Values); }
-keepclassmembers class android.support.v4.app.Fragment { void onHiddenChanged(boolean); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { void <init>(java.util.Enumeration,java.util.Enumeration); }
-keepclassmembers class java.lang.ThreadLocal$Values { int access$100(java.lang.ThreadLocal$Values); }
-keepclassmembers class java.text.SimpleDateFormat { void appendDayOfWeek(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class android.app.Dialog { void dismiss(); }
-keepclassmembers class android.support.v4.app.Fragment { void onDetach(); }
-keepclassmembers class android.support.v4.app.Fragment { void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.app.Dialog { void sendDismissMessage(); }
-keepclassmembers class android.support.v4.app.Fragment { void onLowMemory(); }
-keepclassmembers class android.app.Dialog { void sendShowMessage(); }
-keepclassmembers class android.support.v4.app.Fragment { void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class okhttp3.CacheControl$Builder { void <init>(); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { java.lang.Object nextElement(); }
-keepclassmembers class android.support.v4.app.Fragment { void onMultiWindowModeChanged(boolean); }
-keepclassmembers class android.app.Dialog { void dispatchOnCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void <init>(android.widget.AdapterView); }
-keepclassmembers class android.app.Dialog { void onCreate(android.os.Bundle); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { boolean hasMoreElements(); }
-keepclassmembers class android.support.v4.app.Fragment { void onPause(); }
-keepclassmembers class android.support.v4.app.Fragment { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.support.v4.app.Fragment { void onPictureInPictureModeChanged(boolean); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class android.support.v4.app.Fragment { void onRequestPermissionsResult(int,java.lang.String[],int[]); }
-keepclassmembers class android.app.Dialog { void onStop(); }
-keepclassmembers class android.support.v4.app.Fragment { void onResume(); }
-keepclassmembers class android.support.v4.app.Fragment { void onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.support.v4.app.Fragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onStart(); }
-keepclassmembers class android.app.Dialog { void onStart(); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void onInvalidated(); }
-keepclassmembers class android.app.Dialog { android.view.View findViewById(int); }
-keepclassmembers class android.app.Dialog { android.view.Window getWindow(); }
-keepclassmembers class android.support.v4.app.Fragment { void onStop(); }
-keepclassmembers class android.support.v4.app.Fragment { void onViewCreated(android.view.View,android.os.Bundle); }
-keepclassmembers class okhttp3.CertificatePinner { void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner); }
-keepclassmembers class android.database.sqlite.SQLiteDirectCursorDriver { void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class android.support.v4.app.Fragment { void onViewStateRestored(android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.CompoundGroup$1 { void <init>(ar.rulosoft.mimanganu.componentes.CompoundGroup); }
-keepclassmembers class okhttp3.CertificatePinner { okio.ByteString sha1(java.security.cert.X509Certificate); }
-keepclassmembers class okhttp3.CertificatePinner { okio.ByteString sha256(java.security.cert.X509Certificate); }
-keepclassmembers class okhttp3.internal.Internal { void <init>(); }
-keepclassmembers class java.text.DateFormat { void <init>(); }
-keepclassmembers class android.app.Dialog { void setContentView(int); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl$Builder noCache(); }
-keepclassmembers class android.database.sqlite.SQLiteDirectCursorDriver { void cursorClosed(); }
-keepclassmembers class android.app.Dialog { void setContentView(android.view.View); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl$Builder onlyIfCached(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(org.apache.harmony.security.utils.ObjectIdentifier,org.apache.harmony.security.x501.AttributeValue); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.text.SimpleDateFormat { java.util.Date error(java.text.ParsePosition,int,java.util.TimeZone); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Italic { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Italic { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getType(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.x501.AttributeValue getValue(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void <init>(); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void clearSavedState(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page,ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$Listener$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$Listener$1 { void onStream(okhttp3.internal.http2.Http2Stream); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { boolean canApplyTheme(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(int[],org.apache.harmony.security.x501.AttributeValue,org.apache.harmony.security.x501.AttributeTypeAndValue$1); }
-keepclassmembers class java.text.SimpleDateFormat { int parseDayOfWeek(java.lang.String,int,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { int getChangingConfigurations(); }
-keepclassmembers class java.text.DateFormat { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class java.text.DateFormat { void setLenient(boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier access$100(org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page { void <init>(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader,android.content.Context); }
-keepclassmembers class java.text.SimpleDateFormat { int parseMonth(java.lang.String,int,int,int,boolean); }
-keepclassmembers class android.support.v4.app.Fragment { void performReallyStop(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page { java.lang.String access$500(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page); }
-keepclassmembers class android.support.v7.widget.ViewBoundsCheck { boolean isViewWithinBoundFlags(android.view.View,int); }
-keepclassmembers class java.util.logging.LogManager { void checkAccess(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page { boolean canScrollV(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page { boolean canScroll(int); }
-keepclassmembers class java.util.logging.LogManager { boolean addLogger(java.util.logging.Logger); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompat { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class java.util.TreeMap$Bound$3 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.app.Fragment { void registerForContextMenu(android.view.View); }
-keepclassmembers class android.app.Dialog { boolean requestWindowFeature(int); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner { void <init>(java.lang.Object,java.lang.reflect.Method); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page { void setImage(java.lang.String); }
-keepclassmembers class android.app.Dialog { void setCancelable(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.app.Fragment { void setAnimatingAway(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.x501.AttributeValue access$200(org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class java.util.logging.LogManager { java.util.Enumeration getLoggerNames(); }
-keepclassmembers class android.app.Dialog { void setCanceledOnTouchOutside(boolean); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner { int hashCode(); }
-keepclassmembers class java.util.logging.LogManager { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class java.util.Vector { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { void setHasOptionsMenu(boolean); }
-keepclassmembers class android.app.Dialog { void setOnShowListener(android.content.DialogInterface$OnShowListener); }
-keepclassmembers class android.app.Dialog { void setOnKeyListener(android.content.DialogInterface$OnKeyListener); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$11$1 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$11,android.widget.EditText); }
-keepclassmembers class android.support.v4.app.Fragment { void setNextTransition(int,int); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int effectivePort(); }
-keepclassmembers class android.support.v4.app.Fragment { void setRetainInstance(boolean); }
-keepclassmembers class android.support.v4.app.Fragment { void setHideReplaced(boolean); }
-keepclassmembers class android.support.v4.app.Fragment { void setNextAnim(int); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(java.io.InputStream); }
-keepclassmembers class android.support.v4.app.Fragment { void setStateAfterAnimating(int); }
-keepclassmembers class android.support.v4.app.Fragment { void setTargetFragment(android.support.v4.app.Fragment,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { void <init>(); }
-keepclassmembers class org.acra.file.CrashReportFileNameParser { boolean isSilent(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { boolean isAutoMirrored(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { void setAutoMirrored(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompatHoneycomb { float getXVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v4.view.VelocityTrackerCompatHoneycomb { float getYVelocity(android.view.VelocityTracker,int); }
-keepclassmembers class android.support.v4.content.IntentCompatHoneycomb { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class org.acra.ReportField$9 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.logging.LogManager { void setParent(java.util.logging.Logger,java.util.logging.Logger); }
-keepclassmembers class android.os.Process { void killProcess(int); }
-keepclassmembers class android.view.View$10 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObservable { void notifyItemRangeChanged(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObservable { void <init>(); }
-keepclassmembers class android.util.Log$TerribleFailure { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.support.v7.widget.RecyclerView$AdapterDataObservable { boolean hasObservers(); }
-keepclassmembers class android.app.FragmentManagerState { void <init>(); }
-keepclassmembers class okhttp3.MultipartBody { okhttp3.MediaType contentType(); }
-keepclassmembers class android.app.FragmentManagerState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.RemoteViews$TextViewSizeAction { void <init>(android.widget.RemoteViews,int,int,float); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config parse(java.io.InputStream); }
-keepclassmembers class okhttp3.MultipartBody { void writeTo(okio.BufferedSink); }
-keepclassmembers class android.widget.RemoteViews$TextViewSizeAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsRead { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class okio.Util { void sneakyRethrow(java.lang.Throwable); }
-keepclassmembers class android.widget.RemoteViews$1 { void <init>(); }
-keepclassmembers class okio.Util { void sneakyThrow2(java.lang.Throwable); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SetChaptersPageCountAsRead { void <init>(ar.rulosoft.mimanganu.MangaFragment,ar.rulosoft.mimanganu.MangaFragment$1); }
-keepclassmembers class org.acra.file.CrashReportFileNameParser { void <init>(); }
-keepclassmembers class java.lang.ProcessManager$ProcessReferenceQueue { void <init>(); }
-keepclassmembers class android.animation.IntKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.animation.IntKeyframeSet { void invalidateCache(); }
-keepclassmembers class org.acra.prefs.SharedPreferencesFactory { void <init>(android.content.Context,org.acra.config.ACRAConfiguration); }
-keepclassmembers class okhttp3.internal.http.RequestLine { boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader$ContinuationSource { void <init>(okio.BufferedSource); }
-keepclassmembers class android.animation.IntKeyframeSet { void <init>(android.animation.Keyframe$IntKeyframe[]); }
-keepclassmembers class okhttp3.internal.http2.PushObserver$1 { void <init>(); }
-keepclassmembers class org.acra.ReportField { void <init>(java.lang.String,int); }
-keepclassmembers class org.acra.ReportField { void <init>(java.lang.String,int,org.acra.ReportField$1); }
-keepclassmembers class okhttp3.internal.http2.PushObserver$1 { boolean onHeaders(int,java.util.List,boolean); }
-keepclassmembers class okhttp3.internal.http2.PushObserver$1 { boolean onRequest(int,java.util.List); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader$ContinuationSource { okio.Timeout timeout(); }
-keepclassmembers class okhttp3.internal.http2.PushObserver$1 { void onReset(int,okhttp3.internal.http2.ErrorCode); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(float); }
-keepclassmembers class android.app.FragmentManagerImpl$2 { void run(); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void <init>(android.content.res.AssetManager,long); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { long getNativeAsset(); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.app.FragmentManagerImpl$2 { void <init>(android.app.FragmentManagerImpl); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$2 { java.lang.Object newInstance(); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$2 { void onReset(android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void <init>(android.content.res.AssetManager,long,android.content.res.AssetManager$1); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$2 { void <init>(); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { void <init>(java.util.Properties); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(); }
-keepclassmembers class rapid.decoder.IntegerMaker$2 { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerState$1 { void <init>(); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void <init>(); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean casHead(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class java.nio.ByteOrder { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.support.v4.text.ICUCompat { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class java.text.RuleBasedBreakIterator { void <init>(libcore.icu.NativeBreakIterator); }
-keepclassmembers class java.text.RuleBasedBreakIterator { int following(int); }
-keepclassmembers class android.text.method.TextKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.widget.Filter { android.os.Handler access$200(android.widget.Filter); }
-keepclassmembers class java.net.HttpRetryException { void <init>(java.lang.String,int); }
-keepclassmembers class java.text.RuleBasedBreakIterator { boolean isBoundary(int); }
-keepclassmembers class android.widget.Filter { java.lang.Object access$300(android.widget.Filter); }
-keepclassmembers class android.widget.Filter { android.os.Handler access$402(android.widget.Filter,android.os.Handler); }
-keepclassmembers class android.widget.Filter { android.os.Handler access$400(android.widget.Filter); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean shouldSpin(java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class okhttp3.internal.http2.Http2Reader$ContinuationSource { void close(); }
-keepclassmembers class java.text.RuleBasedBreakIterator { int preceding(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void clean(java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class android.text.method.TextKeyListener { boolean shouldCap(android.text.method.TextKeyListener$Capitalize,java.lang.CharSequence,int); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.String); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class android.text.method.TextKeyListener { int getInputType(); }
-keepclassmembers class android.app.Notification$BuilderRemoteViews { void <init>(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setDuration(long); }
-keepclassmembers class android.support.v4.view.ViewCompatICS { boolean canScrollHorizontally(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompatICS { boolean canScrollVertically(android.view.View,int); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.KeyListener getKeyListener(android.view.KeyEvent); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.support.design.widget.AnimationUtils$AnimationListenerAdapter { void <init>(); }
-keepclassmembers class android.support.design.widget.AnimationUtils$AnimationListenerAdapter { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class android.content.ContentValues$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompatICS { void setFitsSystemWindows(android.view.View,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.support.design.widget.AnimationUtils$AnimationListenerAdapter { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void add(java.lang.Object); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { boolean hasNext(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void remove(java.lang.Object); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1700(android.view.View$TransformationInfo); }
-keepclassmembers class android.view.AbsSavedState$1 { void <init>(); }
-keepclassmembers class android.text.method.TextKeyListener { int getPrefs(android.content.Context); }
-keepclassmembers class android.app.Notification { java.lang.String access$402(android.app.Notification,java.lang.String); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1600(android.view.View$TransformationInfo); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1702(android.view.View$TransformationInfo,android.graphics.Matrix); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$4 { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState { java.util.ArrayList access$000(android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState); }
-keepclassmembers class org.acra.util.NonBlockingBufferedReader { java.util.concurrent.BlockingQueue access$000(org.acra.util.NonBlockingBufferedReader); }
-keepclassmembers class android.app.Notification { java.lang.String access$502(android.app.Notification,java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState { java.util.ArrayList access$002(android.support.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,java.util.ArrayList); }
-keepclassmembers class org.acra.util.NonBlockingBufferedReader { java.io.IOException access$102(org.acra.util.NonBlockingBufferedReader,java.io.IOException); }
-keepclassmembers class org.acra.util.NonBlockingBufferedReader { void close(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setCustomTitle(android.view.View); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setTitle(int); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setMessage(int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setMessage(java.lang.CharSequence); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setIcon(int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl { void <init>(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$4 { void onDestroyActionMode(android.view.ActionMode); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$JbMr2TextViewCompatImpl { void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$4 { boolean onCreateActionMode(android.view.ActionMode,android.view.Menu); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$4 { void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$11 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setCancelable(boolean); }
-keepclassmembers class okhttp3.Response$Builder { void <init>(okhttp3.Response); }
-keepclassmembers class android.text.NoCopySpan$Concrete { void <init>(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder body(okhttp3.ResponseBody); }
-keepclassmembers class android.text.style.ScaleXSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$1 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],com.android.internal.app.AlertController$RecycleListView); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$4 { boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu); }
-keepclassmembers class android.support.v7.preference.SwitchPreferenceCompat { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v7.preference.SwitchPreferenceCompat { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.preference.SwitchPreferenceCompat { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder code(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$000(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder headers(okhttp3.Headers); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder priorResponse(okhttp3.Response); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$002(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder protocol(okhttp3.Protocol); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder handshake(okhttp3.Handshake); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder message(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$100(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder sentRequestAtMillis(long); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { android.graphics.Paint access$102(android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder request(okhttp3.Request); }
-keepclassmembers class android.support.v7.preference.SwitchPreferenceCompat { void setSwitchTextOff(java.lang.CharSequence); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder receivedResponseAtMillis(long); }
-keepclassmembers class android.support.v7.preference.SwitchPreferenceCompat { void setSwitchTextOn(java.lang.CharSequence); }
-keepclassmembers class org.acra.model.StringElement { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { java.lang.Object getStackTraceForCloseable(java.lang.String); }
-keepclassmembers class org.acra.model.StringElement { java.lang.String toString(); }
-keepclassmembers class android.transition.Transition { java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean); }
-keepclassmembers class org.acra.model.StringElement { java.lang.Object value(); }
-keepclassmembers class libcore.icu.Transliterator { java.lang.String transliterate(java.lang.String); }
-keepclassmembers class android.graphics.FontListParser$Font { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(android.view.View,boolean); }
-keepclassmembers class java.net.UnknownServiceException { void <init>(java.lang.String); }
-keepclassmembers class libcore.icu.Transliterator { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void logCloseableLeak(java.lang.String,java.lang.Object); }
-keepclassmembers class android.transition.Transition { android.transition.Transition removeTarget(android.view.View); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setView(android.view.View); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetNames(); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetIds(); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetTypes(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$7 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl { void <init>(); }
-keepclassmembers class java.net.ProtocolException { void <init>(java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { void addCombining(int,int); }
-keepclassmembers class android.support.v4.text.TextUtilsCompat$TextUtilsCompatJellybeanMr1Impl { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog show(); }
-keepclassmembers class android.widget.Button { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.view.KeyCharacterMap { char getNumber(int); }
-keepclassmembers class java.text.DateFormat$Field { void <init>(java.lang.String,int); }
-keepclassmembers class android.transition.Transition { void clearValues(boolean); }
-keepclassmembers class android.transition.Transition { java.util.List getTargets(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$7 { void run(); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(); }
-keepclassmembers class java.util.zip.InflaterInputStream { int available(); }
-keepclassmembers class android.view.KeyCharacterMap { int getModifierBehavior(); }
-keepclassmembers class java.util.zip.InflaterInputStream { void close(); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void <init>(); }
-keepclassmembers class android.view.KeyCharacterMap { int getKeyboardType(); }
-keepclassmembers class okio.SegmentedByteString { java.lang.String toString(); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { boolean isLaidOut(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { boolean isAttachedToWindow(android.view.View); }
-keepclassmembers class android.support.v7.widget.CardViewJellybeanMr1 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel,android.view.KeyCharacterMap$1); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { void setAccessibilityLiveRegion(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$4 { void <init>(android.support.v4.widget.SwipeRefreshLayout,int,int); }
-keepclassmembers class android.content.ClipData$1 { void <init>(); }
-keepclassmembers class android.support.v4.view.ViewCompat$KitKatViewCompatImpl { void setImportantForAccessibility(android.view.View,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { void onStopNestedScroll(android.view.ViewParent,android.view.View); }
-keepclassmembers class android.support.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl { boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl { void <init>(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { void <init>(android.text.Spanned,char[],char[]); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$Api23CompoundButtonImpl { android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton); }
-keepclassmembers class okhttp3.internal.http.CallServerInterceptor { void <init>(boolean); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.support.design.widget.BaseTransientBottomBar$3 { void <init>(android.support.design.widget.BaseTransientBottomBar); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.app.ProgressDialog$1 { void <init>(android.app.ProgressDialog); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class org.acra.util.ApplicationStartupProcessor { void <init>(android.content.Context,org.acra.config.ACRAConfiguration); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { int getRootAlpha(); }
-keepclassmembers class org.acra.collector.TimeCollector { boolean shouldCollect(java.util.Set,org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPathRenderer { void setRootAlpha(int); }
-keepclassmembers class android.os.ResultReceiver$1 { void <init>(); }
-keepclassmembers class org.acra.ErrorReporter$1 { void <init>(org.acra.ErrorReporter); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <init>(java.lang.String,org.apache.harmony.security.x509.GeneralName,byte[]); }
-keepclassmembers class java.util.Formatter$1 { void <init>(); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.text.style.AlignmentSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.Formatter$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.graphics.PorterDuffXfermode { void <init>(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.util.LongSparseArray { void <init>(int); }
-keepclassmembers class org.acra.ErrorReporter$1 { void initializeExceptionHandler(org.acra.ErrorReporter); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView { void <init>(android.support.v7.app.AppCompatDelegateImplV9,android.content.Context); }
-keepclassmembers class android.util.LongSparseArray { void <init>(); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <init>(java.lang.String,org.apache.harmony.security.x509.GeneralName,byte[],org.apache.harmony.security.x509.AccessDescription$1); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long,java.lang.Object); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { org.apache.harmony.security.x509.GeneralName access$200(org.apache.harmony.security.x509.AccessDescription); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(android.support.v7.widget.ActionMenuView$LayoutParams); }
-keepclassmembers class android.util.LongSparseArray { void delete(long); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { java.lang.String access$100(org.apache.harmony.security.x509.AccessDescription); }
-keepclassmembers class android.graphics.FontListParser$Family { void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String); }
-keepclassmembers class android.util.LongSparseArray { void remove(long); }
-keepclassmembers class android.support.v7.widget.ActionMenuView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.util.LongSparseArray { void removeAt(int); }
-keepclassmembers class android.support.v4.widget.NestedScrollView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.method.DialerKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.DialerKeyListener { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Exception { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void <init>(android.support.v4.app.FragmentActivity); }
-keepclassmembers class android.widget.Editor { void onAttachedToWindow(); }
-keepclassmembers class android.support.graphics.drawable.AnimatedVectorDrawableCompat$1 { void <init>(android.support.graphics.drawable.AnimatedVectorDrawableCompat); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$ListMenuDecorView { void setBackgroundResource(int); }
-keepclassmembers class android.widget.FrameLayout { void setVisibility(int); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.text.method.DialerKeyListener { int getInputType(); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void onAttachFragment(android.support.v4.app.Fragment); }
-keepclassmembers class android.widget.FrameLayout { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.database.sqlite.SQLiteStatement { void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { android.view.View onFindViewById(int); }
-keepclassmembers class android.widget.FrameLayout { void drawableStateChanged(); }
-keepclassmembers class android.util.LongSparseArray { int size(); }
-keepclassmembers class android.widget.FrameLayout { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.util.LongSparseArray { long keyAt(int); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(android.support.v7.app.ActionBar$LayoutParams); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteStatement { int executeUpdateDelete(); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { android.view.LayoutInflater onGetLayoutInflater(); }
-keepclassmembers class android.util.LongSparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat { void setWindowLayoutType(android.widget.PopupWindow,int); }
-keepclassmembers class android.support.v7.app.ActionBar$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { int onGetWindowAnimations(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat { void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class android.database.sqlite.SQLiteStatement { long executeInsert(); }
-keepclassmembers class android.util.LongSparseArray { int indexOfKey(long); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { boolean onHasWindowAnimations(); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { boolean onHasView(); }
-keepclassmembers class android.widget.FrameLayout { android.graphics.drawable.Drawable getForeground(); }
-keepclassmembers class libcore.icu.NativePluralRules { void <init>(long); }
-keepclassmembers class android.database.sqlite.SQLiteStatement { long simpleQueryForLong(); }
-keepclassmembers class android.widget.FrameLayout { void applyForegroundTint(); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { boolean onShouldSaveFragmentState(android.support.v4.app.Fragment); }
-keepclassmembers class android.widget.Editor { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.Editor { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.FragmentActivity$HostCallbacks { void onSupportInvalidateOptionsMenu(); }
-keepclassmembers class android.widget.Editor { void hideError(); }
-keepclassmembers class android.transition.Transition { void setNameOverrides(android.util.ArrayMap); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$2 { void <init>(it.sephiroth.android.library.imagezoom.ImageViewTouchBase,float,long,float,float,float,float); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class); }
-keepclassmembers class android.widget.FrameLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.transition.Transition { void forceVisibility(int,boolean); }
-keepclassmembers class android.widget.Editor { boolean isCursorVisible(); }
-keepclassmembers class android.transition.Transition { void setEpicenterCallback(android.transition.Transition$EpicenterCallback); }
-keepclassmembers class android.widget.FrameLayout { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.Editor { void hideInsertionPointCursorController(); }
-keepclassmembers class android.widget.FrameLayout { void setMeasureAllChildren(boolean); }
-keepclassmembers class android.widget.Editor { void hideControllers(); }
-keepclassmembers class android.widget.Editor { void hideSpanControllers(); }
-keepclassmembers class android.widget.Editor { void hideCursorControllers(); }
-keepclassmembers class android.widget.FrameLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb$DrawableWrapperStateHoneycomb { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.widget.Editor { void onScreenStateChanged(int); }
-keepclassmembers class android.widget.Editor { void suspendBlink(); }
-keepclassmembers class android.content.IntentFilter { void addAction(java.lang.String); }
-keepclassmembers class android.widget.Editor { void resumeBlink(); }
-keepclassmembers class android.widget.RemoteViews$OnClickHandler { void <init>(); }
-keepclassmembers class okhttp3.Request { okhttp3.RequestBody body(); }
-keepclassmembers class okhttp3.Request { okhttp3.CacheControl cacheControl(); }
-keepclassmembers class okhttp3.Request { void <init>(okhttp3.Request$Builder); }
-keepclassmembers class okhttp3.Request { okhttp3.Headers headers(); }
-keepclassmembers class okhttp3.Request { java.lang.String header(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void <init>(android.view.View); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class okhttp3.Request { boolean isHttps(); }
-keepclassmembers class android.support.v4.util.MapCollections$ValuesCollection { void <init>(android.support.v4.util.MapCollections); }
-keepclassmembers class okhttp3.Request { java.lang.String method(); }
-keepclassmembers class android.support.v4.util.MapCollections$ValuesCollection { boolean contains(java.lang.Object); }
-keepclassmembers class okhttp3.Request { okhttp3.HttpUrl url(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class libcore.net.UriCodec { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment$7 { void <init>(ar.rulosoft.mimanganu.MainFragment,android.view.ViewGroup); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void applySupportBackgroundTint(); }
-keepclassmembers class android.widget.Editor { boolean canSelectText(); }
-keepclassmembers class java.util.concurrent.FutureTask$WaitNode { void <init>(); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal { void <init>(android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal { boolean defaultIsRtl(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { boolean shouldApplyFrameworkTintUsingColorFilter(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.Collections$1 { boolean hasNext(); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getChildrenSkipCount(android.view.View,int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.graphics.drawable.Drawable getDividerDrawable(); }
-keepclassmembers class java.util.Collections$1 { void <init>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getDividerWidth(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getGravity(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getLocationOffset(android.view.View); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { java.lang.Object getValue(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { void run(); }
-keepclassmembers class android.widget.AbsListView$3 { void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView$PerformClick); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { android.view.View getVirtualChildAt(int); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getVirtualChildCount(); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.util.MapCollections$ValuesCollection { java.lang.Object[] toArray(); }
-keepclassmembers class android.widget.AbsListView$3 { void run(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int getNextLocationOffset(android.view.View); }
-keepclassmembers class android.content.res.StringBlock { void <init>(long,boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatBackgroundHelper { void onSetBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Class { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class libcore.net.UriCodec { void appendEncoded(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.ClassLoader getClassLoaderImpl(); }
-keepclassmembers class java.lang.Class { com.android.dex.Dex getDex(); }
-keepclassmembers class libcore.net.UriCodec { void appendPartiallyEncoded(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { android.text.Editable access$002(android.text.method.MultiTapKeyListener$Timeout,android.text.Editable); }
-keepclassmembers class java.lang.Class { java.lang.Class getComponentType(); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor(java.lang.Class[]); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi21$Builder { void addAction(android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class libcore.net.UriCodec { void appendHex(java.lang.StringBuilder,byte); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[]); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi21$Builder { android.app.Notification$Builder getBuilder(); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi21$Builder { android.app.Notification build(); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.widget.Editor { int getLastTapPosition(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.widget.Editor { void onWindowFocusChanged(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.LicenseFragment { void <init>(); }
-keepclassmembers class android.widget.NumberPicker$BeginSoftInputOnLongPressCommand { void <init>(android.widget.NumberPicker); }
-keepclassmembers class android.widget.Editor { long getLastTouchOffsets(); }
-keepclassmembers class android.widget.Editor { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { java.util.ArrayList getMangas(); }
-keepclassmembers class android.widget.Editor { void finishBatchEdit(android.widget.Editor$InputMethodState); }
-keepclassmembers class android.widget.Editor { void ensureEndedBatchEdit(); }
-keepclassmembers class libcore.io.BufferIterator { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$18 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$19$1$2 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$19$1,android.content.DialogInterface); }
-keepclassmembers class ar.rulosoft.mimanganu.LicenseFragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v4.util.LogWriter { void flushBuilder(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$19$1$2 { void onClick(android.view.View); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void measureChildBeforeLayout(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.graphics.drawable.AnimatedRotateDrawable,android.content.res.Resources); }
-keepclassmembers class android.support.v4.util.LogWriter { void close(); }
-keepclassmembers class android.support.v4.util.LogWriter { void flush(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { android.support.v7.app.AppCompatDelegate create(android.app.Dialog,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.widget.Editor { boolean reportExtractedText(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfo { void setColor(boolean,int); }
-keepclassmembers class android.view.ViewPropertyAnimator$1 { void <init>(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.widget.Editor { void onDraw(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfo { void setGenre(java.lang.String); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfo { void setImageBitmap(android.graphics.Bitmap); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfo { void setAuthor(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfo { void setStatus(java.lang.String); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void showWithActionPopup(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void removeHiderCallback(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { android.support.v7.app.AppCompatDelegate create(android.app.Activity,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { boolean canApplyTheme(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.ControlInfo { void setServer(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { int getChangingConfigurations(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHorizontalGravity(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$19 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { boolean canConstantState(); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { boolean hasList(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.Taadd { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter { void <init>(android.database.sqlite.SQLiteConnectionPool$1); }
-keepclassmembers class org.acra.ReportingInteractionMode { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.view.View$CheckForLongPress { void rememberWindowAttachCount(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCurrentCursorOffset(); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void <init>(android.transition.Transition,android.view.ViewGroup); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void removeListeners(); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updatePosition(float,float); }
-keepclassmembers class java.lang.Class { java.lang.Class getDeclaringClass(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MisMangasAdapter { int access$100(ar.rulosoft.mimanganu.adapters.MisMangasAdapter); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void beginTransaction(int,android.database.sqlite.SQLiteTransactionListener,int,android.os.CancellationSignal); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void onDetached(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MisMangasAdapter { boolean access$000(ar.rulosoft.mimanganu.adapters.MisMangasAdapter); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { void setVisibility(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Monospace { void <init>(); }
-keepclassmembers class android.support.v7.widget.ActionBarContextView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class ar.rulosoft.mimanganu.SearchResultsFragment$1 { void <init>(ar.rulosoft.mimanganu.SearchResultsFragment); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Monospace { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void setTransactionSuccessful(); }
-keepclassmembers class ar.rulosoft.navegadores.CFInterceptor { java.lang.String getFirstMatch(java.util.regex.Pattern,java.lang.String); }
-keepclassmembers class android.text.style.URLSpan { void <init>(java.lang.String); }
-keepclassmembers class ar.rulosoft.navegadores.CFInterceptor { void <init>(); }
-keepclassmembers class android.text.style.URLSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$7 { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.URLSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { java.util.Map colGetMap(); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { void <init>(android.support.v4.util.ArrayMap); }
-keepclassmembers class android.support.design.widget.VisibilityAwareImageButton { void internalSetVisibility(int,boolean); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.system.StructLinger { void <init>(int,int); }
-keepclassmembers class android.support.design.widget.VisibilityAwareImageButton { void setVisibility(int); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat$DividerDecoration { void <init>(android.support.v7.preference.PreferenceFragmentCompat); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { int colGetSize(); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { void colRemoveAt(int); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { int colIndexOfValue(java.lang.Object); }
-keepclassmembers class android.support.v4.util.ArrayMap$1 { int colIndexOfKey(java.lang.Object); }
-keepclassmembers class android.graphics.FontListParser$Alias { void <init>(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl$JarURLConnectionInputStream { void <init>(libcore.net.url.JarURLConnectionImpl,java.io.InputStream,java.util.jar.JarFile); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat$DividerDecoration { void <init>(android.support.v7.preference.PreferenceFragmentCompat,android.support.v7.preference.PreferenceFragmentCompat$1); }
-keepclassmembers class java.lang.Class { java.lang.String getInnerClassName(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowPopup { void <init>(android.support.v7.widget.ActionMenuPresenter,android.content.Context,android.support.v7.view.menu.MenuBuilder,android.view.View,boolean); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowPopup { void onDismiss(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl$JarURLConnectionInputStream { void close(); }
-keepclassmembers class java.lang.Class { java.lang.String getName(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { void <init>(); }
-keepclassmembers class org.acra.ReportField$6 { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.Class { java.lang.Class getSuperclass(); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { int getMarginEnd(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat$DividerDecoration { void setDividerHeight(int); }
-keepclassmembers class java.lang.Class { boolean isArray(); }
-keepclassmembers class android.support.v7.preference.PreferenceFragmentCompat$DividerDecoration { void setDivider(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Class { boolean isAnonymousClass(); }
-keepclassmembers class java.lang.Class { boolean isInstance(java.lang.Object); }
-keepclassmembers class android.support.v4.view.MarginLayoutParamsCompat$MarginLayoutParamsCompatImplBase { int getMarginStart(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.widget.Editor { float getPrimaryHorizontal(android.text.Layout,android.text.Layout,int,boolean); }
-keepclassmembers class java.lang.Class { boolean isLocalClass(); }
-keepclassmembers class java.lang.Class { boolean isPrimitive(); }
-keepclassmembers class java.lang.IllegalMonitorStateException { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteSession { boolean executeSpecial(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal); }
-keepclassmembers class android.support.v4.view.ViewPropertyAnimatorCompatJB$1 { void <init>(android.support.v4.view.ViewPropertyAnimatorListener,android.view.View); }
-keepclassmembers class java.lang.Class { boolean isMemberClass(); }
-keepclassmembers class android.widget.Editor { void stopSelectionActionMode(); }
-keepclassmembers class android.widget.Editor { boolean hasSelectionController(); }
-keepclassmembers class org.acra.ReportField$1 { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.Editor { boolean hasInsertionController(); }
-keepclassmembers class java.util.Hashtable { int size(); }
-keepclassmembers class java.util.Hashtable { boolean isEmpty(); }
-keepclassmembers class java.util.Hashtable { void <init>(java.util.Map); }
-keepclassmembers class android.widget.Editor$HandleView$1 { void <init>(android.widget.Editor$HandleView); }
-keepclassmembers class org.acra.file.CrashReportPersister { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void recycleTransaction(android.database.sqlite.SQLiteSession$Transaction); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$7 { void <init>(int); }
-keepclassmembers class com.android.internal.os.BinderInternal$GcWatcher { void <init>(); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb { void <init>(); }
-keepclassmembers class android.content.Intent$1 { void <init>(); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$ShadowDelegateImpl { boolean isCompatPaddingEnabled(); }
-keepclassmembers class java.lang.NoSuchFieldError { void <init>(); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$ToolbarCallbackWrapper { void <init>(com.android.internal.app.ToolbarActionBar,android.view.Window$Callback); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$ShadowDelegateImpl { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.Editor { boolean shouldBlink(); }
-keepclassmembers class android.widget.Editor { void onScrollChanged(); }
-keepclassmembers class java.lang.Class { java.lang.String getPackageName$(); }
-keepclassmembers class java.util.WeakHashMap$1 { void <init>(java.util.WeakHashMap); }
-keepclassmembers class android.support.design.widget.FloatingActionButton$ShadowDelegateImpl { void <init>(android.support.design.widget.FloatingActionButton); }
-keepclassmembers class java.lang.Class { java.lang.Package getPackage(); }
-keepclassmembers class java.lang.Class { int getDexClassDefIndex(); }
-keepclassmembers class java.lang.Class { boolean desiredAssertionStatus(); }
-keepclassmembers class java.util.Hashtable { void rehash(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener access$1400(android.widget.Editor); }
-keepclassmembers class android.widget.Editor { boolean access$600(android.widget.Editor); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { int measureNullChild(int); }
-keepclassmembers class android.widget.Editor { android.graphics.Rect access$2300(android.widget.Editor); }
-keepclassmembers class android.widget.Editor { android.widget.TextView access$700(android.widget.Editor); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(java.lang.String); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$2802(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$2800(android.widget.Editor); }
-keepclassmembers class dalvik.system.DexPathList$Element { void <init>(java.io.File,boolean,java.io.File,dalvik.system.DexFile); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$2 { void <init>(android.support.v7.widget.ForwardingListener); }
-keepclassmembers class android.view.animation.LinearInterpolator { void <init>(); }
-keepclassmembers class android.view.animation.LinearInterpolator { long createNativeInterpolator(); }
-keepclassmembers class android.view.animation.LinearInterpolator { float getInterpolation(float); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void add(android.view.View); }
-keepclassmembers class android.widget.Editor { boolean access$3200(android.widget.Editor,float,float); }
-keepclassmembers class java.lang.Class { int getDexAnnotationDirectoryOffset(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startSpringback(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startOverfling(int); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void <init>(android.widget.RelativeLayout$1); }
-keepclassmembers class android.os.StrictMode$8 { void <init>(); }
-keepclassmembers class dalvik.system.DexPathList$Element { dalvik.system.DexFile access$000(dalvik.system.DexPathList$Element); }
-keepclassmembers class android.support.v4.content.PermissionChecker { int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { android.util.SparseArray access$500(android.widget.RelativeLayout$DependencyGraph); }
-keepclassmembers class java.lang.IntegralToString$1 { void <init>(); }
-keepclassmembers class java.lang.IntegralToString$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void addContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.acra.builder.ReportExecutor$TimeHelper { java.lang.Long access$300(org.acra.builder.ReportExecutor$TimeHelper); }
-keepclassmembers class org.acra.builder.ReportExecutor$TimeHelper { void <init>(org.acra.builder.ReportExecutor$1); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void endFling(); }
-keepclassmembers class org.acra.builder.ReportExecutor$TimeHelper { void setInitialTimeMillis(long); }
-keepclassmembers class android.os.StrictMode$8 { java.lang.Object initialValue(); }
-keepclassmembers class android.support.v4.content.PermissionChecker { int checkSelfPermission(android.content.Context,java.lang.String); }
-keepclassmembers class org.acra.builder.ReportExecutor$TimeHelper { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.view.View findViewById(int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.support.v7.app.AppCompatDelegate getDelegate(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.support.v7.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void flywheelTouch(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class java.security.Signature$SignatureImpl { void engineUpdate(byte[],int,int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.support.v7.app.ActionBar getSupportActionBar(); }
-keepclassmembers class android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter { void <init>(android.support.v7.widget.Toolbar); }
-keepclassmembers class java.security.Signature$SignatureImpl { boolean engineVerify(byte[]); }
-keepclassmembers class java.util.Hashtable { int access$500(java.util.Hashtable); }
-keepclassmembers class java.security.Signature$SignatureImpl { void engineInitVerify(java.security.PublicKey); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void invalidateOptionsMenu(); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.content.Intent getSupportParentActivityIntent(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onContentChanged(); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] access$600(java.util.Hashtable); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.os.Handler { void handleMessage(android.os.Message); }
-keepclassmembers class okhttp3.MultipartBody$Builder { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onCreateSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper,android.os.Handler$Callback); }
-keepclassmembers class okhttp3.MultipartBody$Builder { okhttp3.MultipartBody$Builder addFormDataPart(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper); }
-keepclassmembers class android.os.Handler { void <init>(); }
-keepclassmembers class android.os.Handler { void dispatchMessage(android.os.Message); }
-keepclassmembers class java.io.StreamCorruptedException { void <init>(); }
-keepclassmembers class android.transition.ChangeBounds$5 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class java.io.StreamCorruptedException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter { ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page[] access$000(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class java.security.Signature$SignatureImpl { java.security.SignatureSpi getSpi(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonIcs$1 { void <init>(android.support.design.widget.FloatingActionButtonIcs,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper,android.os.Handler$Callback,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter { int getCount(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onPrepareSupportNavigateUpTaskStack(android.support.v4.app.TaskStackBuilder); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$HPage$HSegment { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$HPage); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class org.json.JSONObject$1 { void <init>(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onSupportActionModeFinished(android.support.v7.view.ActionMode); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter { ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page getCurrentPage(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onSupportActionModeStarted(android.support.v7.view.ActionMode); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onSupportContentChanged(); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int,java.lang.Object); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean onSupportNavigateUp(); }
-keepclassmembers class android.support.v7.widget.Toolbar$ExpandedActionViewMenuPresenter { void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void onTitleChanged(java.lang.CharSequence,int); }
-keepclassmembers class android.view.animation.TranslateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.os.Handler { boolean post(java.lang.Runnable); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setContentView(int); }
-keepclassmembers class org.json.JSONObject$1 { boolean equals(java.lang.Object); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setContentView(android.view.View); }
-keepclassmembers class android.os.Handler { boolean postAtTime(java.lang.Runnable,long); }
-keepclassmembers class android.os.Handler { boolean postAtTime(java.lang.Runnable,java.lang.Object,long); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.os.Handler { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setSupportProgress(int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setSupportActionBar(android.support.v7.widget.Toolbar); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setSupportProgressBarIndeterminate(boolean); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setSupportProgressBarIndeterminateVisibility(boolean); }
-keepclassmembers class android.os.Handler { boolean postAtFrontOfQueue(java.lang.Runnable); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setSupportProgressBarVisibility(boolean); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void setTheme(int); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.support.v7.view.ActionMode startSupportActionMode(android.support.v7.view.ActionMode$Callback); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void supportInvalidateOptionsMenu(); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { void supportNavigateUpTo(android.content.Intent); }
-keepclassmembers class android.os.Handler { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean supportShouldUpRecreateTask(android.content.Intent); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { android.support.v7.view.ActionMode onWindowStartingSupportActionMode(android.support.v7.view.ActionMode$Callback); }
-keepclassmembers class android.text.style.TtsSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$PageAdapter { boolean isViewFromObject(android.view.View,java.lang.Object); }
-keepclassmembers class android.os.Handler { boolean sendMessage(android.os.Message); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessage(int); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessageDelayed(int,long); }
-keepclassmembers class android.support.v7.app.AppCompatActivity { boolean supportRequestWindowFeature(int); }
-keepclassmembers class android.os.HandlerThread { android.os.Looper getLooper(); }
-keepclassmembers class android.view.animation.TranslateAnimation { void initialize(int,int,int,int); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { void <init>(android.widget.RelativeLayout); }
-keepclassmembers class android.os.HandlerThread { void <init>(java.lang.String); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onDraw(android.graphics.Canvas); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class java.util.ResourceBundle { void <init>(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager$SavedState$1 { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { void <init>(android.widget.RelativeLayout,android.widget.RelativeLayout$1); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setBaselineAligned(boolean); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void onMeasure(int,int); }
-keepclassmembers class android.os.Handler { boolean enqueueMessage(android.os.MessageQueue,android.os.Message,long); }
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator { void <init>(java.lang.CharSequence,boolean); }
-keepclassmembers class android.support.v4.text.BidiFormatter$DirectionalityEstimator { byte getCachedDirectionality(char); }
-keepclassmembers class android.os.Handler { void removeMessages(int); }
-keepclassmembers class android.os.HandlerThread { void <init>(java.lang.String,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { void <init>(android.content.Context); }
-keepclassmembers class android.os.Handler { void removeMessages(int,java.lang.Object); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessageAtTime(int,long); }
-keepclassmembers class android.support.v4.util.LongSparseArray { void delete(long); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setDividerDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.Handler { void removeCallbacksAndMessages(java.lang.Object); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.Object get(long); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.Object get(long,java.lang.Object); }
-keepclassmembers class android.os.Parcel$2 { void <init>(android.os.Parcel,java.io.InputStream,java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel$2 { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class android.os.Handler { android.os.Looper getLooper(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { void setOrientation(int); }
-keepclassmembers class java.net.Inet6Address { void <init>(byte[],java.lang.String,int); }
-keepclassmembers class android.support.v4.util.LongSparseArray { long keyAt(int); }
-keepclassmembers class android.support.v7.widget.LinearLayoutCompat { boolean shouldDelayChildPressedState(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.os.Handler { android.os.Message getPostMessage(java.lang.Runnable); }
-keepclassmembers class android.os.Handler { android.os.Message getPostMessage(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.os.Handler { boolean hasMessages(int); }
-keepclassmembers class android.os.Handler { void handleCallback(android.os.Message); }
-keepclassmembers class java.nio.ReadOnlyBufferException { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { boolean onDoubleTapEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.util.LongSparseArray { int size(); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int,android.os.StrictMode$1); }
-keepclassmembers class java.lang.HexStringParser { void setInfinite(); }
-keepclassmembers class android.support.v4.util.LongSparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class java.lang.HexStringParser { void setZero(); }
-keepclassmembers class java.lang.Character$Subset { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Short { void <init>(short); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Short); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { void postLayout(); }
-keepclassmembers class java.lang.Short { int compare(short,short); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void drawSelectorCompat(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void drawableStateChanged(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$6 { void <init>(android.graphics.Rect); }
-keepclassmembers class java.lang.Short { int hashCode(); }
-keepclassmembers class java.lang.Short { int intValue(); }
-keepclassmembers class android.ddm.DdmHandleExit { void <init>(); }
-keepclassmembers class java.util.HashMap$Values { void <init>(java.util.HashMap); }
-keepclassmembers class java.lang.Short { short shortValue(); }
-keepclassmembers class java.lang.Short { java.lang.String toString(); }
-keepclassmembers class java.util.HashMap$Values { java.util.Iterator iterator(); }
-keepclassmembers class java.util.HashMap$Values { int size(); }
-keepclassmembers class java.net.Inet6Address { boolean isAnyLocalAddress(); }
-keepclassmembers class java.util.ResourceBundle { void setParent(java.util.ResourceBundle); }
-keepclassmembers class java.util.HashMap$Values { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class java.util.ResourceBundle { void setLocale(java.util.Locale); }
-keepclassmembers class java.util.jar.JarVerifier { boolean isSignedJar(); }
-keepclassmembers class android.text.BoringLayout$Metrics { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader { void reset(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { java.lang.String getHostString(java.net.InetSocketAddress); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void positionSelectorLikeFocusCompat(int,android.view.View); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNextInetSocketAddress(); }
-keepclassmembers class android.support.v4.view.KeyEventCompatHoneycomb { boolean isCtrlPressed(android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void positionSelectorLikeTouchCompat(int,android.view.View,float,float); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNextProxy(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNextPostponed(); }
-keepclassmembers class java.util.jar.JarVerifier { void removeMetaEntries(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$GetPageTask { void onPreExecute(); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException access$000(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void updateSelectorStateCompat(); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { void setSelectorEnabled(boolean); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { boolean shouldShowSelectorCompat(); }
-keepclassmembers class java.math.BigInt { void <init>(); }
-keepclassmembers class android.support.v7.widget.ListViewCompat { boolean touchModeDrawsInPressedStateCompat(); }
-keepclassmembers class java.math.BigInt { void putULongInt(long,boolean); }
-keepclassmembers class java.math.BigInt { void putCopy(java.math.BigInt); }
-keepclassmembers class java.math.BigInt { long getNativeBIGNUM(); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 { void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],okhttp3.internal.http2.Http2Stream); }
-keepclassmembers class java.math.BigInt { int cmp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { void putLongInt(long); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class java.math.BigInt { void putDecString(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$ListSelectorHider { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$ListSelectorHider { void run(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV23 { int mapNightMode(int); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { void <init>(android.content.Context); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { ar.rulosoft.mimanganu.componentes.readers.Reader$ReaderListener access$000(ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader); }
-keepclassmembers class java.util.Arrays { int binarySearch(long[],long); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { ar.rulosoft.mimanganu.componentes.readers.Reader$ReaderListener access$100(ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { int getCurrentPage(); }
-keepclassmembers class java.math.BigInt { void putLittleEndianInts(int[],boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { void goToPage(int); }
-keepclassmembers class java.math.BigInt { void putBigEndianTwosComplement(byte[]); }
-keepclassmembers class java.math.BigInt { long longInt(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { boolean isLastPageVisible(); }
-keepclassmembers class android.view.animation.BounceInterpolator { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { void onEndOver(); }
-keepclassmembers class java.math.BigInt { java.lang.String decString(); }
-keepclassmembers class java.math.BigInt { int[] littleEndianIntsMagnitude(); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void connectFailed(okhttp3.Route,java.io.IOException); }
-keepclassmembers class java.math.BigInt { int sign(); }
-keepclassmembers class java.math.BigInt { void setSign(int); }
-keepclassmembers class java.math.BigInt { int bitLength(); }
-keepclassmembers class java.math.BigInt { void shift(int); }
-keepclassmembers class java.math.BigInt { boolean isBitSet(int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt shift(java.math.BigInt,int); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNext(); }
-keepclassmembers class java.math.BigInt { void multiplyByPositiveInt(int); }
-keepclassmembers class java.util.HashMap$KeyIterator { void <init>(java.util.HashMap); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader { void onStartOver(); }
-keepclassmembers class java.util.HashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class java.util.HashMap$KeyIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.os.PersistableBundle$1 { void <init>(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt addition(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$2 { boolean onQueryTextChange(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$2 { void <init>(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class android.app.PendingIntent$1 { void <init>(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt product(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.math.BigInt { java.math.BigInt bigExp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class android.text.util.Linkify$2 { void <init>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void write(char[],int,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void flush(); }
-keepclassmembers class java.net.URLEncoder$1 { void <init>(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(com.android.internal.util.FastPrintWriter$1); }
-keepclassmembers class java.math.BigInt { void division(java.math.BigInt,java.math.BigInt,java.math.BigInt,java.math.BigInt); }
-keepclassmembers class android.os.BadParcelableException { void <init>(java.lang.String); }
-keepclassmembers class android.os.Environment$UserEnvironment { java.io.File[] getExternalDirsForApp(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context); }
-keepclassmembers class java.lang.reflect.Method { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.Reader$Direction { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.reflect.Method { java.lang.reflect.ArtMethod getArtMethod(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.reflect.Method { java.lang.String getName(); }
-keepclassmembers class java.lang.reflect.Method { int getModifiers(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getExceptionTypes(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class getDeclaringClass(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class getReturnType(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object getDefaultValue(); }
-keepclassmembers class java.lang.reflect.Method { boolean equalNameAndParameters(java.lang.reflect.Method); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object invoke(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.lang.reflect.Method { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.PopupWindow { android.view.View getContentView(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int); }
-keepclassmembers class android.widget.PopupWindow { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl { void <init>(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { boolean hasNext(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet); }
-keepclassmembers class android.widget.PopupWindow { void setAnimationStyle(int); }
-keepclassmembers class android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl { void offsetLeftAndRight(android.view.View,int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.lang.Object next(); }
-keepclassmembers class android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl { void offsetTopAndBottom(android.view.View,int); }
-keepclassmembers class android.support.v4.view.ViewCompat$MarshmallowViewCompatImpl { void setScrollIndicators(android.view.View,int,int); }
-keepclassmembers class android.widget.PopupWindow { void setTouchInterceptor(android.view.View$OnTouchListener); }
-keepclassmembers class android.widget.PopupWindow { void setFocusable(boolean); }
-keepclassmembers class android.support.v7.util.DiffUtil { android.support.v7.util.DiffUtil$DiffResult calculateDiff(android.support.v7.util.DiffUtil$Callback); }
-keepclassmembers class android.widget.PopupWindow { void setInputMethodMode(int); }
-keepclassmembers class android.widget.PopupWindow { int getInputMethodMode(); }
-keepclassmembers class android.widget.PopupWindow { void setOutsideTouchable(boolean); }
-keepclassmembers class java.net.Inet6Address { boolean isLoopbackAddress(); }
-keepclassmembers class android.widget.PopupWindow { void setTouchable(boolean); }
-keepclassmembers class android.support.v4.app.FragmentActivity$NonConfigurationInstances { void <init>(); }
-keepclassmembers class android.widget.PopupWindow { boolean isSplitTouchEnabled(); }
-keepclassmembers class java.util.logging.LogRecord { java.util.logging.Level getLevel(); }
-keepclassmembers class java.util.logging.LogRecord { void setLoggerName(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { void setAttachedInDecor(boolean); }
-keepclassmembers class android.widget.PopupWindow { void setClippingEnabled(boolean); }
-keepclassmembers class android.widget.PopupWindow { void setSplitTouchEnabled(boolean); }
-keepclassmembers class android.widget.PopupWindow { void setWindowLayoutType(int); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundleName(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { void setHeight(int); }
-keepclassmembers class android.widget.PopupWindow { int getHeight(); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundle(java.util.ResourceBundle); }
-keepclassmembers class android.widget.PopupWindow { int getWidth(); }
-keepclassmembers class android.widget.PopupWindow { void setWidth(int); }
-keepclassmembers class java.net.Proxy { void <init>(); }
-keepclassmembers class android.widget.PopupWindow { boolean isShowing(); }
-keepclassmembers class java.util.logging.LogRecord { void setThrown(java.lang.Throwable); }
-keepclassmembers class java.util.Arrays { void sort(int[]); }
-keepclassmembers class java.net.Proxy { java.net.Proxy$Type type(); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.os.IBinder,int,int,int); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.view.View,int,int,int); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[]); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],int,int); }
-keepclassmembers class java.net.Proxy { java.net.SocketAddress address(); }
-keepclassmembers class android.widget.Toast$TN$1 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int,int); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class java.util.Arrays { void sort(int[],int,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.widget.PopupWindow { boolean isAboveAnchor(); }
-keepclassmembers class android.widget.PopupWindow { void updateAboveAnchor(boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalize(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { void invokePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.widget.PopupWindow { int computeAnimationResource(); }
-keepclassmembers class rapid.decoder.BitmapDecoder$Region { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void normalize(java.lang.StringBuilder); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonImpl$1 { void <init>(android.support.design.widget.FloatingActionButtonImpl); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeDigitsOnly(java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean isHeldExclusively(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isViablePhoneNumber(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setInstance(com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class android.os.StrictMode$5 { void <init>(java.lang.String,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean hasValidCountryCallingCode(int); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isValidRegionCode(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class java.lang.Double { void <init>(double); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Double); }
-keepclassmembers class ar.rulosoft.custompref.SeekBarCustomPreference$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$100(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { void <init>(org.kxml2.io.KXmlParser$ContentSource,char[],int,int); }
-keepclassmembers class android.widget.PopupWindow { int getMaxAvailableHeight(android.view.View,int); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$200(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { org.kxml2.io.KXmlParser$ContentSource access$300(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class android.graphics.Region$Op { void <init>(java.lang.String,int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { char[] access$000(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class java.lang.Double { double parseDouble(java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class java.lang.Double { java.lang.String toString(); }
-keepclassmembers class java.lang.Double { java.lang.String toString(double); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int); }
-keepclassmembers class java.lang.Double { java.lang.Double valueOf(java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$Action { void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class java.lang.Double { double doubleValue(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager$LayoutParams { void <init>(); }
-keepclassmembers class android.os.Trace$1 { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$Action { void <init>(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[][] internalZoneStrings(); }
-keepclassmembers class android.widget.RemoteViews$Action { void <init>(android.widget.RemoteViews$1); }
-keepclassmembers class android.os.Trace$1 { void run(); }
-keepclassmembers class okhttp3.HttpUrl$Builder$ParseResult { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.FragmentTransaction { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Cover { void setImageBitmap(android.graphics.Bitmap); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Cover { void setText(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { void <init>(android.graphics.drawable.Drawable$ConstantState); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState { int getChangingConfigurations(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetMetaState(android.text.Spannable); }
-keepclassmembers class android.widget.RemoteViews$Action { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable { void <init>(android.support.v4.widget.AutoScrollHelper); }
-keepclassmembers class ar.rulosoft.mimanganu.services.SingleDownload { void <init>(java.lang.String,java.lang.String,int,int,ar.rulosoft.mimanganu.services.ChapterDownload,boolean); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper$ScrollAnimationRunnable { void run(); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,int,int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.services.SingleDownload { int getIndex(); }
-keepclassmembers class android.widget.PopupWindow { android.view.View$OnTouchListener access$900(android.widget.PopupWindow); }
-keepclassmembers class android.widget.PopupWindow { boolean access$700(android.widget.PopupWindow); }
-keepclassmembers class android.widget.Editor$SpanController { void <init>(android.widget.Editor); }
-keepclassmembers class android.widget.PopupWindow { android.view.View access$1000(android.widget.PopupWindow); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjustMetaAfterKeypress(android.text.Spannable); }
-keepclassmembers class android.view.InputDevice$MotionRange { int access$100(android.view.InputDevice$MotionRange); }
-keepclassmembers class ar.rulosoft.mimanganu.services.SingleDownload { void changeStatus(ar.rulosoft.mimanganu.services.SingleDownload$Status); }
-keepclassmembers class android.view.InputDevice$MotionRange { int access$200(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$600(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$500(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float,android.view.InputDevice$1); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjust(android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$700(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$400(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLockedMeta(android.text.Spannable); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { void <init>(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLock(android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v7.app.NotificationCompat$Api24Extender { void <init>(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void press(android.text.Editable,java.lang.Object); }
-keepclassmembers class android.support.v7.app.NotificationCompat$Api24Extender { void <init>(android.support.v7.app.NotificationCompat$1); }
-keepclassmembers class android.support.v7.app.NotificationCompat$Api24Extender { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$800(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { boolean closeMenuOnSubMenuOpened(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { android.graphics.Rect getEpicenterBounds(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void release(android.text.Editable,java.lang.Object,android.view.KeyEvent); }
-keepclassmembers class android.widget.Editor$SpanController { void hide(); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { void initForMenu(android.content.Context,android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class android.support.v7.view.menu.MenuPopup { void setEpicenterBounds(android.graphics.Rect); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.Reader$Type { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$SavedState$1 { void <init>(); }
-keepclassmembers class android.view.MotionEvent { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void <init>(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util$2 { void <init>(ar.rulosoft.mimanganu.utils.Util,android.content.Context,java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void lock(); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$JbTextViewCompatImpl { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { boolean tryAcquire(int); }
-keepclassmembers class android.support.v4.view.AbsSavedState$1 { void <init>(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,int); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { int getLayoutDirection(android.view.View); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue$Node { void <init>(java.lang.Object); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { int getWindowSystemUiVisibility(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewCompatJellybeanMr1 { android.view.Display getDisplay(android.view.View); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { int access$1400(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.text.Html { android.text.Spanned fromHtml(java.lang.String); }
-keepclassmembers class android.view.MotionEvent { int getDeviceId(); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList); }
-keepclassmembers class android.view.MotionEvent { int getSource(); }
-keepclassmembers class android.view.MotionEvent { void setSource(int); }
-keepclassmembers class android.view.MotionEvent { boolean isTouchEvent(); }
-keepclassmembers class android.view.MotionEvent { int getAction(); }
-keepclassmembers class android.view.MotionEvent { int getFlags(); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$3 { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class ar.rulosoft.mimanganu.services.SingleDownload { void setChangeListener(ar.rulosoft.mimanganu.services.StateChangeListener); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { android.graphics.drawable.Drawable get(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.view.MotionEvent { long getEventTimeNano(); }
-keepclassmembers class android.view.MotionEvent { float getX(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.DrawableContainer$1); }
-keepclassmembers class android.view.MotionEvent { float getY(); }
-keepclassmembers class android.os.Binder { void <init>(); }
-keepclassmembers class android.view.MotionEvent { float getAxisValue(int); }
-keepclassmembers class android.view.MotionEvent { int getPointerCount(); }
-keepclassmembers class android.view.MotionEvent { int getPointerId(int); }
-keepclassmembers class android.view.MotionEvent { int findPointerIndex(int); }
-keepclassmembers class android.view.MotionEvent { int getToolType(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void access$1000(android.support.v7.widget.RecyclerView,int,int); }
-keepclassmembers class android.os.Binder { void attachInterface(android.os.IInterface,java.lang.String); }
-keepclassmembers class android.view.MotionEvent { float getX(int); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent copy(); }
-keepclassmembers class android.view.MotionEvent { float getY(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { boolean isScrap(); }
-keepclassmembers class java.lang.ref.SoftReference { void <init>(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void addAnimatingView(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void animateChange(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void cancelTouch(); }
-keepclassmembers class android.view.MotionEvent { int getMetaState(); }
-keepclassmembers class android.view.MotionEvent { int getButtonState(); }
-keepclassmembers class android.view.MotionEvent { float getRawX(); }
-keepclassmembers class android.support.v4.content.ContextCompatApi23 { int getColor(android.content.Context,int); }
-keepclassmembers class android.view.MotionEvent { float getRawY(); }
-keepclassmembers class android.view.MotionEvent { int getHistorySize(); }
-keepclassmembers class android.support.v4.content.ContextCompatApi23 { android.content.res.ColorStateList getColorStateList(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { void <init>(int); }
-keepclassmembers class android.view.MotionEvent { float getTouchMajor(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPager { void onSwipeOutAtEnd(); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(android.os.Parcel); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPager { void onSwipeOutAtStart(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$1 { void <init>(android.support.v7.app.WindowDecorActionBar); }
-keepclassmembers class android.view.MotionEvent { float getHistoricalTouchMajor(int,int); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$1 { void onAnimationEnd(android.view.View); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(); }
-keepclassmembers class android.view.MotionEvent { int getEdgeFlags(); }
-keepclassmembers class android.view.MotionEvent { void setAction(int); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1$1 { void <init>(ar.rulosoft.mimanganu.utils.UpdateUtil$1,org.json.JSONObject); }
-keepclassmembers class java.util.TreeMap$Node { void <init>(java.util.TreeMap$Node,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.UnScrolledViewPager { void setOnSwipeOutListener(ar.rulosoft.mimanganu.componentes.OnSwipeOutListener); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean didChildRangeChange(int,int); }
-keepclassmembers class android.view.ScaleGestureDetector$SimpleOnScaleGestureListener { void <init>(); }
-keepclassmembers class com.fedorvlasov.lazylist.MemCache { void clearMem(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchContentChangedIfNecessary(); }
-keepclassmembers class android.view.ScaleGestureDetector$SimpleOnScaleGestureListener { boolean onScaleBegin(android.view.ScaleGestureDetector); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.Object getKey(); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.Object getValue(); }
-keepclassmembers class com.fedorvlasov.lazylist.MemCache { void putImageInMem(java.lang.String,android.graphics.Bitmap); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(int); }
-keepclassmembers class android.view.ScaleGestureDetector$SimpleOnScaleGestureListener { void onScaleEnd(android.view.ScaleGestureDetector); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.DisplayInfo { void readFromParcel(android.os.Parcel); }
-keepclassmembers class android.support.v7.app.AlertController$AlertParams { void apply(android.support.v7.app.AlertController); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void drawableStateChanged(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.Reader { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node next(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node prev(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isPossibleNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.util.List); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.lang.ProcessManager$ProcessReference { void <init>(java.lang.ProcessManager$ProcessImpl,java.lang.ProcessManager$ProcessReferenceQueue); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node first(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult testNumberLengthAgainstPattern(java.util.regex.Pattern,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isShorterThanPossibleNormalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.String); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node last(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.Reader { boolean hasFitFeature(); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(); }
-keepclassmembers class android.view.DisplayInfo { void getAppMetrics(android.util.DisplayMetrics,android.view.DisplayAdjustments); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.Reader { void setReaderListener(ar.rulosoft.mimanganu.componentes.readers.Reader$ReaderListener); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.Reader { void setMaxTexture(int); }
-keepclassmembers class android.os.AsyncTask$Status { void <init>(java.lang.String,int); }
-keepclassmembers class libcore.io.Base64 { byte[] decode(byte[]); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { void <init>(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class org.apache.harmony.security.x501.Name { byte[] getEncoded(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.util.List,org.apache.harmony.security.x501.Name$1); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.reflect.Method getMethod(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.util.List access$100(org.apache.harmony.security.x501.Name); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchLayoutStep2(); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView,android.widget.TextView$1); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.Reader { void setScreenFit(it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { boolean isSupported(java.lang.Object); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { boolean setState(int[]); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void <init>(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.LinearLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.LinearLayout { void setDividerDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void setHotspot(float,float); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { void <init>(android.support.v4.app.BackStackRecord,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { boolean access$000(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { android.support.v4.app.BackStackRecord access$100(android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { void cancelTransaction(); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel,android.view.DisplayInfo$1); }
-keepclassmembers class android.widget.LinearLayout { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.FastScroller$4 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(android.view.View,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl$StartEnterTransitionListener { boolean isReady(); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Integer get(android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource maybeStripInternationalPrefixAndNormalize(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.view.MotionEvent { android.view.InputEvent copy(); }
-keepclassmembers class android.widget.LinearLayout { void setBaselineAligned(boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void access$300(android.support.v4.app.FragmentManagerImpl,android.support.v4.app.BackStackRecord,boolean,boolean,boolean); }
-keepclassmembers class android.widget.LinearLayout { android.view.View getVirtualChildAt(int); }
-keepclassmembers class android.widget.LinearLayout { int getVirtualChildCount(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void access$200(android.support.v4.app.FragmentManagerImpl); }
-keepclassmembers class android.widget.LinearLayout { void onMeasure(int,int); }
-keepclassmembers class android.os.StrictMode$7 { void finish(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void start(android.text.SpannableStringBuilder,java.lang.Object); }
-keepclassmembers class java.io.FilterOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class java.io.FilterOutputStream { void close(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object); }
-keepclassmembers class java.io.FilterOutputStream { void flush(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void cleanupExec(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean checkRegionForParsing(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseAndKeepRawInput(java.lang.String,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$3 { void <init>(ar.rulosoft.mimanganu.DetailsFragment); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void setDocumentLocator(org.xml.sax.Locator); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startDocument(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$20 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endDocument(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startPrefixMapping(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endPrefixMapping(java.lang.String); }
-keepclassmembers class java.net.Inet4Address { void <init>(byte[],java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endElement(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.preference.Preference { boolean onKey(android.view.View,int,android.view.KeyEvent); }
-keepclassmembers class android.os.StrictMode$7 { void <init>(); }
-keepclassmembers class java.net.Inet4Address { boolean isAnyLocalAddress(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void processingInstruction(java.lang.String,java.lang.String); }
-keepclassmembers class android.preference.Preference { void onDependencyChanged(android.preference.Preference,boolean); }
-keepclassmembers class java.net.Proxy$Type { void <init>(java.lang.String,int); }
-keepclassmembers class android.preference.Preference { void onParentChanged(android.preference.Preference,boolean); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void ignorableWhitespace(char[],int,int); }
-keepclassmembers class android.media.AudioAttributes { void <init>(); }
-keepclassmembers class android.support.v4.text.BidiFormatter$Builder { void <init>(); }
-keepclassmembers class android.provider.Settings$NameValueCache { android.content.IContentProvider lazyGetProvider(android.content.ContentResolver); }
-keepclassmembers class android.support.v4.text.BidiFormatter$Builder { android.support.v4.text.BidiFormatter getDefaultInstanceFromContext(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getTagOffset(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { byte[] getBuffer(); }
-keepclassmembers class android.support.v4.text.BidiFormatter$Builder { void initialize(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getOffset(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean predictiveItemAnimationsEnabled(); }
-keepclassmembers class okhttp3.CookieJar$1 { void <init>(); }
-keepclassmembers class okhttp3.CookieJar$1 { java.util.List loadForRequest(okhttp3.HttpUrl); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { byte[] engineDigest(); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineUpdate(byte); }
-keepclassmembers class okhttp3.CookieJar$1 { void saveFromResponse(okhttp3.HttpUrl,java.util.List); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void processAdapterUpdatesAndSetAnimationFlags(); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineUpdate(byte[],int,int); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { void access$000(android.support.v7.widget.ForwardingListener); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String,java.security.MessageDigest$1); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { void onDetachedFromWindow(); }
-keepclassmembers class android.app.IntentService$ServiceHandler { void <init>(android.app.IntentService,android.os.Looper); }
-keepclassmembers class okio.Okio$4 { void <init>(java.net.Socket); }
-keepclassmembers class java.nio.ByteArrayBuffer { void <init>(byte[]); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { void clearCallbacks(); }
-keepclassmembers class android.media.AudioAttributes { void <init>(android.media.AudioAttributes$1); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void failOperation(int,java.lang.Exception); }
-keepclassmembers class android.media.AudioAttributes { int access$102(android.media.AudioAttributes,int); }
-keepclassmembers class android.media.AudioAttributes { int access$002(android.media.AudioAttributes,int); }
-keepclassmembers class android.media.AudioAttributes { int access$502(android.media.AudioAttributes,int); }
-keepclassmembers class android.media.AudioAttributes { int access$202(android.media.AudioAttributes,int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$9 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void endOperation(int); }
-keepclassmembers class android.media.AudioAttributes { java.lang.String access$602(android.media.AudioAttributes,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { boolean endOperationDeferLog(int); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean onForwardingStopped(); }
-keepclassmembers class android.media.AudioAttributes { java.util.HashSet access$302(android.media.AudioAttributes,java.util.HashSet); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void logOperation(int,java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean popBackStackImmediate(java.lang.String,int,int); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class java.util.HashSet { void <init>(java.util.HashMap); }
-keepclassmembers class android.support.v7.widget.ForwardingListener { void onLongPress(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanStart(android.text.Spannable); }
-keepclassmembers class java.util.HashSet { boolean add(java.lang.Object); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanEnd(android.text.Spannable); }
-keepclassmembers class java.util.HashSet { void clear(); }
-keepclassmembers class java.util.HashSet { boolean isEmpty(); }
-keepclassmembers class java.util.HashSet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.HashSet { boolean contains(java.lang.Object); }
-keepclassmembers class java.lang.IllegalAccessError { void <init>(); }
-keepclassmembers class java.util.HashSet { int size(); }
-keepclassmembers class java.util.HashSet { boolean remove(java.lang.Object); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { int reverseTransit(int); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void scheduleCommit(); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getCursorCapsMode(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setParameters(int,int,int,boolean); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawVerticalTrack(boolean); }
-keepclassmembers class libcore.net.url.UrlUtils { boolean isValidSchemeChar(int,char); }
-keepclassmembers class android.widget.LinearLayout { int getChildrenSkipCount(android.view.View,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { void <init>(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawHorizontalTrack(boolean); }
-keepclassmembers class android.widget.LinearLayout { int measureNullChild(int); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { void <init>(java.io.InputStream); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void <init>(android.database.sqlite.SQLiteConnection$1); }
-keepclassmembers class android.widget.LinearLayout { void measureChildBeforeLayout(android.view.View,int,int,int,int,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean draw(java.lang.Object,android.graphics.Canvas); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean isFinished(java.lang.Object); }
-keepclassmembers class okhttp3.CipherSuite { okhttp3.CipherSuite of(java.lang.String,int); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { java.lang.Object newEdgeEffect(android.content.Context); }
-keepclassmembers class android.widget.LinearLayout { int getLocationOffset(android.view.View); }
-keepclassmembers class android.widget.LinearLayout { int getNextLocationOffset(android.view.View); }
-keepclassmembers class okhttp3.CipherSuite { java.lang.String toString(); }
-keepclassmembers class android.widget.LinearLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class okio.Timeout { void <init>(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean shouldRunOnHWLayer(android.view.View,android.view.animation.Animation); }
-keepclassmembers class okio.Timeout { okio.Timeout clearDeadline(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onPull(java.lang.Object,float,float); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { void setSize(java.lang.Object,int,int); }
-keepclassmembers class okio.Timeout { okio.Timeout clearTimeout(); }
-keepclassmembers class java.util.zip.CRC32 { void <init>(); }
-keepclassmembers class java.util.zip.CRC32 { long getValue(); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onAbsorb(java.lang.Object,int); }
-keepclassmembers class java.util.zip.CRC32 { void reset(); }
-keepclassmembers class java.lang.RealToString { java.lang.String resultOrSideEffect(java.lang.AbstractStringBuilder,java.lang.String); }
-keepclassmembers class android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl { boolean onRelease(java.lang.Object); }
-keepclassmembers class java.lang.RealToString { java.lang.String doubleToString(double); }
-keepclassmembers class java.lang.RealToString { void appendDouble(java.lang.AbstractStringBuilder,double); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void resetFocusInfo(); }
-keepclassmembers class okio.Timeout { okio.Timeout deadlineNanoTime(long); }
-keepclassmembers class okio.Timeout { boolean hasDeadline(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void resetTouch(); }
-keepclassmembers class okio.Timeout { long timeoutNanos(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void drawTrack(android.graphics.Canvas,android.graphics.Rect,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setAdapterInternal(android.support.v7.widget.RecyclerView$Adapter,boolean,boolean); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { int transitToStyleIndex(int,boolean); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void saveFocusInfo(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void stopScrollersInternal(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.LinearLayout { int getOrientation(); }
-keepclassmembers class android.support.v7.preference.Preference$BaseSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.widget.LinearLayout { void setOrientation(int); }
-keepclassmembers class java.lang.RealToString { java.lang.String floatToString(float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class java.lang.RealToString { void appendFloat(java.lang.AbstractStringBuilder,float); }
-keepclassmembers class android.widget.ScrollBarDrawable { android.widget.ScrollBarDrawable mutate(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void addItemDecoration(android.support.v7.widget.RecyclerView$ItemDecoration); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlpha(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.widget.ScrollBarDrawable { int getOpacity(); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.widget.ScrollBarDrawable { int getSize(boolean); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.lang.Long { void <init>(long); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1$1$1$1 { void <init>(ar.rulosoft.mimanganu.utils.UpdateUtil$1$1$1,android.content.DialogInterface); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Long); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void completeShowHideFragment(android.support.v4.app.Fragment); }
-keepclassmembers class org.acra.util.IOUtils$1 { void <init>(); }
-keepclassmembers class android.graphics.Path { void <init>(); }
-keepclassmembers class org.acra.util.IOUtils$1 { boolean apply(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$1$2 { void <init>(ar.rulosoft.mimanganu.componentes.LoginDialog$1,android.content.DialogInterface); }
-keepclassmembers class android.graphics.Path { void reset(); }
-keepclassmembers class android.graphics.Path { android.graphics.Path$FillType getFillType(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchActivityCreated(); }
-keepclassmembers class android.graphics.Path { void setFillType(android.graphics.Path$FillType); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeHorizontalScrollExtent(); }
-keepclassmembers class android.graphics.Path { boolean isEmpty(); }
-keepclassmembers class android.view.Choreographer { long getFrameIntervalNanos(); }
-keepclassmembers class android.graphics.Path { void computeBounds(android.graphics.RectF,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeHorizontalScrollOffset(); }
-keepclassmembers class java.lang.Long { long longValue(); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String); }
-keepclassmembers class android.database.AbstractWindowedCursor { void <init>(); }
-keepclassmembers class android.graphics.Path { void moveTo(float,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeHorizontalScrollRange(); }
-keepclassmembers class android.database.AbstractWindowedCursor { java.lang.String getString(int); }
-keepclassmembers class android.graphics.Path { void rMoveTo(float,float); }
-keepclassmembers class android.graphics.Path { void lineTo(float,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchCreate(); }
-keepclassmembers class android.view.Choreographer { void postCallback(int,java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.graphics.Path { void rLineTo(float,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int computeVerticalScrollRange(); }
-keepclassmembers class android.graphics.Path { void quadTo(float,float,float,float); }
-keepclassmembers class android.database.AbstractWindowedCursor { int getInt(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.database.AbstractWindowedCursor { long getLong(int); }
-keepclassmembers class android.graphics.Path { void rQuadTo(float,float,float,float); }
-keepclassmembers class android.database.AbstractWindowedCursor { float getFloat(int); }
-keepclassmembers class android.graphics.Path { void arcTo(android.graphics.RectF,float,float,boolean); }
-keepclassmembers class okhttp3.internal.Util { void closeQuietly(java.io.Closeable); }
-keepclassmembers class android.graphics.Path { void cubicTo(float,float,float,float,float,float); }
-keepclassmembers class java.lang.Long { java.lang.String toBinaryString(long); }
-keepclassmembers class android.graphics.Path { void rCubicTo(float,float,float,float,float,float); }
-keepclassmembers class java.lang.Long { java.lang.String toHexString(long); }
-keepclassmembers class android.graphics.Path { void arcTo(float,float,float,float,float,float,boolean); }
-keepclassmembers class android.view.Choreographer { void removeCallbacksInternal(int,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.Long { java.lang.String toString(); }
-keepclassmembers class java.lang.Long { java.lang.String toOctalString(long); }
-keepclassmembers class okhttp3.internal.Util { void closeQuietly(java.net.Socket); }
-keepclassmembers class java.lang.Long { java.lang.String toString(long); }
-keepclassmembers class android.graphics.Path { void close(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchDestroy(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchDestroyView(); }
-keepclassmembers class android.view.Choreographer { void postFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class android.database.AbstractWindowedCursor { void closeWindow(); }
-keepclassmembers class android.database.AbstractWindowedCursor { void onDeactivateOrClose(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplN { void <init>(android.content.Context,android.view.Window,android.support.v7.app.AppCompatCallback); }
-keepclassmembers class android.graphics.Path { void addRect(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class android.graphics.Path { void addOval(android.graphics.RectF,android.graphics.Path$Direction); }
-keepclassmembers class android.graphics.Path { void addOval(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$ViewHolder { android.widget.TextView access$000(ar.rulosoft.mimanganu.adapters.DownloadAdapter$ViewHolder); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String domainToAscii(java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$ViewHolder { android.widget.ImageButton access$300(ar.rulosoft.mimanganu.adapters.DownloadAdapter$ViewHolder); }
-keepclassmembers class okhttp3.internal.Util { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$ViewHolder { android.widget.ProgressBar access$100(ar.rulosoft.mimanganu.adapters.DownloadAdapter$ViewHolder); }
-keepclassmembers class okhttp3.internal.Util { boolean discard(okio.Source,int,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class android.view.Choreographer { void doCallbacks(int,long); }
-keepclassmembers class java.lang.RealToString { void <init>(java.lang.RealToString$1); }
-keepclassmembers class android.view.Choreographer { void doScheduleCallback(int); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void <init>(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.view.Choreographer { void doScheduleVsync(); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord access$500(android.view.Choreographer,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.Choreographer { void scheduleVsyncLocked(); }
-keepclassmembers class android.view.Choreographer { boolean isRunningOnLooperThreadLocked(); }
-keepclassmembers class android.view.Choreographer { void access$600(android.view.Choreographer,android.view.Choreographer$CallbackRecord); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchRestoreInstanceState(android.util.SparseArray); }
-keepclassmembers class android.view.Choreographer { void recycleCallbackLocked(android.view.Choreographer$CallbackRecord); }
-keepclassmembers class android.graphics.Path { void addPath(android.graphics.Path,android.graphics.Matrix); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { android.widget.ListView access$100(ar.rulosoft.mimanganu.ServerListFragment); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper,android.view.Choreographer$1); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$2 { android.view.View getChildAt(int); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { ar.rulosoft.mimanganu.servers.ServerBase access$200(ar.rulosoft.mimanganu.ServerListFragment); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void dispatchSaveInstanceState(android.util.SparseArray); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$2 { void <init>(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { ar.rulosoft.mimanganu.adapters.MangaAdapter access$302(ar.rulosoft.mimanganu.ServerListFragment,ar.rulosoft.mimanganu.adapters.MangaAdapter); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { ar.rulosoft.mimanganu.adapters.MangaAdapter access$300(ar.rulosoft.mimanganu.ServerListFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { android.widget.ProgressBar access$400(ar.rulosoft.mimanganu.ServerListFragment); }
-keepclassmembers class java.util.concurrent.CancellationException { void <init>(); }
-keepclassmembers class android.graphics.Path { long ni(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$2 { int getParentStart(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { void <init>(java.util.Map); }
-keepclassmembers class android.support.design.widget.SnackbarManager { boolean isNextSnackbarLocked(android.support.design.widget.SnackbarManager$Callback); }
-keepclassmembers class android.graphics.Path { float[] approximate(float); }
-keepclassmembers class java.util.Collections$SynchronizedMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.Collections$SynchronizedMap { void clear(); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char); }
-keepclassmembers class android.support.design.widget.SnackbarManager { boolean isCurrentSnackbarLocked(android.support.design.widget.SnackbarManager$Callback); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { void onDetach(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String trimSubstring(java.lang.String,int,int); }
-keepclassmembers class okhttp3.internal.Util { boolean verifyAsIpAddress(java.lang.String); }
-keepclassmembers class android.provider.Settings$Secure { java.lang.String getString(android.content.ContentResolver,java.lang.String); }
-keepclassmembers class android.support.design.widget.SnackbarManager { void handleTimeout(android.support.design.widget.SnackbarManager$SnackbarRecord); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerListFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.hardware.display.DisplayManagerCompat$JellybeanMr1Impl { android.view.Display[] getDisplays(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class libcore.net.url.FtpURLConnection { boolean readMultiLine(); }
-keepclassmembers class java.lang.ClassNotFoundException { java.lang.Throwable getCause(); }
-keepclassmembers class okhttp3.internal.tls.CertificateChainCleaner { void <init>(); }
-keepclassmembers class okhttp3.internal.tls.CertificateChainCleaner { okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void write(java.lang.String); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchReallyStop(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchPause(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchResume(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchStart(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void dispatchStop(); }
-keepclassmembers class android.text.TextUtils { boolean isEmpty(java.lang.CharSequence); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator); }
-keepclassmembers class android.app.Notification$InboxStyle { android.app.Notification$InboxStyle addLine(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$InboxStyle { android.app.Notification$InboxStyle setBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View); }
-keepclassmembers class android.support.v7.util.DiffUtil$DiffResult { void <init>(android.support.v7.util.DiffUtil$Callback,java.util.List,int[],int[],boolean); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator,android.animation.StateListAnimator$1); }
-keepclassmembers class android.app.Notification$InboxStyle { android.app.Notification$InboxStyle setSummaryText(java.lang.CharSequence); }
-keepclassmembers class android.text.TextUtils { void writeWhere(android.os.Parcel,android.text.Spanned,java.lang.Object); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$1 { void <init>(it.sephiroth.android.library.imagezoom.ImageViewTouchBase,android.graphics.drawable.Drawable,android.graphics.Matrix,float,float); }
-keepclassmembers class android.text.Selection$START { void <init>(); }
-keepclassmembers class android.text.Selection$START { void <init>(android.text.Selection$1); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$1 { void run(); }
-keepclassmembers class org.acra.ReportField$10 { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.Notification$InboxStyle { void populateBigContentView(android.app.Notification); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean execPendingActions(); }
-keepclassmembers class android.text.TextUtils { void readSpan(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.support.v7.widget.CardViewJellybeanMr1$1 { void <init>(android.support.v7.widget.CardViewJellybeanMr1); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean executePendingTransactions(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$1 { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$1 { void run(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat { android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setPattern(java.lang.String); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat { void <init>(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat { void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setFormat(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { int leadingDigitsPatternSize(); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompat$BaseCompoundButtonCompat { void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixOptionalWhenFormatting(boolean); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixFormattingRule(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getAdapterPositionFor(android.support.v7.widget.RecyclerView$ViewHolder); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getBaseline(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setDomesticCarrierCodeFormattingRule(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.content.res.TypedArrayUtils { boolean getBoolean(android.content.res.TypedArray,int,int,boolean); }
-keepclassmembers class android.support.v4.content.res.TypedArrayUtils { int getResourceId(android.content.res.TypedArray,int,int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.support.v4.content.res.TypedArrayUtils { int getInt(android.content.res.TypedArray,int,int,int); }
-keepclassmembers class android.support.v4.content.res.TypedArrayUtils { java.lang.String getString(android.content.res.TypedArray,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$2 { void <init>(ar.rulosoft.mimanganu.componentes.MangaFolderSelect); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void drawableStateChanged(); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void awaitFinalization(); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(java.lang.ref.FinalizerReference$1); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { android.content.res.ColorStateList getSupportBackgroundTintList(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl { void <init>(); }
-keepclassmembers class android.support.v4.content.res.TypedArrayUtils { java.lang.CharSequence getText(android.content.res.TypedArray,int,int); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.support.v4.view.LayoutInflaterFactory getLayoutInflaterFactory(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { boolean hasOverlappingRendering(); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$Api23PopupWindowImpl { void setWindowLayoutType(android.widget.PopupWindow,int); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { android.graphics.PorterDuff$Mode getSupportBackgroundTintMode(); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean isChildOrHidden(android.view.View); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean isStateAtLeast(int); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(); }
-keepclassmembers class android.text.style.SpellCheckSpan { void setSpellCheckInProgress(boolean); }
-keepclassmembers class android.support.v7.widget.AppCompatImageView { void setSupportBackgroundTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.text.style.SpellCheckSpan { boolean isSpellCheckInProgress(); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { long getNanoTime(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { android.support.v7.widget.RecyclerView$LayoutManager getLayoutManager(); }
-keepclassmembers class android.database.CursorWindow { int getStartPosition(); }
-keepclassmembers class android.database.CursorWindow { void setStartPosition(int); }
-keepclassmembers class android.database.CursorWindow { int getNumRows(); }
-keepclassmembers class android.database.CursorWindow { java.lang.String getName(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void invalidateGlows(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$CheckForAppUpdates { void onPreExecute(); }
-keepclassmembers class android.view.animation.PathInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.database.CursorWindow { void clear(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$1$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$1); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isAttachedToWindow(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isAccessibilityEnabled(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isNestedScrollingEnabled(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean isComputingLayout(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$1$1 { void run(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void postShowOverflowMenu(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean shouldLayout(android.view.View); }
-keepclassmembers class java.util.AbstractCollection { void <init>(); }
-keepclassmembers class java.util.AbstractCollection { boolean containsAll(java.util.Collection); }
-keepclassmembers class java.util.AbstractCollection { boolean remove(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.AbstractCollection { boolean addAll(java.util.Collection); }
-keepclassmembers class java.util.AbstractCollection { boolean removeAll(java.util.Collection); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.util.AbstractCollection { boolean isEmpty(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetEnd(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getContentInsetStart(); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetEnd(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.ORAddress); }
-keepclassmembers class android.text.TextUtils { char[] obtain(int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x501.Name); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetLeft(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onChildAttachedToWindow(android.view.View); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(char); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetRight(); }
-keepclassmembers class android.text.TextUtils { void recycle(char[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onChildDetachedFromWindow(android.view.View); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { int getCurrentContentInsetStart(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.Menu getMenu(); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getNavigationContentDescription(); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.graphics.drawable.Drawable getNavigationIcon(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.Object getName(); }
-keepclassmembers class android.database.CursorWindow { void onAllReferencesReleased(); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getSubtitle(); }
-keepclassmembers class android.support.v7.widget.Toolbar { java.lang.CharSequence getTitle(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int hashCode(); }
-keepclassmembers class android.database.CursorWindow { void recordClosingOfWindow(long); }
-keepclassmembers class android.support.v7.widget.Toolbar { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { boolean verify(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean isOverflowMenuShowing(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void inflateMenu(int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$18$1 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment$18); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void moveToState(android.support.v4.app.Fragment); }
-keepclassmembers class android.support.v4.widget.CompoundButtonCompatApi23 { android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.widget.Toolbar$SavedState$1 { void <init>(); }
-keepclassmembers class android.view.HardwareCanvas { boolean isHardwareAccelerated(); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.widget.DrawableUtils { void fixVectorDrawableTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.HardwareCanvas { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] getEncoded(); }
-keepclassmembers class android.view.HardwareCanvas { void drawRenderNode(android.view.RenderNode); }
-keepclassmembers class android.os.BaseBundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onMeasure(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class android.text.TextUtils { int getLayoutDirectionFromFirstChar(java.util.Locale); }
-keepclassmembers class android.text.TextUtils { void access$000(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.os.BaseBundle { boolean isParcelled(); }
-keepclassmembers class android.os.BaseBundle { boolean isEmpty(); }
-keepclassmembers class android.os.BaseBundle { int size(); }
-keepclassmembers class android.os.BaseBundle { boolean containsKey(java.lang.String); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onScrolled(int,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onScrollStateChanged(int); }
-keepclassmembers class android.os.BaseBundle { void clear(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$6 { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$6 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.os.BaseBundle { void remove(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { java.util.Set keySet(); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$AvdcInflateDelegate { void <init>(); }
-keepclassmembers class java.util.Properties { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void putInt(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int access$100(org.apache.harmony.security.x509.GeneralName); }
-keepclassmembers class android.os.BaseBundle { void putBoolean(java.lang.String,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] access$202(org.apache.harmony.security.x509.GeneralName,byte[]); }
-keepclassmembers class android.os.BaseBundle { void putFloat(java.lang.String,float); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.Object access$000(org.apache.harmony.security.x509.GeneralName); }
-keepclassmembers class java.util.Properties { void <init>(java.util.Properties); }
-keepclassmembers class android.os.BaseBundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.os.BaseBundle { void putString(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.FragmentState$1 { void <init>(); }
-keepclassmembers class android.widget.AbsSeekBar { void setKeyProgressIncrement(int); }
-keepclassmembers class android.widget.AbsSeekBar { int getKeyProgressIncrement(); }
-keepclassmembers class android.os.BaseBundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class ar.rulosoft.mimanganu.ServerFilteredNavigationFragment$1 { void <init>(ar.rulosoft.mimanganu.ServerFilteredNavigationFragment); }
-keepclassmembers class android.widget.AbsSeekBar { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.os.BaseBundle { void putSerializable(java.lang.String,java.io.Serializable); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Time { void <init>(int); }
-keepclassmembers class android.widget.TextView$SavedState$1 { void <init>(); }
-keepclassmembers class android.widget.AbsSeekBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.os.BaseBundle { void putIntArray(java.lang.String,int[]); }
-keepclassmembers class android.widget.AbsSeekBar { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplBase { void <init>(); }
-keepclassmembers class android.support.v4.text.ICUCompat$ICUCompatImplBase { java.lang.String maximizeAndGetScript(java.util.Locale); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal); }
-keepclassmembers class android.support.graphics.drawable.PathParser$ExtractFloatResult { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void putStringArray(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.os.BaseBundle { void putCharSequenceArray(java.lang.String,java.lang.CharSequence[]); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.widget.AbsSeekBar { void onProgressRefresh(float,boolean); }
-keepclassmembers class android.os.BaseBundle { boolean getBoolean(java.lang.String); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal,android.hardware.display.DisplayManagerGlobal$1); }
-keepclassmembers class android.widget.AbsListView$MultiChoiceModeWrapper { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void postAnimationRunner(); }
-keepclassmembers class android.widget.AbsListView$MultiChoiceModeWrapper { void setWrapped(android.widget.AbsListView$MultiChoiceModeListener); }
-keepclassmembers class java.util.Collections$UnmodifiableRandomAccessList { void <init>(java.util.List); }
-keepclassmembers class android.widget.AbsSeekBar { void onResolveDrawables(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void removeAndRecycleViews(); }
-keepclassmembers class android.widget.AbsSeekBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void recordAnimationInfoIfBouncedHiddenView(android.support.v7.widget.RecyclerView$ViewHolder,android.support.v7.widget.RecyclerView$ItemAnimator$ItemHolderInfo); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { void <init>(libcore.util.ZoneInfoDB$TzData,int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { libcore.util.ZoneInfo create(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.widget.AbsListView$MultiChoiceModeWrapper { void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setWhen(long); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setShowWhen(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSmallIcon(int,int); }
-keepclassmembers class sun.misc.Unsafe { void <init>(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setUsesChronometer(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.Toolbar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSubText(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setNumber(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setCollapsible(boolean); }
-keepclassmembers class android.widget.AbsSeekBar { void setHotspot(float,float); }
-keepclassmembers class android.widget.AbsSeekBar { void attemptClaimDrag(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentText(java.lang.CharSequence); }
-keepclassmembers class android.widget.AbsSeekBar { void onStartTrackingTouch(); }
-keepclassmembers class android.widget.AbsSeekBar { void onStopTrackingTouch(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContent(android.widget.RemoteViews); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setContentInsetsRelative(int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentIntent(android.app.PendingIntent); }
-keepclassmembers class sun.misc.Unsafe { void park(boolean,long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setProgress(int,int,boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentInfo(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void <init>(android.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.app.Fragment); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase$FilteredType { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void requestLayout(); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$DisallowIntercept { void <init>(android.support.v7.widget.ForwardingListener); }
-keepclassmembers class android.widget.AbsSeekBar { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setVibrate(long[]); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setOngoing(boolean); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$DisallowIntercept { void run(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setLights(int,int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationContentDescription(int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setOnlyAlertOnce(boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationIcon(int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setLocalOnly(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setDefaults(int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSound(android.net.Uri,int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setAutoCancel(boolean); }
-keepclassmembers class android.graphics.Point { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setCategory(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setPriority(int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setGroup(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setGroupSummary(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteOpenHelper { void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int); }
-keepclassmembers class android.graphics.Point { void set(int,int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setOnMenuItemClickListener(android.support.v7.widget.Toolbar$OnMenuItemClickListener); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSortKey(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setNavigationOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder addPerson(java.lang.String); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setExtras(android.os.Bundle); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setStyle(android.app.Notification$Style); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder addAction(android.app.Notification$Action); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setPublicVersion(android.app.Notification); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setAdapter(android.support.v7.widget.RecyclerView$Adapter); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setVisibility(int); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setSubtitleTextAppearance(android.content.Context,int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.zip.ZipFile { void close(); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setColor(int); }
-keepclassmembers class android.app.Notification$Builder { boolean addProfileBadge(android.widget.RemoteViews,int); }
-keepclassmembers class android.database.sqlite.SQLiteOpenHelper { android.database.sqlite.SQLiteDatabase getWritableDatabase(); }
-keepclassmembers class android.support.v4.util.ArraySet { void <init>(); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setTitleTextColor(int); }
-keepclassmembers class android.support.v4.util.ArraySet { void <init>(int,boolean); }
-keepclassmembers class android.support.v7.widget.Toolbar { void setTitleTextAppearance(android.content.Context,int); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { void <init>(java.io.InputStream); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void setBlocker(java.lang.Thread,java.lang.Object); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void park(java.lang.Object); }
-keepclassmembers class java.util.zip.ZipFile { java.lang.String getName(); }
-keepclassmembers class java.lang.Thread { java.lang.ClassLoader getContextClassLoader(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void unpark(java.lang.Thread); }
-keepclassmembers class java.lang.Thread { long getId(); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews applyStandardTemplate(int); }
-keepclassmembers class java.util.zip.ZipFile { void access$000(java.util.zip.ZipFile); }
-keepclassmembers class java.lang.Thread { int getPriority(); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$State getState(); }
-keepclassmembers class java.lang.Thread { java.lang.String getName(); }
-keepclassmembers class android.view.View$2 { void <init>(android.view.View,int); }
-keepclassmembers class android.view.View$2 { boolean apply(android.view.View); }
-keepclassmembers class java.lang.Thread { java.lang.ThreadGroup getThreadGroup(); }
-keepclassmembers class android.database.sqlite.SQLiteOpenHelper { void onConfigure(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void noteStateNotSaved(); }
-keepclassmembers class android.database.sqlite.SQLiteOpenHelper { void onOpen(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$5 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class java.lang.Thread { boolean isDaemon(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void smoothScrollBy(int,int); }
-keepclassmembers class android.text.Layout$TabStops { void <init>(int,java.lang.Object[]); }
-keepclassmembers class android.support.v7.widget.RecyclerView { boolean startNestedScroll(int); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void stopNestedScroll(); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void stopScroll(); }
-keepclassmembers class java.lang.Thread { void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { boolean isAutoMirrored(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void setAutoMirrored(boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { java.lang.String access$000(java.util.Map,java.lang.String); }
-keepclassmembers class java.lang.Thread { void sleep(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView { void setScrollState(int); }
-keepclassmembers class java.lang.Thread { void join(); }
-keepclassmembers class android.app.Notification$Builder { boolean hasThreeLines(); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { void performPendingDeferredStart(android.support.v4.app.Fragment); }
-keepclassmembers class java.lang.Thread { void start(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class android.support.v4.app.FragmentManagerImpl { boolean popBackStackImmediate(); }
-keepclassmembers class android.app.Notification$Builder { void resetStandardTemplateWithActions(android.widget.RemoteViews); }
-keepclassmembers class java.lang.Thread { boolean holdsLock(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(android.graphics.drawable.LayerDrawable$ChildDrawable,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class android.support.v4.util.ArraySet { boolean isEmpty(); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeContentView(); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeTickerView(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$13 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment,android.support.v7.preference.SwitchPreferenceCompat); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class java.util.WeakHashMap { void <init>(); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeHeadsUpContentView(); }
-keepclassmembers class android.app.Notification$Builder { boolean isLegacy(); }
-keepclassmembers class java.util.WeakHashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[]); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Authenticator authenticator(); }
-keepclassmembers class android.app.Notification$Builder { void processLegacyAction(android.app.Notification$Action,android.widget.RemoteViews); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.CertificatePinner certificatePinner(); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List connectionSpecs(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$10 { void <init>(ar.rulosoft.mimanganu.ReaderFragment,android.widget.CheckBox,ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.ConnectionPool connectionPool(); }
-keepclassmembers class okhttp3.OkHttpClient { int connectTimeoutMillis(); }
-keepclassmembers class android.support.v4.util.ArraySet { int size(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.CookieJar cookieJar(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Dispatcher dispatcher(); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence processLegacyText(java.lang.CharSequence); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.EventListener$Factory eventListenerFactory(); }
-keepclassmembers class okhttp3.OkHttpClient { boolean followSslRedirects(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Dns dns(); }
-keepclassmembers class okhttp3.OkHttpClient { boolean followRedirects(); }
-keepclassmembers class android.app.Notification$Builder { void processSmallIconAsLarge(int,android.widget.RemoteViews); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.internal.cache.InternalCache internalCache(); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.HostnameVerifier hostnameVerifier(); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List networkInterceptors(); }
-keepclassmembers class okhttp3.ResponseBody { void <init>(); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List interceptors(); }
-keepclassmembers class okhttp3.ResponseBody { java.nio.charset.Charset charset(); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { boolean hasSimpleTarget(android.transition.Transition); }
-keepclassmembers class android.app.Notification$Builder { void processLargeLegacyIcon(android.graphics.Bitmap,android.widget.RemoteViews); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21 { boolean isNullOrEmpty(java.util.List); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Authenticator proxyAuthenticator(); }
-keepclassmembers class okhttp3.OkHttpClient { java.net.Proxy proxy(); }
-keepclassmembers class java.text.Format$Field { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List protocols(); }
-keepclassmembers class java.lang.Thread { void unpark(); }
-keepclassmembers class android.support.v4.util.ArraySet { java.lang.Object valueAt(int); }
-keepclassmembers class okhttp3.OkHttpClient { java.net.ProxySelector proxySelector(); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.SSLSocketFactory sslSocketFactory(); }
-keepclassmembers class okhttp3.OkHttpClient { boolean retryOnConnectionFailure(); }
-keepclassmembers class okhttp3.OkHttpClient { int readTimeoutMillis(); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.SocketFactory socketFactory(); }
-keepclassmembers class okhttp3.OkHttpClient { int writeTimeoutMillis(); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.WeakHashMap { boolean isEmpty(); }
-keepclassmembers class okhttp3.ResponseBody { java.io.InputStream byteStream(); }
-keepclassmembers class java.io.OutputStreamWriter { void close(); }
-keepclassmembers class okhttp3.ResponseBody { void close(); }
-keepclassmembers class java.io.OutputStreamWriter { void flushBytes(boolean); }
-keepclassmembers class okhttp3.ResponseBody { java.lang.String string(); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int,java.util.concurrent.TimeUnit$1); }
-keepclassmembers class java.io.OutputStreamWriter { void flush(); }
-keepclassmembers class java.io.OutputStreamWriter { void convert(java.nio.CharBuffer); }
-keepclassmembers class android.app.Notification$Builder { int resolveColor(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl$1 { void <init>(android.support.v7.view.menu.MenuItemImpl); }
-keepclassmembers class java.io.OutputStreamWriter { void drainEncoder(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void <init>(org.xml.sax.Attributes); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[],org.apache.harmony.security.x509.TBSCertificate$1); }
-keepclassmembers class java.util.ResourceBundle$MissingBundle { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { int getLength(); }
-keepclassmembers class java.util.AbstractList { void <init>(); }
-keepclassmembers class android.support.design.widget.BaseTransientBottomBar$1 { void <init>(); }
-keepclassmembers class java.util.WeakHashMap { int size(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { int access$100(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { java.math.BigInteger access$200(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class java.util.AbstractList { void clear(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x501.Name access$400(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.Validity access$500(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.SubjectPublicKeyInfo access$700(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { boolean[] access$800(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class java.lang.Process { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { boolean[] access$900(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void end(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { float getAnimatedFraction(); }
-keepclassmembers class java.nio.ByteBuffer { void <init>(int,long); }
-keepclassmembers class java.util.AbstractList { boolean add(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void setDuration(long); }
-keepclassmembers class java.nio.ByteBuffer { byte[] array(); }
-keepclassmembers class java.nio.ByteBuffer { int arrayOffset(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void setFloatValues(float,float); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void startInternal(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class java.util.TreeMap$Relation { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.animation.Animation$Description { void <init>(); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.widget.AbsListView$2 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class android.text.style.ClickableSpan { void <init>(); }
-keepclassmembers class android.support.v4.widget.SwipeRefreshLayout$5 { void <init>(android.support.v4.widget.SwipeRefreshLayout); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { boolean shouldRecycleViewType(int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification getNotification(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplGingerbread { void cancel(); }
-keepclassmembers class android.app.Notification$Builder { int getInboxLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification build(); }
-keepclassmembers class android.app.Notification$Builder { int getBigPictureLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { int getBaseLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { int getBigTextLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews access$700(android.app.Notification$Builder,int); }
-keepclassmembers class android.app.Notification$Builder { int getBigBaseLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { int getActionLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$602(android.app.Notification$Builder,java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { int getActionTombstoneLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { android.content.Context access$1000(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$800(android.app.Notification$Builder); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getScrapView(int); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$600(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$900(android.app.Notification$Builder,java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { boolean access$1100(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.Bitmap access$1202(android.app.Notification$Builder,android.graphics.Bitmap); }
-keepclassmembers class android.app.Notification$Builder { void access$1600(android.app.Notification$Builder,android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.Bitmap access$1200(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$1400(android.app.Notification$Builder); }
-keepclassmembers class android.view.View$14 { void <init>(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$1402(android.app.Notification$Builder,java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { int access$1300(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { boolean access$1500(android.app.Notification$Builder,android.widget.RemoteViews,int); }
-keepclassmembers class android.support.v7.util.BatchingListUpdateCallback { void <init>(android.support.v7.util.ListUpdateCallback); }
-keepclassmembers class android.app.Notification$Builder { void access$1800(android.app.Notification$Builder,android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { void access$2100(android.app.Notification$Builder,android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByFivePow(java.math.BigInteger,int); }
-keepclassmembers class android.app.Notification$Builder { int access$1700(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews access$2200(android.app.Notification$Builder,int,boolean); }
-keepclassmembers class android.support.v7.util.BatchingListUpdateCallback { void dispatchLastEvent(); }
-keepclassmembers class android.app.Notification$Builder { java.util.ArrayList access$1900(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { boolean access$2300(android.app.Notification$Builder); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void <init>(android.widget.TextView); }
-keepclassmembers class android.app.Notification$Builder { boolean access$2400(android.app.Notification$Builder); }
-keepclassmembers class java.util.EmptyStackException { void <init>(); }
-keepclassmembers class android.app.Notification$Builder { int access$2000(android.app.Notification$Builder); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void applyCompoundDrawablesTints(); }
-keepclassmembers class android.support.v7.util.BatchingListUpdateCallback { void onMoved(int,int); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl { int getContentChangeTypes(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.zip.ZipException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl { void <init>(); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompatApi21 { java.lang.Object getMediaController(android.app.Activity); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventKitKatImpl { void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { void <init>(); }
-keepclassmembers class android.support.v7.widget.AppCompatTextHelperV17 { void loadFromAttributes(android.util.AttributeSet,int); }
-keepclassmembers class android.util.Log$1 { void onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure,boolean); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearAccessibilityFromScrap(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compare(org.apache.harmony.security.x501.AttributeTypeAndValue,org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class android.support.v4.text.TextUtilsCompatJellybeanMr1 { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class android.support.v4.app.Fragment$InstantiationException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class java.util.regex.Matcher { void <init>(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class android.util.Log$1 { void <init>(); }
-keepclassmembers class android.view.AbsSavedState { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$5 { java.lang.Object initialValue(); }
-keepclassmembers class java.io.ObjectStreamClass$5 { void <init>(); }
-keepclassmembers class okhttp3.Handshake { void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List); }
-keepclassmembers class android.view.AbsSavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.AbsSavedState { android.os.Parcelable getSuperState(); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.view.AbsSavedState$1); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(); }
-keepclassmembers class android.support.v4.text.BidiFormatter { void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.text.BidiFormatter { void <init>(boolean,int,android.support.v4.text.TextDirectionHeuristicCompat,android.support.v4.text.BidiFormatter$1); }
-keepclassmembers class android.support.v4.text.BidiFormatter { boolean access$000(java.util.Locale); }
-keepclassmembers class okhttp3.Handshake { okhttp3.CipherSuite cipherSuite(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void <init>(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { boolean isMarginRelative(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class android.support.v4.text.BidiFormatter { boolean isRtlLocale(java.util.Locale); }
-keepclassmembers class java.util.regex.Matcher { void resetForInput(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher region(int,int); }
-keepclassmembers class java.util.regex.Matcher { java.lang.StringBuffer appendTail(java.lang.StringBuffer); }
-keepclassmembers class okhttp3.Handshake { java.util.List peerCertificates(); }
-keepclassmembers class ar.rulosoft.mimanganu.DownloadsFragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class ar.rulosoft.mimanganu.DownloadsFragment { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.DownloadsFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { void <init>(java.util.WeakHashMap,java.util.WeakHashMap$Entry$Type); }
-keepclassmembers class java.util.regex.Matcher { boolean find(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { java.lang.Object get(int); }
-keepclassmembers class android.support.v4.text.BidiFormatter { java.lang.CharSequence unicodeWrap(java.lang.CharSequence); }
-keepclassmembers class ar.rulosoft.mimanganu.DownloadsFragment { void onPause(); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAt(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment { void <init>(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void delete(int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment { android.content.SharedPreferences access$000(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class java.util.regex.Matcher { boolean matches(); }
-keepclassmembers class javax.net.SocketFactory { void <init>(); }
-keepclassmembers class android.content.res.ConstantState { void <init>(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { java.lang.Object get(int,java.lang.Object); }
-keepclassmembers class java.lang.CloneNotSupportedException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.Keyframe { void <init>(); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class android.animation.Keyframe { boolean hasValue(); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { int keyAt(int); }
-keepclassmembers class android.animation.Keyframe { boolean valueWasSetOnStart(); }
-keepclassmembers class android.animation.Keyframe { void setValueWasSetOnStart(boolean); }
-keepclassmembers class android.animation.Keyframe { float getFraction(); }
-keepclassmembers class android.animation.Keyframe { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class org.acra.dialog.BaseCrashReportDialog { void <init>(); }
-keepclassmembers class android.animation.Keyframe { android.animation.TimeInterpolator getInterpolator(); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String group(); }
-keepclassmembers class java.util.regex.Matcher { int end(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.R2LReader { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { void remove(int); }
-keepclassmembers class java.util.regex.Matcher { int groupCount(); }
-keepclassmembers class java.util.regex.Matcher { int start(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { int size(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController { void installContent(); }
-keepclassmembers class com.android.internal.app.AlertController { int selectContentView(); }
-keepclassmembers class android.support.v4.util.SparseArrayCompat { java.lang.Object valueAt(int); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment { android.support.v4.app.Fragment getCallbackFragment(); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateProxyClass(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateClass(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.android.internal.app.AlertController { void setTitle(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.app.AlertController { void setMessage(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(int); }
-keepclassmembers class java.io.ObjectOutputStream { void close(); }
-keepclassmembers class com.android.internal.app.AlertController { void setCustomTitle(android.view.View); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(int); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View,int,int,int,int); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(char[],int,int); }
-keepclassmembers class java.io.ObjectOutputStream { int registerObjectWritten(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { int dumpCycle(java.lang.Object); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.ObjectOutputStream { void removeUnsharedReference(java.lang.Object,int); }
-keepclassmembers class java.io.ObjectOutputStream { java.lang.Object replaceObject(java.lang.Object); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$AnimatorListenerAdapter { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream { void flush(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean doCheck(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$AnimatorListenerAdapter { void onAnimationStart(android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompat$AnimatorListenerAdapter { void onAnimationCancel(android.support.design.widget.ValueAnimatorCompat); }
-keepclassmembers class com.android.internal.app.AlertController { void setInverseBackgroundForced(boolean); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils { void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class android.support.design.widget.ViewGroupUtils { void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect); }
-keepclassmembers class java.io.ObjectOutputStream { void writeBoolean(boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl { void <init>(); }
-keepclassmembers class android.support.v7.app.WindowDecorActionBar$3 { void <init>(android.support.v7.app.WindowDecorActionBar); }
-keepclassmembers class java.io.ObjectOutputStream { void writeCyclicReference(int); }
-keepclassmembers class ar.rulosoft.custompref.ArrayAdapterDirectory { void <init>(android.content.Context,int,java.util.ArrayList); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class java.io.ObjectOutputStream { void resetState(); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.animation.ObjectAnimator { void setPropertyName(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.animation.ObjectAnimator { void setProperty(android.util.Property); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isEnabled(); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,android.util.Property); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isTouchExplorationEnabled(); }
-keepclassmembers class android.animation.PathKeyframes$4 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder insert(int,java.lang.CharSequence); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence); }
-keepclassmembers class java.io.ObjectOutputStream { void writeInt(int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.TimeZone { void <init>(); }
-keepclassmembers class java.util.TimeZone { java.lang.String getDisplayName(boolean,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(char); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.IAccessibilityManager getServiceLocked(); }
-keepclassmembers class android.util.Property { java.lang.String getName(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { java.lang.Object access$300(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class okio.AsyncTimeout$2 { void <init>(okio.AsyncTimeout,okio.Source); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$100(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$400(android.view.accessibility.AccessibilityManager,int); }
-keepclassmembers class android.util.Property { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$200(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { void <init>(android.support.v7.widget.RecyclerView$LayoutManager,android.support.v7.widget.OrientationHelper$1); }
-keepclassmembers class okio.AsyncTimeout$2 { void close(); }
-keepclassmembers class okio.AsyncTimeout$2 { okio.Timeout timeout(); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 { void <init>(); }
-keepclassmembers class okio.AsyncTimeout$2 { long read(okio.Buffer,long); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompat$LayoutInflaterCompatImplV21 { void setFactory(android.view.LayoutInflater,android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(); }
-keepclassmembers class android.widget.CheckBox { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v7.widget.OrientationHelper { void onLayoutComplete(); }
-keepclassmembers class android.text.DynamicLayout { int[] getBlockEndLines(); }
-keepclassmembers class android.animation.ObjectAnimator { void setAutoCancel(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.DynamicLayout { int[] getBlockIndices(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(android.graphics.drawable.VectorDrawable$VClipPath); }
-keepclassmembers class android.text.DynamicLayout { int getIndexFirstChangedBlock(); }
-keepclassmembers class android.text.DynamicLayout { int getNumberOfBlocks(); }
-keepclassmembers class android.widget.CheckBox { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.text.DynamicLayout { void setIndexFirstChangedBlock(int); }
-keepclassmembers class android.text.DynamicLayout { int getLineDescent(int); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl { void <init>(); }
-keepclassmembers class android.text.DynamicLayout { int getLineTop(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { boolean isClipPath(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$KitKatPopupWindowImpl { void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewClass(java.lang.Class,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader$1 { void onPageScrollStateChanged(int); }
-keepclassmembers class java.io.InvalidObjectException { void <init>(java.lang.String); }
-keepclassmembers class libcore.net.url.FileHandler { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeClassDescriptor(java.io.ObjectStreamClass); }
-keepclassmembers class libcore.net.url.FileHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNewException(java.lang.Exception); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisStart(int); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisCount(int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.L2RPagedReader$1 { void onPageSelected(int); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.Object getTarget(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator setDuration(long); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$1 { void <init>(android.support.v7.widget.RecyclerView$LayoutManager); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$1 { android.view.View getChildAt(int); }
-keepclassmembers class java.util.TimeZone { java.lang.String getID(); }
-keepclassmembers class java.nio.CharArrayBuffer { void <init>(char[]); }
-keepclassmembers class java.nio.CharArrayBuffer { void <init>(int,char[],int,boolean); }
-keepclassmembers class android.support.v7.widget.RecyclerView$LayoutManager$1 { int getParentStart(); }
-keepclassmembers class dalvik.system.BlockGuard$2 { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$2 { dalvik.system.BlockGuard$Policy initialValue(); }
-keepclassmembers class java.util.concurrent.CountDownLatch { void await(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject(java.lang.Object); }
-keepclassmembers class dalvik.system.BlockGuard$2 { java.lang.Object initialValue(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNull(); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharBuffer asReadOnlyBuffer(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeUnshared(java.lang.Object); }
-keepclassmembers class java.util.TreeMap$EntrySet { void <init>(java.util.TreeMap); }
-keepclassmembers class java.util.TreeMap$EntrySet { int size(); }
-keepclassmembers class java.util.concurrent.CountDownLatch { void countDown(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject(java.lang.Object,boolean); }
-keepclassmembers class libcore.icu.NativeNormalizer { java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$000(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator clone(); }
-keepclassmembers class java.util.zip.ZipEntry { java.lang.String getName(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page$SetImageTask { void <init>(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class java.util.zip.ZipEntry { long getSize(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void start(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void stop(); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1200(com.android.internal.app.AlertController); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getNumberOfFrames(); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1300(com.android.internal.app.AlertController); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean isRunning(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void run(); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1400(com.android.internal.app.AlertController); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getDuration(int); }
-keepclassmembers class java.io.ObjectOutputStream { java.io.ObjectStreamClass writeEnumDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.Drawable getFrame(int); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListAdapter access$1602(com.android.internal.app.AlertController,android.widget.ListAdapter); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1702(com.android.internal.app.AlertController,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.app.Notification$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListView access$1102(com.android.internal.app.AlertController,android.widget.ListView); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1500(com.android.internal.app.AlertController); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(java.util.zip.ZipEntry); }
-keepclassmembers class org.acra.builder.LastActivityManager$1 { void <init>(org.acra.builder.LastActivityManager); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { void <init>(int,int); }
-keepclassmembers class java.util.zip.ZipEntry { java.lang.String toString(); }
-keepclassmembers class org.acra.log.AndroidLogDelegate { void <init>(); }
-keepclassmembers class org.acra.log.AndroidLogDelegate { int d(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.acra.log.AndroidLogDelegate { int e(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { void <init>(android.content.Context,int); }
-keepclassmembers class org.acra.log.AndroidLogDelegate { int d(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { void writeStreamHeader(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$ResizePopupRunnable { void <init>(android.support.v7.widget.ListPopupWindow); }
-keepclassmembers class org.acra.log.AndroidLogDelegate { int i(java.lang.String,java.lang.String); }
-keepclassmembers class org.acra.log.AndroidLogDelegate { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.acra.log.AndroidLogDelegate { int v(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class java.util.zip.ZipEntry { int hashCode(); }
-keepclassmembers class android.support.v7.widget.ListPopupWindow$ResizePopupRunnable { void run(); }
-keepclassmembers class org.acra.collector.LogCatCollector$1 { void <init>(org.acra.collector.LogCatCollector,java.lang.String); }
-keepclassmembers class org.acra.collector.LogCatCollector$1 { boolean apply(java.lang.String); }
-keepclassmembers class org.acra.log.AndroidLogDelegate { int w(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable$2 { void <init>(okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.util.MapCollections$KeySet { void <init>(android.util.MapCollections); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class okhttp3.internal.http2.Http2Connection$ReaderRunnable$2 { void execute(); }
-keepclassmembers class org.acra.log.AndroidLogDelegate { int w(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader$Page$SetImageTask { void onPreExecute(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void clearMutated(); }
-keepclassmembers class java.util.ArrayList { void <init>(); }
-keepclassmembers class android.util.MapCollections$KeySet { java.lang.Object[] toArray(); }
-keepclassmembers class org.acra.log.AndroidLogDelegate { int w(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources,android.graphics.drawable.AnimationDrawable$1); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class android.database.StaleDataException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.ListMenuPresenter { void setCallback(android.support.v7.view.menu.MenuPresenter$Callback); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$BasePopupWindowImpl { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class java.util.ArrayList { java.lang.Object get(int); }
-keepclassmembers class java.util.ArrayList { int size(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class java.util.ArrayList { boolean isEmpty(); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class android.widget.CompoundButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void jumpToCurrentState(); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.lang.Byte { byte byteValue(); }
-keepclassmembers class java.lang.Byte { void <init>(byte); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setAlpha(int); }
-keepclassmembers class java.util.AbstractSequentialList { void <init>(); }
-keepclassmembers class java.lang.Byte { int compare(byte,byte); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Byte); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.security.spec.X509EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class android.widget.CompoundButton { void toggle(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getOpacity(); }
-keepclassmembers class java.lang.Byte { int hashCode(); }
-keepclassmembers class android.widget.CompoundButton { boolean performClick(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.lang.Byte { int intValue(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setRippleActive(boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.util.AbstractSequentialList { java.util.Iterator iterator(); }
-keepclassmembers class android.widget.CompoundButton { void setChecked(boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.widget.CompoundButton { boolean isChecked(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isProjected(); }
-keepclassmembers class java.lang.Byte { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isStateful(); }
-keepclassmembers class java.lang.Byte { java.lang.String toHexString(byte,boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setBackgroundActive(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.CompoundButton { void setButtonDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void cancel(); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void start(android.support.design.widget.StateListAnimator$Tuple); }
-keepclassmembers class android.widget.CompoundButton { void setButtonTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setPaddingMode(int); }
-keepclassmembers class android.widget.TextView$2 { void <init>(android.widget.TextView); }
-keepclassmembers class android.support.design.widget.StateListAnimator { void jumpToCurrentState(); }
-keepclassmembers class android.widget.CompoundButton { void applyButtonTint(); }
-keepclassmembers class java.util.ArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundExit(); }
-keepclassmembers class android.widget.CompoundButton { int getHorizontalOffsetForDrawables(); }
-keepclassmembers class android.widget.CompoundButton { void setButtonTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.Canvas$CanvasFinalizer { void <init>(long); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void clearHotspots(); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void clear(); }
-keepclassmembers class org.acra.builder.ReportExecutor$1 { void run(); }
-keepclassmembers class org.acra.builder.ReportExecutor$1 { void <init>(org.acra.builder.ReportExecutor,org.acra.builder.ReportExecutor$TimeHelper); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.content.res.AppCompatColorStateListInflater { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void invalidateSelf(); }
-keepclassmembers class android.widget.CompoundButton { void drawableStateChanged(); }
-keepclassmembers class android.widget.CompoundButton { void jumpDrawablesToCurrentState(); }
-keepclassmembers class org.acra.collector.CustomDataCollector { org.acra.model.Element collect(org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin$3 { void <init>(ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.LoginDialog$AsyncLogin$3 { void run(); }
-keepclassmembers class android.net.Uri$PathPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void <init>(byte[]); }
-keepclassmembers class android.widget.CompoundButton { void drawableHotspotChanged(float,float); }
-keepclassmembers class java.lang.reflect.Field$1 { void <init>(); }
-keepclassmembers class android.text.style.TypefaceSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.ViewStubCompat { void onMeasure(int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawMask(android.graphics.Canvas); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators$4 { void <init>(); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart fromDecoded(java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart fromEncoded(java.lang.String); }
-keepclassmembers class android.support.v4.app.SupportActivity { void putExtraData(android.support.v4.app.SupportActivity$ExtraData); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class java.nio.Buffer { int capacity(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources,android.graphics.drawable.RippleDrawable$1); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void initializeFromState(); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer clear(); }
-keepclassmembers class java.nio.Buffer { boolean hasRemaining(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SortAndLoadChapters { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { boolean access$500(ar.rulosoft.mimanganu.adapters.ChapterAdapter); }
-keepclassmembers class java.nio.Buffer { int limit(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { ar.rulosoft.mimanganu.MainActivity access$400(ar.rulosoft.mimanganu.adapters.ChapterAdapter); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer flip(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void clearSelection(); }
-keepclassmembers class java.nio.Buffer { int position(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { int getCount(); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer position(int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void <init>(java.lang.CharSequence,char[],char[]); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { int length(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { android.util.SparseBooleanArray getSelection(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$SortAndLoadChapters { void onPostExecute(java.lang.Void); }
-keepclassmembers class java.util.HashMap$HashMapEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.Object getKey(); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.Object getValue(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable delete(int,int); }
-keepclassmembers class okhttp3.internal.tls.BasicCertificateChainCleaner { boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable insert(int,java.lang.CharSequence); }
-keepclassmembers class okhttp3.internal.tls.BasicCertificateChainCleaner { void <init>(okhttp3.internal.tls.TrustRootIndex); }
-keepclassmembers class java.util.IllegalFormatCodePointException { void <init>(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void advanceHead(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class org.acra.util.ProcessFinisher$1 { void <init>(org.acra.util.ProcessFinisher,android.app.Activity); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void advanceTail(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(android.content.Context,int); }
-keepclassmembers class java.util.IllegalFormatCodePointException { java.lang.String getMessage(); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { boolean casCleanMe(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.view.ContextThemeWrapper { int getThemeResId(); }
-keepclassmembers class libcore.icu.NativeIDN { java.lang.String toASCII(java.lang.String,int); }
-keepclassmembers class libcore.icu.NativeIDN { java.lang.String toUnicode(java.lang.String,int); }
-keepclassmembers class android.view.ContextThemeWrapper { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class okhttp3.internal.tls.BasicCertificateChainCleaner { int hashCode(); }
-keepclassmembers class android.view.ContextThemeWrapper { void initializeTheme(); }
-keepclassmembers class android.view.ContextThemeWrapper { void setTheme(int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void remove(ar.rulosoft.mimanganu.componentes.Chapter); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void <init>(); }
-keepclassmembers class java.util.TimSort { void sort(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void replaceData(java.util.ArrayList); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int size(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.ChapterAdapter { void sort_chapters(java.util.Comparator); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void clean(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class rapid.decoder.cache.ResourcePool$RectFPool { void <init>(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class android.util.MapCollections { void <init>(); }
-keepclassmembers class android.util.MapCollections { boolean retainAllHelper(java.util.Map,java.util.Collection); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$DisabledElevationAnimation { float getTargetShadowSize(); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$AnyStrong { void <init>(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void <init>(org.apache.harmony.security.x509.DistributionPointName,org.apache.harmony.security.x509.ReasonFlags); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean isEmpty(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$DisabledElevationAnimation { void <init>(android.support.design.widget.FloatingActionButtonGingerbread); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsCACerts(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsAttributeCerts(boolean); }
-keepclassmembers class okhttp3.Response { void <init>(okhttp3.Response$Builder); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsUserCerts(boolean); }
-keepclassmembers class okhttp3.Response { int code(); }
-keepclassmembers class okhttp3.Response { okhttp3.ResponseBody body(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setIndirectCRL(boolean); }
-keepclassmembers class okhttp3.Response { okhttp3.CacheControl cacheControl(); }
-keepclassmembers class okhttp3.Response { java.lang.String header(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.Response { java.lang.String header(java.lang.String); }
-keepclassmembers class okhttp3.Response { boolean isSuccessful(); }
-keepclassmembers class okhttp3.Response { java.lang.String message(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class okhttp3.Response { okhttp3.Headers headers(); }
-keepclassmembers class okhttp3.Response { long receivedResponseAtMillis(); }
-keepclassmembers class okhttp3.Response { okhttp3.Request request(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onNetwork(); }
-keepclassmembers class okhttp3.Response { long sentRequestAtMillis(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { int getPolicyMask(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onReadFromDisk(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <init>(byte[],java.util.List); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onWriteToDisk(); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void <init>(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { java.util.List getAttributes(); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { int getCompoundPaddingLeft(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <init>(byte[],java.util.List,org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.RippleBackground$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.text.style.DynamicDrawableSpan { void <init>(int); }
-keepclassmembers class android.graphics.drawable.RippleBackground$2 { void <init>(android.graphics.drawable.RippleBackground); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void setButtonDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void setSupportButtonTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class ar.rulosoft.mimanganu.Exceptions.NoWifiException { void <init>(android.content.Context); }
-keepclassmembers class android.support.v7.widget.AppCompatRadioButton { void setSupportButtonTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet { void <init>(java.util.EnumMap); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void <init>(android.widget.AbsListView); }
-keepclassmembers class java.io.StringWriter { void flush(); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.io.StringWriter { java.lang.String toString(); }
-keepclassmembers class java.io.StringWriter { void close(); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void <clinit>(); }
-keepclassmembers class java.lang.IllegalThreadStateException { void <init>(); }
-keepclassmembers class java.io.StringWriter { void write(char[],int,int); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.lang.IllegalThreadStateException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void close(); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void setSupportOverlapAnchor(boolean); }
-keepclassmembers class android.support.v4.app.FragmentTransitionCompat21$5 { void <init>(java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { void <init>(int); }
-keepclassmembers class android.support.v7.widget.AppCompatPopupWindow { void init(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { java.lang.String getMessage(); }
-keepclassmembers class android.support.design.widget.CoordinatorLayout$SavedState$1 { void <init>(); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class java.util.concurrent.ExecutionException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { void initializeTheme(); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { void <init>(android.content.Context,int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v7.view.ContextThemeWrapper { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { java.lang.Object[] getBindArgs(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { android.database.sqlite.SQLiteSession getSession(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void onCorruption(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { android.database.sqlite.SQLiteDatabase getDatabase(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { int getConnectionFlags(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { java.lang.String[] getColumnNames(); }
-keepclassmembers class android.support.v7.preference.MultiSelectListPreferenceDialogFragmentCompat$1 { void <init>(android.support.v7.preference.MultiSelectListPreferenceDialogFragmentCompat); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { java.lang.String getSql(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void clearBindings(); }
-keepclassmembers class android.os.storage.IMountService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void onAllReferencesReleased(); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.net.URLConnection { boolean getDoInput(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void recycle(); }
-keepclassmembers class android.support.v4.app.FragmentState$1 { void <init>(); }
-keepclassmembers class android.view.animation.RotateAnimation { void initializePivotPoint(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setRoot(android.view.ViewGroup); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void getRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.CRLDistributionPoints$1); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class android.view.animation.RotateAnimation { void initialize(int,int,int,int); }
-keepclassmembers class android.app.Fragment$InstantiationException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { void <init>(android.content.Context); }
-keepclassmembers class okhttp3.internal.http2.ConnectionShutdownException { void <init>(); }
-keepclassmembers class android.support.v7.widget.LinearLayoutManager$SavedState$1 { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setOnlyAllowReadOnlyOperations(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { boolean isPreparedStatementInCache(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { boolean isPrimaryConnection(); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class java.net.URLConnection { boolean getUseCaches(); }
-keepclassmembers class android.support.v7.text.AllCapsTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setIsLayoutRtl(boolean); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromName(java.lang.String); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.graphics.FastBitmapDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.graphics.FastBitmapDrawable { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.graphics.FastBitmapDrawable { int getIntrinsicHeight(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.graphics.FastBitmapDrawable { int getMinimumHeight(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.graphics.FastBitmapDrawable { int getIntrinsicWidth(); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.graphics.FastBitmapDrawable { int getOpacity(); }
-keepclassmembers class org.acra.file.Directory { void <init>(java.lang.String,int); }
-keepclassmembers class org.acra.util.IOUtils { void safeClose(java.io.Closeable); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.graphics.FastBitmapDrawable { void setAlpha(int); }
-keepclassmembers class org.acra.util.IOUtils { java.lang.String streamToString(java.io.InputStream); }
-keepclassmembers class org.acra.util.IOUtils { java.lang.String streamToString(java.io.InputStream,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { void <init>(java.lang.String); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.graphics.FastBitmapDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int peek(); }
-keepclassmembers class android.support.v4.app.FragmentTransaction { void <init>(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.lang.String getFormatSpecifierText(); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { void <init>(okhttp3.OkHttpClient,boolean); }
-keepclassmembers class java.net.URLConnection { int getConnectTimeout(); }
-keepclassmembers class java.net.URLConnection { int getReadTimeout(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parsePrecision(java.util.Formatter$FormatToken); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseConversionType(java.util.Formatter$FormatToken); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$1 { void <init>(ar.rulosoft.mimanganu.componentes.MangaFolderSelect); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { void <init>(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int failNextInt(); }
-keepclassmembers class android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl { java.lang.Object newAccessiblityDelegateDefaultImpl(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int access$000(java.util.Formatter$FormatSpecifierParser); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseWidth(java.util.Formatter$FormatToken,int); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { void setCallStackTrace(java.lang.Object); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { void <init>(android.widget.TextView); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$Transferer { void <init>(); }
-keepclassmembers class android.support.v4.widget.TextViewCompat$Api23TextViewCompatImpl { void <init>(); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { android.text.Editable getEditable(); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String); }
-keepclassmembers class android.util.Log { int v(java.lang.String,java.lang.String); }
-keepclassmembers class org.acra.collector.SimpleValuesCollector { boolean shouldCollect(java.util.Set,org.acra.ReportField,org.acra.builder.ReportBuilder); }
-keepclassmembers class android.util.Log { int i(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int); }
-keepclassmembers class android.util.SizeF { float getHeight(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil { void access$000(android.support.v7.app.AppCompatActivity,java.lang.String,android.widget.ProgressBar,android.widget.TextView,android.content.DialogInterface); }
-keepclassmembers class android.util.SizeF { float getWidth(); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil { java.io.File access$102(java.io.File); }
-keepclassmembers class android.graphics.BitmapFactory { void setDensityFromOptions(android.graphics.Bitmap,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.widget.TextView$Marquee { void stop(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void post(java.lang.Runnable); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void releasePreparedStatement(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil { int access$202(int); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.TextView$Marquee { float getGhostOffset(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void finalizePreparedStatement(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.widget.TextView$Marquee { boolean isStopped(); }
-keepclassmembers class java.util.TreeMap { void <init>(); }
-keepclassmembers class java.util.Random { void <init>(long); }
-keepclassmembers class android.widget.TextView$Marquee { boolean isRunning(); }
-keepclassmembers class android.widget.TextView$Marquee { float getMaxFadeScroll(); }
-keepclassmembers class android.widget.TextView$Marquee { byte access$402(android.widget.TextView$Marquee,byte); }
-keepclassmembers class android.widget.TextView$Marquee { float getScroll(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void <init>(int); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.Comparator); }
-keepclassmembers class android.widget.TextView$Marquee { int access$700(android.widget.TextView$Marquee); }
-keepclassmembers class android.widget.TextView$Marquee { android.view.Choreographer access$600(android.widget.TextView$Marquee); }
-keepclassmembers class android.widget.TextView$Marquee { long access$502(android.widget.TextView$Marquee,long); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { boolean checkTag(int); }
-keepclassmembers class android.database.AbstractCursor { void onDeactivateOrClose(); }
-keepclassmembers class android.util.Log { int println(int,java.lang.String,java.lang.String); }
-keepclassmembers class android.support.design.widget.MathUtils { int constrain(int,int,int); }
-keepclassmembers class android.widget.TextView$Marquee { byte access$400(android.widget.TextView$Marquee); }
-keepclassmembers class android.database.AbstractCursor { void close(); }
-keepclassmembers class java.util.TreeMap { boolean isEmpty(); }
-keepclassmembers class java.util.TreeMap { int size(); }
-keepclassmembers class android.util.LogWriter { void flushBuilder(); }
-keepclassmembers class java.util.TreeMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class org.acra.builder.ReportExecutor$3 { void <init>(org.acra.builder.ReportExecutor); }
-keepclassmembers class java.util.TreeMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.database.AbstractCursor { boolean moveToPosition(int); }
-keepclassmembers class java.util.TreeMap { java.lang.Object putInternal(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.TreeMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.LogWriter { void flush(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void applyBlockGuardPolicy(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.database.AbstractCursor { boolean moveToFirst(); }
-keepclassmembers class java.util.Random { int nextInt(); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String toString(); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { android.support.v7.view.ViewPropertyAnimatorCompatSet setDuration(long); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { android.support.v7.view.ViewPropertyAnimatorCompatSet play(android.support.v4.view.ViewPropertyAnimatorCompat); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { boolean isCacheable(int); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node findByObject(java.lang.Object); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { android.support.v7.view.ViewPropertyAnimatorCompatSet setListener(android.support.v4.view.ViewPropertyAnimatorListener); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isDeclaredAnnotationPresent(java.lang.reflect.AnnotatedElement,java.lang.Class); }
-keepclassmembers class java.lang.String { void <init>(byte[]); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet { android.support.v7.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class java.util.TreeMap { void replaceInParent(java.util.TreeMap$Node,java.util.TreeMap$Node); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node findByEntry(java.util.Map$Entry); }
-keepclassmembers class java.nio.charset.MalformedInputException { void <init>(int); }
-keepclassmembers class java.lang.String { void <init>(byte[],java.lang.String); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.lang.String); }
-keepclassmembers class android.support.v4.view.LayoutInflaterCompatHC$FactoryWrapperHC { void <init>(android.support.v4.view.LayoutInflaterFactory); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void recyclePreparedStatement(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String access$300(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void access$200(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void <init>(int); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void setPolicyMask(int); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { int getPolicyMask(); }
-keepclassmembers class android.widget.FastScroller { void setEnabled(boolean); }
-keepclassmembers class android.support.v4.view.ViewCompat$Api24ViewCompatImpl { void <init>(); }
-keepclassmembers class android.widget.FastScroller { void setAlwaysShow(boolean); }
-keepclassmembers class android.widget.FastScroller { boolean isEnabled(); }
-keepclassmembers class android.widget.FastScroller { void onStateDependencyChanged(boolean); }
-keepclassmembers class android.widget.FastScroller { boolean isAlwaysShowEnabled(); }
-keepclassmembers class android.widget.FastScroller { int getWidth(); }
-keepclassmembers class android.widget.FastScroller { void stop(); }
-keepclassmembers class java.lang.String { void <init>(int,int,char[]); }
-keepclassmembers class android.widget.FastScroller { void onSizeChanged(int,int,int,int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { ar.rulosoft.mimanganu.adapters.MisMangasAdapter access$000(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class java.lang.String { void <init>(byte[],java.nio.charset.Charset); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(java.util.List,byte[]); }
-keepclassmembers class java.lang.String { void <init>(char[]); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { android.widget.GridView access$100(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { android.support.v4.widget.SwipeRefreshLayout access$400(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { ar.rulosoft.mimanganu.adapters.MisMangasAdapter access$002(ar.rulosoft.mimanganu.MainFragment,ar.rulosoft.mimanganu.adapters.MisMangasAdapter); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { ar.rulosoft.mimanganu.MainFragment$UpdateListTask access$200(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.CertificatePolicies$1); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { ar.rulosoft.mimanganu.MainFragment$UpdateListTask access$202(ar.rulosoft.mimanganu.MainFragment,ar.rulosoft.mimanganu.MainFragment$UpdateListTask); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { android.content.SharedPreferences access$300(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { ar.rulosoft.mimanganu.adapters.ServerRecAdapter access$500(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.widget.FastScroller { void measurePreview(android.view.View,android.graphics.Rect); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { int access$600(ar.rulosoft.mimanganu.MainFragment); }
-keepclassmembers class java.util.HashMap$EntrySet { int size(); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { int access$602(ar.rulosoft.mimanganu.MainFragment,int); }
-keepclassmembers class java.util.HashMap$EntrySet { boolean isEmpty(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void <init>(); }
-keepclassmembers class java.util.HashMap$EntrySet { void <init>(java.util.HashMap); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.lang.String); }
-keepclassmembers class java.util.HashMap$EntrySet { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class java.util.HashMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.String { byte[] getBytes(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.support.v7.app.NotificationCompat$LollipopExtender { void <init>(); }
-keepclassmembers class java.util.ConcurrentModificationException { void <init>(); }
-keepclassmembers class java.lang.String { int indexOf(int,int); }
-keepclassmembers class android.widget.FastScroller { void layoutThumb(); }
-keepclassmembers class android.support.v7.app.NotificationCompat$LollipopExtender { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy { void <init>(okhttp3.Request,okhttp3.Response); }
-keepclassmembers class java.lang.String { int indexOf(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.widget.FastScroller { void setState(int); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Class getDeclaringClass(); }
-keepclassmembers class libcore.io.MemoryMappedFile { void <init>(long,long); }
-keepclassmembers class java.lang.reflect.Field { java.lang.String getName(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Class getType(); }
-keepclassmembers class libcore.io.MemoryMappedFile { long size(); }
-keepclassmembers class java.lang.reflect.Field { int getDexFieldIndex(); }
-keepclassmembers class android.widget.FastScroller { void refreshDrawablePressedState(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.reflect.Field { int getOffset(); }
-keepclassmembers class java.lang.String { boolean isEmpty(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView { void updateDrawable(); }
-keepclassmembers class java.lang.reflect.Field { double getDouble(java.lang.Object); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String); }
-keepclassmembers class java.lang.reflect.Field { boolean getBoolean(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { byte getByte(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { float getFloat(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { char getChar(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller { void postAutoHide(); }
-keepclassmembers class android.support.v7.app.AlertController$5 { void <init>(android.support.v7.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class java.lang.reflect.Field { short getShort(java.lang.Object); }
-keepclassmembers class android.support.v7.app.AlertController$5 { void run(); }
-keepclassmembers class java.lang.String { int length(); }
-keepclassmembers class java.lang.reflect.Field { long getLong(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { int getInt(java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView { void startTouchUpFilter(int); }
-keepclassmembers class java.lang.reflect.Field { void setByte(java.lang.Object,byte); }
-keepclassmembers class java.lang.reflect.Field { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.PopupWindow$1 { void <init>(android.widget.PopupWindow); }
-keepclassmembers class java.lang.reflect.Field { void setBoolean(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Proxy { boolean isVisibleToClassLoader(java.lang.ClassLoader,java.lang.Class); }
-keepclassmembers class java.lang.reflect.Field { void setFloat(java.lang.Object,float); }
-keepclassmembers class java.lang.reflect.Field { void setDouble(java.lang.Object,double); }
-keepclassmembers class java.lang.reflect.Field { void setChar(java.lang.Object,char); }
-keepclassmembers class java.lang.reflect.Field { void setInt(java.lang.Object,int); }
-keepclassmembers class android.widget.FastScroller { void onSectionsChanged(); }
-keepclassmembers class android.widget.Editor$HandleView { boolean offsetHasBeenChanged(); }
-keepclassmembers class android.widget.Editor$HandleView { void onMeasure(int,int); }
-keepclassmembers class java.lang.reflect.Field { void setLong(java.lang.Object,long); }
-keepclassmembers class java.lang.reflect.Field { void setShort(java.lang.Object,short); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredWidth(); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredHeight(); }
-keepclassmembers class android.support.v7.view.ViewPropertyAnimatorCompatSet$1 { void <init>(android.support.v7.view.ViewPropertyAnimatorCompatSet); }
-keepclassmembers class java.util.LinkedList { boolean add(java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView { void show(); }
-keepclassmembers class android.widget.Editor$HandleView { void dismiss(); }
-keepclassmembers class java.lang.reflect.Proxy { boolean isProxyClass(java.lang.Class); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void <init>(); }
-keepclassmembers class android.app.Notification$BigTextStyle { void <init>(android.app.Notification$Builder); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void tag(java.io.FileDescriptor); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.app.Notification$BigTextStyle setBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.app.Notification$BigTextStyle setSummaryText(java.lang.CharSequence); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void untag(java.io.FileDescriptor); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void <init>(org.apache.harmony.security.x509.GeneralName,int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.widget.Editor$HandleView { void hideActionPopupWindow(); }
-keepclassmembers class android.widget.Editor$HandleView { void hide(); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.app.Notification$BigTextStyle bigText(java.lang.CharSequence); }
-keepclassmembers class android.widget.Editor$HandleView { boolean isShowing(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void onEndActionMode(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { org.apache.harmony.security.x509.GeneralName access$000(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { int access$200(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { int access$100(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil$1 { void <init>(android.content.Context); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context); }
-keepclassmembers class android.view.GLES20Canvas { void setViewport(int,int); }
-keepclassmembers class android.view.GLES20Canvas { void <init>(); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String); }
-keepclassmembers class android.app.Notification$BigTextStyle { void populateBigContentView(android.app.Notification); }
-keepclassmembers class android.view.GLES20Canvas { void setHighContrastText(boolean); }
-keepclassmembers class android.view.GLES20Canvas { void insertInorderBarrier(); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String,int); }
-keepclassmembers class android.view.GLES20Canvas { void insertReorderBarrier(); }
-keepclassmembers class java.util.LinkedList { boolean contains(java.lang.Object); }
-keepclassmembers class android.support.v7.widget.AppCompatDrawableManager$VdcInflateDelegate { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { void onPostDraw(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl { void <init>(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void signalNotEmpty(); }
-keepclassmembers class android.view.GLES20Canvas { int onPreDraw(android.graphics.Rect); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void enqueue(java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object dequeue(); }
-keepclassmembers class android.support.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyUnlock(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyLock(); }
-keepclassmembers class android.view.GLES20Canvas { int drawRenderNode(android.view.RenderNode,android.graphics.Rect,int); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void signalNotFull(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void <init>(); }
-keepclassmembers class java.nio.channels.FileChannel { void <init>(); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(java.util.Locale); }
-keepclassmembers class android.widget.Editor$HandleView { int getCursorOffset(); }
-keepclassmembers class android.view.GLES20Canvas { void drawHardwareLayer(android.view.HardwareLayer,float,float,android.graphics.Paint); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(); }
-keepclassmembers class java.lang.String { java.lang.String toString(); }
-keepclassmembers class libcore.io.DeleteOnExit { void addFile(java.lang.String); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(java.util.Locale); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase$2 { boolean accept(java.io.File); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(float,float,float,float); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(float,float,float,float,android.graphics.Region$Op); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipPath(android.graphics.Path,android.graphics.Region$Op); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { int size(); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(android.graphics.Rect); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase$2 { void <init>(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void <init>(android.support.v7.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(long); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(int); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(int,int,int,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(android.graphics.Rect,android.graphics.Region$Op); }
-keepclassmembers class android.media.AudioAttributes$Builder { android.media.AudioAttributes$Builder setUsage(int); }
-keepclassmembers class android.media.AudioAttributes$Builder { android.media.AudioAttributes$Builder setContentType(int); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void onPause(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean expandActionView(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object removeFirst(); }
-keepclassmembers class android.widget.FastScroller { void cancelFling(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object take(); }
-keepclassmembers class android.widget.Editor$HandleView { void onDetached(); }
-keepclassmembers class android.widget.FastScroller { void cancelPendingDrag(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.View getActionView(); }
-keepclassmembers class android.view.GLES20Canvas { boolean getClipBounds(android.graphics.Rect); }
-keepclassmembers class android.view.GLES20Canvas { boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType); }
-keepclassmembers class android.widget.FastScroller { void beginDrag(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { int getGroupId(); }
-keepclassmembers class java.lang.String { java.lang.String replaceAll(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String); }
-keepclassmembers class java.lang.String { java.lang.String replaceFirst(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.ContextMenu$ContextMenuInfo getMenuInfo(); }
-keepclassmembers class android.view.GLES20Canvas { void rotate(float); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String,int); }
-keepclassmembers class java.lang.String { boolean matches(java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { int getItemId(); }
-keepclassmembers class android.view.GLES20Canvas { void scale(float,float); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { char getShortcut(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.graphics.drawable.Drawable getIcon(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { int getOrdering(); }
-keepclassmembers class java.lang.String { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.view.GLES20Canvas { int save(); }
-keepclassmembers class android.view.GLES20Canvas { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.GLES20Canvas { void concat(android.graphics.Matrix); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInside(float,float); }
-keepclassmembers class android.view.GLES20Canvas { int save(int); }
-keepclassmembers class java.lang.Float { void <init>(float); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void unlink(java.util.concurrent.LinkedBlockingQueue$Node,java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean remove(java.lang.Object); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Float); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.SubMenu getSubMenu(); }
-keepclassmembers class android.app.BackStackRecord$1 { void <init>(android.app.BackStackRecord,android.view.View,java.util.ArrayList,android.app.Fragment,android.transition.Transition,android.transition.Transition,android.app.BackStackRecord$TransitionState,boolean,java.util.ArrayList,android.app.Fragment,android.transition.Transition,java.util.ArrayList); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { java.lang.CharSequence getTitle(); }
-keepclassmembers class okhttp3.Address { java.util.List connectionSpecs(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.support.v4.view.ActionProvider getSupportActionProvider(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { java.lang.CharSequence getTitleForItemView(android.support.v7.view.menu.MenuView$ItemView); }
-keepclassmembers class java.lang.Float { float floatValue(); }
-keepclassmembers class okhttp3.Address { okhttp3.CertificatePinner certificatePinner(); }
-keepclassmembers class okhttp3.Address { okhttp3.Dns dns(); }
-keepclassmembers class java.util.LinkedList { int size(); }
-keepclassmembers class java.lang.Float { int hashCode(); }
-keepclassmembers class okhttp3.Address { boolean equalsNonHost(okhttp3.Address); }
-keepclassmembers class java.lang.String { java.lang.String format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.util.LinkedList { java.lang.Object remove(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean hasSubMenu(); }
-keepclassmembers class android.view.GLES20Canvas { void restore(); }
-keepclassmembers class android.view.GLES20Canvas { int getSaveCount(); }
-keepclassmembers class java.lang.Float { java.lang.String toString(); }
-keepclassmembers class java.lang.Float { java.lang.String toString(float); }
-keepclassmembers class android.view.GLES20Canvas { void restoreToCount(int); }
-keepclassmembers class android.widget.FastScroller { boolean access$102(android.widget.FastScroller,boolean); }
-keepclassmembers class java.lang.Float { float parseFloat(java.lang.String); }
-keepclassmembers class okhttp3.Address { java.util.List protocols(); }
-keepclassmembers class android.widget.FastScroller { boolean access$100(android.widget.FastScroller); }
-keepclassmembers class okhttp3.Address { javax.net.ssl.HostnameVerifier hostnameVerifier(); }
-keepclassmembers class okhttp3.Address { java.net.Proxy proxy(); }
-keepclassmembers class okhttp3.Address { javax.net.SocketFactory socketFactory(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean isActionViewExpanded(); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$LoadDetailsTask { void <init>(ar.rulosoft.mimanganu.DetailsFragment,ar.rulosoft.mimanganu.DetailsFragment$1); }
-keepclassmembers class okhttp3.Address { okhttp3.Authenticator proxyAuthenticator(); }
-keepclassmembers class okhttp3.Address { javax.net.ssl.SSLSocketFactory sslSocketFactory(); }
-keepclassmembers class ar.rulosoft.mimanganu.DetailsFragment$LoadDetailsTask { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class android.view.ViewRootImpl { boolean isInTouchMode(); }
-keepclassmembers class android.support.v4.app.ActivityCompatApi23$SharedElementCallbackImpl { void <init>(android.support.v4.app.ActivityCompatApi23$SharedElementCallback23); }
-keepclassmembers class okhttp3.Address { java.net.ProxySelector proxySelector(); }
-keepclassmembers class okhttp3.Address { okhttp3.HttpUrl url(); }
-keepclassmembers class org.acra.ReportField$5 { void <init>(java.lang.String,int); }
-keepclassmembers class org.xml.sax.SAXNotSupportedException { void <init>(java.lang.String); }
-keepclassmembers class android.app.ExitTransitionCoordinator$8 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint); }
-keepclassmembers class android.app.ExitTransitionCoordinator$8 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.Canvas { long getNativeCanvasWrapper(); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { void <init>(android.view.View); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.support.v4.internal.view.SupportMenuItem setActionView(android.view.View); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setActionView(android.view.View); }
-keepclassmembers class android.graphics.Canvas { boolean isRecordingFor(java.lang.Object); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setAlphabeticShortcut(char); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.graphics.Canvas { boolean isHardwareAccelerated(); }
-keepclassmembers class android.graphics.Canvas { void insertInorderBarrier(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setActionView(int); }
-keepclassmembers class android.graphics.Canvas { void insertReorderBarrier(); }
-keepclassmembers class android.graphics.Canvas { int getWidth(); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class android.graphics.Canvas { int getHeight(); }
-keepclassmembers class android.graphics.Canvas { int save(); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean hasNestedScrollingParent(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setIcon(int); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { boolean isNestedScrollingEnabled(); }
-keepclassmembers class android.graphics.Canvas { int save(int); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { void <init>(com.android.i18n.phonenumbers.RegexCache$LRUCache,int,float,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void drawCircle(float,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { int saveLayer(float,float,float,float,android.graphics.Paint,int); }
-keepclassmembers class android.support.v4.view.NestedScrollingChildHelper { void stopNestedScroll(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setNumericShortcut(char); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$1$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$1); }
-keepclassmembers class android.view.GLES20Canvas { void drawCircle(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Blockquote { void <init>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <init>(int[],java.lang.Object,byte[]); }
-keepclassmembers class android.graphics.Canvas { int saveLayerAlpha(float,float,float,float,int,int); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerExtraData { void <init>(android.support.v4.media.session.MediaControllerCompat); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Blockquote { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.graphics.Canvas { void restore(); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void setMenuInfo(android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.graphics.Canvas { int getSaveCount(); }
-keepclassmembers class android.graphics.Canvas { void translate(float,float); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float); }
-keepclassmembers class android.graphics.Canvas { void restoreToCount(int); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float,float,float); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { void setSubMenu(android.support.v7.view.menu.SubMenuBuilder); }
-keepclassmembers class android.graphics.Canvas { void rotate(float,float,float); }
-keepclassmembers class android.support.design.widget.ViewUtils$1 { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void concat(android.graphics.Matrix); }
-keepclassmembers class android.view.GLES20Canvas { void drawLine(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.text.PackedIntVector { int width(); }
-keepclassmembers class android.graphics.Canvas { void rotate(float); }
-keepclassmembers class android.graphics.Canvas { void setMatrix(android.graphics.Matrix); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { int[] access$000(org.apache.harmony.security.pkcs7.ContentInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { java.lang.Object access$100(org.apache.harmony.security.pkcs7.ContentInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <init>(int[],java.lang.Object,byte[],org.apache.harmony.security.pkcs7.ContentInfo$1); }
-keepclassmembers class android.graphics.Canvas { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class android.support.v4.app.FragmentContainer { void <init>(); }
-keepclassmembers class libcore.net.MimeUtils { void add(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setTitle(int); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$2 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class android.view.GLES20Canvas { void drawLines(float[],android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawOval(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setTitle(java.lang.CharSequence); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void addLenient(okhttp3.Headers$Builder,java.lang.String); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void <init>(); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void drawPath(android.graphics.Path,android.graphics.Paint); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setTitleCondensed(java.lang.CharSequence); }
-keepclassmembers class okhttp3.OkHttpClient$1 { int code(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.OkHttpClient$1 { boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { android.view.MenuItem setVisible(boolean); }
-keepclassmembers class android.graphics.Canvas { boolean clipPath(android.graphics.Path,android.graphics.Region$Op); }
-keepclassmembers class okhttp3.OkHttpClient$1 { java.net.Socket deduplicate(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(float,float,float,float); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(float,float,float,float,android.graphics.Region$Op); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean shouldShowShortcut(); }
-keepclassmembers class android.graphics.Canvas { boolean clipPath(android.graphics.Path); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { boolean shouldShowIcon(); }
-keepclassmembers class okhttp3.OkHttpClient$1 { boolean equalsNonHost(okhttp3.Address,okhttp3.Address); }
-keepclassmembers class android.support.v7.view.menu.MenuItemImpl { java.lang.String toString(); }
-keepclassmembers class okhttp3.OkHttpClient$1 { okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation,okhttp3.Route); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void setDrawFilter(android.graphics.DrawFilter); }
-keepclassmembers class android.graphics.Canvas { boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType); }
-keepclassmembers class android.graphics.Canvas { boolean getClipBounds(android.graphics.Rect); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection); }
-keepclassmembers class android.view.ViewOutlineProvider { void <init>(); }
-keepclassmembers class okhttp3.OkHttpClient$1 { okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool); }
-keepclassmembers class android.graphics.Canvas { void drawColor(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.Canvas { void drawLine(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.support.v4.widget.ListViewAutoScrollHelper { void <init>(android.widget.ListView); }
-keepclassmembers class android.graphics.Canvas { void drawLines(float[],int,int,android.graphics.Paint); }
-keepclassmembers class android.support.v4.widget.ListViewAutoScrollHelper { boolean canTargetScrollHorizontally(int); }
-keepclassmembers class org.acra.ACRA { boolean access$000(android.content.SharedPreferences); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawLines(float[],android.graphics.Paint); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader$HPage { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.HorizontalReader); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(java.lang.String,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawRect(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.support.v4.widget.ListViewAutoScrollHelper { void scrollTargetBy(int,int); }
-keepclassmembers class android.graphics.Canvas { void drawOval(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.text.style.MetricAffectingSpan { void <init>(); }
-keepclassmembers class com.franmontiel.persistentcookiejar.PersistentCookieJar { void <init>(com.franmontiel.persistentcookiejar.cache.CookieCache,com.franmontiel.persistentcookiejar.persistence.CookiePersistor); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.graphics.Canvas { void drawPath(android.graphics.Path,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawCircle(float,float,float,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class org.acra.ACRA { void init(android.app.Application,org.acra.config.ConfigurationBuilder); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void endDrag(); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.Hashtable$HashtableEntry); }
-keepclassmembers class com.franmontiel.persistentcookiejar.PersistentCookieJar { void saveFromResponse(okhttp3.HttpUrl,java.util.List); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getValue(); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getKey(); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(java.lang.String$1); }
-keepclassmembers class it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.File { void <init>(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { java.lang.String rawString(); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int start(); }
-keepclassmembers class java.io.File { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { boolean isActionViewExpanded(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { boolean expandActionView(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { android.view.MenuItem setActionView(android.view.MenuItem,int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { android.view.View getActionView(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { void <init>(); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { android.view.MenuItem setActionView(android.view.MenuItem,android.view.View); }
-keepclassmembers class java.io.File { boolean canRead(); }
-keepclassmembers class java.io.File { boolean doAccess(int); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat { int isRtlText(int); }
-keepclassmembers class android.view.animation.AlphaAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.io.File { int compareTo(java.io.File); }
-keepclassmembers class java.io.File { boolean delete(); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat { int isRtlTextOrFormat(int); }
-keepclassmembers class android.support.v4.view.MenuItemCompat$HoneycombMenuVersionImpl { void setShowAsAction(android.view.MenuItem,int); }
-keepclassmembers class java.io.File { void deleteOnExit(); }
-keepclassmembers class android.view.animation.AlphaAnimation { void <init>(float,float); }
-keepclassmembers class java.io.File { boolean exists(); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeBounds(); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean hasAlpha(); }
-keepclassmembers class android.graphics.Canvas { void drawText(java.lang.String,float,float,android.graphics.Paint); }
-keepclassmembers class java.io.File { java.lang.String getPath(); }
-keepclassmembers class java.io.File { java.lang.String getCanonicalPath(); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat23 { java.lang.String permissionToOp(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void <init>(); }
-keepclassmembers class java.io.File { boolean isDirectory(); }
-keepclassmembers class java.io.File { boolean isAbsolute(); }
-keepclassmembers class java.util.concurrent.TimeUnit$5 { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.io.File { boolean isFile(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VClipPath); }
-keepclassmembers class java.util.concurrent.TimeUnit$5 { long toNanos(long); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VClipPath { boolean isClipPath(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void requestParentDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class java.io.File { java.io.File[] listFiles(); }
-keepclassmembers class java.io.File { java.lang.String[] list(); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$1 { void <init>(android.support.design.widget.FloatingActionButtonGingerbread,boolean,android.support.design.widget.FloatingActionButtonImpl$InternalVisibilityChangedListener); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void setScrollingCacheEnabled(boolean); }
-keepclassmembers class android.support.design.widget.FloatingActionButtonGingerbread$1 { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class java.io.File { long length(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void setScrollState(int); }
-keepclassmembers class org.xml.sax.SAXException { void <init>(java.lang.String); }
-keepclassmembers class java.io.File { boolean mkdir(); }
-keepclassmembers class dalvik.system.DexPathList { java.util.ArrayList splitDexPath(java.lang.String); }
-keepclassmembers class java.io.File { void mkdirErrno(); }
-keepclassmembers class java.io.File { boolean mkdirs(); }
-keepclassmembers class org.xml.sax.SAXException { java.lang.String getMessage(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { void <init>(int); }
-keepclassmembers class java.io.File { boolean mkdirs(boolean); }
-keepclassmembers class java.io.File { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.PreferencesFragment$16 { void <init>(ar.rulosoft.mimanganu.PreferencesFragment); }
-keepclassmembers class java.util.jar.Attributes$Name { int hashCode(); }
-keepclassmembers class java.io.File { boolean renameTo(java.io.File); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { android.content.Context access$000(ar.rulosoft.mimanganu.services.AutomaticUpdateTask); }
-keepclassmembers class java.util.jar.Attributes$Name { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { android.content.SharedPreferences access$100(ar.rulosoft.mimanganu.services.AutomaticUpdateTask); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { int access$300(ar.rulosoft.mimanganu.services.AutomaticUpdateTask); }
-keepclassmembers class android.view.View$7 { void <init>(java.lang.String); }
-keepclassmembers class org.xml.sax.SAXException { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { void access$200(ar.rulosoft.mimanganu.services.AutomaticUpdateTask,java.lang.Object[]); }
-keepclassmembers class java.net.InetAddress { void <init>(int,byte[],java.lang.String); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { int access$302(ar.rulosoft.mimanganu.services.AutomaticUpdateTask,int); }
-keepclassmembers class java.lang.StringBuffer { void <init>(int); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous); }
-keepclassmembers class android.support.v4.widget.PopupWindowCompat$Api21PopupWindowImpl { void setOverlapAnchor(android.widget.PopupWindow,boolean); }
-keepclassmembers class android.support.v4.view.accessibility.AccessibilityEventCompat$AccessibilityEventIcsImpl { void <init>(); }
-keepclassmembers class java.lang.StringBuffer { void <init>(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char); }
-keepclassmembers class java.lang.CaseMapper$1 { void <init>(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostAddress(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[]); }
-keepclassmembers class java.lang.CaseMapper$1 { java.lang.Object initialValue(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[],int,int); }
-keepclassmembers class android.content.ContextWrapper { void <init>(android.content.Context); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByName(java.lang.String); }
-keepclassmembers class java.lang.StringBuffer { char charAt(int); }
-keepclassmembers class java.net.InetAddress { int hashCode(); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostName(); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.content.ContextWrapper { android.content.ContentResolver getContentResolver(); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.PackageManager getPackageManager(); }
-keepclassmembers class android.widget.TextView { void setTypefaceFromAttrs(java.lang.String,int,int); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getBaseContext(); }
-keepclassmembers class android.content.ContextWrapper { android.os.Looper getMainLooper(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getApplicationContext(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.AutomaticUpdateTask { void onPreExecute(); }
-keepclassmembers class android.content.ContextWrapper { int getThemeResId(); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageName(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getBasePackageName(); }
-keepclassmembers class android.content.ContextWrapper { void setTheme(int); }
-keepclassmembers class android.content.ContextWrapper { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.ApplicationInfo getApplicationInfo(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void computeScroll(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageCodePath(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getOpPackageName(); }
-keepclassmembers class java.nio.charset.Charset { boolean isValidCharsetNameStart(char); }
-keepclassmembers class android.content.ContextWrapper { android.content.SharedPreferences getSharedPreferences(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageResourcePath(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getSharedPrefsFile(java.lang.String); }
-keepclassmembers class java.nio.charset.Charset { boolean isValidCharsetNamePart(char); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileInputStream openFileInput(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setEnabled(boolean); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileOutputStream openFileOutput(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFileStreamPath(java.lang.String); }
-keepclassmembers class java.net.InetAddress { boolean isNumeric(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFilesDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalFilesDir(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteFile(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] fileList(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalFilesDirs(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getObbDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getNoBackupFilesDir(); }
-keepclassmembers class android.widget.TextView { boolean getDefaultEditable(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getObbDirs(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCacheDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCodeCacheDir(); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getDefaultMovementMethod(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalCacheDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalMediaDirs(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getText(); }
-keepclassmembers class android.widget.TextView { android.text.Layout getLayout(); }
-keepclassmembers class android.widget.TextView { int length(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalCacheDirs(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDir(java.lang.String,int); }
-keepclassmembers class android.widget.TextView { android.text.Layout getHintLayout(); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDatabasePath(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteDatabase(java.lang.String); }
-keepclassmembers class java.math.BigInteger { void <init>(int,int,int[]); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] databaseList(); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void connect(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.String toString(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void <init>(java.net.URL); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable getWallpaper(); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable peekWallpaper(); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumWidth(); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(android.graphics.Bitmap); }
-keepclassmembers class android.widget.TextView { android.text.method.KeyListener getKeyListener(); }
-keepclassmembers class android.content.ContextWrapper { void clearWallpaper(); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumHeight(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(byte[]); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[]); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(java.io.InputStream); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 { void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getMovementMethod(); }
-keepclassmembers class java.lang.StringBuffer { int length(); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[]); }
-keepclassmembers class android.widget.TextView { void fixFocusableAndClickableSettings(); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class android.widget.TextView { android.text.method.TransformationMethod getTransformationMethod(); }
-keepclassmembers class android.content.ContextWrapper { void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.support.v4.view.ViewCompat$JbMr2ViewCompatImpl { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState { void <init>(int); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { boolean getUseCaches(); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { boolean access$002(libcore.net.url.JarURLConnectionImpl,boolean); }
-keepclassmembers class java.math.BigInteger { void setBigInt(java.math.BigInt); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingRight(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingLeft(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <init>(int,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,java.util.Date,java.util.Date,java.util.List,org.apache.harmony.security.x509.Extensions,byte[]); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState { boolean hasPanelItems(); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void drawableStateChanged(); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcast(android.content.Intent); }
-keepclassmembers class java.math.BigInteger { byte[] toByteArray(); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcast(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$PanelFeatureState { void setMenu(android.support.v7.view.menu.MenuBuilder); }
-keepclassmembers class java.math.BigInteger { int signum(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftRight(int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeftOneBit(); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class java.math.BigInteger { int bitLength(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class android.content.ContextWrapper { void unregisterReceiver(android.content.BroadcastReceiver); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startService(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { boolean stopService(android.content.Intent); }
-keepclassmembers class android.os.StrictMode$6 { void <init>(); }
-keepclassmembers class java.net.JarURLConnection { java.lang.String getEntryName(); }
-keepclassmembers class android.content.ContextWrapper { boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class java.net.JarURLConnection { java.net.URL getJarFileURL(); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { void unbindService(android.content.ServiceConnection); }
-keepclassmembers class android.content.ContextWrapper { boolean bindService(android.content.Intent,android.content.ServiceConnection,int); }
-keepclassmembers class android.content.ContextWrapper { boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <init>(int,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,java.util.Date,java.util.Date,java.util.List,org.apache.harmony.security.x509.Extensions,byte[],org.apache.harmony.security.x509.TBSCertList$1); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x509.AlgorithmIdentifier access$500(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { android.support.v4.view.PagerAdapter getAdapter(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int,android.os.IBinder); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingPermission(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { int access$400(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.List access$900(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.Date access$700(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfPermission(java.lang.String); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { int getCurrentItem(); }
-keepclassmembers class java.math.BigInteger { double doubleValue(); }
-keepclassmembers class android.content.ContextWrapper { void enforcePermission(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class java.math.BigInteger { int compareTo(java.math.BigInteger); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingPermission(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.Date access$800(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfPermission(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void grantUriPermission(java.lang.String,android.net.Uri,int); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int); }
-keepclassmembers class java.math.BigInteger { java.lang.String toString(); }
-keepclassmembers class java.util.Date { void <init>(long); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingUriPermission(android.net.Uri,int); }
-keepclassmembers class java.util.Date { void <init>(); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.ContextWrapper { void revokeUriPermission(android.net.Uri,int); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfUriPermission(android.net.Uri,int); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContext(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void onAttachedToWindow(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void onDetachedFromWindow(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor); }
-keepclassmembers class android.content.ContextWrapper { int getUserId(); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor,boolean); }
-keepclassmembers class java.util.Date { long getTime(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createConfigurationContext(android.content.res.Configuration); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createDisplayContext(android.view.Display); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class android.content.ContextWrapper { android.view.DisplayAdjustments getDisplayAdjustments(int); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage$1 { void <init>(); }
-keepclassmembers class android.transition.Transition$1 { void <init>(); }
-keepclassmembers class android.support.v7.app.AlertDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { void <init>(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.lang.String get(java.lang.String); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { float specialValue(); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl { void <init>(); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { void <init>(java.lang.StringToReal$1); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl { boolean isCtrlPressed(android.view.KeyEvent); }
-keepclassmembers class android.content.ContextWrapper { boolean isRestricted(); }
-keepclassmembers class android.widget.TextView { void setPadding(int,int,int,int); }
-keepclassmembers class android.content.res.Resources { int selectDefaultTheme(int,int); }
-keepclassmembers class android.widget.CursorAdapter { android.database.Cursor getCursor(); }
-keepclassmembers class android.content.res.Resources { int selectSystemTheme(int,int,int,int,int,int); }
-keepclassmembers class android.support.v4.view.MotionEventCompatHoneycombMr1 { float getAxisValue(android.view.MotionEvent,int); }
-keepclassmembers class android.content.res.Resources { void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration); }
-keepclassmembers class android.content.res.Resources { android.content.res.ConfigurationBoundResourceCache getAnimatorCache(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$5 { void <init>(ar.rulosoft.mimanganu.adapters.DownloadAdapter); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$5 { void run(); }
-keepclassmembers class java.util.Date { void appendTwoDigits(java.lang.StringBuilder,int); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { void <init>(java.util.AbstractList); }
-keepclassmembers class android.content.res.Resources { android.content.res.ConfigurationBoundResourceCache getStateListAnimatorCache(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMinTouchOffset(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMaxTouchOffset(); }
-keepclassmembers class android.widget.TextView { void setTextSize(int,float); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void resetTouchOffsets(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onDetached(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void <init>(); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VFullPath); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v7.widget.GridLayoutManager$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.widget.TextView { void setElegantTextHeight(boolean); }
-keepclassmembers class android.support.v4.media.session.IMediaSession$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { boolean isSelectionStartDragged(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.lang.String getAndReturnResponseCodeOnFailure(java.lang.String); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void <init>(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void <init>(android.support.graphics.drawable.VectorDrawableCompat$VPath); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join); }
-keepclassmembers class android.widget.TextView { void setTextColor(int); }
-keepclassmembers class android.widget.TextView { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class android.content.res.Resources { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class android.widget.TextView { android.content.res.ColorStateList getTextColors(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { okhttp3.OkHttpClient getHttpClient(); }
-keepclassmembers class android.widget.TextView { void setHighlightColor(int); }
-keepclassmembers class android.widget.TextView { boolean getShowSoftInputOnFocus(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { boolean isClipPath(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { java.lang.String getWithTimeout(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TextView { void setShadowLayer(float,float,float,int); }
-keepclassmembers class android.widget.TextView { android.text.TextPaint getPaint(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { java.lang.String getPathName(); }
-keepclassmembers class android.widget.TextView { void setHintTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VPath { void toPath(android.graphics.Path); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.FromFolder$1 { void <init>(); }
-keepclassmembers class android.widget.TextView { void setHorizontallyScrolling(boolean); }
-keepclassmembers class android.widget.TextView { void setLinkTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.TextView { void setMinLines(int); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat$VFullPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.widget.TextView { void setMinHeight(int); }
-keepclassmembers class android.widget.TextView { boolean getHorizontallyScrolling(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$AbstractSource { void <init>(okhttp3.internal.http1.Http1Codec,okhttp3.internal.http1.Http1Codec$1); }
-keepclassmembers class android.widget.TextView { int getGravity(); }
-keepclassmembers class okhttp3.internal.http1.Http1Codec$AbstractSource { okio.Timeout timeout(); }
-keepclassmembers class android.widget.TextView { void setMaxLines(int); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setMaxHeight(int); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.TextView { void setLines(int); }
-keepclassmembers class android.widget.TextView { void setHeight(int); }
-keepclassmembers class android.widget.TextView { void setMinWidth(int); }
-keepclassmembers class android.app.Activity$1 { void <init>(android.app.Activity); }
-keepclassmembers class android.widget.TextView { void setMaxEms(int); }
-keepclassmembers class android.widget.TextView { void setMaxWidth(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase { void <init>(java.util.ArrayList,android.content.Context,boolean); }
-keepclassmembers class android.widget.TextView { void setEms(int); }
-keepclassmembers class android.widget.TextView { void setMinEms(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase { void setLastItemListener(ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase$OnLastItem); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase { void addAll(java.util.ArrayList); }
-keepclassmembers class android.widget.TextView { void setWidth(int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase { int getItemCount(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase { void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void report(java.lang.String,java.lang.Throwable); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(dalvik.system.CloseGuard$1); }
-keepclassmembers class android.widget.TextView { void updateTextColors(); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(); }
-keepclassmembers class android.support.v4.text.TextDirectionHeuristicsCompat$FirstStrong { void <init>(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.TextView { void drawableStateChanged(); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class java.lang.ProcessManager$1 { void <init>(java.lang.ProcessManager,java.lang.String); }
-keepclassmembers class android.widget.TextView { void drawableHotspotChanged(float,float); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase { void setMangaClickListener(ar.rulosoft.mimanganu.adapters.MangaRecAdapterBase$OnMangaClick); }
-keepclassmembers class java.util.logging.Logger { boolean getUseParentHandlers(); }
-keepclassmembers class android.os.ResultReceiver$MyResultReceiver { void <init>(android.os.ResultReceiver); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getParent(); }
-keepclassmembers class android.view.ViewPropertyAnimator$NameValuesHolder { void <init>(int,float,float); }
-keepclassmembers class java.util.logging.Logger { java.lang.String getName(); }
-keepclassmembers class dalvik.system.PathClassLoader { void <init>(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class java.util.logging.Logger { void setResourceBundle(java.util.logging.LogRecord); }
-keepclassmembers class java.util.logging.Logger { boolean internalIsLoggable(java.util.logging.Level); }
-keepclassmembers class java.util.logging.Logger { boolean isLoggable(java.util.logging.Level); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence); }
-keepclassmembers class okhttp3.EventListener { void <init>(); }
-keepclassmembers class android.content.res.Resources { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void populate(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class java.util.logging.Logger { void setLevel(java.util.logging.Level); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void invalidateCache(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.List getKeyframes(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.ArrayList getKeyframes(); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class java.util.logging.Logger { void fine(java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.support.v7.app.ActionBar$LayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.support.v7.widget.Toolbar$LayoutParams); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.media.MediaCodecInfo { java.lang.String getName(); }
-keepclassmembers class android.media.MediaCodecInfo { boolean isEncoder(); }
-keepclassmembers class android.content.res.Resources { int calcConfigChanges(android.content.res.Configuration); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { void <init>(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getHint(); }
-keepclassmembers class android.support.v7.widget.Toolbar$LayoutParams { void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class android.content.res.Resources { android.util.DisplayMetrics getDisplayMetrics(); }
-keepclassmembers class android.content.res.Resources { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class android.content.res.Resources { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class android.support.v4.content.IntentCompat$IntentCompatImplBase { void <init>(); }
-keepclassmembers class android.widget.TextView { void setHint(java.lang.CharSequence); }
-keepclassmembers class android.widget.TextView { void setRawInputType(int); }
-keepclassmembers class android.support.v4.view.MenuItemCompatHoneycomb { android.view.View getActionView(android.view.MenuItem); }
-keepclassmembers class android.support.v4.view.MenuItemCompatHoneycomb { android.view.MenuItem setActionView(android.view.MenuItem,android.view.View); }
-keepclassmembers class android.support.v4.view.MenuItemCompatHoneycomb { void setShowAsAction(android.view.MenuItem,int); }
-keepclassmembers class android.widget.TextView { int getInputType(); }
-keepclassmembers class android.widget.TextView { boolean isSingleLine(); }
-keepclassmembers class android.support.v4.view.MenuItemCompatHoneycomb { android.view.MenuItem setActionView(android.view.MenuItem,int); }
-keepclassmembers class java.util.logging.Logger { void access$100(java.util.logging.Logger,java.util.logging.LogRecord); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void removeView(android.view.View); }
-keepclassmembers class android.content.res.Resources { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.os.SystemProperties { void addChangeCallback(java.lang.Runnable); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getError(); }
-keepclassmembers class android.widget.TextView { void setPrivateImeOptions(java.lang.String); }
-keepclassmembers class java.util.logging.Logger { java.lang.String access$000(java.util.logging.Logger); }
-keepclassmembers class android.widget.TextView { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void setCurrentItem(int); }
-keepclassmembers class android.widget.TextView { void restartMarqueeIfNeeded(); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void setCurrentItemInternal(int,boolean,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { java.util.ArrayList getMangas(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { java.util.ArrayList getMangasFiltered(int[][],int); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { boolean hasList(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ReadComicOnline { void loadChapters(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$6 { void <init>(ar.rulosoft.mimanganu.adapters.DownloadAdapter); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$6 { void run(); }
-keepclassmembers class android.text.TextLine { float metrics(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class fr.castorflex.android.verticalviewpager.VerticalViewPager { void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(); }
-keepclassmembers class android.widget.TextView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(int,int,int); }
-keepclassmembers class android.widget.TextView { void registerForPreDraw(); }
-keepclassmembers class android.widget.TextView { void onAttachedToWindow(); }
-keepclassmembers class java.nio.charset.UnmappableCharacterException { void <init>(int); }
-keepclassmembers class android.widget.TextView { void onScreenStateChanged(int); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getCachedDrawableLocked(android.util.LongSparseArray,long); }
-keepclassmembers class android.widget.TextView { void onDetachedFromWindowInternal(); }
-keepclassmembers class android.widget.TextView { void unregisterForPreDraw(); }
-keepclassmembers class android.support.v7.widget.CardViewApi21 { void <init>(); }
-keepclassmembers class android.widget.TextView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.text.TextLine { float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.database.DatabaseUtils { long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.database.DatabaseUtils { long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[]); }
-keepclassmembers class android.support.v7.widget.CardViewApi21 { float getRadius(android.support.v7.widget.CardViewDelegate); }
-keepclassmembers class android.support.v7.widget.CardViewApi21 { void initStatic(); }
-keepclassmembers class android.support.v7.widget.CardViewApi21 { void setBackgroundColor(android.support.v7.widget.CardViewDelegate,android.content.res.ColorStateList); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { void <init>(); }
-keepclassmembers class android.widget.TextView { void setTextIsSelectable(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.TextView { boolean isTextSelectable(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { boolean hasList(); }
-keepclassmembers class android.widget.TextView { int getHorizontalOffsetForDrawables(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.RawSenManga { void loadMangaInformation(ar.rulosoft.mimanganu.componentes.Manga,boolean); }
-keepclassmembers class android.widget.Editor$SelectionActionModeCallback { void <init>(android.widget.Editor); }
-keepclassmembers class android.text.TextLine { void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt,android.text.TextPaint); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.CharSequence trimAfterFirstMatch(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isLatinLetter(char); }
-keepclassmembers class android.text.TextLine { void updateMetrics(android.graphics.Paint$FontMetricsInt,int,int,int,int,int); }
-keepclassmembers class android.widget.TextView { int getLineCount(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment$1 { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.ReaderContinuous$Page$Segment); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { android.app.Activity access$200(ar.rulosoft.mimanganu.adapters.DownloadAdapter); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isInvalidPunctuationSymbol(char); }
-keepclassmembers class android.widget.Editor$SelectionActionModeCallback { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.widget.TextView { int getFadeHeight(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { int getCount(); }
-keepclassmembers class android.widget.TextView { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.animation.IntEvaluator { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.Spinner$SavedState$1 { void <init>(); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.ImageButton { boolean onSetAlpha(int); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.TextView { void hideErrorIfUnchanged(); }
-keepclassmembers class java.security.cert.X509Certificate { java.util.Collection getSubjectAlternativeNames(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { void onPause(); }
-keepclassmembers class android.support.v7.util.DiffUtil$Callback { void <init>(); }
-keepclassmembers class android.support.v7.util.DiffUtil$Callback { java.lang.Object getChangePayload(int,int); }
-keepclassmembers class android.widget.TextView { void beginBatchEdit(); }
-keepclassmembers class android.widget.TextView { void onCommitCompletion(android.view.inputmethod.CompletionInfo); }
-keepclassmembers class android.widget.TextView { void onBeginBatchEdit(); }
-keepclassmembers class android.widget.TextView { boolean onCheckIsTextEditor(); }
-keepclassmembers class android.widget.TextView { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class android.widget.TextView { void endBatchEdit(); }
-keepclassmembers class android.widget.TextView { void onEndBatchEdit(); }
-keepclassmembers class android.widget.TextView { boolean onPrivateIMECommand(java.lang.String,android.os.Bundle); }
-keepclassmembers class org.acra.util.ProcessFinisher { void <init>(android.content.Context,org.acra.config.ACRAConfiguration,org.acra.builder.LastActivityManager); }
-keepclassmembers class android.support.v4.app.BackStackState$1 { void <init>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters$1 { void <init>(ar.rulosoft.mimanganu.MangaFragment$RemoveChapters); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.graphics.Typeface { void setDefault(android.graphics.Typeface); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$RemoveChapters$1 { void run(); }
-keepclassmembers class android.graphics.Typeface { int getStyle(); }
-keepclassmembers class org.acra.util.ProcessFinisher { void killProcessAndExit(); }
-keepclassmembers class android.support.v4.view.ViewPager$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v7.app.NotificationCompat$IceCreamSandwichExtender { void <init>(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface defaultFromStyle(int); }
-keepclassmembers class android.support.v7.app.NotificationCompat$IceCreamSandwichExtender { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor); }
-keepclassmembers class org.acra.util.ProcessFinisher { void endApplication(java.lang.Thread); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void cancel(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List,byte[]); }
-keepclassmembers class android.app.AlertDialog { void <init>(android.content.Context); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void end(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean hasNext(); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { float getAnimatedFraction(); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { android.animation.Animator newInstance(); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { void <init>(android.animation.Animator); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.Object next(); }
-keepclassmembers class android.app.AlertDialog { void setMessage(java.lang.CharSequence); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.app.AlertDialog { void setView(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.GeneralNames$1); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void setDuration(long); }
-keepclassmembers class android.support.design.widget.ValueAnimatorCompatImplHoneycombMr1 { void start(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { java.util.List access$100(org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class java.lang.ArrayStoreException { void <init>(); }
-keepclassmembers class android.widget.Filter$FilterResults { void <init>(); }
-keepclassmembers class org.acra.ReportField$7 { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.AlertDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask$1 { void <init>(ar.rulosoft.mimanganu.componentes.MangaFolderSelect$AddMangaTask,java.lang.Integer[]); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.AlertDialog { com.android.internal.app.AlertController access$000(android.app.AlertDialog); }
-keepclassmembers class rapid.decoder.BitmapDecoder$Region$1 { void <init>(); }
-keepclassmembers class rapid.decoder.BitmapDecoder$Region$1 { java.lang.Object newInstance(); }
-keepclassmembers class java.util.ArrayDeque { void <init>(java.util.Collection); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$4 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class java.util.Hashtable$EntryIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class java.util.Hashtable$EntryIterator { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class java.security.Signature { void <init>(java.lang.String); }
-keepclassmembers class java.util.Hashtable$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.util.ArrayDeque { boolean offerLast(java.lang.Object); }
-keepclassmembers class ar.rulosoft.mimanganu.MangaFragment$3 { void <init>(ar.rulosoft.mimanganu.MangaFragment); }
-keepclassmembers class java.util.Hashtable$EntryIterator { java.lang.Object next(); }
-keepclassmembers class com.android.internal.app.AlertController$CheckedItemAdapter { void <init>(android.content.Context,int,int,java.lang.CharSequence[]); }
-keepclassmembers class java.util.ArrayDeque { boolean offer(java.lang.Object); }
-keepclassmembers class android.util.Pair { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object poll(); }
-keepclassmembers class java.util.ArrayDeque { boolean isEmpty(); }
-keepclassmembers class java.util.ArrayDeque { boolean add(java.lang.Object); }
-keepclassmembers class java.security.Signature { java.lang.String getAlgorithm(); }
-keepclassmembers class android.text.TextLine { float nextTab(float); }
-keepclassmembers class java.util.ArrayDeque { boolean remove(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void setIncludeFontPadding(boolean); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(); }
-keepclassmembers class java.util.ArrayDeque { int access$200(java.util.ArrayDeque); }
-keepclassmembers class java.util.ArrayDeque { int access$300(java.util.ArrayDeque); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <init>(org.apache.harmony.security.x501.Name); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object[] access$400(java.util.ArrayDeque); }
-keepclassmembers class java.util.ArrayDeque { boolean access$500(java.util.ArrayDeque,int); }
-keepclassmembers class android.view.WindowManager$LayoutParams$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void <init>(int); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { boolean checkTag(int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <init>(org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { org.apache.harmony.security.x509.GeneralNames access$000(org.apache.harmony.security.x509.DistributionPointName); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { org.apache.harmony.security.x501.Name access$100(org.apache.harmony.security.x509.DistributionPointName); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager,android.hardware.input.InputManager$1); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider access$000(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class java.util.Formatter { java.lang.String toString(); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.widget.TextView { void checkForResize(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void <init>(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation$StreamAllocationReference { void <init>(okhttp3.internal.connection.StreamAllocation,java.lang.Object); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { int length(); }
-keepclassmembers class java.util.Formatter { void outputCharSequence(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.TextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.TextView { boolean isShowingHint(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String getName(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String toString(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class loadClassBinaryName(java.lang.String,java.lang.ClassLoader,java.util.List); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void <init>(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClass(java.lang.String,java.lang.ClassLoader,long,java.util.List); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void draw(android.graphics.Canvas); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean needsMirroring(); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.io.File); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { float access$400(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { ar.rulosoft.mimanganu.componentes.readers.Reader$Direction access$100(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { it.sephiroth.android.library.imagezoom.ImageViewTouchBase$InitialPosition access$700(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { ar.rulosoft.mimanganu.componentes.readers.Reader$Direction access$600(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.String toString(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { int access$800(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { ar.rulosoft.mimanganu.componentes.readers.Reader$Direction access$200(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { int access$900(ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { void freeMemory(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setDither(boolean); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { boolean hasFitFeature(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void getOutline(android.graphics.Outline); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { void setScreenFit(it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isStateful(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { void setScrollSensitive(float); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { void reset(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspot(float,float); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isAutoMirrored(); }
-keepclassmembers class android.widget.TextView { void computeScroll(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumWidth(); }
-keepclassmembers class android.widget.TextView { int getSelectionStart(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumHeight(); }
-keepclassmembers class android.widget.TextView { boolean hasSelection(); }
-keepclassmembers class android.widget.TextView { void setSingleLine(boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getOpacity(); }
-keepclassmembers class android.widget.TextView { void applySingleLine(boolean,boolean,boolean); }
-keepclassmembers class android.widget.TextView { void setSingleLine(); }
-keepclassmembers class android.widget.TextView { int getSelectionEnd(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getCurrentIndex(); }
-keepclassmembers class android.widget.TextView { void setMarqueeRepeatLimit(int); }
-keepclassmembers class android.widget.TextView { void setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void initializeDrawableForDisplay(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.TextView { void stopMarquee(); }
-keepclassmembers class android.widget.TextView { void startStopMarquee(boolean); }
-keepclassmembers class android.widget.TextView { void setCursorVisible(boolean); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { void <init>(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$100(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$200(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$300(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$400(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$500(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$600(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$700(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$800(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$900(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$102(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean canApplyTheme(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$202(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$302(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$402(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void clearMutated(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$502(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$602(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.widget.TextView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$702(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$802(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$1 { void <init>(ar.rulosoft.mimanganu.adapters.DownloadAdapter,ar.rulosoft.mimanganu.services.ChapterDownload); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$902(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class java.util.zip.Inflater { boolean finished(); }
-keepclassmembers class java.util.zip.Inflater { boolean needsInput(); }
-keepclassmembers class java.util.Formatter { int to12Hour(int); }
-keepclassmembers class java.util.zip.Inflater { long getBytesWritten(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegateImplV9$3 { void <init>(android.support.v7.app.AppCompatDelegateImplV9); }
-keepclassmembers class java.util.zip.Inflater { boolean needsDictionary(); }
-keepclassmembers class java.util.zip.Inflater { void setInput(byte[],int,int); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$VPage$VSegment { void <init>(ar.rulosoft.mimanganu.componentes.readers.continuos.VerticalReader$VPage); }
-keepclassmembers class java.util.zip.Inflater { int setFileInput(java.io.FileDescriptor,long,int); }
-keepclassmembers class android.widget.TextView { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class android.widget.TextView { void onStartTemporaryDetach(); }
-keepclassmembers class android.widget.TextView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.widget.TextView { void setSelected(boolean); }
-keepclassmembers class android.widget.TextView { void cancelLongPress(); }
-keepclassmembers class android.widget.TextView { void onFinishTemporaryDetach(); }
-keepclassmembers class android.widget.TextView { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.widget.TextView { boolean didTouchFocusSelect(); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollRange(); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(boolean); }
-keepclassmembers class org.json.JSONStringer$Scope { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.TextView { java.util.Locale getSpellCheckerLocale(); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.widget.TextView { void onLocaleChanged(); }
-keepclassmembers class android.widget.TextView { boolean canSelectText(); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(); }
-keepclassmembers class android.support.v7.widget.TintContextWrapper { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.widget.TextView { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.TextView { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$5 { void <init>(ar.rulosoft.mimanganu.ReaderFragment); }
-keepclassmembers class ar.rulosoft.mimanganu.ReaderFragment$5 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class android.widget.TextView { void sendAccessibilityEvent(int); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[]); }
-keepclassmembers class java.nio.CharBuffer { void <init>(int,long); }
-keepclassmembers class android.widget.TextView { boolean onTextContextMenuItem(int); }
-keepclassmembers class android.view.View$5 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTransformedText(int,int); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTextForAccessibility(); }
-keepclassmembers class android.widget.TextView { int getOffsetForPosition(float,float); }
-keepclassmembers class android.widget.TextView { boolean canCopy(); }
-keepclassmembers class android.widget.TextView { void stopSelectionActionMode(); }
-keepclassmembers class android.widget.TextView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.widget.TextView { int getOffsetAtCoordinate(int,float); }
-keepclassmembers class android.widget.TextView { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class java.nio.CharBuffer { int length(); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$TriggerLongPress { void <init>(android.support.v7.widget.ForwardingListener); }
-keepclassmembers class android.support.v7.widget.ForwardingListener$TriggerLongPress { void run(); }
-keepclassmembers class android.widget.TextView { void onResolveDrawables(int); }
-keepclassmembers class android.widget.TextView { void viewClicked(android.view.inputmethod.InputMethodManager); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionStart(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class android.widget.TextView { void resetResolvedDrawables(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.widget.TextView { void access$200(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionEnd(); }
-keepclassmembers class android.os.AsyncTask$InternalHandler { void <init>(); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { long createNativeInterpolator(android.animation.TimeInterpolator,long); }
-keepclassmembers class java.text.StringCharacterIterator { void <init>(java.lang.String); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class java.text.StringCharacterIterator { int getBeginIndex(); }
-keepclassmembers class java.text.StringCharacterIterator { int getEndIndex(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop$DrawableWrapperStateLollipop { void <init>(android.support.v4.graphics.drawable.DrawableWrapperGingerbread$DrawableWrapperState,android.content.res.Resources); }
-keepclassmembers class java.util.concurrent.TimeUnit$6 { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void <init>(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void setEpicenter(android.graphics.Rect); }
-keepclassmembers class android.widget.SeekBar { void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void <init>(android.app.ActivityTransitionCoordinator$1); }
-keepclassmembers class android.widget.SeekBar { void onProgressRefresh(float,boolean); }
-keepclassmembers class android.widget.SeekBar { void onStartTrackingTouch(); }
-keepclassmembers class android.widget.SeekBar { void onStopTrackingTouch(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 { void <init>(android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,android.support.v7.widget.ActionMenuPresenter); }
-keepclassmembers class android.widget.TextView { android.text.Layout access$800(android.widget.TextView); }
-keepclassmembers class android.support.v4.view.KeyEventCompat { boolean isCtrlPressed(android.view.KeyEvent); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 { android.support.v7.view.menu.ShowableListMenu getPopup(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 { boolean onForwardingStarted(); }
-keepclassmembers class android.support.v7.widget.ActionMenuPresenter$OverflowMenuButton$1 { boolean onForwardingStopped(); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { int getScreenHeightDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { int getSmallestScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class java.lang.LinkageError { void <init>(); }
-keepclassmembers class java.lang.LinkageError { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.content.res.ConfigurationHelper { int getScreenWidthDp(android.content.res.Resources); }
-keepclassmembers class android.support.v4.view.ViewPager { void endDrag(); }
-keepclassmembers class android.support.v4.view.ViewPager { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class android.support.v4.view.ViewPager { void setScrollingCacheEnabled(boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { void computeScroll(); }
-keepclassmembers class android.support.v4.view.ViewPager { void drawableStateChanged(); }
-keepclassmembers class android.support.v4.view.ViewPager { void requestParentDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.support.v4.view.ViewPager { android.support.v4.view.PagerAdapter getAdapter(); }
-keepclassmembers class android.support.v4.view.ViewPager { void onAttachedToWindow(); }
-keepclassmembers class android.support.v4.view.ViewPager { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.support.v4.view.ViewPager { int getCurrentItem(); }
-keepclassmembers class android.support.v4.view.ViewPager { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v4.view.ViewPager { void removeView(android.view.View); }
-keepclassmembers class android.support.v4.view.ViewPager { void populate(); }
-keepclassmembers class android.support.v4.view.ViewPager { void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer,int); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItemInternal(int,boolean,boolean); }
-keepclassmembers class android.support.v4.view.ViewPager { void setCurrentItem(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void setScrollState(int); }
-keepclassmembers class android.support.v4.view.ViewPager { void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { void <init>(java.util.List); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { java.util.List access$000(org.apache.harmony.security.x509.GeneralSubtrees); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { java.util.List getSubtrees(); }
-keepclassmembers class org.acra.builder.LastActivityManager { void clearLastActivity(); }
-keepclassmembers class org.acra.builder.LastActivityManager { java.lang.ref.WeakReference access$002(org.acra.builder.LastActivityManager,java.lang.ref.WeakReference); }
-keepclassmembers class android.graphics.Paint$FontMetricsInt { void <init>(); }
-keepclassmembers class okio.AsyncTimeout$1 { void flush(); }
-keepclassmembers class okio.AsyncTimeout$1 { void <init>(okio.AsyncTimeout,okio.Sink); }
-keepclassmembers class okio.AsyncTimeout$1 { okio.Timeout timeout(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.CancelIntentReceiver { void <init>(); }
-keepclassmembers class okio.AsyncTimeout$1 { void close(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { android.app.PendingIntent getActionIntent(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { boolean getAllowGeneratedReplies(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { android.os.Bundle getExtras(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { int getIcon(); }
-keepclassmembers class android.support.v7.widget.GapWorker$Task { void <init>(); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader$ImageGet { void <init>(com.fedorvlasov.lazylist.ImageLoader,ar.rulosoft.mimanganu.componentes.Imaginable,java.lang.String); }
-keepclassmembers class android.support.v7.widget.GapWorker$Task { void clear(); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { android.support.v4.app.RemoteInput[] getRemoteInputs(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RouteDatabase routeDatabase(); }
-keepclassmembers class android.util.SuperNotCalledException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl { int noteProxyOp(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.http.HttpCodec codec(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RealConnection connection(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.AppOpsManagerCompat$AppOpsManagerImpl { java.lang.String permissionToOp(java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void noNewStreams(); }
-keepclassmembers class rapid.decoder.NextLayoutInspector$1 { void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { boolean hasMoreRoutes(); }
-keepclassmembers class android.text.method.DigitsKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isDecimalPointChar(char); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void release(); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isSignChar(char); }
-keepclassmembers class android.support.design.widget.BaseTransientBottomBar { android.view.View getView(); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(); }
-keepclassmembers class android.support.design.widget.BaseTransientBottomBar { void show(); }
-keepclassmembers class android.os.StrictMode { void clearGatheredViolations(); }
-keepclassmembers class java.lang.System { java.lang.SecurityManager getSecurityManager(); }
-keepclassmembers class android.view.ViewDebug { void <clinit>(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <clinit>(); }
-keepclassmembers class android.graphics.TemporaryBuffer { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Constructor { void <clinit>(); }
-keepclassmembers class android.support.design.widget.BaseTransientBottomBar { android.support.design.widget.BaseTransientBottomBar setDuration(int); }
-keepclassmembers class libcore.reflect.AnnotationAccess { void <clinit>(); }
-keepclassmembers class android.os.Binder { void <clinit>(); }
-keepclassmembers class android.text.style.BulletSpan { void <clinit>(); }
-keepclassmembers class android.util.EventLog { void <clinit>(); }
-keepclassmembers class android.database.DatabaseUtils { void <clinit>(); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String getWebViewPackageName(); }
-keepclassmembers class android.support.v7.widget.RoundRectDrawableWithShadow { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Database { void <clinit>(); }
-keepclassmembers class android.os.Trace { void endSection(); }
-keepclassmembers class android.support.design.widget.ShadowDrawableWrapper { void <clinit>(); }
-keepclassmembers class android.view.HardwareRenderer { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MangaAdapter { void <clinit>(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <clinit>(); }
-keepclassmembers class org.acra.builder.ReportExecutor { void <clinit>(); }
-keepclassmembers class android.system.OsConstants { int placeholder(); }
-keepclassmembers class android.content.res.StringBlock$Height { void <clinit>(); }
-keepclassmembers class java.lang.ref.Reference { void <clinit>(); }
-keepclassmembers class android.support.v4.os.BuildCompat { boolean isAtLeastN(); }
-keepclassmembers class android.app.FragmentManagerImpl { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainActivity { void <clinit>(); }
-keepclassmembers class android.webkit.WebView { void <clinit>(); }
-keepclassmembers class android.support.v4.app.LoaderManagerImpl { void <clinit>(); }
-keepclassmembers class android.support.v7.preference.PreferenceManager { int getDefaultSharedPreferencesMode(); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollBarFadeDuration(); }
-keepclassmembers class android.view.ViewConfiguration { int getPressedStateDuration(); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollDefaultDelay(); }
-keepclassmembers class android.view.ViewConfiguration { int getTapTimeout(); }
-keepclassmembers class android.view.ViewConfiguration { int getDoubleTapTimeout(); }
-keepclassmembers class android.view.ViewConfiguration { int getTouchSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getDoubleTapMinTime(); }
-keepclassmembers class android.view.ViewConfiguration { int getDoubleTapSlop(); }
-keepclassmembers class android.view.ViewConfiguration { long getSendRecurringAccessibilityEventsInterval(); }
-keepclassmembers class android.view.ViewConfiguration { int getMaximumFlingVelocity(); }
-keepclassmembers class android.view.ViewConfiguration { int getMinimumFlingVelocity(); }
-keepclassmembers class android.view.ViewConfiguration { float getScrollFriction(); }
-keepclassmembers class android.support.v7.widget.VectorEnabledTintResources { boolean shouldBeUsed(); }
-keepclassmembers class android.support.v4.view.ViewCompat$ICSViewCompatImpl { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.ChapterDownload { void <clinit>(); }
-keepclassmembers class okio.AsyncTimeout { void <clinit>(); }
-keepclassmembers class android.transition.Fade { void <clinit>(); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.MisMangasAdapter { void <clinit>(); }
-keepclassmembers class android.os.Looper { void prepare(); }
-keepclassmembers class ar.rulosoft.mimanganu.services.SingleDownload { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void <clinit>(); }
-keepclassmembers class android.view.Choreographer { float getRefreshRate(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.MainFragment { void <clinit>(); }
-keepclassmembers class android.preference.PreferenceManager { int getDefaultSharedPreferencesMode(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getLocalHost(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.adapters.DownloadAdapter { void <clinit>(); }
-keepclassmembers class android.media.MediaCodecList { int getCodecCount(); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket(int); }
-keepclassmembers class android.webkit.WebViewFactory { boolean nativeLoadWithRelroFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Random { void <clinit>(); }
-keepclassmembers class android.graphics.NinePatch { boolean isNinePatchChunk(byte[]); }
-keepclassmembers class android.graphics.NinePatch { long validateNinePatchChunk(long,byte[]); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class android.os.Trace { void nativeTraceBegin(long,java.lang.String); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class android.graphics.NinePatch { void nativeDraw(long,android.graphics.Rect,long,long,long,int,int); }
-keepclassmembers class android.os.Trace { void nativeTraceEnd(long); }
-keepclassmembers class android.graphics.ColorFilter { void destroyFilter(long); }
-keepclassmembers class android.graphics.RadialGradient { long nativeCreate1(float,float,float,int[],float[],int); }
-keepclassmembers class android.graphics.RadialGradient { long nativeCreate2(float,float,float,int,int,int); }
-keepclassmembers class android.os.MessageQueue { void nativePollOnce(long,int); }
-keepclassmembers class android.os.MessageQueue { void nativeWake(long); }
-keepclassmembers class android.os.MessageQueue { void nativeDestroy(long); }
-keepclassmembers class libcore.io.AsynchronousCloseMonitor { void signalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePatternNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencyCode(java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencySymbol(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Shader { void nativeSetLocalMatrix(long,long); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayLanguageNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayCountryNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayVariantNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { boolean initLocaleDataNative(java.lang.String,libcore.icu.LocaleData); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayScriptNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String addLikelySubtags(java.lang.String); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.Object newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Object newInstance(java.lang.Object[],boolean); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object newInstance(java.lang.Class,long); }
-keepclassmembers class java.io.ObjectStreamClass { long getConstructorId(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getFieldSignature(java.lang.reflect.Field); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getConstructorSignature(java.lang.reflect.Constructor); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getMethodSignature(java.lang.reflect.Method); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasClinit(java.lang.Class); }
-keepclassmembers class android.view.VelocityTracker { void nativeClear(long); }
-keepclassmembers class android.view.VelocityTracker { void nativeComputeCurrentVelocity(long,int,float); }
-keepclassmembers class android.view.VelocityTracker { void nativeAddMovement(long,android.view.MotionEvent); }
-keepclassmembers class android.view.VelocityTracker { long nativeInitialize(java.lang.String); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetYVelocity(long,int); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetXVelocity(long,int); }
-keepclassmembers class android.util.FloatMath { float sqrt(float); }
-keepclassmembers class android.util.FloatMath { float floor(float); }
-keepclassmembers class java.util.regex.Pattern { long compileImpl(java.lang.String,int); }
-keepclassmembers class android.util.FloatMath { float ceil(float); }
-keepclassmembers class java.lang.Object { void wait(long,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallIntMethod(java.lang.Object,long,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetIntMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetFloatMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallFloatMethod(java.lang.Object,long,float); }
-keepclassmembers class android.view.RenderNode { long nCreate(java.lang.String); }
-keepclassmembers class android.view.RenderNode { void nSetDisplayListData(long,long); }
-keepclassmembers class android.view.RenderNode { void nGetTransformMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { void nGetInverseTransformMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetLeftAndRight(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nHasIdentityMatrix(long); }
-keepclassmembers class android.view.RenderNode { boolean nSetLeftTopRightBottom(long,int,int,int,int); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetTopAndBottom(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetBottom(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetTop(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetRight(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetLeft(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetClipToBounds(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerType(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerPaint(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nSetProjectBackwards(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetProjectionReceiver(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineRoundRect(long,int,int,int,int,float,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineConvexPath(long,long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineEmpty(long); }
-keepclassmembers class android.view.RenderNode { boolean nSetHasOverlappingRendering(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineNone(long); }
-keepclassmembers class android.view.RenderNode { boolean nSetElevation(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetAlpha(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationZ(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotation(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetStaticMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nSetAnimationMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { float nGetScaleX(long); }
-keepclassmembers class android.view.RenderNode { float nGetScaleY(long); }
-keepclassmembers class android.view.RenderNode { float nGetElevation(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationY(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationX(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationZ(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotation(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotationY(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotationX(long); }
-keepclassmembers class android.view.RenderNode { float nGetPivotX(long); }
-keepclassmembers class android.view.RenderNode { boolean nIsPivotExplicitlySet(long); }
-keepclassmembers class android.view.RenderNode { void nAddAnimator(long,long); }
-keepclassmembers class android.view.RenderNode { float nGetPivotY(long); }
-keepclassmembers class java.lang.Character { int unicodeBlockForCodePoint(int); }
-keepclassmembers class java.lang.Character { byte getIcuDirectionality(int); }
-keepclassmembers class java.lang.Character { int digitImpl(int,int); }
-keepclassmembers class java.lang.Character { boolean isDigitImpl(int); }
-keepclassmembers class java.lang.Character { int getTypeImpl(int); }
-keepclassmembers class java.lang.Character { boolean isLetterImpl(int); }
-keepclassmembers class java.lang.Character { boolean isLowerCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigitImpl(int); }
-keepclassmembers class java.lang.Character { boolean isSpaceCharImpl(int); }
-keepclassmembers class java.lang.Character { boolean isTitleCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isUpperCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isWhitespaceImpl(int); }
-keepclassmembers class java.lang.Character { int toTitleCaseImpl(int); }
-keepclassmembers class java.lang.Character { int toLowerCaseImpl(int); }
-keepclassmembers class java.lang.Character { int toUpperCaseImpl(int); }
-keepclassmembers class android.graphics.Region { void nativeSetRegion(long,long); }
-keepclassmembers class android.graphics.Region { boolean nativeOp(long,int,int,int,int,int); }
-keepclassmembers class android.graphics.Region { boolean nativeSetRect(long,int,int,int,int); }
-keepclassmembers class java.lang.Math { double asin(double); }
-keepclassmembers class java.lang.Math { double acos(double); }
-keepclassmembers class java.lang.Math { double ceil(double); }
-keepclassmembers class java.lang.Math { double atan2(double,double); }
-keepclassmembers class java.lang.Math { double cos(double); }
-keepclassmembers class java.lang.Math { double exp(double); }
-keepclassmembers class java.lang.Math { double hypot(double,double); }
-keepclassmembers class java.lang.Math { double log(double); }
-keepclassmembers class java.lang.Math { double log10(double); }
-keepclassmembers class java.lang.Math { double floor(double); }
-keepclassmembers class java.lang.Math { double pow(double,double); }
-keepclassmembers class java.lang.Math { double sin(double); }
-keepclassmembers class java.lang.Math { double sqrt(double); }
-keepclassmembers class java.lang.Math { double tan(double); }
-keepclassmembers class android.os.Parcel { int nativeDataAvail(long); }
-keepclassmembers class android.os.Parcel { int nativeDataPosition(long); }
-keepclassmembers class android.os.Parcel { void nativeSetDataPosition(long,int); }
-keepclassmembers class android.os.Parcel { int nativeDataSize(long); }
-keepclassmembers class android.os.Parcel { void nativeRestoreAllowFds(long,boolean); }
-keepclassmembers class android.os.Parcel { void nativeWriteByteArray(long,byte[],int,int); }
-keepclassmembers class android.os.Parcel { boolean nativePushAllowFds(long,boolean); }
-keepclassmembers class android.os.Parcel { void nativeWriteInt(long,int); }
-keepclassmembers class android.os.Parcel { void nativeWriteLong(long,long); }
-keepclassmembers class android.os.Parcel { void nativeWriteString(long,java.lang.String); }
-keepclassmembers class android.os.Parcel { void nativeWriteStrongBinder(long,android.os.IBinder); }
-keepclassmembers class android.os.Parcel { byte[] nativeCreateByteArray(long); }
-keepclassmembers class android.os.Parcel { void nativeWriteFloat(long,float); }
-keepclassmembers class android.os.Parcel { int nativeReadInt(long); }
-keepclassmembers class android.os.Parcel { long nativeReadLong(long); }
-keepclassmembers class android.os.Parcel { void nativeWriteDouble(long,double); }
-keepclassmembers class android.os.Parcel { double nativeReadDouble(long); }
-keepclassmembers class android.os.Parcel { float nativeReadFloat(long); }
-keepclassmembers class android.os.Parcel { java.lang.String nativeReadString(long); }
-keepclassmembers class android.os.Parcel { android.os.IBinder nativeReadStrongBinder(long); }
-keepclassmembers class android.os.Parcel { void nativeFreeBuffer(long); }
-keepclassmembers class android.os.Parcel { void nativeAppendFrom(long,long,int,int); }
-keepclassmembers class android.os.Parcel { void nativeWriteInterfaceToken(long,java.lang.String); }
-keepclassmembers class android.os.Parcel { boolean nativeHasFileDescriptors(long); }
-keepclassmembers class java.lang.ProcessManager { int exec(java.lang.String[],java.lang.String[],java.lang.String,java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,boolean); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nIncStrong(long); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nDecStrong(long); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toAsciiBytes(char[],int,int); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toUtf8Bytes(char[],int,int); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toIsoLatin1Bytes(char[],int,int); }
-keepclassmembers class java.nio.charset.Charsets { void isoLatin1BytesToChars(byte[],int,int,char[]); }
-keepclassmembers class java.nio.charset.Charsets { void asciiBytesToChars(byte[],int,int,char[]); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreate(int[],int,int,int,int,int,boolean); }
-keepclassmembers class android.graphics.Bitmap { void nativeErase(long,int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreateFromParcel(android.os.Parcel); }
-keepclassmembers class android.text.StaticLayout { int[] nLineBreakOpportunities(java.lang.String,char[],int,int[]); }
-keepclassmembers class android.graphics.FontFamily { long nCreateFamily(java.lang.String,int); }
-keepclassmembers class android.graphics.FontFamily { boolean nAddFontWeightStyle(long,java.lang.String,int,boolean); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate1(float,float,float,float,int[],float[],int); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate2(float,float,float,float,int,int,int); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreatePaint(long); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreateFloat(float); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { long native_CreatePorterDuffFilter(int,int); }
-keepclassmembers class java.math.NativeBN { void putLongInt(long,long); }
-keepclassmembers class java.math.NativeBN { int BN_cmp(long,long); }
-keepclassmembers class java.math.NativeBN { void putULongInt(long,long,boolean); }
-keepclassmembers class java.math.NativeBN { int BN_dec2bn(long,java.lang.String); }
-keepclassmembers class java.math.NativeBN { void BN_copy(long,long); }
-keepclassmembers class java.math.NativeBN { void litEndInts2bn(int[],int,boolean,long); }
-keepclassmembers class java.math.NativeBN { void twosComp2bn(byte[],int,long); }
-keepclassmembers class java.math.NativeBN { java.lang.String BN_bn2dec(long); }
-keepclassmembers class java.math.NativeBN { int[] bn2litEndInts(long); }
-keepclassmembers class java.math.NativeBN { int sign(long); }
-keepclassmembers class java.math.NativeBN { void BN_set_negative(long,int); }
-keepclassmembers class java.math.NativeBN { long longInt(long); }
-keepclassmembers class java.math.NativeBN { int bitLength(long); }
-keepclassmembers class java.math.NativeBN { boolean BN_is_bit_set(long,int); }
-keepclassmembers class java.math.NativeBN { void BN_shift(long,long,int); }
-keepclassmembers class java.math.NativeBN { void BN_mul_word(long,int); }
-keepclassmembers class java.math.NativeBN { void BN_add(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_mul(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_exp(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_div(long,long,long,long); }
-keepclassmembers class android.content.res.AssetManager { void setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourceName(int); }
-keepclassmembers class android.content.res.AssetManager { int getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { long openNonAssetNative(int,java.lang.String,int); }
-keepclassmembers class android.content.res.AssetManager { void destroyAsset(long); }
-keepclassmembers class android.content.res.AssetManager { int loadResourceValue(int,short,android.util.TypedValue,boolean); }
-keepclassmembers class android.content.res.AssetManager { long getAssetLength(long); }
-keepclassmembers class android.content.res.AssetManager { boolean applyStyle(long,int,int,long,int[],int[],int[]); }
-keepclassmembers class android.content.res.AssetManager { boolean resolveAttrs(long,int,int,int[],int[],int[],int[]); }
-keepclassmembers class android.content.res.AssetManager { boolean retrieveAttributes(long,int[],int[],int[]); }
-keepclassmembers class android.content.res.AssetManager { void copyTheme(long,long); }
-keepclassmembers class android.content.res.AssetManager { long getNativeStringBlock(int); }
-keepclassmembers class android.content.res.AssetManager { long openXmlAssetNative(int,java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { void applyThemeStyle(long,int,boolean); }
-keepclassmembers class android.content.res.AssetManager { int[] getArrayStringInfo(int); }
-keepclassmembers class android.graphics.BitmapShader { long nativeCreate(long,int,int); }
-keepclassmembers class android.content.res.AssetManager { void init(boolean); }
-keepclassmembers class android.graphics.Interpolator { long nativeConstructor(int,int); }
-keepclassmembers class android.graphics.Interpolator { int nativeTimeToValues(long,int,float[]); }
-keepclassmembers class android.graphics.Color { int nativeHSVToColor(int,float[]); }
-keepclassmembers class android.graphics.Color { void nativeRGBToHSV(int,int,int,float[]); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object createObjectArray(java.lang.Class,int); }
-keepclassmembers class java.lang.StringToReal { double parseDblImpl(java.lang.String,int); }
-keepclassmembers class java.lang.System { void arraycopyCharUnchecked(char[],int,char[],int,int); }
-keepclassmembers class java.lang.StringToReal { float parseFltImpl(java.lang.String,int); }
-keepclassmembers class java.lang.System { void arraycopyByteUnchecked(byte[],int,byte[],int,int); }
-keepclassmembers class java.lang.System { void arraycopyIntUnchecked(int[],int,int[],int,int); }
-keepclassmembers class java.lang.System { void arraycopyFloatUnchecked(float[],int,float[],int,int); }
-keepclassmembers class java.lang.System { void arraycopyLongUnchecked(long[],int,long[],int,int); }
-keepclassmembers class java.lang.System { void arraycopyBooleanUnchecked(boolean[],int,boolean[],int,int); }
-keepclassmembers class java.lang.System { int identityHashCode(java.lang.Object); }
-keepclassmembers class java.lang.System { java.lang.String mapLibraryName(java.lang.String); }
-keepclassmembers class java.lang.System { void log(char,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.content.res.XmlBlock { long nativeCreateParseState(long); }
-keepclassmembers class android.content.res.XmlBlock { long nativeGetStringBlock(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeNext(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetName(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetLineNumber(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetText(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeCount(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeResource(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeData(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeDataType(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeStringValue(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeIndex(long,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroyParseState(long); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroy(long); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPatternImpl(long,boolean,java.lang.String); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatLong(long,long,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDigitList(long,java.lang.String,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDouble(long,double,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { long open(java.lang.String,java.lang.String,char,char,java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,char,java.lang.String,char,java.lang.String,char,char); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getAttribute(long,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setDecimalFormatSymbols(long,java.lang.String,char,char,java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,char,java.lang.String,char,java.lang.String,char,char); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.Number parse(long,java.lang.String,java.text.ParsePosition,boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setAttribute(long,int,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setRoundingMode(long,int,double); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyPaintAnimator(long,int,float); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyFloatAnimator(long,float); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartValue(long,float); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetDuration(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartDelay(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetInterpolator(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetAllowRunningAsync(long,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { long nGetDuration(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nStart(long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetListener(long,android.view.RenderNodeAnimator); }
-keepclassmembers class android.view.RenderNodeAnimator { void nEnd(long); }
-keepclassmembers class java.lang.Runtime { void nativeExit(int); }
-keepclassmembers class java.lang.Runtime { java.lang.String nativeLoad(java.lang.String,java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] nativeGetStackTrace(java.lang.Object); }
-keepclassmembers class android.media.MediaCodecList { boolean isEncoder(int); }
-keepclassmembers class android.media.MediaCodecList { java.lang.String[] getSupportedTypes(int); }
-keepclassmembers class android.media.MediaCodecList { android.media.MediaCodecInfo$CodecCapabilities getCodecCapabilities(int,java.lang.String); }
-keepclassmembers class libcore.icu.TimeZoneNames { void fillZoneStrings(java.lang.String,java.lang.String[][]); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getClosestUserClassLoader(java.lang.ClassLoader,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.Paint { void setFlags(int); }
-keepclassmembers class android.graphics.Paint { void setAntiAlias(boolean); }
-keepclassmembers class android.graphics.Paint { void setDither(boolean); }
-keepclassmembers class android.graphics.Paint { void setFakeBoldText(boolean); }
-keepclassmembers class android.graphics.Paint { void setFilterBitmap(boolean); }
-keepclassmembers class android.graphics.Paint { void setColor(int); }
-keepclassmembers class android.graphics.Paint { void setAlpha(int); }
-keepclassmembers class android.graphics.Paint { void setStrokeWidth(float); }
-keepclassmembers class android.graphics.Paint { void setStrokeMiter(float); }
-keepclassmembers class android.graphics.Paint { void setElegantTextHeight(boolean); }
-keepclassmembers class android.graphics.Paint { void setTextSize(float); }
-keepclassmembers class android.graphics.Paint { void setTextScaleX(float); }
-keepclassmembers class android.graphics.Paint { void setTextSkewX(float); }
-keepclassmembers class android.graphics.Paint { float getFontMetrics(android.graphics.Paint$FontMetrics); }
-keepclassmembers class android.graphics.Paint { int getFontMetricsInt(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.graphics.Paint { float native_measureText(char[],int,int,int); }
-keepclassmembers class android.graphics.Paint { float native_measureText(java.lang.String,int); }
-keepclassmembers class android.graphics.Paint { long native_initWithPaint(long); }
-keepclassmembers class android.graphics.Paint { void native_reset(long); }
-keepclassmembers class android.graphics.Paint { void native_set(long,long); }
-keepclassmembers class android.graphics.Paint { int native_getStyle(long); }
-keepclassmembers class android.graphics.Paint { void native_setStyle(long,int); }
-keepclassmembers class android.graphics.Paint { void native_setStrokeCap(long,int); }
-keepclassmembers class android.graphics.Paint { void native_setStrokeJoin(long,int); }
-keepclassmembers class android.graphics.Paint { long native_setShader(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setColorFilter(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setXfermode(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setPathEffect(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setTypeface(long,long); }
-keepclassmembers class android.graphics.Paint { void native_setTextLocale(long,java.lang.String); }
-keepclassmembers class android.graphics.Paint { float native_getTextRunAdvances(long,long,char[],int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.graphics.Paint { float native_getTextRunAdvances(long,long,java.lang.String,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.graphics.Paint { int native_getTextRunCursor(long,char[],int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { int native_getTextRunCursor(long,java.lang.String,int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { void native_setShadowLayer(long,float,float,float,int); }
-keepclassmembers class android.graphics.Paint { float native_getLetterSpacing(long); }
-keepclassmembers class android.graphics.Paint { void native_setLetterSpacing(long,float); }
-keepclassmembers class android.graphics.Paint { void native_setFontFeatureSettings(long,java.lang.String); }
-keepclassmembers class android.graphics.Matrix { boolean native_isIdentity(long); }
-keepclassmembers class android.graphics.Matrix { long native_create(long); }
-keepclassmembers class android.graphics.Matrix { boolean native_rectStaysRect(long); }
-keepclassmembers class android.graphics.Matrix { void native_setTranslate(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_reset(long); }
-keepclassmembers class android.graphics.Matrix { void native_set(long,long); }
-keepclassmembers class android.graphics.Matrix { void native_setScale(long,float,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setScale(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setRotate(long,float); }
-keepclassmembers class android.graphics.Matrix { void native_setRotate(long,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_preScale(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_preTranslate(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_preConcat(long,long); }
-keepclassmembers class android.graphics.Matrix { void native_postTranslate(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_postScale(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_postScale(long,float,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float,float,float); }
-keepclassmembers class android.graphics.Matrix { boolean native_setRectToRect(long,android.graphics.RectF,android.graphics.RectF,int); }
-keepclassmembers class android.graphics.Matrix { void native_postConcat(long,long); }
-keepclassmembers class android.graphics.Matrix { void native_mapPoints(long,float[],int,float[],int,int,boolean); }
-keepclassmembers class android.graphics.Matrix { boolean native_mapRect(long,android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class android.graphics.Matrix { void native_getValues(long,float[]); }
-keepclassmembers class android.graphics.Matrix { boolean native_equals(long,long); }
-keepclassmembers class libcore.io.Memory { int peekIntNative(long); }
-keepclassmembers class libcore.io.Memory { void peekByteArray(long,byte[],int,int); }
-keepclassmembers class libcore.io.Memory { byte peekByte(long); }
-keepclassmembers class libcore.io.Memory { void peekIntArray(long,int[],int,int,boolean); }
-keepclassmembers class android.graphics.PathMeasure { long native_create(long,boolean); }
-keepclassmembers class android.graphics.PathMeasure { void native_setPath(long,long,boolean); }
-keepclassmembers class android.graphics.PathMeasure { float native_getLength(long); }
-keepclassmembers class android.graphics.PathMeasure { boolean native_getSegment(long,float,float,long,boolean); }
-keepclassmembers class com.squareup.duktape.Duktape { java.lang.Object evaluate(long,java.lang.String,java.lang.String); }
-keepclassmembers class com.squareup.duktape.Duktape { void destroyContext(long); }
-keepclassmembers class android.graphics.SweepGradient { long nativeCreate1(float,float,int[],float[]); }
-keepclassmembers class android.graphics.SweepGradient { long nativeCreate2(float,float,int,int); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.Class findLoadedClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.String getBootClassPathResource(java.lang.String,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { long getWordInstanceImpl(java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setTextImpl(long,java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean isBoundaryImpl(long,java.lang.String,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int currentImpl(long,java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int precedingImpl(long,java.lang.String,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int followingImpl(long,java.lang.String,int); }
-keepclassmembers class android.graphics.BitmapRegionDecoder { android.graphics.BitmapRegionDecoder nativeNewInstance(java.io.InputStream,byte[],boolean); }
-keepclassmembers class android.graphics.BitmapRegionDecoder { android.graphics.BitmapRegionDecoder nativeNewInstance(long,boolean); }
-keepclassmembers class libcore.icu.NativeConverter { java.nio.charset.Charset charsetForName(java.lang.String); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress); }
-keepclassmembers class libcore.io.Posix { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class libcore.io.Posix { boolean access(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { int fcntlVoid(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.io.Posix { void close(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.Posix { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class libcore.io.Posix { int fcntlLong(java.io.FileDescriptor,int,long); }
-keepclassmembers class libcore.io.Posix { java.lang.String getenv(java.lang.String); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.Posix { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class libcore.io.Posix { java.lang.String gai_strerror(int); }
-keepclassmembers class libcore.io.Posix { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { java.net.SocketAddress getsockname(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.Posix { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { android.system.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { int ioctlInt(java.io.FileDescriptor,int,android.util.MutableInt); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class libcore.io.Posix { void kill(int,int); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String); }
-keepclassmembers class libcore.io.Posix { void mkdir(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { void listen(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.io.Posix { long lseek(java.io.FileDescriptor,long,int); }
-keepclassmembers class libcore.io.Posix { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class libcore.io.Posix { int readBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class libcore.io.Posix { int poll(android.system.StructPollfd[],int); }
-keepclassmembers class libcore.io.Posix { int recvfromBytes(java.io.FileDescriptor,java.lang.Object,int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class libcore.io.Posix { int sendtoBytes(java.io.FileDescriptor,java.lang.Object,int,int,int,java.net.InetAddress,int); }
-keepclassmembers class libcore.io.Posix { void remove(java.lang.String); }
-keepclassmembers class libcore.io.Posix { void setsockoptByte(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.Posix { void rename(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.io.Posix { void setsockoptInt(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptGroupReq(java.io.FileDescriptor,int,int,android.system.StructGroupReq); }
-keepclassmembers class libcore.io.Posix { void setsockoptGroupSourceReq(java.io.FileDescriptor,int,int,android.system.StructGroupSourceReq); }
-keepclassmembers class libcore.io.Posix { void setsockoptLinger(java.io.FileDescriptor,int,int,android.system.StructLinger); }
-keepclassmembers class libcore.io.Posix { void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor socket(int,int,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class libcore.io.Posix { long sysconf(int); }
-keepclassmembers class libcore.io.Posix { android.system.StructStatVfs statvfs(java.lang.String); }
-keepclassmembers class libcore.io.Posix { java.lang.String strerror(int); }
-keepclassmembers class libcore.io.Posix { int writeBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class android.text.AndroidBidi { int runBidi(int,char[],byte[],int,boolean); }
-keepclassmembers class android.os.Process { void sendSignal(int,int); }
-keepclassmembers class android.os.Process { void setThreadPriority(int); }
-keepclassmembers class libcore.icu.Transliterator { long create(java.lang.String); }
-keepclassmembers class libcore.icu.Transliterator { java.lang.String transliterate(long,java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { long nativeReadFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetNumber(long,int); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetMatch(long,int,char[],int); }
-keepclassmembers class android.view.KeyCharacterMap { void nativeWriteToParcel(long,android.os.Parcel); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetDisplayLabel(long,int); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetCharacter(long,int,int); }
-keepclassmembers class android.view.KeyCharacterMap { int nativeGetKeyboardType(long); }
-keepclassmembers class android.graphics.PorterDuffXfermode { long nativeCreateXfermode(int); }
-keepclassmembers class java.lang.Class { java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class android.content.res.StringBlock { int nativeGetSize(long); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String nativeGetString(long,int); }
-keepclassmembers class libcore.icu.NativePluralRules { long forLocaleImpl(java.lang.String); }
-keepclassmembers class android.content.res.StringBlock { int[] nativeGetStyle(long,int); }
-keepclassmembers class android.view.DisplayEventReceiver { long nativeInit(android.view.DisplayEventReceiver,android.os.MessageQueue); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object invoke(java.lang.Object,java.lang.Object[],boolean); }
-keepclassmembers class android.graphics.DashPathEffect { long nativeCreate(float[],float); }
-keepclassmembers class java.lang.Double { long doubleToRawLongBits(double); }
-keepclassmembers class android.view.DisplayEventReceiver { void nativeScheduleVsync(long); }
-keepclassmembers class java.lang.Double { double longBitsToDouble(long); }
-keepclassmembers class android.view.MotionEvent { long nativeInitialize(long,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[]); }
-keepclassmembers class android.view.MotionEvent { long nativeCopy(long,long,boolean); }
-keepclassmembers class android.view.MotionEvent { int nativeGetSource(long); }
-keepclassmembers class android.view.MotionEvent { int nativeSetSource(long,int); }
-keepclassmembers class android.view.MotionEvent { void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetAction(long); }
-keepclassmembers class android.view.MotionEvent { void nativeSetAction(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetDeviceId(long); }
-keepclassmembers class android.view.MotionEvent { boolean nativeIsTouchEvent(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetFlags(long); }
-keepclassmembers class android.view.MotionEvent { void nativeSetFlags(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetEdgeFlags(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetMetaState(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetButtonState(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYOffset(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXPrecision(long); }
-keepclassmembers class android.view.MotionEvent { void nativeOffsetLocation(long,float,float); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYPrecision(long); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXOffset(long); }
-keepclassmembers class android.view.MotionEvent { long nativeGetDownTimeNanos(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerCount(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerId(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetToolType(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetHistorySize(long); }
-keepclassmembers class android.view.MotionEvent { int nativeFindPointerIndex(long,int); }
-keepclassmembers class android.view.MotionEvent { float nativeGetRawAxisValue(long,int,int,int); }
-keepclassmembers class android.view.MotionEvent { long nativeGetEventTimeNanos(long,int); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords); }
-keepclassmembers class android.view.MotionEvent { float nativeGetAxisValue(long,int,int,int); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties); }
-keepclassmembers class android.view.MotionEvent { void nativeTransform(long,android.graphics.Matrix); }
-keepclassmembers class android.view.MotionEvent { java.lang.String nativeAxisToString(int); }
-keepclassmembers class android.os.Binder { void setThreadStrictModePolicy(int); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLutInterpolator(float[]); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { long createNativeDecoder(java.io.InputStream); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { void destroyNativeDecoder(long); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { boolean nativeBegin(long); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { android.graphics.Bitmap nativeDecode(long,int,int,int,int,boolean,android.graphics.Bitmap$Config,android.graphics.BitmapFactory$Options); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { int nativeGetHeight(long); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { int nativeGetWidth(long); }
-keepclassmembers class java.util.zip.CRC32 { long updateImpl(byte[],int,int,long); }
-keepclassmembers class java.lang.RealToString { void bigIntDigitGenerator(long,int,boolean,int); }
-keepclassmembers class android.graphics.Path { long init2(long); }
-keepclassmembers class android.graphics.Path { void native_reset(long); }
-keepclassmembers class android.graphics.Path { int native_getFillType(long); }
-keepclassmembers class android.graphics.Path { void native_setFillType(long,int); }
-keepclassmembers class android.graphics.Path { boolean native_isEmpty(long); }
-keepclassmembers class android.graphics.Path { void native_computeBounds(long,android.graphics.RectF); }
-keepclassmembers class android.graphics.Path { void native_moveTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_rMoveTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_lineTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_rLineTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_quadTo(long,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_rQuadTo(long,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_cubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_rCubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_arcTo(long,float,float,float,float,float,float,boolean); }
-keepclassmembers class android.graphics.Path { void native_close(long); }
-keepclassmembers class android.graphics.Path { void native_addRect(long,float,float,float,float,int); }
-keepclassmembers class android.graphics.Path { void native_addOval(long,float,float,float,float,int); }
-keepclassmembers class android.graphics.Path { void native_addRoundRect(long,float,float,float,float,float[],int); }
-keepclassmembers class android.graphics.Path { void native_addPath(long,long,long); }
-keepclassmembers class android.graphics.Path { float[] native_approximate(long,float); }
-keepclassmembers class android.database.CursorWindow { long nativeCreate(java.lang.String,int); }
-keepclassmembers class android.database.CursorWindow { void nativeDispose(long); }
-keepclassmembers class android.database.CursorWindow { void nativeClear(long); }
-keepclassmembers class android.database.CursorWindow { int nativeGetNumRows(long); }
-keepclassmembers class android.database.CursorWindow { java.lang.String nativeGetString(long,int,int); }
-keepclassmembers class android.database.CursorWindow { long nativeGetLong(long,int,int); }
-keepclassmembers class android.database.CursorWindow { double nativeGetDouble(long,int,int); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapInt(java.lang.Object,long,int,int); }
-keepclassmembers class sun.misc.Unsafe { void putOrderedInt(java.lang.Object,long,int); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { long createNativeDecoder(java.io.InputStream); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { void destroyNativeDecoder(long); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { boolean nativeBegin(long); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { android.graphics.Bitmap nativeDecode(long,int,int,int,int,boolean,android.graphics.Bitmap$Config,android.graphics.BitmapFactory$Options); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { int nativeGetHeight(long); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { int nativeGetWidth(long); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { boolean nativeHasAlpha(long); }
-keepclassmembers class java.lang.Thread { int nativeGetStatus(boolean); }
-keepclassmembers class java.lang.Thread { void nativeSetName(java.lang.String); }
-keepclassmembers class java.lang.Thread { void nativeSetPriority(int); }
-keepclassmembers class java.lang.Thread { void sleep(java.lang.Object,long,int); }
-keepclassmembers class android.media.MediaCodecList { java.lang.String getCodecName(int); }
-keepclassmembers class java.lang.Thread { void nativeCreate(java.lang.Thread,long,boolean); }
-keepclassmembers class java.util.regex.Matcher { void closeImpl(long); }
-keepclassmembers class java.util.regex.Matcher { boolean findImpl(long,java.lang.String,int,int[]); }
-keepclassmembers class java.util.regex.Matcher { boolean findNextImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { int groupCountImpl(long); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAtImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { boolean matchesImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { long openImpl(long); }
-keepclassmembers class java.lang.Thread { boolean nativeHoldsLock(java.lang.Object); }
-keepclassmembers class java.util.regex.Matcher { void setInputImpl(long,java.lang.String,int,int); }
-keepclassmembers class java.util.regex.Matcher { void useAnchoringBoundsImpl(long,boolean); }
-keepclassmembers class java.util.regex.Matcher { void useTransparentBoundsImpl(long,boolean); }
-keepclassmembers class libcore.icu.NativeNormalizer { java.lang.String normalizeImpl(java.lang.String,int); }
-keepclassmembers class libcore.icu.NativeIDN { java.lang.String convertImpl(java.lang.String,int,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativeOpen(java.lang.String,int,java.lang.String,boolean,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeClose(long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeRegisterCustomFunction(long,android.database.sqlite.SQLiteCustomFunction); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeRegisterLocalizedCollators(long,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativePrepareStatement(long,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeFinalizeStatement(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { int nativeGetParameterCount(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { boolean nativeIsReadOnly(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { int nativeGetColumnCount(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String nativeGetColumnName(long,long,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindNull(long,long,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindLong(long,long,int,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindDouble(long,long,int,double); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindString(long,long,int,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindBlob(long,long,int,byte[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeResetStatementAndClearBindings(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeExecute(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativeExecuteForLong(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String nativeExecuteForString(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { int nativeExecuteForChangedRowCount(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativeExecuteForLastInsertedRowId(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativeExecuteForCursorWindow(long,long,long,int,int,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeResetCancel(long,boolean); }
-keepclassmembers class android.util.Log { boolean isLoggable(java.lang.String,int); }
-keepclassmembers class android.util.Log { int println_native(int,int,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeStream(java.io.InputStream,byte[],android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeAsset(long,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.String); }
-keepclassmembers class java.lang.String { int fastIndexOf(int,int); }
-keepclassmembers class java.lang.reflect.Field { boolean getBoolean(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { byte getByte(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Object get(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { char getChar(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { double getDouble(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { float getFloat(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { int getInt(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { long getLong(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { short getShort(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { void set(java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setByte(java.lang.Object,byte,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setBoolean(java.lang.Object,boolean,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setChar(java.lang.Object,char,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setDouble(java.lang.Object,double,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setInt(java.lang.Object,int,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setFloat(java.lang.Object,float,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setLong(java.lang.Object,long,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setShort(java.lang.Object,short,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nSetHighContrastText(long,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nSetViewport(long,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void nInsertReorderBarrier(long,boolean); }
-keepclassmembers class android.view.GLES20Canvas { int nPrepare(long,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nFinish(long); }
-keepclassmembers class android.view.GLES20Canvas { int nPrepareDirty(long,int,int,int,int,boolean); }
-keepclassmembers class android.view.GLES20Canvas { long nFinishRecording(long); }
-keepclassmembers class android.view.GLES20Canvas { int nDrawRenderNode(long,long,android.graphics.Rect,int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawLayer(long,long,float,float); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class generateProxy(java.lang.String,java.lang.Class[],java.lang.ClassLoader,java.lang.reflect.ArtMethod[],java.lang.Class[][]); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipRect(long,float,float,float,float,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipPath(long,long,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipRect(long,int,int,int,int,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean nGetClipBounds(long,android.graphics.Rect); }
-keepclassmembers class android.view.GLES20Canvas { boolean nQuickReject(long,float,float,float,float); }
-keepclassmembers class android.view.GLES20Canvas { void nTranslate(long,float,float); }
-keepclassmembers class android.view.GLES20Canvas { void nRotate(long,float); }
-keepclassmembers class android.view.GLES20Canvas { void nScale(long,float,float); }
-keepclassmembers class android.view.GLES20Canvas { void nConcatMatrix(long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nGetMatrix(long,long); }
-keepclassmembers class android.view.GLES20Canvas { int nSaveLayer(long,float,float,float,float,long,int); }
-keepclassmembers class android.view.GLES20Canvas { int nSave(long,int); }
-keepclassmembers class java.lang.Float { int floatToRawIntBits(float); }
-keepclassmembers class java.lang.Float { float intBitsToFloat(int); }
-keepclassmembers class android.view.GLES20Canvas { int nSaveLayerAlpha(long,float,float,float,float,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void nRestore(long); }
-keepclassmembers class android.view.GLES20Canvas { int nGetSaveCount(long); }
-keepclassmembers class android.view.GLES20Canvas { void nRestoreToCount(long,int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawPatch(long,long,long,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawBitmap(long,long,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawBitmap(long,long,float,float,float,float,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawBitmap(long,long,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawCircle(long,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawCircle(long,long,long,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawLines(long,float[],int,int,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawOval(long,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRects(long,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawPath(long,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRoundRect(long,float,float,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRect(long,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawText(long,java.lang.String,int,int,float,float,int,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawText(long,char[],int,int,float,float,int,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class java.io.File { java.lang.String canonicalizePath(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void native_setBitmap(long,long,boolean); }
-keepclassmembers class java.io.File { java.lang.String[] listImpl(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { long initRaster(long); }
-keepclassmembers class android.graphics.Canvas { int native_getWidth(long); }
-keepclassmembers class android.graphics.Canvas { int native_getHeight(long); }
-keepclassmembers class android.graphics.Canvas { int native_save(long,int); }
-keepclassmembers class android.graphics.Canvas { int native_saveLayer(long,float,float,float,float,long,int); }
-keepclassmembers class android.graphics.Canvas { void native_restore(long); }
-keepclassmembers class android.graphics.Canvas { int native_saveLayerAlpha(long,float,float,float,float,int,int); }
-keepclassmembers class android.graphics.Canvas { void native_restoreToCount(long,int); }
-keepclassmembers class android.graphics.Canvas { void native_scale(long,float,float); }
-keepclassmembers class android.graphics.Canvas { int native_getSaveCount(long); }
-keepclassmembers class android.graphics.Canvas { void native_rotate(long,float); }
-keepclassmembers class android.graphics.Canvas { void native_translate(long,float,float); }
-keepclassmembers class android.graphics.Canvas { void native_concat(long,long); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipRect(long,float,float,float,float,int); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipPath(long,long,int); }
-keepclassmembers class android.graphics.Canvas { void native_setMatrix(long,long); }
-keepclassmembers class android.graphics.Canvas { void nativeSetDrawFilter(long,long); }
-keepclassmembers class android.graphics.Canvas { void native_getCTM(long,long); }
-keepclassmembers class android.graphics.Canvas { boolean native_getClipBounds(long,android.graphics.Rect); }
-keepclassmembers class android.graphics.Canvas { boolean native_quickReject(long,float,float,float,float); }
-keepclassmembers class android.graphics.Canvas { void native_drawColor(long,int,int); }
-keepclassmembers class android.graphics.Canvas { void native_drawLines(long,float[],int,int,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawLine(long,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawRect(long,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawOval(long,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawRoundRect(long,float,float,float,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawCircle(long,float,float,float,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawPath(long,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawBitmap(long,long,float,float,long,int,int,int); }
-keepclassmembers class android.graphics.Canvas { void nativeDrawBitmapMatrix(long,long,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawBitmap(long,long,float,float,float,float,float,float,float,float,long,int,int); }
-keepclassmembers class android.graphics.Canvas { void native_drawText(long,char[],int,int,float,float,int,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawText(long,java.lang.String,int,int,float,float,int,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String); }
-keepclassmembers class android.os.SystemProperties { int native_get_int(java.lang.String,int); }
-keepclassmembers class android.os.SystemProperties { long native_get_long(java.lang.String,long); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromTypeface(long,int); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateWeightAlias(long,int); }
-keepclassmembers class android.os.SystemProperties { boolean native_get_boolean(java.lang.String,boolean); }
-keepclassmembers class android.graphics.Typeface { int nativeGetStyle(long); }
-keepclassmembers class android.graphics.Typeface { void nativeSetDefault(long); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromArray(long[]); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClassNative(java.lang.String,java.lang.ClassLoader,long); }
-keepclassmembers class dalvik.system.DexFile { long openDexFileNative(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.util.zip.Inflater { void endImpl(long); }
-keepclassmembers class java.util.zip.Inflater { long createStream(boolean); }
-keepclassmembers class java.util.zip.Inflater { long getTotalOutImpl(long); }
-keepclassmembers class java.util.zip.Inflater { int setFileInputImpl(java.io.FileDescriptor,long,int,long); }
-keepclassmembers class java.util.zip.Inflater { int inflateImpl(byte[],int,int,long); }
-keepclassmembers class java.util.zip.Inflater { void setInputImpl(byte[],int,int,long); }
-keepclassmembers class android.os.ServiceManager { android.os.IServiceManager getIServiceManager(); }
-keepclassmembers class android.support.v4.os.TraceCompat { void endSection(); }
-keepclassmembers class android.util.EventLog { int writeEvent(int,java.lang.String); }
-keepclassmembers class android.graphics.Bitmap { int getDefaultDensity(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil getInstance(); }
-keepclassmembers class android.os.Environment { java.lang.String getExternalStorageState(); }
-keepclassmembers class android.ddm.DdmHandleHello { void register(); }
-keepclassmembers class android.os.Environment { java.io.File getExternalStorageDirectory(); }
-keepclassmembers class okhttp3.internal.platform.Platform { okhttp3.internal.platform.Platform get(); }
-keepclassmembers class org.apache.harmony.luni.internal.util.TimezoneGetter { org.apache.harmony.luni.internal.util.TimezoneGetter getInstance(); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable$Factory getInstance(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperGingerbread { void <clinit>(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { char access$100(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { void <clinit>(); }
-keepclassmembers class dalvik.system.SocketTagger { dalvik.system.SocketTagger get(); }
-keepclassmembers class android.support.graphics.drawable.VectorDrawableCompat { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.NetworkUtilsAndReceiver { void reset(); }
-keepclassmembers class android.ddm.DdmHandleThread { void register(); }
-keepclassmembers class java.util.Locale { java.util.Locale getDefault(); }
-keepclassmembers class dalvik.system.VMRuntime { dalvik.system.VMRuntime getRuntime(); }
-keepclassmembers class android.provider.Settings { java.lang.Object access$000(); }
-keepclassmembers class android.transition.TransitionManager { java.util.ArrayList access$000(); }
-keepclassmembers class android.view.MenuInflater { java.lang.Class[] access$200(); }
-keepclassmembers class java.net.ProxySelector { java.net.ProxySelector getDefault(); }
-keepclassmembers class android.text.Html$HtmlParser { org.ccil.cowan.tagsoup.HTMLSchema access$000(); }
-keepclassmembers class android.view.MenuInflater { java.lang.Class[] access$500(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { org.apache.harmony.security.asn1.ASN1Integer getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { org.apache.harmony.security.asn1.ASN1Any getInstance(); }
-keepclassmembers class java.lang.ProcessManager { java.lang.ProcessManager getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { org.apache.harmony.security.asn1.ASN1UTCTime getInstance(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.TimeInterpolator access$000(); }
-keepclassmembers class com.fedorvlasov.lazylist.ImageLoader { java.util.Map access$400(); }
-keepclassmembers class android.system.Os { int getuid(); }
-keepclassmembers class android.animation.ValueAnimator { float getDurationScale(); }
-keepclassmembers class android.system.Os { int getpid(); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.AssetManager getSystem(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader getSystemClassLoader(); }
-keepclassmembers class android.view.View { boolean access$2000(); }
-keepclassmembers class ar.rulosoft.mimanganu.servers.ServerBase { ar.rulosoft.navegadores.Navigator getNavigatorAndFlushParameters(); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { java.lang.String access$100(); }
-keepclassmembers class android.animation.PathKeyframes { java.util.ArrayList access$200(); }
-keepclassmembers class okhttp3.internal.http2.Huffman { okhttp3.internal.http2.Huffman get(); }
-keepclassmembers class android.os.StrictMode { java.util.HashMap access$100(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$500(); }
-keepclassmembers class android.os.StrictMode { android.util.Singleton access$600(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$700(); }
-keepclassmembers class android.os.StrictMode { boolean access$800(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$900(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$2200(); }
-keepclassmembers class java.lang.System { java.lang.String lineSeparator(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean isInstrumentationEnabled(); }
-keepclassmembers class java.util.Collections { java.util.List emptyList(); }
-keepclassmembers class java.util.Collections { java.util.Iterator access$000(); }
-keepclassmembers class android.app.ActivityThread { android.app.ActivityThread currentActivityThread(); }
-keepclassmembers class java.lang.Runtime { java.lang.Runtime getRuntime(); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable$Factory getInstance(); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[] access$000(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.util.ArrayList getProviders(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.security.Provider$Service getSecureRandomService(); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { int getActionLayoutResource(); }
-keepclassmembers class android.support.v7.app.NotificationCompatImplBase { int getActionTombstoneLayoutResource(); }
-keepclassmembers class android.ddm.DdmHandleHeap { void register(); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void register(); }
-keepclassmembers class android.net.Uri { java.lang.String access$300(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { org.apache.harmony.security.asn1.ASN1Boolean getInstance(); }
-keepclassmembers class android.animation.ArgbEvaluator { android.animation.ArgbEvaluator getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { org.apache.harmony.security.asn1.ASN1BitString getInstance(); }
-keepclassmembers class android.widget.SpellChecker { java.lang.String access$300(); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$600(); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1400(); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1000(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.Chapter$Comparators { java.lang.String access$100(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util$LazyHolder { ar.rulosoft.mimanganu.utils.Util access$000(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { org.apache.harmony.security.asn1.ASN1Oid getInstance(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.LogManager getLogManager(); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { android.view.inputmethod.InputMethodManager peekInstance(); }
-keepclassmembers class java.nio.ByteOrder { java.nio.ByteOrder nativeOrder(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { boolean isCompatVectorFromResourcesEnabled(); }
-keepclassmembers class android.support.v7.app.AppCompatDelegate { int getDefaultNightMode(); }
-keepclassmembers class android.widget.PopupWindow { int[] access$800(); }
-keepclassmembers class android.ddm.DdmHandleExit { void register(); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void register(); }
-keepclassmembers class android.support.v7.widget.RecyclerView$ViewHolder { void <clinit>(); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void register(); }
-keepclassmembers class android.view.Choreographer { long getFrameDelay(); }
-keepclassmembers class android.view.Choreographer { java.lang.Object access$400(); }
-keepclassmembers class okhttp3.internal.publicsuffix.PublicSuffixDatabase { okhttp3.internal.publicsuffix.PublicSuffixDatabase get(); }
-keepclassmembers class com.android.internal.os.RuntimeInit { android.os.IBinder getApplicationObject(); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(); }
-keepclassmembers class android.support.v4.text.BidiFormatter { android.support.v4.text.BidiFormatter access$200(); }
-keepclassmembers class android.support.v4.text.BidiFormatter { android.support.v4.text.BidiFormatter access$300(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { org.apache.harmony.security.asn1.ASN1GeneralizedTime getInstance(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil { java.io.File access$100(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil { int access$200(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { byte[] access$500(); }
-keepclassmembers class android.os.Environment { java.io.File getDataDirectory(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { org.apache.harmony.security.asn1.ASN1OctetString getInstance(); }
-keepclassmembers class android.view.GLES20Canvas { boolean isAvailable(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset defaultCharset(); }
-keepclassmembers class ar.rulosoft.navegadores.Navigator { okhttp3.CookieJar getCookieJar(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { org.apache.harmony.security.asn1.ASN1Enumerated getInstance(); }
-keepclassmembers class libcore.util.ZoneInfoDB { libcore.util.ZoneInfoDB$TzData getInstance(); }
-keepclassmembers class ar.rulosoft.mimanganu.componentes.readers.paged.PagedReader { it.sephiroth.android.library.imagezoom.ImageViewTouchBase$DisplayType access$300(); }
-keepclassmembers class android.support.v4.text.BidiFormatter { android.support.v4.text.TextDirectionHeuristicCompat access$100(); }
-keepclassmembers class android.ddm.DdmRegister { void registerHandlers(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getIntegerInstance(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getPercentInstance(); }
-keepclassmembers class java.security.Security { void access$100(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void <clinit>(); }
-keepclassmembers class android.os.Trace { long cacheEnabledTags(); }
-keepclassmembers class android.os.Trace { long nativeGetEnabledTags(); }
-keepclassmembers class android.os.Trace { long access$000(); }
-keepclassmembers class android.view.HardwareRenderer { boolean isAvailable(); }
-keepclassmembers class android.util.DisplayMetrics { void <clinit>(); }
-keepclassmembers class android.support.v4.widget.AutoScrollHelper { void <clinit>(); }
-keepclassmembers class android.system.OsConstants { void initConstants(); }
-keepclassmembers class android.system.OsConstants { void <clinit>(); }
-keepclassmembers class android.os.Debug { boolean isDebuggerConnected(); }
-keepclassmembers class android.os.Debug { long getPss(); }
-keepclassmembers class android.os.SystemClock { long elapsedRealtime(); }
-keepclassmembers class android.os.MessageQueue { long nativeInit(); }
-keepclassmembers class android.os.SystemClock { long uptimeMillis(); }
-keepclassmembers class android.support.v4.view.ViewCompatHC { long getFrameTime(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void selfInterrupt(); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object getReferent(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getIcuVersion(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCldrVersion(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getUnicodeVersion(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String[] properties(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String bootClassPath(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String classPath(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64Bit(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String vmVersion(); }
-keepclassmembers class android.view.animation.AnimationUtils { long currentAnimationTimeMillis(); }
-keepclassmembers class android.transition.TransitionManager { android.util.ArrayMap access$100(); }
-keepclassmembers class java.lang.Object { void notify(); }
-keepclassmembers class java.lang.Object { java.lang.Object internalClone(); }
-keepclassmembers class android.support.v7.view.menu.MenuAdapter { void <clinit>(); }
-keepclassmembers class java.lang.Object { void wait(); }
-keepclassmembers class android.webkit.WebView { android.webkit.WebViewFactoryProvider getFactory(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.Util { ar.rulosoft.mimanganu.utils.Util getInstance(); }
-keepclassmembers class android.graphics.Region { long nativeConstructor(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void <clinit>(); }
-keepclassmembers class android.os.Parcel { long nativeCreate(); }
-keepclassmembers class android.animation.ValueAnimator { long getFrameDelay(); }
-keepclassmembers class java.math.NativeBN { long BN_new(); }
-keepclassmembers class android.os.UserHandle { int myUserId(); }
-keepclassmembers class java.lang.Void { void <clinit>(); }
-keepclassmembers class android.content.res.AssetManager { int getStringBlockCount(); }
-keepclassmembers class android.content.res.AssetManager { void destroy(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void <clinit>(); }
-keepclassmembers class android.app.AppGlobals { android.app.Application getInitialApplication(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader access$000(); }
-keepclassmembers class android.support.v4.os.TraceJellybeanMR2 { void endSection(); }
-keepclassmembers class android.os.StrictMode { int getThreadPolicyMask(); }
-keepclassmembers class android.os.StrictMode { boolean access$400(); }
-keepclassmembers class java.lang.System { long currentTimeMillis(); }
-keepclassmembers class java.lang.System { long nanoTime(); }
-keepclassmembers class java.lang.System { java.lang.String[] specialProperties(); }
-keepclassmembers class java.net.NetworkInterface { java.util.Enumeration getNetworkInterfaces(); }
-keepclassmembers class java.lang.ClassLoader$SystemClassLoader { void <clinit>(); }
-keepclassmembers class java.lang.Runtime { long maxMemory(); }
-keepclassmembers class java.lang.Throwable { java.lang.Object nativeFillInStackTrace(); }
-keepclassmembers class android.media.MediaCodecList { int native_getCodecCount(); }
-keepclassmembers class android.media.MediaCodecList { void native_init(); }
-keepclassmembers class dalvik.system.VMDebug { boolean isDebuggerConnected(); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getCallingClassLoader(); }
-keepclassmembers class dalvik.system.VMStack { java.lang.Class getStackClass1(); }
-keepclassmembers class dalvik.system.VMStack { java.lang.Class getStackClass2(); }
-keepclassmembers class android.view.GestureDetector { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { int getFlags(); }
-keepclassmembers class android.graphics.Paint { int getColor(); }
-keepclassmembers class android.graphics.Paint { int getAlpha(); }
-keepclassmembers class android.graphics.Paint { float getStrokeWidth(); }
-keepclassmembers class android.graphics.Paint { float getTextSize(); }
-keepclassmembers class android.graphics.Paint { float getTextScaleX(); }
-keepclassmembers class android.graphics.Paint { float ascent(); }
-keepclassmembers class android.graphics.Paint { long native_init(); }
-keepclassmembers class com.squareup.duktape.Duktape { long createContext(); }
-keepclassmembers class java.lang.VMClassLoader { int getBootClassPathSize(); }
-keepclassmembers class libcore.io.Posix { java.lang.String[] environ(); }
-keepclassmembers class libcore.io.Posix { int getpid(); }
-keepclassmembers class libcore.io.Posix { int getuid(); }
-keepclassmembers class libcore.io.Posix { android.system.StructUtsname uname(); }
-keepclassmembers class android.os.Process { int myPid(); }
-keepclassmembers class android.os.Process { int myUid(); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean makeCircularListIfUnenqueued(); }
-keepclassmembers class java.nio.ByteOrder { boolean isLittleEndian(); }
-keepclassmembers class com.android.internal.os.BinderInternal { android.os.IBinder getContextObject(); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getProxyInterfaces(); }
-keepclassmembers class java.lang.Class { java.lang.String getNameNative(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getExceptionTypesNative(); }
-keepclassmembers class android.os.Binder { int getCallingPid(); }
-keepclassmembers class java.lang.Object { void notifyAll(); }
-keepclassmembers class android.os.Binder { int getCallingUid(); }
-keepclassmembers class android.os.Binder { long clearCallingIdentity(); }
-keepclassmembers class android.os.Binder { void init(); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLinearInterpolator(); }
-keepclassmembers class rapid.decoder.builtin.JpegDecoder { void init(); }
-keepclassmembers class android.graphics.Path { long init1(); }
-keepclassmembers class rapid.decoder.builtin.PngDecoder { void init(); }
-keepclassmembers class android.os.BaseBundle { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void nativeInterrupt(); }
-keepclassmembers class java.lang.Thread { boolean interrupted(); }
-keepclassmembers class android.os.Binder { void flushPendingCommands(); }
-keepclassmembers class java.lang.Thread { boolean isInterrupted(); }
-keepclassmembers class java.lang.Thread { void yield(); }
-keepclassmembers class java.util.TimeZone { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void <clinit>(); }
-keepclassmembers class ar.rulosoft.mimanganu.utils.UpdateUtil { android.content.Intent access$300(); }
-keepclassmembers class java.lang.String { java.lang.String intern(); }
-keepclassmembers class android.view.GLES20Canvas { boolean nIsAvailable(); }
-keepclassmembers class android.view.GLES20Canvas { long nCreateDisplayListRenderer(); }
-keepclassmembers class android.view.GLES20Canvas { void <clinit>(); }
-keepclassmembers class android.os.SystemProperties { void native_add_change_callback(); }
-keepclassmembers class android.emoji.EmojiFactory { android.emoji.EmojiFactory newAvailableInstance(); }
