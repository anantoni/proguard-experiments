-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.Runnable); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapObject(java.lang.Object,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class sun.misc.Unsafe { void putObject(java.lang.Object,long,java.lang.Object); }
-keepclassmembers class java.security.PrivilegedActionException { void <init>(java.lang.Exception); }
-keepclassmembers class java.lang.Object { java.lang.Object clone(); }
-keepclassmembers class sun.misc.Unsafe { void putOrderedObject(java.lang.Object,long,java.lang.Object); }
-keepclassmembers class sun.misc.Unsafe { java.lang.Object getObjectVolatile(java.lang.Object,long); }
-keepclassmembers class java.lang.Thread { java.lang.Thread currentThread(); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class java.lang.Object { java.lang.Class getClass(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.String); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(); }
-keepclassmembers class java.lang.Class { java.lang.String getName(); }
-keepclassmembers class java.lang.Class { java.lang.Class getComponentType(); }
-keepclassmembers class java.lang.Class { java.lang.Class getSuperclass(); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getInterfaces(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method[] getDeclaredMethods(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor(java.lang.Class[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor[] getDeclaredConstructors(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getField(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field[] getDeclaredFields(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getDeclaredField(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.Object newInstance(); }
-keepclassmembers class java.lang.Class { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class java.lang.ThreadGroup { void uncaughtException(java.lang.Thread,java.lang.Throwable); }
-keepclassmembers class java.lang.ClassLoader { void <init>(); }
-keepclassmembers class java.lang.reflect.Field { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object invoke(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Object newInstance(java.lang.Object[]); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object get(java.lang.Object,int); }
-keepclassmembers class java.lang.reflect.Array { void set(java.lang.Object,int,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { void <clinit>(); }
-keepclassmembers class android.support.v4.app.Fragment { void <clinit>(); }
-keepclassmembers class android.view.AbsSavedState { void <init>(); }
-keepclassmembers class org.apache.http.message.BasicLineParser { void <init>(org.apache.http.ProtocolVersion); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$3 { void <init>(de.cketti.library.changelog.ChangeLog); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource { void <init>(com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.support.v4.app.Fragment { void <init>(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$3 { int compare(de.cketti.library.changelog.ChangeLog$ReleaseItem,de.cketti.library.changelog.ChangeLog$ReleaseItem); }
-keepclassmembers class com.bumptech.glide.load.model.GenericLoaderFactory$1 { void <init>(); }
-keepclassmembers class org.apache.http.message.BasicLineParser { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource { com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper get(); }
-keepclassmembers class com.bumptech.glide.load.model.GenericLoaderFactory$1 { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource { java.lang.Object get(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$3 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource { int getSize(); }
-keepclassmembers class com.bumptech.glide.load.model.GenericLoaderFactory$1 { java.lang.String toString(); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.os.Parcel); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResource { void recycle(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$6 { void <init>(int); }
-keepclassmembers class android.content.Loader$ForceLoadContentObserver { void <init>(android.content.Loader); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[][] internalZoneStrings(); }
-keepclassmembers class android.widget.TimePickerClockDelegate$Node { void <init>(android.widget.TimePickerClockDelegate,int[]); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { void <init>(com.fsck.k9.preferences.Storage); }
-keepclassmembers class org.apache.http.message.BasicLineParser { org.apache.http.ProtocolVersion parseProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class android.view.AbsSavedState { android.os.Parcelable getSuperState(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper$1 { void <init>(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class android.view.AbsSavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { java.util.List access$000(com.fsck.k9.preferences.StorageEditor); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo44 { void addMessagesThreadingColumns(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { void <clinit>(); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { com.fsck.k9.preferences.Storage access$100(com.fsck.k9.preferences.StorageEditor); }
-keepclassmembers class android.view.AbsSavedState { void <init>(android.view.AbsSavedState$1); }
-keepclassmembers class android.widget.TimePickerClockDelegate$Node { void addChild(android.widget.TimePickerClockDelegate$Node); }
-keepclassmembers class java.text.DateFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { java.util.Map access$200(com.fsck.k9.preferences.StorageEditor); }
-keepclassmembers class android.view.AbsSavedState { void <clinit>(); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { void commitChanges(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$DateComparator { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { int bEncodedLength(byte[]); }
-keepclassmembers class com.fsck.k9.notification.LockScreenNotification$1 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$DateComparator { int compare(android.database.Cursor,android.database.Cursor); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.nio.charset.Charset determineCharset(java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { boolean commit(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$DateComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { org.apache.james.mime4j.codec.EncoderUtil$Encoding determineEncoding(byte[],org.apache.james.mime4j.codec.EncoderUtil$Usage); }
-keepclassmembers class de.cketti.safecontentresolver.SafeContentResolverApi21 { void <init>(android.content.Context); }
-keepclassmembers class de.cketti.safecontentresolver.SafeContentResolverApi21 { int getFileUidOrThrow(java.io.FileDescriptor); }
-keepclassmembers class java.text.DateFormatSymbols { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$33 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$33 { void colorChanged(int); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { byte[] encode(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.lang.String encodeAddressDisplayName(java.lang.String); }
-keepclassmembers class android.widget.Editor$HandleView { void updateDrawable(); }
-keepclassmembers class java.util.IllegalFormatWidthException { void <init>(int); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { com.fsck.k9.preferences.StorageEditor putBoolean(java.lang.String,boolean); }
-keepclassmembers class java.util.IllegalFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class java.text.DateFormatSymbols { boolean timeZoneStringsEqual(java.text.DateFormatSymbols,java.text.DateFormatSymbols); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { void copy(android.content.SharedPreferences); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.lang.String encodeB(java.lang.String,java.lang.String,int,java.nio.charset.Charset,byte[]); }
-keepclassmembers class android.widget.Editor$HandleView { void startTouchUpFilter(int); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { com.fsck.k9.preferences.StorageEditor putInt(java.lang.String,int); }
-keepclassmembers class android.widget.Editor$HandleView { void addPositionToTouchUpFilter(int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$6 { com.fsck.k9.mail.filter.SignSafeOutputStream$State nextState(int); }
-keepclassmembers class org.apache.http.message.BasicLineParser { org.apache.http.ProtocolVersion createProtocolVersion(int,int); }
-keepclassmembers class android.widget.Editor$HandleView { void filterOnTouchUp(); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$6 { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.controller.UidReverseComparator { void <init>(); }
-keepclassmembers class org.apache.http.message.BasicLineParser { boolean hasProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class com.fsck.k9.controller.UidReverseComparator { java.lang.Long getUidForMessage(com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.controller.UidReverseComparator { int compare(com.fsck.k9.mail.Message,com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { com.fsck.k9.preferences.StorageEditor putLong(java.lang.String,long); }
-keepclassmembers class com.android.okhttp.internal.Util { int getEffectivePort(java.net.URL); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { com.fsck.k9.preferences.StorageEditor putString(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.Util { int getEffectivePort(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.Util { int getEffectivePort(java.net.URI); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor { com.fsck.k9.preferences.StorageEditor remove(java.lang.String); }
-keepclassmembers class android.widget.Editor$HandleView { boolean offsetHasBeenChanged(); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getMonths(); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.Util { int getDefaultPort(java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.UidReverseComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { void <init>(int); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.lang.String encodeB(byte[]); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { void <init>(int,byte[]); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String[] getWeekdays(); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredWidth(); }
-keepclassmembers class android.widget.Editor$HandleView { void onMeasure(int,int); }
-keepclassmembers class android.widget.Editor$HandleView { int getPreferredHeight(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.FlipLoadingLayout$1 { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.Util { void closeQuietly(java.io.Closeable); }
-keepclassmembers class android.widget.Editor$HandleView { void dismiss(); }
-keepclassmembers class android.widget.Editor$HandleView { void hide(); }
-keepclassmembers class com.android.okhttp.internal.Util { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView { void show(); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { boolean containsBase64Byte(byte[]); }
-keepclassmembers class android.widget.Editor$HandleView { void showActionPopupWindow(int); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { java.lang.String decode(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.Util { void closeAll(java.io.Closeable,java.io.Closeable); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { byte[] decodeBase64(byte[]); }
-keepclassmembers class android.widget.Editor$HandleView { void hideActionPopupWindow(); }
-keepclassmembers class java.text.DateFormatSymbols { int hashCode(); }
-keepclassmembers class android.text.TextLine { void <init>(); }
-keepclassmembers class android.widget.Editor$HandleView { boolean isShowing(); }
-keepclassmembers class android.widget.Editor$HandleView { void positionAtCursorOffset(int,boolean); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.lang.String encodeEncodedWord(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage); }
-keepclassmembers class android.text.TextLine { android.text.TextLine obtain(); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { java.lang.String encode(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.lang.String encodeEncodedWord(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { byte[] encodeBase64(byte[],boolean); }
-keepclassmembers class android.text.TextLine { android.text.TextLine recycle(android.text.TextLine); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { byte[] encodeBase64(byte[]); }
-keepclassmembers class javax.net.ssl.SSLException { void <init>(java.lang.Throwable); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.lang.String encodeEncodedWord(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int,java.nio.charset.Charset,org.apache.james.mime4j.codec.EncoderUtil$Encoding); }
-keepclassmembers class javax.net.ssl.SSLException { void <init>(java.lang.String); }
-keepclassmembers class javax.net.ssl.SSLException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.android.okhttp.internal.Util { boolean skipAll(com.android.okio.Source,int); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener$Memory { void <init>(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class org.apache.http.message.BasicLineParser { org.apache.http.StatusLine parseStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class android.widget.Editor$HandleView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf32Header { void <init>(boolean,com.getkeepsafe.relinker.elf.ElfParser); }
-keepclassmembers class com.android.okhttp.internal.Util { java.util.List immutableList(java.util.List); }
-keepclassmembers class android.widget.Editor$HandleView { int getHorizontalOffset(); }
-keepclassmembers class com.android.okhttp.internal.Util { java.util.List immutableList(java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.Util { java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean); }
-keepclassmembers class android.widget.Editor$HandleView { int getCursorOffset(); }
-keepclassmembers class android.widget.Editor$HandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$3 { void <init>(com.fsck.k9.activity.compose.RecipientPresenter); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { boolean isBase64(byte); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$3 { void onBound(org.openintents.openpgp.IOpenPgpService2); }
-keepclassmembers class java.text.DateFormatSymbols { java.lang.String getTimeZoneDisplayName(java.util.TimeZone,boolean,int); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.lang.String encodeIfNecessary(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$3 { void onError(java.lang.Exception); }
-keepclassmembers class com.android.okhttp.internal.Util { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.lang.String encodeQ(java.lang.String,java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int,java.nio.charset.Charset,byte[]); }
-keepclassmembers class android.support.v4.app.Fragment { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { void resizeBuf(); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf32Header { com.getkeepsafe.relinker.elf.Elf$DynamicStructure getDynamicStructure(long,int); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf32Header { com.getkeepsafe.relinker.elf.Elf$ProgramHeader getProgramHeader(long); }
-keepclassmembers class android.support.v4.app.Fragment { android.support.v4.app.FragmentActivity getActivity(); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf32Header { com.getkeepsafe.relinker.elf.Elf$SectionHeader getSectionHeader(int); }
-keepclassmembers class org.apache.http.message.BasicLineParser { org.apache.http.StatusLine createStatusLine(org.apache.http.ProtocolVersion,int,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.lang.String encodeQ(byte[],org.apache.james.mime4j.codec.EncoderUtil$Usage); }
-keepclassmembers class android.widget.Editor$HandleView { void onDetached(); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { int avail(); }
-keepclassmembers class org.apache.http.message.BasicLineParser { org.apache.http.Header parseHeader(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class android.text.TextLine { void set(android.text.TextPaint,java.lang.CharSequence,int,int,int,android.text.Layout$Directions,boolean,android.text.Layout$TabStops); }
-keepclassmembers class android.text.TextLine { void draw(android.graphics.Canvas,float,int,int,int); }
-keepclassmembers class org.apache.http.message.BasicLineParser { void skipWhitespace(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { void decode(byte[],int,int); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable$State { void <init>(android.graphics.drawable.Drawable$ConstantState,int); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable$State { void <init>(com.bumptech.glide.request.target.SquaringDrawable$State); }
-keepclassmembers class org.apache.http.message.BasicLineParser { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { boolean hasToBeEncoded(java.lang.String,int); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable$State { android.graphics.drawable.Drawable$ConstantState access$000(com.bumptech.glide.request.target.SquaringDrawable$State); }
-keepclassmembers class android.os.Handler$MessengerImpl { void <init>(android.os.Handler); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable$State { int access$100(com.bumptech.glide.request.target.SquaringDrawable$State); }
-keepclassmembers class android.os.Handler$MessengerImpl { void <init>(android.os.Handler,android.os.Handler$1); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable$State { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { float getInterpolation(float); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable$State { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache$ModelKey { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableResource { void <init>(com.bumptech.glide.load.resource.gif.GifDrawable); }
-keepclassmembers class com.fsck.k9.helper.EmailHelper { java.lang.String getDomainFromEmailAddress(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { char hexDigit(int); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache$ModelKey { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableResource { int getSize(); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache$ModelKey { com.bumptech.glide.load.model.ModelCache$ModelKey get(java.lang.Object,int,int); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.util.BitSet initChars(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$BaseIterator { void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableResource { void recycle(); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache$ModelKey { void init(java.lang.Object,int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$BaseIterator { boolean hasNext(); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { boolean isAtomPhrase(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache$ModelKey { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.service.MailService$2 { void <init>(com.fsck.k9.service.MailService,boolean,boolean,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$BaseIterator { void remove(); }
-keepclassmembers class com.android.okhttp.RouteDatabase { void <init>(); }
-keepclassmembers class com.fsck.k9.service.MailService$2 { void run(); }
-keepclassmembers class com.android.okhttp.RouteDatabase { void failed(com.android.okhttp.Route); }
-keepclassmembers class com.android.internal.app.AlertController$1 { void <init>(com.android.internal.app.AlertController); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache$ModelKey { int hashCode(); }
-keepclassmembers class com.android.okhttp.RouteDatabase { void connected(com.android.okhttp.Route); }
-keepclassmembers class android.view.ViewStub { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache$ModelKey { void release(); }
-keepclassmembers class com.android.okhttp.RouteDatabase { boolean shouldPostpone(com.android.okhttp.Route); }
-keepclassmembers class android.view.ViewStub { void <init>(android.content.Context,int); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { byte[] decode(byte[]); }
-keepclassmembers class java.util.EnumMap$EnumMapEntryIterator { void <init>(java.util.MapEntry$Type,java.util.EnumMap); }
-keepclassmembers class android.view.ViewStub { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.text.TextLine { float metrics(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class java.util.EnumMap$EnumMapEntryIterator { java.lang.Object next(); }
-keepclassmembers class android.view.ViewStub { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources); }
-keepclassmembers class android.text.TextLine { float measure(int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { int qEncodedLength(byte[],org.apache.james.mime4j.codec.EncoderUtil$Usage); }
-keepclassmembers class android.view.animation.AnticipateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { void encode(byte[],int,int); }
-keepclassmembers class android.view.ViewStub { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.Bitmap); }
-keepclassmembers class android.content.Loader { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpecFactory { void <init>(); }
-keepclassmembers class android.content.Loader { void deliverResult(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpecFactory { org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil { java.lang.String quote(java.lang.String); }
-keepclassmembers class android.content.Loader { void deliverCancellation(); }
-keepclassmembers class android.content.Loader { android.content.Context getContext(); }
-keepclassmembers class android.view.ViewStub { void initialize(android.content.Context); }
-keepclassmembers class android.content.Loader { void registerListener(int,android.content.Loader$OnLoadCompleteListener); }
-keepclassmembers class android.content.Loader { int getId(); }
-keepclassmembers class android.support.v4.app.Fragment { int hashCode(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void <clinit>(); }
-keepclassmembers class dalvik.system.VMRuntime { void <init>(); }
-keepclassmembers class dalvik.system.VMRuntime { dalvik.system.VMRuntime getRuntime(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void <init>(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String[] properties(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String bootClassPath(); }
-keepclassmembers class android.content.Loader { void unregisterListener(android.content.Loader$OnLoadCompleteListener); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String classPath(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String vmVersion(); }
-keepclassmembers class android.content.Loader { void registerOnLoadCanceledListener(android.content.Loader$OnLoadCanceledListener); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { long access$002(com.fsck.k9.activity.MessageCompose,long); }
-keepclassmembers class android.view.ViewStub { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewStub { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64Bit(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { android.widget.LinearLayout access$1000(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class android.view.ViewStub { void onMeasure(int,int); }
-keepclassmembers class android.content.Loader { void unregisterOnLoadCanceledListener(android.content.Loader$OnLoadCanceledListener); }
-keepclassmembers class android.view.ViewStub { void setVisibility(int); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { boolean access$102(com.fsck.k9.activity.MessageCompose,boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { com.fsck.k9.activity.compose.AttachmentPresenter access$1100(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void access$1200(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class java.util.TreeMap$KeySet { void <init>(java.util.TreeMap); }
-keepclassmembers class java.util.TreeMap$KeySet { int size(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void access$300(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class android.view.ViewStub { android.view.View inflate(); }
-keepclassmembers class android.content.Loader { boolean isStarted(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void access$400(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class java.util.TreeMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class android.content.Loader { boolean isAbandoned(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void access$500(com.fsck.k9.activity.MessageCompose,com.fsck.k9.Account,com.fsck.k9.Identity); }
-keepclassmembers class android.content.Loader { boolean isReset(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { android.os.Handler access$600(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class android.content.Loader { void startLoading(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { com.fsck.k9.activity.MessageCompose$Action access$700(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { com.fsck.k9.activity.MessageReference access$800(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class android.content.Loader { boolean cancelLoad(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.Object newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class android.content.Loader { void onForceLoad(); }
-keepclassmembers class java.util.TreeMap$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { boolean access$902(com.fsck.k9.activity.MessageCompose,boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void computeBitmapSize(); }
-keepclassmembers class android.content.Loader { void stopLoading(); }
-keepclassmembers class dalvik.system.VMRuntime { java.lang.String getInstructionSet(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void askBeforeDiscard(); }
-keepclassmembers class android.content.Loader { void onStopLoading(); }
-keepclassmembers class android.content.Loader { void abandon(); }
-keepclassmembers class android.content.Loader { void onAbandon(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void checkToSaveDraftAndSave(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitInstructionSet(java.lang.String); }
-keepclassmembers class android.support.v4.app.Fragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.content.Loader { void reset(); }
-keepclassmembers class com.fsck.k9.notification.SyncNotifications { void <init>(com.fsck.k9.notification.NotificationController,com.fsck.k9.notification.NotificationActionCreator); }
-keepclassmembers class android.support.v4.app.Fragment { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.content.Loader { void onReset(); }
-keepclassmembers class dalvik.system.VMRuntime { boolean is64BitAbi(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void checkToSaveDraftImplicitly(); }
-keepclassmembers class android.content.Loader { boolean takeContentChanged(); }
-keepclassmembers class com.android.internal.view.menu.ActionMenuItem { void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.Fragment { void onAttach(android.app.Activity); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { com.fsck.k9.activity.MessageReference access$802(com.fsck.k9.activity.MessageCompose,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.content.Loader { void forceLoad(); }
-keepclassmembers class com.fsck.k9.notification.SyncNotifications { android.support.v4.app.NotificationManagerCompat getNotificationManager(); }
-keepclassmembers class dalvik.system.VMRuntime { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class java.security.MessageDigest { void <init>(java.lang.String); }
-keepclassmembers class android.content.Loader { void commitContentChanged(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Font { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void checkToSendMessage(); }
-keepclassmembers class android.support.v4.app.Fragment { void onAttach(android.content.Context); }
-keepclassmembers class com.fsck.k9.notification.SyncNotifications { void clearFetchingMailNotification(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.notification.SyncNotifications { void clearSendingNotification(com.fsck.k9.Account); }
-keepclassmembers class java.security.MessageDigest { java.security.MessageDigest getInstance(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo obtain(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.content.Loader { java.lang.String dataToString(java.lang.Object); }
-keepclassmembers class android.content.Loader { void rollbackContentChanged(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTargetDensity(int); }
-keepclassmembers class com.fsck.k9.notification.SyncNotifications { void showFetchingMailNotification(com.fsck.k9.Account,com.fsck.k9.mail.Folder); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { com.fsck.k9.message.MessageBuilder createMessageBuilder(boolean); }
-keepclassmembers class com.android.internal.util.XmlUtils { void skipCurrentTag(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.support.v4.app.Fragment { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setGravity(int); }
-keepclassmembers class android.content.Loader { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.content.Loader { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.animation.Animation onCreateAnimation(int,boolean,int); }
-keepclassmembers class com.android.internal.util.XmlUtils { boolean convertValueToBoolean(java.lang.CharSequence,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <init>(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setMipMap(boolean); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class com.android.internal.util.XmlUtils { int convertValueToInt(java.lang.CharSequence,int); }
-keepclassmembers class java.security.MessageDigest { void reset(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAntiAlias(boolean); }
-keepclassmembers class java.security.MessageDigest { void update(byte); }
-keepclassmembers class android.support.v4.app.Fragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class java.security.MessageDigest { void update(byte[]); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MessagesQueryHandler { void <init>(com.fsck.k9.provider.MessageProvider); }
-keepclassmembers class com.fsck.k9.notification.SyncNotifications { void showSendingNotification(com.fsck.k9.Account); }
-keepclassmembers class java.security.MessageDigest { void update(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setDither(boolean); }
-keepclassmembers class android.support.v4.app.Fragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MessagesQueryHandler { android.database.MatrixCursor getMessages(java.lang.String[]); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroy(); }
-keepclassmembers class android.system.StructLinger { void <init>(int,int); }
-keepclassmembers class android.text.TextLine { float drawRun(android.graphics.Canvas,int,int,boolean,float,int,int,int,boolean); }
-keepclassmembers class java.security.MessageDigest { byte[] digest(byte[]); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { byte[] encode(byte[]); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { int readResults(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeX(android.graphics.Shader$TileMode); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionItemInfo { void <clinit>(); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroyOptionsMenu(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeY(android.graphics.Shader$TileMode); }
-keepclassmembers class android.support.v4.app.Fragment { void onDestroyView(); }
-keepclassmembers class android.support.v4.app.Fragment { void onDetach(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTileModeXY(android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class android.support.v4.app.Fragment { void onHiddenChanged(boolean); }
-keepclassmembers class java.security.MessageDigest { boolean isEqual(byte[],byte[]); }
-keepclassmembers class android.support.v4.app.Fragment { void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mail.Store { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { boolean initFromIntent(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class org.apache.http.impl.client.DefaultRedirectHandler { boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.impl.client.DefaultRedirectHandler { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.Store { com.fsck.k9.mail.Pusher getPusher(com.fsck.k9.mail.PushReceiver); }
-keepclassmembers class android.support.v4.app.Fragment { void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64 { void setInitialBuffer(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isAutoMirrored(); }
-keepclassmembers class com.fsck.k9.mail.Store { boolean isCopyCapable(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getChangingConfigurations(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <init>(); }
-keepclassmembers class android.text.TextLine { float measureRun(int,int,int,boolean,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class com.fsck.k9.mail.Store { boolean isMoveCapable(); }
-keepclassmembers class com.fsck.k9.mail.Store { boolean isExpungeCapable(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean needMirroring(); }
-keepclassmembers class com.fsck.k9.mail.Store { boolean isPushCapable(); }
-keepclassmembers class org.apache.http.impl.client.DefaultRedirectHandler { java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MessagesQueryHandler { java.lang.String getPath(); }
-keepclassmembers class android.text.TextLine { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class com.fsck.k9.mail.Store { boolean isSeenFlagSupported(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$26 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.support.v4.app.Fragment { void onLowMemory(); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean adjustNsp(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateMirrorMatrix(float); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$26 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class java.security.MessageDigest { java.security.Provider access$102(java.security.MessageDigest,java.security.Provider); }
-keepclassmembers class android.support.v4.app.Fragment { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void <init>(); }
-keepclassmembers class android.support.v4.app.Fragment { void onPause(); }
-keepclassmembers class java.security.MessageDigest { void <clinit>(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MessagesQueryHandler { java.util.LinkedHashMap resolveMessageExtractors(java.lang.String[],int); }
-keepclassmembers class android.support.v4.app.Fragment { void onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle); }
-keepclassmembers class android.support.v4.app.Fragment { void onRequestPermissionsResult(int,java.lang.String[],int[]); }
-keepclassmembers class android.support.v4.app.Fragment { void onResume(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void addChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.support.v4.app.Fragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onStart(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void removeChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment); }
-keepclassmembers class android.support.v4.app.Fragment { void onStop(); }
-keepclassmembers class android.support.v4.app.Fragment { void onViewCreated(android.view.View,android.os.Bundle); }
-keepclassmembers class android.support.v4.app.Fragment { void onViewStateRestored(android.os.Bundle); }
-keepclassmembers class java.util.jar.Manifest { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void initializeFromMailto(com.fsck.k9.helper.MailTo); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { com.bumptech.glide.manager.ActivityFragmentLifecycle getLifecycle(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MessagesQueryHandler { android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { com.bumptech.glide.RequestManager getRequestManager(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler$1 { void <init>(com.fsck.k9.fragment.MessageListFragment$MessageListHandler,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onAccountChosen(com.fsck.k9.Account,com.fsck.k9.Identity); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode(); }
-keepclassmembers class java.util.jar.Manifest { void <init>(byte[],boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void onAttach(android.app.Activity); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler$1 { void run(); }
-keepclassmembers class android.support.v4.app.Fragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Attributes getAttributes(java.lang.String); }
-keepclassmembers class java.util.jar.Manifest { java.util.Map getEntries(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void onDestroy(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void onDetach(); }
-keepclassmembers class java.util.jar.Manifest { void read(byte[]); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateDstRectAndInsetsIfDirty(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void onStop(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void onTrimMemory(int); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void setRequestManager(com.bumptech.glide.RequestManager); }
-keepclassmembers class android.widget.TextView$Marquee$3 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void onLowMemory(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment { void onStart(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate$2 { void <init>(android.widget.TimePickerSpinnerDelegate); }
-keepclassmembers class android.widget.TextView$Marquee$3 { void doFrame(long); }
-keepclassmembers class libcore.reflect.ListOfVariables { void <init>(); }
-keepclassmembers class libcore.reflect.ListOfVariables { void add(java.lang.reflect.TypeVariable); }
-keepclassmembers class libcore.reflect.ListOfVariables { java.lang.reflect.TypeVariable[] getArray(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onDiscard(); }
-keepclassmembers class java.util.jar.Manifest { java.util.jar.Manifest$Chunk getChunk(java.lang.String); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String[] ensureCapacity(java.lang.String[],int); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onReadReceipt(); }
-keepclassmembers class java.util.jar.Manifest { void removeChunks(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub { android.view.accessibility.IAccessibilityManager asInterface(android.os.IBinder); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { void processChallenge(org.apache.http.Header); }
-keepclassmembers class java.util.jar.Manifest { int getMainAttributesEnd(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setAlpha(int); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void performSaveAfterChecks(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void checkRelaxed(java.lang.String); }
-keepclassmembers class com.fsck.k9.service.CoreReceiver { void <clinit>(); }
-keepclassmembers class com.fsck.k9.service.CoreReceiver { void <init>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class com.fsck.k9.service.CoreReceiver { java.lang.Integer getWakeLock(android.content.Context); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.NotificationCompat$BigTextStyle { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class org.kxml2.io.KXmlParser { int next(boolean); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$BigTextStyle { android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.NotificationCompat$BigTextStyle { void <init>(android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.ScrollView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { boolean isComplete(); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void <init>(org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.service.CoreReceiver { void releaseWakeLock(android.content.Context,int); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String getSchemeName(); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void <init>(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { boolean isConnectionBased(); }
-keepclassmembers class com.fsck.k9.service.CoreReceiver { void releaseWakeLock(java.lang.Integer); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { boolean containsHeader(java.lang.String); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String getCnonce(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void clearMutated(); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.Header getFirstHeader(java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.Header[] getHeaders(java.lang.String); }
-keepclassmembers class android.widget.ScrollView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest); }
-keepclassmembers class android.widget.ScrollView { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.widget.ScrollView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.Header[] getAllHeaders(); }
-keepclassmembers class java.lang.String { void <init>(); }
-keepclassmembers class com.fsck.k9.service.CoreReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class java.lang.String { void <init>(byte[]); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean isStateful(); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void addHeader(org.apache.http.Header); }
-keepclassmembers class java.lang.String { void <init>(byte[],int); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int); }
-keepclassmembers class android.widget.ScrollView { void initScrollView(); }
-keepclassmembers class android.text.TextLine { int getOffsetBeforeAfter(int,int,int,boolean,int,boolean); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void setHeader(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.security.MessageDigest createMessageDigest(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { int getIndex(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void verifyState(android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void setHeaders(org.apache.http.Header[]); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { void <init>(int); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$1 { void <init>(); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.lang.String); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String createDigest(org.apache.http.auth.Credentials); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { void <init>(int,android.net.SSLSessionCache,boolean); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { void <init>(); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readUntil(char[],boolean); }
-keepclassmembers class java.lang.String { void <init>(byte[],java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$1 { java.io.InputStream byteStream(); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,java.nio.charset.Charset); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.HeaderIterator headerIterator(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void processMessageToForward(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class com.fsck.k9.service.CoreReceiver { java.lang.Integer receive(android.content.Context,android.content.Intent,java.lang.Integer); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.HeaderIterator headerIterator(java.lang.String); }
-keepclassmembers class java.lang.String { void <init>(byte[],int,int,int); }
-keepclassmembers class java.util.jar.Manifest { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews$MutablePair { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { org.apache.http.params.HttpParams getParams(); }
-keepclassmembers class android.widget.ScrollView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.apache.http.message.AbstractHttpMessage { void setParams(org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void processMessageToReplyTo(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { void verifyHostname(java.net.Socket,java.lang.String); }
-keepclassmembers class android.widget.ScrollView { void setFillViewport(boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { com.fsck.k9.helper.ClipboardManager access$100(com.fsck.k9.ui.messageview.MessageContainerView); }
-keepclassmembers class com.beetstra.jutf7.UTF7Charset { boolean canEncodeDirectly(char); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { com.fsck.k9.ui.messageview.AttachmentViewCallback access$200(com.fsck.k9.ui.messageview.MessageContainerView); }
-keepclassmembers class com.beetstra.jutf7.UTF7Charset { byte shift(); }
-keepclassmembers class android.widget.ScrollView { void onMeasure(int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { void access$000(com.fsck.k9.ui.messageview.MessageContainerView,android.content.Context,android.content.Intent); }
-keepclassmembers class com.beetstra.jutf7.UTF7Charset { void <init>(java.lang.String,java.lang.String[],boolean); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase { void <init>(); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase { android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle); }
-keepclassmembers class com.beetstra.jutf7.UTF7Charset { byte unshift(); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { javax.net.ssl.SSLSocketFactory makeSocketFactory(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[]); }
-keepclassmembers class android.text.TextLine { void expandMetricsFromPaint(android.graphics.Paint$FontMetricsInt,android.text.TextPaint); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readXmlDeclaration(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <init>(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetMetaState(android.text.Spannable); }
-keepclassmembers class android.text.TextLine { void updateMetrics(android.graphics.Paint$FontMetricsInt,int,int,int,int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { com.fsck.k9.mailstore.AttachmentViewInfo getAttachmentViewInfoIfCidUri(android.net.Uri); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { boolean isSslCheckRelaxed(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { javax.net.ssl.SSLSocketFactory getDelegate(); }
-keepclassmembers class android.text.TextLine { float handleText(android.text.TextPaint,int,int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { void refreshDisplayedContent(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,android.view.KeyEvent); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { void setLoadPictures(boolean); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.Shader$TileMode parseTileMode(int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readComment(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { boolean canApplyTheme(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { void startActivityIfAvailable(android.content.Context,android.content.Intent); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void processSourceMessage(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.ScrollView { boolean inChild(int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getActive(java.lang.CharSequence,java.lang.Object,int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { int getIntrinsicHeight(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readDoctype(boolean); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void setTitle(); }
-keepclassmembers class android.widget.ScrollView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.widget.ScrollView { void initOrResetVelocityTracker(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void switchToIdentity(com.fsck.k9.Identity); }
-keepclassmembers class android.widget.ScrollView { void recycleVelocityTracker(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void setMessageFormat(com.fsck.k9.message.SimpleMessageFormat); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$27 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void updateFrom(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void initializeWithState(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjustMetaAfterKeypress(android.text.Spannable); }
-keepclassmembers class android.widget.ScrollView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void updateSignature(); }
-keepclassmembers class android.widget.ScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean readExternalId(boolean,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$27 { void act(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,java.util.List); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,java.lang.String); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void launchUserInteractionPendingIntent(android.app.PendingIntent,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState,android.content.res.Resources,android.graphics.drawable.BitmapDrawable$1); }
-keepclassmembers class java.lang.String { void <init>(byte[],java.nio.charset.Charset); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readQuotedId(boolean); }
-keepclassmembers class java.lang.String { void <init>(char[]); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void adjust(android.text.Spannable,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void loadLocalMessageForDisplay(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.activity.MessageCompose$Action); }
-keepclassmembers class java.lang.String { void <init>(char[],int,int); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLockedMeta(android.text.Spannable); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void resetLock(android.text.Spannable,java.lang.Object); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readInternalSubset(); }
-keepclassmembers class java.lang.String { void <init>(int,int,char[]); }
-keepclassmembers class android.text.TextLine { float handleReplacement(android.text.style.ReplacementSpan,android.text.TextPaint,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void loadQuotedTextForEdit(); }
-keepclassmembers class java.lang.String { void <init>(java.lang.StringBuffer); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readElementDeclaration(); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void press(android.text.Editable,java.lang.Object); }
-keepclassmembers class java.lang.String { void <init>(java.lang.String); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int hashCode(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void stopSelecting(android.view.View,android.text.Spannable); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readContentSpec(); }
-keepclassmembers class java.lang.String { void <init>(int[],int,int); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class java.lang.String { void <init>(java.lang.StringBuilder); }
-keepclassmembers class android.widget.ScrollView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void release(android.text.Editable,java.lang.Object,android.view.KeyEvent); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onBackPressed(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readAttributeListDeclaration(); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String getQopVariantString(); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException indexAndLength(int); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onCreate(android.os.Bundle); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String encode(byte[]); }
-keepclassmembers class java.lang.String { java.lang.StringIndexOutOfBoundsException failedBoundsCheck(int,int,int); }
-keepclassmembers class java.lang.String { char foldCase(char); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { java.lang.String createCnonce(); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.String); }
-keepclassmembers class java.lang.String { int compareToIgnoreCase(java.lang.String); }
-keepclassmembers class org.apache.http.impl.auth.DigestScheme { void <clinit>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void defineAttributeDefault(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.String { char charAt(int); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onClick(android.view.View); }
-keepclassmembers class android.text.TextLine { float handleRun(int,int,int,boolean,android.graphics.Canvas,float,int,int,int,android.graphics.Paint$FontMetricsInt,boolean); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { int getMetaState(long,int); }
-keepclassmembers class android.net.SSLCertificateSocketFactory { void <clinit>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntityDeclaration(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void <init>(android.graphics.drawable.VectorDrawable$VClipPath); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.DuplicateFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class java.lang.String { java.lang.String copyValueOf(char[],int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.lang.String { boolean endsWith(java.lang.String); }
-keepclassmembers class java.lang.String { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VClipPath { boolean isClipPath(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { boolean isEmpty(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readNotationDeclaration(); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object keyAt(int); }
-keepclassmembers class android.support.v4.app.Fragment { java.lang.String toString(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEndTag(); }
-keepclassmembers class java.lang.String { boolean equalsIgnoreCase(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { void onFinishInflate(); }
-keepclassmembers class android.widget.ScrollView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class java.lang.String { java.lang.String concat(java.lang.String); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekType(boolean); }
-keepclassmembers class com.android.okio.OkBuffer { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { void onLayoutChanged(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.android.okio.OkBuffer { long size(); }
-keepclassmembers class android.widget.ScrollView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.okio.OkBuffer { boolean exhausted(); }
-keepclassmembers class java.lang.String { byte[] getBytes(); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.android.okio.OkBuffer { byte readByte(); }
-keepclassmembers class java.lang.String { byte[] getBytes(java.nio.charset.Charset); }
-keepclassmembers class android.text.method.MetaKeyKeyListener { void <clinit>(); }
-keepclassmembers class android.widget.ScrollView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class com.android.okio.OkBuffer { byte getByte(long); }
-keepclassmembers class java.lang.String { void getChars(int,int,char[],int); }
-keepclassmembers class android.support.v4.content.ContextCompat { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class com.android.okio.OkBuffer { long completeSegmentByteCount(); }
-keepclassmembers class android.widget.ScrollView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.lang.String { void _getChars(int,int,char[],int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void parseStartTag(boolean,boolean); }
-keepclassmembers class com.android.okio.OkBuffer { short readShort(); }
-keepclassmembers class android.widget.ScrollView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fsck.k9.Account$SortType { void <clinit>(); }
-keepclassmembers class android.widget.ScrollView { int getScrollRange(); }
-keepclassmembers class java.lang.String { int hashCode(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { android.app.Dialog onCreateDialog(int); }
-keepclassmembers class java.lang.String { int indexOf(int,int); }
-keepclassmembers class java.lang.String { int indexOf(int); }
-keepclassmembers class com.android.okio.OkBuffer { int readInt(); }
-keepclassmembers class java.lang.String { int indexOfSupplementary(int,int); }
-keepclassmembers class android.text.TextLine { void drawTextRun(android.graphics.Canvas,android.text.TextPaint,int,int,int,int,boolean,float,int); }
-keepclassmembers class java.lang.String { int fastIndexOf(int,int); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { void <init>(java.lang.String,int,java.util.ArrayList); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { java.lang.String access$100(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class com.fsck.k9.Account$SortType { void <init>(java.lang.String,int,int,int,boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { int access$200(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onDestroy(); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { java.util.ArrayList access$300(org.apache.harmony.security.fortress.Engine$ServiceCacheEntry); }
-keepclassmembers class com.fsck.k9.Account$SortType { com.fsck.k9.Account$SortType valueOf(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onFocusChange(android.view.View,boolean); }
-keepclassmembers class com.fsck.k9.Account$SortType { com.fsck.k9.Account$SortType[] values(); }
-keepclassmembers class com.fsck.k9.Account$SortType { int getToast(boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onMessageBuildCancel(); }
-keepclassmembers class android.text.TextLine { float ascent(int); }
-keepclassmembers class com.fsck.k9.notification.CertificateErrorNotifications { void <init>(com.fsck.k9.notification.NotificationController); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$ServiceCacheEntry { void <init>(java.lang.String,int,java.util.ArrayList,org.apache.harmony.security.fortress.Engine$1); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView { void showPictures(); }
-keepclassmembers class com.fsck.k9.Account$SortType { boolean isDefaultAscending(); }
-keepclassmembers class com.fsck.k9.notification.CertificateErrorNotifications { int getCertificateErrorNotificationIcon(); }
-keepclassmembers class java.lang.String { int indexOf(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onMessageBuildException(com.fsck.k9.mail.MessagingException); }
-keepclassmembers class com.fsck.k9.notification.CertificateErrorNotifications { android.app.PendingIntent createContentIntent(android.content.Context,com.fsck.k9.Account,boolean); }
-keepclassmembers class com.fsck.k9.notification.CertificateErrorNotifications { android.support.v4.app.NotificationManagerCompat getNotificationManager(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onMessageBuildReturnPendingIntent(android.app.PendingIntent,int); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onMessageBuildSuccess(com.fsck.k9.mail.internet.MimeMessage,boolean); }
-keepclassmembers class com.fsck.k9.notification.CertificateErrorNotifications { void clearCertificateErrorNotifications(com.fsck.k9.Account,boolean); }
-keepclassmembers class android.text.TextLine { float nextTab(float); }
-keepclassmembers class android.text.TextLine { void <clinit>(); }
-keepclassmembers class java.lang.String { java.lang.String intern(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$FloatKeyframes); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void <init>(android.widget.Editor); }
-keepclassmembers class com.fsck.k9.notification.CertificateErrorNotifications { void showCertificateErrorNotification(com.fsck.k9.Account,boolean); }
-keepclassmembers class java.lang.String { boolean isEmpty(); }
-keepclassmembers class android.preference.GenericInflater { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { int size(); }
-keepclassmembers class java.lang.String { int lastIndexOf(int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.String toString(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void highlight(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(android.util.Property,android.animation.Keyframes$FloatKeyframes); }
-keepclassmembers class java.lang.String { int lastIndexOf(int,int); }
-keepclassmembers class android.preference.GenericInflater { android.content.Context getContext(); }
-keepclassmembers class android.preference.GenericInflater { void setDefaultPackage(java.lang.String); }
-keepclassmembers class com.android.okio.OkBuffer { short readShortLe(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onOpenPgpInlineChange(boolean); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void draw(android.graphics.Canvas,int); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(java.lang.String,float[]); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onOpenPgpSignOnlyChange(boolean); }
-keepclassmembers class com.android.okio.OkBuffer { int readIntLe(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <init>(android.util.Property,float[]); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.ByteString readByteString(long); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class java.lang.String { int lastIndexOfSupplementary(int,int); }
-keepclassmembers class android.support.v4.util.SimpleArrayMap { java.lang.Object valueAt(int); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class com.android.okio.OkBuffer { java.lang.String readUtf8(long); }
-keepclassmembers class java.util.Arrays$ArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.Arrays$ArrayList { void <init>(java.lang.Object[]); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class java.lang.String { int lastIndexOf(java.lang.String,int); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { boolean updatePaint(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void readEntity(java.lang.StringBuilder,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onPause(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone(); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object get(int); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { boolean updatePath(); }
-keepclassmembers class java.util.Arrays$ArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.preference.GenericInflater { java.lang.Object inflate(int,android.preference.GenericInflater$Parent,boolean); }
-keepclassmembers class android.widget.ScrollView { boolean isOffScreen(android.view.View); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onProgressCancel(com.fsck.k9.fragment.ProgressDialogFragment); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class android.widget.ScrollView { boolean isWithinDeltaOfScreen(android.view.View,int,int); }
-keepclassmembers class java.lang.String { int length(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void invalidate(boolean); }
-keepclassmembers class android.preference.GenericInflater { java.lang.Object inflate(org.xmlpull.v1.XmlPullParser,android.preference.GenericInflater$Parent,boolean); }
-keepclassmembers class java.lang.String { boolean regionMatches(int,java.lang.String,int,int); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class android.view.animation.LayoutAnimationController { int getOrder(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.content.Context,int); }
-keepclassmembers class android.widget.ScrollView { void doScrollY(int); }
-keepclassmembers class java.util.Arrays$ArrayList { int size(); }
-keepclassmembers class android.widget.ScrollView { void smoothScrollBy(int,int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class com.android.okio.OkBuffer { java.lang.String readUtf8Line(long); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { java.lang.Object onRetainNonConfigurationInstance(); }
-keepclassmembers class java.util.Arrays$ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onResume(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { android.view.animation.Animation getAnimation(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.content.Context,int); }
-keepclassmembers class com.android.okio.OkBuffer { byte[] readBytes(long); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class java.lang.String { boolean regionMatches(boolean,int,java.lang.String,int,int); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Error { void <init>(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { boolean willOverlap(); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void <init>(org.apache.http.HttpHost,java.net.InetAddress); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void stopAnimation(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { void start(); }
-keepclassmembers class android.widget.ScrollView { int computeVerticalScrollRange(); }
-keepclassmembers class android.widget.Editor$CorrectionHighlighter { void access$400(android.widget.Editor$CorrectionHighlighter,boolean); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void <init>(org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void performSendAfterChecks(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { android.view.animation.Animation getAnimationForView(android.view.View); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void connectTarget(boolean); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void connectProxy(org.apache.http.HttpHost,boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void saveDraftEventually(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void showContactPicker(int); }
-keepclassmembers class java.lang.String { java.lang.String replace(char,char); }
-keepclassmembers class android.widget.ScrollView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.os.ServiceManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.okio.OkBuffer { int read(byte[],int,int); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void tunnelTarget(boolean); }
-keepclassmembers class android.view.animation.LayoutAnimationController { boolean isDone(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose { void updateMessageFormat(); }
-keepclassmembers class android.os.ServiceManagerProxy { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { org.apache.harmony.security.asn1.ASN1Enumerated getInstance(); }
-keepclassmembers class android.animation.PropertyValuesHolder$FloatPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void tunnelProxy(org.apache.http.HttpHost,boolean); }
-keepclassmembers class java.lang.Error { void <init>(java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.preference.GenericInflater { java.lang.Object createItem(java.lang.String,java.lang.String,android.util.AttributeSet); }
-keepclassmembers class android.view.animation.LayoutAnimationController { long getDelayForView(android.view.View); }
-keepclassmembers class android.widget.ScrollView { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.okio.OkBuffer { void clear(); }
-keepclassmembers class com.android.okio.OkBuffer { void skip(long); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { void layerProtocol(boolean); }
-keepclassmembers class java.lang.String { java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readValue(char,boolean,boolean,org.kxml2.io.KXmlParser$ValueContext); }
-keepclassmembers class android.app.SearchDialog$1 { void <init>(android.app.SearchDialog); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { org.apache.http.HttpHost getTargetHost(); }
-keepclassmembers class android.widget.ScrollView { void computeScroll(); }
-keepclassmembers class android.view.animation.LayoutAnimationController { int getTransformedIndex(android.view.animation.LayoutAnimationController$AnimationParameters); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Enumerated { void <clinit>(); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer write(com.android.okio.ByteString); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer writeUtf8(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver$1 { void <init>(); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { boolean isConnected(); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver$1 { boolean onRequest(int,java.util.List); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer write(byte[]); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { boolean isTunnelled(); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver$1 { boolean onHeaders(int,java.util.List,boolean); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer write(byte[],int,int); }
-keepclassmembers class android.widget.ScrollView { void scrollToChild(android.view.View); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { boolean isLayered(); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver$1 { boolean onData(int,com.android.okio.BufferedSource,int,boolean); }
-keepclassmembers class android.widget.ScrollView { boolean scrollToChildRect(android.graphics.Rect,boolean); }
-keepclassmembers class org.apache.http.conn.routing.RouteTracker { org.apache.http.conn.routing.HttpRoute toRoute(); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver$1 { void onReset(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer writeByte(int); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { void <init>(org.apache.http.HttpEntity); }
-keepclassmembers class java.lang.String { boolean startsWith(java.lang.String,int); }
-keepclassmembers class android.widget.ScrollView { int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer writeShort(int); }
-keepclassmembers class java.lang.String { java.lang.String substring(int); }
-keepclassmembers class java.lang.String { java.lang.String substring(int,int); }
-keepclassmembers class android.preference.GenericInflater { java.lang.Object createItemFromTag(org.xmlpull.v1.XmlPullParser,java.lang.String,android.util.AttributeSet); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { long getContentLength(); }
-keepclassmembers class android.preference.GenericInflater { java.lang.Object onCreateItem(java.lang.String,android.util.AttributeSet); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer writeInt(int); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { java.io.InputStream getContent(); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(); }
-keepclassmembers class java.lang.String { java.lang.String toLowerCase(java.util.Locale); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { boolean isChunked(); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { boolean isStreaming(); }
-keepclassmembers class android.widget.ScrollView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class java.lang.String { char[] toCharArray(); }
-keepclassmembers class org.apache.http.entity.BufferedHttpEntity { boolean isRepeatable(); }
-keepclassmembers class java.lang.String { java.lang.String toString(); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(); }
-keepclassmembers class android.widget.ScrollView { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void <init>(java.lang.String); }
-keepclassmembers class java.lang.String { java.lang.String toUpperCase(java.util.Locale); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void log(java.util.logging.Level,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.String { java.lang.String trim(); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.Segment writableSegment(int); }
-keepclassmembers class android.widget.ScrollView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.webkit.MimeTypeMap { void <init>(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[]); }
-keepclassmembers class com.android.okio.OkBuffer { void write(com.android.okio.OkBuffer,long); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char); }
-keepclassmembers class android.widget.ScrollView { void requestLayout(); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char[],int,int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(char); }
-keepclassmembers class org.kxml2.io.KXmlParser { void read(char[]); }
-keepclassmembers class android.webkit.MimeTypeMap { java.lang.String getMimeTypeFromExtension(java.lang.String); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void debug(java.lang.Object,java.lang.Throwable); }
-keepclassmembers class android.preference.GenericInflater { void rInflate(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void debug(java.lang.Object); }
-keepclassmembers class android.widget.ScrollView { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.ScrollView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(double); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void error(java.lang.Object); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(float); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(int); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(long); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(boolean); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$1 { void <init>(com.fsck.k9.view.RecipientSelectView,java.util.List); }
-keepclassmembers class java.lang.String { java.lang.String valueOf(java.lang.Object); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { java.util.logging.Logger getLogger(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int peekCharacter(); }
-keepclassmembers class android.preference.GenericInflater { void <clinit>(); }
-keepclassmembers class com.android.okio.OkBuffer { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void info(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$1 { void run(); }
-keepclassmembers class android.widget.ScrollView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { boolean fillBuffer(int); }
-keepclassmembers class android.widget.RemoteViews$OnClickHandler { void <init>(); }
-keepclassmembers class com.android.okio.OkBuffer { long indexOf(byte,long); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpSignOnlyDialog$1 { void <init>(com.fsck.k9.activity.compose.PgpSignOnlyDialog); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { boolean isDebugEnabled(); }
-keepclassmembers class android.webkit.MimeTypeMap { android.webkit.MimeTypeMap getSingleton(); }
-keepclassmembers class android.widget.ScrollView { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpSignOnlyDialog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.webkit.MimeTypeMap { void <clinit>(); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { boolean isErrorEnabled(); }
-keepclassmembers class java.lang.String { boolean matches(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$28 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager { void <clinit>(); }
-keepclassmembers class java.lang.String { java.lang.String replaceAll(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ScrollView { void fling(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$28 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class java.lang.String { java.lang.String replaceFirst(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.ssl.TrustManagerFactory$SecureX509TrustManager { javax.net.ssl.X509TrustManager getInstance(java.lang.String,int); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { boolean isInfoEnabled(); }
-keepclassmembers class com.android.okio.OkBuffer { void close(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ListResponse { void <init>(java.util.List,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okio.OkBuffer { void flush(); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { boolean isWarnEnabled(); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ListResponse { java.util.List extractAttributes(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class java.lang.String { java.lang.String[] split(java.lang.String,int); }
-keepclassmembers class android.widget.ScrollView { void flingWithNestedDispatch(int); }
-keepclassmembers class com.fsck.k9.activity.setup.ConnectionSecurityHolder$1 { void <clinit>(); }
-keepclassmembers class java.lang.String { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void warn(java.lang.Object); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String readName(); }
-keepclassmembers class android.widget.ScrollView { void endDrag(); }
-keepclassmembers class java.lang.String { int codePointAt(int); }
-keepclassmembers class org.apache.commons.logging.impl.Jdk14Logger { void <clinit>(); }
-keepclassmembers class android.widget.ScrollView { void scrollTo(int,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ListResponse { java.util.List parse(java.util.List,java.lang.String); }
-keepclassmembers class java.lang.String { int codePointBefore(int); }
-keepclassmembers class com.jcraft.jzlib.StaticTree { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ListResponse { java.util.List parseLsub(java.util.List); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi21$Builder { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.lang.String,java.util.ArrayList,android.os.Bundle,int,int,android.app.Notification,java.lang.String,boolean,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ListResponse { java.util.List parseList(java.util.List); }
-keepclassmembers class java.lang.String { int offsetByCodePoints(int,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { void skip(); }
-keepclassmembers class android.widget.ScrollView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ListResponse { com.fsck.k9.mail.store.imap.ListResponse parseSingleLine(com.fsck.k9.mail.store.imap.ImapResponse,java.lang.String); }
-keepclassmembers class java.lang.String { boolean contains(java.lang.CharSequence); }
-keepclassmembers class android.widget.ScrollView { void setOverScrollMode(int); }
-keepclassmembers class java.lang.String { java.lang.String format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.lang.String { java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.Reader); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ListResponse { java.lang.String getName(); }
-keepclassmembers class android.widget.ScrollView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class android.preference.PreferenceInflater { void <init>(android.content.Context,android.preference.PreferenceManager); }
-keepclassmembers class android.net.NetworkInfo$State { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ListResponse { boolean hasAttribute(java.lang.String); }
-keepclassmembers class android.widget.ScrollView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ListResponse { java.lang.String getHierarchyDelimiter(); }
-keepclassmembers class android.widget.ScrollView { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.net.NetworkInfo$State { void <clinit>(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setInput(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.widget.ScrollView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class java.util.concurrent.TimeUnit$7 { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okio.OkBuffer { com.android.okio.OkBuffer clone(); }
-keepclassmembers class android.preference.PreferenceInflater { boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,android.preference.Preference,android.util.AttributeSet); }
-keepclassmembers class android.preference.PreferenceInflater { void init(android.preference.PreferenceManager); }
-keepclassmembers class java.lang.String { int compareTo(java.lang.Object); }
-keepclassmembers class android.widget.ScrollView { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.shapes.Shape { void <init>(); }
-keepclassmembers class android.preference.PreferenceInflater { android.preference.PreferenceGroup onMergeRoots(android.preference.PreferenceGroup,boolean,android.preference.PreferenceGroup); }
-keepclassmembers class android.util.StateSet { boolean isWildCard(int[]); }
-keepclassmembers class java.lang.String { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.shapes.Shape { void resize(float,float); }
-keepclassmembers class com.android.okio.InflaterSource { void <init>(com.android.okio.Source,java.util.zip.Inflater); }
-keepclassmembers class android.util.StateSet { boolean stateSetMatches(int[],int[]); }
-keepclassmembers class android.preference.PreferenceInflater { android.preference.GenericInflater$Parent onMergeRoots(android.preference.GenericInflater$Parent,boolean,android.preference.GenericInflater$Parent); }
-keepclassmembers class com.android.okio.InflaterSource { void <init>(com.android.okio.BufferedSource,java.util.zip.Inflater); }
-keepclassmembers class android.graphics.drawable.shapes.Shape { android.graphics.drawable.shapes.Shape clone(); }
-keepclassmembers class android.preference.PreferenceInflater { boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet); }
-keepclassmembers class com.android.okio.InflaterSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.bumptech.glide.load.engine.prefill.BitmapPreFiller { void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory { com.bumptech.glide.gifdecoder.GifDecoder buildDecoder(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider); }
-keepclassmembers class android.widget.ScrollView { int clamp(int,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory { com.bumptech.glide.gifencoder.AnimatedGifEncoder buildEncoder(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory { com.bumptech.glide.load.engine.Resource buildFrameResource(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory { com.bumptech.glide.gifdecoder.GifHeaderParser buildParser(); }
-keepclassmembers class com.android.internal.util.XmlUtils { void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class android.util.StateSet { int[] trimStateSet(int[],int); }
-keepclassmembers class com.android.okio.InflaterSource { void releaseInflatedBytes(); }
-keepclassmembers class com.android.okio.InflaterSource { boolean refill(); }
-keepclassmembers class android.util.StateSet { void <clinit>(); }
-keepclassmembers class com.android.internal.util.XmlUtils { void nextElement(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class libcore.io.Streams { int readSingleByte(java.io.InputStream); }
-keepclassmembers class com.android.okio.InflaterSource { void close(); }
-keepclassmembers class libcore.io.Streams { void writeSingleByte(java.io.OutputStream,int); }
-keepclassmembers class libcore.io.Streams { void readFully(java.io.InputStream,byte[],int,int); }
-keepclassmembers class libcore.io.Streams { byte[] readFully(java.io.InputStream); }
-keepclassmembers class java.lang.AssertionError { void <init>(); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getNamespaceCount(int); }
-keepclassmembers class libcore.io.Streams { long skipByReading(java.io.InputStream,long); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(java.lang.String); }
-keepclassmembers class libcore.io.Streams { byte[] readFullyNoClose(java.io.InputStream); }
-keepclassmembers class java.lang.AssertionError { void <init>(java.lang.Object); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi21$Builder { void addAction(android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class com.fsck.k9.activity.Accounts$5 { void <init>(com.fsck.k9.activity.Accounts); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi21$Builder { android.app.Notification build(); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi21$Builder { android.app.Notification$Builder getBuilder(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <init>(int,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,java.util.Date,java.util.Date,java.util.List,org.apache.harmony.security.x509.Extensions,byte[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getPositionDescription(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$5 { void run(); }
-keepclassmembers class libcore.io.Streams { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentIdFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { boolean equals(java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void describe(java.lang.StringBuilder,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { int hashCode(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentIdFieldImpl { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { java.lang.String getStatus(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.Runnable); }
-keepclassmembers class java.lang.Thread { void <init>(); }
-keepclassmembers class android.view.View$6 { void <init>(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.Runnable,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$Operation { void <init>(android.database.sqlite.SQLiteConnection$1); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getLineNumber(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getColumnNumber(); }
-keepclassmembers class com.fsck.k9.view.CryptoModeSelector$CryptoModeSelectorState { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getText(); }
-keepclassmembers class java.util.Hashtable$ValueIterator { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class com.fsck.k9.view.CryptoModeSelector$CryptoModeSelectorState { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <init>(int,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,java.util.Date,java.util.Date,java.util.List,org.apache.harmony.security.x509.Extensions,byte[],org.apache.harmony.security.x509.TBSCertList$1); }
-keepclassmembers class com.fsck.k9.view.CryptoModeSelector$CryptoModeSelectorState { com.fsck.k9.view.CryptoModeSelector$CryptoModeSelectorState[] values(); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String); }
-keepclassmembers class java.util.Hashtable$ValueIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class java.util.Hashtable$ValueIterator { java.lang.Object next(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$6 { void <init>(com.fsck.k9.activity.Accounts); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getNamespace(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$6 { void run(); }
-keepclassmembers class java.util.Collections$UnmodifiableList$1 { void <init>(java.util.Collections$UnmodifiableList,int); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getName(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { int access$400(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class java.util.Collections$UnmodifiableList$1 { boolean hasNext(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x509.AlgorithmIdentifier access$500(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class java.util.Collections$UnmodifiableList$1 { java.lang.Object next(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.Date access$700(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.Date access$800(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long); }
-keepclassmembers class java.util.Collections$UnmodifiableList$1 { void set(java.lang.Object); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting { void <init>(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { void <clinit>(); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.view.DisplayAdjustments); }
-keepclassmembers class java.lang.Thread { void <init>(java.lang.ThreadGroup,java.lang.String,int,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { java.util.List access$900(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList { org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertList); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ListImportContentsAsyncTask { void <init>(com.fsck.k9.activity.Accounts,android.net.Uri); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void <init>(com.fsck.k9.mailstore.LocalStore); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class android.view.DisplayAdjustments { void <init>(android.content.res.CompatibilityInfo,android.os.IBinder); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ListImportContentsAsyncTask { void <init>(com.fsck.k9.activity.Accounts,android.net.Uri,com.fsck.k9.activity.Accounts$1); }
-keepclassmembers class org.apache.http.impl.cookie.BasicExpiresHandler { void <init>(java.lang.String[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void <init>(com.fsck.k9.mailstore.LocalStore,java.lang.String,com.fsck.k9.mail.Folder); }
-keepclassmembers class android.view.DisplayAdjustments { void setCompatibilityInfo(android.content.res.CompatibilityInfo); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ListImportContentsAsyncTask { java.lang.Boolean doInBackground(java.lang.Void[]); }
-keepclassmembers class org.apache.http.impl.cookie.BasicExpiresHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$IntegerResourceSetting { java.util.Map getMapping(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void access$000(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { long access$1000(com.fsck.k9.mailstore.LocalMessage,android.database.sqlite.SQLiteDatabase,long); }
-keepclassmembers class android.view.DisplayAdjustments { android.content.res.CompatibilityInfo getCompatibilityInfo(); }
-keepclassmembers class org.kxml2.io.KXmlParser { int getEventType(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void access$101(com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[]); }
-keepclassmembers class org.kxml2.io.KXmlParser { int nextTag(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void access$1100(com.fsck.k9.mailstore.LocalMessage,android.database.sqlite.SQLiteDatabase,long); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$IdTrickeryCursor { void <init>(android.database.Cursor); }
-keepclassmembers class java.lang.Thread { void create(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long); }
-keepclassmembers class android.view.DisplayAdjustments { android.os.IBinder getActivityToken(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.Drawable[],android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class org.kxml2.io.KXmlParser { void require(int,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { com.fsck.k9.mailstore.LocalStore access$200(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$IdTrickeryCursor { int getColumnIndex(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { long access$300(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ListImportContentsAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$SubThemeSetting { void <init>(com.fsck.k9.K9$Theme); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { long access$400(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$SubThemeSetting { java.lang.Object fromPrettyString(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ListImportContentsAsyncTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { com.fsck.k9.mail.Folder access$500(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$IdTrickeryCursor { int getColumnIndexOrThrow(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(); }
-keepclassmembers class java.util.Calendar { void <init>(java.util.TimeZone); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void access$600(com.fsck.k9.mailstore.LocalMessage,android.database.sqlite.SQLiteDatabase,long); }
-keepclassmembers class android.view.DisplayAdjustments { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.Account$Searchable { void <clinit>(); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$SubThemeSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class com.jcraft.jzlib.StaticTree { void <init>(short[],int[],int,int,int); }
-keepclassmembers class com.bumptech.glide.manager.RequestTracker { void <init>(); }
-keepclassmembers class java.util.Calendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { com.fsck.k9.mail.Folder access$800(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class org.kxml2.io.KXmlParser { java.lang.String nextText(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ListImportContentsAsyncTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { boolean access$900(com.fsck.k9.mailstore.LocalMessage,android.database.sqlite.SQLiteDatabase,long); }
-keepclassmembers class com.fsck.k9.Account$Searchable { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ListImportContentsAsyncTask { void showProgressDialog(); }
-keepclassmembers class com.bumptech.glide.manager.RequestTracker { void clearRequests(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.activity.Accounts$1 { void <init>(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void delete(); }
-keepclassmembers class com.fsck.k9.Account$Searchable { com.fsck.k9.Account$Searchable valueOf(java.lang.String); }
-keepclassmembers class org.kxml2.io.KXmlParser { void setFeature(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$SubThemeSetting { java.lang.String toPrettyString(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$1 { void <init>(android.graphics.drawable.DrawableContainer); }
-keepclassmembers class com.fsck.k9.activity.Accounts$1 { void accountSizeChanged(com.fsck.k9.Account,long,long); }
-keepclassmembers class com.bumptech.glide.manager.RequestTracker { void pauseRequests(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void deleteFulltextIndexEntry(android.database.sqlite.SQLiteDatabase,long); }
-keepclassmembers class com.fsck.k9.Account$Searchable { com.fsck.k9.Account$Searchable[] values(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$1 { void accountStatusChanged(com.fsck.k9.BaseAccount,com.fsck.k9.AccountStats); }
-keepclassmembers class android.database.CursorIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void deleteMessageRow(android.database.sqlite.SQLiteDatabase,long); }
-keepclassmembers class com.bumptech.glide.manager.RequestTracker { void removeRequest(com.bumptech.glide.request.Request); }
-keepclassmembers class com.bumptech.glide.manager.RequestTracker { void restartRequests(); }
-keepclassmembers class java.util.Calendar { void clear(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { java.lang.String getAccountUuid(); }
-keepclassmembers class android.widget.AutoCompleteTextView$PassThroughClickListener { void <init>(android.widget.AutoCompleteTextView); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { long getEmptyThreadParent(android.database.sqlite.SQLiteDatabase,long); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void inflateLayers(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.kxml2.io.KXmlParser { void pushContentSource(char[]); }
-keepclassmembers class android.widget.AutoCompleteTextView$PassThroughClickListener { void onClick(android.view.View); }
-keepclassmembers class com.bumptech.glide.manager.RequestTracker { void resumeRequests(); }
-keepclassmembers class android.widget.AutoCompleteTextView$PassThroughClickListener { void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1); }
-keepclassmembers class org.kxml2.io.KXmlParser { void popContentSource(); }
-keepclassmembers class android.widget.AutoCompleteTextView$PassThroughClickListener { android.view.View$OnClickListener access$302(android.widget.AutoCompleteTextView$PassThroughClickListener,android.view.View$OnClickListener); }
-keepclassmembers class android.database.CursorIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Thread { java.lang.ClassLoader getContextClassLoader(); }
-keepclassmembers class java.util.Calendar { void complete(); }
-keepclassmembers class org.kxml2.io.KXmlParser { void <clinit>(); }
-keepclassmembers class java.lang.Thread { long getId(); }
-keepclassmembers class com.bumptech.glide.manager.RequestTracker { void runRequest(com.bumptech.glide.request.Request); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { boolean hasThreadChildren(android.database.sqlite.SQLiteDatabase,long); }
-keepclassmembers class java.lang.Thread { java.lang.String getName(); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECGroupContext { void <init>(long); }
-keepclassmembers class java.lang.Thread { int getPriority(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void updateLayerFromTypedArray(android.graphics.drawable.LayerDrawable$ChildDrawable,android.content.res.TypedArray); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$State getState(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECGroupContext { com.android.org.conscrypt.OpenSSLECGroupContext getCurveByName(java.lang.String); }
-keepclassmembers class java.lang.Thread { int nativeGetStatus(boolean); }
-keepclassmembers class com.fsck.k9.activity.Accounts$1 { void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$4 { java.util.List search(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECGroupContext { com.android.org.conscrypt.OpenSSLECGroupContext getInstance(int,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class java.lang.Thread { java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$4 { void <init>(com.fsck.k9.mail.store.imap.ImapFolder,java.util.List); }
-keepclassmembers class java.lang.Thread { java.lang.ThreadGroup getThreadGroup(); }
-keepclassmembers class java.util.Calendar { int get(int); }
-keepclassmembers class com.fsck.k9.activity.Accounts$1 { void informUserOfStatus(); }
-keepclassmembers class java.lang.Thread { void interrupt(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void updateHeader(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$1 { void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.preference.PreferenceActivity$2 { void <init>(android.preference.PreferenceActivity); }
-keepclassmembers class android.preference.PreferenceActivity$2 { void onClick(android.view.View); }
-keepclassmembers class com.fsck.k9.activity.Accounts$1 { void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class java.lang.Thread { void nativeInterrupt(); }
-keepclassmembers class java.util.Calendar { int getFirstDayOfWeek(); }
-keepclassmembers class java.lang.Thread { boolean isDaemon(); }
-keepclassmembers class java.lang.Thread { boolean interrupted(); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean canApplyTheme(); }
-keepclassmembers class java.lang.Thread { boolean isInterrupted(); }
-keepclassmembers class java.lang.Thread { boolean isAlive(); }
-keepclassmembers class java.lang.Thread { void join(); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(java.util.Locale); }
-keepclassmembers class com.fsck.k9.activity.Accounts$1 { void synchronizeMailboxStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class java.util.Calendar { java.util.Calendar getInstance(java.util.TimeZone); }
-keepclassmembers class com.bumptech.glide.load.model.AssetUriParser { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.model.AssetUriParser { boolean isAssetUri(android.net.Uri); }
-keepclassmembers class java.util.Calendar { int getMinimalDaysInFirstWeek(); }
-keepclassmembers class java.util.Calendar { java.util.Date getTime(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void addLayer(android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class java.util.Calendar { long getTimeInMillis(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void destroy(); }
-keepclassmembers class libcore.util.EmptyArray { void <clinit>(); }
-keepclassmembers class java.util.Calendar { java.util.TimeZone getTimeZone(); }
-keepclassmembers class com.bumptech.glide.load.model.AssetUriParser { java.lang.String toAssetPath(android.net.Uri); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { boolean equals(java.lang.Object); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECGroupContext { long getContext(); }
-keepclassmembers class com.fsck.k9.K9$NotificationHideSubject { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECGroupContext { com.android.org.conscrypt.OpenSSLECGroupContext getInstance(java.security.spec.ECParameterSpec); }
-keepclassmembers class java.util.Calendar { boolean isLenient(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void <init>(java.lang.String,org.xmlpull.v1.XmlPullParser,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { com.fsck.k9.Account getAccount(); }
-keepclassmembers class com.fsck.k9.K9$NotificationHideSubject { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { com.fsck.k9.mail.Folder getFolder(); }
-keepclassmembers class com.fsck.k9.K9$NotificationHideSubject { com.fsck.k9.K9$NotificationHideSubject valueOf(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { com.fsck.k9.mailstore.LocalFolder getFolder(); }
-keepclassmembers class android.app.FragmentManagerState$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { long getMessagePartId(); }
-keepclassmembers class java.util.Calendar { void set(int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { long getId(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { java.lang.String getMimeType(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { java.lang.String getPreview(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { com.fsck.k9.message.extractors.PreviewResult$PreviewType getPreviewType(); }
-keepclassmembers class java.lang.Thread { void run(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable findDrawableByLayerId(int); }
-keepclassmembers class android.util.Pools$SynchronizedPool { void <init>(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { long getRootId(); }
-keepclassmembers class android.util.Pools$SynchronizedPool { java.lang.Object acquire(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { java.lang.String getSubject(); }
-keepclassmembers class java.lang.Thread { void setDaemon(boolean); }
-keepclassmembers class java.util.Calendar { void set(int,int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { java.lang.String getUri(); }
-keepclassmembers class java.lang.Thread { void checkNotStarted(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { long getThreadId(); }
-keepclassmembers class java.util.Calendar { void set(int,int,int,int,int); }
-keepclassmembers class android.util.Pools$SynchronizedPool { boolean release(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setId(int,int); }
-keepclassmembers class java.lang.Thread { void pushInterruptAction$(java.lang.Runnable); }
-keepclassmembers class java.util.Calendar { void set(int,int,int,int,int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { boolean hasAttachments(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory { void <init>(android.content.Context,java.lang.String,int); }
-keepclassmembers class java.util.Calendar { void setFirstDayOfWeek(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { int hashCode(); }
-keepclassmembers class java.util.Calendar { void setLenient(boolean); }
-keepclassmembers class java.lang.Thread { void popInterruptAction$(java.lang.Runnable); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserException { void printStackTrace(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getNumberOfLayers(); }
-keepclassmembers class java.util.Calendar { void setMinimalDaysInFirstWeek(int); }
-keepclassmembers class java.util.Calendar { void setTime(java.util.Date); }
-keepclassmembers class android.preference.PreferenceActivity$1 { void <init>(android.preference.PreferenceActivity); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$15 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.preference.PreferenceActivity$1 { void handleMessage(android.os.Message); }
-keepclassmembers class java.util.Calendar { void setTimeInMillis(long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { com.fsck.k9.activity.MessageReference makeMessageReference(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$15 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class org.htmlcleaner.CData { void <init>(java.lang.String); }
-keepclassmembers class org.htmlcleaner.CData { java.lang.String getContent(); }
-keepclassmembers class java.lang.Thread { void setName(java.lang.String); }
-keepclassmembers class java.util.Calendar { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class org.htmlcleaner.CData { java.lang.String getContentWithStartAndEndTokens(); }
-keepclassmembers class com.fsck.k9.view.K9WebViewClient$PreLollipopWebViewClient { void <init>(com.fsck.k9.mailstore.AttachmentResolver); }
-keepclassmembers class org.htmlcleaner.CData { java.lang.String toString(); }
-keepclassmembers class java.lang.Thread { void nativeSetName(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void populateFromGetMessageCursor(android.database.Cursor); }
-keepclassmembers class org.htmlcleaner.CData { java.lang.String getContentWithoutStartAndEndTokens(); }
-keepclassmembers class java.lang.Thread { void setPriority(int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void sleep(long); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setPaddingMode(int); }
-keepclassmembers class java.lang.Thread { void nativeSetPriority(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.lang.Thread { void sleep(long,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class java.lang.IllegalThreadStateException { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void <init>(android.content.Context,java.lang.String,android.net.Uri,boolean); }
-keepclassmembers class java.lang.IllegalThreadStateException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void <init>(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeNestedPadding(android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void fillContactDataFromAddresses(com.fsck.k9.mail.Address[],java.util.List,java.util.Map); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void <init>(android.content.Context,java.lang.String,com.fsck.k9.mail.Address[]); }
-keepclassmembers class java.lang.Thread { void sleep(java.lang.Object,long,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$4 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void wtf(java.lang.String,java.lang.Throwable,boolean); }
-keepclassmembers class java.lang.Thread { void nativeCreate(java.lang.Thread,long,boolean); }
-keepclassmembers class java.lang.Thread { void start(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void computeStackedPadding(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$4 { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void fillContactDataFromCursor(android.database.Cursor,java.util.List,java.util.Map); }
-keepclassmembers class java.lang.Thread { java.lang.String toString(); }
-keepclassmembers class java.lang.Thread { void yield(); }
-keepclassmembers class java.lang.Thread { boolean holdsLock(java.lang.Object); }
-keepclassmembers class java.lang.Thread { boolean nativeHoldsLock(java.lang.Object); }
-keepclassmembers class com.android.internal.os.RuntimeInit { android.os.IBinder getApplicationObject(); }
-keepclassmembers class java.lang.Thread { void unpark(); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { void <init>(java.io.Reader,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspot(float,float); }
-keepclassmembers class com.android.internal.os.RuntimeInit { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1 { void <clinit>(); }
-keepclassmembers class java.lang.Thread { void parkFor(long); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { void <init>(java.io.Reader,int,int,int); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { char BeginToken(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] append(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void setFlag(com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle { com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle[] values(); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { void ExpandBuff(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class java.lang.Thread { void parkUntil(long); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAlpha(int); }
-keepclassmembers class com.bumptech.glide.load.engine.ResourceRecycler { void recycle(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void setFlagInternal(com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$SettingsUpgraderV31 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void fillContactDataFromEmailContentUri(android.net.Uri,java.util.List,java.util.Map); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$SettingsUpgraderV31 { int convertFromOldSize(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void setFrom(com.fsck.k9.mail.Address); }
-keepclassmembers class java.lang.Thread { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.engine.ResourceRecycler { void <init>(); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] append(int[],int,int); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$SettingsUpgraderV31 { java.util.Set upgrade(java.util.Map); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void setMessageId(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void setMessagePartId(long); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void fillContactDataFromLookupKey(android.net.Uri,java.util.List,java.util.Map); }
-keepclassmembers class java.util.Calendar { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings$3 { void <init>(com.fsck.k9.activity.setup.FolderSettings); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void setRecipients(com.fsck.k9.mail.Message$RecipientType,com.fsck.k9.mail.Address[]); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] append(long[],int,long); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings$3 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.http.auth.AuthenticationException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void fillContactDataFromQuery(java.lang.String,java.util.List,java.util.Map); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] append(boolean[],int,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.util.ArrayMap { int indexOf(java.lang.Object,int); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { void <init>(android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean isStateful(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Field checkAndGetReflectionField(java.io.ObjectStreamField); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void setSubject(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void setReplyTo(com.fsck.k9.mail.Address[]); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class java.util.IllegalFormatCodePointException { void <init>(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void setUid(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void fillCryptoStatusData(java.util.Map); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.util.IllegalFormatCodePointException { java.lang.String getMessage(); }
-keepclassmembers class android.widget.ResourceCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean onLevelChange(int); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int[] insert(int[],int,int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage { void writeTo(java.io.OutputStream); }
-keepclassmembers class android.util.ArrayMap { int indexOfNull(); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { android.database.sqlite.SQLiteDatabase getDatabase(); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { boolean onMove(int,int); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { java.lang.String getHttpElementCharset(org.apache.http.params.HttpParams); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { long[] insert(long[],int,int,long); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass createClassDesc(java.lang.Class); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { int getCount(); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { void fillWindow(int); }
-keepclassmembers class java.io.ObjectStreamClass { void <init>(); }
-keepclassmembers class android.util.ArrayMap { void allocArrays(int); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { boolean[] insert(boolean[],int,int,boolean); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { void FillBuff(); }
-keepclassmembers class android.util.MathUtils { int constrain(int,int,int); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { void setContentCharset(org.apache.http.params.HttpParams,java.lang.String); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { int getColumnIndex(java.lang.String); }
-keepclassmembers class android.util.MathUtils { float constrain(float,float,float); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { int growSize(int); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicWidth(); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { void setVersion(org.apache.http.params.HttpParams,org.apache.http.ProtocolVersion); }
-keepclassmembers class com.android.internal.util.GrowingArrayUtils { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$31 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { java.lang.String getUserAgent(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { void setUserAgent(org.apache.http.params.HttpParams,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$31 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { java.lang.String getContactIdFromContactUri(android.net.Uri); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { java.lang.String[] getColumnNames(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void initializeCryptoStatusForAllRecipients(java.util.Map); }
-keepclassmembers class android.database.sqlite.SQLiteCursor { void close(); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { java.lang.String GetImage(); }
-keepclassmembers class android.util.ArrayMap { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { void setUseExpectContinue(org.apache.http.params.HttpParams,boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class org.apache.http.params.HttpProtocolParams { boolean useExpectContinue(org.apache.http.params.HttpParams); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void deliverResult(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { boolean refreshChildPadding(int,android.graphics.drawable.LayerDrawable$ChildDrawable); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void deliverResult(java.util.List); }
-keepclassmembers class java.io.ObjectStreamClass { void buildFieldDescriptors(java.lang.reflect.Field[]); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { java.lang.Object loadInBackground(); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { char[] GetSuffix(int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInput[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void ensurePadding(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { java.util.List loadInBackground(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.support.v4.app.RemoteInput[],android.support.v4.app.NotificationCompat$1); }
-keepclassmembers class android.util.ArrayMap { void <init>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void onAbandon(); }
-keepclassmembers class android.util.ArrayMap { void <init>(int); }
-keepclassmembers class android.util.ArrayMap { void <init>(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { android.app.PendingIntent getActionIntent(); }
-keepclassmembers class android.util.ArrayMap { void <init>(android.util.ArrayMap); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { android.os.Bundle getExtras(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { int getIcon(); }
-keepclassmembers class android.util.ArrayMap { void clear(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void clearMutated(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { android.support.v4.app.RemoteInput[] getRemoteInputs(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientLoader { void onStartLoading(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.util.MathUtils { float lerp(float,float,float); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { android.support.v4.app.RemoteInputCompatBase$RemoteInput[] getRemoteInputs(); }
-keepclassmembers class android.util.ArrayMap { void erase(); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action { java.lang.CharSequence getTitle(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.util.ArrayMap { void ensureCapacity(int); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void acquireReference(); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog$2 { void <init>(com.fsck.k9.ui.messageview.CryptoInfoDialog); }
-keepclassmembers class java.io.ObjectStreamClass { long computeSerialVersionUID(java.lang.Class,java.lang.reflect.Field[]); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders$Builder { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void releaseReference(); }
-keepclassmembers class android.util.ArrayMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.util.MathUtils { void <clinit>(); }
-keepclassmembers class java.util.Collections$ReverseComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { int indexOfKey(java.lang.Object); }
-keepclassmembers class android.app.ITransientNotification$Stub { void <init>(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus { com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus[] values(); }
-keepclassmembers class java.util.Collections$ReverseComparator { void <init>(); }
-keepclassmembers class android.util.ArrayMap { int indexOfValue(java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { void UpdateLineColumn(char); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders$Builder { void <init>(); }
-keepclassmembers class android.app.ITransientNotification$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class java.util.Collections$ReverseComparator { java.util.Collections$ReverseComparator access$400(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.util.Collections$ReverseComparator { void <clinit>(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus { boolean isAvailable(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$6 { void <init>(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.AttachmentViewInfo); }
-keepclassmembers class android.util.ArrayMap { boolean containsValue(java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$6 { void onCancel(); }
-keepclassmembers class android.database.sqlite.SQLiteClosable { void close(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$6 { void onPathEntered(java.lang.String); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object keyAt(int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object valueAt(int); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object setValueAt(int,java.lang.Object); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder$1 { void <init>(com.fsck.k9.message.PgpMessageBuilder,boolean,com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver$1 { void <init>(com.fsck.k9.controller.MessagingControllerPushReceiver,java.util.concurrent.CountDownLatch); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.util.ArrayMap { boolean isEmpty(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver$1 { void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder$1 { void writeTo(java.io.OutputStream); }
-keepclassmembers class org.apache.http.HttpException { void <init>(java.lang.String); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.HttpException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.net.ProtocolException { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect); }
-keepclassmembers class java.net.ProtocolException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver$1 { void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class java.net.ProtocolException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharset { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders$Builder { com.bumptech.glide.load.model.LazyHeaders build(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void setup(int,float); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharset { java.nio.charset.CharsetDecoder newDecoder(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharset { void <init>(java.lang.String,java.lang.String[],java.lang.String,boolean); }
-keepclassmembers class android.util.SparseBooleanArray { void <init>(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharset { java.nio.charset.CharsetEncoder newEncoder(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void onHotspotBoundsChanged(); }
-keepclassmembers class android.util.SparseBooleanArray { void <init>(int); }
-keepclassmembers class android.util.ArrayMap { void append(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.util.SparseBooleanArray { android.util.SparseBooleanArray clone(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean shouldDraw(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener$1 { void <clinit>(); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int,boolean); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { void backup(int); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { int getBeginColumn(); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher { void <init>(com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.data.DataFetcher); }
-keepclassmembers class android.util.SparseBooleanArray { boolean get(int); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { int getBeginLine(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String descriptorForFieldSignature(java.lang.String); }
-keepclassmembers class android.util.SparseBooleanArray { void delete(int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher { void cancel(); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { int getEndColumn(); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { int getEndLine(); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher { void cleanup(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String descriptorForSignature(java.lang.String); }
-keepclassmembers class android.util.ArrayMap { void validate(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Field fieldSerialPersistentFields(java.lang.Class); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleCharStream { char readChar(); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher { java.lang.String getId(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class forClass(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void getBounds(android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.message.IdentityField { void <clinit>(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void <init>(java.lang.CharSequence); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher { com.bumptech.glide.load.model.ImageVideoWrapper loadData(com.bumptech.glide.Priority); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { int length(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object newInstance(java.lang.Class); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965SpecFactory { void <init>(); }
-keepclassmembers class android.util.SparseBooleanArray { void put(int,boolean); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { char charAt(int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965SpecFactory { org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void enter(boolean); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Object newInstance(java.lang.Class,long); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class resolveConstructorClass(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.util.ArrayMap { void putAll(android.util.ArrayMap); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void exit(); }
-keepclassmembers class android.util.SparseBooleanArray { int size(); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$4 { void <init>(com.fsck.k9.activity.ChooseFolder); }
-keepclassmembers class android.util.SparseBooleanArray { int keyAt(int); }
-keepclassmembers class android.util.SparseBooleanArray { boolean valueAt(int); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$4 { void listFolders(com.fsck.k9.Account,java.util.List); }
-keepclassmembers class org.htmlcleaner.conditional.TagNodeAutoGeneratedCondition { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.conditional.TagNodeAutoGeneratedCondition { void <init>(); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class org.htmlcleaner.conditional.TagNodeAutoGeneratedCondition { boolean satisfy(org.htmlcleaner.TagNode); }
-keepclassmembers class android.util.ArrayMap { java.lang.Object removeAt(int); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$7 { void <clinit>(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.util.SparseBooleanArray { void clear(); }
-keepclassmembers class android.util.SparseBooleanArray { void append(int,boolean); }
-keepclassmembers class java.io.ObjectStreamClass { boolean inSamePackage(java.lang.Class,java.lang.Class); }
-keepclassmembers class org.htmlcleaner.conditional.TagNodeAutoGeneratedCondition { java.lang.String toString(); }
-keepclassmembers class java.io.ObjectStreamClass { long getConstructorId(java.lang.Class); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void createPendingHardwareExit(int,int,int); }
-keepclassmembers class org.apache.harmony.security.x501.DirectoryString { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class android.text.Annotation { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.message.IdentityField { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$PasswordCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class android.text.Annotation { void <init>(android.os.Parcel); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher { java.lang.Object loadData(com.bumptech.glide.Priority); }
-keepclassmembers class org.apache.http.client.protocol.RequestAddCookies { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.client.protocol.RequestAddCookies { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getConstructorSignature(java.lang.reflect.Constructor); }
-keepclassmembers class com.fsck.k9.message.IdentityField { com.fsck.k9.message.IdentityField[] getIntegerFields(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField getField(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] fields(); }
-keepclassmembers class com.fsck.k9.message.IdentityField { com.fsck.k9.message.IdentityField[] values(); }
-keepclassmembers class android.util.SparseBooleanArray { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.message.IdentityField { java.lang.String value(); }
-keepclassmembers class android.text.Annotation { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void <init>(int); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState { com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState[] values(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getFields(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { void put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.List getHierarchy(); }
-keepclassmembers class com.bumptech.glide.load.resource.SimpleResource { void <init>(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.List makeHierarchy(); }
-keepclassmembers class com.bumptech.glide.load.resource.SimpleResource { java.lang.Object get(); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache { int access$000(com.android.i18n.phonenumbers.RegexCache$LRUCache); }
-keepclassmembers class com.bumptech.glide.load.resource.SimpleResource { int getSize(); }
-keepclassmembers class android.util.ArrayMap { int size(); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTgroup_body { void <init>(int); }
-keepclassmembers class com.bumptech.glide.load.resource.SimpleResource { void recycle(); }
-keepclassmembers class java.net.ProxySelector { void <init>(); }
-keepclassmembers class android.util.ArrayMap { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass { void copyFieldAttributes(); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.net.ProxySelector { java.net.ProxySelector getDefault(); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTgroup_body { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence,java.lang.String); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.net.ProxySelector { void <clinit>(); }
-keepclassmembers class android.content.ClipData$Item { void <init>(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void endSoftwareAnimations(); }
-keepclassmembers class android.widget.FrameLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void jump(); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamField[] getLoadFields(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.graphics.Paint getTempPaint(android.graphics.Paint); }
-keepclassmembers class android.content.ClipData$Item { void <init>(android.net.Uri); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getFieldSignature(java.lang.reflect.Field); }
-keepclassmembers class java.io.ObjectStreamClass { byte getFlags(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getMethodSignature(java.lang.reflect.Method); }
-keepclassmembers class android.util.ArrayMap { int hashCode(); }
-keepclassmembers class com.fsck.k9.Throttle { void <clinit>(); }
-keepclassmembers class java.util.concurrent.TimeUnit$6 { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String getName(); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence,android.content.Intent,android.net.Uri); }
-keepclassmembers class java.io.ObjectStreamClass { long getSerialVersionUID(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void exitSoftware(int,int,int); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass getSuperclass(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasClinit(java.lang.Class); }
-keepclassmembers class android.content.ClipData$Item { void <init>(java.lang.CharSequence,java.lang.String,android.content.Intent,android.net.Uri); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isExternalizable(java.lang.Class); }
-keepclassmembers class com.fsck.k9.Throttle { void <init>(java.lang.String,java.lang.Runnable,android.os.Handler,int,int); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isPrimitiveType(char); }
-keepclassmembers class android.util.ArrayMap { java.lang.String toString(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isSerializable(java.lang.Class); }
-keepclassmembers class com.fsck.k9.Throttle { void <init>(java.lang.String,java.lang.Runnable,android.os.Handler,int,int,com.fsck.k9.Clock,java.util.Timer); }
-keepclassmembers class java.io.ObjectStreamClass { void resolveProperties(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancel(); }
-keepclassmembers class android.content.ClipData$Item { android.net.Uri getUri(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isSerializable(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isExternalizable(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancelSoftwareAnimations(); }
-keepclassmembers class android.util.ArrayMap { android.util.MapCollections getCollection(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isProxy(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void cancelHardwareAnimations(boolean); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass lookup(java.lang.Class); }
-keepclassmembers class java.io.ObjectStreamClass { boolean isEnum(); }
-keepclassmembers class com.fsck.k9.Throttle { android.os.Handler access$200(com.fsck.k9.Throttle); }
-keepclassmembers class com.fsck.k9.Throttle { com.fsck.k9.Throttle$MyTimerTask access$302(com.fsck.k9.Throttle,com.fsck.k9.Throttle$MyTimerTask); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$ThemeSetting { void <init>(com.fsck.k9.K9$Theme); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$ThemeSetting { java.lang.Object fromPrettyString(java.lang.String); }
-keepclassmembers class android.util.ArrayMap { void putAll(java.util.Map); }
-keepclassmembers class com.fsck.k9.Throttle { java.lang.Runnable access$500(com.fsck.k9.Throttle); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void invalidateSelf(); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$ThemeSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { java.io.ObjectStreamClass lookupStreamClass(java.lang.Class); }
-keepclassmembers class android.util.ArrayMap { boolean retainAll(java.util.Collection); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.AnimatorListenerAdapter access$100(android.graphics.drawable.RippleBackground); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.TimeInterpolator access$000(); }
-keepclassmembers class android.util.ArrayMap { java.util.Set keySet(); }
-keepclassmembers class com.fsck.k9.Throttle { boolean isCallbackScheduled(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { boolean access$302(android.graphics.drawable.RippleBackground,boolean); }
-keepclassmembers class java.io.ObjectStreamClass { java.util.WeakHashMap getCache(); }
-keepclassmembers class android.util.ArrayMap { java.util.Collection values(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { android.animation.ObjectAnimator access$202(android.graphics.drawable.RippleBackground,android.animation.ObjectAnimator); }
-keepclassmembers class android.widget.FrameLayout { void setVisibility(int); }
-keepclassmembers class android.content.res.CompatibilityInfo$2 { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class java.nio.BufferOverflowException { void <init>(); }
-keepclassmembers class com.fsck.k9.Throttle { void onEvent(); }
-keepclassmembers class android.app.Service { void <init>(); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$ThemeSetting { java.lang.String toPrettyString(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$4 { void listFoldersFailed(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.Throttle { void updateTimeout(); }
-keepclassmembers class android.widget.FrameLayout { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.util.ArrayMap { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground { void <clinit>(); }
-keepclassmembers class android.app.Service { android.app.Application getApplication(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method findPrivateMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$ThemeSetting { java.lang.String toString(java.lang.Object); }
-keepclassmembers class android.app.Service { void onStart(android.content.Intent,int); }
-keepclassmembers class android.widget.FrameLayout { void drawableStateChanged(); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$4 { void listFoldersFinished(com.fsck.k9.Account); }
-keepclassmembers class android.os.NetworkOnMainThreadException { void <init>(); }
-keepclassmembers class android.widget.FrameLayout { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.widget.FrameLayout { android.widget.FrameLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$4 { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.Service { void onDestroy(); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(int); }
-keepclassmembers class android.widget.FrameLayout { void setForeground(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$4 { void listFoldersStarted(com.fsck.k9.Account); }
-keepclassmembers class android.util.LongSparseLongArray { void <init>(); }
-keepclassmembers class android.app.Service { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.app.Service { void onTrimMemory(int); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodWriteReplace(); }
-keepclassmembers class android.app.Service { void onLowMemory(); }
-keepclassmembers class android.os.Binder { int getCallingUid(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodWriteReplace(); }
-keepclassmembers class android.os.Binder { int getCallingPid(); }
-keepclassmembers class android.app.Service { boolean onUnbind(android.content.Intent); }
-keepclassmembers class android.util.LongSparseLongArray { android.util.LongSparseLongArray clone(); }
-keepclassmembers class android.app.Service { void onRebind(android.content.Intent); }
-keepclassmembers class android.os.Binder { long clearCallingIdentity(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodReadResolve(); }
-keepclassmembers class android.os.Binder { void restoreCallingIdentity(long); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadResolve(); }
-keepclassmembers class android.os.Binder { void flushPendingCommands(); }
-keepclassmembers class android.os.Binder { void setThreadStrictModePolicy(int); }
-keepclassmembers class android.app.Service { void stopSelf(); }
-keepclassmembers class android.app.Service { void onTaskRemoved(android.content.Intent); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$EntryIterator { void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodWriteObject(); }
-keepclassmembers class android.app.Service { void stopSelf(int); }
-keepclassmembers class android.os.Binder { void <init>(); }
-keepclassmembers class android.os.Binder { void attachInterface(android.os.IInterface,java.lang.String); }
-keepclassmembers class android.os.Binder { java.lang.String getInterfaceDescriptor(); }
-keepclassmembers class android.util.LongSparseLongArray { long get(long,long); }
-keepclassmembers class android.widget.FrameLayout { android.graphics.drawable.Drawable getForeground(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodWriteObject(); }
-keepclassmembers class android.app.Service { boolean stopSelfResult(int); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadObject(); }
-keepclassmembers class java.io.ObjectStreamClass { boolean hasMethodReadObjectNoData(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class android.app.Service { void setForeground(boolean); }
-keepclassmembers class android.os.Binder { android.os.IInterface queryLocalInterface(java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { void <init>(); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { org.apache.http.util.CharArrayBuffer initBuffer(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class org.apache.james.mime4j.field.DateTimeFieldImpl { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.reflect.Method getMethodReadObjectNoData(); }
-keepclassmembers class android.os.Binder { boolean onTransact(int,android.os.Parcel,android.os.Parcel,int); }
-keepclassmembers class org.apache.james.mime4j.field.DateTimeFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.app.Service { void startForeground(int,android.app.Notification); }
-keepclassmembers class java.io.ObjectStreamClass { void initPrivateFields(java.io.ObjectStreamClass); }
-keepclassmembers class android.widget.FrameLayout { void applyForegroundTint(); }
-keepclassmembers class org.apache.james.mime4j.field.DateTimeFieldImpl { void parse(); }
-keepclassmembers class android.util.LongSparseLongArray { void put(long,long); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { org.apache.http.util.CharArrayBuffer appendProtocolVersion(org.apache.http.util.CharArrayBuffer,org.apache.http.ProtocolVersion); }
-keepclassmembers class java.io.ObjectStreamClass { void setClass(java.lang.Class); }
-keepclassmembers class android.app.Service { void stopForeground(boolean); }
-keepclassmembers class java.io.ObjectStreamClass { void setFields(java.io.ObjectStreamField[]); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingLeftWithForeground(); }
-keepclassmembers class java.io.ObjectStreamClass { void setLoadFields(java.io.ObjectStreamField[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$2 { void <init>(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class java.io.ObjectStreamClass { void setFlags(byte); }
-keepclassmembers class java.io.ObjectStreamClass { void setName(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.DateTimeFieldImpl { java.util.Date getDate(); }
-keepclassmembers class android.os.Binder { void dump(java.io.FileDescriptor,java.lang.String[]); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingRightWithForeground(); }
-keepclassmembers class java.io.ObjectStreamClass { void setSerialVersionUID(long); }
-keepclassmembers class java.io.ObjectStreamClass { void setSuperclass(java.io.ObjectStreamClass); }
-keepclassmembers class android.app.Service { void attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { int estimateProtocolVersionLen(org.apache.http.ProtocolVersion); }
-keepclassmembers class android.util.LongSparseLongArray { long valueAt(int); }
-keepclassmembers class java.io.ObjectStreamClass { int primitiveSize(java.lang.Class); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingTopWithForeground(); }
-keepclassmembers class android.util.LongSparseLongArray { int indexOfKey(long); }
-keepclassmembers class android.widget.FrameLayout { int getPaddingBottomWithForeground(); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine); }
-keepclassmembers class android.util.LongSparseLongArray { void clear(); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.String toString(); }
-keepclassmembers class android.widget.FrameLayout { void onMeasure(int,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$2 { void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { void doFormatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class checkAndGetTcObjectClass(); }
-keepclassmembers class android.os.Binder { void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.util.LongSparseLongArray { void append(long,long); }
-keepclassmembers class android.os.Binder { boolean transact(int,android.os.Parcel,android.os.Parcel,int); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { org.apache.http.util.CharArrayBuffer formatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { void doFormatStatusLine(org.apache.http.util.CharArrayBuffer,org.apache.http.StatusLine); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman { int[] access$000(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman { byte[] access$100(); }
-keepclassmembers class android.os.Binder { void init(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman { void <clinit>(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { java.lang.Class checkAndGetTcEnumClass(); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class java.io.ObjectStreamClass { void <clinit>(); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { org.apache.http.util.CharArrayBuffer formatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header); }
-keepclassmembers class android.os.Binder { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman { int[] access$200(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman { byte[] access$300(); }
-keepclassmembers class android.content.ClipData$Item { java.lang.String toString(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.NamedRunnable { void <init>(java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { void doFormatHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.Header); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$12$1 { void <init>(com.fsck.k9.controller.MessagingController$12); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$12$1 { void run(); }
-keepclassmembers class android.widget.FrameLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.content.ClipData$Item { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class com.android.okhttp.internal.NamedRunnable { void run(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void scheduleNext(); }
-keepclassmembers class java.security.Signature$SignatureImpl { void <init>(java.lang.String,java.security.Provider); }
-keepclassmembers class android.widget.FrameLayout { void layoutChildren(int,int,int,int,boolean); }
-keepclassmembers class org.apache.http.message.BasicLineFormatter { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor { void <init>(android.os.AsyncTask$1); }
-keepclassmembers class dalvik.system.BaseDexClassLoader { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1 { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1 { java.lang.ref.SoftReference initialValue(); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils$DateFormatHolder$1 { java.lang.Object initialValue(); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class); }
-keepclassmembers class java.security.Signature$SignatureImpl { boolean engineVerify(byte[]); }
-keepclassmembers class android.transition.CircularPropagation { void <init>(); }
-keepclassmembers class java.security.Signature$SignatureImpl { void engineUpdate(byte[],int,int); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.Class,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$26 { void <init>(com.fsck.k9.controller.MessagingController,java.lang.String,java.lang.String); }
-keepclassmembers class java.security.Signature$SignatureImpl { void engineInitVerify(java.security.PublicKey); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$26 { void act(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,java.util.List); }
-keepclassmembers class java.io.ObjectStreamField { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectStreamField { int compareTo(java.lang.Object); }
-keepclassmembers class android.widget.FrameLayout { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.FrameLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getName(); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.Class getTypeInternal(); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.Class getType(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void <init>(android.content.Context,boolean); }
-keepclassmembers class java.io.ObjectStreamField { char getTypeCode(); }
-keepclassmembers class java.io.ObjectStreamField { char typeCodeOf(java.lang.Class); }
-keepclassmembers class android.content.ContentValues { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean onForwardedEvent(android.view.MotionEvent,int); }
-keepclassmembers class java.security.Signature$SignatureImpl { java.security.SignatureSpi getSpi(); }
-keepclassmembers class android.widget.FrameLayout { void setMeasureAllChildren(boolean); }
-keepclassmembers class java.io.ObjectStreamField { int getOffset(); }
-keepclassmembers class java.security.Signature$SignatureImpl { java.security.SignatureSpi getSpi(java.security.Key); }
-keepclassmembers class com.fsck.k9.Account$ShowPictures { void <clinit>(); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String getTypeString(); }
-keepclassmembers class android.content.ContentValues { void put(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.FrameLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.transition.Fade { void <init>(); }
-keepclassmembers class android.widget.FrameLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.fsck.k9.Account$ShowPictures { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.transition.Fade { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.Fade { void <init>(int); }
-keepclassmembers class android.content.ContentValues { void put(java.lang.String,java.lang.Integer); }
-keepclassmembers class java.io.ObjectStreamField { boolean isPrimitive(); }
-keepclassmembers class com.fsck.k9.Account$ShowPictures { com.fsck.k9.Account$ShowPictures valueOf(java.lang.String); }
-keepclassmembers class android.widget.FrameLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.io.ObjectStreamField { boolean writeField(java.io.DataOutputStream); }
-keepclassmembers class android.widget.FrameLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void clickPressedItem(android.view.View,int); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void <init>(com.fsck.k9.mail.store.StoreConfig,com.fsck.k9.mail.ssl.TrustedSocketFactory); }
-keepclassmembers class android.widget.FrameLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.content.ContentValues { void put(java.lang.String,java.lang.Long); }
-keepclassmembers class java.io.ObjectStreamField { void setOffset(int); }
-keepclassmembers class android.content.ContentValues { void put(java.lang.String,byte[]); }
-keepclassmembers class java.io.ObjectStreamField { java.lang.String toString(); }
-keepclassmembers class android.content.ContentValues { void putNull(java.lang.String); }
-keepclassmembers class android.content.ContentValues { int size(); }
-keepclassmembers class android.content.ContentValues { void clear(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void clearPressedItem(); }
-keepclassmembers class java.io.ObjectStreamField { void resolve(java.lang.ClassLoader); }
-keepclassmembers class android.content.ContentValues { java.lang.Object get(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void checkLine(java.lang.String); }
-keepclassmembers class android.content.ContentValues { java.lang.String getAsString(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl$1 { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void setPressedItem(android.view.View,int,float,float); }
-keepclassmembers class org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl$1 { org.apache.james.mime4j.dom.field.ContentTransferEncodingField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.transition.Transition$TransitionListenerAdapter { void <init>(); }
-keepclassmembers class java.io.ObjectStreamField { boolean isUnshared(); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { java.lang.String createUri(com.fsck.k9.mail.ServerSettings); }
-keepclassmembers class java.io.ObjectStreamField { void setUnshared(boolean); }
-keepclassmembers class java.io.ObjectStreamField { boolean defaultResolve(); }
-keepclassmembers class android.view.textservice.TextInfo { void <init>(java.lang.CharSequence,int,int,int,int); }
-keepclassmembers class android.content.ContentValues { void put(java.lang.String,java.lang.Boolean); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession { javax.net.ssl.SSLSession getNullSession(); }
-keepclassmembers class android.transition.Fade { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean touchModeDrawsInPressedState(); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { android.view.View obtainView(int,boolean[]); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpecFactory { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession { java.lang.String getCipherSuite(); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession { java.security.cert.Certificate[] getLocalCertificates(); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpecFactory { org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession { java.security.Principal getLocalPrincipal(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean isInTouchMode(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean isFocused(); }
-keepclassmembers class android.view.textservice.TextInfo { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean hasWindowFocus(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { void <init>(org.kxml2.io.KXmlParser$ContentSource,char[],int,int); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession { java.security.cert.Certificate[] getPeerCertificates(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean access$502(android.widget.ListPopupWindow$DropDownListView,boolean); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { boolean hasFocus(); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$100(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { char[] access$000(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { int access$200(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView { void <clinit>(); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation loadAnimation(android.content.Context,int); }
-keepclassmembers class org.kxml2.io.KXmlParser$ContentSource { org.kxml2.io.KXmlParser$ContentSource access$300(org.kxml2.io.KXmlParser$ContentSource); }
-keepclassmembers class android.view.animation.AnimationUtils { long currentAnimationTimeMillis(); }
-keepclassmembers class android.app.SearchableInfo { java.lang.String getSuggestAuthority(); }
-keepclassmembers class android.widget.RemoteViews$Action { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$Action { void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { com.fsck.k9.mail.ServerSettings decodeUri(java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$Action { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.app.SearchableInfo { boolean useBadgeLabel(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources); }
-keepclassmembers class android.app.SearchableInfo { android.content.Context getActivityContext(android.content.Context); }
-keepclassmembers class libcore.util.CollectionUtils$1 { void <init>(java.lang.Iterable,boolean); }
-keepclassmembers class android.app.SearchableInfo { android.content.Context createActivityContext(android.content.Context,android.content.ComponentName); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$1$1 { void <init>(com.fsck.k9.provider.MessageProvider$1,android.app.Application); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void init(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$1$1 { void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.app.SearchableInfo { boolean useBadgeIcon(); }
-keepclassmembers class android.widget.RemoteViews$Action { void <init>(android.widget.RemoteViews$1); }
-keepclassmembers class org.apache.james.mime4j.parser.MimeStreamParser { void <init>(org.apache.james.mime4j.stream.MimeConfig); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void <init>(android.graphics.drawable.VectorDrawable$VFullPath); }
-keepclassmembers class org.apache.james.mime4j.parser.MimeStreamParser { void <init>(org.apache.james.mime4j.stream.MimeConfig,org.apache.james.mime4j.codec.DecodeMonitor,org.apache.james.mime4j.stream.BodyDescriptorBuilder); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$1 { void <init>(de.cketti.library.changelog.ChangeLog); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void start(); }
-keepclassmembers class org.apache.commons.io.Charsets { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.parser.MimeStreamParser { void <init>(org.apache.james.mime4j.stream.MimeTokenStream); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void stop(); }
-keepclassmembers class android.content.ContentValues { java.util.Set keySet(); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { java.util.List executeSimpleCommand(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { java.util.List executeSimpleCommand(java.lang.String,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void nextFrame(); }
-keepclassmembers class org.apache.commons.io.Charsets { java.nio.charset.Charset toCharset(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.parser.MimeStreamParser { void parse(java.io.InputStream); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap); }
-keepclassmembers class android.content.ContentValues { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.io.Charsets { java.nio.charset.Charset toCharset(java.nio.charset.Charset); }
-keepclassmembers class android.widget.NumberPicker { android.widget.NumberPicker$Formatter getTwoDigitFormatter(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void parseOptionalSizeValue(java.util.Map); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.security.KeyChain$KeyChainConnection { void <init>(android.content.Context,android.content.ServiceConnection,android.security.IKeyChainService); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.reflect.Field$1 { void <init>(); }
-keepclassmembers class android.content.ContentValues { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setAlpha(int); }
-keepclassmembers class android.security.KeyChain$KeyChainConnection { void <init>(android.content.Context,android.content.ServiceConnection,android.security.IKeyChainService,android.security.KeyChain$1); }
-keepclassmembers class android.security.KeyChain$KeyChainConnection { void close(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.security.KeyChain$KeyChainConnection { android.security.IKeyChainService getService(); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { java.lang.String readLine(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.view.ViewPropertyAnimator$1 { void <init>(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void saslAuthCramMD5(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean canApplyTheme(); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.GifBitmapWrapperDrawableTranscoder { void <init>(com.bumptech.glide.load.resource.transcode.ResourceTranscoder); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { java.util.BitSet INIT_BITSET(int[]); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.GifBitmapWrapperDrawableTranscoder { java.lang.String getId(); }
-keepclassmembers class com.fsck.k9.service.MailService { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.GifBitmapWrapperDrawableTranscoder { com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class com.fsck.k9.service.MailService { void <init>(); }
-keepclassmembers class com.fsck.k9.service.MailService { void access$000(com.fsck.k9.service.MailService,boolean,boolean,boolean); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { void copyContent(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet,java.lang.StringBuilder); }
-keepclassmembers class com.fsck.k9.service.MailService { void access$100(com.fsck.k9.service.MailService,boolean,boolean); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VFullPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.service.MailService { void access$200(com.fsck.k9.service.MailService); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void saslAuthExternal(java.lang.String); }
-keepclassmembers class com.fsck.k9.service.MailService { void actionCancel(android.content.Context,java.lang.Integer); }
-keepclassmembers class com.fsck.k9.service.MailService { void access$300(com.fsck.k9.service.MailService); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void saslAuthLogin(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Property { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class com.fsck.k9.service.MailService { void actionReschedulePoll(android.content.Context,java.lang.Integer); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class org.apache.james.mime4j.parser.MimeStreamParser { void setContentHandler(org.apache.james.mime4j.parser.ContentHandler); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { void copyQuotedContent(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.lang.StringBuilder); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean onLevelChange(int); }
-keepclassmembers class com.fsck.k9.service.MailService { void actionReset(android.content.Context,java.lang.Integer); }
-keepclassmembers class android.util.Property { java.lang.String getName(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { boolean onStateChange(int[]); }
-keepclassmembers class org.apache.james.mime4j.parser.MimeStreamParser { void setRecurse(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getIntrinsicWidth(); }
-keepclassmembers class com.fsck.k9.service.MailService { void actionRestartPushers(android.content.Context,java.lang.Integer); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void saslAuthPlain(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.SearchableInfo { void addActionKey(android.app.SearchableInfo$ActionKeyInfo); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { int getIntrinsicHeight(); }
-keepclassmembers class com.fsck.k9.service.MailService { void connectivityChange(android.content.Context,java.lang.Integer); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class com.bumptech.glide.load.data.LocalUriFetcher { void <init>(android.content.Context,android.net.Uri); }
-keepclassmembers class com.fsck.k9.service.MailService { void cancel(); }
-keepclassmembers class com.bumptech.glide.load.data.LocalUriFetcher { void cancel(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.service.MailService { long getNextPollTime(); }
-keepclassmembers class com.fsck.k9.service.MailService { boolean isSyncDisabled(); }
-keepclassmembers class com.bumptech.glide.load.data.LocalUriFetcher { void cleanup(); }
-keepclassmembers class com.bumptech.glide.load.data.LocalUriFetcher { java.lang.String getId(); }
-keepclassmembers class com.bumptech.glide.load.data.LocalUriFetcher { java.lang.Object loadData(com.bumptech.glide.Priority); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.service.MailService { void refreshPushers(); }
-keepclassmembers class com.android.internal.app.AlertController$ButtonHandler { void <init>(android.content.DialogInterface); }
-keepclassmembers class com.android.internal.app.AlertController$ButtonHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.Context,int); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { java.util.Map sendHello(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { org.apache.james.mime4j.stream.RawField parseField(org.apache.james.mime4j.util.ByteSequence); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { org.apache.james.mime4j.stream.NameValuePair parseParameter(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator loadInterpolator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void sendMessageTo(java.util.List,com.fsck.k9.mail.Message); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { java.util.List parseParameters(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor); }
-keepclassmembers class com.fsck.k9.service.MailService { void rescheduleAllInBackground(boolean,boolean,java.lang.Integer); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { org.apache.james.mime4j.stream.RawBody parseRawBody(org.apache.james.mime4j.stream.RawField); }
-keepclassmembers class com.fsck.k9.service.MailService { void refreshPushersInBackground(boolean,boolean,java.lang.Integer); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.service.MailService { void reschedulePoll(boolean,boolean,boolean); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { org.apache.james.mime4j.stream.RawBody parseRawBody(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(); }
-keepclassmembers class android.app.SearchableInfo { int getLabelId(); }
-keepclassmembers class android.os.StrictMode$LogStackTrace { void <init>(android.os.StrictMode$1); }
-keepclassmembers class com.bumptech.glide.request.target.GlideDrawableImageViewTarget { void <init>(android.widget.ImageView); }
-keepclassmembers class android.app.SearchableInfo { int getIconId(); }
-keepclassmembers class com.bumptech.glide.request.target.GlideDrawableImageViewTarget { void <init>(android.widget.ImageView,int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Small { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.app.SearchableInfo { boolean getVoiceSearchEnabled(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Small { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { java.lang.String parseToken(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet); }
-keepclassmembers class android.app.SearchableInfo { int getInputType(); }
-keepclassmembers class com.bumptech.glide.request.target.GlideDrawableImageViewTarget { void onResourceReady(com.bumptech.glide.load.resource.drawable.GlideDrawable,com.bumptech.glide.request.animation.GlideAnimation); }
-keepclassmembers class android.view.animation.AnimationUtils { android.view.animation.Interpolator createInterpolatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.app.SearchableInfo { int getImeOptions(); }
-keepclassmembers class android.app.SearchableInfo { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesDuration(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void setFramesCount(int); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.content.res.Resources,android.graphics.drawable.AnimatedRotateDrawable$1); }
-keepclassmembers class com.fsck.k9.preferences.TimePickerPreference { android.view.View onCreateDialogView(); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { java.lang.String parseValue(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet); }
-keepclassmembers class com.fsck.k9.activity.Accounts$7 { void <init>(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.preferences.TimePickerPreference { void onDialogClosed(boolean); }
-keepclassmembers class com.fsck.k9.activity.Accounts$7 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.bumptech.glide.request.target.GlideDrawableImageViewTarget { void onResourceReady(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void writeLine(java.lang.String,boolean); }
-keepclassmembers class com.bumptech.glide.request.target.GlideDrawableImageViewTarget { void onStart(); }
-keepclassmembers class com.bumptech.glide.request.target.GlideDrawableImageViewTarget { void setResource(com.bumptech.glide.load.resource.drawable.GlideDrawable); }
-keepclassmembers class com.bumptech.glide.request.target.GlideDrawableImageViewTarget { void onStop(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(); }
-keepclassmembers class com.fsck.k9.preferences.TimePickerPreference { void onTimeChanged(android.widget.TimePicker,int,int); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void close(); }
-keepclassmembers class com.bumptech.glide.request.target.GlideDrawableImageViewTarget { void setResource(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void addState(int[],android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler { void accountSizeChanged(long,long); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean isStateful(); }
-keepclassmembers class android.app.SearchableInfo { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler { void <init>(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { java.lang.String getCanonicalHostName(java.net.InetAddress); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void open(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler { void dataChanged(); }
-keepclassmembers class com.fsck.k9.service.MailService { void reschedulePollInBackground(boolean,boolean,java.lang.Integer,boolean); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { void skipComment(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler { void newFolders(java.util.List); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler { void folderLoading(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler { void progress(boolean); }
-keepclassmembers class com.fsck.k9.service.MailService { void reschedulePushers(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTlocal_part { void <init>(int); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTlocal_part { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class com.fsck.k9.service.MailService { void reschedulePushersInBackground(boolean,boolean,java.lang.Integer); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler { void refreshTitle(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler { void workingAccount(int); }
-keepclassmembers class com.fsck.k9.service.MailService { void saveLastCheckEnd(android.content.Context); }
-keepclassmembers class com.fsck.k9.service.MailService { void schedulePushers(); }
-keepclassmembers class com.fsck.k9.service.MailService { void setupPushers(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.james.mime4j.stream.RawFieldParser { void skipWhiteSpace(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor); }
-keepclassmembers class com.fsck.k9.service.MailService { void stopPushers(); }
-keepclassmembers class com.fsck.k9.service.MailService { void onCreate(); }
-keepclassmembers class com.fsck.k9.service.MailService { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { int[] extractStateSet(android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.service.MailService { void onDestroy(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109SpecFactory { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109SpecFactory { org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportResults { void <init>(boolean,java.util.List,java.util.List); }
-keepclassmembers class com.fsck.k9.service.MailService { int startService(android.content.Intent,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$23 { void <init>(com.fsck.k9.mailstore.LocalStore,java.util.List,boolean,java.util.Map); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportResults { void <init>(boolean,java.util.List,java.util.List,com.fsck.k9.preferences.SettingsImporter$1); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$23 { void doDbWork(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$23 { void getDataFromCursor(android.database.Cursor); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.StateListDrawable$StateListState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void clearMutated(); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings { java.util.Map convert(java.util.Map); }
-keepclassmembers class com.fsck.k9.service.BootReceiver { void <init>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.service.BootReceiver { android.app.PendingIntent buildPendingIntent(android.content.Context,android.content.Intent); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings { java.util.Map getIdentitySettings(com.fsck.k9.preferences.Storage,java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$23 { java.lang.String getListItem(int); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$23 { void postDbWork(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$23 { int getListSize(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources); }
-keepclassmembers class com.bumptech.glide.provider.EmptyDataLoadProvider { void <init>(); }
-keepclassmembers class com.bumptech.glide.provider.EmptyDataLoadProvider { com.bumptech.glide.provider.DataLoadProvider get(); }
-keepclassmembers class com.bumptech.glide.provider.EmptyDataLoadProvider { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState); }
-keepclassmembers class com.bumptech.glide.provider.EmptyDataLoadProvider { com.bumptech.glide.load.ResourceDecoder getCacheDecoder(); }
-keepclassmembers class com.bumptech.glide.provider.EmptyDataLoadProvider { com.bumptech.glide.load.ResourceDecoder getSourceDecoder(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class com.bumptech.glide.provider.EmptyDataLoadProvider { com.bumptech.glide.load.Encoder getSourceEncoder(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources,android.graphics.drawable.StateListDrawable$1); }
-keepclassmembers class com.bumptech.glide.provider.EmptyDataLoadProvider { com.bumptech.glide.load.ResourceEncoder getEncoder(); }
-keepclassmembers class com.fsck.k9.service.BootReceiver { void cancelIntent(android.content.Context,android.content.Intent); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings { boolean isEmailAddressValid(java.lang.String); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]); }
-keepclassmembers class android.graphics.drawable.StateListDrawable { void <clinit>(); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings { java.util.Set upgrade(int,java.util.Map); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings { java.util.Map validate(int,java.util.Map,boolean); }
-keepclassmembers class com.fsck.k9.service.BootReceiver { void purgeSchedule(android.content.Context); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$SavedState { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupNames { void <init>(); }
-keepclassmembers class android.view.KeyCharacterMap$KeyData { void <init>(); }
-keepclassmembers class com.fsck.k9.service.BootReceiver { void scheduleIntent(android.content.Context,long,android.content.Intent); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupNames { void access$000(com.fsck.k9.activity.setup.AccountSetupNames); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$SavedState { void <init>(android.os.Parcel,com.fsck.k9.ui.messageview.MessageContainerView$1); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupNames { void actionSetNames(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupNames { void validateFields(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.service.BootReceiver { java.lang.Integer receive(android.content.Context,android.content.Intent,java.lang.Integer); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupNames { void onClick(android.view.View); }
-keepclassmembers class android.view.GLES20Canvas$CanvasFinalizer { void <init>(long); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupNames { void onCreate(android.os.Bundle); }
-keepclassmembers class android.net.Uri$Part$EmptyPart { boolean isEmpty(); }
-keepclassmembers class android.net.Uri$Part$EmptyPart { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$1 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],com.android.internal.app.AlertController$RecycleListView); }
-keepclassmembers class com.fsck.k9.mail.filter.LineWrapOutputStream { void <clinit>(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetDecoder { void <init>(com.beetstra.jutf7.UTF7StyleCharset,com.beetstra.jutf7.Base64Util,boolean); }
-keepclassmembers class com.fsck.k9.mail.filter.LineWrapOutputStream { void <init>(java.io.OutputStream,int); }
-keepclassmembers class com.fsck.k9.mail.filter.LineWrapOutputStream { void flush(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void <clinit>(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetDecoder { boolean base64bitsWaiting(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupNames { void onNext(); }
-keepclassmembers class java.io.ObjectInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetDecoder { java.nio.charset.CoderResult handleBase64(java.nio.ByteBuffer,java.nio.CharBuffer,byte); }
-keepclassmembers class com.fsck.k9.mail.filter.LineWrapOutputStream { void write(int); }
-keepclassmembers class java.io.ObjectInputStream { void checkReadPrimitiveTypes(); }
-keepclassmembers class java.io.ObjectInputStream { int available(); }
-keepclassmembers class android.widget.SimpleCursorAdapter { void findColumns(android.database.Cursor,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$36 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.mail.Folder,boolean,long,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$1 { void <init>(com.fsck.k9.activity.ChooseFolder,android.content.Context,int); }
-keepclassmembers class java.io.ObjectInputStream { void defaultReadObject(); }
-keepclassmembers class java.io.ObjectInputStream { void close(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$36 { void run(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetDecoder { java.nio.charset.CoderResult malformed(java.nio.ByteBuffer); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$1 { android.widget.Filter getFilter(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetDecoder { java.nio.charset.CoderResult overflow(java.nio.ByteBuffer); }
-keepclassmembers class com.jcraft.jzlib.Deflate { boolean smaller(short[],int,int,byte[]); }
-keepclassmembers class java.io.ObjectInputStream { int nextHandle(); }
-keepclassmembers class java.io.ObjectInputStream { byte nextTC(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void _tr_align(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetDecoder { void setUnshifted(); }
-keepclassmembers class java.io.ObjectInputStream { void pushbackTC(); }
-keepclassmembers class java.io.ObjectInputStream { int read(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetDecoder { java.nio.charset.CoderResult decodeLoop(java.nio.ByteBuffer,java.nio.CharBuffer); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void _tr_flush_block(int,int,boolean); }
-keepclassmembers class java.io.ObjectInputStream { int read(byte[],int,int); }
-keepclassmembers class android.graphics.Typeface { void setDefault(android.graphics.Typeface); }
-keepclassmembers class android.graphics.Typeface { int getStyle(); }
-keepclassmembers class java.io.ObjectInputStream { byte[] readBlockData(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable { void <init>(com.bumptech.glide.load.engine.EngineRunnable$EngineRunnableManager,com.bumptech.glide.load.engine.DecodeJob,com.bumptech.glide.Priority); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable { com.bumptech.glide.load.engine.Resource decode(); }
-keepclassmembers class java.io.ObjectInputStream { byte[] readBlockDataLong(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentTypeFieldImpl$1 { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentTypeFieldImpl$1 { org.apache.james.mime4j.dom.field.ContentTypeField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class java.io.ObjectInputStream { boolean readBoolean(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(java.lang.String,int); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface create(android.graphics.Typeface,int); }
-keepclassmembers class org.apache.james.mime4j.field.ContentTypeFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class java.io.ObjectInputStream { void discardData(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable { com.bumptech.glide.load.engine.Resource decodeFromCache(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetDecoder { java.nio.charset.CoderResult implFlush(java.nio.CharBuffer); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void _tr_stored_block(int,int,boolean); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDesc(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable { com.bumptech.glide.load.engine.Resource decodeFromSource(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { boolean _tr_tally(int,int); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable { boolean isDecodingFromCache(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetDecoder { void implReset(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.StreamCorruptedException corruptStream(byte); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable { void onLoadFailed(java.lang.Exception); }
-keepclassmembers class org.apache.http.conn.params.ConnManagerParams$1 { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readContent(byte); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable { void onLoadComplete(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.HttpGeneric { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface defaultFromStyle(int); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable { void cancel(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable { int getPriority(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable { void run(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNonPrimitiveContent(boolean); }
-keepclassmembers class com.fsck.k9.K9$3 { void broadcastIntent(java.lang.String,com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamilies(android.graphics.FontFamily[]); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void bi_flush(); }
-keepclassmembers class com.fsck.k9.K9$3 { void <init>(com.fsck.k9.K9); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(); }
-keepclassmembers class android.graphics.Typeface { android.graphics.Typeface createFromFamiliesWithDefault(android.graphics.FontFamily[]); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(java.lang.Throwable,int); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void bi_windup(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Exception readException(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { int build_bl_tree(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readCyclicReference(); }
-keepclassmembers class java.io.ObjectInputStream { void readFieldDescriptors(java.io.ObjectStreamClass); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void compress_block(short[],short[]); }
-keepclassmembers class android.app.TaskStackBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.Typeface { void <init>(long); }
-keepclassmembers class android.graphics.Typeface { android.graphics.FontFamily makeFamilyFromParsed(android.graphics.FontListParser$Family); }
-keepclassmembers class android.app.TaskStackBuilder { android.app.TaskStackBuilder create(android.content.Context); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String formatClassSig(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException { void <init>(java.lang.String); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { int hashCode(); }
-keepclassmembers class android.graphics.Typeface { void init(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.HttpGeneric { void setMethod(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.HttpGeneric { java.lang.String getMethod(); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.K9$3 { void updateUnreadWidget(); }
-keepclassmembers class java.lang.NoSuchFieldError { void <init>(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void copy_block(int,int,boolean); }
-keepclassmembers class com.fsck.k9.K9$3 { void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void <init>(android.os.Parcel,boolean); }
-keepclassmembers class com.fsck.k9.K9$3 { void messageDeleted(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class com.jcraft.jzlib.Deflate { int deflate(com.jcraft.jzlib.ZStream,int); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1Impl { void computeHash(int[]); }
-keepclassmembers class com.fsck.k9.K9$3 { void synchronizeMailboxNewMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport { void sendMessage(com.fsck.k9.mail.Message); }
-keepclassmembers class android.os.StrictMode$ViolationInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.security.NoSuchAlgorithmException { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(); }
-keepclassmembers class com.fsck.k9.K9$3 { void synchronizeMailboxRemovedMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class java.security.SignatureException { void <init>(java.lang.String); }
-keepclassmembers class android.text.style.StrikethroughSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.security.SignatureException { void <init>(); }
-keepclassmembers class com.bumptech.glide.util.LruCache { void <init>(int); }
-keepclassmembers class android.os.PatternMatcher { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(); }
-keepclassmembers class android.widget.AbsoluteLayout$LayoutParams { void <init>(int,int,int,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator { com.android.okhttp.Request processAuthHeader(com.android.okhttp.OkAuthenticator,com.android.okhttp.Response,java.net.Proxy); }
-keepclassmembers class com.bumptech.glide.util.LruCache { void evict(); }
-keepclassmembers class android.os.PatternMatcher { java.lang.String toString(); }
-keepclassmembers class java.io.ObjectInputStream { void readFieldValues(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class com.bumptech.glide.util.LruCache { void clearMemory(); }
-keepclassmembers class com.bumptech.glide.util.LruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.app.TaskStackBuilder { void startActivities(android.os.Bundle); }
-keepclassmembers class com.bumptech.glide.util.LruCache { int getSize(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.util.LruCache { int getCurrentSize(); }
-keepclassmembers class com.bumptech.glide.util.LruCache { void onItemEvicted(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.PatternMatcher { void <init>(android.os.Parcel); }
-keepclassmembers class android.os.PatternMatcher { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.bumptech.glide.util.LruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.bumptech.glide.util.LruCache { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.widget.AbsoluteLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.Typeface { java.io.File getSystemFontConfigLocation(); }
-keepclassmembers class com.bumptech.glide.util.LruCache { void trimToSize(int); }
-keepclassmembers class android.graphics.Typeface { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.Typeface { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1Impl { void updateHash(int[],byte[],int,int); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromTypeface(long,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator { java.util.List parseChallenges(com.android.okhttp.Headers,java.lang.String); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateWeightAlias(long,int); }
-keepclassmembers class android.app.TaskStackBuilder { android.content.Intent[] getIntents(); }
-keepclassmembers class android.graphics.Typeface { int nativeGetStyle(long); }
-keepclassmembers class android.graphics.Typeface { long nativeCreateFromArray(long[]); }
-keepclassmembers class com.jcraft.jzlib.Deflate { int deflateEnd(); }
-keepclassmembers class android.graphics.Typeface { void nativeSetDefault(long); }
-keepclassmembers class android.graphics.Typeface { void <clinit>(); }
-keepclassmembers class java.security.InvalidParameterException { void <init>(java.lang.String); }
-keepclassmembers class java.security.cert.CertificateExpiredException { void <init>(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator { void <clinit>(); }
-keepclassmembers class java.security.InvalidParameterException { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapEncoder { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapEncoder { void <init>(android.graphics.Bitmap$CompressFormat,int); }
-keepclassmembers class com.jcraft.jzlib.Deflate { int deflateInit(com.jcraft.jzlib.ZStream,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapEncoder { android.graphics.Bitmap$CompressFormat getFormat(android.graphics.Bitmap); }
-keepclassmembers class com.jcraft.jzlib.Deflate { int deflateInit2(com.jcraft.jzlib.ZStream,int,int,int,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapEncoder { boolean encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream); }
-keepclassmembers class android.os.PatternMatcher { void <clinit>(); }
-keepclassmembers class java.io.ObjectInputStream { void readHierarchy(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.widget.FastScroller$6 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(android.view.View,int); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Integer get(android.view.View); }
-keepclassmembers class android.widget.TextView$1 { void <init>(android.widget.TextView,java.lang.CharSequence); }
-keepclassmembers class android.widget.FastScroller$6 { void setValue(java.lang.Object,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapEncoder { boolean encode(java.lang.Object,java.io.OutputStream); }
-keepclassmembers class android.widget.FastScroller$6 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { java.lang.String nextAT(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapEncoder { java.lang.String getId(); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { void <init>(javax.security.auth.x500.X500Principal); }
-keepclassmembers class java.io.ObjectInputStream { java.util.List cacheSuperclassesFor(java.lang.Class); }
-keepclassmembers class java.util.IdentityHashMap { void <init>(int); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplIceCreamSandwich { int getSideChannelBindFlags(); }
-keepclassmembers class java.util.IdentityHashMap { void <init>(); }
-keepclassmembers class java.util.IdentityHashMap { int computeElementArraySize(); }
-keepclassmembers class java.io.ObjectInputStream { int findStreamSuperclass(java.lang.Class,java.util.List,int); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object[] newElementArray(int); }
-keepclassmembers class java.io.ObjectInputStream { void readObjectNoData(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void <init>(android.content.Context,android.support.v4.app.NotificationManagerCompat); }
-keepclassmembers class java.util.IdentityHashMap { int getThreshold(int); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object massageValue(java.lang.Object); }
-keepclassmembers class com.android.okhttp.TunnelRequest { void <init>(java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { com.fsck.k9.notification.NotificationController newInstance(android.content.Context); }
-keepclassmembers class android.widget.NumberPicker { char[] access$800(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { int deflateReset(com.jcraft.jzlib.ZStream); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { boolean platformSupportsExtendedNotifications(); }
-keepclassmembers class android.widget.NumberPicker { java.lang.String[] access$900(android.widget.NumberPicker); }
-keepclassmembers class android.widget.NumberPicker { int access$1000(android.widget.NumberPicker,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$3 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { boolean platformSupportsLockScreenNotifications(); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void addNewMailNotification(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage,int); }
-keepclassmembers class android.widget.NumberPicker { int access$1100(android.widget.NumberPicker); }
-keepclassmembers class com.android.okhttp.TunnelRequest { java.lang.String requestLine(); }
-keepclassmembers class android.widget.NumberPicker { void access$1200(android.widget.NumberPicker,int,int); }
-keepclassmembers class java.io.ObjectInputStream { void readObjectForClass(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void clearAuthenticationErrorNotification(com.fsck.k9.Account,boolean); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void clearCertificateErrorNotifications(com.fsck.k9.Account,boolean); }
-keepclassmembers class com.android.okhttp.TunnelRequest { com.android.okhttp.Request getRequest(); }
-keepclassmembers class android.preference.DialogPreference { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.preference.DialogPreference { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void clearFetchingMailNotification(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void clearNewMailNotifications(com.fsck.k9.Account); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { java.util.Locale constructLocaleFromString(java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void clearSendFailedNotification(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void configureNotification(android.support.v4.app.NotificationCompat$Builder,java.lang.String,long[],java.lang.Integer,int,boolean); }
-keepclassmembers class com.bumptech.glide.load.model.GenericLoaderFactory { void <clinit>(); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void clearSendingNotification(com.fsck.k9.Account); }
-keepclassmembers class java.util.IdentityHashMap { int findIndex(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.preference.DialogPreference { void onActivityDestroy(); }
-keepclassmembers class com.bumptech.glide.load.model.GenericLoaderFactory { void <init>(android.content.Context); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { java.lang.String quotedAV(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { int deflate_fast(int); }
-keepclassmembers class java.util.IdentityHashMap { int getModuloHash(java.lang.Object,int); }
-keepclassmembers class com.bumptech.glide.load.model.GenericLoaderFactory { void cacheModelLoader(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class java.util.IdentityHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.io.ObjectInputStream { int readInt(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewArray(boolean); }
-keepclassmembers class android.view.inputmethod.ExtractedText { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { void ensureSharedTempPointerCapacity(int); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { android.support.v4.app.NotificationCompat$Builder createNotificationBuilder(); }
-keepclassmembers class com.bumptech.glide.load.model.GenericLoaderFactory { void cacheNullLoader(java.lang.Class,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { java.lang.String getAccountName(com.fsck.k9.Account); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi { void <init>(android.content.Context,org.openintents.openpgp.IOpenPgpService2); }
-keepclassmembers class com.bumptech.glide.load.model.GenericLoaderFactory { com.bumptech.glide.load.model.ModelLoader getCachedLoader(java.lang.Class,java.lang.Class); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { android.content.Context getContext(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi { void closeLoudly(android.os.ParcelFileDescriptor); }
-keepclassmembers class java.util.IdentityHashMap { void rehash(); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void removeNewMailNotification(com.fsck.k9.Account,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { android.support.v4.app.NotificationManagerCompat getNotificationManager(); }
-keepclassmembers class android.view.MotionEvent { long nativeInitialize(long,int,int,int,int,int,int,int,float,float,float,float,long,long,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[]); }
-keepclassmembers class java.util.IdentityHashMap { void computeMaxSize(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi { android.content.Intent executeApi(android.content.Intent,android.os.ParcelFileDescriptor,int); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void showAuthenticationErrorNotification(com.fsck.k9.Account,boolean); }
-keepclassmembers class com.bumptech.glide.load.model.GenericLoaderFactory { com.bumptech.glide.load.model.ModelLoaderFactory getFactory(java.lang.Class,java.lang.Class); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { java.lang.String hexAV(); }
-keepclassmembers class android.view.MotionEvent { long nativeCopy(long,long,boolean); }
-keepclassmembers class android.view.MotionEvent { int nativeGetDeviceId(long); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void showFetchingMailNotification(com.fsck.k9.Account,com.fsck.k9.mail.Folder); }
-keepclassmembers class android.view.MotionEvent { int nativeGetSource(long); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void showCertificateErrorNotification(com.fsck.k9.Account,boolean); }
-keepclassmembers class android.view.MotionEvent { void nativeAddBatch(long,long,android.view.MotionEvent$PointerCoords[],int); }
-keepclassmembers class android.view.MotionEvent { int nativeSetSource(long,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperLollipop { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void showSendFailedNotification(com.fsck.k9.Account,java.lang.Exception); }
-keepclassmembers class android.view.MotionEvent { int nativeGetAction(long); }
-keepclassmembers class android.view.MotionEvent { void nativeSetAction(long,int); }
-keepclassmembers class android.view.MotionEvent { boolean nativeIsTouchEvent(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetFlags(long); }
-keepclassmembers class android.view.MotionEvent { void nativeSetFlags(long,int); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi { void checkPermissionPing(org.openintents.openpgp.util.OpenPgpApi$PermissionPingCallback); }
-keepclassmembers class com.fsck.k9.notification.NotificationController { void showSendingNotification(com.fsck.k9.Account); }
-keepclassmembers class android.view.MotionEvent { int nativeGetEdgeFlags(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetButtonState(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetMetaState(long); }
-keepclassmembers class android.view.MotionEvent { void nativeOffsetLocation(long,float,float); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXOffset(long); }
-keepclassmembers class org.apache.http.impl.entity.LaxContentLengthStrategy { void <init>(); }
-keepclassmembers class android.view.MotionEvent { float nativeGetXPrecision(long); }
-keepclassmembers class org.apache.http.impl.entity.LaxContentLengthStrategy { long determineLength(org.apache.http.HttpMessage); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYOffset(long); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi { android.content.Intent executeApi(android.content.Intent,java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { java.lang.String getDefaultAlgorithm(); }
-keepclassmembers class android.view.MotionEvent { float nativeGetYPrecision(long); }
-keepclassmembers class android.view.MotionEvent { long nativeGetDownTimeNanos(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerCount(long); }
-keepclassmembers class android.view.MotionEvent { int nativeGetToolType(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeGetPointerId(long,int); }
-keepclassmembers class android.view.MotionEvent { int nativeFindPointerIndex(long,int); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { javax.net.ssl.TrustManagerFactory getInstance(java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class readNewClass(boolean); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype { void <clinit>(); }
-keepclassmembers class android.view.MotionEvent { int nativeGetHistorySize(long); }
-keepclassmembers class android.view.MotionEvent { long nativeGetEventTimeNanos(long,int); }
-keepclassmembers class android.view.MotionEvent { float nativeGetRawAxisValue(long,int,int,int); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readEnumDesc(); }
-keepclassmembers class android.util.PathParser$ExtractFloatResult { void <init>(android.util.PathParser$1); }
-keepclassmembers class com.bumptech.glide.load.model.GenericLoaderFactory { com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerCoords(long,int,int,android.view.MotionEvent$PointerCoords); }
-keepclassmembers class android.util.PathParser$ExtractFloatResult { void <init>(); }
-keepclassmembers class android.view.MotionEvent { void nativeGetPointerProperties(long,int,android.view.MotionEvent$PointerProperties); }
-keepclassmembers class android.view.MotionEvent { float nativeGetAxisValue(long,int,int,int); }
-keepclassmembers class android.view.MotionEvent { void nativeTransform(long,android.graphics.Matrix); }
-keepclassmembers class android.view.MotionEvent { java.lang.String nativeAxisToString(int); }
-keepclassmembers class android.view.MotionEvent { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readEnumDescInternal(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readEnum(boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { void <init>(com.android.okhttp.Request,com.android.okhttp.Response,com.android.okhttp.ResponseSource); }
-keepclassmembers class com.jcraft.jzlib.Deflate { int deflate_slow(int); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { boolean isCacheable(com.android.okhttp.Response,com.android.okhttp.Request); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void <init>(javax.net.ssl.TrustManagerFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi { android.content.Intent executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { java.lang.String escapedAV(); }
-keepclassmembers class com.bumptech.glide.load.model.GenericLoaderFactory { com.bumptech.glide.load.model.ModelLoaderFactory register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readNewClassDesc(boolean); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void init(java.security.KeyStore); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { com.android.okhttp.Response$Body access$000(); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { com.android.okhttp.internal.http.StatusLine access$100(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canApplyTheme(); }
-keepclassmembers class java.util.IdentityHashMap { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { void <init>(com.android.okhttp.Request,com.android.okhttp.Response,com.android.okhttp.ResponseSource,com.android.okhttp.internal.http.CacheStrategy$1); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { javax.net.ssl.TrustManager[] getTrustManagers(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class readNewProxyClassDesc(); }
-keepclassmembers class android.text.style.ScaleXSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.io.ObjectInputStream { java.io.ObjectStreamClass readClassDescriptor(); }
-keepclassmembers class javax.net.ssl.TrustManagerFactory { void <clinit>(); }
-keepclassmembers class android.widget.NumberPicker { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$10 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$7 { void <init>(com.fsck.k9.ui.crypto.MessageCryptoHelper); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getChangingConfigurations(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$10 { void messageRemoved(com.fsck.k9.mail.Message); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntry { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$7 { java.lang.Long getSizeForProgress(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveProxyClass(java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int getOpacity(); }
-keepclassmembers class java.util.LinkedHashMap$LinkedEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry,java.util.LinkedHashMap$LinkedEntry,java.util.LinkedHashMap$LinkedEntry); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi { org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult executeApi(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean isStateful(); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(); }
-keepclassmembers class java.io.ObjectInputStream { int readNewHandle(); }
-keepclassmembers class android.text.style.SpellCheckSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.os.HandlerThread { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean canConstantState(); }
-keepclassmembers class android.os.HandlerThread { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewObject(boolean); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$7 { void writeTo(java.io.OutputStream); }
-keepclassmembers class android.text.style.SpellCheckSpan { void setSpellCheckInProgress(boolean); }
-keepclassmembers class android.text.style.SpellCheckSpan { boolean isSpellCheckInProgress(); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { char getEscaped(); }
-keepclassmembers class android.os.HandlerThread { android.os.Looper getLooper(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { void invalidateCache(); }
-keepclassmembers class android.text.style.SpellCheckSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamResourceLoader$Factory { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { char getUTF8(); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamResourceLoader$Factory { com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$002(android.graphics.drawable.LayerDrawable$LayerState,boolean); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { boolean access$000(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$102(android.graphics.drawable.LayerDrawable$LayerState,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.RotateLoadingLayout { void <init>(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation,android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$LayerState { int access$100(android.graphics.drawable.LayerDrawable$LayerState); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamResourceLoader$Factory { void teardown(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$UnreadExtractor { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$UnreadExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class java.io.ObjectInputStream { java.io.InvalidClassException missingClassDescriptor(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$UnreadExtractor { java.lang.Boolean getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class com.github.amlcurran.showcaseview.targets.ViewTarget { void <init>(int,android.app.Activity); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewString(boolean); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.IndicatorLayout$1 { void <clinit>(); }
-keepclassmembers class com.github.amlcurran.showcaseview.targets.ViewTarget { android.graphics.Point getPoint(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readNewLongString(boolean); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { int getByte(int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool$1 { void <init>(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter,int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObject(boolean); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readUnshared(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(long,long,int,float,float,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.RotateLoadingLayout { void resetImageRotation(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { int deflate_stored(int); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.RotateLoadingLayout { int getDefaultDrawableResId(); }
-keepclassmembers class java.net.NetworkInterface { void <init>(java.lang.String,int,java.util.List,java.util.List); }
-keepclassmembers class com.android.okhttp.internal.tls.DistinguishedNameParser { java.lang.String findMostSpecific(java.lang.String); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.RotateLoadingLayout { void onLoadingDrawableSet(android.graphics.drawable.Drawable); }
-keepclassmembers class java.net.NetworkInterface { int getIndex(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtain(android.view.MotionEvent); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi { android.os.AsyncTask executeApiAsync(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent obtainNoHistory(android.view.MotionEvent); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.RotateLoadingLayout { void onPullImpl(float); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent copy(); }
-keepclassmembers class android.view.MotionEvent { void recycle(); }
-keepclassmembers class java.net.NetworkInterface { java.net.NetworkInterface getByNameInternal(java.lang.String,java.lang.String[]); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object readObjectOverride(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.RotateLoadingLayout { void pullToRefreshImpl(); }
-keepclassmembers class android.app.ISearchManager$Stub { android.app.ISearchManager asInterface(android.os.IBinder); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void fill_window(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.RotateLoadingLayout { void refreshingImpl(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi { org.openintents.openpgp.util.OpenPgpApi$CancelableBackgroundOperation executeApiAsync(android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback); }
-keepclassmembers class java.io.ObjectInputStream { void readStreamHeader(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.RotateLoadingLayout { void releaseToRefreshImpl(); }
-keepclassmembers class android.view.MotionEvent { int getDeviceId(); }
-keepclassmembers class android.view.MotionEvent { int getSource(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.RotateLoadingLayout { void resetImpl(); }
-keepclassmembers class android.view.MotionEvent { void setSource(int); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.graphics.drawable.TransitionDrawable,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.net.NetworkInterface { java.lang.String[] readIfInet6Lines(); }
-keepclassmembers class android.view.MotionEvent { int getAction(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String readUTF(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object registeredObjectRead(int); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.net.NetworkInterface { void collectIpv6Addresses(java.lang.String,int,java.util.List,java.util.List,java.lang.String[]); }
-keepclassmembers class android.view.MotionEvent { int getActionIndex(); }
-keepclassmembers class android.view.MotionEvent { int getActionMasked(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable$TransitionState { int getChangingConfigurations(); }
-keepclassmembers class android.view.MotionEvent { int getFlags(); }
-keepclassmembers class android.view.MotionEvent { boolean isTouchEvent(); }
-keepclassmembers class android.view.MotionEvent { boolean isTainted(); }
-keepclassmembers class java.io.ObjectInputStream { void registerObjectRead(java.lang.Object,int,boolean); }
-keepclassmembers class android.view.MotionEvent { void setTainted(boolean); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi { void executeApiAsync(android.content.Intent,java.io.InputStream,java.io.OutputStream,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback); }
-keepclassmembers class android.view.MotionEvent { boolean isTargetAccessibilityFocus(); }
-keepclassmembers class android.view.MotionEvent { void setTargetAccessibilityFocus(boolean); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache$1 { void <init>(com.bumptech.glide.load.model.ModelCache,int); }
-keepclassmembers class android.view.MotionEvent { long getDownTime(); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache$1 { void onItemEvicted(com.bumptech.glide.load.model.ModelCache$ModelKey,java.lang.Object); }
-keepclassmembers class android.view.MotionEvent { long getEventTime(); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void <init>(); }
-keepclassmembers class android.view.MotionEvent { float getX(); }
-keepclassmembers class com.handmark.pulltorefresh.library.LoadingLayoutProxy { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache$1 { void onItemEvicted(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.MotionEvent { long getEventTimeNano(); }
-keepclassmembers class com.handmark.pulltorefresh.library.LoadingLayoutProxy { void addLayout(com.handmark.pulltorefresh.library.internal.LoadingLayout); }
-keepclassmembers class java.net.URI { void <init>(); }
-keepclassmembers class android.view.MotionEvent { float getY(); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String); }
-keepclassmembers class java.net.NetworkInterface { void collectIpv4Address(java.lang.String,java.util.List,java.util.List); }
-keepclassmembers class java.io.ObjectInputStream { void resetSeenObjects(); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { int getBitmapId(android.graphics.Bitmap); }
-keepclassmembers class java.io.ObjectInputStream { void resetState(); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { android.graphics.Bitmap getBitmapForId(int); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.Object resolveObject(java.lang.Object); }
-keepclassmembers class com.handmark.pulltorefresh.library.LoadingLayoutProxy { void setPullLabel(java.lang.CharSequence); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void writeBitmapsToParcel(android.os.Parcel,int); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void flush_block_only(boolean); }
-keepclassmembers class com.handmark.pulltorefresh.library.LoadingLayoutProxy { void setReleaseLabel(java.lang.CharSequence); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.MotionEvent { float getAxisValue(int); }
-keepclassmembers class java.io.ObjectInputStream { void verifyAndInit(java.io.ObjectStreamClass); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void init_block(); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void assimilate(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewExtractionException { void <init>(java.lang.String); }
-keepclassmembers class android.view.MotionEvent { int getToolType(int); }
-keepclassmembers class com.bumptech.glide.DrawableTypeRequest { void <init>(java.lang.Class,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.RequestManager$OptionsApplier); }
-keepclassmembers class android.view.MotionEvent { int getPointerCount(); }
-keepclassmembers class android.widget.RemoteViews$BitmapCache { void addBitmapMemory(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class android.view.MotionEvent { int getPointerId(int); }
-keepclassmembers class android.view.MotionEvent { int findPointerIndex(int); }
-keepclassmembers class android.view.MotionEvent { float getX(int); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void <init>(com.android.okhttp.Response); }
-keepclassmembers class android.view.MotionEvent { float getY(int); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { void setDefaultUserDirectory(java.io.File); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void lm_init(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference$2 { void <init>(org.openintents.openpgp.util.OpenPgpAppPreference); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void connect(); }
-keepclassmembers class java.io.ObjectInputStream { java.lang.String getBaseName(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { void <init>(java.io.File,java.io.File,java.io.File); }
-keepclassmembers class java.net.NetworkInterface { int readIntFile(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void disconnect(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void addRequestProperty(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.ObjectInputStream { void checkedSetSuperClassDesc(java.io.ObjectStreamClass,java.io.ObjectStreamClass); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.bumptech.glide.DrawableTypeRequest { com.bumptech.glide.provider.FixedLoadProvider buildProvider(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder); }
-keepclassmembers class java.net.NetworkInterface { java.net.SocketException rethrowAsSocketException(java.lang.Exception); }
-keepclassmembers class java.io.ObjectInputStream { void <clinit>(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { int findIdentity(com.fsck.k9.preferences.SettingsImporter$ImportedIdentity,java.util.List); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedServer { void <init>(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedServer { void <init>(com.fsck.k9.preferences.SettingsImporter$1); }
-keepclassmembers class java.net.NetworkInterface { java.net.NetworkInterface getByInetAddress(java.net.InetAddress); }
-keepclassmembers class com.jcraft.jzlib.Deflate { int longest_match(int); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void <init>(android.content.Context); }
-keepclassmembers class org.apache.james.mime4j.field.address.BaseNode { void <init>(); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void apply(com.android.internal.app.AlertController); }
-keepclassmembers class java.net.URI { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.MotionEvent { int getMetaState(); }
-keepclassmembers class com.jcraft.jzlib.ZStream { void <init>(); }
-keepclassmembers class com.jcraft.jzlib.ZStream { int deflate(int); }
-keepclassmembers class android.view.MotionEvent { int getButtonState(); }
-keepclassmembers class android.view.MotionEvent { float getRawX(); }
-keepclassmembers class com.jcraft.jzlib.ZStream { int deflateEnd(); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { boolean isTombstone(java.io.File); }
-keepclassmembers class android.view.MotionEvent { float getRawY(); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { java.security.cert.X509Certificate readCertificate(java.io.File); }
-keepclassmembers class com.jcraft.jzlib.ZStream { int deflateInit(int,int,boolean); }
-keepclassmembers class android.view.MotionEvent { int getHistorySize(); }
-keepclassmembers class com.jcraft.jzlib.ZStream { int deflateInit(int,boolean); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { java.lang.String getHeaderField(java.lang.String); }
-keepclassmembers class java.net.NetworkInterface { java.util.List getNetworkInterfacesList(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { com.fsck.k9.preferences.SettingsImporter$ImportContents getImportStreamContents(java.io.InputStream); }
-keepclassmembers class java.net.NetworkInterface { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { java.lang.String getText(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class java.net.URI { void parseURI(java.lang.String,boolean); }
-keepclassmembers class com.jcraft.jzlib.ZStream { void flush_pending(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair importAccount(android.content.Context,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$4 { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { int getResponseCode(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { java.lang.String getResponseMessage(); }
-keepclassmembers class java.net.NetworkInterface { int hashCode(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams { void createListView(com.android.internal.app.AlertController); }
-keepclassmembers class java.net.NetworkInterface { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.activity.compose.IdentityAdapter { void <init>(android.content.Context); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void setConnectTimeout(int); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void setReadTimeout(int); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { boolean isDeletedSystemCertificate(java.security.cert.X509Certificate); }
-keepclassmembers class com.fsck.k9.activity.compose.IdentityAdapter { java.lang.Object getItem(int); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void setDoInput(boolean); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void setDoOutput(boolean); }
-keepclassmembers class java.net.URI { void parseAuthority(boolean); }
-keepclassmembers class java.net.URI { java.lang.String validateScheme(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { boolean getUseCaches(); }
-keepclassmembers class com.jcraft.jzlib.ZStream { void free(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection { void setUseCaches(boolean); }
-keepclassmembers class com.jcraft.jzlib.ZStream { int inflate(int); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void pqdownheap(short[],int); }
-keepclassmembers class com.jcraft.jzlib.ZStream { int inflateEnd(); }
-keepclassmembers class java.net.NetworkInterface { void <clinit>(); }
-keepclassmembers class java.net.URI { void validateUserInfo(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(java.lang.String,java.lang.String,long,long,long,int,int,int,byte[],int,long,long); }
-keepclassmembers class android.view.MotionEvent { void setAction(int); }
-keepclassmembers class android.view.MotionEvent { void offsetLocation(float,float); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void putShortMSB(int); }
-keepclassmembers class android.view.MotionEvent { int getEdgeFlags(); }
-keepclassmembers class com.jcraft.jzlib.ZStream { int read_buf(byte[],int,int); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void put_byte(byte); }
-keepclassmembers class java.util.Collections$SingletonSet { void <init>(java.lang.Object); }
-keepclassmembers class java.net.URI { boolean isValidHost(boolean,java.lang.String); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void put_byte(byte[],int,int); }
-keepclassmembers class java.util.Collections$SingletonSet { boolean contains(java.lang.Object); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void put_short(int); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections$SingletonSet { java.util.Iterator iterator(); }
-keepclassmembers class android.view.MotionEvent { void transform(android.graphics.Matrix); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void scan_tree(short[],int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$17 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$17 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class java.util.zip.ZipEntry { java.lang.String getName(); }
-keepclassmembers class com.bumptech.glide.load.data.ByteArrayFetcher { void <init>(byte[],java.lang.String); }
-keepclassmembers class java.util.zip.ZipEntry { long getSize(); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate); }
-keepclassmembers class com.bumptech.glide.load.data.ByteArrayFetcher { void cancel(); }
-keepclassmembers class com.bumptech.glide.load.data.ByteArrayFetcher { java.lang.String getId(); }
-keepclassmembers class com.bumptech.glide.load.data.ByteArrayFetcher { void cleanup(); }
-keepclassmembers class java.net.URI { boolean isValidDomainName(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void <init>(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.data.ByteArrayFetcher { java.lang.Object loadData(com.bumptech.glide.Priority); }
-keepclassmembers class com.bumptech.glide.load.data.ByteArrayFetcher { java.io.InputStream loadData(com.bumptech.glide.Priority); }
-keepclassmembers class com.fsck.k9.ui.messageview.LockedAttachmentView { void <init>(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class com.fsck.k9.ui.messageview.LockedAttachmentView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.net.URI { int compareTo(java.net.URI); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { java.lang.String access$000(org.apache.harmony.security.x509.PolicyInformation); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyInformation { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.LockedAttachmentView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.LockedAttachmentView { void showUnlockedView(); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { java.security.cert.X509Certificate findIssuer(java.security.cert.X509Certificate); }
-keepclassmembers class java.util.TreeMap$Bound$1 { void <init>(java.lang.String,int); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void send_all_trees(int,int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.LockedAttachmentView { void onFinishInflate(); }
-keepclassmembers class com.fsck.k9.ui.messageview.LockedAttachmentView { void onClick(android.view.View); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { boolean isSelfIssuedCertificate(com.android.org.conscrypt.OpenSSLX509Certificate); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { com.android.org.conscrypt.OpenSSLX509Certificate convertToOpenSSLIfNeeded(java.security.cert.X509Certificate); }
-keepclassmembers class org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy { long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy { void <init>(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void send_bits(int,int); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { java.util.List getCertificateChain(java.security.cert.X509Certificate); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <init>(java.util.List,byte[]); }
-keepclassmembers class java.util.Collections$UnmodifiableSet { void <init>(java.util.Set); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { org.apache.harmony.security.x509.InfoAccessSyntax decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { java.lang.String toString(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void send_code(int,short[]); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { java.lang.Object findCert(java.io.File,javax.security.auth.x500.X500Principal,com.android.org.conscrypt.TrustedCertificateStore$CertSelector,java.lang.Class); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void send_tree(short[],int); }
-keepclassmembers class org.apache.http.client.protocol.RequestDefaultHeaders { void <init>(); }
-keepclassmembers class java.util.zip.ZipEntry { java.lang.String toString(); }
-keepclassmembers class java.util.Collections$UnmodifiableSet { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(java.util.zip.ZipEntry); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter); }
-keepclassmembers class java.net.URI { java.net.URI create(java.lang.String); }
-keepclassmembers class java.net.URI { java.net.URI duplicate(); }
-keepclassmembers class com.android.internal.app.AlertController$6 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.InfoAccessSyntax$1); }
-keepclassmembers class android.view.MotionEvent { int getPointerIdBits(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getHeadersCount(); }
-keepclassmembers class org.apache.http.client.protocol.RequestDefaultHeaders { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax { void <clinit>(); }
-keepclassmembers class java.net.URI { java.lang.String convertHexToLowerCase(java.lang.String); }
-keepclassmembers class android.view.View$BaseSavedState$1 { void <init>(); }
-keepclassmembers class android.view.MotionEvent { android.view.MotionEvent split(int); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { java.lang.String hash(javax.security.auth.x500.X500Principal); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getFootersCount(); }
-keepclassmembers class java.net.URI { boolean escapedEquals(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.zip.ZipEntry { int hashCode(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEmpty(); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void set_data_type(); }
-keepclassmembers class java.util.zip.ZipEntry { void <init>(byte[],java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { java.io.File file(java.io.File,java.lang.String,int); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllListInfosSelectable(java.util.ArrayList); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View); }
-keepclassmembers class com.jcraft.jzlib.Deflate { void tr_init(); }
-keepclassmembers class android.view.MotionEvent$1 { void <init>(); }
-keepclassmembers class java.net.URI { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View$CheckForTap { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void <init>(int,int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$6 { void <init>(com.fsck.k9.mailstore.LocalFolder,java.lang.String,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$6 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getCount(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int size(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$6 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean isEnabled(int); }
-keepclassmembers class libcore.util.BasicLruCache { void <init>(int); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { boolean checkTag(int); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$2 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { void access$000(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class java.util.zip.ZipEntry { boolean containsNulByte(byte[]); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.io.ObjectStreamClass$2 { int compare(java.lang.reflect.Field,java.lang.reflect.Field); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { void access$100(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class android.widget.HeaderViewListAdapter { java.lang.Object getItem(int); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { android.preference.CheckBoxPreference access$200(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { com.fsck.k9.preferences.TimePickerPreference access$300(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class java.util.zip.ZipEntry { void validateStringLength(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.URI { java.lang.String getScheme(); }
-keepclassmembers class java.io.ObjectStreamClass$2 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { com.fsck.k9.preferences.TimePickerPreference access$400(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { android.preference.Preference access$500(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class java.net.URI { java.lang.String getRawSchemeSpecificPart(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { long getItemId(int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.graphics.drawable.LevelListDrawable,android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { void actionPrefs(android.content.Context); }
-keepclassmembers class android.widget.HeaderViewListAdapter { boolean hasStableIds(); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { void onChooseContactNameColor(); }
-keepclassmembers class java.net.URI { java.lang.String getUserInfo(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class libcore.util.BasicLruCache { void trimToSize(int); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { void onFontSizeSettings(); }
-keepclassmembers class java.net.URI { java.lang.String getHost(); }
-keepclassmembers class java.net.URI { int getPort(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean isEmpty(); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { void saveSettings(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { void importFolder(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedFolder,boolean,com.fsck.k9.Preferences); }
-keepclassmembers class libcore.util.BasicLruCache { void entryEvicted(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Constructed { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.net.URI { int getEffectivePort(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.util.Iterator iterator(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void mutate(); }
-keepclassmembers class libcore.util.BasicLruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getItemViewType(int); }
-keepclassmembers class java.net.URI { java.lang.String getPath(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void addLevel(int,int,android.graphics.drawable.Drawable); }
-keepclassmembers class java.net.URI { java.lang.String getRawPath(); }
-keepclassmembers class java.net.URI { java.lang.String getQuery(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { int getViewTypeCount(); }
-keepclassmembers class java.net.URI { java.lang.String getRawQuery(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class java.net.URI { java.lang.String getFragment(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { int indexOfLevel(int); }
-keepclassmembers class java.net.URI { java.lang.String getRawFragment(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class java.net.URI { int hashCode(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class java.net.CookieHandler { java.net.CookieHandler getDefault(); }
-keepclassmembers class java.net.URI { boolean isAbsolute(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { android.widget.ListAdapter getWrappedAdapter(); }
-keepclassmembers class android.widget.HeaderViewListAdapter { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.net.URI { java.lang.String normalize(java.lang.String,boolean); }
-keepclassmembers class java.io.StringReader { void <init>(java.lang.String); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(int,int,float,float); }
-keepclassmembers class java.io.StringReader { void close(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$1 { void <clinit>(); }
-keepclassmembers class java.io.StringReader { boolean isClosed(); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void growArray(int,int); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean isScalingRequired(); }
-keepclassmembers class android.app.Notification$Builder { void <init>(android.content.Context); }
-keepclassmembers class android.view.MotionEvent { java.lang.String actionToString(int); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getDefaultPageSize(); }
-keepclassmembers class java.io.StringReader { void checkNotClosed(); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean supportsScreen(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable$LevelListState { void access$000(android.graphics.drawable.LevelListDrawable$LevelListState); }
-keepclassmembers class java.io.StringReader { int read(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.util.Collections$SingletonSet$1 { void <init>(java.util.Collections$SingletonSet); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { java.lang.String getDefaultJournalMode(); }
-keepclassmembers class java.io.StringReader { int read(char[],int,int); }
-keepclassmembers class java.util.Collections$SingletonSet$1 { boolean hasNext(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getJournalSizeLimit(); }
-keepclassmembers class java.util.Collections$SingletonSet$1 { java.lang.Object next(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { java.lang.String getDefaultSyncMode(); }
-keepclassmembers class java.net.URI { java.net.URI resolve(java.net.URI); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { java.lang.String getWALSyncMode(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String axisToString(int); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { void importGlobalSettings(com.fsck.k9.preferences.Storage,com.fsck.k9.preferences.StorageEditor,int,com.fsck.k9.preferences.SettingsImporter$ImportedSettings); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToDisplayMetrics(android.util.DisplayMetrics); }
-keepclassmembers class java.io.StringReader { boolean ready(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getWALAutoCheckpoint(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { int getWALConnectionPoolSize(); }
-keepclassmembers class com.fsck.k9.activity.setup.FontSizeSettings { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteGlobal { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.FontSizeSettings { int access$000(com.fsck.k9.activity.setup.FontSizeSettings,float); }
-keepclassmembers class com.fsck.k9.activity.setup.FontSizeSettings { void actionEditSettings(android.content.Context); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { void <init>(android.util.PathParser$PathDataNode[]); }
-keepclassmembers class java.net.URI { void setSchemeSpecificPart(); }
-keepclassmembers class android.view.MotionEvent { java.lang.String buttonStateToString(int); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { android.util.PathParser$PathDataNode[] evaluate(float,android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[]); }
-keepclassmembers class com.fsck.k9.activity.setup.FontSizeSettings { void saveSettings(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setWhen(long); }
-keepclassmembers class android.database.DefaultDatabaseErrorHandler { void <init>(); }
-keepclassmembers class android.database.DefaultDatabaseErrorHandler { void onCorruption(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.content.res.CompatibilityInfo { void applyToConfiguration(int,android.content.res.Configuration); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setShowWhen(boolean); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { void importIdentities(com.fsck.k9.preferences.StorageEditor,int,java.lang.String,com.fsck.k9.preferences.SettingsImporter$ImportedAccount,boolean,com.fsck.k9.Account,com.fsck.k9.Preferences); }
-keepclassmembers class com.fsck.k9.activity.FolderList$4 { boolean onClose(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$4 { void <init>(com.fsck.k9.activity.FolderList); }
-keepclassmembers class java.net.URI { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSmallIcon(int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean add(java.lang.Object); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setUsesChronometer(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSmallIcon(int,int); }
-keepclassmembers class java.net.URI { java.lang.String toASCIIString(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentText(java.lang.CharSequence); }
-keepclassmembers class android.view.MotionEvent { java.lang.String toolTypeToString(int); }
-keepclassmembers class android.view.MotionEvent { boolean isButtonPressed(int); }
-keepclassmembers class android.content.res.CompatibilityInfo { float computeCompatibleScaling(android.util.DisplayMetrics,android.util.DisplayMetrics); }
-keepclassmembers class java.net.URI { java.lang.String toString(); }
-keepclassmembers class android.animation.AnimatorInflater$PathDataEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.FontSizeSettings { int scaleToInt(float); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSubText(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setNumber(int); }
-keepclassmembers class com.fsck.k9.activity.setup.FontSizeSettings { float scaleFromInt(int); }
-keepclassmembers class com.fsck.k9.activity.setup.FontSizeSettings { void onBackPressed(); }
-keepclassmembers class java.net.URI { java.lang.String getHashString(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentInfo(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { java.lang.String themeIdToName(com.fsck.k9.K9$Theme); }
-keepclassmembers class com.fsck.k9.activity.setup.FontSizeSettings { void onCreate(android.os.Bundle); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setProgress(int,int,boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContent(android.widget.RemoteViews); }
-keepclassmembers class android.view.MotionEvent { android.view.InputEvent copy(); }
-keepclassmembers class android.view.MotionEvent { void <clinit>(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setContentIntent(android.app.PendingIntent); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { com.fsck.k9.K9$Theme themeNameToId(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setFullScreenIntent(android.app.PendingIntent,boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setDeleteIntent(android.app.PendingIntent); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setTicker(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.database.DefaultDatabaseErrorHandler { void deleteDatabaseFile(java.lang.String); }
-keepclassmembers class java.net.URI { java.net.URL toURL(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setLargeIcon(android.graphics.Bitmap); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSound(android.net.Uri,int); }
-keepclassmembers class java.math.BigInt { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { void onCreate(android.os.Bundle); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setVibrate(long[]); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setLights(int,int,int); }
-keepclassmembers class android.content.res.CompatibilityInfo { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.URI { int compareTo(java.lang.Object); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setOngoing(boolean); }
-keepclassmembers class java.net.URI { void <clinit>(); }
-keepclassmembers class java.math.BigInt { long getNativeBIGNUM(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setOnlyAlertOnce(boolean); }
-keepclassmembers class java.math.BigInt { void makeValid(); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setAutoCancel(boolean); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setLocalOnly(boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setDefaults(int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.math.BigInt { int cmp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setPriority(int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt newBigInt(); }
-keepclassmembers class android.widget.ImageButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.math.BigInt { void putCopy(java.math.BigInt); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setCategory(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean addIfAbsent(java.lang.Object); }
-keepclassmembers class android.widget.ImageButton { boolean onSetAlpha(int); }
-keepclassmembers class java.math.BigInt { java.math.BigInt copy(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder addPerson(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void clearMutated(); }
-keepclassmembers class android.widget.ImageButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.math.BigInt { void putLongInt(long); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.math.BigInt { void putULongInt(long,boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setGroupSummary(boolean); }
-keepclassmembers class java.math.BigInt { java.lang.NumberFormatException invalidBigInteger(java.lang.String); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { java.lang.Object remove(int); }
-keepclassmembers class android.widget.ImageButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setGroup(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColor(int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { void <init>(org.apache.http.HttpEntity,org.apache.http.conn.ManagedClientConnection,boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setSortKey(java.lang.String); }
-keepclassmembers class java.math.BigInt { void putDecString(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getAlpha(); }
-keepclassmembers class java.math.BigInt { void putHexString(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setExtras(android.os.Bundle); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { boolean isRepeatable(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setAlpha(int); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { java.io.InputStream getContent(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class java.util.Hashtable$HashIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { void consumeContent(); }
-keepclassmembers class java.math.BigInt { java.lang.String checkString(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <init>(android.content.res.CompatibilityInfo$1); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setStyle(android.app.Notification$Style); }
-keepclassmembers class java.util.Hashtable$HashIterator { boolean hasNext(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder addAction(android.app.Notification$Action); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class com.fsck.k9.ui.dialog.ApgDeprecationWarningDialog { void <init>(android.content.Context); }
-keepclassmembers class android.content.res.CompatibilityInfo { void <clinit>(); }
-keepclassmembers class java.util.Hashtable$HashIterator { java.util.Hashtable$HashtableEntry nextEntry(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setVisibility(int); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider { void <init>(com.bumptech.glide.load.engine.cache.DiskCache$Factory); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setPublicVersion(android.app.Notification); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { boolean eofDetected(java.io.InputStream); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean isStateful(); }
-keepclassmembers class android.app.Notification$Builder { void setFlag(int,boolean); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider { com.bumptech.glide.load.engine.cache.DiskCache getDiskCache(); }
-keepclassmembers class org.apache.http.NoHttpResponseException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { int getOpacity(); }
-keepclassmembers class com.fsck.k9.ui.dialog.ApgDeprecationWarningDialog { void makeTextViewLinksClickable(android.widget.TextView); }
-keepclassmembers class java.math.BigInt { java.lang.String toAscii(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.MessageInfoHolder { void <init>(); }
-keepclassmembers class java.util.Hashtable$HashIterator { java.util.Hashtable$HashtableEntry nextEntryNotFailFast(); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { boolean streamClosed(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.activity.MessageInfoHolder { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification$Builder setColor(int); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.drawable.Drawable getProfileBadgeDrawable(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void getOutline(android.graphics.Outline); }
-keepclassmembers class com.fsck.k9.activity.MessageInfoHolder { int hashCode(); }
-keepclassmembers class android.transition.TransitionInflater { void <init>(android.content.Context); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.Bitmap getProfileBadge(); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { boolean streamAbort(java.io.InputStream); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.math.BigInt { void putBigEndian(byte[],boolean); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.TransitionInflater from(android.content.Context); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { void <init>(org.htmlcleaner.HtmlCleaner); }
-keepclassmembers class org.apache.http.conn.BasicManagedEntity { void releaseManagedConnection(); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.Transition inflateTransition(int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { void removeRange(int,int); }
-keepclassmembers class java.math.BigInt { void putLittleEndianInts(int[],boolean); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { boolean access$1100(org.htmlcleaner.HtmlCleaner$OpenTags); }
-keepclassmembers class android.app.Notification$Builder { boolean addProfileBadge(android.widget.RemoteViews,int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { boolean access$1200(org.htmlcleaner.HtmlCleaner$OpenTags,java.util.Set); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { boolean access$1300(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String); }
-keepclassmembers class java.math.BigInt { void putBigEndianTwosComplement(byte[]); }
-keepclassmembers class java.math.BigInt { long longInt(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { void access$1400(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.math.BigInt { java.lang.String decString(); }
-keepclassmembers class java.lang.Float { void <init>(double); }
-keepclassmembers class java.lang.Float { void <init>(float); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { void access$1500(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String); }
-keepclassmembers class java.lang.Float { void <init>(java.lang.String); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { org.htmlcleaner.HtmlCleaner$TagPos access$1600(org.htmlcleaner.HtmlCleaner$OpenTags); }
-keepclassmembers class java.math.BigInt { int[] littleEndianIntsMagnitude(); }
-keepclassmembers class java.math.BigInt { int sign(); }
-keepclassmembers class android.app.Notification$Builder { void shrinkLine3Text(android.widget.RemoteViews); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Float); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { boolean access$500(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.app.Notification$Builder { void unshrinkLine3Text(android.widget.RemoteViews); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler$3 { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.Float { double doubleValue(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { org.htmlcleaner.HtmlCleaner$TagPos access$600(org.htmlcleaner.HtmlCleaner$OpenTags,java.lang.String); }
-keepclassmembers class java.math.BigInt { void setSign(int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList { int indexOf(java.lang.Object,java.lang.Object[],int,int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { java.util.List access$700(org.htmlcleaner.HtmlCleaner$OpenTags); }
-keepclassmembers class java.math.BigInt { int bitLength(); }
-keepclassmembers class java.math.BigInt { boolean twosCompFitsIntoBytes(int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { org.htmlcleaner.HtmlCleaner$TagPos access$800(org.htmlcleaner.HtmlCleaner$OpenTags); }
-keepclassmembers class java.math.BigInt { boolean isBitSet(int); }
-keepclassmembers class java.lang.Float { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.Notification$Builder { void resetStandardTemplate(android.widget.RemoteViews); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { org.htmlcleaner.HtmlCleaner$TagPos access$900(org.htmlcleaner.HtmlCleaner$OpenTags); }
-keepclassmembers class java.lang.Float { int floatToIntBits(float); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt shift(java.math.BigInt,int); }
-keepclassmembers class android.transition.TransitionInflater { android.transition.Transition createTransitionFromXml(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { void addTag(java.lang.String,int); }
-keepclassmembers class java.lang.Float { float floatValue(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState); }
-keepclassmembers class java.lang.Float { int floatToRawIntBits(float); }
-keepclassmembers class org.apache.http.impl.EnglishReasonPhraseCatalog { void <init>(); }
-keepclassmembers class java.math.BigInt { void shift(int); }
-keepclassmembers class java.lang.Float { int hashCode(); }
-keepclassmembers class java.lang.Float { float intBitsToFloat(int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { org.htmlcleaner.HtmlCleaner$TagPos findFirstTagPos(); }
-keepclassmembers class java.math.BigInt { void multiplyByPositiveInt(int); }
-keepclassmembers class java.lang.Float { int intValue(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable { void <init>(android.graphics.drawable.ColorDrawable$ColorState,android.graphics.drawable.ColorDrawable$1); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews applyStandardTemplate(int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { org.htmlcleaner.HtmlCleaner$TagPos findTag(java.lang.String); }
-keepclassmembers class java.lang.Float { boolean isInfinite(float); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews applyStandardTemplate(int,boolean); }
-keepclassmembers class android.widget.FastScroller$1 { void <init>(android.widget.FastScroller); }
-keepclassmembers class java.math.BigInt { java.math.BigInt addition(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class com.fsck.k9.activity.EditIdentity { void <init>(); }
-keepclassmembers class java.lang.Float { long longValue(); }
-keepclassmembers class java.lang.Float { boolean isNaN(float); }
-keepclassmembers class com.fsck.k9.activity.EditIdentity { com.fsck.k9.Identity access$100(com.fsck.k9.activity.EditIdentity); }
-keepclassmembers class java.lang.Float { float parseFloat(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.EditIdentity { android.widget.EditText access$200(com.fsck.k9.activity.EditIdentity); }
-keepclassmembers class com.fsck.k9.activity.EditIdentity { android.widget.LinearLayout access$000(com.fsck.k9.activity.EditIdentity); }
-keepclassmembers class org.apache.http.impl.EnglishReasonPhraseCatalog { void setReason(int,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.EditIdentity { void saveIdentity(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt product(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class java.lang.Float { java.lang.String toString(); }
-keepclassmembers class java.lang.Float { int compare(float,float); }
-keepclassmembers class java.lang.Float { java.lang.String toString(float); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { com.fsck.k9.preferences.SettingsImporter$ImportResults importSettings(android.content.Context,java.io.InputStream,boolean,java.util.List,boolean); }
-keepclassmembers class org.apache.http.impl.EnglishReasonPhraseCatalog { void <clinit>(); }
-keepclassmembers class java.math.BigInt { java.math.BigInt bigExp(java.math.BigInt,java.math.BigInt); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { org.htmlcleaner.HtmlCleaner$TagPos findTagToPlaceRubbish(); }
-keepclassmembers class java.lang.Float { java.lang.Float valueOf(float); }
-keepclassmembers class java.math.BigInt { java.math.BigInt exp(java.math.BigInt,int); }
-keepclassmembers class java.math.BigInt { void division(java.math.BigInt,java.math.BigInt,java.math.BigInt,java.math.BigInt); }
-keepclassmembers class com.fsck.k9.activity.EditIdentity { void onBackPressed(); }
-keepclassmembers class java.lang.Float { java.lang.String toHexString(float); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { boolean isEmpty(); }
-keepclassmembers class com.fsck.k9.activity.EditIdentity { void onCreate(android.os.Bundle); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { org.htmlcleaner.HtmlCleaner$TagPos getLastTagPos(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { void removeTag(java.lang.String); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { boolean someAlreadyOpen(java.util.Set); }
-keepclassmembers class java.math.BigInt { java.math.BigInt generatePrimeDefault(int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { boolean tagEncountered(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Time { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment$1 { void <init>(); }
-keepclassmembers class java.lang.Float { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$OpenTags { boolean tagExists(java.lang.String); }
-keepclassmembers class java.lang.Float { int compareTo(java.lang.Object); }
-keepclassmembers class android.app.Notification$Builder { boolean hasThreeLines(); }
-keepclassmembers class android.app.Notification$Builder { boolean showsTimeOrChronometer(); }
-keepclassmembers class com.fsck.k9.activity.EditIdentity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class org.htmlcleaner.CleanTimeValues { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.loader.AttachmentInfoLoader { void <init>(android.content.Context,com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class android.app.Notification$Builder { int calculateTopPadding(android.content.Context,boolean,float); }
-keepclassmembers class com.fsck.k9.activity.loader.AttachmentInfoLoader { com.fsck.k9.activity.misc.Attachment loadInBackground(); }
-keepclassmembers class android.transition.TransitionInflater { java.lang.Object createCustom(android.util.AttributeSet,java.lang.Class,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs { void onPause(); }
-keepclassmembers class com.fsck.k9.message.extractors.AttachmentCounter { void <init>(com.fsck.k9.message.extractors.EncryptionDetector); }
-keepclassmembers class com.fsck.k9.message.extractors.AttachmentCounter { com.fsck.k9.message.extractors.AttachmentCounter newInstance(); }
-keepclassmembers class com.fsck.k9.message.extractors.AttachmentCounter { int getAttachmentCount(com.fsck.k9.mail.Message); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class android.app.Notification$Builder { void resetStandardTemplateWithActions(android.widget.RemoteViews); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews applyStandardTemplateWithActions(int); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeContentView(); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeTickerView(); }
-keepclassmembers class android.view.Gravity { void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.impl.conn.Wire); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews makeHeadsUpContentView(); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { void write(byte[],int,int); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews generateActionButton(android.app.Notification$Action); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$31$1 { void <init>(com.fsck.k9.controller.MessagingController$31,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,java.util.List); }
-keepclassmembers class com.fsck.k9.activity.loader.AttachmentInfoLoader { void onStartLoading(); }
-keepclassmembers class com.fsck.k9.activity.loader.AttachmentInfoLoader { java.lang.Object loadInBackground(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$31$1 { void run(); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { void writeLine(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class android.app.Notification$Builder { boolean isLegacy(); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { void flush(); }
-keepclassmembers class android.app.Notification$Builder { void processLegacyAction(android.app.Notification$Action,android.widget.RemoteViews); }
-keepclassmembers class android.transition.TransitionInflater { void getTargetIds(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.transition.Transition); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { void writeLine(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.data.StreamAssetPathFetcher { void <init>(android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence processLegacyText(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { void processSmallIconAsLarge(int,android.widget.RemoteViews); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionOutputBuffer { org.apache.http.io.HttpTransportMetrics getMetrics(); }
-keepclassmembers class com.bumptech.glide.load.data.StreamAssetPathFetcher { void close(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.data.StreamAssetPathFetcher { void close(java.io.InputStream); }
-keepclassmembers class com.bumptech.glide.load.data.StreamAssetPathFetcher { java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.data.StreamAssetPathFetcher { java.io.InputStream loadResource(android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.AbstractAuthenticationHandler { void <init>(); }
-keepclassmembers class android.app.Notification$Builder { void processLargeLegacyIcon(android.graphics.Bitmap,android.widget.RemoteViews); }
-keepclassmembers class android.net.Uri { boolean isOpaque(); }
-keepclassmembers class org.apache.http.impl.client.AbstractAuthenticationHandler { java.util.Map parseChallenges(org.apache.http.Header[]); }
-keepclassmembers class android.os.Environment { void initForCurrentUser(); }
-keepclassmembers class android.net.Uri { void <init>(); }
-keepclassmembers class java.nio.charset.UnsupportedCharsetException { void <init>(java.lang.String); }
-keepclassmembers class android.app.Notification$Builder { void applyLargeIconBackground(android.widget.RemoteViews); }
-keepclassmembers class com.android.okio.RealBufferedSink { void <init>(com.android.okio.Sink,com.android.okio.OkBuffer); }
-keepclassmembers class android.app.Notification$Builder { void removeLargeIconBackground(android.widget.RemoteViews); }
-keepclassmembers class com.android.okio.RealBufferedSink { void <init>(com.android.okio.Sink); }
-keepclassmembers class com.fsck.k9.activity.misc.SwipeGestureDetector { void <init>(android.content.Context,com.fsck.k9.activity.misc.SwipeGestureDetector$OnSwipeGestureListener); }
-keepclassmembers class android.net.Uri { int hashCode(); }
-keepclassmembers class android.net.Uri { boolean equals(java.lang.Object); }
-keepclassmembers class android.net.Uri { int compareTo(android.net.Uri); }
-keepclassmembers class com.android.okio.RealBufferedSink { void write(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.net.Uri { java.lang.String toSafeString(); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.OkBuffer buffer(); }
-keepclassmembers class org.apache.http.impl.client.AbstractAuthenticationHandler { java.util.List getAuthPreferences(); }
-keepclassmembers class android.app.Notification$Builder { void processSmallRightIcon(int,android.widget.RemoteViews); }
-keepclassmembers class org.apache.http.impl.client.AbstractAuthenticationHandler { org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.activity.misc.SwipeGestureDetector { boolean onDown(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.activity.misc.SwipeGestureDetector { boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink write(com.android.okio.ByteString); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink writeUtf8(java.lang.String); }
-keepclassmembers class android.os.Environment { java.io.File getExternalStorageDirectory(); }
-keepclassmembers class android.view.Gravity { int getAbsoluteGravity(int,int); }
-keepclassmembers class android.app.Notification$Builder { int sanitizeColor(); }
-keepclassmembers class android.net.Uri { android.net.Uri parse(java.lang.String); }
-keepclassmembers class android.net.Uri { android.net.Uri fromFile(java.io.File); }
-keepclassmembers class android.app.Notification$Builder { int resolveColor(); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink write(byte[]); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification buildUnstyled(); }
-keepclassmembers class android.net.Uri { java.util.Set getQueryParameterNames(); }
-keepclassmembers class android.net.Uri { android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink writeShort(int); }
-keepclassmembers class android.net.Uri { java.util.List getQueryParameters(java.lang.String); }
-keepclassmembers class android.os.Environment { java.io.File getExternalStoragePublicDirectory(java.lang.String); }
-keepclassmembers class android.os.Environment { java.lang.String getExternalStorageState(); }
-keepclassmembers class android.os.Environment { java.lang.String getExternalStorageState(java.io.File); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink writeInt(int); }
-keepclassmembers class com.bumptech.glide.manager.ConnectivityMonitorFactory { void <init>(); }
-keepclassmembers class com.bumptech.glide.manager.ConnectivityMonitorFactory { com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry { void <init>(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.client.AbstractAuthenticationHandler { void <clinit>(); }
-keepclassmembers class android.app.Notification$Builder { void populateExtras(android.os.Bundle); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry { java.lang.Object access$000(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry); }
-keepclassmembers class android.net.Uri { java.lang.String getQueryParameter(java.lang.String); }
-keepclassmembers class com.github.amlcurran.showcaseview.AnimatorAnimationFactory { void <init>(); }
-keepclassmembers class android.content.res.Resources$NotFoundException { void <init>(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry { java.lang.Object removeLast(); }
-keepclassmembers class android.os.Environment { java.io.File getDirectory(java.lang.String,java.lang.String); }
-keepclassmembers class com.github.amlcurran.showcaseview.AnimatorAnimationFactory { void animateTargetToPoint(com.github.amlcurran.showcaseview.ShowcaseView,android.graphics.Point); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry { void add(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry { int size(); }
-keepclassmembers class com.android.okio.RealBufferedSink { com.android.okio.BufferedSink emitCompleteSegments(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$7 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.os.Environment { java.lang.String getCanonicalPathOrNull(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$7 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$7 { void <init>(com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.FetchProfile,java.util.List); }
-keepclassmembers class com.android.okio.RealBufferedSink { void flush(); }
-keepclassmembers class com.github.amlcurran.showcaseview.AnimatorAnimationFactory { void fadeInView(android.view.View,long,com.github.amlcurran.showcaseview.AnimationFactory$AnimationStartListener); }
-keepclassmembers class android.transition.TransitionInflater { void <clinit>(); }
-keepclassmembers class com.android.okio.RealBufferedSink { void close(); }
-keepclassmembers class android.os.Environment { java.io.File[] buildPaths(java.io.File[],java.lang.String[]); }
-keepclassmembers class android.support.v4.util.DebugUtils { void buildShortClassTag(java.lang.Object,java.lang.StringBuilder); }
-keepclassmembers class android.os.Environment { void throwIfUserRequired(); }
-keepclassmembers class android.net.Uri { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class android.net.Uri { void writeToParcel(android.os.Parcel,android.net.Uri); }
-keepclassmembers class android.net.Uri { java.lang.String encode(java.lang.String); }
-keepclassmembers class android.os.Environment { java.io.File buildPath(java.io.File,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { boolean isAccountNameUsed(java.lang.String,java.util.List); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { boolean isIdentityDescriptionUsed(java.lang.String,java.util.List); }
-keepclassmembers class android.os.Environment { android.os.storage.StorageVolume getStorageVolume(java.io.File); }
-keepclassmembers class com.github.amlcurran.showcaseview.AnimatorAnimationFactory { void fadeOutView(android.view.View,long,com.github.amlcurran.showcaseview.AnimationFactory$AnimationEndListener); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { com.fsck.k9.preferences.SettingsImporter$ImportedAccount parseAccount(org.xmlpull.v1.XmlPullParser,java.util.List,boolean); }
-keepclassmembers class libcore.io.AsynchronousCloseMonitor { void signalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoSplitter { com.fsck.k9.ui.crypto.MessageCryptoSplitter$CryptoMessageParts split(com.fsck.k9.mail.Message,com.fsck.k9.ui.crypto.MessageCryptoAnnotations); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void <init>(boolean[]); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileMessageBody { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileMessageBody { void setEncoding(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.net.Uri { boolean isAllowed(char,java.lang.String); }
-keepclassmembers class android.net.Uri { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.os.Environment { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { boolean[] access$000(org.apache.harmony.security.x509.ReasonFlags); }
-keepclassmembers class java.util.NoSuchElementException { void <init>(); }
-keepclassmembers class java.util.NoSuchElementException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags { void <clinit>(); }
-keepclassmembers class android.net.Uri { android.net.Uri withAppendedPath(android.net.Uri,java.lang.String); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { int getInputType(); }
-keepclassmembers class javax.net.ssl.SSLPeerUnverifiedException { void <init>(java.lang.String); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.net.Uri { void checkFileUriExposed(java.lang.String); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { void <init>(); }
-keepclassmembers class android.net.Uri { java.lang.String access$300(); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class android.net.Uri { void <init>(android.net.Uri$1); }
-keepclassmembers class android.net.Uri { void <clinit>(); }
-keepclassmembers class android.net.Uri { java.lang.String access$600(); }
-keepclassmembers class android.text.method.TextKeyListener$NullKeyListener { android.text.method.TextKeyListener$NullKeyListener getInstance(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { void <init>(android.content.Context); }
-keepclassmembers class com.android.okhttp.Route { void <init>(com.android.okhttp.Address,java.net.Proxy,java.net.InetSocketAddress,boolean); }
-keepclassmembers class java.util.TimSort { void <init>(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { java.util.List access$000(com.fsck.k9.activity.compose.RecipientAdapter); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { void setContactPhotoOrPlaceholder(android.content.Context,android.widget.ImageView,com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class com.android.okhttp.Route { com.android.okhttp.Address getAddress(); }
-keepclassmembers class com.android.okhttp.Route { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.TimSort { void sort(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class com.android.okhttp.Route { java.net.Proxy getProxy(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { void bindView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class android.app.ActivityManager { int getLauncherLargeIconSizeInner(android.content.Context); }
-keepclassmembers class com.android.okhttp.Route { int hashCode(); }
-keepclassmembers class java.util.TimSort { void sort(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class android.app.Notification$Builder { void setBuilderContentView(android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$JellybeanMr1DrawableImpl { void <init>(); }
-keepclassmembers class android.app.Notification$Builder { void setBuilderBigContentView(android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class java.util.TimSort { void binarySort(java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class libcore.reflect.ListOfTypes { void <init>(int); }
-keepclassmembers class libcore.reflect.ListOfTypes { void <init>(java.lang.reflect.Type[]); }
-keepclassmembers class java.util.TimSort { int countRunAndMakeAscending(java.lang.Object[],int,int,java.util.Comparator); }
-keepclassmembers class android.app.Notification$Builder { void setBuilderHeadsUpContentView(android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class libcore.reflect.ListOfTypes { void add(java.lang.reflect.Type); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { void hide(); }
-keepclassmembers class libcore.reflect.ListOfTypes { int length(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { int getCount(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class libcore.reflect.ListOfTypes { java.lang.reflect.Type[] getResolvedTypes(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { com.fsck.k9.view.RecipientSelectView$Recipient getItem(int); }
-keepclassmembers class java.util.TimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class android.widget.Editor$PinnedPopupWindow { boolean isShowing(); }
-keepclassmembers class libcore.reflect.ListOfTypes { java.lang.reflect.Type[] resolveTypes(java.util.List); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { java.lang.Object getItem(int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { long getItemId(int); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { java.util.Map parseAccounts(org.xmlpull.v1.XmlPullParser,java.util.List,boolean); }
-keepclassmembers class java.util.TimSort { int minRunLength(int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.util.TimSort { void pushRun(int,int); }
-keepclassmembers class libcore.reflect.ListOfTypes { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { android.text.Spannable highlightText(java.lang.String); }
-keepclassmembers class java.util.TimSort { void mergeCollapse(); }
-keepclassmembers class libcore.reflect.ListOfTypes { void <clinit>(); }
-keepclassmembers class java.util.TimSort { void mergeForceCollapse(); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine$ResourceWeakReference { void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource,java.lang.ref.ReferenceQueue); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { android.view.View newView(android.view.ViewGroup); }
-keepclassmembers class java.util.TimSort { void mergeAt(int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { void setHighlight(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext { void setPersistentCache(com.android.org.conscrypt.SSLClientSessionCache); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext { void sessionRemoved(javax.net.ssl.SSLSession); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter { void setRecipients(java.util.List); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean,boolean); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine$ResourceWeakReference { com.bumptech.glide.load.Key access$000(com.bumptech.glide.load.engine.Engine$ResourceWeakReference); }
-keepclassmembers class android.app.ActivityManager { void <clinit>(); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification getNotification(); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext { javax.net.ssl.SSLSession getSession(java.lang.String,int); }
-keepclassmembers class java.util.TimSort { int gallopLeft(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification build(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { com.fsck.k9.preferences.SettingsImporter$ImportedFolder parseFolder(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.text.method.QwertyKeyListener { android.text.method.QwertyKeyListener getInstanceForFullKeyboard(); }
-keepclassmembers class com.beetstra.jutf7.Base64Util { void <init>(java.lang.String); }
-keepclassmembers class android.text.method.QwertyKeyListener { int getInputType(); }
-keepclassmembers class android.app.Notification$Builder { android.app.Notification buildInto(android.app.Notification); }
-keepclassmembers class android.animation.RectEvaluator { void <init>(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { java.util.List parseFolders(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.app.Notification$Builder { int getBaseLayoutResource(); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.app.Notification$Builder { int getBigBaseLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { int getBigPictureLayoutResource(); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext { void putSession(javax.net.ssl.SSLSession); }
-keepclassmembers class android.app.Notification$Builder { int getBigTextLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { int getActionLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { int getInboxLayoutResource(); }
-keepclassmembers class android.app.Notification$Builder { int access$302(android.app.Notification$Builder,int); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$600(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { int getActionTombstoneLayoutResource(); }
-keepclassmembers class com.beetstra.jutf7.Base64Util { boolean contains(char); }
-keepclassmembers class com.beetstra.jutf7.Base64Util { byte getChar(int); }
-keepclassmembers class android.app.Notification$Builder { android.widget.RemoteViews access$700(android.app.Notification$Builder,int); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$800(android.app.Notification$Builder); }
-keepclassmembers class com.beetstra.jutf7.Base64Util { int getSextet(byte); }
-keepclassmembers class java.util.TimSort { int gallopRight(java.lang.Object,java.lang.Object[],int,int,int,java.util.Comparator); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$900(android.app.Notification$Builder,java.lang.CharSequence); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions { void <init>(android.util.DisplayMetrics); }
-keepclassmembers class android.app.Notification$Builder { android.content.Context access$1000(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$602(android.app.Notification$Builder,java.lang.CharSequence); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions { int getHeightPixels(); }
-keepclassmembers class android.graphics.SweepGradient { void <init>(float,float,int[],float[]); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { java.util.List parseIdentities(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.Bitmap access$1200(android.app.Notification$Builder); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions { int getWidthPixels(); }
-keepclassmembers class android.app.Notification$Builder { boolean access$1100(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { android.graphics.Bitmap access$1202(android.app.Notification$Builder,android.graphics.Bitmap); }
-keepclassmembers class android.app.Notification$Builder { boolean access$1500(android.app.Notification$Builder,android.widget.RemoteViews,int); }
-keepclassmembers class android.graphics.SweepGradient { void <init>(float,float,int,int); }
-keepclassmembers class android.app.Notification$Builder { int access$1300(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$1400(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { void access$1600(android.app.Notification$Builder,android.app.Notification,android.widget.RemoteViews); }
-keepclassmembers class java.util.TimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class android.graphics.SweepGradient { android.graphics.Shader copy(); }
-keepclassmembers class android.app.Notification$Builder { void access$1800(android.app.Notification$Builder,android.widget.RemoteViews); }
-keepclassmembers class android.app.Notification$Builder { java.lang.CharSequence access$1402(android.app.Notification$Builder,java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$Builder { java.util.ArrayList access$1900(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { int access$1700(android.app.Notification$Builder); }
-keepclassmembers class android.app.Notification$Builder { int access$2000(android.app.Notification$Builder); }
-keepclassmembers class android.graphics.SweepGradient { long nativeCreate2(float,float,int,int); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { com.fsck.k9.preferences.SettingsImporter$ImportedIdentity parseIdentity(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.graphics.SweepGradient { long nativeCreate1(float,float,int[],float[]); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.transition.Explode { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.Explode { void <init>(); }
-keepclassmembers class android.transition.Explode { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Explode { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Explode { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { com.fsck.k9.preferences.SettingsImporter$Imported parseRoot(org.xmlpull.v1.XmlPullParser,boolean,java.util.List,boolean); }
-keepclassmembers class java.util.TimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void addIdentifier(java.util.TreeMap,int,int); }
-keepclassmembers class java.util.ArrayList { void <init>(int); }
-keepclassmembers class com.bumptech.glide.Glide { void <init>(com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.content.Context,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class java.util.ArrayList { void <init>(); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { boolean checkTag(int); }
-keepclassmembers class java.lang.ref.WeakReference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class java.util.ArrayList { void <init>(java.util.Collection); }
-keepclassmembers class java.util.ArrayList { boolean add(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <init>(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.ArrayList { void add(int,java.lang.Object); }
-keepclassmembers class java.util.ArrayList { int newCapacity(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.ArrayList { boolean addAll(java.util.Collection); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Choice { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$8 { void <init>(com.fsck.k9.activity.MessageCompose,com.fsck.k9.activity.compose.IdentityAdapter); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$8 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.os.StrictMode$InstanceTracker { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$StrictModeNetworkViolation { void <init>(int); }
-keepclassmembers class android.app.BackStackRecord$Op { void <init>(); }
-keepclassmembers class java.util.ArrayList { java.lang.IndexOutOfBoundsException throwIndexOutOfBoundsException(int,int); }
-keepclassmembers class android.transition.Explode { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$19 { void <init>(com.fsck.k9.mailstore.LocalStore,java.util.List,int); }
-keepclassmembers class java.security.Provider { void <init>(java.lang.String,double,java.lang.String); }
-keepclassmembers class java.util.ArrayList { void clear(); }
-keepclassmembers class java.util.TimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$19 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$19 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.util.ArrayList { java.lang.Object clone(); }
-keepclassmembers class java.util.ArrayList { void ensureCapacity(int); }
-keepclassmembers class java.security.Provider { java.lang.String toString(); }
-keepclassmembers class java.security.Provider { java.lang.String getName(); }
-keepclassmembers class java.util.ArrayList { java.lang.Object get(int); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { com.fsck.k9.preferences.SettingsImporter$ImportedServer parseServerSettings(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class java.util.ArrayList { int size(); }
-keepclassmembers class java.util.ArrayList { int indexOf(java.lang.Object); }
-keepclassmembers class java.util.ArrayList { boolean isEmpty(); }
-keepclassmembers class java.security.Provider { java.util.Set entrySet(); }
-keepclassmembers class java.util.ArrayList { boolean contains(java.lang.Object); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String getReplacement(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class java.util.ArrayList { int lastIndexOf(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Class,android.content.Context); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$Imported { void <init>(com.fsck.k9.preferences.SettingsImporter$1); }
-keepclassmembers class java.util.ArrayList { java.lang.Object remove(int); }
-keepclassmembers class java.security.Provider { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.net.PortUnreachableException { void <init>(); }
-keepclassmembers class java.net.HttpRetryException { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.PortUnreachableException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$Imported { void <init>(); }
-keepclassmembers class java.net.HttpRetryException { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class java.util.ArrayList { boolean remove(java.lang.Object); }
-keepclassmembers class java.net.PortUnreachableException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context); }
-keepclassmembers class org.apache.james.mime4j.stream.RawEntity { org.apache.james.mime4j.stream.EntityStateMachine advance(); }
-keepclassmembers class org.apache.james.mime4j.stream.RawEntity { org.apache.james.mime4j.stream.BodyDescriptor getBodyDescriptor(); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Class,android.content.Context); }
-keepclassmembers class org.apache.james.mime4j.stream.RawEntity { java.io.InputStream getContentStream(); }
-keepclassmembers class java.security.Provider { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.security.Provider { boolean implementsAlg(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.stream.RawEntity { java.io.InputStream getDecodedContentStream(); }
-keepclassmembers class org.apache.james.mime4j.stream.RawEntity { void <init>(java.io.InputStream); }
-keepclassmembers class com.bumptech.glide.Glide { void clear(com.bumptech.glide.request.target.Target); }
-keepclassmembers class org.apache.james.mime4j.stream.RawEntity { org.apache.james.mime4j.stream.Field getField(); }
-keepclassmembers class org.apache.james.mime4j.stream.RawEntity { org.apache.james.mime4j.stream.RawField getField(); }
-keepclassmembers class java.util.ArrayList { void removeRange(int,int); }
-keepclassmembers class android.text.method.QwertyKeyListener { void markAsReplaced(android.text.Spannable,int,int,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.stream.RawEntity { org.apache.james.mime4j.stream.EntityState getState(); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.Glide get(android.content.Context); }
-keepclassmembers class org.apache.james.mime4j.stream.RawEntity { void setRecursionMode(org.apache.james.mime4j.stream.RecursionMode); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { com.fsck.k9.preferences.SettingsImporter$Imported parseSettings(java.io.InputStream,boolean,java.util.List,boolean); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$4 { void <clinit>(); }
-keepclassmembers class java.util.ArrayList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class android.text.method.QwertyKeyListener { boolean showCharacterPicker(android.view.View,android.text.Editable,char,boolean,int); }
-keepclassmembers class java.security.Provider { boolean checkAttribute(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.QwertyKeyListener { java.lang.String toTitleCase(java.lang.String); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.load.model.GenericLoaderFactory getLoaderFactory(); }
-keepclassmembers class java.util.ArrayList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { void <init>(android.os.Bundle,com.fsck.k9.ui.messageview.MessageCryptoPresenter$MessageCryptoMvpView); }
-keepclassmembers class java.util.ArrayList { void trimToSize(); }
-keepclassmembers class java.security.Provider { void setProviderNumber(int); }
-keepclassmembers class org.apache.james.mime4j.stream.RawBody { void <init>(java.lang.String,java.util.List); }
-keepclassmembers class android.text.method.QwertyKeyListener { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { void displayCryptoInfoDialog(com.fsck.k9.view.MessageCryptoDisplayStatus); }
-keepclassmembers class java.util.ArrayList { java.util.Iterator iterator(); }
-keepclassmembers class java.security.Provider { java.security.Provider$Service getService(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.stream.RawBody { java.util.List getParams(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { android.graphics.drawable.Drawable getOpenPgpApiProviderIcon(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.RequestManager with(android.content.Context); }
-keepclassmembers class java.util.ArrayList { int hashCode(); }
-keepclassmembers class org.apache.james.mime4j.stream.RawBody { java.lang.String getValue(); }
-keepclassmembers class org.apache.james.mime4j.stream.RawBody { java.lang.String toString(); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.request.target.Target buildImageViewTarget(android.widget.ImageView,java.lang.Class); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.load.resource.transcode.ResourceTranscoder buildTranscoder(java.lang.Class,java.lang.Class); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { com.fsck.k9.preferences.SettingsImporter$ImportedSettings parseSettings(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class java.util.ArrayList { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.provider.DataLoadProvider buildDataProvider(java.lang.Class,java.lang.Class); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver { void <init>(android.content.Context,com.fsck.k9.Account,com.fsck.k9.controller.MessagingController); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { void launchPendingIntent(com.fsck.k9.mailstore.CryptoResultAnnotation); }
-keepclassmembers class com.bumptech.glide.Glide { void clearMemory(); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver { void authenticationFailed(); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver { android.content.Context getContext(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void <init>(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool(); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation getDrawableFitCenter(); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver { java.lang.String getPushState(java.lang.String); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation getDrawableCenterCrop(); }
-keepclassmembers class com.bumptech.glide.Glide { com.bumptech.glide.load.engine.Engine getEngine(); }
-keepclassmembers class java.security.Provider { java.util.Set getServices(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$PendingCommand { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$PendingCommand { long access$000(com.fsck.k9.mailstore.LocalStore$PendingCommand); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { void showMessageCryptoWarning(com.fsck.k9.ui.messageview.MessageTopView,com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$PendingCommand { long access$002(com.fsck.k9.mailstore.LocalStore$PendingCommand,long); }
-keepclassmembers class com.bumptech.glide.Glide { void register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$PendingCommand { java.lang.String toString(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnectionPool open(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void open(); }
-keepclassmembers class com.bumptech.glide.Glide { void trimMemory(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver { void messagesArrived(com.fsck.k9.mail.Folder,java.util.List); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver { void messagesFlagsChanged(com.fsck.k9.mail.Folder,java.util.List); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { android.os.Parcelable getDecryptionResultForReply(); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { void <init>(android.widget.PopupWindow,android.content.Context); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void close(); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void dispose(boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { boolean maybeHandleShowMessage(com.fsck.k9.ui.messageview.MessageTopView,com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver { void messagesRemoved(com.fsck.k9.mail.Folder,java.util.List); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { int[] onCreateDrawableState(int); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver { void pushError(java.lang.String,java.lang.Exception); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver { void setPushActive(java.lang.String,boolean); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver { void sleep(com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long); }
-keepclassmembers class java.lang.StringIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingControllerPushReceiver { void syncFolder(com.fsck.k9.mail.Folder); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void reconfigure(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { void putString(com.fsck.k9.preferences.StorageEditor,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.PopupWindow$PopupViewContainer { void sendAccessibilityEvent(int); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget$SizeDeterminer { void <init>(android.view.View); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer allocate(int); }
-keepclassmembers class android.os.PersistableBundle { void <init>(); }
-keepclassmembers class android.os.PersistableBundle { void <init>(int); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget$SizeDeterminer { void access$000(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer); }
-keepclassmembers class android.os.PersistableBundle { void <init>(java.util.Map); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { void <init>(com.fsck.k9.mail.store.imap.ImapStore,java.lang.String,com.fsck.k9.mail.PushReceiver); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[]); }
-keepclassmembers class android.os.PersistableBundle { void <init>(android.os.PersistableBundle); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(char[],int,int); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { void skipToEndTag(org.xmlpull.v1.XmlPullParser,java.lang.String); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer wrap(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock access$200(com.fsck.k9.mail.store.imap.ImapFolderPusher); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { boolean access$300(com.fsck.k9.mail.store.imap.ImapFolderPusher); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { boolean access$302(com.fsck.k9.mail.store.imap.ImapFolderPusher,boolean); }
-keepclassmembers class java.nio.CharBuffer { void <init>(int,long); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget$SizeDeterminer { android.graphics.Point getDisplayDimens(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnection acquireConnection(java.lang.String,int,android.os.CancellationSignal); }
-keepclassmembers class android.os.PersistableBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { int validateContentVersion(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { boolean access$502(com.fsck.k9.mail.store.imap.ImapFolderPusher,boolean); }
-keepclassmembers class java.nio.CharBuffer { char[] array(); }
-keepclassmembers class java.nio.CharBuffer { char charAt(int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { com.fsck.k9.mail.PushReceiver access$400(com.fsck.k9.mail.store.imap.ImapFolderPusher); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { void onClickRetryCryptoOperation(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper access$600(com.fsck.k9.mail.store.imap.ImapFolderPusher); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void releaseConnection(android.database.sqlite.SQLiteConnection); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { java.util.List access$700(com.fsck.k9.mail.store.imap.ImapFolderPusher); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget$SizeDeterminer { int getSizeForParam(int,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { void access$800(com.fsck.k9.mail.store.imap.ImapFolderPusher,com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class java.security.Provider { void removeFromPropertyServiceTable(java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { void onClickShowCryptoKey(); }
-keepclassmembers class android.os.PersistableBundle { void putPersistableBundle(java.lang.String,android.os.PersistableBundle); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { void superHandleUntaggedResponse(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { void handleUntaggedResponse(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class android.view.ViewOutlineProvider$1 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter { int validateFileFormatVersion(java.lang.String); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget$SizeDeterminer { int getViewHeightOrParam(); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget$SizeDeterminer { int getViewWidthOrParam(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { void onClickShowMessageOverrideWarning(); }
-keepclassmembers class java.util.AbstractList { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { void onCryptoClick(); }
-keepclassmembers class java.util.AbstractList { void add(int,java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { boolean recycleConnectionLocked(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { void refresh(); }
-keepclassmembers class java.util.AbstractList { boolean add(java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget$SizeDeterminer { boolean isSizeValid(int); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class java.util.AbstractList { void clear(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { void start(); }
-keepclassmembers class java.util.AbstractList { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget$SizeDeterminer { void getSize(com.bumptech.glide.request.target.SizeReadyCallback); }
-keepclassmembers class android.os.PersistableBundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.security.Provider { void updatePropertyServiceTable(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader$2 { void <init>(com.android.okhttp.internal.spdy.NameValueBlockReader); }
-keepclassmembers class java.util.AbstractList { int hashCode(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher { void stop(); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer get(char[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader$2 { int inflate(byte[],int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { boolean failIfStreamAbsent(); }
-keepclassmembers class java.util.AbstractList { int indexOf(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.Drawable,int,int); }
-keepclassmembers class java.util.AbstractList { java.util.Iterator iterator(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { boolean failIfStreamPresent(); }
-keepclassmembers class android.os.PersistableBundle { java.lang.String toString(); }
-keepclassmembers class java.nio.CharBuffer { int length(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { boolean failIfHeadersAbsent(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { boolean failIfHeadersPresent(); }
-keepclassmembers class java.util.AbstractList { java.lang.Object remove(int); }
-keepclassmembers class java.util.AbstractList { void removeRange(int,int); }
-keepclassmembers class java.util.AbstractList { java.util.ListIterator listIterator(int); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.HeadersMode { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.os.PersistableBundle { void <clinit>(); }
-keepclassmembers class java.util.AbstractList { java.lang.Object set(int,java.lang.Object); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer put(char[]); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$ParseException { void <init>(java.lang.String,org.xml.sax.Locator); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer put(java.nio.CharBuffer); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$ParseException { java.lang.String makeMessage(java.lang.String,org.xml.sax.Locator); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnection openConnectionLocked(android.database.sqlite.SQLiteDatabaseConfiguration,boolean); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$ParseException { java.lang.String makeMessage(java.lang.String,int,int); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class org.apache.http.impl.client.RoutedRequest { void <init>(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPusher { void <init>(com.fsck.k9.mail.store.imap.ImapStore,com.fsck.k9.mail.PushReceiver); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer put(java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.RoutedRequest { org.apache.http.impl.client.RequestWrapper getRequest(); }
-keepclassmembers class java.util.AbstractList { java.util.List subList(int,int); }
-keepclassmembers class org.apache.http.impl.client.RoutedRequest { org.apache.http.conn.routing.HttpRoute getRoute(); }
-keepclassmembers class com.fsck.k9.mail.internet.Viewable$Textual { void <init>(com.fsck.k9.mail.Part); }
-keepclassmembers class java.nio.CharBuffer { java.nio.CharBuffer put(java.lang.String,int,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPusher { com.fsck.k9.mail.store.imap.ImapFolderPusher createImapFolderPusher(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.fsck.k9.mail.internet.Viewable$Textual { com.fsck.k9.mail.Part getPart(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$ParseException { void <init>(java.lang.String,org.xml.sax.Locator,org.apache.harmony.xml.ExpatParser$1); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPusher { long currentTimeMillis(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPusher { long getLastRefresh(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void closeAvailableConnectionsAndLogExceptionsLocked(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPusher { int getRefreshInterval(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void closeAvailableNonPrimaryConnectionsAndLogExceptionsLocked(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPusher { void refresh(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void closeExcessConnectionsAndLogExceptionsLocked(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean canApplyTheme(); }
-keepclassmembers class java.security.Provider { void servicesChanged(); }
-keepclassmembers class java.security.Provider { void putProviderInfo(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void closeConnectionAndLogExceptionsLocked(android.database.sqlite.SQLiteConnection); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPusher { void setLastRefresh(long); }
-keepclassmembers class java.security.Provider { java.lang.String getPropertyIgnoreCase(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPusher { void start(java.util.List); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavMessage { void <init>(java.lang.String,com.fsck.k9.mail.Folder); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void reconfigureAllConnectionsLocked(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void discardAcquiredConnectionsLocked(); }
-keepclassmembers class java.security.Provider { java.lang.String key(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getChangingConfigurations(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavMessage { void delete(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPusher { void stop(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageCryptoPresenter$1 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setAlpha(int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavMessage { java.lang.String getUrl(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavMessage { void setFlag(com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavMessage { void setFlagInternal(com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavMessage { void setNewHeaders(com.fsck.k9.mail.store.webdav.ParsedMessageEnvelope); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void markAcquiredConnectionsLocked(android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getOpacity(); }
-keepclassmembers class android.text.StaticLayout { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean isStateful(); }
-keepclassmembers class java.lang.VMClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { boolean onLevelChange(int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavMessage { void setSize(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavMessage { void setUrl(java.lang.String); }
-keepclassmembers class android.text.StaticLayout { void generate(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.TextDirectionHeuristic,float,float,boolean,boolean,float,android.text.TextUtils$TruncateAt); }
-keepclassmembers class java.lang.VMClassLoader { java.util.List getResources(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnection waitForConnection(java.lang.String,int,android.os.CancellationSignal); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.Class findLoadedClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class java.lang.VMClassLoader { int getBootClassPathSize(); }
-keepclassmembers class java.lang.VMClassLoader { java.lang.String getBootClassPathResource(java.lang.String,int); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(float,float,float,float); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.os.StrictMode$1 { void <init>(); }
-keepclassmembers class android.os.StrictMode$1 { java.util.ArrayList initialValue(); }
-keepclassmembers class android.os.StrictMode$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.webkit.WebResourceResponse { void <init>(java.lang.String,java.lang.String,java.io.InputStream); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$CancelTask { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(float,float,float,float,float,float); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$CancelTask { void send(android.support.v4.app.INotificationSideChannel); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$CancelTask { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void clearMutated(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$CancelTask { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources); }
-keepclassmembers class android.view.animation.ScaleAnimation { void <init>(float,float,float,float,int,float,int,float); }
-keepclassmembers class android.graphics.drawable.ClipDrawable { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.content.res.Resources,android.graphics.drawable.ClipDrawable$1); }
-keepclassmembers class org.apache.james.mime4j.field.address.TokenMgrError { void <init>(boolean,int,int,int,java.lang.String,char,int); }
-keepclassmembers class org.apache.james.mime4j.field.address.TokenMgrError { java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$AttachmentComparator { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.address.TokenMgrError { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.animation.ScaleAnimation { void initializePivotPoint(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$AttachmentComparator { int compare(android.database.Cursor,android.database.Cursor); }
-keepclassmembers class android.os.ServiceManager { android.os.IServiceManager getIServiceManager(); }
-keepclassmembers class android.view.animation.ScaleAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.support.v4.app.NotificationCompatBase$Action { void <init>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$AttachmentComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$3 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController); }
-keepclassmembers class org.apache.james.mime4j.field.address.TokenMgrError { java.lang.String addEscapes(java.lang.String); }
-keepclassmembers class android.os.ServiceManager { android.os.IBinder getService(java.lang.String); }
-keepclassmembers class android.view.animation.ScaleAnimation { float resolveScale(float,int,int,int,int); }
-keepclassmembers class org.apache.http.client.protocol.ResponseProcessCookies { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class org.apache.http.client.protocol.ResponseProcessCookies { void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.http.client.protocol.ResponseProcessCookies { void processCookies(org.apache.http.HeaderIterator,org.apache.http.cookie.CookieSpec,org.apache.http.cookie.CookieOrigin,org.apache.http.client.CookieStore); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void logConnectionPoolBusyLocked(long,int); }
-keepclassmembers class android.view.animation.ScaleAnimation { void initialize(int,int,int,int); }
-keepclassmembers class java.util.Collections { java.util.Enumeration enumeration(java.util.Collection); }
-keepclassmembers class org.apache.james.mime4j.field.address.TokenMgrError { java.lang.String getMessage(); }
-keepclassmembers class android.os.ServiceManager { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void <init>(com.fsck.k9.mail.store.pop3.Pop3Store,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void addTextChangedListener(android.text.TextWatcher); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void addRecipients(com.fsck.k9.mail.Message$RecipientType,com.fsck.k9.view.RecipientSelectView$Recipient[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void wakeConnectionWaitersLocked(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { java.lang.String access$000(com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser$1 { void <init>(org.ccil.cowan.tagsoup.Parser); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { java.util.List getBccAddresses(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { java.util.List getBccRecipients(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser$1 { java.io.Reader autoDetectingReader(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { java.util.List getCcRecipients(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { java.util.List getCcAddresses(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { java.util.List getToAddresses(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void authAPOP(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { java.util.List getToRecipients(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { boolean isBccVisible(); }
-keepclassmembers class org.apache.http.client.protocol.ResponseProcessCookies { java.lang.String cookieToString(org.apache.http.cookie.Cookie); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void launchUserInteractionPendingIntent(android.app.PendingIntent,int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void onClick(android.view.View); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { boolean isCcVisible(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void onFocusChange(android.view.View,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnection tryAcquirePrimaryConnectionLocked(int); }
-keepclassmembers class java.util.Collections { java.util.Comparator reverseOrder(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { boolean recipientBccHasUncompletedText(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { boolean recipientBccTryPerformCompletion(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { boolean recipientCcTryPerformCompletion(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void authCramMD5(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { boolean recipientToHasUncompletedText(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { boolean recipientCcHasUncompletedText(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnection tryAcquireNonPrimaryConnectionLocked(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { boolean recipientToTryPerformCompletion(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void requestFocusOnBccField(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void requestFocusOnToField(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void requestFocusOnCcField(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void setBccVisibility(boolean); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void setCcVisibility(boolean); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void authExternal(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void finishAcquireConnectionLocked(android.database.sqlite.SQLiteConnection,int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void setCryptoProvider(java.lang.String); }
-keepclassmembers class java.lang.CloneNotSupportedException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections { java.util.Set singleton(java.lang.Object); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { void <init>(java.io.InputStream,long,java.util.jar.JarVerifier$VerifierEntry); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void setFontSizes(com.fsck.k9.FontSizes,int); }
-keepclassmembers class java.util.Collections { java.util.List singletonList(java.lang.Object); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int read(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void authPlain(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void setLoaderManager(android.app.LoaderManager); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context); }
-keepclassmembers class java.lang.System { void arraycopy(char[],int,char[],int,int); }
-keepclassmembers class android.app.AlertDialog$Builder { void <init>(android.content.Context,int); }
-keepclassmembers class java.util.Collections { void sort(java.util.List,java.util.Comparator); }
-keepclassmembers class java.util.Collections { void sort(java.util.List); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int read(byte[],int,int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void setPresenter(com.fsck.k9.activity.compose.RecipientPresenter); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setTitle(int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setTitle(java.lang.CharSequence); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { int getPriority(int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void setRecipientExpanderVisibility(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void setMaxConnectionPoolSizeLocked(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showBccUncompletedError(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.IllegalArgumentException notAnArray(java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void throwIfClosedLocked(); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter obtainConnectionWaiterLocked(java.lang.Thread,long,int,boolean,java.lang.String,int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setMessage(int); }
-keepclassmembers class java.lang.reflect.Array { java.lang.IllegalArgumentException incompatibleType(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showCcUncompletedError(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showContactPicker(int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void closeIO(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showCryptoDialog(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setMessage(java.lang.CharSequence); }
-keepclassmembers class java.lang.System { void arraycopy(byte[],int,byte[],int,int); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { int available(); }
-keepclassmembers class java.lang.System { void arraycopyCharUnchecked(char[],int,char[],int,int); }
-keepclassmembers class java.util.jar.JarFile$JarFileInputStream { long skip(long); }
-keepclassmembers class java.lang.reflect.Array { java.lang.RuntimeException badArray(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { java.lang.String executeSimpleCommand(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showCryptoSpecialMode(com.fsck.k9.activity.compose.RecipientMvpView$CryptoSpecialModeDisplayType); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void recycleConnectionWaiterLocked(android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { java.lang.String executeSimpleCommand(java.lang.String,boolean); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult { void <init>(android.content.Intent,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showCryptoStatus(com.fsck.k9.activity.compose.RecipientMvpView$CryptoStatusDisplayType); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class java.lang.System { void arraycopyByteUnchecked(byte[],int,byte[],int,int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showErrorContactNoAddress(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showErrorInlineAttach(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showErrorIsSignOnly(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showErrorOpenPgpConnection(); }
-keepclassmembers class java.util.MissingFormatArgumentException { void <init>(java.lang.String); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class org.apache.http.conn.routing.RouteInfo$TunnelType { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showErrorMissingSignKey(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showErrorOpenPgpUserInteractionRequired(); }
-keepclassmembers class org.apache.http.conn.routing.RouteInfo$TunnelType { void <clinit>(); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showErrorPrivateButMissingKeys(); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showNoRecipientsError(); }
-keepclassmembers class java.security.GeneralSecurityException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class java.io.Writer { void <init>(); }
-keepclassmembers class java.util.MissingFormatArgumentException { java.lang.String getMessage(); }
-keepclassmembers class java.io.Writer { void <init>(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showOpenPgpInlineDialog(boolean); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SetPasswordsAsyncTask { void <init>(android.app.Activity,com.fsck.k9.Account,java.lang.String,java.lang.String,java.util.List); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showToUncompletedError(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SetPasswordsAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SetPasswordsAsyncTask { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class java.io.Writer { void write(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView { void showOpenPgpSignOnlyDialog(boolean); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class java.lang.System { void arraycopy(int[],int,int[],int,int); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setCancelable(boolean); }
-keepclassmembers class java.io.Writer { java.io.Writer append(char); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void fetchBody(com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Message,int); }
-keepclassmembers class java.io.Writer { java.io.Writer append(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SetPasswordsAsyncTask { void onPostExecute(java.lang.Void); }
-keepclassmembers class java.lang.System { void arraycopy(long[],int,long[],int,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool { void <clinit>(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.app.Notification$Action { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SetPasswordsAsyncTask { void showProgressDialog(); }
-keepclassmembers class java.util.Collections { java.util.ArrayList list(java.util.Enumeration); }
-keepclassmembers class android.app.Notification$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.app.Notification$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[]); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SetPasswordsAsyncTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class java.lang.System { void arraycopyLongUnchecked(long[],int,long[],int,int); }
-keepclassmembers class java.lang.System { void arraycopy(float[],int,float[],int,int); }
-keepclassmembers class java.lang.System { void arraycopyIntUnchecked(int[],int,int[],int,int); }
-keepclassmembers class java.util.Collections { java.util.Map synchronizedMap(java.util.Map); }
-keepclassmembers class java.lang.reflect.Array { int getLength(java.lang.Object); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener); }
-keepclassmembers class android.appwidget.AppWidgetManager { android.appwidget.AppWidgetManager getInstance(android.content.Context); }
-keepclassmembers class android.app.Notification$Action { android.app.RemoteInput[] getRemoteInputs(); }
-keepclassmembers class android.app.Notification$Action { android.app.Notification$Action clone(); }
-keepclassmembers class java.util.Collections { java.util.Collection unmodifiableCollection(java.util.Collection); }
-keepclassmembers class android.app.Notification$Action { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[],android.app.Notification$1); }
-keepclassmembers class java.util.Collections { java.util.List unmodifiableList(java.util.List); }
-keepclassmembers class android.app.Notification$Action { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class android.app.Notification$Action { void <init>(android.os.Parcel,android.app.Notification$1); }
-keepclassmembers class java.lang.System { void arraycopyFloatUnchecked(float[],int,float[],int,int); }
-keepclassmembers class android.app.Notification$Action { void <clinit>(); }
-keepclassmembers class java.util.Collections { java.util.Map unmodifiableMap(java.util.Map); }
-keepclassmembers class java.util.Collections { java.util.Set unmodifiableSet(java.util.Set); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo57 { void fixDataLocationForMultipartParts(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.htmlcleaner.Display { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Field { void <init>(java.lang.reflect.ArtField); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class org.htmlcleaner.Display { void <init>(java.lang.String,int,boolean,boolean); }
-keepclassmembers class java.lang.reflect.Field { int getModifiers(); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.reflect.Field { java.lang.String getName(); }
-keepclassmembers class android.net.Uri$Part { boolean isEmpty(); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part readFrom(android.os.Parcel); }
-keepclassmembers class android.net.Uri$Part { java.lang.String getEncoded(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.lang.reflect.Field { int getOffset(); }
-keepclassmembers class java.util.Collections { java.util.Set emptySet(); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Class getType(); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setView(android.view.View); }
-keepclassmembers class java.util.Collections { java.util.List emptyList(); }
-keepclassmembers class java.util.Collections { java.util.Map emptyMap(); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object newInstance(java.lang.Class,int); }
-keepclassmembers class java.lang.System { void arraycopy(boolean[],int,boolean[],int,int); }
-keepclassmembers class java.lang.reflect.Field { int hashCode(); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part nonNull(android.net.Uri$Part); }
-keepclassmembers class java.lang.reflect.Field { boolean equals(java.lang.Object); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromDecoded(java.lang.String); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part fromEncoded(java.lang.String); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog$Builder setInverseBackgroundForced(boolean); }
-keepclassmembers class android.net.Uri$Part { void <init>(java.lang.String,java.lang.String,android.net.Uri$1); }
-keepclassmembers class android.net.Uri$Part { android.net.Uri$Part from(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog create(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void <init>(com.fsck.k9.mail.store.imap.ImapSettings,com.fsck.k9.mail.ssl.TrustedSocketFactory,android.net.ConnectivityManager); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void <init>(com.fsck.k9.mail.store.imap.ImapSettings,com.fsck.k9.mail.ssl.TrustedSocketFactory,android.net.ConnectivityManager,int,int); }
-keepclassmembers class java.net.MalformedURLException { void <init>(java.lang.String); }
-keepclassmembers class android.net.Uri$Part { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$1 { void <init>(com.fsck.k9.activity.compose.AttachmentPresenter); }
-keepclassmembers class java.lang.reflect.Array { java.lang.Object createObjectArray(java.lang.Class,int); }
-keepclassmembers class java.net.MalformedURLException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.app.AlertDialog$Builder { android.app.AlertDialog show(); }
-keepclassmembers class java.net.MalformedURLException { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$1 { android.content.Loader onCreateLoader(int,android.os.Bundle); }
-keepclassmembers class java.lang.reflect.Field { java.lang.Object get(java.lang.Object,boolean); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate$1 { void <init>(android.widget.TimePickerSpinnerDelegate); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$1 { void onLoadFinished(android.content.Loader,com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class java.lang.reflect.Field { boolean getBoolean(java.lang.Object); }
-keepclassmembers class java.lang.System { void arraycopyBooleanUnchecked(boolean[],int,boolean[],int,int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Capabilities getCapabilities(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void adjustDNSCacheTTL(); }
-keepclassmembers class java.util.Collections { boolean addAll(java.util.Collection,java.lang.Object[]); }
-keepclassmembers class java.lang.reflect.Field { boolean getBoolean(java.lang.Object,boolean); }
-keepclassmembers class java.lang.System { void exit(int); }
-keepclassmembers class java.lang.reflect.Field { byte getByte(java.lang.Object,boolean); }
-keepclassmembers class java.lang.System { long currentTimeMillis(); }
-keepclassmembers class java.lang.reflect.Field { char getChar(java.lang.Object); }
-keepclassmembers class java.lang.System { long nanoTime(); }
-keepclassmembers class java.lang.reflect.Field { byte getByte(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { char getChar(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { double getDouble(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { double getDouble(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { float getFloat(java.lang.Object); }
-keepclassmembers class java.io.UTFDataFormatException { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$1 { void onLoadFinished(android.content.Loader,java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { float getFloat(java.lang.Object,boolean); }
-keepclassmembers class java.lang.System { java.lang.String getenv(java.lang.String); }
-keepclassmembers class java.lang.reflect.Field { int getInt(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { int getInt(java.lang.Object,boolean); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$1 { void onLoaderReset(android.content.Loader); }
-keepclassmembers class java.io.UTFDataFormatException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.reflect.Field { long getLong(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Array { void setBoolean(java.lang.Object,int,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void authCramMD5(); }
-keepclassmembers class java.lang.reflect.Field { long getLong(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { short getShort(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Array { void setByte(java.lang.Object,int,byte); }
-keepclassmembers class java.lang.reflect.Field { void set(java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { short getShort(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setBoolean(java.lang.Object,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setBoolean(java.lang.Object,boolean,boolean); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean nonfairTryAcquire(int); }
-keepclassmembers class java.util.Collections { java.util.Set newSetFromMap(java.util.Map); }
-keepclassmembers class java.lang.System { java.util.Properties initUnchangeableSystemProperties(); }
-keepclassmembers class java.lang.reflect.Field { void setByte(java.lang.Object,byte,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setChar(java.lang.Object,char); }
-keepclassmembers class java.lang.reflect.Field { void setByte(java.lang.Object,byte); }
-keepclassmembers class java.util.Collections { int secondaryHash(java.lang.Object); }
-keepclassmembers class android.graphics.Paint$Align { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean tryRelease(int); }
-keepclassmembers class java.lang.reflect.Field { void setDouble(java.lang.Object,double); }
-keepclassmembers class java.util.Collections { int secondaryIdentityHash(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Field { void setChar(java.lang.Object,char,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void authenticate(); }
-keepclassmembers class android.graphics.Paint$Align { void <clinit>(); }
-keepclassmembers class java.util.Collections { int secondaryHash(int); }
-keepclassmembers class java.lang.reflect.Field { void setDouble(java.lang.Object,double,boolean); }
-keepclassmembers class java.lang.reflect.Field { void setFloat(java.lang.Object,float); }
-keepclassmembers class java.lang.reflect.Array { void setChar(java.lang.Object,int,char); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { boolean isHeldExclusively(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$Sync { java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject newCondition(); }
-keepclassmembers class java.lang.reflect.Field { void setFloat(java.lang.Object,float,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void indexMessage(int,com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Message); }
-keepclassmembers class java.lang.reflect.Field { void setInt(java.lang.Object,int,boolean); }
-keepclassmembers class java.util.Collections { int roundUpToPowerOfTwo(int); }
-keepclassmembers class java.lang.reflect.Field { void setInt(java.lang.Object,int); }
-keepclassmembers class java.lang.reflect.Field { void setShort(java.lang.Object,short); }
-keepclassmembers class java.lang.reflect.Field { void setLong(java.lang.Object,long); }
-keepclassmembers class java.lang.reflect.Field { void setShort(java.lang.Object,short,boolean); }
-keepclassmembers class android.graphics.ColorFilter { void <init>(); }
-keepclassmembers class java.util.Collections { java.util.Iterator access$000(); }
-keepclassmembers class android.graphics.ColorFilter { void destroyFilter(long); }
-keepclassmembers class java.lang.reflect.Field { void setLong(java.lang.Object,long,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void configureSocket(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { java.net.Socket connect(); }
-keepclassmembers class java.lang.reflect.Array { void setDouble(java.lang.Object,int,double); }
-keepclassmembers class java.lang.reflect.Field { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener$TriggerLongPress { void <init>(android.widget.ListPopupWindow$ForwardingListener); }
-keepclassmembers class java.lang.reflect.Field { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void indexMsgNums(int,int); }
-keepclassmembers class java.util.Collections { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Array { void setFloat(java.lang.Object,int,float); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener$TriggerLongPress { void <init>(android.widget.ListPopupWindow$ForwardingListener,android.widget.ListPopupWindow$1); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$PartContainer { void <init>(long,com.fsck.k9.mail.Part); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList add(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(); }
-keepclassmembers class java.lang.reflect.Array { void setInt(java.lang.Object,int,int); }
-keepclassmembers class android.app.Dialog$1 { void <init>(android.app.Dialog); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { java.net.Socket connectToAddress(java.net.InetAddress); }
-keepclassmembers class android.transition.Transition$ArrayListManager { java.util.ArrayList remove(java.util.ArrayList,java.lang.Object); }
-keepclassmembers class java.lang.IndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class java.util.HashMap$KeySet { void <init>(java.util.HashMap); }
-keepclassmembers class android.app.Dialog$1 { void run(); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { void <init>(org.apache.http.HeaderIterator); }
-keepclassmembers class java.util.HashMap$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class java.lang.System { void setDefaultChangeableProperties(java.util.Properties); }
-keepclassmembers class java.lang.reflect.Array { void setLong(java.lang.Object,int,long); }
-keepclassmembers class java.util.HashMap$KeySet { int size(); }
-keepclassmembers class java.util.HashMap$KeySet { boolean isEmpty(); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { boolean hasNext(); }
-keepclassmembers class java.lang.System { java.util.Properties createSystemProperties(); }
-keepclassmembers class java.util.HashMap$KeySet { boolean contains(java.lang.Object); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { java.lang.String nextToken(); }
-keepclassmembers class java.lang.System { java.lang.String[] specialProperties(); }
-keepclassmembers class java.lang.System { void parsePropertyAssignments(java.util.Properties,java.lang.String[]); }
-keepclassmembers class java.lang.reflect.Array { void setShort(java.lang.Object,int,short); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void enableCompression(); }
-keepclassmembers class java.util.HashMap$KeySet { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { int findNext(int); }
-keepclassmembers class android.widget.Editor$InsertionHandleView$1 { void <init>(android.widget.Editor$InsertionHandleView); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class java.lang.System { void checkPropertyName(java.lang.String); }
-keepclassmembers class java.lang.System { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void indexUids(java.util.List); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { java.lang.String createToken(java.lang.String,int,int); }
-keepclassmembers class java.lang.System { java.lang.SecurityManager getSecurityManager(); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { int findTokenStart(int); }
-keepclassmembers class android.view.InputDevice { void <init>(int,int,int,java.lang.String,int,int,java.lang.String,boolean,int,int,android.view.KeyCharacterMap,boolean,boolean); }
-keepclassmembers class java.lang.System { void load(java.lang.String); }
-keepclassmembers class java.lang.System { int identityHashCode(java.lang.Object); }
-keepclassmembers class java.lang.System { java.lang.String lineSeparator(); }
-keepclassmembers class java.security.cert.CertificateNotYetValidException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void enableCompressionIfRequested(); }
-keepclassmembers class java.lang.System { void loadLibrary(java.lang.String); }
-keepclassmembers class java.util.HashMap$ValueIterator { void <init>(java.util.HashMap); }
-keepclassmembers class java.util.HashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { java.util.List extractCapabilities(java.util.List); }
-keepclassmembers class java.lang.System { void logE(java.lang.String); }
-keepclassmembers class java.util.HashMap$ValueIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class java.lang.System { void logE(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.http.client.protocol.RequestTargetAuthentication { void <init>(); }
-keepclassmembers class java.lang.System { void logI(java.lang.String); }
-keepclassmembers class org.apache.http.client.protocol.RequestTargetAuthentication { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class java.lang.System { void logW(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void handleConnectException(java.net.ConnectException); }
-keepclassmembers class java.lang.System { void log(char,java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { int findTokenSeparator(int); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel); }
-keepclassmembers class java.lang.System { void logW(java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { void <init>(android.content.Context); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { int findTokenEnd(int); }
-keepclassmembers class android.view.View$TransformationInfo { void <init>(); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1600(android.view.View$TransformationInfo); }
-keepclassmembers class java.lang.System { java.lang.String mapLibraryName(java.lang.String); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1700(android.view.View$TransformationInfo); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.support.v4.app.TaskStackBuilder buildAccountsBackStack(); }
-keepclassmembers class java.lang.System { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void handleNamespace(); }
-keepclassmembers class android.view.View$TransformationInfo { android.graphics.Matrix access$1702(android.view.View$TransformationInfo,android.graphics.Matrix); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.support.v4.app.TaskStackBuilder buildFolderListBackStack(com.fsck.k9.Account); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { boolean isWhitespace(char); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { boolean isTokenSeparator(char); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void login(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$UnreadQueryHandler { android.database.Cursor getAccountUnread(int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$UnreadQueryHandler { void <init>(com.fsck.k9.provider.MessageProvider); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { boolean isTokenChar(char); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void handleSslException(javax.net.ssl.SSLException); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.support.v4.app.TaskStackBuilder buildMessageListBackStack(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class org.apache.http.message.BasicTokenIterator { boolean isHttpSeparator(char); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean isInstrumentationEnabled(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo56 { void cleanUpFtsTable(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <init>(java.lang.Object,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { boolean isListResponse(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { java.lang.String readLine(); }
-keepclassmembers class org.apache.james.mime4j.io.EOLConvertingInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.view.InputDevice { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.support.v4.app.TaskStackBuilder buildMessageViewBackStack(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class org.apache.james.mime4j.io.EOLConvertingInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void login(); }
-keepclassmembers class org.apache.james.mime4j.io.EOLConvertingInputStream { void close(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$UnreadQueryHandler { java.lang.String getPath(); }
-keepclassmembers class org.apache.james.mime4j.io.EOLConvertingInputStream { int read(); }
-keepclassmembers class com.fsck.k9.mailstore.StoreSchemaDefinition { void <init>(com.fsck.k9.mailstore.LocalStore); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.support.v4.app.TaskStackBuilder buildUnreadBackStack(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.mailstore.StoreSchemaDefinition { void dbCreateDatabaseFromScratch(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createDeleteConfirmationPendingIntent(com.fsck.k9.activity.MessageReference,int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void writeLine(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { com.fsck.k9.mail.store.imap.ImapResponse readContinuationResponse(java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$UnreadQueryHandler { android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class android.view.InputDevice { void addMotionRange(int,int,float,float,float,float,float); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { boolean areMoreMessagesAvailable(int,java.util.Date); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { java.util.Map appendMessages(java.util.List); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createDeleteServicePendingIntent(com.fsck.k9.activity.MessageReference,int); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleNode { void <init>(int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void close(); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleNode { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { boolean create(com.fsck.k9.mail.Folder$FolderType); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent getDeleteAllConfirmationPendingIntent(java.util.List,int,int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void delete(java.util.List,java.lang.String); }
-keepclassmembers class android.view.InputDevice { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void delete(boolean); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { boolean exists(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent getDeleteAllServicePendingIntent(com.fsck.k9.Account,java.util.List,int,int); }
-keepclassmembers class com.fsck.k9.notification.NotificationHolder { void <init>(int,com.fsck.k9.notification.NotificationContent); }
-keepclassmembers class com.fsck.k9.mailstore.StoreSchemaDefinition { void upgradeDatabase(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void readInitialResponse(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { java.lang.String getFolderNameOfAllMessages(java.util.List); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onTouchEvent(android.view.MotionEvent,int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String getName(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Editor { void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String getValue(); }
-keepclassmembers class com.fsck.k9.mailstore.StoreSchemaDefinition { void doDbUpgrade(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.htmlcleaner.Serializer { void <init>(org.htmlcleaner.CleanerProperties); }
-keepclassmembers class android.view.InputDevice { java.lang.String toString(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Editor { void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$1); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setComment(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void requestCapabilities(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Editor { com.bumptech.glide.disklrucache.DiskLruCache$Entry access$1400(com.bumptech.glide.disklrucache.DiskLruCache$Editor); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.util.Date getExpiryDate(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Editor { boolean[] access$1500(com.bumptech.glide.disklrucache.DiskLruCache$Editor); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$21 { void <init>(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class com.fsck.k9.mailstore.StoreSchemaDefinition { int getVersion(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setExpiryDate(java.util.Date); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent getMarkAsReadPendingIntent(com.fsck.k9.Account,java.util.List,int,android.content.Context,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void requestCapabilitiesIfNecessary(); }
-keepclassmembers class org.htmlcleaner.Serializer { java.lang.String getAsString(org.htmlcleaner.TagNode,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$21 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setDomain(java.lang.String); }
-keepclassmembers class org.htmlcleaner.Serializer { java.lang.String getAsString(org.htmlcleaner.TagNode,java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$21 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String getDomain(); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleNode { void jjtAddChild(org.apache.james.mime4j.field.address.Node,int); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { boolean skipAccountsInBackStack(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void retrievePathDelimiter(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { boolean isSecure(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setSecure(boolean); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { int[] getPorts(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Editor { void abort(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { int getVersion(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { boolean skipFolderListInBackStack(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Editor { void abortUnlessCommitted(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String getPath(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setVersion(int); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Editor { void commit(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { boolean isExpired(java.util.Date); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setPath(java.lang.String); }
-keepclassmembers class org.htmlcleaner.Serializer { boolean isScriptOrStyle(org.htmlcleaner.TagNode); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleNode { void jjtClose(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Editor { java.io.File getFile(int); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createArchiveAllPendingIntent(com.fsck.k9.Account,java.util.List,int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String getAttribute(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleNode { int jjtGetNumChildren(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { void setAttribute(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleNode { org.apache.james.mime4j.field.address.Node jjtGetChild(int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { boolean containsAttribute(java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createArchiveMessagePendingIntent(com.fsck.k9.activity.MessageReference,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void retrievePathDelimiterIfNecessary(); }
-keepclassmembers class org.htmlcleaner.Serializer { void write(org.htmlcleaner.TagNode,java.io.Writer,java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void retrievePathPrefixIfNecessary(); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleNode { void jjtOpen(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { android.widget.LinearLayout access$000(com.fsck.k9.activity.setup.AccountSetupComposition); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie { java.lang.String toString(); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleNode { void jjtSetParent(org.apache.james.mime4j.field.address.Node); }
-keepclassmembers class android.view.InputDevice { void appendSourceDescriptionIfApplicable(java.lang.StringBuilder,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { com.fsck.k9.Account access$100(com.fsck.k9.activity.setup.AccountSetupComposition); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createDeleteAllPendingIntent(com.fsck.k9.Account,java.util.List,int); }
-keepclassmembers class android.text.StaticLayout { int out(java.lang.CharSequence,int,int,int,int,int,int,int,float,float,android.text.style.LineHeightSpan[],int[],android.graphics.Paint$FontMetricsInt,boolean,boolean,byte[],int,boolean,int,boolean,boolean,char[],float[],int,android.text.TextUtils$TruncateAt,float,float,android.text.TextPaint,boolean); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { android.widget.EditText access$200(com.fsck.k9.activity.setup.AccountSetupComposition); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { android.widget.RadioButton access$300(com.fsck.k9.activity.setup.AccountSetupComposition); }
-keepclassmembers class org.apache.james.mime4j.field.address.SimpleNode { java.lang.String toString(); }
-keepclassmembers class android.view.InputDevice { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void saslAuthExternal(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { void actionEditCompositionSettings(android.app.Activity,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$14 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createDeleteMessagePendingIntent(com.fsck.k9.activity.MessageReference,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$14 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { void saveSettings(); }
-keepclassmembers class android.view.InputDevice { void <init>(android.os.Parcel,android.view.InputDevice$1); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createDismissAllMessagesPendingIntent(com.fsck.k9.Account,int); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { android.widget.RadioButton access$400(com.fsck.k9.activity.setup.AccountSetupComposition); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void saslAuthPlain(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createDismissMessagePendingIntent(android.content.Context,com.fsck.k9.activity.MessageReference,int); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { com.fsck.k9.mail.Message getMessage(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { void onBackPressed(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Message getMessage(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { void onCreate(android.os.Bundle); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.activity.Accounts { int access$100(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createMarkAllAsReadPendingIntent(com.fsck.k9.Account,java.util.List,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts { android.widget.TextView access$000(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void access$1000(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void access$1600(com.fsck.k9.activity.Accounts,com.fsck.k9.activity.misc.NonConfigurationInstance); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { int getMessageCount(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { int access$102(com.fsck.k9.activity.Accounts,int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { java.util.List getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createMarkMessageAsReadPendingIntent(com.fsck.k9.activity.MessageReference,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void saslAuthPlainWithLoginFallback(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void access$1700(com.fsck.k9.activity.Accounts,java.util.List); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onGenericMotionEvent(android.view.MotionEvent,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts { com.fsck.k9.BaseAccount access$1800(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void access$2500(com.fsck.k9.activity.Accounts,int,int,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void access$2600(com.fsck.k9.activity.Accounts,com.fsck.k9.preferences.SettingsImporter$ImportResults,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts { android.widget.TextView access$200(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void setUpStreamsAndParser(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createReplyPendingIntent(com.fsck.k9.activity.MessageReference,int); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createMarkMessageAsSpamPendingIntent(com.fsck.k9.activity.MessageReference,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void access$2700(com.fsck.k9.activity.Accounts,com.fsck.k9.preferences.SettingsImporter$ImportContents,android.net.Uri); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void setUpStreamsAndParserFromSocket(); }
-keepclassmembers class android.widget.TextView$Marquee$2 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class com.fsck.k9.activity.Accounts { android.widget.TextView access$300(com.fsck.k9.activity.Accounts); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void onUnhandledEvent(android.view.InputEvent,int); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createViewFolderListPendingIntent(com.fsck.k9.Account,int); }
-keepclassmembers class android.widget.TextView$Marquee$2 { void doFrame(long); }
-keepclassmembers class com.fsck.k9.activity.Accounts { com.fsck.k9.activity.Accounts$AccountsAdapter access$500(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.activity.Accounts { java.util.concurrent.ConcurrentHashMap access$600(com.fsck.k9.activity.Accounts); }
-keepclassmembers class android.animation.AnimatorSet$AnimatorSetListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { boolean shouldEnableCompression(); }
-keepclassmembers class com.fsck.k9.helper.FileHelper { void copyFile(java.io.File,java.io.File); }
-keepclassmembers class com.fsck.k9.activity.Accounts { android.view.MenuItem access$700(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.activity.Accounts { java.util.concurrent.ConcurrentMap access$900(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.activity.Accounts { com.fsck.k9.activity.Accounts$AccountsHandler access$800(com.fsck.k9.activity.Accounts); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { void <init>(java.lang.String,int,java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createViewFolderPendingIntent(com.fsck.k9.Account,java.lang.String,int); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureMetaStateIsNormalized(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.helper.FileHelper { java.io.File createUniqueFile(java.io.File,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts { java.util.EnumSet accountLocation(com.fsck.k9.BaseAccount); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensurePointerCountIsOneForThisAction(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createViewMessagePendingIntent(com.fsck.k9.activity.MessageReference,int); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent createViewMessagesPendingIntent(com.fsck.k9.Account,java.util.List,int); }
-keepclassmembers class com.fsck.k9.activity.ManageIdentities { void access$000(com.fsck.k9.activity.ManageIdentities,int); }
-keepclassmembers class com.fsck.k9.activity.ManageIdentities { void <init>(); }
-keepclassmembers class android.transition.Transition { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.ManageIdentities { void editItem(int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void startTLS(); }
-keepclassmembers class com.fsck.k9.helper.FileHelper { void deleteFileIfExists(java.io.File); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { int getMode(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void ensureHistorySizeIsZeroForThisAction(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.activity.ManageIdentities { void saveIdentities(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { java.lang.String getName(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { boolean startEvent(android.view.InputEvent,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.FileHelper { boolean move(java.io.File,java.io.File); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { java.lang.String getUidFromMessageId(com.fsck.k9.mail.Message); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterIntent { void <init>(android.widget.RemoteViews,int,android.content.Intent); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void createSpecialAccounts(); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { java.lang.String getHost(); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { java.lang.String getPath(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { int hashCode(); }
-keepclassmembers class com.fsck.k9.activity.ManageIdentities { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class com.fsck.k9.activity.ManageIdentities { void onBackPressed(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { com.fsck.k9.search.LocalSearch createUnreadSearch(android.content.Context,com.fsck.k9.BaseAccount); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { boolean isFlagSupported(com.fsck.k9.mail.Flag); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { int getPort(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void upgradeToTls(); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { java.lang.String toString(); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterIntent { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.transition.Transition { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.http.cookie.CookieOrigin { boolean isSecure(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void finishEvent(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent getDeleteAllPendingIntent(com.fsck.k9.Account,java.util.List,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void close(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { boolean isOpen(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void upgradeToTlsIfNecessary(); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionCreator { android.app.PendingIntent getMarkAllAsReadPendingIntent(com.fsck.k9.Account,java.util.List,int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void open(int); }
-keepclassmembers class android.content.AsyncTaskLoader$LoadTask { void <init>(android.content.AsyncTaskLoader); }
-keepclassmembers class android.transition.Transition$EpicenterCallback { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { java.util.List executeSimpleCommand(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { java.util.List executeSimpleCommand(java.lang.String,boolean); }
-keepclassmembers class android.content.AsyncTaskLoader$LoadTask { java.lang.Object doInBackground(java.lang.Void[]); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void appendEvent(java.lang.StringBuilder,int,android.view.InputEvent,boolean); }
-keepclassmembers class com.fsck.k9.helper.FileHelper { void moveRecursive(java.io.File,java.io.File); }
-keepclassmembers class com.fsck.k9.activity.Accounts { java.lang.String getVersionNumber(); }
-keepclassmembers class com.fsck.k9.activity.ManageIdentities { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void importSettings(android.content.Context); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { java.lang.String getLogId(); }
-keepclassmembers class android.content.AsyncTaskLoader$LoadTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.transition.Transition { int[] parseMatchOrder(java.lang.String); }
-keepclassmembers class android.content.AsyncTaskLoader$LoadTask { void onCancelled(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void initializeActionBar(); }
-keepclassmembers class com.fsck.k9.activity.ManageIdentities { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { boolean hasCapability(java.lang.String); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { android.view.InputEventConsistencyVerifier$KeyState findKeyState(int,int,int,boolean); }
-keepclassmembers class com.fsck.k9.activity.ManageIdentities { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { boolean isConnected(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void listAccounts(android.content.Context); }
-keepclassmembers class android.content.AsyncTaskLoader$LoadTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onAbout(); }
-keepclassmembers class com.fsck.k9.activity.ManageIdentities { void onResume(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { boolean isIdleCapable(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider$AttachmentTempFileProviderCleanupReceiver { void <init>(); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider$AttachmentTempFileProviderCleanupReceiver { void <init>(com.fsck.k9.provider.AttachmentTempFileProvider$1); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { int getIndex(java.lang.Object); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setDuration(long); }
-keepclassmembers class android.view.InputEventConsistencyVerifier { void problem(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { java.io.OutputStream getOutputStream(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider$AttachmentTempFileProviderCleanupReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setStartDelay(long); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder { com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.gifdecoder.GifDecoder,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder { com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int); }
-keepclassmembers class android.transition.Transition { android.transition.Transition setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder { java.lang.String getId(); }
-keepclassmembers class android.transition.Transition { void setMatchOrder(int[]); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void open(); }
-keepclassmembers class com.fsck.k9.helper.FileHelper { void renameOrMoveByCopying(java.io.File,java.io.File); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class android.transition.Transition { boolean isValidMatch(int); }
-keepclassmembers class com.bumptech.glide.util.MarkEnforcingInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Capabilities { void <init>(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$2 { void <init>(com.tokenautocomplete.TokenCompleteTextView,android.text.Editable); }
-keepclassmembers class android.transition.Transition { boolean alreadyContains(int[],int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Capabilities { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.helper.FileHelper { java.lang.String sanitizeFilename(java.lang.String); }
-keepclassmembers class com.bumptech.glide.util.MarkEnforcingInputStream { long getBytesToRead(long); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$2 { void run(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void acceptCertificate(java.security.cert.X509Certificate); }
-keepclassmembers class com.fsck.k9.helper.FileHelper { void touchFile(java.io.File,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void <init>(); }
-keepclassmembers class com.bumptech.glide.util.MarkEnforcingInputStream { void updateAvailableBytesAfterRead(long); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void acceptKeyDialog(int,com.fsck.k9.mail.CertificateValidationException); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { com.fsck.k9.mail.store.imap.ImapResponse readResponse(); }
-keepclassmembers class android.widget.SpellChecker { void <init>(android.widget.TextView); }
-keepclassmembers class com.bumptech.glide.util.MarkEnforcingInputStream { void mark(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { android.widget.ProgressBar access$200(com.fsck.k9.activity.setup.AccountSetupCheckSettings); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { com.fsck.k9.mail.store.imap.ImapResponse readResponse(com.fsck.k9.mail.store.imap.ImapResponseCallback); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { com.fsck.k9.Account access$300(com.fsck.k9.activity.setup.AccountSetupCheckSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void access$400(com.fsck.k9.activity.setup.AccountSetupCheckSettings,java.security.cert.X509Certificate); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { boolean access$100(com.fsck.k9.activity.setup.AccountSetupCheckSettings); }
-keepclassmembers class android.widget.SpellChecker { void resetSession(); }
-keepclassmembers class com.bumptech.glide.util.MarkEnforcingInputStream { int read(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void access$600(com.fsck.k9.activity.setup.AccountSetupCheckSettings,int,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void access$700(com.fsck.k9.activity.setup.AccountSetupCheckSettings,com.fsck.k9.mail.CertificateValidationException); }
-keepclassmembers class com.bumptech.glide.util.MarkEnforcingInputStream { int read(byte[],int,int); }
-keepclassmembers class com.bumptech.glide.util.MarkEnforcingInputStream { void reset(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void access$500(com.fsck.k9.activity.setup.AccountSetupCheckSettings,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair { void <init>(com.fsck.k9.preferences.SettingsImporter$AccountDescription,com.fsck.k9.preferences.SettingsImporter$AccountDescription,boolean); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onActivateAccount(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { boolean access$800(com.fsck.k9.activity.setup.AccountSetupCheckSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void access$900(com.fsck.k9.activity.setup.AccountSetupCheckSettings,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void actionCheckSettings(android.app.Activity,com.fsck.k9.Account,com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection); }
-keepclassmembers class com.bumptech.glide.util.MarkEnforcingInputStream { long skip(long); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onAddNewAccount(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void <init>(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$AccountDescriptionPair { void <init>(com.fsck.k9.preferences.SettingsImporter$AccountDescription,com.fsck.k9.preferences.SettingsImporter$AccountDescription,boolean,com.fsck.k9.preferences.SettingsImporter$1); }
-keepclassmembers class android.widget.SpellChecker { void setLocale(java.util.Locale); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onCheckMail(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { java.lang.String errorMessageForCertificateException(com.fsck.k9.mail.CertificateValidationException); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { java.util.List readStatusResponse(java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$AbortPolicy { void rejectedExecution(java.lang.Runnable,java.util.concurrent.ThreadPoolExecutor); }
-keepclassmembers class android.widget.SpellChecker { boolean isSessionActive(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { java.lang.String sendCommand(java.lang.String,boolean); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(int); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onClear(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onClearCommands(com.fsck.k9.Account); }
-keepclassmembers class android.widget.SpellChecker { void closeSession(); }
-keepclassmembers class java.lang.SecurityException { void <init>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onCompose(); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { java.lang.String getDialogTag(int); }
-keepclassmembers class java.lang.SecurityException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.AbstractStringBuilder { void enlargeBuffer(int); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onDeleteAccount(com.fsck.k9.Account); }
-keepclassmembers class android.widget.SpellChecker { int nextSpellCheckSpanIndex(); }
-keepclassmembers class android.app.ActivityTransitionState { void <init>(); }
-keepclassmembers class android.app.ActivityTransitionState { int addExitTransitionCoordinator(android.app.ExitTransitionCoordinator); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void handleCertificateValidationException(com.fsck.k9.mail.CertificateValidationException); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onEditPrefs(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onEditAccount(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onEmptyTrash(com.fsck.k9.Account); }
-keepclassmembers class java.lang.AbstractStringBuilder { void appendNull(); }
-keepclassmembers class javax.net.ssl.HttpsURLConnection$NoPreloadHolder { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onImport(); }
-keepclassmembers class org.apache.http.ProtocolVersion { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char[]); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void onCancel(); }
-keepclassmembers class android.widget.SpellChecker { void addSpellCheckSpan(android.text.Editable,int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void setMessage(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char[],int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void showDialogFragment(int,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onImport(android.net.Uri); }
-keepclassmembers class org.apache.http.ProtocolVersion { java.lang.String getProtocol(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onMove(com.fsck.k9.Account,boolean); }
-keepclassmembers class org.apache.http.ProtocolVersion { int getMajor(); }
-keepclassmembers class org.apache.http.ProtocolVersion { int getMinor(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(char); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(java.lang.String); }
-keepclassmembers class android.text.StaticLayout { void calculateEllipsis(int,int,float[],int,float,android.text.TextUtils$TruncateAt,int,float,android.text.TextPaint,boolean); }
-keepclassmembers class com.fsck.k9.activity.Accounts { boolean onOpenAccount(com.fsck.k9.BaseAccount); }
-keepclassmembers class android.widget.SpellChecker { void onSelectionChanged(); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void showErrorDialog(int,java.lang.Object[]); }
-keepclassmembers class org.apache.http.ProtocolVersion { int hashCode(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void append0(java.lang.CharSequence,int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void dialogCancelled(int); }
-keepclassmembers class org.apache.http.ProtocolVersion { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void doNegativeClick(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void doPositiveClick(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class org.apache.http.ProtocolVersion { boolean isComparable(org.apache.http.ProtocolVersion); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void onClick(android.view.View); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { void <clinit>(); }
-keepclassmembers class org.apache.http.ProtocolVersion { int compareToVersion(org.apache.http.ProtocolVersion); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { void <init>(android.content.Context); }
-keepclassmembers class java.lang.AbstractStringBuilder { char charAt(int); }
-keepclassmembers class android.content.IntentSender { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onRecreate(com.fsck.k9.Account); }
-keepclassmembers class android.widget.SpellChecker { void spellCheck(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void sendContinuation(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void promptForServerPasswords(java.util.List); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings { void onDestroy(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.StringIndexOutOfBoundsException indexAndLength(int); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.internal.app.AlertController$3 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void refresh(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.StringIndexOutOfBoundsException startEndAndLength(int,int); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection { void setReadTimeout(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void delete0(int,int); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { int ave(int,int,float); }
-keepclassmembers class android.content.IntentSender { void <init>(android.content.IIntentSender); }
-keepclassmembers class java.lang.AbstractStringBuilder { void deleteCharAt0(int); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$StorageProviderSetting { void <init>(); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$StorageProviderSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { int calculateColor(float); }
-keepclassmembers class org.apache.http.ProtocolVersion { boolean lessEquals(org.apache.http.ProtocolVersion); }
-keepclassmembers class android.content.IntentSender { void <clinit>(); }
-keepclassmembers class android.app.ActivityTransitionState { void onStop(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class org.apache.http.ProtocolVersion { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$StorageProviderSetting { java.lang.Object getDefaultValue(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$10 { void <init>(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class android.app.ActivityTransitionState { void onResume(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$10 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$10 { java.util.Map doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$2 { void <init>(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char[],int,int); }
-keepclassmembers class android.app.ActivityTransitionState { void clear(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void restoreAccountStats(android.os.Bundle); }
-keepclassmembers class android.app.ActivityTransitionState { boolean startExitBackTransition(android.app.Activity); }
-keepclassmembers class android.app.ActivityTransitionState { void restoreExitedViews(); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { float[] calculatePointerPosition(float); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$2 { java.lang.Boolean doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void showImportSelectionDialog(com.fsck.k9.preferences.SettingsImporter$ImportContents,android.net.Uri); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void setNonConfigurationInstance(com.fsck.k9.activity.misc.NonConfigurationInstance); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void showAccountsImportedDialog(com.fsck.k9.preferences.SettingsImporter$ImportResults,java.lang.String); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,char); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { float colorToAngle(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void insert0(int,java.lang.String); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void <init>(java.util.AbstractList,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void showSimpleDialog(int,int,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void add(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$2 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.activity.Accounts { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class java.lang.AbstractStringBuilder { int length(); }
-keepclassmembers class java.util.AbstractList$FullListIterator { boolean hasPrevious(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void move(int,int); }
-keepclassmembers class java.util.AbstractList$FullListIterator { int nextIndex(); }
-keepclassmembers class android.util.SparseArray { void <init>(); }
-keepclassmembers class java.util.AbstractList$FullListIterator { java.lang.Object previous(); }
-keepclassmembers class android.util.SparseArray { void <init>(int); }
-keepclassmembers class android.app.ActivityTransitionState { void startExitOutTransition(android.app.Activity,android.os.Bundle); }
-keepclassmembers class java.lang.AbstractStringBuilder { void replace0(int,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onCreate(android.os.Bundle); }
-keepclassmembers class android.transition.Transition { boolean isValidTarget(android.view.View); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { int getRandomColor(); }
-keepclassmembers class java.util.AbstractList$FullListIterator { int previousIndex(); }
-keepclassmembers class java.util.AbstractList$FullListIterator { void set(java.lang.Object); }
-keepclassmembers class android.transition.ChangeBounds$6 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { void init(android.util.AttributeSet,int); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int); }
-keepclassmembers class android.util.SparseArray { java.lang.Object get(int,java.lang.Object); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void onScroll(android.widget.AbsListView,int,int,int); }
-keepclassmembers class android.util.SparseArray { void delete(int); }
-keepclassmembers class android.text.StaticLayout { int getLineForVertical(int); }
-keepclassmembers class android.util.SparseArray { android.util.SparseArray clone(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void onScrollStateChanged(android.widget.AbsListView,int); }
-keepclassmembers class android.util.SparseArray { void remove(int); }
-keepclassmembers class android.text.StaticLayout { int getLineTop(int); }
-keepclassmembers class android.util.SparseArray { void removeAt(int); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.widget.ListPopupWindow$PopupScrollListener { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class android.text.StaticLayout { int getLineCount(); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { int[] normalizeColor(int); }
-keepclassmembers class android.util.SparseArray { void gc(); }
-keepclassmembers class android.text.StaticLayout { int getLineDescent(int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$3 { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.ssl.BrowserCompatHostnameVerifier { void <init>(); }
-keepclassmembers class org.apache.http.conn.ssl.BrowserCompatHostnameVerifier { void verify(java.lang.String,java.lang.String[],java.lang.String[]); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(int); }
-keepclassmembers class android.util.SparseArray { void put(int,java.lang.Object); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(java.lang.Class); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(java.lang.String); }
-keepclassmembers class android.text.StaticLayout { int getParagraphDirection(int); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void setFlags(java.util.List,java.util.Set,boolean); }
-keepclassmembers class android.text.StaticLayout { boolean getLineContainsTab(int); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore { void <init>(com.fsck.k9.mail.ssl.LocalKeyStore$1); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore { java.lang.String getCertKey(java.lang.String,int); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(int,boolean); }
-keepclassmembers class android.text.StaticLayout { int getLineStart(int); }
-keepclassmembers class android.text.StaticLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setCharAt(int,char); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.activity.Accounts { android.app.Dialog onCreateDialog(int); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore { com.fsck.k9.mail.ssl.LocalKeyStore getInstance(); }
-keepclassmembers class android.text.StaticLayout { int getTopPadding(); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore { java.lang.String getKeyStoreFilePath(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(byte[],int,int); }
-keepclassmembers class android.text.StaticLayout { int getBottomPadding(); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisCount(int); }
-keepclassmembers class android.util.SparseArray { int size(); }
-keepclassmembers class java.lang.AbstractStringBuilder { void setLength(int); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { int getColor(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(android.view.View,boolean); }
-keepclassmembers class android.text.StaticLayout { int getEllipsisStart(int); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.util.SparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.text.StaticLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.transition.Transition { java.util.ArrayList excludeObject(java.util.ArrayList,java.lang.Object,boolean); }
-keepclassmembers class android.util.SparseArray { int keyAt(int); }
-keepclassmembers class android.text.StaticLayout { void prepare(); }
-keepclassmembers class android.util.SparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class android.text.StaticLayout { void finish(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class android.transition.Transition { android.transition.Transition excludeTarget(java.lang.Class,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.text.StaticLayout { int[] nLineBreakOpportunities(java.lang.String,char[],int,int[]); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore { void setKeyStoreLocation(java.lang.String); }
-keepclassmembers class android.util.SparseArray { int indexOfKey(int); }
-keepclassmembers class android.widget.SpellChecker { boolean haveWordBoundariesChanged(android.text.Editable,int,int,int,int); }
-keepclassmembers class android.widget.Spinner$DropdownPopup$3 { void <init>(android.widget.Spinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore { void upgradeKeyStoreFile(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { void onMeasure(int,int); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class android.widget.Spinner$DropdownPopup$3 { void onDismiss(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class android.util.SparseArray { void clear(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore { void writeCertificateFile(); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetIds(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onExport(boolean,com.fsck.k9.Account); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetNames(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.String toString(); }
-keepclassmembers class android.transition.Transition { java.util.List getTargets(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int next(); }
-keepclassmembers class android.util.SparseArray { void append(int,java.lang.Object); }
-keepclassmembers class android.widget.SpellChecker { android.widget.TextView access$200(android.widget.SpellChecker); }
-keepclassmembers class android.transition.Transition { java.util.List getTargetTypes(); }
-keepclassmembers class android.widget.SpellChecker { java.lang.String access$300(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { void setFlags(java.util.Set,boolean); }
-keepclassmembers class android.widget.SpellChecker { boolean access$400(android.widget.SpellChecker); }
-keepclassmembers class android.widget.SpellChecker { android.text.method.WordIterator access$500(android.widget.SpellChecker); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.SpellChecker { int access$600(android.widget.SpellChecker); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder { boolean supportsFetchingFlags(); }
-keepclassmembers class java.lang.AbstractStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.widget.SpellChecker { android.text.style.SpellCheckSpan[] access$700(android.widget.SpellChecker); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus$1 { void <clinit>(); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class android.widget.SpellChecker { int[] access$800(android.widget.SpellChecker); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onPause(); }
-keepclassmembers class java.lang.AbstractStringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class android.widget.SpellChecker { void access$900(android.widget.SpellChecker,android.text.Editable,int,int); }
-keepclassmembers class android.util.SparseArray { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onPrepareDialog(int,android.app.Dialog); }
-keepclassmembers class android.widget.SpellChecker { void access$1000(android.widget.SpellChecker); }
-keepclassmembers class com.fsck.k9.activity.Accounts { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.transition.Transition { void captureValues(android.view.ViewGroup,boolean); }
-keepclassmembers class android.widget.SpellChecker { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavSocketFactory { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onResume(); }
-keepclassmembers class android.util.SparseArray { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.Accounts { java.lang.Object onRetainNonConfigurationInstance(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavSocketFactory { java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readBitString(); }
-keepclassmembers class java.lang.AbstractStringBuilder { int lastIndexOf(java.lang.String,int); }
-keepclassmembers class android.transition.Transition { void addViewValues(android.transition.TransitionValuesMaps,android.view.View,android.transition.TransitionValues); }
-keepclassmembers class com.larswerkman.colorpicker.ColorPicker { void setColor(int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavSocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavSocketFactory { java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$24 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.text.method.DateKeyListener { void <init>(); }
-keepclassmembers class android.text.method.DateKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.DateKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.DateKeyListener { android.text.method.DateKeyListener getInstance(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavSocketFactory { boolean isSecure(java.net.Socket); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$24 { void run(); }
-keepclassmembers class android.text.method.DateKeyListener { void <clinit>(); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader); }
-keepclassmembers class com.fsck.k9.activity.Accounts { void setProgress(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readEnumerated(); }
-keepclassmembers class java.io.BufferedReader { void close(); }
-keepclassmembers class java.io.BufferedReader { void <init>(java.io.Reader,int); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore { void addCertificate(java.lang.String,int,java.security.cert.X509Certificate); }
-keepclassmembers class android.transition.Transition { void captureHierarchy(android.view.View,boolean); }
-keepclassmembers class android.transition.Transition { void clearValues(boolean); }
-keepclassmembers class java.io.BufferedReader { int fillBuf(); }
-keepclassmembers class android.widget.Spinner$SavedState$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readBoolean(); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore { void deleteCertificate(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readGeneralizedTime(); }
-keepclassmembers class java.io.BufferedReader { boolean isClosed(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Style { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Style { void setBuilder(android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class com.fsck.k9.activity.K9PreferenceActivity$PreferenceChangeListener { void <init>(android.preference.ListPreference); }
-keepclassmembers class com.fsck.k9.activity.K9PreferenceActivity$PreferenceChangeListener { void <init>(android.preference.ListPreference,com.fsck.k9.activity.K9PreferenceActivity$1); }
-keepclassmembers class java.io.BufferedReader { int read(); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore { void setKeyStoreFile(java.io.File); }
-keepclassmembers class com.fsck.k9.activity.K9PreferenceActivity$PreferenceChangeListener { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class java.io.BufferedReader { void checkNotClosed(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <init>(boolean); }
-keepclassmembers class java.io.BufferedReader { int readChar(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { boolean get(); }
-keepclassmembers class com.fsck.k9.preferences.Settings$ColorSetting { java.lang.Object fromPrettyString(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTmailbox { void <init>(int); }
-keepclassmembers class java.io.BufferedReader { int read(char[],int,int); }
-keepclassmembers class com.fsck.k9.preferences.Settings$ColorSetting { void <init>(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <init>(); }
-keepclassmembers class com.fsck.k9.preferences.Settings$ColorSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class java.lang.ClassFormatError { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readUTCTime(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { boolean compareAndSet(boolean,boolean); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class com.fsck.k9.preferences.Settings$ColorSetting { java.lang.String toPrettyString(java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTmailbox { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$3 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void set(boolean); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView { java.lang.String getQuotedText(); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView { void addTextChangedListener(android.text.TextWatcher); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView { void setFontSizes(com.fsck.k9.FontSizes,int); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView { void setMessageContentCharacters(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$3 { com.fsck.k9.mail.filter.SignSafeOutputStream$State nextState(int); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpRequestRetryHandler { void <init>(int,boolean); }
-keepclassmembers class java.util.concurrent.atomic.AtomicBoolean { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView { void setMessageContentCursorPosition(int); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpRequestRetryHandler { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView { void setOnClickPresenter(com.fsck.k9.ui.compose.QuotedMessagePresenter); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView { void setQuotedHtml(java.lang.String,com.fsck.k9.mailstore.AttachmentResolver); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpRequestRetryHandler { boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.widget.Spinner$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView { void showOrHideQuotedText(com.fsck.k9.message.QuotedTextMode,com.fsck.k9.message.SimpleMessageFormat); }
-keepclassmembers class java.io.BufferedReader { void chompNewline(); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView { void setQuotedText(java.lang.String); }
-keepclassmembers class java.io.BufferedReader { void maybeSwallowLF(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int strToInt(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readInteger(); }
-keepclassmembers class java.io.BufferedReader { java.lang.String readLine(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readOctetString(); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { org.apache.harmony.security.asn1.ASN1Exception expected(java.lang.String); }
-keepclassmembers class android.widget.Spinner$SavedState { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readOID(); }
-keepclassmembers class android.widget.TimePickerClockDelegate$ClickActionDelegate { void <init>(android.content.Context,int); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { void access$000(com.fsck.k9.activity.NotificationDeleteConfirmation); }
-keepclassmembers class android.text.Selection$END { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { void cancelNotifications(); }
-keepclassmembers class android.text.Selection$END { void <init>(android.text.Selection$1); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { void <init>(); }
-keepclassmembers class android.transition.Transition { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { void clear(); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { android.app.Dialog createDeleteConfirmationDialog(int); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { void deleteAndFinish(); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { void extractExtras(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.transition.Transition { void setEpicenterCallback(android.transition.Transition$EpicenterCallback); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$23 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { com.android.okhttp.internal.spdy.Settings set(int,int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$23 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class android.content.IntentSender$1 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { boolean isSet(int); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { com.fsck.k9.Account getAccountFromUuid(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { android.content.Intent getIntent(android.content.Context,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.transition.Transition { void setPathMotion(android.transition.PathMotion); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { int get(int); }
-keepclassmembers class android.transition.Transition { void setPropagation(android.transition.TransitionPropagation); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { int flags(int); }
-keepclassmembers class android.transition.Transition { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.DataSet { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { android.content.Intent getIntent(android.content.Context,java.util.List); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { int getHeaderTableSize(); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils { java.util.Date parseDate(java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.DataSet { java.lang.String[] getHrefs(); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils { java.util.Date parseDate(java.lang.String,java.lang.String[],java.util.Date); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { android.app.Dialog onCreateDialog(int); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { void onPrepareDialog(int,android.app.Dialog); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.DataSet { int getMessageCount(); }
-keepclassmembers class android.transition.Transition { void setNameOverrides(android.util.ArrayMap); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { int size(); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation { void triggerDelete(); }
-keepclassmembers class java.util.AbstractMap { void <init>(); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(); }
-keepclassmembers class android.transition.Transition { void forceVisibility(int,boolean); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context); }
-keepclassmembers class android.transition.Transition { android.transition.Transition clone(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.DataSet { java.util.Map getMessageEnvelopes(); }
-keepclassmembers class android.view.MenuInflater { void <init>(android.content.Context,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountClickListener { void onClick(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { int getInitialWindowSize(int); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils { void <clinit>(); }
-keepclassmembers class java.util.AbstractMap { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.AbstractMap { boolean containsValue(java.lang.Object); }
-keepclassmembers class android.view.MenuInflater { void inflate(int,android.view.Menu); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { boolean persistValue(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { boolean isPersisted(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Settings { void merge(com.android.okhttp.internal.spdy.Settings); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter$3 { void <clinit>(); }
-keepclassmembers class java.util.AbstractMap { int hashCode(); }
-keepclassmembers class android.transition.Transition { java.lang.String toString(java.lang.String); }
-keepclassmembers class android.view.MenuInflater { void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void decodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo53 { void removeNullValuesFromEmptyColumnInMessagesTable(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.AbstractMap { boolean isEmpty(); }
-keepclassmembers class java.util.AbstractMap { void putAll(java.util.Map); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.DataSet { java.util.Map getSpecialFolderToUrl(); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void <init>(com.fsck.k9.mailstore.util.FileFactory,com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.view.MenuInflater { void registerMenu(android.view.MenuItem,android.util.AttributeSet); }
-keepclassmembers class android.view.MenuInflater { void registerMenu(android.view.SubMenu,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.DataSet { java.util.Map getUidToRead(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readString(org.apache.harmony.security.asn1.ASN1StringType); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void body(org.apache.james.mime4j.stream.BodyDescriptor,java.io.InputStream); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object getRealOwner(); }
-keepclassmembers class com.fsck.k9.message.extractors.MessagePreviewCreator { void <init>(com.fsck.k9.message.extractors.TextPartFinder,com.fsck.k9.message.extractors.PreviewTextExtractor,com.fsck.k9.message.extractors.EncryptionDetector); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void endHeader(); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object findRealOwner(java.lang.Object); }
-keepclassmembers class com.fsck.k9.message.extractors.MessagePreviewCreator { com.fsck.k9.message.extractors.PreviewResult extractText(com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void endBodyPart(); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void endMessage(); }
-keepclassmembers class android.view.MenuInflater { android.content.Context access$100(android.view.MenuInflater); }
-keepclassmembers class android.view.MenuInflater { java.lang.Class[] access$200(); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void endMultipart(); }
-keepclassmembers class java.util.AbstractMap { int size(); }
-keepclassmembers class java.util.AbstractMap { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { byte[] getEncoded(); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object[] access$300(android.view.MenuInflater); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void epilogue(java.io.InputStream); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object access$400(android.view.MenuInflater); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void field(org.apache.james.mime4j.stream.Field); }
-keepclassmembers class android.view.MenuInflater { java.lang.Class[] access$500(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { byte[] getBuffer(); }
-keepclassmembers class android.view.MenuInflater { java.lang.Object[] access$600(android.view.MenuInflater); }
-keepclassmembers class android.view.MenuInflater { void <clinit>(); }
-keepclassmembers class com.fsck.k9.message.extractors.MessagePreviewCreator { boolean hasEmptyBody(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void preamble(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void raw(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.message.extractors.MessagePreviewCreator { com.fsck.k9.message.extractors.MessagePreviewCreator newInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getOffset(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getEndOffset(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.DataSet { java.util.Map getUidToUrl(); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void startBodyPart(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int getTagOffset(); }
-keepclassmembers class android.transition.Transition { void <clinit>(); }
-keepclassmembers class com.fsck.k9.message.extractors.MessagePreviewCreator { com.fsck.k9.message.extractors.PreviewResult createPreview(com.fsck.k9.mail.Message); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { int read(); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void startMessage(); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void startHeader(); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void <init>(); }
-keepclassmembers class java.util.AbstractMap { java.lang.Object clone(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckAccountTask { void <init>(com.fsck.k9.activity.setup.AccountSetupCheckSettings,com.fsck.k9.Account,com.fsck.k9.activity.setup.AccountSetupCheckSettings$1); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { android.view.MotionEvent$PointerCoords[] createArray(int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.DataSet { java.lang.String[] getUids(); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser$PartBuilder { void startMultipart(org.apache.james.mime4j.stream.BodyDescriptor); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckAccountTask { boolean cancelled(); }
-keepclassmembers class android.view.MotionEvent$PointerCoords { void clear(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerInputStream { void readContent(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArraySet { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckAccountTask { void checkIncoming(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.FetchPartCallback { void <init>(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckAccountTask { void <init>(com.fsck.k9.activity.setup.AccountSetupCheckSettings,com.fsck.k9.Account); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArraySet { int size(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.FetchPartCallback { java.lang.Object foundLiteral(com.fsck.k9.mail.store.imap.ImapResponse,com.fsck.k9.mail.filter.FixedLengthInputStream); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArraySet { boolean remove(java.lang.Object); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArraySet { boolean add(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckAccountTask { void checkOutgoing(); }
-keepclassmembers class com.fsck.k9.K9$2 { void <init>(com.fsck.k9.K9); }
-keepclassmembers class com.fsck.k9.K9$2 { boolean debugSensitive(); }
-keepclassmembers class com.fsck.k9.K9$2 { boolean enabled(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckAccountTask { void checkServerSettings(com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArraySet { java.util.Iterator iterator(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckAccountTask { void clearCertificateErrorNotifications(com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection); }
-keepclassmembers class android.os.storage.StorageVolume$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckAccountTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.os.storage.StorageVolume$1 { android.os.storage.StorageVolume createFromParcel(android.os.Parcel); }
-keepclassmembers class android.os.storage.StorageVolume$1 { android.os.storage.StorageVolume[] newArray(int); }
-keepclassmembers class android.os.storage.StorageVolume$1 { java.lang.Object[] newArray(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckAccountTask { java.lang.Void doInBackground(com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection[]); }
-keepclassmembers class android.os.storage.StorageVolume$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.x509.AlternativeName { void <init>(boolean,byte[]); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckAccountTask { void onProgressUpdate(java.lang.Integer[]); }
-keepclassmembers class java.security.Signature { java.security.Signature getInstance(java.lang.String); }
-keepclassmembers class java.security.Signature { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckAccountTask { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$29 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.android.okhttp.HostResolver$1 { java.net.InetAddress[] getAllByName(java.lang.String); }
-keepclassmembers class com.android.okhttp.HostResolver$1 { void <init>(); }
-keepclassmembers class java.security.Signature { java.security.Signature getInstance(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$29 { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.AlternativeName { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <init>(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { android.text.method.DateTimeKeyListener getInstance(); }
-keepclassmembers class android.text.method.DateTimeKeyListener { void <clinit>(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImportExportException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImportExportException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.security.Signature { java.security.Signature getSignature(java.lang.String,java.security.Provider); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImportExportException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.webkit.WebSettings$RenderPriority { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { void <init>(java.io.InputStream,org.apache.http.conn.EofSensorWatcher); }
-keepclassmembers class android.webkit.WebSettings$RenderPriority { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { boolean isReadAllowed(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$ViewReference { void <init>(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void <init>(byte[],org.apache.harmony.security.x509.GeneralNames,java.math.BigInteger); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$7 { void <init>(int); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getCallingClassLoader(); }
-keepclassmembers class dalvik.system.VMStack { java.lang.Class getStackClass1(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void <init>(float,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { org.apache.harmony.security.x509.AuthorityKeyIdentifier decode(byte[]); }
-keepclassmembers class dalvik.system.VMStack { java.lang.Class getStackClass2(); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { int read(); }
-keepclassmembers class dalvik.system.VMStack { java.lang.ClassLoader getClosestUserClassLoader(java.lang.ClassLoader,java.lang.ClassLoader); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { int read(byte[],int,int); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$3 { void <init>(com.fsck.k9.ui.crypto.MessageCryptoHelper); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$3 { com.fsck.k9.mail.internet.MimeBodyPart processData(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe$ObjectKeyframe clone(); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { java.lang.Object getValue(); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithm(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { int read(byte[]); }
-keepclassmembers class android.animation.Keyframe$ObjectKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$3 { java.lang.Object processData(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.xml.parsers.SAXParserFactoryImpl { void <init>(); }
-keepclassmembers class org.apache.harmony.xml.parsers.SAXParserFactoryImpl { boolean getFeature(java.lang.String); }
-keepclassmembers class java.lang.RealToString$1 { java.lang.RealToString initialValue(); }
-keepclassmembers class org.apache.harmony.xml.parsers.SAXParserFactoryImpl { boolean isValidating(); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { int available(); }
-keepclassmembers class java.lang.RealToString$1 { void <init>(); }
-keepclassmembers class java.lang.RealToString$1 { java.lang.Object initialValue(); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { void close(); }
-keepclassmembers class org.apache.harmony.xml.parsers.SAXParserFactoryImpl { javax.xml.parsers.SAXParser newSAXParser(); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider tryAlgorithmWithProvider(java.security.Key,java.security.Provider$Service); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { void checkEOF(int); }
-keepclassmembers class org.apache.harmony.xml.parsers.SAXParserFactoryImpl { void setFeature(java.lang.String,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier { void <clinit>(); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class java.util.LinkedHashMap$ValueIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { void <init>(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { void init(java.io.InputStream,int,org.apache.http.params.HttpParams); }
-keepclassmembers class java.lang.Void { java.lang.Class lookupType(); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { void checkClose(); }
-keepclassmembers class java.security.Signature { void initVerify(java.security.PublicKey); }
-keepclassmembers class java.security.Signature { void initVerify(java.security.cert.Certificate); }
-keepclassmembers class org.apache.harmony.xml.parsers.SAXParserFactoryImpl { void setNamespaceAware(boolean); }
-keepclassmembers class java.security.Signature { java.lang.String getAlgorithm(); }
-keepclassmembers class java.lang.Void { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.EofSensorInputStream { void checkAbort(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource { void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int fillBuffer(); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { boolean hasBufferedData(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class java.security.Signature { boolean verify(byte[]); }
-keepclassmembers class java.net.SocketAddress { void <init>(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int read(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int read(byte[],int,int); }
-keepclassmembers class com.fsck.k9.helper.QuotedMessageHelper { void <clinit>(); }
-keepclassmembers class java.security.Signature { void update(byte[]); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int locateLF(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int readLine(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource { void close(); }
-keepclassmembers class com.fsck.k9.helper.QuotedMessageHelper { com.fsck.k9.message.InsertableHtmlContent findInsertionPoints(java.lang.String); }
-keepclassmembers class java.security.Signature { org.apache.harmony.security.fortress.Engine$SpiAndProvider access$000(java.security.Key,java.security.Provider,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$5 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,java.util.List,boolean); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int lineFromLineBuffer(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class java.security.Signature { void <clinit>(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { void access$100(android.content.Context); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { android.net.Uri createTempUriForContentUri(android.content.Context,android.net.Uri); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$5 { void execute(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { boolean deleteOldTemporaryFiles(android.content.Context); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class java.util.IllegalFormatException { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage$2 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage$2 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { int lineFromReadBuffer(org.apache.http.util.CharArrayBuffer,int); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void start(int); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray$Access { void <init>(); }
-keepclassmembers class android.view.DisplayInfo { void readFromParcel(android.os.Parcel); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startSpringback(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionInputBuffer { org.apache.http.io.HttpTransportMetrics getMetrics(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage$2 { void <init>(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { android.net.Uri getMimeTypeUri(android.net.Uri,java.lang.String); }
-keepclassmembers class java.lang.TypeNotPresentException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void startOverfling(int); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { int getKeyCode(); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { java.io.File getTempFileDirectory(android.content.Context); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { void <init>(); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { void <clinit>(); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { int getFooterInsertionPoint(); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.SearchableInfo$ActionKeyInfo { void <init>(android.os.Parcel,android.app.SearchableInfo$1); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { void appendbq(java.lang.StringBuilder,int,int); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { int getInsertionPoint(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { java.io.File getTempFileForUri(android.net.Uri,android.content.Context); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { void insertIntoQuotedFooter(java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { java.lang.String getTempFilenameForUri(android.net.Uri); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { java.lang.String getQuotedContent(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void access$000(com.fsck.k9.ui.messageview.MessageTopView); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { void insertIntoQuotedHeader(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { com.fsck.k9.ui.messageview.MessageCryptoPresenter access$100(com.fsck.k9.ui.messageview.MessageTopView); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { void appendchar(java.lang.StringBuilder,int); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { void registerFileCleanupReceiver(android.content.Context); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { void setFooterInsertionPoint(int); }
-keepclassmembers class com.fsck.k9.helper.QuotedMessageHelper { java.lang.String getBodyTextFromMessage(com.fsck.k9.mail.Part,com.fsck.k9.message.SimpleMessageFormat); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { com.fsck.k9.view.ToolableViewAnimator access$200(com.fsck.k9.ui.messageview.MessageTopView); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { java.lang.String getSenderEmailAddress(com.fsck.k9.mail.Message); }
-keepclassmembers class android.view.DisplayInfo { void getAppMetrics(android.util.DisplayMetrics,android.view.DisplayAdjustments); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { void setHeaderInsertionPoint(int); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { void appendsp(java.lang.StringBuilder,int); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { void setInsertionLocation(com.fsck.k9.message.InsertableHtmlContent$InsertionLocation); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void hideHeaderView(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void hideShowPicturesButton(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { void unregisterFileCleanupReceiver(android.content.Context); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { void setUserContent(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { void setQuotedContent(java.lang.StringBuilder); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void resetAndPrepareMessageView(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { void writeUriContentToTempFileIfNotExists(android.content.Context,android.net.Uri,java.io.File); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { java.lang.String toDebugString(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void endFling(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void setCryptoProviderIcon(android.graphics.drawable.Drawable,android.view.View); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { java.io.InputStream getContent(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void setShowDownloadButton(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { void <init>(); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent { java.lang.String toString(); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { long getContentLength(); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable { void flywheelTouch(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void setShowPicturesButtonListener(); }
-keepclassmembers class com.fsck.k9.helper.QuotedMessageHelper { java.lang.String getSentDateText(android.content.res.Resources,com.fsck.k9.mail.Message); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { boolean isRepeatable(); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { void setContentLength(long); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { java.lang.String cssStylePre(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { boolean shouldAutomaticallyLoadPictures(com.fsck.k9.Account$ShowPictures,com.fsck.k9.mail.Message); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { void setContent(java.io.InputStream); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { void <init>(libcore.reflect.ParameterizedTypeImpl,java.lang.String,libcore.reflect.ListOfTypes,java.lang.ClassLoader); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { int delete(android.net.Uri,java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { boolean shouldShowPicturesFromSender(com.fsck.k9.Account$ShowPictures,com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.helper.QuotedMessageHelper { com.fsck.k9.message.InsertableHtmlContent quoteOriginalHtmlMessage(android.content.res.Resources,com.fsck.k9.mail.Message,java.lang.String,com.fsck.k9.Account$QuoteStyle); }
-keepclassmembers class com.fsck.k9.view.MessageHeader$SavedState$1 { void <init>(); }
-keepclassmembers class android.view.DisplayInfo { void getMetricsWithSize(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder,int,int); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { java.lang.String cssStyleTheme(); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.reflect.Type[] getActualTypeArguments(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { void onTrimMemory(int); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider { java.lang.String getType(android.net.Uri); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { boolean isStreaming(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void showShowPicturesButton(); }
-keepclassmembers class org.apache.http.entity.BasicHttpEntity { void consumeContent(); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.reflect.Type getOwnerType(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void showPicturesInAllContainerViews(); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.Class getRawType(); }
-keepclassmembers class com.fsck.k9.view.K9WebViewClient { void <init>(com.fsck.k9.mailstore.AttachmentResolver); }
-keepclassmembers class com.fsck.k9.view.K9WebViewClient { void <clinit>(); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.reflect.Type getResolvedType(); }
-keepclassmembers class com.fsck.k9.view.K9WebViewClient { void <init>(com.fsck.k9.mailstore.AttachmentResolver,com.fsck.k9.view.K9WebViewClient$1); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void disableDownloadButton(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void displayViewOnLoadFinished(boolean); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.FragmentManagerImpl$6 { void <init>(android.app.FragmentManagerImpl,android.app.Fragment); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog$1 { void <init>(com.fsck.k9.activity.Accounts$ImportSelectionDialog); }
-keepclassmembers class android.text.BoringLayout$Metrics { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void enableDownloadButton(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog$1 { void onClick(android.content.DialogInterface,int,boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { com.fsck.k9.view.MessageHeader getMessageHeaderView(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void onFinishInflate(); }
-keepclassmembers class android.app.FragmentManagerImpl$6 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { int hashCode(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler { void <init>(); }
-keepclassmembers class com.fsck.k9.view.K9WebViewClient { com.fsck.k9.view.K9WebViewClient newInstance(com.fsck.k9.mailstore.AttachmentResolver); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void setAttachmentCallback(com.fsck.k9.ui.messageview.AttachmentViewCallback); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamByteArrayLoader { void <init>(); }
-keepclassmembers class libcore.reflect.ParameterizedTypeImpl { java.lang.reflect.Type getRawType(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void setHeaders(com.fsck.k9.mail.Message,com.fsck.k9.Account); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamByteArrayLoader { void <init>(java.lang.String); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void setEpicenter(android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void setLoadingProgress(int,int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$FixedEpicenterCallback { void <init>(android.app.ActivityTransitionCoordinator$1); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamByteArrayLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int); }
-keepclassmembers class com.fsck.k9.view.K9WebViewClient { void setOnPageFinishedListener(com.fsck.k9.view.MessageWebView$OnPageFinishedListener); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$KeyIterator { void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamByteArrayLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(byte[],int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void setMessageCryptoPresenter(com.fsck.k9.ui.messageview.MessageCryptoPresenter); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void setOnDownloadButtonClickListener(android.view.View$OnClickListener); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void setOnToggleFlagClickListener(android.view.View$OnClickListener); }
-keepclassmembers class org.apache.james.mime4j.io.LineReaderInputStreamAdaptor { void <init>(java.io.InputStream,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void showMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Section32Header { void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void setToLoadingState(); }
-keepclassmembers class android.widget.AbsListView$1 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class org.apache.james.mime4j.io.LineReaderInputStreamAdaptor { int doReadLine(org.apache.james.mime4j.util.ByteArrayBuffer); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$3 { void <init>(com.tokenautocomplete.TokenCompleteTextView,java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class org.apache.http.conn.ConnectTimeoutException { void <init>(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$3 { void run(); }
-keepclassmembers class org.apache.http.conn.ConnectTimeoutException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.io.LineReaderInputStreamAdaptor { boolean eof(); }
-keepclassmembers class org.apache.james.mime4j.io.LineReaderInputStreamAdaptor { boolean isUsed(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void showMessageCryptoCancelledView(com.fsck.k9.mailstore.MessageViewInfo,android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Objects { boolean equals(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.io.LineReaderInputStreamAdaptor { int read(); }
-keepclassmembers class android.view.DisplayInfo { void <init>(android.os.Parcel,android.view.DisplayInfo$1); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void showMessageCryptoErrorView(com.fsck.k9.mailstore.MessageViewInfo,android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Objects { int hashCode(java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.io.LineReaderInputStreamAdaptor { int read(byte[],int,int); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpInlineDialog$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.view.DisplayInfo { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void showMessageCryptoWarning(com.fsck.k9.mailstore.MessageViewInfo,android.graphics.drawable.Drawable,int); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpInlineDialog$3 { void <init>(com.fsck.k9.activity.compose.PgpInlineDialog); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator { void <init>(android.content.Context); }
-keepclassmembers class org.apache.james.mime4j.io.LineReaderInputStreamAdaptor { int readLine(org.apache.james.mime4j.util.ByteArrayBuffer); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView { void showMessageEncryptedButIncomplete(com.fsck.k9.mailstore.MessageViewInfo,android.graphics.drawable.Drawable); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator { void <init>(android.content.Context,android.app.ActivityManager,com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions); }
-keepclassmembers class com.fsck.k9.helper.QuotedMessageHelper { java.lang.String quoteOriginalTextMessage(android.content.res.Resources,com.fsck.k9.mail.Message,java.lang.String,com.fsck.k9.Account$QuoteStyle,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.io.LineReaderInputStreamAdaptor { long skip(long); }
-keepclassmembers class android.content.res.XmlBlock { void close(); }
-keepclassmembers class android.content.res.XmlBlock { void decOpenCountLocked(); }
-keepclassmembers class com.fsck.k9.mail.Flag { void <clinit>(); }
-keepclassmembers class android.content.res.XmlBlock { android.content.res.XmlResourceParser newParser(); }
-keepclassmembers class android.content.res.XmlBlock { void <init>(android.content.res.AssetManager,long); }
-keepclassmembers class org.apache.james.mime4j.io.LineReaderInputStreamAdaptor { java.lang.String toString(); }
-keepclassmembers class org.apache.james.mime4j.io.LineReaderInputStreamAdaptor { boolean unread(org.apache.james.mime4j.util.ByteArrayBuffer); }
-keepclassmembers class android.content.res.XmlBlock { long nativeGetStringBlock(long); }
-keepclassmembers class android.content.res.XmlBlock { long nativeCreateParseState(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeNext(long); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetName(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetLineNumber(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetText(long); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeCount(long); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { android.app.SearchableInfo getSearchableInfo(android.content.ComponentName); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeResource(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeStringValue(long,int); }
-keepclassmembers class org.apache.http.impl.io.IdentityInputStream { void <init>(org.apache.http.io.SessionInputBuffer); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeDataType(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeIndex(long,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock { int nativeGetAttributeData(long,int); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroyParseState(long); }
-keepclassmembers class android.content.res.XmlBlock { void nativeDestroy(long); }
-keepclassmembers class org.apache.http.impl.io.IdentityInputStream { int available(); }
-keepclassmembers class android.content.res.XmlBlock { int access$008(android.content.res.XmlBlock); }
-keepclassmembers class android.content.res.XmlBlock { int access$100(long); }
-keepclassmembers class android.content.res.XmlBlock { int access$200(long); }
-keepclassmembers class com.fsck.k9.mail.Flag { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { byte[] newUnpaddedByteArray(int); }
-keepclassmembers class com.fsck.k9.mail.Flag { com.fsck.k9.mail.Flag valueOf(java.lang.String); }
-keepclassmembers class org.apache.http.impl.io.IdentityInputStream { void close(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { char[] newUnpaddedCharArray(int); }
-keepclassmembers class android.content.res.XmlBlock { int access$600(long); }
-keepclassmembers class org.apache.http.impl.io.IdentityInputStream { int read(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator { int getMaxSize(android.app.ActivityManager); }
-keepclassmembers class com.fsck.k9.mail.Flag { com.fsck.k9.mail.Flag[] values(); }
-keepclassmembers class org.apache.http.impl.io.IdentityInputStream { int read(byte[],int,int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { int[] newUnpaddedIntArray(int); }
-keepclassmembers class java.util.UUID { void <init>(long,long); }
-keepclassmembers class android.content.res.XmlBlock { int access$800(long,int); }
-keepclassmembers class android.content.res.XmlBlock { int access$700(long,int); }
-keepclassmembers class java.util.UUID { void init(); }
-keepclassmembers class android.content.res.XmlBlock { int access$900(long,int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { boolean[] newUnpaddedBooleanArray(int); }
-keepclassmembers class android.view.ViewOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator { boolean isLowMemoryDevice(android.app.ActivityManager); }
-keepclassmembers class android.content.res.XmlBlock { int access$1000(long,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock { int access$1100(long,int); }
-keepclassmembers class com.android.internal.util.ArrayUtils { long[] newUnpaddedLongArray(int); }
-keepclassmembers class android.view.ViewOverlay { android.view.ViewGroup getOverlayView(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { float[] newUnpaddedFloatArray(int); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator { int getBitmapPoolSize(); }
-keepclassmembers class android.content.res.XmlBlock { void access$1500(long); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedObjectArray(int); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator { java.lang.String toMb(int); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.MemorySizeCalculator { int getMemoryCacheSize(); }
-keepclassmembers class android.app.ISearchManager$Stub$Proxy { android.content.ComponentName getGlobalSearchActivity(); }
-keepclassmembers class android.content.res.XmlBlock { void access$1600(android.content.res.XmlBlock); }
-keepclassmembers class android.view.ViewOverlay { boolean isEmpty(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] newUnpaddedArray(java.lang.Class,int); }
-keepclassmembers class android.os.AsyncTask$2 { void <init>(android.os.AsyncTask); }
-keepclassmembers class android.os.AsyncTask$2 { java.lang.Object call(); }
-keepclassmembers class java.util.UUID { java.util.UUID randomUUID(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { void <init>(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { java.net.URI getURI(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { org.apache.http.ProtocolVersion getProtocolVersion(); }
-keepclassmembers class com.fsck.k9.Identity { java.lang.String getDescription(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { java.lang.Object[] emptyArray(java.lang.Class); }
-keepclassmembers class java.util.UUID { java.util.UUID makeUuid(byte[],int); }
-keepclassmembers class com.fsck.k9.Identity { void <init>(); }
-keepclassmembers class com.fsck.k9.Identity { java.lang.String getName(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { org.apache.http.RequestLine getRequestLine(); }
-keepclassmembers class java.util.UUID { java.util.UUID fromString(java.lang.String); }
-keepclassmembers class com.fsck.k9.Identity { java.lang.String getReplyTo(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { void setURI(java.net.URI); }
-keepclassmembers class com.fsck.k9.Identity { java.lang.String getEmail(); }
-keepclassmembers class com.fsck.k9.Identity { boolean getSignatureUse(); }
-keepclassmembers class com.fsck.k9.helper.QuotedMessageHelper { java.lang.String stripSignatureForHtmlMessage(java.lang.String); }
-keepclassmembers class com.fsck.k9.Identity { java.lang.String getSignature(); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest); }
-keepclassmembers class com.fsck.k9.Identity { void setDescription(java.lang.String); }
-keepclassmembers class com.fsck.k9.Identity { void setEmail(java.lang.String); }
-keepclassmembers class org.apache.http.client.methods.HttpRequestBase { void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger); }
-keepclassmembers class com.fsck.k9.Identity { void setReplyTo(java.lang.String); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void <init>(); }
-keepclassmembers class com.fsck.k9.Identity { void setName(java.lang.String); }
-keepclassmembers class com.fsck.k9.Identity { void setSignature(java.lang.String); }
-keepclassmembers class com.fsck.k9.Identity { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.Identity { void setSignatureUse(boolean); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void editTags(org.htmlcleaner.TagInfo); }
-keepclassmembers class java.util.UUID { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.regex.Matcher { void <init>(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void formTags(org.htmlcleaner.TagInfo); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class java.util.UUID { int hashCode(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$25 { void <init>(com.fsck.k9.controller.MessagingController,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.UUID { java.lang.String toString(); }
-keepclassmembers class java.util.regex.Matcher { void appendEvaluated(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class java.io.IOException { void <init>(); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$25 { void act(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,java.util.List); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.String); }
-keepclassmembers class java.io.IOException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$12 { void <init>(com.fsck.k9.mailstore.LocalStore); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$12 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher reset(java.lang.CharSequence,int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$12 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.preferences.Settings$SettingsDescription { void <init>(java.lang.Object); }
-keepclassmembers class com.fsck.k9.preferences.Settings$SettingsDescription { java.lang.Object fromPrettyString(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$MoreMessages { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.Settings$SettingsDescription { java.lang.Object getDefaultValue(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$MoreMessages { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$MoreMessages { com.fsck.k9.mailstore.LocalFolder$MoreMessages fromDatabaseName(java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.Settings$SettingsDescription { java.lang.String toPrettyString(java.lang.Object); }
-keepclassmembers class com.android.okhttp.ConnectionPool$2 { void run(); }
-keepclassmembers class com.fsck.k9.preferences.Settings$SettingsDescription { java.lang.String toString(java.lang.Object); }
-keepclassmembers class com.android.okhttp.ConnectionPool$2 { void <init>(com.android.okhttp.ConnectionPool); }
-keepclassmembers class android.preference.Preference { boolean onKey(android.view.View,int,android.view.KeyEvent); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$MoreMessages { java.lang.String getDatabaseName(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher usePattern(java.util.regex.Pattern); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { java.lang.String getQuoteColor(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$MoreMessages { com.fsck.k9.mailstore.LocalFolder$MoreMessages[] values(); }
-keepclassmembers class com.fsck.k9.helper.QuotedMessageHelper { java.lang.String stripSignatureForTextMessage(java.lang.String); }
-keepclassmembers class android.content.ContentProviderNative { void <init>(); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { android.text.Spanned htmlToSpanned(java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { java.lang.String htmlToText(java.lang.String); }
-keepclassmembers class android.graphics.Interpolator { void <init>(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$1 { void <init>(int); }
-keepclassmembers class java.util.regex.Matcher { void resetForInput(); }
-keepclassmembers class java.util.regex.Matcher { java.util.regex.Matcher region(int,int); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { java.lang.String htmlifyMessageFooter(); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { java.lang.String htmlifyMessageHeader(); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { void linkifyText(java.lang.String,java.lang.StringBuffer); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate$4 { void <init>(android.widget.TimePickerSpinnerDelegate); }
-keepclassmembers class java.util.regex.Matcher { java.lang.StringBuffer appendTail(java.lang.StringBuffer); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { org.htmlcleaner.TagInfo getTagInfo(java.lang.String); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceFirst(java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { java.lang.String simpleTextToHtml(java.lang.String); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void groupingTags(org.htmlcleaner.TagInfo); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String replaceAll(java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { java.lang.String textToHtml(java.lang.String); }
-keepclassmembers class java.util.regex.Matcher { boolean find(int); }
-keepclassmembers class org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl { void <clinit>(); }
-keepclassmembers class android.graphics.Interpolator { android.graphics.Interpolator$Result timeToValues(float[]); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Interpolator { android.graphics.Interpolator$Result timeToValues(int,float[]); }
-keepclassmembers class java.util.regex.Matcher { boolean find(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.graphics.Interpolator { long nativeConstructor(int,int); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAt(); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory { java.lang.String buildHeader(); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory { int hashCode(); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.regex.Matcher { boolean matches(); }
-keepclassmembers class android.graphics.Interpolator { int nativeTimeToValues(long,int,float[]); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { java.lang.String textToHtmlFragment(java.lang.String); }
-keepclassmembers class org.apache.http.client.methods.HttpEntityEnclosingRequestBase { void <init>(); }
-keepclassmembers class android.preference.Preference { void onDependencyChanged(android.preference.Preference,boolean); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter { java.lang.String wrapMessageContent(java.lang.CharSequence); }
-keepclassmembers class org.apache.http.client.methods.HttpEntityEnclosingRequestBase { org.apache.http.HttpEntity getEntity(); }
-keepclassmembers class org.apache.http.client.methods.HttpEntityEnclosingRequestBase { void setEntity(org.apache.http.HttpEntity); }
-keepclassmembers class android.preference.Preference { void onParentChanged(android.preference.Preference,boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper { void <init>(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$30 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper { com.bumptech.glide.load.engine.Resource getBitmapResource(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper { com.bumptech.glide.load.engine.Resource getGifResource(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper { int getSize(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$30 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.http.message.HeaderGroup { void <init>(); }
-keepclassmembers class com.android.internal.util.ArrayUtils { void <clinit>(); }
-keepclassmembers class org.apache.http.message.HeaderGroup { void clear(); }
-keepclassmembers class java.lang.IllegalAccessException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.message.HeaderGroup { void addHeader(org.apache.http.Header); }
-keepclassmembers class java.util.regex.Matcher { void ensureMatch(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDataLoadProvider { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class java.lang.IllegalAccessException { void <init>(); }
-keepclassmembers class org.apache.http.message.HeaderGroup { void updateHeader(org.apache.http.Header); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDataLoadProvider { com.bumptech.glide.load.ResourceDecoder getSourceDecoder(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDataLoadProvider { com.bumptech.glide.load.ResourceDecoder getCacheDecoder(); }
-keepclassmembers class org.apache.http.message.HeaderGroup { void setHeaders(org.apache.http.Header[]); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDataLoadProvider { com.bumptech.glide.load.Encoder getSourceEncoder(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDataLoadProvider { com.bumptech.glide.load.ResourceEncoder getEncoder(); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void interactiveTags(org.htmlcleaner.TagInfo); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void <init>(org.apache.harmony.security.x509.DistributionPointName,org.apache.harmony.security.x509.ReasonFlags,org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.http.conn.params.ConnRouteParams { org.apache.http.conn.routing.HttpRoute getForcedRoute(org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.helper.SimpleTextWatcher { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x501.Name$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.SimpleTextWatcher { void afterTextChanged(android.text.Editable); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.helper.SimpleTextWatcher { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { void <init>(); }
-keepclassmembers class java.util.regex.Matcher { int end(); }
-keepclassmembers class org.apache.http.conn.params.ConnRouteParams { java.net.InetAddress getLocalAddress(org.apache.http.params.HttpParams); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { com.bumptech.glide.util.ExceptionCatchingInputStream obtain(java.io.InputStream); }
-keepclassmembers class org.apache.http.message.HeaderGroup { org.apache.http.Header[] getHeaders(java.lang.String); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String group(); }
-keepclassmembers class java.util.regex.Matcher { int end(int); }
-keepclassmembers class java.util.regex.Matcher { java.lang.String group(int); }
-keepclassmembers class org.apache.http.conn.params.ConnRouteParams { void <clinit>(); }
-keepclassmembers class java.util.ComparableTimSort { void <init>(java.lang.Object[]); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { int available(); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { void close(); }
-keepclassmembers class java.util.regex.Matcher { int groupCount(); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { java.io.IOException getException(); }
-keepclassmembers class org.apache.http.message.HeaderGroup { org.apache.http.Header getFirstHeader(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifHeaderParserPool { void <init>(); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { void mark(int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifHeaderParserPool { com.bumptech.glide.gifdecoder.GifHeaderParser obtain(byte[]); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { int read(); }
-keepclassmembers class java.util.regex.Matcher { int start(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.DistributionPointName access$000(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { int read(byte[]); }
-keepclassmembers class android.widget.AbsListView$SavedState { java.lang.String toString(); }
-keepclassmembers class java.util.ComparableTimSort { void sort(java.lang.Object[]); }
-keepclassmembers class java.util.regex.Matcher { int start(int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.ReasonFlags access$100(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifHeaderParserPool { void release(com.bumptech.glide.gifdecoder.GifHeaderParser); }
-keepclassmembers class java.util.regex.Matcher { void closeImpl(long); }
-keepclassmembers class java.util.ComparableTimSort { void sort(java.lang.Object[],int,int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { org.apache.harmony.security.x509.GeneralNames access$200(org.apache.harmony.security.x509.DistributionPoint); }
-keepclassmembers class java.util.regex.Matcher { boolean findImpl(long,java.lang.String,int,int[]); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { int read(byte[],int,int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint { void <clinit>(); }
-keepclassmembers class java.util.regex.Matcher { boolean lookingAtImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { boolean findNextImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { boolean matchesImpl(long,java.lang.String,int[]); }
-keepclassmembers class java.util.regex.Matcher { int groupCountImpl(long); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { void release(); }
-keepclassmembers class java.util.regex.Matcher { long openImpl(long); }
-keepclassmembers class java.util.regex.Matcher { void setInputImpl(long,java.lang.String,int,int); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { void reset(); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { void setInputStream(java.io.InputStream); }
-keepclassmembers class java.util.regex.Matcher { void useAnchoringBoundsImpl(long,boolean); }
-keepclassmembers class java.util.regex.Matcher { void useTransparentBoundsImpl(long,boolean); }
-keepclassmembers class org.apache.http.message.HeaderGroup { org.apache.http.Header[] getAllHeaders(); }
-keepclassmembers class com.bumptech.glide.util.ExceptionCatchingInputStream { long skip(long); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void mediaTags(org.htmlcleaner.TagInfo); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <init>(android.os.Parcel,android.widget.AbsListView$1); }
-keepclassmembers class org.apache.http.message.HeaderGroup { boolean containsHeader(java.lang.String); }
-keepclassmembers class java.util.ComparableTimSort { void binarySort(java.lang.Object[],int,int,int); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm,boolean,android.text.TextDirectionHeuristics$1); }
-keepclassmembers class android.widget.AbsListView$SavedState { void <clinit>(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicInternal { boolean defaultIsRtl(); }
-keepclassmembers class com.github.amlcurran.showcaseview.StandardShowcaseDrawer { void <init>(android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$4 { void <init>(com.fsck.k9.mailstore.LocalStore); }
-keepclassmembers class org.apache.http.message.HeaderGroup { org.apache.http.HeaderIterator iterator(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$4 { java.lang.Integer doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.http.message.HeaderGroup { org.apache.http.HeaderIterator iterator(java.lang.String); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$4 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(); }
-keepclassmembers class com.github.amlcurran.showcaseview.StandardShowcaseDrawer { void drawShowcase(android.graphics.Bitmap,float,float,float); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect); }
-keepclassmembers class java.util.ComparableTimSort { int countRunAndMakeAscending(java.lang.Object[],int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.github.amlcurran.showcaseview.StandardShowcaseDrawer { void drawToCanvas(android.graphics.Canvas,android.graphics.Bitmap); }
-keepclassmembers class android.text.util.Linkify$2 { void <init>(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class com.github.amlcurran.showcaseview.StandardShowcaseDrawer { void erase(android.graphics.Bitmap); }
-keepclassmembers class com.github.amlcurran.showcaseview.StandardShowcaseDrawer { float getBlockedRadius(); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.github.amlcurran.showcaseview.StandardShowcaseDrawer { int getShowcaseWidth(); }
-keepclassmembers class com.github.amlcurran.showcaseview.StandardShowcaseDrawer { int getShowcaseHeight(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$KeySetView { void <init>(java.util.concurrent.ConcurrentHashMap,java.lang.Object); }
-keepclassmembers class com.github.amlcurran.showcaseview.StandardShowcaseDrawer { void setBackgroundColour(int); }
-keepclassmembers class com.github.amlcurran.showcaseview.StandardShowcaseDrawer { void setShowcaseColour(int); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetEncoder { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState); }
-keepclassmembers class java.util.ComparableTimSort { void reverseRange(java.lang.Object[],int,int); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean action(int,android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { void <init>(android.graphics.drawable.ClipDrawable$ClipState,android.graphics.drawable.ClipDrawable,android.content.res.Resources); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetEncoder { void <init>(com.beetstra.jutf7.UTF7StyleCharset,com.beetstra.jutf7.Base64Util,boolean); }
-keepclassmembers class java.util.ComparableTimSort { int minRunLength(int); }
-keepclassmembers class java.util.ComparableTimSort { void pushRun(int,int); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetEncoder { void encodeBase64(char,java.nio.ByteBuffer); }
-keepclassmembers class java.util.ComparableTimSort { void mergeCollapse(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$KeySetView { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable$NinePatchState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { void <init>(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetEncoder { void unshift(java.nio.ByteBuffer,char); }
-keepclassmembers class java.util.ComparableTimSort { void mergeForceCollapse(); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { float specialValue(); }
-keepclassmembers class java.lang.StringToReal$StringExponentPair { void <init>(java.lang.StringToReal$1); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void metadataTags(org.htmlcleaner.TagInfo); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$2 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.ComparableTimSort { void mergeAt(int); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { boolean canApplyTheme(); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$2 { com.fsck.k9.mail.filter.SignSafeOutputStream$State nextState(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void <init>(java.lang.Object); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { boolean casNext(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetEncoder { java.nio.charset.CoderResult encodeLoop(java.nio.CharBuffer,java.nio.ByteBuffer); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$2 { void <init>(com.fsck.k9.ui.messageview.AttachmentController,java.io.File); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$2 { void run(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { int getChangingConfigurations(); }
-keepclassmembers class libcore.io.DeleteOnExit { libcore.io.DeleteOnExit getInstance(); }
-keepclassmembers class libcore.io.DeleteOnExit { void <init>(); }
-keepclassmembers class android.graphics.drawable.ClipDrawable$ClipState { boolean canConstantState(); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { void <init>(java.lang.String,int); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void phrasingTags(org.htmlcleaner.TagInfo); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$1 { void <clinit>(); }
-keepclassmembers class libcore.io.DeleteOnExit { void addFile(java.lang.String); }
-keepclassmembers class android.text.method.LinkMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetEncoder { java.nio.charset.CoderResult implFlush(java.nio.ByteBuffer); }
-keepclassmembers class java.util.ComparableTimSort { int gallopLeft(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.io.DeleteOnExit { void run(); }
-keepclassmembers class java.net.AddressCache$AddressCacheKey { int hashCode(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void tryCancel(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack$SNode { void <clinit>(); }
-keepclassmembers class com.beetstra.jutf7.UTF7StyleCharsetEncoder { void implReset(); }
-keepclassmembers class android.text.method.LinkMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.LinkMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.transition.ChangeBounds$4 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.text.method.LinkMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void <init>(); }
-keepclassmembers class android.view.ViewOutlineProvider$3 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class android.text.method.LinkMovementMethod { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.ConnectionSecurityAdapter { void <init>(android.content.Context,int,com.fsck.k9.activity.setup.ConnectionSecurityHolder[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$18 { void <init>(com.fsck.k9.mailstore.LocalStore,java.io.InputStream,java.io.InputStream); }
-keepclassmembers class android.content.res.AssetFileDescriptor$AutoCloseInputStream { void <init>(android.content.res.AssetFileDescriptor); }
-keepclassmembers class java.util.ComparableTimSort { int gallopRight(java.lang.Comparable,java.lang.Object[],int,int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.ConnectionSecurityAdapter { com.fsck.k9.activity.setup.ConnectionSecurityAdapter get(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.setup.ConnectionSecurityAdapter { com.fsck.k9.activity.setup.ConnectionSecurityAdapter get(android.content.Context,com.fsck.k9.mail.ConnectionSecurity[]); }
-keepclassmembers class android.content.res.AssetFileDescriptor$AutoCloseInputStream { int read(byte[],int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$18 { void close(); }
-keepclassmembers class android.widget.QuickContactBadge { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.setup.ConnectionSecurityAdapter { int getConnectionSecurityPosition(com.fsck.k9.mail.ConnectionSecurity); }
-keepclassmembers class android.widget.QuickContactBadge { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.content.res.AssetFileDescriptor$AutoCloseInputStream { int read(byte[]); }
-keepclassmembers class android.widget.QuickContactBadge { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.ComparableTimSort { void mergeLo(int,int,int,int); }
-keepclassmembers class android.widget.QuickContactBadge { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.android.internal.app.AlertController$2 { void <init>(com.android.internal.app.AlertController,android.view.View); }
-keepclassmembers class android.widget.QuickContactBadge { void drawableStateChanged(); }
-keepclassmembers class android.widget.QuickContactBadge { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.QuickContactBadge { void drawableHotspotChanged(float,float); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { java.lang.String decode(byte[],char[],int,int); }
-keepclassmembers class android.widget.QuickContactBadge { boolean isAssigned(); }
-keepclassmembers class android.animation.LayoutTransition$2 { void <init>(android.animation.LayoutTransition,android.view.View); }
-keepclassmembers class android.animation.LayoutTransition$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { void <init>(); }
-keepclassmembers class android.widget.QuickContactBadge { void assignContactFromEmail(java.lang.String,boolean); }
-keepclassmembers class android.widget.QuickContactBadge { void assignContactFromEmail(java.lang.String,boolean,android.os.Bundle); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$KitKatDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.QuickContactBadge { void onContactUriChanged(); }
-keepclassmembers class android.support.v4.content.res.ResourcesCompatApi21 { android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.activity.K9ActivityCommon { void <init>(android.app.Activity); }
-keepclassmembers class android.widget.QuickContactBadge { void onClick(android.view.View); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { long countBytes(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.activity.K9ActivityCommon { com.fsck.k9.activity.K9ActivityCommon newInstance(android.app.Activity); }
-keepclassmembers class com.fsck.k9.activity.K9ActivityCommon { void setLanguage(android.content.Context,java.lang.String); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { void encode(byte[],int,java.lang.String); }
-keepclassmembers class android.widget.QuickContactBadge { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965VersionAttributeHandler { void <init>(); }
-keepclassmembers class android.widget.QuickContactBadge { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965VersionAttributeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965VersionAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.nio.charset.ModifiedUtf8 { byte[] encode(java.lang.String); }
-keepclassmembers class android.widget.QuickContactBadge { void access$100(android.widget.QuickContactBadge); }
-keepclassmembers class android.widget.QuickContactBadge { android.net.Uri access$002(android.widget.QuickContactBadge,android.net.Uri); }
-keepclassmembers class com.fsck.k9.activity.K9ActivityCommon { void preDispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965VersionAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class com.fsck.k9.activity.K9ActivityCommon { void setupGestureDetector(com.fsck.k9.activity.misc.SwipeGestureDetector$OnSwipeGestureListener); }
-keepclassmembers class android.widget.QuickContactBadge { void <clinit>(); }
-keepclassmembers class android.text.util.Linkify$1 { void <init>(); }
-keepclassmembers class android.text.util.Linkify$1 { boolean acceptMatch(java.lang.CharSequence,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatApi22 { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.ComparableTimSort { void mergeHi(int,int,int,int); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { void <clinit>(); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$4 { void <init>(com.android.internal.app.AlertController$AlertParams,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { android.support.v4.app.NotificationManagerCompat from(android.content.Context); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { int access$000(); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void put(java.lang.String,org.htmlcleaner.TagInfo); }
-keepclassmembers class android.app.ExitTransitionCoordinator$5 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void scriptingTags(org.htmlcleaner.TagInfo); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { java.util.Set getEnabledListenerPackages(android.content.Context); }
-keepclassmembers class android.app.ExitTransitionCoordinator$5 { void handleMessage(android.os.Message); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void semanticFlowTags(org.htmlcleaner.TagInfo); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { void pushSideChannelQueue(android.support.v4.app.NotificationManagerCompat$Task); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri readFrom(android.os.Parcel); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { java.lang.String getName(); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { java.lang.String toString(); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { java.lang.String getValue(); }
-keepclassmembers class android.net.Uri$StringUri { int findSchemeSeparator(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { void cancel(int); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { boolean useSideChannelForNotification(android.app.Notification); }
-keepclassmembers class android.net.Uri$StringUri { int findFragmentSeparator(); }
-keepclassmembers class android.net.Uri$StringUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { void cancel(java.lang.String,int); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { boolean equals(java.lang.Object); }
-keepclassmembers class android.net.Uri$StringUri { boolean isHierarchical(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { void notify(java.lang.String,int,android.app.Notification); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseScheme(); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void registerHandler(int,org.apache.harmony.dalvik.ddmc.ChunkHandler); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getScheme(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat { void notify(int,android.app.Notification); }
-keepclassmembers class org.apache.http.message.BasicNameValuePair { int hashCode(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getSsp(); }
-keepclassmembers class android.text.method.DialerKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class android.text.method.DialerKeyListener { void <init>(); }
-keepclassmembers class org.htmlcleaner.SpecialEntities$1 { void <init>(boolean,boolean); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class android.text.method.DialerKeyListener { android.text.method.DialerKeyListener getInstance(); }
-keepclassmembers class android.text.method.DialerKeyListener { int getInputType(); }
-keepclassmembers class android.text.method.DialerKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseSsp(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getAuthorityPart(); }
-keepclassmembers class android.text.method.DialerKeyListener { void <clinit>(); }
-keepclassmembers class java.util.ComparableTimSort { java.lang.Object[] ensureCapacity(int); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void registrationComplete(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getEncodedAuthority(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getAuthority(); }
-keepclassmembers class android.net.Uri$StringUri { java.util.List getPathSegments(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$PathPart getPathPart(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { void <init>(byte[]); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getPath(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { org.apache.harmony.security.x509.SubjectKeyIdentifier decode(byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectKeyIdentifier { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.http.impl.auth.RFC2617Scheme { void parseChallenge(org.apache.http.util.CharArrayBuffer,int,int); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.DdmServer { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.auth.RFC2617Scheme { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getEncodedQuery(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getQueryPart(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseQuery(); }
-keepclassmembers class org.apache.http.impl.auth.RFC2617Scheme { java.lang.String getParameter(java.lang.String); }
-keepclassmembers class org.apache.http.impl.auth.RFC2617Scheme { java.util.Map getParameters(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String getQuery(); }
-keepclassmembers class org.apache.http.impl.auth.RFC2617Scheme { java.lang.String getRealm(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Part getFragmentPart(); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext$1 { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext$1 { void <init>(com.android.org.conscrypt.AbstractSessionContext); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseFragment(); }
-keepclassmembers class javax.net.ssl.SSLContextSpi { void <init>(); }
-keepclassmembers class org.htmlcleaner.Html5TagProvider { void tableTags(org.htmlcleaner.TagInfo); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parseAuthority(java.lang.String,int); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String toString(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void <init>(java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13 { void addAttachmentView(com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void <init>(java.io.OutputStream,boolean,int); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13 { void dismissWaitingForAttachmentDialog(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13 { void performSendAfterChecks(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13 { void removeAttachmentView(com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13 { void performSaveAfterChecks(); }
-keepclassmembers class android.net.Uri$StringUri { java.lang.String parsePath(java.lang.String,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void <init>(java.io.Writer,boolean,int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$FairSync { boolean writerShouldBlock(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13 { void showMissingAttachmentsPartialMessageWarning(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$FairSync { boolean readerShouldBlock(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$FairSync { void <init>(); }
-keepclassmembers class android.net.Uri$StringUri { android.net.Uri$Builder buildUpon(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13 { void showPickAttachmentDialog(int); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13 { void showWaitingForAttachmentDialog(com.fsck.k9.activity.compose.AttachmentPresenter$WaitingAction); }
-keepclassmembers class org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder { void <init>(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.String limit(int,int); }
-keepclassmembers class android.net.Uri$StringUri { void <init>(java.lang.String,android.net.Uri$1); }
-keepclassmembers class org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder { void parseContentType(org.apache.james.mime4j.stream.Field); }
-keepclassmembers class android.widget.CompoundButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.CompoundButton { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13 { void updateAttachmentView(com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class android.widget.CompoundButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.CompoundButton { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void initDefaultEncoder(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch find(int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$8 { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isLatinLetter(char); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void setError(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.CharSequence trimAfterFirstMatch(java.util.regex.Pattern,java.lang.CharSequence); }
-keepclassmembers class org.apache.http.impl.client.TunnelRefusedException { void <init>(java.lang.String,org.apache.http.HttpResponse); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$8 { com.fsck.k9.mail.filter.SignSafeOutputStream$State nextState(int); }
-keepclassmembers class android.widget.CompoundButton { void toggle(); }
-keepclassmembers class android.widget.CompoundButton { boolean isChecked(); }
-keepclassmembers class android.widget.CompoundButton { boolean performClick(); }
-keepclassmembers class android.widget.CompoundButton { void setChecked(boolean); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void appendLocked(java.lang.String,int,int); }
-keepclassmembers class org.apache.http.impl.client.TunnelRefusedException { org.apache.http.HttpResponse getResponse(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean isInvalidPunctuationSymbol(char); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void handleMessage(android.os.Message); }
-keepclassmembers class de.cketti.safecontentresolver.SafeContentResolver { void <init>(android.content.Context); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractMatch(java.lang.CharSequence,int); }
-keepclassmembers class android.widget.CompoundButton { void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener); }
-keepclassmembers class com.fsck.k9.K9$NotificationQuickDelete { void <clinit>(); }
-keepclassmembers class android.widget.CompoundButton { void setButtonDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.Filter$ResultsHandler { void <init>(android.widget.Filter,android.widget.Filter$1); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch extractInnerMatch(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { void <init>(java.lang.String,boolean,java.net.Socket); }
-keepclassmembers class de.cketti.safecontentresolver.SafeContentResolver { java.io.InputStream openInputStream(android.net.Uri); }
-keepclassmembers class com.fsck.k9.K9$NotificationQuickDelete { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.K9$NotificationQuickDelete { com.fsck.k9.K9$NotificationQuickDelete valueOf(java.lang.String); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushBytesLocked(); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void <init>(); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { android.view.MotionEvent$PointerProperties[] createArray(int); }
-keepclassmembers class android.view.MotionEvent$PointerProperties { void clear(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okhttp.internal.spdy.SpdyConnection$Builder protocol(com.android.okhttp.Protocol); }
-keepclassmembers class android.widget.CompoundButton { void applyButtonTint(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flushLocked(); }
-keepclassmembers class org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder { org.apache.james.mime4j.stream.Field addField(org.apache.james.mime4j.stream.RawField); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okhttp.Protocol access$000(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool { void <init>(com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$1); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okhttp.internal.spdy.SpdyConnection build(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch parseAndVerify(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okhttp.internal.spdy.PushObserver access$100(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okhttp.internal.spdy.IncomingStreamHandler access$300(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.CompoundButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool { com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock obtain(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { java.lang.String access$400(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { boolean access$200(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okio.BufferedSource access$500(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Builder { com.android.okio.BufferedSink access$600(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool { void offer(com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock); }
-keepclassmembers class com.fsck.k9.service.CoreService$1 { void <init>(com.fsck.k9.service.CoreService,java.lang.Runnable,java.lang.Integer,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,boolean); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingLeft(); }
-keepclassmembers class android.widget.CompoundButton { int getHorizontalOffsetForDrawables(); }
-keepclassmembers class android.widget.CompoundButton { int getCompoundPaddingRight(); }
-keepclassmembers class com.fsck.k9.service.CoreService$1 { void run(); }
-keepclassmembers class com.fsck.k9.message.SimpleMessageBuilder { void <init>(android.content.Context,com.fsck.k9.mail.internet.MessageIdGenerator,com.fsck.k9.mail.BoundaryGenerator); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$WaitingAction { void <clinit>(); }
-keepclassmembers class android.widget.CompoundButton { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.tokenautocomplete.HintSpan { void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void flush(); }
-keepclassmembers class com.fsck.k9.message.SimpleMessageBuilder { com.fsck.k9.message.SimpleMessageBuilder newInstance(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType { void <clinit>(); }
-keepclassmembers class com.fsck.k9.message.SimpleMessageBuilder { void buildMessageInternal(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$WaitingAction { com.fsck.k9.activity.compose.AttachmentPresenter$WaitingAction valueOf(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder { org.apache.james.mime4j.stream.BodyDescriptor build(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$WaitingAction { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.message.SimpleMessageBuilder { void buildMessageOnActivityResult(int,android.content.Intent); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$WaitingAction { com.fsck.k9.activity.compose.AttachmentPresenter$WaitingAction[] values(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.BaseMovementMethod { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompatGingerbread { android.app.Notification add(android.app.Notification,android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,android.app.PendingIntent); }
-keepclassmembers class org.apache.james.mime4j.dom.address.AddressList { void <init>(java.util.List,boolean); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType { boolean hasAlpha(); }
-keepclassmembers class com.fsck.k9.preferences.Settings$InvalidSettingValueException { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder { org.apache.james.mime4j.stream.BodyDescriptorBuilder newChild(); }
-keepclassmembers class android.widget.CompoundButton { int[] onCreateDrawableState(int); }
-keepclassmembers class android.widget.CompoundButton { void drawableStateChanged(); }
-keepclassmembers class org.apache.james.mime4j.dom.address.AddressList { org.apache.james.mime4j.dom.address.MailboxList flatten(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.stream.FallbackBodyDescriptorBuilder { void reset(); }
-keepclassmembers class android.widget.CompoundButton { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.transition.TransitionValues { void <init>(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent); }
-keepclassmembers class org.apache.james.mime4j.dom.address.AddressList { java.lang.Object get(int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void print(int); }
-keepclassmembers class org.apache.james.mime4j.dom.address.AddressList { org.apache.james.mime4j.dom.address.Address get(int); }
-keepclassmembers class android.widget.CompoundButton { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.transition.TransitionValues { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.dom.address.AddressList { int size(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void println(); }
-keepclassmembers class android.transition.TransitionValues { int hashCode(); }
-keepclassmembers class android.transition.TransitionValues { java.lang.String toString(); }
-keepclassmembers class android.widget.CompoundButton { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.view.View$7 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.CompoundButton { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class libcore.net.url.FileHandler { void <init>(); }
-keepclassmembers class libcore.net.url.FileHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class libcore.net.url.FileHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.animation.LayoutTransition$3 { void <init>(android.animation.LayoutTransition,android.animation.Animator,int,long,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.widget.CompoundButton { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.DefaultFieldParser { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.DefaultFieldParser { void <init>(); }
-keepclassmembers class libcore.net.url.FileHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class android.animation.LayoutTransition$3 { void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void println(int); }
-keepclassmembers class com.android.okio.Util { void checkOffsetAndCount(long,long,long); }
-keepclassmembers class com.android.okio.Util { short reverseBytesShort(short); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { void write(java.lang.String,int,int); }
-keepclassmembers class com.android.okio.Util { int reverseBytesInt(int); }
-keepclassmembers class org.apache.james.mime4j.field.DefaultFieldParser { org.apache.james.mime4j.dom.field.ParsedField parse(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.james.mime4j.field.DefaultFieldParser { org.apache.james.mime4j.dom.field.ParsedField parse(java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getMovementMetaState(android.text.Spannable,android.view.KeyEvent); }
-keepclassmembers class java.lang.IllegalAccessError { void <init>(); }
-keepclassmembers class java.lang.IllegalAccessError { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.util.FastPrintWriter { java.io.PrintWriter append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class java.io.FilterInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.io.FilterInputStream { int available(); }
-keepclassmembers class com.android.okio.Util { void sneakyRethrow(java.lang.Throwable); }
-keepclassmembers class com.android.okio.Util { void <clinit>(); }
-keepclassmembers class java.io.FilterInputStream { void mark(int); }
-keepclassmembers class com.android.okio.Util { void sneakyThrow2(java.lang.Throwable); }
-keepclassmembers class java.io.FilterInputStream { void close(); }
-keepclassmembers class android.text.TextDirectionHeuristics { int isRtlText(int); }
-keepclassmembers class java.io.FilterInputStream { int read(); }
-keepclassmembers class java.io.FilterInputStream { void reset(); }
-keepclassmembers class java.io.FilterInputStream { int read(byte[],int,int); }
-keepclassmembers class android.text.TextDirectionHeuristics { int isRtlTextOrFormat(int); }
-keepclassmembers class android.text.TextDirectionHeuristics { int access$200(int); }
-keepclassmembers class android.text.TextDirectionHeuristics { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTname_addr { void <init>(int); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder { void <init>(com.bumptech.glide.load.ResourceDecoder); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTname_addr { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class android.text.TextDirectionHeuristics { int access$100(int); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder { com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int); }
-keepclassmembers class java.io.FilterInputStream { long skip(long); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(android.view.View); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder { com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean apply(android.view.View); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { boolean apply(java.lang.Object); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class android.view.View$MatchLabelForPredicate { int access$902(android.view.View$MatchLabelForPredicate,int); }
-keepclassmembers class java.util.Stack { void <init>(); }
-keepclassmembers class android.provider.Settings$NameValueTable { android.net.Uri getUriFor(android.net.Uri,java.lang.String); }
-keepclassmembers class java.util.Stack { java.lang.Object peek(); }
-keepclassmembers class java.util.Stack { boolean empty(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { void <init>(); }
-keepclassmembers class java.util.Stack { java.lang.Object pop(); }
-keepclassmembers class java.util.Stack { java.lang.Object push(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { java.lang.String access$100(int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { void decrementBitmapOfSize(java.lang.Integer,android.graphics.Bitmap$Config); }
-keepclassmembers class java.io.PushbackInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key findBestKey(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key,int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$24 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$24 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.view.MenuInflater$MenuState { void <init>(android.view.MenuInflater,android.view.Menu); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.view.MenuInflater$MenuState { void readGroup(android.util.AttributeSet); }
-keepclassmembers class java.io.PushbackInputStream { int available(); }
-keepclassmembers class java.io.PushbackInputStream { void close(); }
-keepclassmembers class android.view.MenuInflater$MenuState { void resetGroup(); }
-keepclassmembers class android.view.MenuInflater$MenuState { void readItem(android.util.AttributeSet); }
-keepclassmembers class java.io.PushbackInputStream { int read(); }
-keepclassmembers class java.util.Collections$2 { void <init>(); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getTopLine(android.widget.TextView); }
-keepclassmembers class java.io.PushbackInputStream { int read(byte[],int,int); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerWidth(android.widget.TextView); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getBottomLine(android.widget.TextView); }
-keepclassmembers class com.bumptech.glide.load.resource.drawable.GlideDrawable { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { java.lang.String getBitmapString(int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getInnerHeight(android.widget.TextView); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { boolean hasNext(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { com.android.i18n.phonenumbers.PhoneNumberMatch next(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { android.graphics.Bitmap$Config[] getInConfigs(android.graphics.Bitmap$Config); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getCharacterWidth(android.widget.TextView); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsLeft(android.widget.TextView); }
-keepclassmembers class android.text.InputFilter$LengthFilter { void <init>(int); }
-keepclassmembers class java.io.PushbackInputStream { java.io.IOException streamClosed(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { java.util.NavigableMap getSizesForConfig(android.graphics.Bitmap$Config); }
-keepclassmembers class android.text.InputFilter$LengthFilter { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher { java.lang.Object next(); }
-keepclassmembers class java.io.PushbackInputStream { long skip(long); }
-keepclassmembers class android.text.method.BaseMovementMethod { int getScrollBoundsRight(android.widget.TextView); }
-keepclassmembers class android.view.MenuInflater$MenuState { char getShortcut(java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLeft(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class java.io.PushbackInputStream { void unread(byte[],int,int); }
-keepclassmembers class android.view.MenuInflater$MenuState { void setItem(android.view.MenuItem); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollRight(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { int getSize(android.graphics.Bitmap); }
-keepclassmembers class java.io.PushbackInputStream { void unread(int); }
-keepclassmembers class java.io.PushbackInputStream { void mark(int); }
-keepclassmembers class java.io.PushbackInputStream { void reset(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Sub { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { java.lang.String logBitmap(android.graphics.Bitmap); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { void put(android.graphics.Bitmap); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int,byte[]); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Sub { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollUp(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { byte[] getEncoded(); }
-keepclassmembers class java.util.UnknownFormatConversionException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.auth.AuthSchemeRegistry { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { android.graphics.Bitmap removeLast(); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollDown(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class org.apache.http.auth.AuthSchemeRegistry { void register(java.lang.String,org.apache.http.auth.AuthSchemeFactory); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.MenuItem addItem(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy { java.lang.String toString(); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.SubMenu addSubMenuItem(); }
-keepclassmembers class org.apache.http.auth.AuthSchemeRegistry { org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { java.security.PublicKey getPublicKey(); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileResource { void <init>(java.io.File); }
-keepclassmembers class android.view.MenuInflater$MenuState { boolean hasAddedItem(); }
-keepclassmembers class java.util.UnknownFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class android.view.MenuInflater$MenuState { java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]); }
-keepclassmembers class android.app.Notification$InboxStyle { void <init>(android.app.Notification$Builder); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { java.security.PublicKey generateKeyForAlgorithm(java.security.spec.KeySpec,java.lang.String); }
-keepclassmembers class android.app.Notification$InboxStyle { android.app.Notification$InboxStyle setBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <init>(org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],int,byte[],org.apache.harmony.security.x509.SubjectPublicKeyInfo$1); }
-keepclassmembers class android.app.Notification$InboxStyle { void addExtras(android.os.Bundle); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollPageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.app.Notification$InboxStyle { android.app.Notification$InboxStyle setSummaryText(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$InboxStyle { android.app.Notification$InboxStyle addLine(java.lang.CharSequence); }
-keepclassmembers class android.view.MenuInflater$MenuState { android.view.ActionProvider access$000(android.view.MenuInflater$MenuState); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$100(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class android.app.Notification$InboxStyle { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { byte[] access$200(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { int access$300(org.apache.harmony.security.x509.SubjectPublicKeyInfo); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollTop(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo { void <clinit>(); }
-keepclassmembers class android.transition.TransitionSet { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader$Field { com.fsck.k9.mail.internet.MimeHeader$Field newNameValueField(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollBottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader$Field { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.transition.TransitionSet { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.content.IntentSender$SendIntentException { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader$Field { com.fsck.k9.mail.internet.MimeHeader$Field newRawField(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { void <init>(java.lang.Object[],int,int); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader$Field { java.lang.String getName(); }
-keepclassmembers class dalvik.system.SocketTagger { void <init>(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setOrdering(int); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader$Field { java.lang.String getRaw(); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { boolean hasNext(); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.concurrent.Semaphore$Sync { void <init>(int); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader$Field { java.lang.String getValue(); }
-keepclassmembers class dalvik.system.SocketTagger { void tag(java.net.Socket); }
-keepclassmembers class java.util.concurrent.Semaphore$Sync { int nonfairTryAcquireShared(int); }
-keepclassmembers class dalvik.system.SocketTagger { void untag(java.net.Socket); }
-keepclassmembers class android.text.method.BaseMovementMethod { boolean scrollLineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector { void animateSnapTo(int); }
-keepclassmembers class java.util.concurrent.Semaphore$Sync { boolean tryReleaseShared(int); }
-keepclassmembers class java.util.concurrent.CopyOnWriteArrayList$CowIterator { java.lang.Object next(); }
-keepclassmembers class org.apache.http.impl.DefaultHttpResponseFactory { void <init>(org.apache.http.ReasonPhraseCatalog); }
-keepclassmembers class android.app.Notification$InboxStyle { void populateBigContentView(android.app.Notification); }
-keepclassmembers class dalvik.system.SocketTagger { dalvik.system.SocketTagger get(); }
-keepclassmembers class dalvik.system.SocketTagger { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.DefaultHttpResponseFactory { void <init>(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTransition(android.transition.Transition); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String normalizeNumber(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader$Field { boolean hasRawData(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader$Field { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector { int crossfadeColor(int,int,float); }
-keepclassmembers class android.content.res.ColorStateList$1 { void <init>(); }
-keepclassmembers class android.transition.TransitionSet { int getTransitionCount(); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector { void init(); }
-keepclassmembers class android.content.res.ColorStateList$1 { android.content.res.ColorStateList createFromParcel(android.os.Parcel); }
-keepclassmembers class org.apache.http.impl.DefaultHttpResponseFactory { org.apache.http.HttpResponse newHttpResponse(org.apache.http.StatusLine,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition getTransitionAt(int); }
-keepclassmembers class java.net.URI$1 { void <init>(); }
-keepclassmembers class java.net.URI$1 { boolean isRetained(char); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setDuration(long); }
-keepclassmembers class android.content.res.ColorStateList$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector { void onProgressChanged(android.widget.SeekBar,int,boolean); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setStartDelay(long); }
-keepclassmembers class org.apache.http.impl.DefaultHttpResponseFactory { java.util.Locale determineLocale(org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$23 { void <init>(com.fsck.k9.mailstore.LocalFolder,long); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(android.view.View); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$23 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$23 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector { void onStartTrackingTouch(android.widget.SeekBar); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(java.lang.String); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector { void onStopTrackingTouch(android.widget.SeekBar); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addTarget(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class org.apache.http.impl.cookie.BasicMaxAgeHandler { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SequenceOf { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.http.impl.cookie.BasicMaxAgeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$3 { void <init>(com.fsck.k9.mailstore.LocalStore); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector { void setCryptoStatusListener(com.fsck.k9.view.CryptoModeSelector$CryptoStatusSelectedListener); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$3 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$3 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String nextAT(); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector { void setCryptoStatus(com.fsck.k9.view.CryptoModeSelector$CryptoModeSelectorState); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(android.view.View,boolean); }
-keepclassmembers class android.text.Html { android.text.Spanned fromHtml(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(java.lang.String,boolean); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(java.lang.Class,boolean); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition excludeTarget(int,boolean); }
-keepclassmembers class android.graphics.Path$Direction { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.animation.LayoutTransition$5 { void <init>(android.animation.LayoutTransition,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.transition.TransitionSet { void setPathMotion(android.transition.PathMotion); }
-keepclassmembers class android.graphics.Path$Direction { void <clinit>(); }
-keepclassmembers class android.transition.TransitionSet { void forceVisibility(int,boolean); }
-keepclassmembers class android.animation.LayoutTransition$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String quotedAV(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation { void <clinit>(); }
-keepclassmembers class android.telephony.PhoneNumberUtils { java.lang.String convertKeypadLettersToDigits(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$4 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,java.util.List); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation { com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation[] values(); }
-keepclassmembers class org.apache.james.mime4j.io.MaxLineLimitException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String hexAV(); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.TranscoderRegistry { void <clinit>(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ForwardingNode { void <init>(java.util.concurrent.ConcurrentHashMap$Node[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$4 { void execute(); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.TranscoderRegistry { com.bumptech.glide.load.resource.transcode.ResourceTranscoder get(java.lang.Class,java.lang.Class); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.TranscoderRegistry { void <init>(); }
-keepclassmembers class com.fsck.k9.helper.MailTo { void <init>(com.fsck.k9.mail.Address[],com.fsck.k9.mail.Address[],com.fsck.k9.mail.Address[],java.lang.String,java.lang.String); }
-keepclassmembers class android.transition.TransitionSet { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.TransitionSet { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ForwardingNode { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.lang.String escapedAV(); }
-keepclassmembers class com.fsck.k9.helper.MailTo { void <clinit>(); }
-keepclassmembers class android.transition.TransitionSet { void capturePropagationValues(android.transition.TransitionValues); }
-keepclassmembers class com.bumptech.glide.module.ManifestParser { com.bumptech.glide.module.GlideModule parseModule(java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.MailTo { java.lang.String getFirstParameterValue(com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper,java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.MailTo { boolean isMailTo(android.net.Uri); }
-keepclassmembers class com.bumptech.glide.module.ManifestParser { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.TranscoderRegistry { void register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder); }
-keepclassmembers class com.fsck.k9.helper.MailTo { com.fsck.k9.helper.MailTo parse(android.net.Uri); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$14 { void <init>(com.fsck.k9.controller.MessagingController,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.Account); }
-keepclassmembers class com.bumptech.glide.module.ManifestParser { java.util.List parse(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$14 { void run(); }
-keepclassmembers class com.fsck.k9.helper.MailTo { com.fsck.k9.mail.Address[] toAddressArray(java.util.List); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { char getEscaped(); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub$Proxy { java.lang.String getString(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.transition.TransitionSet { void setEpicenterCallback(android.transition.Transition$EpicenterCallback); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { char getUTF8(); }
-keepclassmembers class android.transition.TransitionSet { java.lang.String toString(java.lang.String); }
-keepclassmembers class java.net.URLConnection$DefaultContentHandler { void <init>(); }
-keepclassmembers class com.fsck.k9.helper.MailTo { java.lang.String toCommaSeparatedString(java.util.List); }
-keepclassmembers class java.lang.ClassCastException { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.FetchBodyCallback { java.lang.Object foundLiteral(com.fsck.k9.mail.store.imap.ImapResponse,com.fsck.k9.mail.filter.FixedLengthInputStream); }
-keepclassmembers class java.lang.ClassCastException { void <init>(java.lang.String); }
-keepclassmembers class android.transition.TransitionSet { android.transition.TransitionSet clone(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.FetchBodyCallback { void <init>(java.util.Map); }
-keepclassmembers class android.widget.TextView$SavedState$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.helper.MailTo { com.fsck.k9.mail.Address[] getBcc(); }
-keepclassmembers class com.fsck.k9.helper.MailTo { java.lang.String getBody(); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition clone(); }
-keepclassmembers class com.fsck.k9.helper.MailTo { com.fsck.k9.mail.Address[] getCc(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addListener(android.transition.Transition$TransitionListener); }
-keepclassmembers class com.fsck.k9.helper.MailTo { java.lang.String getSubject(); }
-keepclassmembers class com.fsck.k9.helper.MailTo { com.fsck.k9.mail.Address[] getTo(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManager$Stub$Proxy { int addClient(android.view.accessibility.IAccessibilityManagerClient,int); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { int getByte(int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(android.view.View); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(java.lang.Class); }
-keepclassmembers class android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask { java.lang.Integer doInBackground(java.lang.Void[]); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(java.lang.String); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition addTarget(int); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setStartDelay(long); }
-keepclassmembers class android.transition.TransitionSet { android.transition.Transition setDuration(long); }
-keepclassmembers class org.apache.harmony.security.x509.DNParser { java.util.List parse(); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { java.lang.String getRealm(); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { int hashCode(); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { java.lang.String getScheme(); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Challenge { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$35 { void run(); }
-keepclassmembers class java.math.BitLevel { int bitLength(java.math.BigInteger); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$35 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy { void <init>(java.lang.String,int); }
-keepclassmembers class java.math.BitLevel { boolean nonZeroDroppedBits(int,int[]); }
-keepclassmembers class android.provider.ContactsContract$Data { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$37 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy { void <init>(java.lang.String,int,com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$1); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$37 { void run(); }
-keepclassmembers class org.htmlcleaner.Serializer$HeadlessTagNode { void <init>(org.htmlcleaner.Serializer,org.htmlcleaner.TagNode); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftLeftOneBit(java.math.BigInteger); }
-keepclassmembers class java.math.BitLevel { void shiftLeftOneBit(int[],int[],int); }
-keepclassmembers class org.htmlcleaner.Serializer$HeadlessTagNode { void <init>(org.htmlcleaner.Serializer,org.htmlcleaner.TagNode,org.htmlcleaner.Serializer$1); }
-keepclassmembers class android.speech.tts.TextToSpeech$Connection$SetupConnectionAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.math.BitLevel { java.math.BigInteger shiftRight(java.math.BigInteger,int); }
-keepclassmembers class java.util.Date { void <init>(); }
-keepclassmembers class java.util.Date { void <init>(int,int,int); }
-keepclassmembers class java.util.Date { void <init>(int,int,int,int,int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void <init>(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { boolean err(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.Viewable$Text { void <init>(com.fsck.k9.mail.Part); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { int read(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { void readBitmap(); }
-keepclassmembers class java.util.Date { void <init>(int,int,int,int,int,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler { void <init>(com.fsck.k9.activity.Accounts); }
-keepclassmembers class java.math.BitLevel { boolean shiftRight(int[],int,int[],int,int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void onAllReferencesReleased(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler { void access$400(com.fsck.k9.activity.Accounts$AccountsHandler); }
-keepclassmembers class java.util.Date { void <init>(long); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void dispose(boolean); }
-keepclassmembers class java.util.Date { void <init>(java.lang.String); }
-keepclassmembers class java.util.Date { boolean after(java.util.Date); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler { void setViewTitle(); }
-keepclassmembers class android.telephony.PhoneNumberUtils { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void onCorruption(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation { void <init>(com.bumptech.glide.load.Transformation,com.bumptech.glide.load.Transformation); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { java.lang.String getLabel(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteSession getThreadSession(); }
-keepclassmembers class java.util.Date { boolean before(java.util.Date); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation); }
-keepclassmembers class java.util.Date { java.lang.Object clone(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { int readBlock(); }
-keepclassmembers class java.util.Date { int compareTo(java.util.Date); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler { void accountSizeChanged(com.fsck.k9.Account,long,long); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteSession createSession(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int getThreadDefaultConnectionFlags(boolean); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler { void dataChanged(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation { com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperTransformation { java.lang.String getId(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler { void progress(int); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler { void progress(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { boolean isMainThread(); }
-keepclassmembers class java.util.Date { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.TreeMap$MapIterator { void <init>(java.util.TreeMap,java.util.TreeMap$Node); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler { void refreshTitle(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void beginTransaction(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler { void workingAccount(com.fsck.k9.Account,int); }
-keepclassmembers class java.util.TreeMap$MapIterator { boolean hasNext(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { int[] readColorTable(int); }
-keepclassmembers class java.util.TreeMap$MapIterator { java.util.TreeMap$Node stepForward(); }
-keepclassmembers class java.net.PlainServerSocketImpl { void <init>(); }
-keepclassmembers class org.apache.http.HttpHost { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { boolean canReverse(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void start(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void reverse(); }
-keepclassmembers class java.net.PlainServerSocketImpl { void create(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void beginTransaction(android.database.sqlite.SQLiteTransactionListener,boolean); }
-keepclassmembers class org.apache.http.HttpHost { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimationDrawableTransition { void stop(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.ConnectionInfo { void <init>(); }
-keepclassmembers class org.apache.http.HttpHost { void <init>(org.apache.http.HttpHost); }
-keepclassmembers class org.apache.http.HttpHost { void <init>(java.lang.String); }
-keepclassmembers class java.util.Date { long getTime(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void endTransaction(); }
-keepclassmembers class org.apache.http.HttpHost { java.lang.String getHostName(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$9 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.http.HttpHost { int getPort(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { void readContents(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void setTransactionSuccessful(); }
-keepclassmembers class org.apache.http.HttpHost { java.lang.String toURI(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$9 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class org.apache.http.HttpHost { java.lang.String getSchemeName(); }
-keepclassmembers class com.fsck.k9.Account$1 { void <clinit>(); }
-keepclassmembers class org.apache.http.HttpHost { java.lang.String toHostString(); }
-keepclassmembers class java.util.Date { int getYear(); }
-keepclassmembers class android.content.IntentFilter$AuthorityEntry { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Date { int hashCode(); }
-keepclassmembers class android.graphics.PointF$1 { void <init>(); }
-keepclassmembers class java.util.Date { int parse(java.lang.String,java.lang.String[]); }
-keepclassmembers class org.apache.http.HttpHost { java.lang.String toString(); }
-keepclassmembers class android.content.IntentFilter$AuthorityEntry { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.http.HttpHost { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { void <init>(android.content.Context); }
-keepclassmembers class java.util.Date { java.lang.IllegalArgumentException parseError(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatKitKat { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.http.HttpHost { int hashCode(); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { android.text.method.TextKeyListener$Capitalize[] values(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { void readGraphicControlExt(); }
-keepclassmembers class java.util.Date { long parse(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int,android.database.DatabaseErrorHandler); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.method.TextKeyListener$Capitalize { void <clinit>(); }
-keepclassmembers class android.content.IntentFilter$AuthorityEntry { boolean match(android.content.IntentFilter$AuthorityEntry); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.content.res.Resources { int selectDefaultTheme(int,int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase$CursorFactory); }
-keepclassmembers class android.content.res.Resources { int selectSystemTheme(int,int,int,int,int,int); }
-keepclassmembers class android.content.IntentFilter$AuthorityEntry { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { boolean access$300(com.fsck.k9.view.FoldableLinearLayout); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory); }
-keepclassmembers class android.content.res.Resources { android.content.res.ConfigurationBoundResourceCache getAnimatorCache(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { void readHeader(); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { boolean access$302(com.fsck.k9.view.FoldableLinearLayout,boolean); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { android.widget.LinearLayout access$400(com.fsck.k9.view.FoldableLinearLayout); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { boolean deleteDatabase(java.io.File); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { void initialiseInnerViews(); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { void migrateChildrenToContainer(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { void readLSD(); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { void readNetscapeExt(); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { void processAttributes(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { void setTint(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.widget.ListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { void reset(); }
-keepclassmembers class android.widget.TimePicker$AbstractTimePickerDelegate { void setCurrentLocale(java.util.Locale); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatBase { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { void skip(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { int readShort(); }
-keepclassmembers class android.widget.TimePicker$AbstractTimePickerDelegate { void <init>(android.widget.TimePicker,android.content.Context); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void open(); }
-keepclassmembers class android.content.res.Resources { android.content.res.Resources getSystem(); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { void addView(android.view.View); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { void skipImageData(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { void clear(); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { void onFinishInflate(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { com.bumptech.glide.gifdecoder.GifHeader parseHeader(); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void openInner(); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence getText(int); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.ListView { int getMaxScrollAmount(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeaderParser { com.bumptech.glide.gifdecoder.GifHeaderParser setData(byte[]); }
-keepclassmembers class android.widget.ListView { void adjustViewsUpOrDown(); }
-keepclassmembers class android.content.res.Resources { libcore.icu.NativePluralRules getPluralRule(); }
-keepclassmembers class android.content.res.Resources { java.lang.CharSequence getQuantityText(int,int); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout { void updateFoldedState(boolean,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void <init>(); }
-keepclassmembers class android.os.ResultReceiver$MyResultReceiver { void <init>(android.os.ResultReceiver); }
-keepclassmembers class android.widget.ListView { void addHeaderView(android.view.View,java.lang.Object,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { boolean hasNationalNumberPattern(); }
-keepclassmembers class android.content.res.Resources { int attrForQuantityCode(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getNationalNumberPattern(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setNationalNumberPattern(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int getVersion(); }
-keepclassmembers class android.content.res.Resources { java.lang.String stringForQuantityCode(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { java.lang.String getPossibleNumberPattern(); }
-keepclassmembers class android.content.res.Resources { java.lang.String getString(int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void setVersion(int); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.util.ArrayList getProviders(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setExampleNumber(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc setPossibleNumberPattern(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.security.Provider getProvider(java.lang.String); }
-keepclassmembers class android.widget.ListView { int getHeaderViewsCount(); }
-keepclassmembers class android.content.res.Resources { java.lang.String getQuantityString(int,int); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void initServiceInfo(java.security.Provider); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.widget.ListView { void addFooterView(android.view.View,java.lang.Object,boolean); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { int insertProviderAt(java.security.Provider,int); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void appendServiceLocked(java.lang.String,java.security.Provider$Service); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.sqlite.SQLiteStatement compileStatement(java.lang.String); }
-keepclassmembers class android.widget.ListView { void addFooterView(android.view.View); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { java.lang.String findEditTable(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.util.ArrayList getServices(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { java.security.Provider$Service getSecureRandomService(); }
-keepclassmembers class android.widget.ListView { int getFooterViewsCount(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void setNeedRefresh(); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { int getCacheVersion(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.fortress.Services { void <clinit>(); }
-keepclassmembers class android.widget.ListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.widget.ListView { android.widget.ListAdapter getAdapter(); }
-keepclassmembers class java.util.Date { void appendTwoDigits(java.lang.StringBuilder,int); }
-keepclassmembers class java.util.Date { long UTC(int,int,int,int,int,int); }
-keepclassmembers class java.util.Date { java.lang.String toString(); }
-keepclassmembers class java.util.Date { int zone(java.lang.String); }
-keepclassmembers class java.util.Date { int compareTo(java.lang.Object); }
-keepclassmembers class android.widget.ListView { void resetList(); }
-keepclassmembers class java.util.Date { void <clinit>(); }
-keepclassmembers class android.widget.ListView { boolean showingTopFadingEdge(); }
-keepclassmembers class android.widget.ListView { void clearRecycledState(java.util.ArrayList); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class android.view.animation.Animation$Description { void <init>(); }
-keepclassmembers class android.view.animation.Animation$Description { android.view.animation.Animation$Description parseValue(android.util.TypedValue); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.widget.ListView { boolean showingBottomFadingEdge(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$21 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$21 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageExtractorLoader { void <clinit>(); }
-keepclassmembers class android.widget.ListView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageExtractorLoader { void deliverResult(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageExtractorLoader { void deliverResult(java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageExtractorLoader { boolean isCreatedFor(com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.ui.crypto.MessageCryptoAnnotations); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { void <init>(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageExtractorLoader { void <init>(android.content.Context,com.fsck.k9.mail.Message,com.fsck.k9.ui.crypto.MessageCryptoAnnotations); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseFormatToken(int); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinker { void loadLibrary(android.content.Context,java.lang.String); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinker { void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.lang.String getFormatSpecifierText(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { char advance(); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageExtractorLoader { com.fsck.k9.mailstore.MessageViewInfo loadInBackground(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.UnknownFormatConversionException unknownFormatConversionException(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int peek(); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageExtractorLoader { java.lang.Object loadInBackground(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addConditionWaiter(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void <init>(java.util.concurrent.locks.AbstractQueuedSynchronizer); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { void <clinit>(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseArgumentIndexAndFlags(java.util.Formatter$FormatToken); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageExtractorLoader { void onStartLoading(); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.Resources { int getColor(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.ViewCompat$SDK16 { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.Cursor rawQuery(java.lang.String,java.lang.String[]); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.ViewCompat$SDK16 { void setBackground(android.view.View,android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parsePrecision(java.util.Formatter$FormatToken); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseWidth(java.util.Formatter$FormatToken,int); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { void <init>(java.lang.String,org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void doSignalAll(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.widget.ListView { void fillGap(boolean); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int nextInt(); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void unlinkCancelledWaiters(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int failNextInt(); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { int access$000(java.util.Formatter$FormatSpecifierParser); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signal(); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { void <init>(java.lang.String,org.apache.james.mime4j.dom.address.Mailbox); }
-keepclassmembers class android.widget.ListView { android.view.View fillDown(int,int); }
-keepclassmembers class java.util.Formatter$FormatSpecifierParser { java.util.Formatter$FormatToken parseConversionType(java.util.Formatter$FormatToken); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void signalAll(); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { void <init>(org.apache.james.mime4j.dom.address.DomainList,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { void doAddMailboxesTo(java.util.List); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$1); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { long insert(java.lang.String,java.lang.String,android.content.ContentValues); }
-keepclassmembers class javax.net.ssl.DefaultSSLSocketFactory { void <init>(java.lang.String); }
-keepclassmembers class android.content.res.Resources { int getInteger(int); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker { void add(android.graphics.Bitmap); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpSignOnlyDialog$2 { void <init>(com.fsck.k9.activity.compose.PgpSignOnlyDialog); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker { void remove(android.graphics.Bitmap); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { java.lang.String getAddress(); }
-keepclassmembers class javax.net.ssl.DefaultSSLSocketFactory { java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpSignOnlyDialog$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { int checkInterruptWhileWaiting(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { java.lang.String getLocalPart(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$2 { void <init>(int); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { java.lang.String getName(); }
-keepclassmembers class android.widget.ListView { android.view.View fillUp(int,int); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { java.lang.String getDomain(); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { int hashCode(); }
-keepclassmembers class android.content.res.Resources { float getFloat(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void reportInterruptAfterWait(int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { long replace(java.lang.String,java.lang.String,android.content.ContentValues); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { void await(); }
-keepclassmembers class android.widget.AbsSpinner$SavedState$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getAnimation(int); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Mailbox { org.apache.james.mime4j.dom.address.DomainList getRoute(); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject { long awaitNanos(long); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser getXml(int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromTop(int); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String); }
-keepclassmembers class java.text.SimpleDateFormat { void validatePattern(java.lang.String); }
-keepclassmembers class org.apache.http.util.EntityUtils { byte[] toByteArray(org.apache.http.HttpEntity); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromMiddle(int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$33 { void run(); }
-keepclassmembers class android.widget.ListView { void fillAboveAndBelow(android.view.View,int); }
-keepclassmembers class android.content.res.Resources { java.io.InputStream openRawResource(int,android.util.TypedValue); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$33 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String,java.text.DateFormatSymbols); }
-keepclassmembers class android.widget.ListView { android.view.View fillFromSelection(int,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { void validatePatternCharacter(char); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.util.Locale); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.Context,int); }
-keepclassmembers class android.content.res.Resources { void getValue(int,android.util.TypedValue,boolean); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.String defaultPattern(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheAdapter { void <init>(); }
-keepclassmembers class java.text.SimpleDateFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$2 { void <init>(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class android.widget.ListView { int getBottomSelectionPixel(int,int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$2 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,int,float); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheAdapter { java.io.File get(com.bumptech.glide.load.Key); }
-keepclassmembers class java.text.SimpleDateFormat { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheAdapter { void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer); }
-keepclassmembers class android.widget.ListView { int getTopSelectionPixel(int,int,int); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheAdapter { void delete(com.bumptech.glide.load.Key); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.ViewCompat { void postOnAnimation(android.view.View,java.lang.Runnable); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.ViewCompat { void setBackground(android.view.View,android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$2 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.ViewCompat { void setLayerType(android.view.View,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { void <init>(com.fsck.k9.mail.store.StoreConfig,com.fsck.k9.mail.ssl.TrustedSocketFactory,android.net.ConnectivityManager); }
-keepclassmembers class android.content.res.Resources { android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class android.widget.ListView { android.view.View moveSelection(android.view.View,android.view.View,int,int,int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int delete(java.lang.String,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.transition.TransitionValuesMaps { void <init>(); }
-keepclassmembers class android.content.res.Resources { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics); }
-keepclassmembers class android.content.res.Resources { void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo); }
-keepclassmembers class org.apache.commons.logging.LogFactory { java.util.Hashtable createFactoryStore(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.lang.String access$100(com.fsck.k9.mail.store.imap.ImapStore); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.lang.String access$1000(com.fsck.k9.mail.store.imap.ImapStore); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer formatImpl(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition,java.util.List); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.lang.String access$1002(com.fsck.k9.mail.store.imap.ImapStore,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.lang.String access$1102(com.fsck.k9.mail.store.imap.ImapStore,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { int access$200(com.fsck.k9.mail.store.imap.ImapStore); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.ConnectionSecurity access$300(com.fsck.k9.mail.store.imap.ImapStore); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.AuthType access$400(com.fsck.k9.mail.store.imap.ImapStore); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.lang.String access$600(com.fsck.k9.mail.store.imap.ImapStore); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.lang.String access$700(com.fsck.k9.mail.store.imap.ImapStore); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.lang.String access$500(com.fsck.k9.mail.store.imap.ImapStore); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.store.StoreConfig access$800(com.fsck.k9.mail.store.imap.ImapStore); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.lang.String access$900(com.fsck.k9.mail.store.imap.ImapStore); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.lang.String access$902(com.fsck.k9.mail.store.imap.ImapStore,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.store.imap.ImapStoreSettings decodeUri(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.lang.String createUri(com.fsck.k9.mail.ServerSettings); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.util.List getFolders(java.util.Collection); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.util.Set listFolders(com.fsck.k9.mail.store.imap.ImapConnection,boolean); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.StateListAnimator createStateListAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class java.security.KeyException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.util.Random { void <init>(); }
-keepclassmembers class java.util.Random { void <init>(long); }
-keepclassmembers class android.widget.TimePickerClockDelegate$2 { void <init>(android.widget.TimePickerClockDelegate); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { void <init>(java.io.Reader,int,int,int); }
-keepclassmembers class java.util.Random { double nextDouble(); }
-keepclassmembers class java.util.Random { int next(int); }
-keepclassmembers class java.text.SimpleDateFormat { void append(java.lang.StringBuffer,java.text.FieldPosition,java.util.List,char,int); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { void <init>(java.io.Reader,int,int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void execSQL(java.lang.String); }
-keepclassmembers class java.util.Random { float nextFloat(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void execSQL(java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { char BeginToken(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { int executeSql(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.widget.ListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.util.Random { int nextInt(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { void ExpandBuff(boolean); }
-keepclassmembers class java.util.Random { int nextInt(int); }
-keepclassmembers class android.animation.AnimatorInflater { void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float); }
-keepclassmembers class android.widget.ListView { void onMeasure(int,int); }
-keepclassmembers class java.util.Random { long nextLong(); }
-keepclassmembers class java.util.Random { void setSeed(long); }
-keepclassmembers class java.util.Random { void <clinit>(); }
-keepclassmembers class android.view.WindowManager$LayoutParams$1 { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void <init>(java.lang.ClassLoader,int); }
-keepclassmembers class android.content.res.Resources { int calcConfigChanges(android.content.res.Configuration); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { boolean isOpen(); }
-keepclassmembers class org.apache.commons.logging.LogFactory { org.apache.commons.logging.Log getLog(java.lang.String); }
-keepclassmembers class android.content.res.Resources { void clearDrawableCachesLocked(android.util.ArrayMap,int); }
-keepclassmembers class android.os.BaseBundle { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.commons.logging.LogFactory { org.apache.commons.logging.Log getLog(java.lang.Class); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class android.content.res.Resources { void clearDrawableCacheLocked(android.util.LongSparseArray,int); }
-keepclassmembers class android.os.BaseBundle { void <init>(java.lang.ClassLoader); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { java.lang.String getPath(); }
-keepclassmembers class android.os.BaseBundle { void <init>(int); }
-keepclassmembers class android.os.BaseBundle { void <init>(android.os.BaseBundle); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics$1 { void <init>(com.fsck.k9.activity.setup.AccountSetupBasics); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics$1 { void onCheckedChanged(android.widget.CompoundButton,boolean); }
-keepclassmembers class android.widget.ListView { void measureScrapChild(android.view.View,int,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.store.imap.ImapConnection pollConnection(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.TypeEvaluator setupAnimatorForPath(android.animation.ValueAnimator,android.content.res.TypedArray); }
-keepclassmembers class android.content.res.Resources { java.lang.String adjustLanguageTag(java.lang.String); }
-keepclassmembers class org.apache.commons.logging.LogFactory { java.lang.ClassLoader getClassLoader(java.lang.Class); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListViewSDK9 { void <init>(com.handmark.pulltorefresh.library.PullToRefreshListView,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { void autoconfigureFolders(com.fsck.k9.mail.store.imap.ImapConnection); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListViewSDK9 { boolean overScrollBy(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { void FillBuff(); }
-keepclassmembers class android.os.BaseBundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class android.os.BaseBundle { void unparcel(); }
-keepclassmembers class android.widget.ListView { boolean recycleOnMeasure(); }
-keepclassmembers class android.content.res.Resources { android.util.DisplayMetrics getDisplayMetrics(); }
-keepclassmembers class com.beetstra.jutf7.CharsetProvider { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.content.res.Resources { android.content.res.Configuration getConfiguration(); }
-keepclassmembers class android.os.BaseBundle { boolean isParcelled(); }
-keepclassmembers class android.animation.AnimatorInflater { void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,float); }
-keepclassmembers class android.os.BaseBundle { int size(); }
-keepclassmembers class android.widget.ListView { int measureHeightOfChildren(int,int,int,int,int); }
-keepclassmembers class android.os.BaseBundle { boolean isEmpty(); }
-keepclassmembers class com.beetstra.jutf7.CharsetProvider { void <init>(); }
-keepclassmembers class android.os.BaseBundle { void clear(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.os.BaseBundle { boolean containsKey(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.content.res.Resources { int getIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.os.BaseBundle { java.lang.Object get(java.lang.String); }
-keepclassmembers class java.lang.ArithmeticException { void <init>(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { void remove(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { java.lang.String GetImage(); }
-keepclassmembers class android.preference.PreferenceActivity$4 { void <init>(android.preference.PreferenceActivity); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64OutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.preference.PreferenceActivity$4 { void onClick(android.view.View); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64OutputStream { void <init>(java.io.OutputStream,boolean); }
-keepclassmembers class android.os.BaseBundle { java.util.Set keySet(); }
-keepclassmembers class android.os.BaseBundle { void putAll(java.util.Map); }
-keepclassmembers class android.content.res.Resources { java.lang.String getResourceName(int); }
-keepclassmembers class android.content.res.Resources { boolean resourceHasPackage(int); }
-keepclassmembers class android.os.BaseBundle { void putBoolean(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter$RecipientTokenHolder { void <init>(android.view.View); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { char[] GetSuffix(int); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64OutputStream { void flush(boolean); }
-keepclassmembers class com.beetstra.jutf7.CharsetProvider { java.nio.charset.Charset charsetForName(java.lang.String); }
-keepclassmembers class com.bumptech.glide.GlideBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.widget.ListView { int findMotionRow(int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void disableWriteAheadLogging(); }
-keepclassmembers class android.animation.AnimatorInflater { void setupValues(android.animation.ValueAnimator,android.content.res.TypedArray,boolean,boolean,int,boolean,int); }
-keepclassmembers class android.os.BaseBundle { void putInt(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64OutputStream { void flush(); }
-keepclassmembers class android.os.BaseBundle { void putLong(java.lang.String,long); }
-keepclassmembers class android.os.BaseBundle { void putFloat(java.lang.String,float); }
-keepclassmembers class java.text.SimpleDateFormat { void appendDayOfWeek(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class com.bumptech.glide.GlideBuilder { com.bumptech.glide.Glide createGlide(); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64OutputStream { void close(); }
-keepclassmembers class com.fsck.k9.mail.filter.Base64OutputStream { void write(byte[],int,int); }
-keepclassmembers class org.apache.http.cookie.CookiePathComparator { void <init>(); }
-keepclassmembers class org.apache.http.cookie.CookiePathComparator { java.lang.String normalizePath(org.apache.http.cookie.Cookie); }
-keepclassmembers class android.os.BaseBundle { void putString(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ListView { android.view.View fillSpecific(int,int); }
-keepclassmembers class android.os.BaseBundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class org.apache.http.cookie.CookiePathComparator { int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { void <init>(android.widget.Spinner,android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.os.BaseBundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class org.apache.http.cookie.CookiePathComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.BaseBundle { void putSerializable(java.lang.String,java.io.Serializable); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.widget.ListView { void correctTooHigh(int); }
-keepclassmembers class com.fsck.k9.activity.K9ListActivity { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.K9ListActivity { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.text.SimpleDateFormat { void appendMonth(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { void setPromptText(java.lang.CharSequence); }
-keepclassmembers class android.os.BaseBundle { void putByteArray(java.lang.String,byte[]); }
-keepclassmembers class com.fsck.k9.activity.K9ListActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.K9ListActivity { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { void computeContentWidth(); }
-keepclassmembers class android.os.BaseBundle { void putIntArray(java.lang.String,int[]); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { void checkSettings(); }
-keepclassmembers class android.widget.ListView { void correctTooLow(int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { java.util.List getAttachedDbs(); }
-keepclassmembers class android.os.BaseBundle { void putLongArray(java.lang.String,long[]); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { void UpdateLineColumn(char); }
-keepclassmembers class com.fsck.k9.activity.K9ListActivity { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.store.imap.ImapConnection createImapConnection(); }
-keepclassmembers class com.fsck.k9.activity.K9ListActivity { void onResume(); }
-keepclassmembers class com.fsck.k9.activity.K9ListActivity { void setupGestureDetector(com.fsck.k9.activity.misc.SwipeGestureDetector$OnSwipeGestureListener); }
-keepclassmembers class org.apache.http.impl.io.IdentityOutputStream { void <init>(org.apache.http.io.SessionOutputBuffer); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.Animator createAnimatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float); }
-keepclassmembers class android.os.BaseBundle { void putCharSequenceArray(java.lang.String,java.lang.CharSequence[]); }
-keepclassmembers class android.content.res.Resources { void flushLayoutCache(); }
-keepclassmembers class java.text.SimpleDateFormat { void appendTimeZone(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class org.apache.http.impl.io.IdentityOutputStream { void close(); }
-keepclassmembers class android.os.BaseBundle { boolean getBoolean(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.ClassCastException); }
-keepclassmembers class android.os.BaseBundle { void putStringArray(java.lang.String,java.lang.String[]); }
-keepclassmembers class org.apache.http.impl.io.IdentityOutputStream { void flush(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.lang.String getCombinedPrefix(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$4 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class android.widget.ListView { void layoutChildren(); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { void show(int,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.store.imap.ImapConnection getConnection(); }
-keepclassmembers class org.apache.http.impl.io.IdentityOutputStream { void write(byte[]); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.Folder getFolder(java.lang.String); }
-keepclassmembers class java.text.SimpleDateFormat { void appendNumericTimeZone(java.lang.StringBuffer,int,boolean); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Spinner$DropdownPopup { android.widget.ListAdapter access$300(android.widget.Spinner$DropdownPopup); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.store.imap.ImapFolder getFolder(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { void typeWarning(java.lang.String,java.lang.Object,java.lang.String,java.lang.ClassCastException); }
-keepclassmembers class android.text.style.TypefaceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.content.res.Resources { boolean verifyPreloadConfig(int,int,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$4 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.os.BaseBundle { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class org.apache.http.impl.io.IdentityOutputStream { void write(byte[],int,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.util.Set getPermanentFlagsIndex(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { java.util.List getPersonalNamespaces(boolean); }
-keepclassmembers class java.text.SimpleDateFormat { void appendMilliseconds(java.lang.StringBuffer,int,int); }
-keepclassmembers class android.text.style.TypefaceSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable loadDrawable(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.store.imap.FolderNameCodec getFolderNameCodec(); }
-keepclassmembers class com.bumptech.glide.util.LogTime { double getElapsedMillis(long); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void throwIfNotOpenLocked(); }
-keepclassmembers class com.bumptech.glide.util.LogTime { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.util.LogTime { long getLogTime(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { java.lang.String toString(); }
-keepclassmembers class android.transition.VisibilityPropagation { void <init>(); }
-keepclassmembers class java.text.SimpleDateFormat { void appendNumber(java.lang.StringBuffer,int,int); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase { void <clinit>(); }
-keepclassmembers class android.transition.VisibilityPropagation { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.Pusher getPusher(com.fsck.k9.mail.PushReceiver); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { com.fsck.k9.mail.store.StoreConfig getStoreConfig(); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { int getInt(java.lang.String,int); }
-keepclassmembers class java.text.SimpleDateFormat { java.util.Date error(java.text.ParsePosition,int,java.util.TimeZone); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { boolean isCopyCapable(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { boolean isExpungeCapable(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { void backup(int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { boolean isMoveCapable(); }
-keepclassmembers class com.android.okhttp.internal.Platform { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { boolean isPushCapable(); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.StringBuffer format(java.util.Date,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.content.res.AssetManager { void ensureSystemAssets(); }
-keepclassmembers class android.transition.VisibilityPropagation { java.lang.String[] getPropagationProperties(); }
-keepclassmembers class com.android.okhttp.internal.Platform { com.android.okhttp.internal.Platform get(); }
-keepclassmembers class android.os.BaseBundle { long getLong(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore { void releaseConnection(com.fsck.k9.mail.store.imap.ImapConnection); }
-keepclassmembers class com.android.okhttp.internal.Platform { void logW(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.Platform { void tagSocket(java.net.Socket); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { int getBeginColumn(); }
-keepclassmembers class com.android.okhttp.internal.Platform { void untagSocket(java.net.Socket); }
-keepclassmembers class android.os.BaseBundle { long getLong(java.lang.String,long); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { int getBeginLine(); }
-keepclassmembers class com.android.okhttp.internal.Platform { java.net.URI toUriLenient(java.net.URL); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void <init>(android.database.sqlite.SQLiteConnectionPool); }
-keepclassmembers class android.content.res.Resources { void cacheDrawable(android.util.TypedValue,android.content.res.Resources$Theme,boolean,android.util.ArrayMap,long,android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ObjectAnimator loadObjectAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float); }
-keepclassmembers class android.content.res.AssetManager { void <init>(boolean); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { int getEndColumn(); }
-keepclassmembers class java.text.SimpleDateFormat { int hashCode(); }
-keepclassmembers class com.android.okhttp.internal.Platform { void enableTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String); }
-keepclassmembers class java.text.SimpleDateFormat { int parse(java.lang.String,int,char,int); }
-keepclassmembers class android.os.BaseBundle { float getFloat(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { int getEndLine(); }
-keepclassmembers class android.os.BaseBundle { float getFloat(java.lang.String,float); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.AssetManager getSystem(); }
-keepclassmembers class org.apache.james.mime4j.field.AbstractField { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.android.okhttp.internal.Platform { void supportTlsIntolerantServer(javax.net.ssl.SSLSocket); }
-keepclassmembers class android.transition.VisibilityPropagation { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorInflater { android.animation.ValueAnimator loadAnimator(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getResourceText(int); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.SimpleCharStream { char readChar(); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void beginTransaction(int,android.database.sqlite.SQLiteTransactionListener,int,android.os.CancellationSignal); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.AbstractField { java.lang.String getBody(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { org.apache.harmony.security.asn1.ASN1Any getInstance(); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void beginTransactionUnchecked(int,android.database.sqlite.SQLiteTransactionListener,int,android.os.CancellationSignal); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { boolean checkTag(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.os.BaseBundle { java.lang.String getString(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.Platform { com.android.okio.ByteString getNpnSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils$DateFormatHolder { java.text.SimpleDateFormat formatFor(java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getResourceBagText(int,int); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.concurrent.TimeUnit { long x(long,long,long); }
-keepclassmembers class android.os.BaseBundle { java.lang.CharSequence getCharSequence(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.DateUtils$DateFormatHolder { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.AbstractField { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.content.res.AssetManager { boolean getResourceValue(int,int,android.util.TypedValue,boolean); }
-keepclassmembers class com.android.okhttp.internal.Platform { void setNpnProtocols(javax.net.ssl.SSLSocket,java.util.List); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable loadDrawableForCookie(android.util.TypedValue,int,android.content.res.Resources$Theme); }
-keepclassmembers class android.os.BaseBundle { java.io.Serializable getSerializable(java.lang.String); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpUtils { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.animation.AnimatorInflater { int getChangingConfigs(android.content.res.Resources,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void setTransactionSuccessful(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void endTransaction(android.os.CancellationSignal); }
-keepclassmembers class android.animation.AnimatorInflater { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Any { void <clinit>(); }
-keepclassmembers class android.os.BaseBundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void endTransactionUnchecked(android.os.CancellationSignal,boolean); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener$DisallowIntercept { void <init>(android.widget.ListPopupWindow$ForwardingListener); }
-keepclassmembers class com.android.okhttp.internal.Platform { void connectSocket(java.net.Socket,java.net.InetSocketAddress,int); }
-keepclassmembers class java.text.SimpleDateFormat { int parseFractionalSeconds(java.lang.String,int,int); }
-keepclassmembers class android.os.BaseBundle { java.util.ArrayList getCharSequenceArrayList(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.Platform { java.lang.String getPrefix(); }
-keepclassmembers class com.android.okhttp.internal.Platform { byte[] concatLengthPrefixed(java.util.List); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener$DisallowIntercept { void <init>(android.widget.ListPopupWindow$ForwardingListener,android.widget.ListPopupWindow$1); }
-keepclassmembers class java.text.SimpleDateFormat { int parseDayOfWeek(java.lang.String,int,boolean); }
-keepclassmembers class java.lang.NullPointerException { void <init>(); }
-keepclassmembers class android.content.res.AssetManager { void ensureStringBlocks(); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <init>(java.lang.String,int,java.util.concurrent.TimeUnit$1); }
-keepclassmembers class android.content.res.AssetManager { void makeStringBlocks(android.content.res.StringBlock[]); }
-keepclassmembers class java.lang.NullPointerException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$1 { void <clinit>(); }
-keepclassmembers class android.os.BaseBundle { byte[] getByteArray(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.Platform { void <clinit>(); }
-keepclassmembers class java.text.SimpleDateFormat { int parseMonth(java.lang.String,int,int,int,boolean); }
-keepclassmembers class java.util.concurrent.TimeUnit { void <clinit>(); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(float); }
-keepclassmembers class android.content.res.AssetManager { java.lang.CharSequence getPooledStringForCookie(int,int); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.text.SimpleDateFormat { java.util.Date parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class android.text.style.RelativeSizeSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable$ConstantState getConstantStateLocked(android.util.LongSparseArray,long); }
-keepclassmembers class android.os.BaseBundle { int[] getIntArray(java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getCachedDrawable(android.util.ArrayMap,long,android.content.res.Resources$Theme); }
-keepclassmembers class javax.net.SocketFactory { void <init>(); }
-keepclassmembers class javax.net.SocketFactory { javax.net.SocketFactory getDefault(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpUtils { java.lang.String extractClearsignedMessage(java.lang.String); }
-keepclassmembers class javax.net.SocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class android.content.res.Resources { android.graphics.drawable.Drawable getCachedDrawableLocked(android.util.LongSparseArray,long); }
-keepclassmembers class android.os.BaseBundle { long[] getLongArray(java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList loadColorStateList(android.util.TypedValue,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts$4 { void run(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$4 { void <init>(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$5 { void <init>(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavConstants { void <clinit>(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpUtils { boolean isAvailable(android.content.Context); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void prepare(java.lang.String,int,android.os.CancellationSignal,android.database.sqlite.SQLiteStatementInfo); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$5 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class com.fsck.k9.activity.Accounts$2 { void <init>(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.activity.Accounts$2 { void onUnmount(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { java.lang.String[] getStringArray(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109VersionHandler { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$14 { void <clinit>(); }
-keepclassmembers class org.apache.commons.logging.LogFactory { void initDiagnostics(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109VersionHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { java.io.InputStream openNonAsset(int,java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts$2 { void onMount(java.lang.String); }
-keepclassmembers class android.os.BaseBundle { void writeToParcelInner(android.os.Parcel,int); }
-keepclassmembers class android.os.BaseBundle { void readFromParcelInner(android.os.Parcel); }
-keepclassmembers class android.transition.Scene { void setCurrentScene(android.view.View,android.transition.Scene); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.Number parseNumber(int,java.lang.String,java.text.ParsePosition); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109VersionHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.transition.Scene { android.transition.Scene getCurrentScene(android.view.View); }
-keepclassmembers class android.database.sqlite.SQLiteSession { long executeForLong(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog$3 { void <init>(com.fsck.k9.activity.Accounts$PasswordPromptDialog); }
-keepclassmembers class org.apache.commons.logging.LogFactory { boolean isDiagnosticsEnabled(); }
-keepclassmembers class android.os.BaseBundle { void readFromParcelInner(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog$3 { void onCheckedChanged(android.widget.CompoundButton,boolean); }
-keepclassmembers class org.apache.commons.logging.LogFactory { void logDiagnostic(java.lang.String); }
-keepclassmembers class android.content.res.Resources { android.content.res.ColorStateList getCachedColorStateList(long); }
-keepclassmembers class java.text.SimpleDateFormat { int parseNumber(int,java.lang.String,int,int,int); }
-keepclassmembers class android.os.BaseBundle { void <clinit>(); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser loadXmlResourceParser(int,java.lang.String); }
-keepclassmembers class org.apache.commons.logging.LogFactory { void logClassLoaderEnvironment(java.lang.Class); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableAction { void <init>(android.widget.RemoteViews,int,boolean,int,int,int,int); }
-keepclassmembers class java.text.SimpleDateFormat { int parseText(java.lang.String,int,java.lang.String[],int); }
-keepclassmembers class android.content.res.AssetManager { android.content.res.XmlBlock openXmlBlockAsset(int,java.lang.String); }
-keepclassmembers class dalvik.system.CloseGuard { void setEnabled(boolean); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class java.util.Collections$SetFromMap { void <init>(java.util.Map); }
-keepclassmembers class dalvik.system.CloseGuard { dalvik.system.CloseGuard get(); }
-keepclassmembers class dalvik.system.CloseGuard { void open(java.lang.String); }
-keepclassmembers class dalvik.system.CloseGuard { void setReporter(dalvik.system.CloseGuard$Reporter); }
-keepclassmembers class dalvik.system.CloseGuard { dalvik.system.CloseGuard$Reporter getReporter(); }
-keepclassmembers class android.content.res.Resources { android.content.res.XmlResourceParser loadXmlResourceParser(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class java.util.Collections$SetFromMap { boolean add(java.lang.Object); }
-keepclassmembers class dalvik.system.CloseGuard { void <init>(); }
-keepclassmembers class dalvik.system.CloseGuard { void warnIfOpen(); }
-keepclassmembers class android.widget.ListView { boolean isDirectChildHeaderOrFooter(android.view.View); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class dalvik.system.CloseGuard { void close(); }
-keepclassmembers class android.content.res.AssetManager { void xmlBlockGone(int); }
-keepclassmembers class dalvik.system.CloseGuard { void <clinit>(); }
-keepclassmembers class libcore.reflect.InternalNames { java.lang.Class getClass(java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteSession { int executeForChangedRowCount(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal); }
-keepclassmembers class java.util.Collections$SetFromMap { boolean remove(java.lang.Object); }
-keepclassmembers class android.widget.ListView { android.view.View makeAndAddView(int,int,boolean,int,boolean); }
-keepclassmembers class java.text.SimpleDateFormat { int parseTimeZone(java.lang.String,int); }
-keepclassmembers class android.database.sqlite.SQLiteSession { long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal); }
-keepclassmembers class android.widget.ListView { void setupChild(android.view.View,int,int,boolean,int,boolean,boolean); }
-keepclassmembers class org.apache.commons.logging.LogFactory { void logHierarchy(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class android.content.res.AssetManager { void setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class java.util.Collections$SetFromMap { int size(); }
-keepclassmembers class android.content.res.AssetManager { int getResourceIdentifier(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { java.lang.String getResourceName(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { void <init>(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class android.database.sqlite.SQLiteSession { int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,int,android.os.CancellationSignal); }
-keepclassmembers class android.content.res.AssetManager { long openNonAssetNative(int,java.lang.String,int); }
-keepclassmembers class java.util.Collections$SetFromMap { java.util.Iterator iterator(); }
-keepclassmembers class libcore.reflect.InternalNames { java.lang.String getInternalName(java.lang.Class); }
-keepclassmembers class java.text.SimpleDateFormat { void set2DigitYearStart(java.util.Date); }
-keepclassmembers class android.content.res.AssetManager { long getAssetLength(long); }
-keepclassmembers class android.content.res.Resources { void <init>(); }
-keepclassmembers class android.content.res.AssetManager { void destroyAsset(long); }
-keepclassmembers class android.content.res.AssetManager { int loadResourceValue(int,short,android.util.TypedValue,boolean); }
-keepclassmembers class org.apache.commons.logging.LogFactory { java.lang.String objectId(java.lang.Object); }
-keepclassmembers class android.content.res.AssetManager { int getStringBlockCount(); }
-keepclassmembers class android.content.res.AssetManager { int loadResourceBagValue(int,int,android.util.TypedValue,boolean); }
-keepclassmembers class android.content.res.AssetManager { long getNativeStringBlock(int); }
-keepclassmembers class android.content.res.AssetManager { boolean retrieveAttributes(long,int[],int[],int[]); }
-keepclassmembers class android.content.res.Resources { void <clinit>(); }
-keepclassmembers class android.content.res.AssetManager { long openXmlAssetNative(int,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteSession { boolean executeSpecial(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal); }
-keepclassmembers class org.apache.http.impl.auth.BasicSchemeFactory { void <init>(); }
-keepclassmembers class org.apache.http.impl.auth.BasicSchemeFactory { org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.commons.logging.LogFactory { void <clinit>(); }
-keepclassmembers class android.content.res.AssetManager { void destroy(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <init>(); }
-keepclassmembers class android.content.res.AssetManager { void incRefsLocked(long); }
-keepclassmembers class android.content.res.AssetManager { void init(boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView { void <init>(android.content.Context); }
-keepclassmembers class java.lang.ref.ReferenceQueue { java.lang.ref.Reference poll(); }
-keepclassmembers class android.content.res.AssetManager { long access$100(android.content.res.AssetManager,long); }
-keepclassmembers class android.content.res.AssetManager { void decRefsLocked(long); }
-keepclassmembers class java.text.SimpleDateFormat { java.lang.String toPattern(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.lang.NoSuchMethodException { void <init>(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void acquireConnection(java.lang.String,int,android.os.CancellationSignal); }
-keepclassmembers class android.widget.AutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.content.res.AssetManager { void access$400(android.content.res.AssetManager,long); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { void <init>(java.io.RandomAccessFile,long,long); }
-keepclassmembers class android.content.res.AssetManager { void access$500(android.content.res.AssetManager,long); }
-keepclassmembers class android.widget.AutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { void <init>(java.io.RandomAccessFile,long); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void releaseConnection(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { org.apache.harmony.security.asn1.ASN1BitString getInstance(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { void close(); }
-keepclassmembers class org.htmlcleaner.HtmlSerializer { boolean dontEscape(org.htmlcleaner.TagNode); }
-keepclassmembers class org.htmlcleaner.HtmlSerializer { void <init>(org.htmlcleaner.CleanerProperties); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int available(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.htmlcleaner.HtmlSerializer { java.lang.String escapeText(java.lang.String); }
-keepclassmembers class android.content.res.AssetManager { void <clinit>(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int read(); }
-keepclassmembers class org.htmlcleaner.HtmlSerializer { boolean isMinimizedTagSyntax(org.htmlcleaner.TagNode); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void throwIfNoTransaction(); }
-keepclassmembers class java.text.SimpleDateFormat { void <clinit>(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int read(byte[],int,int); }
-keepclassmembers class android.text.Selection { int getSelectionStart(java.lang.CharSequence); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void throwIfTransactionMarkedSuccessful(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void add(java.lang.ref.Reference); }
-keepclassmembers class android.database.sqlite.SQLiteSession { android.database.sqlite.SQLiteSession$Transaction obtainTransaction(int,android.database.sqlite.SQLiteTransactionListener); }
-keepclassmembers class android.text.Selection { int getSelectionEnd(java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { boolean access$202(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink,boolean); }
-keepclassmembers class android.text.Selection { void setSelection(android.text.Spannable,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { boolean access$200(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.HtmlSerializer { void serializeEndTag(org.htmlcleaner.TagNode,java.io.Writer,boolean); }
-keepclassmembers class android.text.Selection { void extendSelection(android.text.Spannable,int); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void recycleTransaction(android.database.sqlite.SQLiteSession$Transaction); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { boolean access$400(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long skip(long); }
-keepclassmembers class android.widget.AutoCompleteTextView { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.database.sqlite.SQLiteSession { void <clinit>(); }
-keepclassmembers class android.widget.ListView { boolean canAnimate(); }
-keepclassmembers class android.text.Selection { void removeSelection(android.text.Spannable); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink { void <clinit>(); }
-keepclassmembers class android.text.Selection { boolean moveUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onClickImpl(); }
-keepclassmembers class java.lang.ref.ReferenceQueue { void <clinit>(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void setCompletionHint(java.lang.CharSequence); }
-keepclassmembers class android.widget.ListView$FixedViewInfo { void <init>(android.widget.ListView); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <init>(); }
-keepclassmembers class org.htmlcleaner.HtmlSerializer { void serializeOpenTag(org.htmlcleaner.TagNode,java.io.Writer,boolean); }
-keepclassmembers class android.widget.ListView { void setSelection(int); }
-keepclassmembers class android.widget.ListView { void setSelectionInt(int); }
-keepclassmembers class android.widget.AutoCompleteTextView { int getDropDownWidth(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { int fill(java.util.zip.Inflater,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void setRootAlpha(int); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long access$102(java.util.zip.ZipFile$RAFStream,long); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { int getRootAlpha(); }
-keepclassmembers class java.util.zip.ZipFile$RAFStream { long access$200(java.util.zip.ZipFile$RAFStream); }
-keepclassmembers class android.text.Selection { boolean moveDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView { int getDropDownAnchor(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void setAlpha(float); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void <init>(org.apache.http.io.SessionOutputBuffer,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { float getAlpha(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <init>(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void <init>(org.apache.http.io.SessionOutputBuffer); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionAfter(int,int,boolean); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void flushCache(); }
-keepclassmembers class android.text.Selection { boolean moveRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void flushCacheWithAppend(byte[],int,int); }
-keepclassmembers class java.lang.StringBuffer { void <init>(); }
-keepclassmembers class java.lang.StringBuffer { void <init>(int); }
-keepclassmembers class java.lang.StringBuffer { void <init>(java.lang.String); }
-keepclassmembers class android.text.Selection { boolean moveLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.text.Selection { boolean extendUp(android.text.Spannable,android.text.Layout); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void writeClosingChunk(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void finish(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { boolean recursiveCanApplyTheme(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { boolean canApplyTheme(); }
-keepclassmembers class android.text.Selection { boolean extendDown(android.text.Spannable,android.text.Layout); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(int); }
-keepclassmembers class org.apache.http.impl.client.DefaultTargetAuthenticationHandler { void <init>(); }
-keepclassmembers class org.apache.http.impl.client.DefaultTargetAuthenticationHandler { boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.widget.ListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void write(byte[]); }
-keepclassmembers class android.widget.ListView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(java.lang.String); }
-keepclassmembers class android.widget.ListView { boolean commonKey(int,int,android.view.KeyEvent); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.widget.ListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class org.apache.http.impl.client.DefaultTargetAuthenticationHandler { java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.widget.AutoCompleteTextView { int getThreshold(); }
-keepclassmembers class android.text.Selection { boolean extendLeft(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void recursiveApplyTheme(android.graphics.drawable.VectorDrawable$VGroup,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void flush(); }
-keepclassmembers class android.text.Selection { boolean extendRight(android.text.Spannable,android.text.Layout); }
-keepclassmembers class java.text.ParsePosition { void <init>(int); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[],int,int); }
-keepclassmembers class android.text.Selection { boolean extendToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer append(char[]); }
-keepclassmembers class android.text.Selection { boolean extendToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void drawGroupTree(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class java.text.ParsePosition { int getErrorIndex(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedOutputStream { void close(); }
-keepclassmembers class java.text.ParsePosition { int getIndex(); }
-keepclassmembers class android.text.Selection { boolean moveToLeftEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.widget.AutoCompleteTextView { android.widget.ListAdapter getAdapter(); }
-keepclassmembers class java.text.ParsePosition { void setErrorIndex(int); }
-keepclassmembers class android.text.Selection { boolean moveToRightEdge(android.text.Spannable,android.text.Layout); }
-keepclassmembers class android.widget.AutoCompleteTextView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class java.lang.StringBuffer { char charAt(int); }
-keepclassmembers class java.text.ParsePosition { void setIndex(int); }
-keepclassmembers class android.text.Selection { boolean moveToFollowing(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer deleteCharAt(int); }
-keepclassmembers class android.text.Selection { boolean moveToPreceding(android.text.Spannable,android.text.Selection$PositionIterator,boolean); }
-keepclassmembers class org.apache.http.client.RedirectException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer delete(int,int); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class android.os.CancellationSignal { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void drawPath(android.graphics.drawable.VectorDrawable$VGroup,android.graphics.drawable.VectorDrawable$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.text.Selection { int chooseHorizontal(android.text.Layout,int,int,int); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter); }
-keepclassmembers class android.os.CancellationSignal { void cancel(); }
-keepclassmembers class android.text.Selection { int findEdge(android.text.Spannable,android.text.Layout,int); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.text.Selection { void <clinit>(); }
-keepclassmembers class android.os.Parcel { int nativeDataSize(long); }
-keepclassmembers class android.os.Parcel { int nativeDataPosition(long); }
-keepclassmembers class android.os.Parcel { int nativeDataAvail(long); }
-keepclassmembers class android.os.Parcel { void nativeSetDataPosition(long,int); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean enoughToFilter(); }
-keepclassmembers class android.os.Parcel { boolean nativePushAllowFds(long,boolean); }
-keepclassmembers class android.os.Parcel { void nativeRestoreAllowFds(long,boolean); }
-keepclassmembers class android.os.Parcel { void nativeWriteInt(long,int); }
-keepclassmembers class android.os.Parcel { void nativeWriteByteArray(long,byte[],int,int); }
-keepclassmembers class android.os.Parcel { void nativeWriteLong(long,long); }
-keepclassmembers class android.os.Parcel { void nativeWriteFloat(long,float); }
-keepclassmembers class android.os.Parcel { void nativeWriteDouble(long,double); }
-keepclassmembers class android.widget.AutoCompleteTextView { void doBeforeTextChanged(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void doAfterTextChanged(); }
-keepclassmembers class android.os.Parcel { void nativeWriteString(long,java.lang.String); }
-keepclassmembers class android.os.Parcel { void nativeWriteStrongBinder(long,android.os.IBinder); }
-keepclassmembers class android.os.Parcel { int nativeReadInt(long); }
-keepclassmembers class android.os.Parcel { byte[] nativeCreateByteArray(long); }
-keepclassmembers class android.os.Parcel { long nativeReadLong(long); }
-keepclassmembers class android.os.Parcel { float nativeReadFloat(long); }
-keepclassmembers class android.os.Parcel { double nativeReadDouble(long); }
-keepclassmembers class android.os.Parcel { java.lang.String nativeReadString(long); }
-keepclassmembers class android.os.Parcel { java.io.FileDescriptor nativeReadFileDescriptor(long); }
-keepclassmembers class android.os.Parcel { android.os.IBinder nativeReadStrongBinder(long); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean isPopupShowing(); }
-keepclassmembers class android.os.Parcel { void nativeFreeBuffer(long); }
-keepclassmembers class java.nio.charset.CharsetEncoder { void <init>(java.nio.charset.Charset,float,float); }
-keepclassmembers class android.os.Parcel { byte[] nativeMarshall(long); }
-keepclassmembers class android.os.Parcel { long nativeCreate(); }
-keepclassmembers class android.widget.AutoCompleteTextView { java.lang.CharSequence convertSelectionToString(java.lang.Object); }
-keepclassmembers class android.content.Intent$1 { void <init>(); }
-keepclassmembers class android.os.Parcel { boolean nativeHasFileDescriptors(long); }
-keepclassmembers class android.widget.AutoCompleteTextView { void clearListSelection(); }
-keepclassmembers class android.os.Parcel { void nativeUnmarshall(long,byte[],int,int); }
-keepclassmembers class android.os.Parcel { void nativeAppendFrom(long,long,int,int); }
-keepclassmembers class android.os.Parcel { void nativeWriteInterfaceToken(long,java.lang.String); }
-keepclassmembers class android.content.Intent$1 { android.content.Intent createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.StringBuffer { java.lang.StringBuffer replace(int,int,java.lang.String); }
-keepclassmembers class android.os.Parcel { void nativeEnforceInterface(long,java.lang.String); }
-keepclassmembers class android.os.Parcel { android.os.Parcel obtain(); }
-keepclassmembers class java.nio.charset.CharsetEncoder { void <init>(java.nio.charset.Charset,float,float,byte[]); }
-keepclassmembers class android.widget.AutoCompleteTextView { int getListSelection(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void performCompletion(); }
-keepclassmembers class java.nio.charset.CharsetEncoder { void <init>(java.nio.charset.Charset,float,float,byte[],boolean); }
-keepclassmembers class android.widget.AutoCompleteTextView { void performFiltering(java.lang.CharSequence,int); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onCommitCompletion(android.view.inputmethod.CompletionInfo); }
-keepclassmembers class android.content.Intent$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.os.Parcel { void recycle(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.String substring(int,int); }
-keepclassmembers class android.widget.AutoCompleteTextView { void performCompletion(android.view.View,int,long); }
-keepclassmembers class libcore.internal.StringPool { void <init>(); }
-keepclassmembers class java.lang.StringBuffer { java.lang.String toString(); }
-keepclassmembers class android.os.Parcel { int dataSize(); }
-keepclassmembers class libcore.internal.StringPool { boolean contentEquals(java.lang.String,char[],int,int); }
-keepclassmembers class android.os.Parcel { int dataAvail(); }
-keepclassmembers class android.os.Parcel { void setDataPosition(int); }
-keepclassmembers class android.os.Parcel { int dataPosition(); }
-keepclassmembers class libcore.internal.StringPool { java.lang.String get(char[],int,int); }
-keepclassmembers class android.os.Parcel { boolean pushAllowFds(boolean); }
-keepclassmembers class java.lang.StringBuffer { int length(); }
-keepclassmembers class android.os.Parcel { void unmarshall(byte[],int,int); }
-keepclassmembers class android.os.Parcel { void restoreAllowFds(boolean); }
-keepclassmembers class android.os.Parcel { void appendFrom(android.os.Parcel,int,int); }
-keepclassmembers class android.widget.AutoCompleteTextView { void replaceText(java.lang.CharSequence); }
-keepclassmembers class android.os.Parcel { byte[] marshall(); }
-keepclassmembers class java.lang.StringBuffer { void <clinit>(); }
-keepclassmembers class android.os.Parcel { boolean hasFileDescriptors(); }
-keepclassmembers class android.os.Parcel { void writeInterfaceToken(java.lang.String); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onFilterComplete(int); }
-keepclassmembers class android.widget.AutoCompleteTextView { void updateDropDownForFilter(int); }
-keepclassmembers class android.os.Parcel { void enforceInterface(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageList$2 { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.RequestManager$GenericModelRequest { void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.load.model.ModelLoader,java.lang.Class); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[],int,int); }
-keepclassmembers class android.os.Parcel { void writeByteArray(byte[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$300(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.drawable.VectorDrawable$VGroup access$000(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$402(android.graphics.drawable.VectorDrawable$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class java.nio.charset.CharsetEncoder { java.nio.ByteBuffer encode(java.nio.CharBuffer); }
-keepclassmembers class com.bumptech.glide.RequestManager$GenericModelRequest { com.bumptech.glide.load.model.ModelLoader access$600(com.bumptech.glide.RequestManager$GenericModelRequest); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$302(android.graphics.drawable.VectorDrawable$VPathRenderer,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { android.graphics.Paint access$400(android.graphics.drawable.VectorDrawable$VPathRenderer); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPathRenderer { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.RequestManager$GenericModelRequest { java.lang.Class access$700(com.bumptech.glide.RequestManager$GenericModelRequest); }
-keepclassmembers class android.os.Parcel { void writeInt(int); }
-keepclassmembers class android.widget.ListView { boolean pageScroll(int); }
-keepclassmembers class android.os.Parcel { void writeFloat(float); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onAttachedToWindow(); }
-keepclassmembers class android.os.Parcel { void writeDouble(double); }
-keepclassmembers class android.os.Parcel { void writeLong(long); }
-keepclassmembers class android.widget.AutoCompleteTextView { void onDetachedFromWindow(); }
-keepclassmembers class com.bumptech.glide.RequestManager$GenericModelRequest { com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest load(java.lang.Object); }
-keepclassmembers class android.os.Parcel { void writeCharSequence(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$16 { void <init>(com.fsck.k9.activity.setup.AccountSettings,java.util.Map); }
-keepclassmembers class android.os.Parcel { void writeString(java.lang.String); }
-keepclassmembers class android.os.Parcel { void writeStrongBinder(android.os.IBinder); }
-keepclassmembers class android.widget.AutoCompleteTextView { void dismissDropDown(); }
-keepclassmembers class android.widget.AutoCompleteTextView { boolean setFrame(int,int,int,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void <init>(int); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { void <init>(); }
-keepclassmembers class java.nio.charset.CharsetEncoder { void checkCoderResult(java.nio.charset.CoderResult); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$16 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class android.widget.ListView { boolean fullScroll(int); }
-keepclassmembers class android.widget.AutoCompleteTextView { void ensureImeVisible(boolean); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void expand(int); }
-keepclassmembers class android.os.Parcel { void writeMapInternal(java.util.Map); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.os.Parcel { void writeByte(byte); }
-keepclassmembers class android.os.Parcel { void writeMap(java.util.Map); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { java.util.List parse(org.apache.http.HeaderElement[],org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo46 { void addMessagesFlagColumns(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper); }
-keepclassmembers class android.widget.AutoCompleteTextView { void showDropDown(); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(char[],int,int); }
-keepclassmembers class java.nio.charset.CharsetEncoder { java.nio.ByteBuffer allocateMore(java.nio.ByteBuffer); }
-keepclassmembers class android.widget.ListView { boolean handleHorizontalFocusWithinListItem(int); }
-keepclassmembers class android.os.Parcel { void writeArrayMapInternal(android.util.ArrayMap); }
-keepclassmembers class java.nio.charset.CharsetEncoder { java.nio.charset.CoderResult encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean); }
-keepclassmembers class android.os.Parcel { void writeBundle(android.os.Bundle); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(java.lang.String); }
-keepclassmembers class android.os.Parcel { void writePersistableBundle(android.os.PersistableBundle); }
-keepclassmembers class android.os.Parcel { void writeSize(android.util.Size); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <init>(java.lang.String); }
-keepclassmembers class android.os.Parcel { void writeSizeF(android.util.SizeF); }
-keepclassmembers class java.lang.Character$UnicodeBlock { void <clinit>(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void buildImeCompletions(); }
-keepclassmembers class android.webkit.WebView$PrivateAccess { void <init>(android.webkit.WebView); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.lang.Character$UnicodeBlock { java.lang.Character$UnicodeBlock of(char); }
-keepclassmembers class android.graphics.Region$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void <init>(byte[]); }
-keepclassmembers class android.os.Parcel { void writeList(java.util.List); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(org.apache.http.util.CharArrayBuffer,int,int); }
-keepclassmembers class android.widget.ListView { boolean arrowScroll(int); }
-keepclassmembers class android.widget.AutoCompleteTextView { android.widget.AutoCompleteTextView$Validator getValidator(); }
-keepclassmembers class android.widget.AutoCompleteTextView { void performValidation(); }
-keepclassmembers class org.apache.http.impl.cookie.CookieSpecBase { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser { void <clinit>(); }
-keepclassmembers class android.os.Parcel { void writeArray(java.lang.Object[]); }
-keepclassmembers class android.widget.AutoCompleteTextView { android.widget.Filter getFilter(); }
-keepclassmembers class android.os.Parcel { void writeSparseArray(android.util.SparseArray); }
-keepclassmembers class android.widget.ListView { int nextSelectedPositionForDirection(android.view.View,int,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(char); }
-keepclassmembers class android.widget.AutoCompleteTextView { void access$500(android.widget.AutoCompleteTextView,android.view.View,int,long); }
-keepclassmembers class android.widget.AutoCompleteTextView { void access$600(android.widget.AutoCompleteTextView); }
-keepclassmembers class java.io.BufferedOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.os.Parcel { void writeSparseBooleanArray(android.util.SparseBooleanArray); }
-keepclassmembers class java.nio.charset.CharsetEncoder { java.nio.charset.CoderResult flush(java.nio.ByteBuffer); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(byte[],int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser { void <init>(java.io.InputStream); }
-keepclassmembers class android.widget.AutoCompleteTextView { android.widget.ListAdapter access$700(android.widget.AutoCompleteTextView); }
-keepclassmembers class java.io.BufferedOutputStream { void flush(); }
-keepclassmembers class android.os.Parcel { void writeBooleanArray(boolean[]); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser { int calcTagOffset(int,int); }
-keepclassmembers class java.io.BufferedOutputStream { void checkNotClosed(); }
-keepclassmembers class java.nio.charset.CharsetEncoder { void implOnMalformedInput(java.nio.charset.CodingErrorAction); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.io.BufferedOutputStream { void <init>(java.io.OutputStream,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser { byte[] getExifSegment(); }
-keepclassmembers class android.os.Parcel { boolean[] createBooleanArray(); }
-keepclassmembers class java.nio.charset.CharsetEncoder { void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction); }
-keepclassmembers class java.nio.charset.CharsetEncoder { void implReplaceWith(byte[]); }
-keepclassmembers class java.io.BufferedOutputStream { void write(byte[],int,int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(org.apache.http.util.ByteArrayBuffer,int,int); }
-keepclassmembers class java.nio.charset.CharsetEncoder { boolean isLegalReplacement(byte[]); }
-keepclassmembers class java.io.BufferedOutputStream { void close(); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { void <clinit>(); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void append(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.BasicConstraints { void <clinit>(); }
-keepclassmembers class android.os.Parcel { void writeCharArray(char[]); }
-keepclassmembers class android.widget.ListView { boolean arrowScrollImpl(int); }
-keepclassmembers class java.lang.System { void arraycopy(java.lang.Object,int,java.lang.Object,int,int); }
-keepclassmembers class java.io.BufferedOutputStream { void write(int); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { void <init>(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { void <init>(int); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void clear(); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException { void <init>(com.fsck.k9.mail.CertificateValidationException$Reason); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { java.lang.String downloadAndStoreImage(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.nio.charset.CharsetEncoder { float maxBytesPerChar(); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { char charAt(int); }
-keepclassmembers class java.nio.charset.CharsetEncoder { java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException { void <init>(java.lang.String,com.fsck.k9.mail.CertificateValidationException$Reason,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException { void <init>(java.lang.String); }
-keepclassmembers class java.nio.charset.CharsetEncoder { java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$ASN1StringUTF8Type { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.io.BufferedOutputStream { void flushInternal(); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { char[] buffer(); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { int length(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$38 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { void ensureCapacity(int); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException { void scanForCause(); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser { boolean handles(int); }
-keepclassmembers class android.os.Parcel { void writeIntArray(int[]); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { java.lang.String fetchAndStoreImage(java.lang.String); }
-keepclassmembers class java.nio.charset.CharsetEncoder { java.nio.charset.CharsetEncoder replaceWith(byte[]); }
-keepclassmembers class android.os.Parcel { int[] createIntArray(); }
-keepclassmembers class android.widget.ListView { void handleNewSelectionChange(android.view.View,int,int,boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser { int parseExifSegment(com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { java.lang.String getFileNameFromContentProvider(android.content.ContentResolver,android.net.Uri); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException { com.fsck.k9.mail.CertificateValidationException$Reason getReason(); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException { boolean needsUserAttention(); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { int indexOf(int,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$38 { void run(); }
-keepclassmembers class android.os.Parcel { void writeLongArray(long[]); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(android.os.StrictMode$ThreadSpanState); }
-keepclassmembers class android.os.Parcel { long[] createLongArray(); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { int indexOf(int); }
-keepclassmembers class android.os.StrictMode$Span { void <init>(); }
-keepclassmembers class android.os.StrictMode$Span { void finish(); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { java.lang.String getFileNameFromUrl(java.net.URL); }
-keepclassmembers class android.widget.ListView { void measureAndAdjustDown(android.view.View,int,int); }
-keepclassmembers class java.nio.charset.CharsetEncoder { java.nio.charset.CharsetEncoder reset(); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException { java.lang.String getAlias(); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException { java.security.cert.X509Certificate[] getCertChain(); }
-keepclassmembers class java.nio.charset.CharsetEncoder { java.lang.IllegalStateException illegalStateException(); }
-keepclassmembers class android.widget.ListView { void measureItem(android.view.View); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { java.lang.String getFileNameWithExtension(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.SearchResponse { void <init>(java.util.List); }
-keepclassmembers class com.fsck.k9.mail.store.imap.SearchResponse { com.fsck.k9.mail.store.imap.SearchResponse parse(java.util.List); }
-keepclassmembers class android.os.Parcel { float[] createFloatArray(); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { java.lang.String getMimeType(android.content.ContentResolver,android.net.Uri,java.lang.String); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1800(android.os.StrictMode$Span); }
-keepclassmembers class com.fsck.k9.mail.store.imap.SearchResponse { void parseSingleLine(com.fsck.k9.mail.store.imap.ImapResponse,java.util.List); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { java.lang.String substring(int,int); }
-keepclassmembers class android.widget.ListView { void relayoutMeasuredItem(android.view.View); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { void <init>(java.util.Collections$UnmodifiableCollection); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { java.lang.String toString(); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$1802(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class java.util.logging.Level { java.util.logging.Level parse(java.lang.String); }
-keepclassmembers class org.apache.http.util.CharArrayBuffer { java.lang.String substringTrimmed(int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { java.lang.String getMimeType(java.net.URLConnection,java.lang.String); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { java.lang.Object next(); }
-keepclassmembers class android.widget.ListView { int getArrowScrollPreviewLength(); }
-keepclassmembers class android.widget.ListView { int amountToScroll(int,int); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1902(android.os.StrictMode$Span,java.lang.String); }
-keepclassmembers class android.os.StrictMode$Span { long access$2002(android.os.StrictMode$Span,long); }
-keepclassmembers class android.os.StrictMode$Span { android.os.StrictMode$Span access$2102(android.os.StrictMode$Span,android.os.StrictMode$Span); }
-keepclassmembers class android.os.StrictMode$Span { java.lang.String access$1900(android.os.StrictMode$Span); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection$1 { boolean hasNext(); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { java.lang.String writeFileToStorage(java.lang.String,java.io.InputStream); }
-keepclassmembers class android.graphics.Insets { void <init>(int,int,int,int); }
-keepclassmembers class com.fsck.k9.mail.ConnectionSecurity { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$1$1 { void <init>(com.fsck.k9.activity.setup.AccountSetupCheckSettings$1); }
-keepclassmembers class com.fsck.k9.mail.store.imap.SearchResponse { java.util.List getNumbers(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$1$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(int,int,int,int); }
-keepclassmembers class android.graphics.Insets { android.graphics.Insets of(android.graphics.Rect); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { void <init>(java.lang.String,int,int,int,int,int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.mail.ConnectionSecurity { com.fsck.k9.mail.ConnectionSecurity valueOf(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.ConnectionSecurity { void <init>(java.lang.String,int); }
-keepclassmembers class android.os.Parcel { void writeStringArray(java.lang.String[]); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { java.lang.String doInBackground(java.lang.String[]); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.logging.Level { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { void onPostExecute(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.ConnectionSecurity { com.fsck.k9.mail.ConnectionSecurity[] values(); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { java.util.Date convertToDate(int,int,int,int,int,int,int); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { int convertToYear(java.lang.String); }
-keepclassmembers class android.os.Parcel { java.lang.String[] createStringArray(); }
-keepclassmembers class com.fsck.k9.mail.Message { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser { int getOrientation(); }
-keepclassmembers class com.fsck.k9.ui.messageview.DownloadImageTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class java.util.logging.Level { int intValue(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.logging.Level { java.lang.String getName(); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenInputConnection { void <init>(com.tokenautocomplete.TokenCompleteTextView,android.view.inputmethod.InputConnection,boolean); }
-keepclassmembers class android.os.Parcel { void writeCharSequenceArray(java.lang.CharSequence[]); }
-keepclassmembers class com.fsck.k9.mail.Message { long calculateSize(); }
-keepclassmembers class android.widget.ListView { int lookForSelectablePositionOnScreen(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$AbstractSource { void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest); }
-keepclassmembers class android.graphics.Insets { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.Message { void delete(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { java.util.Date getDate(); }
-keepclassmembers class com.fsck.k9.mail.Message { void destroy(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser { com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType getType(); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { int getMonth(); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { int getHour(); }
-keepclassmembers class java.util.logging.Level { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.Message { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser { boolean hasAlpha(); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { int getSecond(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$AbstractSource { void cacheWrite(com.android.okio.OkBuffer,long); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { int getDay(); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { int getYear(); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { int getMinute(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo48 { void updateThreadsSetRootWhereNull(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { int getTimeZone(); }
-keepclassmembers class java.util.logging.Level { int hashCode(); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { int hashCode(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$AbstractSource { void endOfInput(boolean); }
-keepclassmembers class com.fsck.k9.mail.Message { java.util.Date getInternalDate(); }
-keepclassmembers class java.util.logging.Level { java.lang.String toString(); }
-keepclassmembers class java.util.logging.Level { void <clinit>(); }
-keepclassmembers class android.widget.ListView { android.widget.ListView$ArrowScrollFocusResult arrowScrollFocused(int); }
-keepclassmembers class com.fsck.k9.mail.Message { java.util.Set getFlags(); }
-keepclassmembers class android.os.Parcel { void writeStringList(java.util.List); }
-keepclassmembers class com.fsck.k9.mail.Message { int hashCode(); }
-keepclassmembers class com.fsck.k9.mail.Message { java.lang.String getUid(); }
-keepclassmembers class com.fsck.k9.mail.Message { com.fsck.k9.mail.Folder getFolder(); }
-keepclassmembers class org.apache.james.mime4j.dom.datetime.DateTime { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { java.util.Set collectTextParts(com.fsck.k9.mail.Message); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$AbstractSource { void unexpectedEndOfInput(); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { void findAttachments(com.fsck.k9.mail.Multipart,java.util.Set,java.util.List); }
-keepclassmembers class com.fsck.k9.mail.Message { boolean olderThan(java.util.Date); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$18 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.mail.Message { boolean isSet(com.fsck.k9.mail.Flag); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$18 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void <init>(com.bumptech.glide.load.resource.drawable.GlideDrawable,int); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { java.util.List findHtmlPart(com.fsck.k9.mail.Multipart,java.util.Set,java.util.List,boolean); }
-keepclassmembers class com.fsck.k9.mail.Message { void setFlag(com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void <init>(com.bumptech.glide.request.target.SquaringDrawable$State,com.bumptech.glide.load.resource.drawable.GlideDrawable,android.content.res.Resources); }
-keepclassmembers class android.os.Parcel { void writeValue(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.Message { void setInternalDate(java.util.Date); }
-keepclassmembers class android.os.Parcel { void writeTypedArray(android.os.Parcelable[],int); }
-keepclassmembers class com.fsck.k9.mail.Message { void setFlags(java.util.Set,boolean); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { android.graphics.drawable.Drawable$Callback getCallback(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpContext { java.lang.Object getAttribute(java.lang.String); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { int getChangingConfigurations(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStoreUriDecoder { com.fsck.k9.mail.store.imap.ImapStoreSettings decode(java.lang.String); }
-keepclassmembers class org.apache.http.protocol.BasicHttpContext { void <init>(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpContext { void <init>(org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { int getIntrinsicHeight(); }
-keepclassmembers class com.fsck.k9.mail.Message { void setUid(java.lang.String); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { int getIntrinsicWidth(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpContext { void setAttribute(java.lang.String,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { java.util.List findTextPart(com.fsck.k9.mail.Multipart,boolean); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class org.apache.james.mime4j.stream.RecursionMode { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { int getOpacity(); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void invalidateSelf(); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { void findViewablesAndAttachments(com.fsck.k9.mail.Part,java.util.List,java.util.List); }
-keepclassmembers class org.apache.james.mime4j.stream.RecursionMode { void <init>(java.lang.String,int); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$30 { void act(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,java.util.List); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$30 { void <init>(com.fsck.k9.controller.MessagingController); }
-keepclassmembers class android.widget.ListView { int positionOfNewFocus(android.view.View); }
-keepclassmembers class android.widget.ListView { boolean isViewAncestorOf(android.view.View,android.view.View); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatement { void <init>(); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void setBounds(android.graphics.Rect); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatement { void <init>(android.database.sqlite.SQLiteConnection$1); }
-keepclassmembers class android.widget.ListView { int amountToScrollToNewFocus(int,android.view.View,int); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void setBounds(int,int,int,int); }
-keepclassmembers class android.transition.ChangeBounds$3 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void setAlpha(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$20 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void setDither(boolean); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void setLoopCount(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$20 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.File); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.os.Parcel { void writeParcelable(android.os.Parcelable,int); }
-keepclassmembers class android.widget.ListView { int distanceToView(android.view.View); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.io.File,boolean); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void start(); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { java.lang.String getContentDisposition(com.fsck.k9.mail.Part); }
-keepclassmembers class org.xmlpull.v1.XmlPullParser { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.request.target.SquaringDrawable { void stop(); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.lang.String); }
-keepclassmembers class java.io.FileOutputStream { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.os.Parcel { void writeSerializable(java.io.Serializable); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { com.fsck.k9.mail.Message getMessageFromPart(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$4 { void <init>(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class java.io.FileOutputStream { void close(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$4 { void loadMessageRemoteFailed(com.fsck.k9.Account,java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { java.lang.String getTextFromPart(com.fsck.k9.mail.Part); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLRSAPrivateKey { void <init>(com.android.org.conscrypt.OpenSSLKey); }
-keepclassmembers class android.widget.ListView { void scrollListItemsBy(int); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { java.lang.String getTextFromPart(com.fsck.k9.mail.Part,long); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { java.util.Set getParts(java.util.List); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void <init>(android.content.Context,android.util.AttributeSet,int,boolean); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1 { void <init>(com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void <clinit>(); }
-keepclassmembers class java.io.FileOutputStream { java.io.FileDescriptor getFD(); }
-keepclassmembers class com.fsck.k9.activity.MessageList$1 { void <init>(com.fsck.k9.activity.MessageList); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock$1 { void run(); }
-keepclassmembers class java.io.FileOutputStream { void write(byte[],int,int); }
-keepclassmembers class com.fsck.k9.activity.MessageList$1 { void run(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLRSAPrivateKey { com.android.org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.RSAPrivateKey); }
-keepclassmembers class android.os.Parcel { void writeNoException(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$4 { void loadMessageRemoteFinished(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class java.io.FileOutputStream { void write(int); }
-keepclassmembers class android.os.Parcel { void readException(); }
-keepclassmembers class com.fsck.k9.mail.BoundaryGenerator { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.BoundaryGenerator { void <init>(java.util.Random); }
-keepclassmembers class android.os.Parcel { int readExceptionCode(); }
-keepclassmembers class com.fsck.k9.mail.BoundaryGenerator { com.fsck.k9.mail.BoundaryGenerator getInstance(); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { java.lang.String getTextFromTextPart(com.fsck.k9.mail.Part,com.fsck.k9.mail.Body,java.lang.String,long); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String createExtnPattern(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.BoundaryGenerator { java.lang.String generateBoundary(); }
-keepclassmembers class android.widget.ListView { android.view.View addViewBelow(android.view.View,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <init>(java.lang.String,com.android.i18n.phonenumbers.MetadataLoader,java.util.Map); }
-keepclassmembers class android.os.Parcel { void readException(int,java.lang.String); }
-keepclassmembers class android.widget.ListView { android.view.View addViewAbove(android.view.View,int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void <init>(android.content.Context,boolean); }
-keepclassmembers class com.fsck.k9.mail.Folder$FolderClass { void <clinit>(); }
-keepclassmembers class android.os.Parcel { float readFloat(); }
-keepclassmembers class android.os.Parcel { double readDouble(); }
-keepclassmembers class android.os.Parcel { java.lang.String readString(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { com.github.amlcurran.showcaseview.ShotStateStore access$000(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class android.app.ActivityManagerProxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.os.Parcel { android.os.IBinder readStrongBinder(); }
-keepclassmembers class android.app.ActivityManagerProxy { int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle); }
-keepclassmembers class android.os.Parcel { int readInt(); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence readCharSequence(); }
-keepclassmembers class android.os.Parcel { long readLong(); }
-keepclassmembers class com.fsck.k9.mail.Folder$FolderClass { void <init>(java.lang.String,int); }
-keepclassmembers class android.os.Parcel { android.os.ParcelFileDescriptor readFileDescriptor(); }
-keepclassmembers class android.os.Parcel { java.io.FileDescriptor openFileDescriptor(java.lang.String,int); }
-keepclassmembers class android.widget.ListView { boolean isOpaque(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { boolean access$100(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void access$1400(com.github.amlcurran.showcaseview.ShowcaseView,boolean); }
-keepclassmembers class org.apache.http.util.ExceptionUtils { void initCause(java.lang.Throwable,java.lang.Throwable); }
-keepclassmembers class org.apache.http.util.ExceptionUtils { java.lang.reflect.Method getInitCauseMethod(); }
-keepclassmembers class android.os.Parcel { byte readByte(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void access$200(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { boolean access$302(com.github.amlcurran.showcaseview.ShowcaseView,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void loadMetadataFromFile(java.lang.String,java.lang.String,int,com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { com.github.amlcurran.showcaseview.AnimationFactory access$400(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class org.apache.http.util.ExceptionUtils { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { java.util.Set getTextParts(com.fsck.k9.mail.Part); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void access$500(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { boolean hasMissingParts(com.fsck.k9.mail.Part); }
-keepclassmembers class android.os.Parcel { java.util.HashMap readHashMap(java.lang.ClassLoader); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { boolean access$602(com.github.amlcurran.showcaseview.ShowcaseView,boolean); }
-keepclassmembers class android.widget.ListView { void setCacheColorHint(int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { com.github.amlcurran.showcaseview.OnShowcaseEventListener access$700(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class android.os.Parcel { android.os.Bundle readBundle(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void access$800(com.github.amlcurran.showcaseview.ShowcaseView,android.view.ViewGroup,int); }
-keepclassmembers class com.fsck.k9.mail.Folder$FolderClass { com.fsck.k9.mail.Folder$FolderClass valueOf(java.lang.String); }
-keepclassmembers class android.os.Parcel { android.os.Bundle readBundle(java.lang.ClassLoader); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageExtractor { java.lang.Boolean isPartTextualBody(com.fsck.k9.mail.Part); }
-keepclassmembers class android.widget.ListView { void drawOverscrollHeader(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void access$900(com.github.amlcurran.showcaseview.ShowcaseView,com.github.amlcurran.showcaseview.ShowcaseDrawer); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { boolean canUpdateBitmap(); }
-keepclassmembers class android.os.Parcel { android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplEclair { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$22 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplEclair { void cancelNotification(android.app.NotificationManager,java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$22 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void clearBitmap(); }
-keepclassmembers class android.widget.ListView { void drawOverscrollFooter(android.graphics.Canvas,android.graphics.drawable.Drawable,android.graphics.Rect); }
-keepclassmembers class android.os.Parcel { android.util.Size readSize(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void fadeInShowcase(); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.os.Parcel { android.util.SizeF readSizeF(); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { int getIndex(java.lang.Object); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void fadeOutShowcase(); }
-keepclassmembers class android.os.Parcel { byte[] createByteArray(); }
-keepclassmembers class org.apache.harmony.security.x509.Time$1 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { boolean hasShot(); }
-keepclassmembers class android.widget.ListView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void hideImmediate(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplEclair { void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { boolean haveBoundsChanged(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void init(); }
-keepclassmembers class android.os.Parcel { java.lang.CharSequence[] readCharSequenceArray(); }
-keepclassmembers class android.os.Parcel { java.lang.String[] readStringArray(); }
-keepclassmembers class android.os.Parcel { java.util.ArrayList readArrayList(java.lang.ClassLoader); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection loadMetadataAndCloseInput(java.io.ObjectInputStream); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void recalculateText(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void insertShowcaseView(com.github.amlcurran.showcaseview.ShowcaseView,android.view.ViewGroup,int); }
-keepclassmembers class android.os.Parcel { android.util.SparseArray readSparseArray(java.lang.ClassLoader); }
-keepclassmembers class android.os.Parcel { java.lang.Object[] readArray(java.lang.ClassLoader); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void setBlockAllTouches(boolean); }
-keepclassmembers class android.os.Parcel { android.util.SparseBooleanArray readSparseBooleanArray(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { void <init>(android.graphics.drawable.LayerDrawable$LayerState,android.graphics.drawable.RippleDrawable,android.content.res.Resources); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String extractPossibleNumber(java.lang.String); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void tintButton(int,boolean); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob$SourceWriter { void <init>(com.bumptech.glide.load.engine.DecodeJob,com.bumptech.glide.load.Encoder,java.lang.Object); }
-keepclassmembers class android.os.Parcel { java.util.ArrayList createStringArrayList(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void updateBitmap(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.view.ToolableViewAnimator { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob$SourceWriter { boolean write(java.io.File); }
-keepclassmembers class com.fsck.k9.view.ToolableViewAnimator { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void updateStyle(android.content.res.TypedArray,boolean); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void addRule(int); }
-keepclassmembers class com.fsck.k9.view.ToolableViewAnimator { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.os.Parcel { java.lang.Object[] createTypedArray(android.os.Parcelable$Creator); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isViablePhoneNumber(java.lang.String); }
-keepclassmembers class com.fsck.k9.view.ToolableViewAnimator { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalize(java.lang.String); }
-keepclassmembers class com.fsck.k9.view.ToolableViewAnimator { void setDisplayedChild(int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { boolean hasRelativeRules(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeDigitsOnly(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void normalize(java.lang.StringBuilder); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$26$1 { void <init>(com.fsck.k9.controller.MessagingController$26,com.fsck.k9.Account,java.util.List); }
-keepclassmembers class java.nio.charset.CharacterCodingException { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <init>(java.util.List); }
-keepclassmembers class android.database.sqlite.SQLiteQueryBuilder { java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.ListActivity$2 { void <init>(android.app.ListActivity); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.StringBuilder normalizeDigits(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$26$1 { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { int size(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void resolveRules(int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.content.res.Configuration$1 { void <init>(); }
-keepclassmembers class android.os.Parcel { void writeParcelableArray(android.os.Parcelable[],int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStoreSettings { void <init>(java.lang.String,int,com.fsck.k9.mail.ConnectionSecurity,com.fsck.k9.mail.AuthType,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String); }
-keepclassmembers class android.os.Parcel { java.lang.Object readValue(java.lang.ClassLoader); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStoreSettings { java.util.Map getExtra(); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void <init>(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStoreSettings { com.fsck.k9.mail.ServerSettings newPassword(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class android.database.sqlite.SQLiteQueryBuilder { void appendClause(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteQueryBuilder { void appendColumns(java.lang.StringBuilder,java.lang.String[]); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void setShowcaseDrawer(com.github.amlcurran.showcaseview.ShowcaseDrawer); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { boolean hasShowcaseView(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void hide(); }
-keepclassmembers class com.fsck.k9.K9 { void <clinit>(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void hideButton(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String normalizeHelper(java.lang.String,java.util.Map,boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable$RippleState { boolean canApplyTheme(); }
-keepclassmembers class android.widget.ListView { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setInstance(com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { boolean isShowing(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.widget.ListView { void drawDivider(android.graphics.Canvas,android.graphics.Rect,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.K9 { boolean areDatabasesUpToDate(); }
-keepclassmembers class android.widget.ListView { void setDivider(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil createInstance(com.android.i18n.phonenumbers.MetadataLoader); }
-keepclassmembers class com.fsck.k9.K9 { void <init>(); }
-keepclassmembers class com.fsck.k9.K9 { boolean changeContactNameColor(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { int hashCode(); }
-keepclassmembers class com.fsck.k9.K9 { boolean confirmDelete(); }
-keepclassmembers class com.fsck.k9.K9 { boolean confirmDeleteFromNotification(); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable$Creator readParcelableCreator(java.lang.ClassLoader); }
-keepclassmembers class com.fsck.k9.K9 { boolean confirmDeleteStarred(); }
-keepclassmembers class com.fsck.k9.K9 { boolean confirmDiscardMessage(); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable readParcelable(java.lang.ClassLoader); }
-keepclassmembers class com.fsck.k9.K9 { boolean autofitWidth(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.fsck.k9.K9 { boolean gesturesEnabled(); }
-keepclassmembers class android.app.ActivityManagerProxy { int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil getInstance(); }
-keepclassmembers class com.fsck.k9.K9 { boolean confirmMarkAllRead(); }
-keepclassmembers class com.fsck.k9.K9 { boolean confirmSpam(); }
-keepclassmembers class com.fsck.k9.mail.filter.FixedLengthInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class android.widget.ListView { void setDividerHeight(int); }
-keepclassmembers class com.fsck.k9.K9 { boolean countSearchMessages(); }
-keepclassmembers class com.fsck.k9.K9 { java.lang.String getAttachmentDefaultPath(); }
-keepclassmembers class com.fsck.k9.mail.filter.FixedLengthInputStream { int available(); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.FontSizes getFontSizes(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isValidRegionCode(java.lang.String); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.K9$Theme getK9ComposerTheme(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { void <clinit>(); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.K9$Theme getK9ComposerThemeSetting(); }
-keepclassmembers class com.fsck.k9.mail.filter.FixedLengthInputStream { int read(); }
-keepclassmembers class com.fsck.k9.K9 { java.lang.String getK9Language(); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.K9$Theme getK9MessageViewTheme(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions { java.util.List access$000(org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean hasValidCountryCallingCode(int); }
-keepclassmembers class com.fsck.k9.mail.filter.FixedLengthInputStream { int read(byte[]); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.K9$Theme getK9MessageViewThemeSetting(); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.K9$LockScreenNotificationVisibility getLockScreenNotificationVisibility(); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.K9$NotificationHideSubject getNotificationHideSubject(); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.K9$Theme getK9Theme(); }
-keepclassmembers class android.widget.ListView { void setOverscrollHeader(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.K9$NotificationQuickDelete getNotificationQuickDeleteBehaviour(); }
-keepclassmembers class com.fsck.k9.mail.filter.FixedLengthInputStream { int read(byte[],int,int); }
-keepclassmembers class com.fsck.k9.K9 { int getPgpSignOnlyDialogCounter(); }
-keepclassmembers class com.fsck.k9.mail.filter.FixedLengthInputStream { long skip(long); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.K9$BACKGROUND_OPS getBackgroundOps(); }
-keepclassmembers class android.widget.ListView { void setOverscrollFooter(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.K9 { int getContactNameColor(); }
-keepclassmembers class com.fsck.k9.K9 { boolean getQuietTimeEnabled(); }
-keepclassmembers class com.fsck.k9.K9 { java.lang.String getQuietTimeEnds(); }
-keepclassmembers class com.fsck.k9.K9 { java.lang.String getQuietTimeStarts(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void setBlocksTouches(boolean); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.Account$SortType getSortType(); }
-keepclassmembers class android.widget.ListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.mail.filter.FixedLengthInputStream { void skipRemaining(); }
-keepclassmembers class com.fsck.k9.helper.ReplyToParser { void <init>(); }
-keepclassmembers class com.fsck.k9.K9 { com.fsck.k9.K9$SplitViewMode getSplitViewMode(); }
-keepclassmembers class com.bumptech.glide.load.resource.NullResourceEncoder { void <clinit>(); }
-keepclassmembers class com.fsck.k9.helper.ReplyToParser { com.fsck.k9.helper.ReplyToParser$ReplyToAddresses getRecipientsToReplyAllTo(com.fsck.k9.mail.Message,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.K9 { boolean hideTimeZone(); }
-keepclassmembers class com.fsck.k9.mail.filter.FixedLengthInputStream { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.K9 { int getK9ThemeResourceId(); }
-keepclassmembers class com.fsck.k9.K9 { int getK9ThemeResourceId(com.fsck.k9.K9$Theme); }
-keepclassmembers class com.bumptech.glide.load.resource.NullResourceEncoder { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.NullResourceEncoder { com.bumptech.glide.load.resource.NullResourceEncoder get(); }
-keepclassmembers class com.fsck.k9.K9 { boolean hideUserAgent(); }
-keepclassmembers class com.fsck.k9.K9 { boolean isMessageViewArchiveActionVisible(); }
-keepclassmembers class com.fsck.k9.K9 { boolean isColorizeMissingContactPictures(); }
-keepclassmembers class com.fsck.k9.K9 { int getPgpInlineDialogCounter(); }
-keepclassmembers class com.fsck.k9.K9 { boolean isHideSpecialAccounts(); }
-keepclassmembers class com.fsck.k9.K9 { boolean isMessageViewCopyActionVisible(); }
-keepclassmembers class com.fsck.k9.K9 { boolean isMessageViewMoveActionVisible(); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest); }
-keepclassmembers class com.bumptech.glide.load.resource.NullResourceEncoder { boolean encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.K9 { boolean isMessageViewSpamActionVisible(); }
-keepclassmembers class com.fsck.k9.K9 { boolean isMessageViewDeleteActionVisible(); }
-keepclassmembers class com.fsck.k9.K9 { boolean isQuietTime(); }
-keepclassmembers class com.fsck.k9.K9 { boolean isNotificationDuringQuietTimeEnabled(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void setHideOnTouchOutside(boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.NullResourceEncoder { boolean encode(java.lang.Object,java.io.OutputStream); }
-keepclassmembers class com.bumptech.glide.load.resource.NullResourceEncoder { java.lang.String getId(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int[] getRules(); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void setShowcase(com.github.amlcurran.showcaseview.targets.Target,boolean); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int[] getRules(int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$100(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void setShowcasePosition(int,int); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$300(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class android.support.v4.app.NotificationCompatHoneycomb { android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$400(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class com.fsck.k9.helper.ReplyToParser { com.fsck.k9.helper.ReplyToParser$ReplyToAddresses getRecipientsToReplyTo(com.fsck.k9.mail.Message,com.fsck.k9.Account); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$200(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void setShowcasePosition(android.graphics.Point); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$402(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class com.fsck.k9.K9 { boolean isSortAscending(com.fsck.k9.Account$SortType); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$302(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.ListView { android.view.View findViewTraversal(int); }
-keepclassmembers class android.widget.ListView { android.view.View findViewInHeadersOrFooters(java.util.ArrayList,int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void setStyle(int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$212(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$102(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class com.fsck.k9.K9 { boolean isThreadedViewEnabled(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegionOrCallingCode(int,java.lang.String); }
-keepclassmembers class com.fsck.k9.K9 { void loadPrefs(com.fsck.k9.Preferences); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$412(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void setTarget(com.github.amlcurran.showcaseview.targets.Target); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$312(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView { void show(); }
-keepclassmembers class android.os.Parcel { android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$120(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$220(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Node { void <init>(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int[] access$700(android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.os.Parcel { java.io.Serializable readSerializable(java.lang.ClassLoader); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$112(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.RelativeLayout$LayoutParams { int access$202(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.widget.FastScroller$3 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(java.lang.Object,int); }
-keepclassmembers class android.widget.FastScroller$3 { void setValue(android.view.View,int); }
-keepclassmembers class android.view.inputmethod.CursorAnchorInfo$Builder { void <init>(); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Integer get(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Node { int access$500(com.android.okhttp.internal.spdy.Huffman$Node); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Node { com.android.okhttp.internal.spdy.Huffman$Node[] access$400(com.android.okhttp.internal.spdy.Huffman$Node); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivity(android.os.IBinder,int,android.content.Intent,boolean); }
-keepclassmembers class android.widget.FastScroller$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteQueryBuilder { void <clinit>(); }
-keepclassmembers class android.os.Parcel { void init(long); }
-keepclassmembers class android.widget.ListView { android.view.View findViewByPredicateInHeadersOrFooters(java.util.ArrayList,com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.os.Parcel { void <init>(long); }
-keepclassmembers class android.os.Parcel { void freeBuffer(); }
-keepclassmembers class android.app.ActivityManagerProxy { void finishSubActivity(android.os.IBinder,java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader$1 { int sizeOf(com.fsck.k9.mail.Address,android.graphics.Bitmap); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader$1 { void <init>(com.fsck.k9.activity.misc.ContactPictureLoader,int); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader$1 { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.Parcel { void readMapInternal(java.util.Map,int,java.lang.ClassLoader); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean finishActivityAffinity(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Node { void <init>(int,int); }
-keepclassmembers class java.math.BigDecimal { void <init>(long,int); }
-keepclassmembers class android.os.Parcel { void readArrayMapInternal(android.util.ArrayMap,int,java.lang.ClassLoader); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { void <init>(android.text.Spanned,char[],char[]); }
-keepclassmembers class java.math.BigDecimal { void <init>(char[],int,int); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class java.math.BigDecimal { void <init>(int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean releaseActivityInstance(android.os.IBinder); }
-keepclassmembers class libcore.icu.NativeConverter { java.nio.charset.Charset charsetForName(java.lang.String); }
-keepclassmembers class android.os.Parcel { void readListInternal(java.util.List,int,java.lang.ClassLoader); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.os.Parcel { void readArrayInternal(java.lang.Object[],int,java.lang.ClassLoader); }
-keepclassmembers class com.github.amlcurran.showcaseview.NoAnimationFactory { void animateTargetToPoint(com.github.amlcurran.showcaseview.ShowcaseView,android.graphics.Point); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanEnd(java.lang.Object); }
-keepclassmembers class com.github.amlcurran.showcaseview.NoAnimationFactory { void <init>(); }
-keepclassmembers class android.content.ComponentName$1 { android.content.ComponentName createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.ComponentName$1 { void <init>(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$SpannedReplacementCharSequence { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class java.util.concurrent.Executors$DefaultThreadFactory { void <init>(); }
-keepclassmembers class android.support.v4.content.ModernAsyncTask { boolean isCancelled(); }
-keepclassmembers class com.github.amlcurran.showcaseview.NoAnimationFactory { void fadeInView(android.view.View,long,com.github.amlcurran.showcaseview.AnimationFactory$AnimationStartListener); }
-keepclassmembers class android.os.Parcel { void readSparseArrayInternal(android.util.SparseArray,int,java.lang.ClassLoader); }
-keepclassmembers class com.github.amlcurran.showcaseview.NoAnimationFactory { void fadeOutView(android.view.View,long,com.github.amlcurran.showcaseview.AnimationFactory$AnimationEndListener); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Node { int access$600(com.android.okhttp.internal.spdy.Huffman$Node); }
-keepclassmembers class android.os.Parcel { void <clinit>(); }
-keepclassmembers class android.os.Parcel { void readSparseBooleanArrayInternal(android.util.SparseBooleanArray,int); }
-keepclassmembers class android.content.ComponentName$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$16 { void <init>(com.fsck.k9.mailstore.LocalStore,java.lang.String,java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$16 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.K9 { boolean messageListCheckboxes(); }
-keepclassmembers class java.util.concurrent.Executors$DefaultThreadFactory { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.Executors$DefaultThreadFactory { void <clinit>(); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$16 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { void <init>(org.apache.james.mime4j.stream.MimeConfig,org.apache.james.mime4j.codec.DecodeMonitor,org.apache.james.mime4j.stream.BodyDescriptorBuilder); }
-keepclassmembers class com.fsck.k9.K9 { int messageListPreviewLines(); }
-keepclassmembers class com.fsck.k9.K9 { boolean messageListStars(); }
-keepclassmembers class com.fsck.k9.K9 { boolean measureAccounts(); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.fsck.k9.K9 { boolean messageViewFixedWidthFont(); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.K9 { boolean messageViewReturnToList(); }
-keepclassmembers class android.widget.ListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.math.BigDecimal { void <init>(double); }
-keepclassmembers class android.widget.CheckBox { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.K9 { boolean messageListSenderAboveSubject(); }
-keepclassmembers class com.fsck.k9.K9 { void save(com.fsck.k9.preferences.StorageEditor); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { void <init>(org.apache.james.mime4j.stream.MimeConfig,org.apache.james.mime4j.codec.DecodeMonitor,org.apache.james.mime4j.stream.FieldBuilder,org.apache.james.mime4j.stream.BodyDescriptorBuilder); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time { int getHour(); }
-keepclassmembers class android.widget.CheckBox { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time { int getMinute(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time { int getSecond(); }
-keepclassmembers class com.fsck.k9.K9 { boolean messageViewShowNext(); }
-keepclassmembers class com.fsck.k9.K9 { void registerApplicationAware(com.fsck.k9.K9$ApplicationAware); }
-keepclassmembers class android.widget.CheckBox { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time { int getZone(); }
-keepclassmembers class android.widget.CheckBox { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.ListView { android.widget.Adapter getAdapter(); }
-keepclassmembers class dalvik.system.PathClassLoader { void <init>(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$1 { void <clinit>(); }
-keepclassmembers class android.widget.CheckBox { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.res.Configuration { void <init>(); }
-keepclassmembers class android.content.res.Configuration { void <init>(android.content.res.Configuration); }
-keepclassmembers class java.math.BigDecimal { void <init>(double,java.math.MathContext); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger); }
-keepclassmembers class android.widget.CheckBox { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.content.res.Configuration { void setTo(android.content.res.Configuration); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time { void <init>(int,int,int,int); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { void doParse(java.io.InputStream,org.apache.james.mime4j.stream.EntityState); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { void <init>(java.io.InputStream,int,int); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { org.apache.james.mime4j.stream.MimeConfig getConfig(); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { void expand(int); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { org.apache.james.mime4j.stream.BodyDescriptor getBodyDescriptor(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { java.io.InputStream getInputStream(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { java.io.InputStream getDecodedInputStream(); }
-keepclassmembers class java.math.BigDecimal { void <init>(java.math.BigInteger,int); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { org.apache.james.mime4j.stream.EntityState getState(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { org.apache.james.mime4j.stream.Field getField(); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int bufferLen(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$9 { void <init>(com.fsck.k9.mailstore.LocalFolder,java.lang.String); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long,int); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { org.apache.james.mime4j.stream.EntityState next(); }
-keepclassmembers class java.math.BigDecimal { void <init>(long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$9 { com.fsck.k9.mailstore.LocalMessage doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal valueOf(long); }
-keepclassmembers class com.fsck.k9.K9 { void setAttachmentDefaultPath(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int byteAt(int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory { android.media.MediaMetadataRetriever build(); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { byte[] buf(); }
-keepclassmembers class com.fsck.k9.K9 { void setAnimations(boolean); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { void ensureCapacity(int); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { org.apache.james.mime4j.stream.Field parseHeadless(java.io.InputStream,java.lang.String); }
-keepclassmembers class com.fsck.k9.K9 { boolean setBackgroundOps(java.lang.String); }
-keepclassmembers class com.fsck.k9.K9 { void setAutofitWidth(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setConfirmDelete(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setChangeContactNameColor(boolean); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { void parse(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.K9 { void setConfirmDeleteFromNotification(boolean); }
-keepclassmembers class com.fsck.k9.K9 { boolean setBackgroundOps(com.fsck.k9.K9$BACKGROUND_OPS); }
-keepclassmembers class com.fsck.k9.mailstore.UnavailableStorageException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int fillBuffer(); }
-keepclassmembers class com.fsck.k9.K9 { void setConfirmDeleteStarred(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setConfirmSpam(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setConfirmDiscardMessage(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setDatabasesUpToDate(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setContactNameColor(int); }
-keepclassmembers class com.fsck.k9.K9 { void setColorizeMissingContactPictures(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setConfirmMarkAllRead(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setCountSearchMessages(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setK9Language(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.UnavailableStorageException { void <init>(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setHideTimeZone(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setHideUserAgent(boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean { void <init>(); }
-keepclassmembers class com.fsck.k9.K9 { void setGesturesEnabled(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setK9ComposerThemeSetting(com.fsck.k9.K9$Theme); }
-keepclassmembers class com.fsck.k9.K9 { void setHideSpecialAccounts(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setK9Theme(com.fsck.k9.K9$Theme); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class com.fsck.k9.K9 { void setK9MessageViewThemeSetting(com.fsck.k9.K9$Theme); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int indexOf(byte); }
-keepclassmembers class com.fsck.k9.K9 { void setLockScreenNotificationVisibility(com.fsck.k9.K9$LockScreenNotificationVisibility); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings$1 { void <init>(com.fsck.k9.activity.setup.FolderSettings); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeTokenStream { void setRecursionMode(org.apache.james.mime4j.stream.RecursionMode); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings$1 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { boolean hasBufferedData(); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageListStars(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageListCheckboxes(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setMeasureAccounts(boolean); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int indexOf(byte,int,int); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageListPreviewLines(int); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageViewArchiveActionVisible(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageViewDeleteActionVisible(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageViewCopyActionVisible(boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$9 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageViewFixedWidthFont(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageListSenderAboveSubject(boolean); }
-keepclassmembers class android.provider.Settings { java.lang.Object access$000(); }
-keepclassmembers class android.provider.Settings { void <clinit>(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageViewMoveActionVisible(boolean); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { void <init>(java.util.Map$Entry); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageViewReturnToList(boolean); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { long getNativeAsset(); }
-keepclassmembers class com.fsck.k9.K9 { void setNotificationDuringQuietTimeEnabled(boolean); }
-keepclassmembers class android.app.ActivityManagerProxy { java.lang.String getCallingPackage(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageViewShowNext(boolean); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int indexOf(byte[],int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getNationalSignificantNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class com.fsck.k9.K9 { void setNotificationQuickDeleteBehaviour(com.fsck.k9.K9$NotificationQuickDelete); }
-keepclassmembers class com.github.amlcurran.showcaseview.AnimatorAnimationFactory$1 { void <init>(com.github.amlcurran.showcaseview.AnimatorAnimationFactory,com.github.amlcurran.showcaseview.AnimationFactory$AnimationStartListener); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { java.lang.Object getKey(); }
-keepclassmembers class com.fsck.k9.K9 { void setNotificationHideSubject(com.fsck.k9.K9$NotificationHideSubject); }
-keepclassmembers class com.fsck.k9.K9 { void setMessageViewSpamActionVisible(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setPgpInlineDialogCounter(int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { java.lang.Object getValue(); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void <init>(android.content.res.AssetManager,long); }
-keepclassmembers class com.fsck.k9.K9 { void setQuietTimeEnabled(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setPgpSignOnlyDialogCounter(int); }
-keepclassmembers class com.github.amlcurran.showcaseview.AnimatorAnimationFactory$1 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.K9 { void setQuietTimeEnds(java.lang.String); }
-keepclassmembers class com.fsck.k9.K9 { void setQuietTimeStarts(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.ComponentName getCallingActivity(android.os.IBinder); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { int hashCode(); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void close(); }
-keepclassmembers class com.fsck.k9.K9 { void setServicesEnabled(android.content.Context,boolean,java.lang.Integer); }
-keepclassmembers class com.fsck.k9.K9 { void setServicesEnabled(android.content.Context); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$28 { void act(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,java.util.List); }
-keepclassmembers class com.fsck.k9.K9 { void setShowContactName(boolean); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableMapEntry { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean { java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStoreUriCreator { java.lang.String create(com.fsck.k9.mail.ServerSettings); }
-keepclassmembers class com.fsck.k9.K9 { void setShowCorrespondentNames(boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$28 { void <init>(com.fsck.k9.controller.MessagingController,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.K9 { void setShowContactPicture(boolean); }
-keepclassmembers class android.content.res.AssetManager$AssetInputStream { void <init>(android.content.res.AssetManager,long,android.content.res.AssetManager$1); }
-keepclassmembers class com.android.org.conscrypt.ByteArray { void <init>(byte[]); }
-keepclassmembers class org.apache.http.message.BasicStatusLine { void <init>(org.apache.http.ProtocolVersion,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.K9 { void setSortType(com.fsck.k9.Account$SortType); }
-keepclassmembers class com.android.org.conscrypt.ByteArray { int hashCode(); }
-keepclassmembers class com.fsck.k9.K9 { void setSortAscending(com.fsck.k9.Account$SortType,boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setSplitViewMode(com.fsck.k9.K9$SplitViewMode); }
-keepclassmembers class com.fsck.k9.K9 { void setUseBackgroundAsUnreadIndicator(boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatHoneycomb { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.K9 { void setStartIntegratedInbox(boolean); }
-keepclassmembers class com.fsck.k9.K9 { void setThreadedViewEnabled(boolean); }
-keepclassmembers class com.android.org.conscrypt.ByteArray { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.K9 { void setUseFixedMessageViewTheme(boolean); }
-keepclassmembers class android.content.res.Configuration { void setToDefaults(); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int length(); }
-keepclassmembers class com.fsck.k9.K9 { void setUseVolumeKeysForNavigation(boolean); }
-keepclassmembers class com.fsck.k9.K9 { boolean showAnimations(); }
-keepclassmembers class com.fsck.k9.K9 { void setUseVolumeKeysForListNavigation(boolean); }
-keepclassmembers class org.apache.http.message.BasicStatusLine { int getStatusCode(); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.K9 { void setWrapFolderNames(boolean); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void releaseConnection(); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int limit(); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int pos(); }
-keepclassmembers class org.apache.http.message.BasicStatusLine { org.apache.http.ProtocolVersion getProtocolVersion(); }
-keepclassmembers class com.fsck.k9.K9 { boolean showContactPicture(); }
-keepclassmembers class com.fsck.k9.K9 { boolean startIntegratedInbox(); }
-keepclassmembers class com.fsck.k9.K9 { boolean useBackgroundAsUnreadIndicator(); }
-keepclassmembers class com.fsck.k9.K9 { boolean showCorrespondentNames(); }
-keepclassmembers class com.fsck.k9.K9 { boolean useFixedMessageViewTheme(); }
-keepclassmembers class com.fsck.k9.K9 { boolean showContactName(); }
-keepclassmembers class org.apache.http.message.BasicStatusLine { java.lang.String toString(); }
-keepclassmembers class org.apache.http.message.BasicStatusLine { java.lang.String getReasonPhrase(); }
-keepclassmembers class com.fsck.k9.K9 { void checkCachedDatabaseVersion(); }
-keepclassmembers class com.fsck.k9.K9 { boolean useVolumeKeysForListNavigationEnabled(); }
-keepclassmembers class android.content.res.Configuration { int updateFrom(android.content.res.Configuration); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int read(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePattern(java.lang.String,java.util.Locale); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int read(byte[]); }
-keepclassmembers class com.fsck.k9.K9 { boolean useVolumeKeysForNavigationEnabled(); }
-keepclassmembers class com.fsck.k9.K9 { boolean wrapFolderNames(); }
-keepclassmembers class com.fsck.k9.K9 { void notifyObservers(); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext); }
-keepclassmembers class java.lang.Short { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Short { void <init>(short); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Short); }
-keepclassmembers class com.fsck.k9.K9 { void onCreate(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getBestDateTimePatternNative(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { boolean readAllowed(); }
-keepclassmembers class com.fsck.k9.K9 { void registerReceivers(); }
-keepclassmembers class java.lang.Short { int compare(short,short); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int read(byte[],int,int); }
-keepclassmembers class java.lang.Short { double doubleValue(); }
-keepclassmembers class java.lang.Short { int hashCode(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCldrVersion(); }
-keepclassmembers class java.lang.Short { long longValue(); }
-keepclassmembers class java.lang.Short { int intValue(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getIcuVersion(); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int readLine(org.apache.james.mime4j.util.ByteArrayBuffer); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.util.Locale); }
-keepclassmembers class java.lang.Short { short parseShort(java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getUnicodeVersion(); }
-keepclassmembers class java.lang.Short { short parseShort(java.lang.String,int); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class org.apache.james.mime4j.field.AddressListFieldImpl$1 { void <init>(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.util.Locale); }
-keepclassmembers class java.lang.Short { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Short { java.lang.String toString(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toUpperCase(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String toLowerCase(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.Short { short shortValue(); }
-keepclassmembers class org.apache.james.mime4j.field.AddressListFieldImpl$1 { org.apache.james.mime4j.dom.field.AddressListField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class java.lang.Short { java.lang.Short valueOf(short); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext); }
-keepclassmembers class org.apache.james.mime4j.field.AddressListFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class java.lang.Short { short reverseBytes(short); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { int skip(int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencyCode(java.lang.String); }
-keepclassmembers class java.net.URLConnection { void <init>(java.net.URL); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencySymbol(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ProgressBar$SavedState { void <clinit>(); }
-keepclassmembers class java.lang.Short { int compareTo(java.lang.Object); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean moveActivityTaskToBack(android.os.IBinder,boolean); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayCountry(java.util.Locale,java.util.Locale); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayCountryNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getCurrencySymbol(java.util.Locale,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { java.lang.String toString(); }
-keepclassmembers class java.lang.Short { void <clinit>(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayLanguage(java.util.Locale,java.util.Locale); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayVariant(java.util.Locale,java.util.Locale); }
-keepclassmembers class com.fsck.k9.Account$DeletePolicy { void <clinit>(); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayLanguageNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String addLikelySubtags(java.lang.String); }
-keepclassmembers class com.fsck.k9.Account$DeletePolicy { void <init>(java.lang.String,int,int); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayVariantNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayScriptNative(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.ICU { boolean initLocaleDataNative(java.lang.String,libcore.icu.LocaleData); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { void <init>(long); }
-keepclassmembers class libcore.icu.ICU { java.util.Locale addLikelySubtags(java.util.Locale); }
-keepclassmembers class libcore.icu.ICU { java.lang.String getDisplayScript(java.util.Locale,java.util.Locale); }
-keepclassmembers class java.net.URLConnection { java.lang.String getContentEncoding(); }
-keepclassmembers class libcore.icu.ICU { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.io.BufferedLineReaderInputStream { boolean unread(org.apache.james.mime4j.util.ByteArrayBuffer); }
-keepclassmembers class java.util.HashMap$Values { int size(); }
-keepclassmembers class java.util.HashMap$Values { void <init>(java.util.HashMap); }
-keepclassmembers class com.fsck.k9.Account$DeletePolicy { java.lang.String preferenceString(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class java.util.HashMap$Values { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.app.ActivityManagerProxy { int getTaskForActivity(android.os.IBinder,boolean); }
-keepclassmembers class com.fsck.k9.Account$DeletePolicy { com.fsck.k9.Account$DeletePolicy[] values(); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.Account$DeletePolicy { com.fsck.k9.Account$DeletePolicy fromInt(int); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo39 { void headersPruneOrphans(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class java.util.HashMap$Values { java.util.Iterator iterator(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[]); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { com.android.org.conscrypt.OpenSSLX509Certificate fromX509Der(byte[]); }
-keepclassmembers class java.net.URLConnection { int getContentLength(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { com.android.org.conscrypt.OpenSSLX509Certificate fromCertificate(java.security.cert.Certificate); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { void release(); }
-keepclassmembers class java.net.URLConnection { boolean getDoInput(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { void <init>(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation$CryptoError { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.routing.BasicRouteDirector { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { void checkValidity(java.util.Date); }
-keepclassmembers class org.apache.http.conn.routing.BasicRouteDirector { int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo); }
-keepclassmembers class java.net.URLConnection { java.net.FileNameMap getFileNameMap(); }
-keepclassmembers class android.os.PatternMatcher$1 { void <init>(); }
-keepclassmembers class org.apache.http.conn.routing.BasicRouteDirector { int firstStep(org.apache.http.conn.routing.RouteInfo); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation$CryptoError { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph$Node { android.widget.RelativeLayout$DependencyGraph$Node acquire(android.view.View); }
-keepclassmembers class java.net.URLConnection { void checkNotConnected(); }
-keepclassmembers class java.net.URLConnection { java.lang.String getContentType(); }
-keepclassmembers class android.content.res.Configuration { boolean needNewResources(int,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { void checkValidity(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation$CryptoError { com.fsck.k9.mailstore.CryptoResultAnnotation$CryptoError[] values(); }
-keepclassmembers class android.graphics.FontListParser$Config { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { java.util.Date getNotBefore(); }
-keepclassmembers class org.apache.http.conn.routing.BasicRouteDirector { int proxiedStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { java.util.Date getNotAfter(); }
-keepclassmembers class java.net.URLConnection { int getHeaderFieldInt(java.lang.String,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { byte[] getTBSCertificate(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicPathHandler { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { byte[] getSignature(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicPathHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { java.lang.String getSigAlgOID(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class org.apache.http.conn.routing.BasicRouteDirector { int directStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { java.lang.String getSigAlgName(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicPathHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.app.Notification$BigTextStyle { void <init>(android.app.Notification$Builder); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.conn.OperatedClientConnection); }
-keepclassmembers class java.net.URLConnection { java.net.URL getURL(); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.app.Notification$BigTextStyle setBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.app.Notification$BigTextStyle setSummaryText(java.lang.CharSequence); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.app.Notification$BigTextStyle bigText(java.lang.CharSequence); }
-keepclassmembers class java.net.URLConnection { boolean getUseCaches(); }
-keepclassmembers class android.app.Notification$BigTextStyle { void addExtras(android.os.Bundle); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { byte[] getEncoded(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { org.apache.http.conn.OperatedClientConnection getWrappedConnection(); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromStream(java.io.InputStream); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { void verifyOpenSSL(com.android.org.conscrypt.OpenSSLKey); }
-keepclassmembers class org.apache.http.impl.cookie.BasicPathHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { org.apache.http.conn.ClientConnectionManager getManager(); }
-keepclassmembers class java.net.URLConnection { java.lang.String guessContentTypeFromName(java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void detach(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void assertNotAborted(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { void verifyInternal(java.security.PublicKey,java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { boolean isOpen(); }
-keepclassmembers class android.app.Notification$BigTextStyle { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForRegion(java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { boolean isStale(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void assertValid(org.apache.http.conn.OperatedClientConnection); }
-keepclassmembers class android.app.Notification$BigTextStyle { int calculateMaxLines(); }
-keepclassmembers class com.fsck.k9.message.extractors.MessageFulltextCreator { void <init>(com.fsck.k9.message.extractors.TextPartFinder,com.fsck.k9.message.extractors.EncryptionDetector); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void abortConnection(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { void verify(java.security.PublicKey); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void setSocketTimeout(int); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class com.fsck.k9.message.extractors.MessageFulltextCreator { java.lang.String extractText(com.fsck.k9.mail.Message); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { boolean hasNext(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapMessage { void <init>(java.lang.String,com.fsck.k9.mail.Folder); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { java.lang.String toString(); }
-keepclassmembers class android.app.Notification$BigTextStyle { void populateBigContentView(android.app.Notification); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void processChallenges(java.util.Map,org.apache.http.auth.AuthState,org.apache.http.client.AuthenticationHandler,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapMessage { void setFlag(com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void flush(); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor$1 { void <init>(com.fsck.k9.preferences.StorageEditor); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { java.util.LinkedHashMap$LinkedEntry nextEntry(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { boolean isResponseAvailable(int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapMessage { void delete(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata getMetadataForNonGeographicalRegion(int); }
-keepclassmembers class com.fsck.k9.preferences.StorageEditor$1 { void run(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapMessage { void setFlagInternal(com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void remove(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { javax.security.auth.x500.X500Principal getIssuerX500Principal(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void receiveResponseEntity(org.apache.http.HttpResponse); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { org.apache.http.HttpResponse receiveResponseHeader(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <init>(int,java.math.BigInteger,org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.Validity,org.apache.harmony.security.x501.Name,org.apache.harmony.security.x509.SubjectPublicKeyInfo,boolean[],boolean[],org.apache.harmony.security.x509.Extensions,byte[],org.apache.harmony.security.x509.TBSCertificate$1); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { javax.security.auth.x500.X500Principal getSubjectX500Principal(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest); }
-keepclassmembers class com.fsck.k9.message.extractors.MessageFulltextCreator { boolean hasEmptyBody(com.fsck.k9.mail.Part); }
-keepclassmembers class java.util.LinkedHashMap$LinkedHashIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class com.fsck.k9.message.extractors.MessageFulltextCreator { com.fsck.k9.message.extractors.MessageFulltextCreator newInstance(); }
-keepclassmembers class com.fsck.k9.message.extractors.MessageFulltextCreator { java.lang.String createFulltext(com.fsck.k9.mail.Message); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void sendRequestHeader(org.apache.http.HttpRequest); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { java.util.Collection alternativeNameArrayToList(java.lang.Object[][]); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapMessage { void setSize(int); }
-keepclassmembers class org.apache.http.impl.client.DefaultRequestDirector { void updateAuthState(org.apache.http.auth.AuthState,org.apache.http.HttpHost,org.apache.http.client.CredentialsProvider); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String getDisplayName(java.lang.String[][],java.lang.String,boolean,int); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { java.net.InetAddress getRemoteAddress(); }
-keepclassmembers class android.provider.ContactsContract { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { java.util.Collection getSubjectAlternativeNames(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$12 { java.util.List doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { int getRemotePort(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$12 { void <init>(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { boolean isSecure(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$12 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.URLConnection { void setDoOutput(boolean); }
-keepclassmembers class android.content.res.Configuration { int getLayoutDirection(); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[][] getZoneStrings(java.util.Locale); }
-keepclassmembers class android.content.res.Configuration { void setLayoutDirection(java.util.Locale); }
-keepclassmembers class android.content.res.Configuration { int getScreenLayoutNoDirection(int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { java.math.BigInteger access$200(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { int access$100(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class java.net.URLConnection { void setDoInput(boolean); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void markReusable(); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void unmarkReusable(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { long getContext(); }
-keepclassmembers class java.net.URLConnection { void setUseCaches(boolean); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { javax.net.ssl.SSLSession getSSLSession(); }
-keepclassmembers class java.net.URLConnection { void setConnectTimeout(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLX509Certificate { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x501.Name access$600(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { boolean isMarkedReusable(); }
-keepclassmembers class java.net.URLConnection { void setReadTimeout(int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.Validity access$500(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void setIdleDuration(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x501.Name access$400(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewTextExtractor { java.lang.String stripTextForPreview(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewTextExtractor { void <init>(); }
-keepclassmembers class java.net.URLConnection { int getConnectTimeout(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { boolean[] access$800(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class java.net.URLConnection { int getReadTimeout(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void releaseConnection(); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewTextExtractor { java.lang.String convertFromHtmlIfNecessary(com.fsck.k9.mail.Part,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { boolean[] access$900(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.Extensions access$1000(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter$ListTagHandler { void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader); }
-keepclassmembers class java.net.URLConnection { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractClientConnAdapter { void abortConnection(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { void <clinit>(); }
-keepclassmembers class libcore.icu.TimeZoneNames { void fillZoneStrings(java.lang.String,java.lang.String[][]); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate { org.apache.harmony.security.x509.SubjectPublicKeyInfo access$700(org.apache.harmony.security.x509.TBSCertificate); }
-keepclassmembers class libcore.icu.TimeZoneNames { java.lang.String[] access$000(); }
-keepclassmembers class libcore.icu.TimeZoneNames { void access$100(java.lang.String,java.lang.String[][]); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter$ListTagHandler { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void <init>(android.content.Context,java.lang.String,com.fsck.k9.mailstore.LockableDatabase$SchemaDefinition); }
-keepclassmembers class libcore.icu.TimeZoneNames { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewTextExtractor { java.lang.String extractPreview(com.fsck.k9.mail.Part); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.app.NotificationCompatKitKat$Builder { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { void <init>(com.android.okio.ByteString,com.android.okio.ByteString); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { void <init>(java.util.AbstractList,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { void <init>(com.android.okio.ByteString,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsAdapter { void <init>(com.fsck.k9.activity.Accounts,java.util.List); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { int hashCode(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { java.lang.String toString(); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float a(float,float); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { java.lang.String access$000(com.fsck.k9.mailstore.LockableDatabase); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class android.transition.Slide$1 { void <init>(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.os.IBinder peekService(android.content.Intent,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String getRegionCodeForCountryCode(int); }
-keepclassmembers class android.view.animation.AnticipateOvershootInterpolator { float o(float,float); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void access$300(com.fsck.k9.mailstore.LockableDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { java.lang.String access$100(com.fsck.k9.mailstore.LockableDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void delete(boolean); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { java.util.Iterator iterator(); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { java.lang.Object get(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Header { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { android.database.sqlite.SQLiteDatabase access$200(com.fsck.k9.mailstore.LockableDatabase); }
-keepclassmembers class java.net.Authenticator { java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult testNumberLengthAgainstPattern(java.util.regex.Pattern,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ACCOUNT_LOCATION { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isPossibleNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { java.util.ListIterator listIterator(int); }
-keepclassmembers class android.animation.AnimatorSet$Node { void <init>(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node clone(); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { void removeRange(int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void deleteDatabase(java.io.File); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$202(android.animation.AnimatorSet$Node,android.animation.AnimatorSet$Node); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ACCOUNT_LOCATION { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean isShorterThanPossibleNormalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.String); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf$Header { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPartType { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorSet$Node { void addDependency(android.animation.AnimatorSet$Dependency); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPartType { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$2 { void <init>(com.fsck.k9.ui.crypto.MessageCryptoHelper); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPartType { com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPartType[] values(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult isPossibleNumberWithReason(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$2 { void onReturn(android.content.Intent,com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet$Node { android.animation.AnimatorSet$Node access$200(android.animation.AnimatorSet$Node); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void doOpenOrCreateDb(java.io.File); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void <init>(byte[]); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$2 { void onProgress(int,int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109DomainHandler { void <init>(); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.AbstractList$SubAbstractList { int size(); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { com.fsck.k9.mailstore.StorageManager getStorageManager(); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet { void <init>(java.util.EnumMap); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$2 { void onReturn(android.content.Intent,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void openOrCreateDataspace(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109DomainHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109DomainHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v4.app.NotificationCompatKitKat$Builder { android.app.Notification build(); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet { int size(); }
-keepclassmembers class android.app.ActivityManagerProxy { void setRequestedOrientation(android.os.IBinder,int); }
-keepclassmembers class android.graphics.Rect { void <init>(int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.InvalidityDate { void <clinit>(); }
-keepclassmembers class android.support.v4.app.NotificationCompatKitKat$Builder { android.app.Notification$Builder getBuilder(); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.graphics.Rect { void <init>(); }
-keepclassmembers class android.graphics.Rect { void <init>(android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.NotificationCompatKitKat$Builder { void addAction(android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$2 { void onCryptoHelperProgress(int,int); }
-keepclassmembers class java.math.BigDecimal { int signum(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int extractCountryCode(java.lang.StringBuilder,java.lang.StringBuilder); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$2 { void <init>(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class java.math.BigDecimal { boolean isZero(); }
-keepclassmembers class java.math.BigDecimal { int precision(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$2 { void onCryptoOperationsFinished(com.fsck.k9.ui.crypto.MessageCryptoAnnotations); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { java.lang.Object execute(boolean,com.fsck.k9.mailstore.LockableDatabase$DbCallback); }
-keepclassmembers class android.graphics.Rect { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void delete(); }
-keepclassmembers class android.content.res.Configuration { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { int getRequestedOrientation(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$2 { void startPendingIntentForCryptoHelper(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { int maybeExtractCountryCode(java.lang.String,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.util.AndroidException { void <init>(); }
-keepclassmembers class org.apache.http.protocol.HTTP { boolean isWhitespace(char); }
-keepclassmembers class android.graphics.Rect { int hashCode(); }
-keepclassmembers class java.math.BigDecimal { int decimalDigitsInLong(long); }
-keepclassmembers class android.graphics.Rect { java.lang.String toShortString(java.lang.StringBuilder); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109DomainHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.graphics.Rect { java.lang.String toString(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int); }
-keepclassmembers class android.graphics.Rect { int height(); }
-keepclassmembers class android.util.LogWriter { void <init>(int,java.lang.String); }
-keepclassmembers class android.graphics.Rect { int centerX(); }
-keepclassmembers class android.widget.ListPopupWindow { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.Rect { float exactCenterX(); }
-keepclassmembers class android.widget.ListPopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.graphics.Rect { float exactCenterY(); }
-keepclassmembers class android.util.AndroidException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Rect { boolean isEmpty(); }
-keepclassmembers class android.graphics.Rect { void setEmpty(); }
-keepclassmembers class android.util.LogWriter { void write(char[],int,int); }
-keepclassmembers class android.graphics.Rect { void set(int,int,int,int); }
-keepclassmembers class android.graphics.Rect { int width(); }
-keepclassmembers class android.graphics.Rect { void set(android.graphics.Rect); }
-keepclassmembers class android.util.LogWriter { void flushBuilder(); }
-keepclassmembers class android.util.LogWriter { void flush(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal movePointRight(int); }
-keepclassmembers class android.graphics.Rect { java.lang.String toShortString(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean parsePrefixAsIdd(java.util.regex.Pattern,java.lang.StringBuilder); }
-keepclassmembers class android.widget.ListPopupWindow { void setModal(boolean); }
-keepclassmembers class android.graphics.Rect { void offset(int,int); }
-keepclassmembers class android.graphics.Rect { boolean contains(int,int); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal movePoint(long); }
-keepclassmembers class android.widget.ListPopupWindow { boolean isDropDownAlwaysVisible(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource maybeStripInternationalPrefixAndNormalize(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow { void setPromptPosition(int); }
-keepclassmembers class android.widget.ListPopupWindow { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.widget.ListPopupWindow { void setListSelector(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { void access$000(android.content.Context); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { boolean deleteOldTemporaryFiles(android.content.Context); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { void <clinit>(); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { java.io.File access$100(android.content.Context); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { void access$300(android.content.Context); }
-keepclassmembers class android.widget.ListPopupWindow { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.widget.ListPopupWindow { void setSoftInputMode(int); }
-keepclassmembers class android.widget.ListPopupWindow { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.Rect { boolean intersect(int,int,int,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$FooterViewHolder { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean maybeStripNationalPrefixAndCarrierCode(java.lang.StringBuilder,com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata,java.lang.StringBuilder); }
-keepclassmembers class android.widget.ListPopupWindow { void setAnchorView(android.view.View); }
-keepclassmembers class android.widget.ListPopupWindow { android.view.View getAnchorView(); }
-keepclassmembers class com.fsck.k9.mail.filter.SmtpDataStuffing { void write(int); }
-keepclassmembers class java.nio.BufferUnderflowException { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.filter.SmtpDataStuffing { void <init>(java.io.OutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow { void setHorizontalOffset(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { org.apache.harmony.security.asn1.ASN1OctetString getInstance(); }
-keepclassmembers class android.widget.ListPopupWindow { int getWidth(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Mode { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { java.lang.String getStorageProviderId(); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void lockRead(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void lockWrite(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void lockWrite(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader { void <init>(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader { int getByte(); }
-keepclassmembers class android.widget.ListPopupWindow { void setContentWidth(int); }
-keepclassmembers class android.widget.ListPopupWindow { void setWidth(int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Mode { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader { int getUInt16(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1OctetString { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class android.transition.ChangeImageTransform$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow { void setHeight(int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader { short getUInt8(); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { java.io.File getDecryptedTempDirectory(android.content.Context); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void open(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Mode { com.handmark.pulltorefresh.library.PullToRefreshBase$Mode mapIntToValue(int); }
-keepclassmembers class android.widget.ListPopupWindow { void setPromptView(android.view.View); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings { java.util.Map convert(java.util.Map); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Mode { com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getDefault(); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings { java.util.Map getGlobalSettings(com.fsck.k9.preferences.Storage); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader { int read(byte[]); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { com.fsck.k9.mailstore.util.FileFactory getFileFactory(android.content.Context); }
-keepclassmembers class android.widget.ListPopupWindow { void show(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Mode { com.handmark.pulltorefresh.library.PullToRefreshBase$Mode[] values(); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { java.io.File prepareStorage(java.lang.String); }
-keepclassmembers class android.text.style.AlignmentSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Mode { int getIntValue(); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings { java.util.Set upgrade(int,java.util.Map); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Mode { boolean permitsPullToRefresh(); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings { java.util.Map validate(int,java.util.Map); }
-keepclassmembers class android.view.View$TintInfo { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$StreamReader { long skip(long); }
-keepclassmembers class android.graphics.Rect { void union(int,int,int,int); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { android.net.Uri getUriForProvidedFile(android.content.Context,java.io.File,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream { void <init>(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class android.graphics.Rect { void union(android.graphics.Rect); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Mode { boolean showHeaderLoadingLayout(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$Mode { boolean showFooterLoadingLayout(); }
-keepclassmembers class android.view.View$TintInfo { void <init>(android.view.View$1); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { void registerFileCleanupReceiver(android.content.Context); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void recreate(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream { int read(byte[],int,int); }
-keepclassmembers class android.widget.TextView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.notification.NotificationContent { void <init>(com.fsck.k9.activity.MessageReference,java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.CharSequence,boolean); }
-keepclassmembers class android.widget.TextView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.String maybeStripExtension(java.lang.StringBuilder); }
-keepclassmembers class java.lang.reflect.ArtMethod { java.lang.String getMethodName(java.lang.reflect.ArtMethod); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void switchProvider(java.lang.String); }
-keepclassmembers class java.lang.reflect.ArtMethod { boolean equalConstructorParameters(java.lang.reflect.ArtMethod,java.lang.Class[]); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class android.graphics.Rect { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { int delete(android.net.Uri,java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void setStorageProviderId(java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { void unregisterFileCleanupReceiver(android.content.Context); }
-keepclassmembers class android.graphics.Rect { void readFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.reflect.ArtMethod { boolean equalMethodParameters(java.lang.reflect.ArtMethod,java.lang.Class[]); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder { void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { java.lang.String getType(android.net.Uri); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream { void awaitPendingOps(); }
-keepclassmembers class java.net.Authenticator$RequestorType { void <init>(java.lang.String,int); }
-keepclassmembers class java.net.Authenticator$RequestorType { void <clinit>(); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { void onTrimMemory(int); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.helper.UrlEncodingHelper { java.lang.String decodeUtf8(java.lang.String); }
-keepclassmembers class android.graphics.Matrix$ScaleToFit { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { boolean checkRegionForParsing(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow { void dismiss(); }
-keepclassmembers class android.widget.ListPopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider { android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void unlockRead(); }
-keepclassmembers class android.widget.ListPopupWindow { void removePromptView(); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void unlockWrite(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder { com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int); }
-keepclassmembers class android.widget.ListPopupWindow { void setInputMethodMode(int); }
-keepclassmembers class com.fsck.k9.mail.helper.UrlEncodingHelper { java.lang.String encodeUtf8(java.lang.String); }
-keepclassmembers class android.graphics.Rect { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow { void setSelection(int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder { com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase { void unlockWrite(java.lang.String); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.widget.ListPopupWindow { void clearListSelection(); }
-keepclassmembers class android.widget.ListPopupWindow { boolean isInputMethodNotNeeded(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder { java.lang.String getId(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber parseAndKeepRawInput(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.ArrayDeque { void allocateElements(int); }
-keepclassmembers class android.widget.ListPopupWindow { boolean isShowing(); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(int,int,float); }
-keepclassmembers class android.app.AlertDialog { void <init>(android.content.Context); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseAndKeepRawInput(java.lang.String,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.widget.LinearLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.InputEvent$1 { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void <clinit>(); }
-keepclassmembers class android.widget.TextView$SavedState { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void <init>(com.bumptech.glide.load.Key,java.util.concurrent.ExecutorService,java.util.concurrent.ExecutorService,boolean,com.bumptech.glide.load.engine.EngineJobListener); }
-keepclassmembers class android.app.AlertDialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class android.app.FragmentManagerState { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { java.lang.Iterable findNumbers(java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class android.app.FragmentManagerState { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.okhttp.Connection { void <init>(com.android.okhttp.ConnectionPool,com.android.okhttp.Route); }
-keepclassmembers class android.widget.ListPopupWindow { long getSelectedItemId(); }
-keepclassmembers class android.widget.ListPopupWindow { java.lang.Object getSelectedItem(); }
-keepclassmembers class android.widget.ListPopupWindow { int getSelectedItemPosition(); }
-keepclassmembers class java.util.ArrayDeque { void doubleCapacity(); }
-keepclassmembers class com.android.okhttp.Connection { java.lang.Object getOwner(); }
-keepclassmembers class android.widget.ListPopupWindow { void setListItemExpandMax(int); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo55 { void createFtsSearchTable(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper); }
-keepclassmembers class android.widget.ListPopupWindow { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.app.AlertDialog { int resolveDialogTheme(android.content.Context,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void setItalianLeadingZerosForPhoneNumber(java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.app.FragmentManagerState { void <clinit>(); }
-keepclassmembers class android.widget.ListPopupWindow { android.view.View getSelectedView(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void <init>(com.bumptech.glide.load.Key,java.util.concurrent.ExecutorService,java.util.concurrent.ExecutorService,boolean,com.bumptech.glide.load.engine.EngineJobListener,com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory); }
-keepclassmembers class java.util.ArrayDeque { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.ConfirmationDialog$1 { void <init>(android.app.Activity,int,java.lang.Runnable); }
-keepclassmembers class android.app.FragmentManagerState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.AlertDialog { android.widget.Button getButton(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Bold { void <init>(); }
-keepclassmembers class android.app.AlertDialog { android.widget.ListView getListView(); }
-keepclassmembers class java.util.ArrayDeque { void <init>(int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void add(android.view.View); }
-keepclassmembers class android.app.AlertDialog { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.ListView getListView(); }
-keepclassmembers class com.android.okhttp.Connection { void setOwner(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.ConfirmationDialog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.util.ArrayDeque { void addLast(java.lang.Object); }
-keepclassmembers class com.android.okhttp.Connection { boolean clearOwner(); }
-keepclassmembers class com.android.okhttp.Connection { void connect(int,int,com.android.okhttp.TunnelRequest); }
-keepclassmembers class android.app.AlertDialog { void setView(android.view.View); }
-keepclassmembers class com.android.okhttp.Connection { void closeIfOwnedBy(java.lang.Object); }
-keepclassmembers class android.widget.Toast$TN$1 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Bold { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.app.AlertDialog { void setMessage(java.lang.CharSequence); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void access$100(com.bumptech.glide.load.engine.EngineJob); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void access$200(com.bumptech.glide.load.engine.EngineJob); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void addIgnoredCallback(com.bumptech.glide.request.ResourceCallback); }
-keepclassmembers class java.util.ArrayDeque { boolean offerLast(java.lang.Object); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object removeFirst(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger toBigInteger(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void parseHelper(java.lang.String,java.lang.String,boolean,boolean,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class android.app.AlertDialog { void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener); }
-keepclassmembers class android.widget.RadioButton { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void handleExceptionOnMainThread(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { boolean isEmpty(); }
-keepclassmembers class android.widget.RadioButton { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object pollFirst(); }
-keepclassmembers class android.widget.RadioButton { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.mail.filter.PeekableInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.mail.filter.PeekableInputStream { int peek(); }
-keepclassmembers class com.fsck.k9.mail.filter.PeekableInputStream { int read(); }
-keepclassmembers class com.android.okhttp.Connection { void upgradeToTls(com.android.okhttp.TunnelRequest); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.widget.ListPopupWindow { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object pollLast(); }
-keepclassmembers class android.widget.RadioButton { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.RadioButton { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void clearMutated(); }
-keepclassmembers class java.math.BigDecimal { long longValue(); }
-keepclassmembers class android.widget.RadioButton { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void handleResultOnMainThread(); }
-keepclassmembers class java.math.BigDecimal { int intValue(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.RadioButton { void toggle(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(android.graphics.Rect); }
-keepclassmembers class android.app.AlertDialog { void setIcon(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class com.fsck.k9.mail.filter.PeekableInputStream { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.mail.filter.PeekableInputStream { int read(byte[],int,int); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(); }
-keepclassmembers class android.app.AlertDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.ListPopupWindow { int buildDropDown(); }
-keepclassmembers class android.app.AlertDialog { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidate(boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object peekFirst(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal); }
-keepclassmembers class java.math.BigDecimal { double doubleValue(); }
-keepclassmembers class android.app.AlertDialog { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.app.BackStackRecord$2 { void <init>(android.app.BackStackRecord,android.view.ViewGroup,android.transition.Transition,android.view.View,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,java.util.ArrayList,android.transition.Transition); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentCaches(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void invalidateParentIfNeeded(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void addCallback(com.bumptech.glide.request.ResourceCallback); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class android.app.AlertDialog { com.android.internal.app.AlertController access$000(android.app.AlertDialog); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal$DisplayManagerCallback { void <init>(android.hardware.display.DisplayManagerGlobal,android.hardware.display.DisplayManagerGlobal$1); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setAlpha(int); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { boolean isInIgnoredCallbacks(com.bumptech.glide.request.ResourceCallback); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { java.util.List readNameValueBlock(int); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean onLevelChange(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { void <init>(com.android.okio.BufferedSource); }
-keepclassmembers class android.view.RenderNodeAnimator$1 { void <init>(int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.android.okhttp.Connection { boolean isConnected(); }
-keepclassmembers class android.view.ViewOverlay$OverlayViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.android.okhttp.Connection { boolean isAlive(); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { com.fsck.k9.controller.MemorizingMessagingListener$Memory getMemory(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.android.okhttp.Connection { com.android.okhttp.Route getRoute(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void buildNationalNumberForParsing(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class com.android.okhttp.Connection { java.net.Socket getSocket(); }
-keepclassmembers class com.android.okhttp.Connection { void close(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void onException(java.lang.Exception); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { java.lang.String getMemoryKey(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspot(float,float); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void cancel(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void onResourceReady(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class java.util.ArrayDeque { boolean offer(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance { void <init>(com.getkeepsafe.relinker.ReLinker$LibraryLoader,com.getkeepsafe.relinker.ReLinker$LibraryInstaller); }
-keepclassmembers class java.util.ArrayDeque { boolean add(java.lang.Object); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void pendingCommandCompleted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.android.okhttp.Connection { boolean isReadable(); }
-keepclassmembers class com.android.okhttp.Connection { void resetIdleStartTime(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { com.android.okio.ByteString readByteString(); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { void doneReading(); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance { void <init>(); }
-keepclassmembers class java.util.ArrayDeque { java.lang.Object poll(); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void <init>(com.fsck.k9.notification.NotificationController,com.fsck.k9.notification.NotificationActionCreator); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addActions(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.Account,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class com.android.okhttp.Connection { boolean isIdle(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void removeCallback(com.bumptech.glide.request.ResourceCallback); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { void close(); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance { void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.Connection { boolean isExpired(long); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance { void access$000(com.getkeepsafe.relinker.ReLinkerInstance,android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void pendingCommandsFinished(com.fsck.k9.Account); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void start(com.bumptech.glide.load.engine.EngineRunnable); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setLayoutDirection(int); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void pendingCommandStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addArchiveAction(android.support.v4.app.NotificationCompat$WearableExtender,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class java.math.BigDecimal { void inplaceRound(java.math.MathContext); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { int access$022(com.android.okhttp.internal.spdy.NameValueBlockReader,long); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader { int access$000(com.android.okhttp.internal.spdy.NameValueBlockReader); }
-keepclassmembers class com.android.okhttp.Connection { long getIdleStartTimeNs(); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addArchiveAllAction(android.support.v4.app.NotificationCompat$WearableExtender,com.fsck.k9.notification.NotificationData); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void pendingCommandsProcessing(com.fsck.k9.Account); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob { void submitForSource(com.bumptech.glide.load.engine.EngineRunnable); }
-keepclassmembers class com.android.okhttp.Connection { java.lang.Object newTransport(com.android.okhttp.internal.http.HttpEngine); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class com.android.okhttp.Connection { com.android.okhttp.Handshake getHandshake(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getOpacity(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CounterHashCode { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void refreshOther(com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.PopupWindow access$1100(android.widget.ListPopupWindow); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void <init>(com.android.okio.BufferedSource,boolean); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.ListPopupWindow$DropDownListView access$600(android.widget.ListPopupWindow); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addDeleteAction(android.support.v4.app.NotificationCompat$WearableExtender,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class android.widget.ListPopupWindow { android.os.Handler access$1300(android.widget.ListPopupWindow); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableLoadProvider { void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class com.android.okhttp.Connection { boolean isSpdy(); }
-keepclassmembers class com.android.okhttp.Connection { int getHttpMinorVersion(); }
-keepclassmembers class android.widget.ListPopupWindow { android.widget.ListPopupWindow$ResizePopupRunnable access$1200(android.widget.ListPopupWindow); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,byte[]); }
-keepclassmembers class java.math.BigDecimal { int longCompareTo(long,long); }
-keepclassmembers class com.android.okhttp.Connection { void setHttpMinorVersion(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { boolean nextFrame(com.android.okhttp.internal.spdy.FrameReader$Handler); }
-keepclassmembers class java.util.ArrayDeque { int size(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readConnectionHeader(); }
-keepclassmembers class java.math.BigDecimal { void smallRound(java.math.MathContext,int); }
-keepclassmembers class com.android.okhttp.Connection { boolean requiresTunnel(); }
-keepclassmembers class java.util.ArrayDeque { boolean isEmpty(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableLoadProvider { com.bumptech.glide.load.ResourceDecoder getSourceDecoder(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableLoadProvider { com.bumptech.glide.load.ResourceEncoder getEncoder(); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addDeleteAllAction(android.support.v4.app.NotificationCompat$WearableExtender,com.fsck.k9.notification.NotificationData); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableLoadProvider { com.bumptech.glide.load.ResourceDecoder getCacheDecoder(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { java.lang.String getAlgorithm(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableLoadProvider { com.bumptech.glide.load.Encoder getSourceEncoder(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { java.lang.String getAlgorithmName(); }
-keepclassmembers class com.android.okhttp.Connection { void updateReadTimeout(int); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.Connection { void incrementRecycleCount(); }
-keepclassmembers class com.android.okhttp.Connection { void makeTunnel(com.android.okhttp.TunnelRequest); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addDeviceActions(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { byte[] getParameters(); }
-keepclassmembers class java.math.BigDecimal { int roundingBehavior(int,int,java.math.RoundingMode); }
-keepclassmembers class com.android.okhttp.Connection { int recycleCount(); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance { void cleanupOldLibFiles(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addDeviceMarkAsReadAction(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addDeviceDeleteAction(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { int hashCode(); }
-keepclassmembers class java.util.ArrayDeque { void clear(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void setupAnimatorsForTarget(java.lang.String,android.animation.Animator); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readSynStream(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addDeviceReplyAction(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView { void <init>(com.handmark.pulltorefresh.library.PullToRefreshListView,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance { java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addMarkAllAsReadAction(android.support.v4.app.NotificationCompat$WearableExtender,com.fsck.k9.notification.NotificationData); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance { java.io.File getWorkaroundLibDir(android.content.Context); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean isStarted(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport$CrashInfo); }
-keepclassmembers class java.math.BigDecimal { int approxPrecision(); }
-keepclassmembers class java.math.BigDecimal { int safeLongToInt(long); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addMarkAsReadAction(android.support.v4.app.NotificationCompat$WearableExtender,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class java.math.BigDecimal { java.math.BigDecimal zeroScaledBy(long); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView$InternalListView { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void start(); }
-keepclassmembers class android.content.res.CompatibilityInfo$1 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readSynReply(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void stop(); }
-keepclassmembers class java.math.BigDecimal { java.math.BigInteger getUnscaledValue(); }
-keepclassmembers class java.math.BigDecimal { void setUnscaledValue(java.math.BigInteger); }
-keepclassmembers class android.app.ActivityManagerProxy { void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$4 { void <clinit>(); }
-keepclassmembers class java.math.BigDecimal { int bitLength(long); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void reverse(); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addReplyAction(android.support.v4.app.NotificationCompat$WearableExtender,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance { void loadLibrary(android.content.Context,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readRstStream(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class java.math.BigDecimal { int bitLength(int); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance { void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener); }
-keepclassmembers class android.text.util.Linkify { boolean addLinks(android.text.Spannable,int); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addMarkAsSpamAction(android.support.v4.app.NotificationCompat$WearableExtender,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { boolean canReverse(); }
-keepclassmembers class java.math.BigDecimal { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.content.res.Resources,android.graphics.drawable.AnimatedVectorDrawable$1); }
-keepclassmembers class java.lang.InstantiationError { void <init>(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void elementType(java.lang.String,int,int,int); }
-keepclassmembers class android.support.v4.util.ContainerHelpers { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { org.ccil.cowan.tagsoup.ElementType rootElementType(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void parent(java.lang.String,java.lang.String); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance { void log(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void attribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readHeaders(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance { void log(java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readWindowUpdate(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class android.graphics.FontListParser$Font { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable { void <clinit>(); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { boolean isMovePossible(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { org.ccil.cowan.tagsoup.ElementType getElementType(java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { boolean isDeleteActionAvailableForWear(); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addWearActions(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.Account,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { boolean isArchiveActionAvailableForWear(com.fsck.k9.Account); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { int getEntity(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void entity(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { boolean isSpamActionAvailableForWear(com.fsck.k9.Account); }
-keepclassmembers class android.view.HardwareRenderer { boolean isAvailable(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { java.lang.String getPrefix(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readPing(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class android.net.ParseException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$SaveAttachmentAsyncTask { void <init>(com.fsck.k9.ui.messageview.AttachmentController); }
-keepclassmembers class java.lang.ClassNotFoundException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { java.lang.String getURI(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void setURI(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Schema { void setPrefix(java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { void addSummaryActions(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.notification.NotificationData); }
-keepclassmembers class android.database.CursorWindow { long nativeCreate(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$SaveAttachmentAsyncTask { java.io.File doInBackground(java.io.File[]); }
-keepclassmembers class java.lang.ClassNotFoundException { java.lang.Throwable getCause(); }
-keepclassmembers class android.database.CursorWindow { void nativeClear(long); }
-keepclassmembers class android.database.CursorWindow { void nativeDispose(long); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$SaveAttachmentAsyncTask { void <init>(com.fsck.k9.ui.messageview.AttachmentController,com.fsck.k9.ui.messageview.AttachmentController$1); }
-keepclassmembers class android.database.CursorWindow { byte[] nativeGetBlob(long,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readGoAway(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class android.database.CursorWindow { int nativeGetType(long,int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$SaveAttachmentAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.database.CursorWindow { java.lang.String nativeGetString(long,int,int); }
-keepclassmembers class android.database.CursorWindow { int nativeGetNumRows(long); }
-keepclassmembers class android.database.CursorWindow { long nativeGetLong(long,int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$SaveAttachmentAsyncTask { void onPostExecute(java.io.File); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$SaveAttachmentAsyncTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { com.fsck.k9.controller.MessagingController createMessagingController(); }
-keepclassmembers class com.fsck.k9.notification.WearNotifications { android.app.Notification buildStackedNotification(com.fsck.k9.Account,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$SaveAttachmentAsyncTask { void onPreExecute(); }
-keepclassmembers class android.support.v4.content.ContextCompatApi21 { android.graphics.drawable.Drawable getDrawable(android.content.Context,int); }
-keepclassmembers class android.text.util.Linkify { java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void removeAccount(com.fsck.k9.Account); }
-keepclassmembers class android.text.util.Linkify { void applyLink(java.lang.String,int,int,android.text.Spannable); }
-keepclassmembers class android.view.HardwareRenderer { void <clinit>(); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void sendPendingMessagesCompleted(com.fsck.k9.Account); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void readSettings(com.android.okhttp.internal.spdy.FrameReader$Handler,int,int); }
-keepclassmembers class android.database.CursorWindow { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void sendPendingMessagesStarted(com.fsck.k9.Account); }
-keepclassmembers class com.bumptech.glide.util.ByteArrayPool { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { void overridePendingTransition(android.os.IBinder,java.lang.String,int,int); }
-keepclassmembers class com.bumptech.glide.util.ByteArrayPool { void <init>(); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.Spinner { void <init>(android.content.Context,android.util.AttributeSet,int,int,int); }
-keepclassmembers class android.database.CursorWindow { void dispose(); }
-keepclassmembers class com.bumptech.glide.util.ByteArrayPool { com.bumptech.glide.util.ByteArrayPool get(); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void sendPendingMessagesFailed(com.fsck.k9.Account); }
-keepclassmembers class android.text.util.Linkify { void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void setPushActive(com.fsck.k9.Account,java.lang.String,boolean); }
-keepclassmembers class com.bumptech.glide.util.ByteArrayPool { boolean releaseBytes(byte[]); }
-keepclassmembers class com.bumptech.glide.util.ByteArrayPool { byte[] getBytes(); }
-keepclassmembers class android.database.CursorWindow { int getStartPosition(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class android.database.CursorWindow { void clear(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { void close(); }
-keepclassmembers class android.database.CursorWindow { java.lang.String getName(); }
-keepclassmembers class android.database.CursorWindow { void setStartPosition(int); }
-keepclassmembers class com.bumptech.glide.load.resource.NullEncoder { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Reader { java.io.IOException ioException(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTargetDensity(int); }
-keepclassmembers class android.database.CursorWindow { int getNumRows(); }
-keepclassmembers class com.bumptech.glide.load.resource.NullEncoder { void <init>(); }
-keepclassmembers class java.util.HashMap$KeyIterator { void <init>(java.util.HashMap); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.NullEncoder { com.bumptech.glide.load.Encoder get(); }
-keepclassmembers class com.bumptech.glide.load.resource.NullEncoder { boolean encode(java.lang.Object,java.io.OutputStream); }
-keepclassmembers class java.io.ObjectOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.text.util.Linkify { void gatherTelLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class com.bumptech.glide.load.resource.NullEncoder { java.lang.String getId(); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Insets scaleFromDensity(android.graphics.Insets,int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertFromTranslucent(android.os.IBinder); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void computeBitmapSize(); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class java.util.HashMap$KeyIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class java.util.HashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class android.content.IIntentSender$Stub$Proxy { android.os.IBinder asBinder(); }
-keepclassmembers class android.text.util.Linkify { void gatherMapLinks(java.util.ArrayList,android.text.Spannable); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class java.io.ObjectOutputStream { void checkWritePrimitiveTypes(); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateClass(java.lang.Class); }
-keepclassmembers class java.io.ObjectOutputStream { void annotateProxyClass(java.lang.Class); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder { void <init>(com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder$MediaMetadataRetrieverFactory,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadius(float); }
-keepclassmembers class java.io.ObjectOutputStream { void close(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder { android.graphics.Bitmap decode(android.os.ParcelFileDescriptor,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class android.app.ActivityManagerProxy { void setImmersive(android.os.IBinder,boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setCornerRadii(float[]); }
-keepclassmembers class com.fsck.k9.setup.ServerNameSuggester$1 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList); }
-keepclassmembers class android.widget.Spinner { void setEnabled(boolean); }
-keepclassmembers class android.database.CursorWindow { int getType(int,int); }
-keepclassmembers class java.io.ObjectOutputStream { void defaultWriteObject(); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener { void synchronizeMailboxStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setNinePatch(android.graphics.NinePatch); }
-keepclassmembers class android.database.CursorWindow { byte[] getBlob(int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(); }
-keepclassmembers class android.text.util.Linkify { void pruneOverlaps(java.util.ArrayList); }
-keepclassmembers class android.widget.Spinner { int getBaseline(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.io.ObjectOutputStream { void drain(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class android.widget.Spinner { void setAdapter(android.widget.SpinnerAdapter); }
-keepclassmembers class java.io.ObjectOutputStream { int dumpCycle(java.lang.Object); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isImmersive(android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setStrokeInternal(int,int,float,float); }
-keepclassmembers class android.database.CursorWindow { java.lang.String getString(int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void jumpToCurrentState(); }
-keepclassmembers class android.database.CursorWindow { long getLong(int,int); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isTopOfTask(android.os.IBinder); }
-keepclassmembers class java.io.ObjectOutputStream { void flush(); }
-keepclassmembers class java.io.ObjectOutputStream { int nextHandle(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.text.util.Linkify { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean cancelExitingRipples(); }
-keepclassmembers class android.widget.Spinner { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.Spinner { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void <init>(android.widget.TextView,int,int); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void fixDirection(boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.io.ObjectOutputStream { int registerObjectWritten(java.lang.Object); }
-keepclassmembers class android.widget.Spinner { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.Editor$ErrorPopup { int getResourceId(int,int); }
-keepclassmembers class android.database.CursorWindow { int getInt(int,int); }
-keepclassmembers class android.widget.Spinner { void onMeasure(int,int); }
-keepclassmembers class android.widget.Editor$ErrorPopup { void update(int,int,int,int,boolean); }
-keepclassmembers class java.io.ObjectOutputStream { void removeUnsharedReference(java.lang.Object,int); }
-keepclassmembers class android.widget.Spinner { void layout(int,boolean); }
-keepclassmembers class java.io.ObjectOutputStream { java.lang.Object replaceObject(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getOpacity(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo45 { void changeThreadingIndexes(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport$SpdySource { void <init>(com.android.okhttp.internal.spdy.SpdyStream,java.net.CacheRequest); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean onStateChange(int[]); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport$SpdySource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class java.io.ObjectOutputStream { void resetSeenObjects(); }
-keepclassmembers class java.io.ObjectOutputStream { void resetState(); }
-keepclassmembers class android.widget.Spinner { android.view.View makeView(int,boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int modulateAlpha(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setRippleActive(boolean); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedSettings { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setBackgroundActive(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.io.ObjectOutputStream { void writeBoolean(boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport$SpdySource { void close(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isProjected(); }
-keepclassmembers class android.widget.Spinner { void setUpChild(android.view.View,boolean); }
-keepclassmembers class android.database.CursorWindow { void onAllReferencesReleased(); }
-keepclassmembers class android.database.CursorWindow { void recordNewWindow(int,long); }
-keepclassmembers class java.io.ObjectOutputStream { int writeClassDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedSettings { void <init>(com.fsck.k9.preferences.SettingsImporter$1); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.database.CursorWindow { void recordClosingOfWindow(long); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean isStateful(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport$SpdySource { boolean discardStream(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean needsMirroring(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.Spinner { boolean performClick(); }
-keepclassmembers class android.view.ViewGroup$3 { void <init>(android.view.ViewGroup); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.database.CursorWindow { java.lang.String printStats(); }
-keepclassmembers class android.widget.Spinner { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.Spinner { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup$3 { void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.widget.Spinner { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.view.ViewGroup$3 { void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void setFilterBitmap(boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.Spinner { int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setPaddingMode(int); }
-keepclassmembers class android.database.CursorWindow { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setTargetDensity(android.util.DisplayMetrics); }
-keepclassmembers class android.util.Pair { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.database.CursorWindow { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeCyclicReference(int); }
-keepclassmembers class android.util.Pair { int hashCode(); }
-keepclassmembers class org.apache.http.ParseException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Spinner { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFieldDescriptors(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.view.ViewPropertyAnimator$PropertyBundle { void <init>(int,java.util.ArrayList); }
-keepclassmembers class android.view.ViewPropertyAnimator$PropertyBundle { boolean cancel(int); }
-keepclassmembers class android.util.Pair { android.util.Pair create(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.Pair { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.Spinner { android.graphics.Rect access$400(android.widget.Spinner); }
-keepclassmembers class android.widget.Spinner { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.util.ArrayMap$1 { java.lang.Object colGetEntry(int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.widget.Editor$SpanController { void <init>(android.widget.Editor); }
-keepclassmembers class java.util.HashMap { void <init>(); }
-keepclassmembers class android.widget.Spinner { android.content.Context access$500(android.widget.Spinner); }
-keepclassmembers class java.lang.Number { void <init>(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspot(float,float); }
-keepclassmembers class android.util.ArrayMap$1 { void <init>(android.util.ArrayMap); }
-keepclassmembers class java.util.HashMap { void <init>(int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundEnter(boolean); }
-keepclassmembers class android.util.ArrayMap$1 { int colGetSize(); }
-keepclassmembers class java.nio.charset.spi.CharsetProvider { void <init>(); }
-keepclassmembers class java.util.HashMap { void <init>(java.util.Map); }
-keepclassmembers class java.util.HashMap { void <init>(int,float); }
-keepclassmembers class org.apache.http.client.utils.URLEncodedUtils { java.lang.String format(java.util.List,java.lang.String); }
-keepclassmembers class android.util.ArrayMap$1 { int colIndexOfValue(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryBackgroundExit(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class java.util.HashMap { void constructorPutAll(java.util.Map); }
-keepclassmembers class org.apache.http.client.utils.URLEncodedUtils { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.HashMap { int capacityForInitSize(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void buildPathIfDirty(); }
-keepclassmembers class android.content.pm.ActivityInfo$1 { void <init>(); }
-keepclassmembers class java.util.Collections$SingletonList { void <init>(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.Path buildRing(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class java.util.Collections$SingletonList { boolean contains(java.lang.Object); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleExit(); }
-keepclassmembers class android.widget.Spinner { android.widget.Spinner$SpinnerPopup access$100(android.widget.Spinner); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void tryRippleEnter(); }
-keepclassmembers class java.util.HashMap { void init(); }
-keepclassmembers class java.util.HashMap { int size(); }
-keepclassmembers class android.util.ArrayMap$1 { void colRemoveAt(int); }
-keepclassmembers class java.util.HashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.HashMap { java.lang.Object clone(); }
-keepclassmembers class java.util.HashMap { boolean isEmpty(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void clearHotspots(); }
-keepclassmembers class com.bumptech.glide.load.model.UrlLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int); }
-keepclassmembers class com.bumptech.glide.load.model.UrlLoader { void <init>(com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class java.util.Collections$SingletonList { int size(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void <init>(android.text.DynamicLayout); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getMinimumHeight(); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void reflow(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getMinimumWidth(); }
-keepclassmembers class java.util.Collections$SingletonList { java.lang.Object get(int); }
-keepclassmembers class android.widget.Editor$SpanController { void hide(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { int getOpacity(); }
-keepclassmembers class com.bumptech.glide.load.model.UrlLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.net.URL,int,int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { android.net.Uri readFrom(android.os.Parcel); }
-keepclassmembers class android.view.View$12 { void <init>(java.lang.String); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { boolean isHierarchical(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.lang.ArrayStoreException { void <init>(); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void onHotspotBoundsChanged(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class java.util.HashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.text.DynamicLayout$ChangeWatcher { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getScheme(); }
-keepclassmembers class java.util.HashMap { boolean containsValue(java.lang.Object); }
-keepclassmembers class com.android.okhttp.OkHttpClient$1 { void <init>(com.android.okhttp.OkHttpClient,java.lang.String); }
-keepclassmembers class android.net.Uri$HierarchicalUri { android.net.Uri$Part getSsp(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeFieldValues(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat$2$1 { android.graphics.Bitmap doInBackground(android.net.Uri[]); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat$2$1 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void clearMutated(); }
-keepclassmembers class com.android.okhttp.OkHttpClient$1 { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void appendSspTo(java.lang.StringBuilder); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String makeSchemeSpecificPart(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class com.android.okhttp.OkHttpClient$1 { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class java.util.HashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void updateMaskShaderIfNeeded(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(java.net.Proxy); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(java.io.FileDescriptor); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getEncodedQuery(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void invalidateSelf(); }
-keepclassmembers class java.util.HashMap { java.lang.Object putValueForNullKey(java.lang.Object); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getPath(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColor(android.content.res.ColorStateList); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.util.List getPathSegments(); }
-keepclassmembers class java.net.AddressCache { void <init>(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void initializeWithState(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.util.HashMap { void preModify(java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String getAuthority(); }
-keepclassmembers class java.net.AddressCache { java.lang.Object get(java.lang.String,int); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String makeUriString(); }
-keepclassmembers class java.net.AddressCache { void put(java.lang.String,int,java.net.InetAddress[]); }
-keepclassmembers class java.net.PlainSocketImpl { void accept(java.net.SocketImpl); }
-keepclassmembers class java.util.HashMap { void constructorPut(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.net.Uri$HierarchicalUri { android.net.Uri$Builder buildUpon(); }
-keepclassmembers class java.net.PlainSocketImpl { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.net.Uri$HierarchicalUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$PathPart,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class android.net.Uri$HierarchicalUri { java.lang.String toString(); }
-keepclassmembers class java.net.AddressCache { void putUnknownHost(java.lang.String,int,java.lang.String); }
-keepclassmembers class java.util.HashMap { void addNewEntry(java.lang.Object,java.lang.Object,int,int); }
-keepclassmembers class java.net.PlainSocketImpl { boolean usingSocks(); }
-keepclassmembers class java.util.HashMap { void addNewEntryForNullKey(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getMaskType(); }
-keepclassmembers class android.graphics.drawable.NinePatchDrawable { void <init>(android.graphics.drawable.NinePatchDrawable$NinePatchState,android.content.res.Resources,android.graphics.drawable.NinePatchDrawable$1); }
-keepclassmembers class android.animation.IntKeyframeSet { void <init>(android.animation.Keyframe$IntKeyframe[]); }
-keepclassmembers class java.util.HashMap { void putAll(java.util.Map); }
-keepclassmembers class com.fsck.k9.view.CryptoModeWithoutSignOnlySelector$1 { void <clinit>(); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry constructorNewEntry(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.animation.IntKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class java.net.PlainSocketImpl { int available(); }
-keepclassmembers class java.net.PlainSocketImpl { void checkNotClosed(); }
-keepclassmembers class java.util.HashMap { void ensureCapacity(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isStateful(); }
-keepclassmembers class android.animation.IntKeyframeSet { int getIntValue(float); }
-keepclassmembers class java.net.PlainSocketImpl { void bind(java.net.InetAddress,int); }
-keepclassmembers class java.net.PlainSocketImpl { void close(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void removeRipple(android.graphics.drawable.Ripple); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.File); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.IntKeyframeSet clone(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeHierarchy(java.lang.Object,java.io.ObjectStreamClass); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getChangingConfigurations(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView$2 { void <init>(com.fsck.k9.ui.messageview.MessageTopView); }
-keepclassmembers class android.animation.IntKeyframeSet { void invalidateCache(); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.io.FileDescriptor); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry[] makeTable(int); }
-keepclassmembers class java.util.HashMap { java.util.HashMap$HashMapEntry[] doubleCapacity(); }
-keepclassmembers class java.io.FileInputStream { int available(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setAlpha(int); }
-keepclassmembers class java.io.FileInputStream { void close(); }
-keepclassmembers class java.net.PlainSocketImpl { void create(boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawContent(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { int getRippleIndex(android.graphics.drawable.Ripple); }
-keepclassmembers class java.net.PlainSocketImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class java.net.PlainSocketImpl { java.io.OutputStream getOutputStream(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setDither(boolean); }
-keepclassmembers class java.net.PlainSocketImpl { void connect(java.net.InetAddress,int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawBackgroundAndRipples(android.graphics.Canvas); }
-keepclassmembers class java.util.HashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.net.PlainSocketImpl { java.lang.Object getOption(int); }
-keepclassmembers class java.net.PlainSocketImpl { void listen(int); }
-keepclassmembers class java.io.FileInputStream { void <init>(java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl { void setOption(int,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getOpacity(); }
-keepclassmembers class java.io.FileInputStream { int read(); }
-keepclassmembers class java.net.PlainSocketImpl { int socksGetServerPort(); }
-keepclassmembers class java.net.PlainSocketImpl { java.net.InetAddress socksGetServerAddress(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksConnect(java.net.InetAddress,int,int); }
-keepclassmembers class java.util.HashMap { java.lang.Object removeNullKey(); }
-keepclassmembers class java.io.FileInputStream { int read(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewArray(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass,java.lang.Class,boolean); }
-keepclassmembers class java.io.FileInputStream { long skip(long); }
-keepclassmembers class java.io.FileInputStream { java.nio.channels.FileChannel getChannel(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean ensureValidRect(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl { void socksRequestConnection(java.net.InetAddress,int); }
-keepclassmembers class java.util.HashMap { void postRemove(java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.io.ObjectOutputStream { void writeInt(int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean onLevelChange(int); }
-keepclassmembers class java.util.HashMap { java.util.Set keySet(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksAccept(); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { void <init>(org.apache.james.mime4j.io.BufferedLineReaderInputStream,java.lang.String,boolean); }
-keepclassmembers class java.util.HashMap { java.util.Set entrySet(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { void <init>(java.net.InetAddress,org.apache.http.HttpHost,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType); }
-keepclassmembers class java.util.HashMap { void clear(); }
-keepclassmembers class java.util.HashMap { boolean containsMapping(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void drawMask(android.graphics.Canvas); }
-keepclassmembers class java.util.HashMap { java.util.Collection values(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder { void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class java.net.PlainSocketImpl { void shutdownInput(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksBind(); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Paint getRipplePaint(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder { void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser,com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class java.net.PlainSocketImpl { void socksSendRequest(int,java.net.InetAddress,int); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { void calculateBoundaryLen(); }
-keepclassmembers class android.animation.IntKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class java.net.PlainSocketImpl { java.net.Socks4Message socksReadReply(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder { com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper decode(com.bumptech.glide.load.model.ImageVideoWrapper,int,int,byte[]); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder { com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper decodeBitmapWrapper(com.bumptech.glide.load.model.ImageVideoWrapper,int,int); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class java.net.PlainSocketImpl { void connect(java.net.SocketAddress,int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newKeyIterator(); }
-keepclassmembers class java.net.PlainSocketImpl { void shutdownOutput(); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { void <init>(android.content.Context,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.Account); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newValueIterator(); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { void <init>(android.content.Context,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.Account,int); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder { com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper decodeGifWrapper(java.io.InputStream,int,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { int fillBuffer(); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { boolean endOfStream(); }
-keepclassmembers class java.net.PlainSocketImpl { int read(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { boolean onLevelChange(int); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder { com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapper decodeStream(com.bumptech.glide.load.model.ImageVideoWrapper,int,int,byte[]); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.RippleDrawable$RippleState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class java.net.PlainSocketImpl { void write(byte[],int,int); }
-keepclassmembers class java.util.HashMap { java.util.Iterator newEntryIterator(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewClass(java.lang.Class,boolean); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNewClassDesc(java.io.ObjectStreamClass); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { void <init>(org.apache.http.HttpHost); }
-keepclassmembers class java.net.PlainSocketImpl { void access$100(java.net.PlainSocketImpl,byte[],int,int); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { java.lang.String getDisplayName(android.content.Context,com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { void <init>(org.apache.http.HttpHost,java.net.InetAddress,boolean); }
-keepclassmembers class java.net.PlainSocketImpl { int access$000(java.net.PlainSocketImpl,byte[],int,int); }
-keepclassmembers class java.util.HashMap { boolean access$600(java.util.HashMap,java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost,boolean); }
-keepclassmembers class java.io.ObjectOutputStream { void writeClassDescriptor(java.io.ObjectStreamClass); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNewException(java.lang.Exception); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder { com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int); }
-keepclassmembers class java.util.HashMap { void <clinit>(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewObject(java.lang.Object,java.lang.Class,java.io.ObjectStreamClass,boolean); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$5 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void <init>(android.graphics.drawable.RippleDrawable$RippleState,android.content.res.Resources,android.graphics.drawable.RippleDrawable$1); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$5 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder { java.lang.String getId(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder { com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.model.ImageVideoWrapper,int,int); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost[]); }
-keepclassmembers class android.graphics.drawable.RippleDrawable { void initializeFromState(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { org.apache.http.HttpHost[] toChain(org.apache.http.HttpHost); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class java.util.MissingFormatWidthException { void <init>(java.lang.String); }
-keepclassmembers class java.util.MissingFormatWidthException { java.lang.String getMessage(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void clearMutated(); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { java.lang.String truncateStatus(java.lang.String); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.LevelListDrawable$LevelListState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { void skipBoundary(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { int compareTo(com.fsck.k9.activity.FolderInfoHolder); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { boolean hasData(); }
-keepclassmembers class android.graphics.Paint$Join { void <init>(java.lang.String,int,int); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { java.net.InetAddress getLocalAddress(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { int getHopCount(); }
-keepclassmembers class android.graphics.drawable.LevelListDrawable { void <init>(android.graphics.drawable.LevelListDrawable$LevelListState,android.content.res.Resources,android.graphics.drawable.LevelListDrawable$1); }
-keepclassmembers class android.graphics.Paint$Join { void <clinit>(); }
-keepclassmembers class android.app.ActivityManagerProxy { void reportActivityFullyDrawn(android.os.IBinder); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewString(java.lang.String,boolean); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { org.apache.http.HttpHost getHopTarget(int); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { org.apache.http.HttpHost getTargetHost(); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.view.WindowInsets); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { void verifyEndOfStream(); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { boolean equals(java.lang.Object); }
-keepclassmembers class android.webkit.WebViewClient { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { void populate(android.content.Context,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.WindowInsets { android.graphics.Rect getSystemWindowInsets(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { org.apache.http.HttpHost getProxyHost(); }
-keepclassmembers class android.view.WindowInsets { void <init>(android.graphics.Rect); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { void writeNull(); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { void close(); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { boolean isFullyConsumed(); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { boolean isEmptyStream(); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { boolean eof(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeUnshared(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { void populate(android.content.Context,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.Account,int); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { int hashCode(); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { boolean isLastPart(); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.ThreadFactory,com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { boolean isTunnelled(); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor { void <init>(int); }
-keepclassmembers class com.bumptech.glide.request.target.SimpleTarget { void <init>(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObject(java.lang.Object,boolean); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { int read(byte[],int,int); }
-keepclassmembers class com.fsck.k9.activity.FolderInfoHolder { void setMoreMessagesFromFolder(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { int read(); }
-keepclassmembers class com.bumptech.glide.request.target.SimpleTarget { void <init>(int,int); }
-keepclassmembers class com.bumptech.glide.request.target.SimpleTarget { void getSize(com.bumptech.glide.request.target.SizeReadyCallback); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { boolean isLayered(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { boolean isSecure(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$InboxStyle { void <init>(android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor { void <init>(int,com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { int writeObjectInternal(java.lang.Object,boolean,boolean,boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompat$InboxStyle { android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { int readLine(org.apache.james.mime4j.util.ByteArrayBuffer); }
-keepclassmembers class android.support.v4.app.NotificationCompat$InboxStyle { android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor { void afterExecute(java.lang.Runnable,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.Preferences { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.app.NotificationCompat$InboxStyle { android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { boolean readAllowed(); }
-keepclassmembers class android.app.ActivityManagerProxy { void startLockTaskMode(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.Preferences { java.lang.Enum getEnumStringPref(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.Enum); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor { java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.text.util.Rfc822Token { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.WindowInsets { android.view.WindowInsets consumeSystemWindowInsets(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { void <init>(); }
-keepclassmembers class android.view.WindowInsets { boolean isConsumed(); }
-keepclassmembers class android.app.ActivityManagerProxy { void stopLockTaskMode(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { void archiveMessages(android.content.Intent,com.fsck.k9.Account,com.fsck.k9.controller.MessagingController); }
-keepclassmembers class android.text.util.Rfc822Token { java.lang.String getName(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { void <init>(java.util.Enumeration,java.util.Enumeration); }
-keepclassmembers class java.lang.OutOfMemoryError { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { java.lang.String toString(); }
-keepclassmembers class java.lang.OutOfMemoryError { void <init>(java.lang.String); }
-keepclassmembers class android.text.util.Rfc822Token { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.service.MailService$5 { void <clinit>(); }
-keepclassmembers class android.text.util.Rfc822Token { java.lang.String getAddress(); }
-keepclassmembers class android.app.ActivityManagerProxy { void setTaskDescription(android.os.IBinder,android.app.ActivityManager$TaskDescription); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { boolean hasMoreElements(); }
-keepclassmembers class com.fsck.k9.Preferences { void deleteAccount(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedFolder { void <init>(); }
-keepclassmembers class com.fsck.k9.Preferences { com.fsck.k9.Preferences getPreferences(android.content.Context); }
-keepclassmembers class org.apache.james.mime4j.io.MimeBoundaryInputStream { boolean unread(org.apache.james.mime4j.util.ByteArrayBuffer); }
-keepclassmembers class android.text.util.Rfc822Token { java.lang.String quoteNameIfNecessary(java.lang.String); }
-keepclassmembers class java.text.NumberFormat$Field { void <init>(java.lang.String); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { java.net.URL nextElement(); }
-keepclassmembers class java.io.ObjectOutputStream { java.io.ObjectStreamClass writeEnumDesc(java.io.ObjectStreamClass,boolean); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { void cancelNotifications(android.content.Intent,com.fsck.k9.Account,com.fsck.k9.controller.MessagingController); }
-keepclassmembers class java.lang.TwoEnumerationsInOne { java.lang.Object nextElement(); }
-keepclassmembers class com.fsck.k9.Preferences { com.fsck.k9.Account getAccount(java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedFolder { void <init>(com.fsck.k9.preferences.SettingsImporter$1); }
-keepclassmembers class java.text.NumberFormat$Field { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.routing.HttpRoute { java.lang.String toString(); }
-keepclassmembers class android.app.ActivityManagerProxy { android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean requestVisibleBehind(android.os.IBinder,boolean); }
-keepclassmembers class android.text.util.Rfc822Token { java.lang.String quoteComment(java.lang.String); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean canApplyTheme(); }
-keepclassmembers class java.io.ObjectOutputStream { int writeNewEnum(java.lang.Object,java.lang.Class,boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void applyThemeChildElements(android.content.res.Resources$Theme); }
-keepclassmembers class android.text.util.Rfc822Token { java.lang.String quoteName(java.lang.String); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.Preferences { java.util.Collection getAvailableAccounts(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { android.content.Intent createArchiveAllIntent(android.content.Context,com.fsck.k9.Account,java.util.List); }
-keepclassmembers class com.fsck.k9.Preferences { java.util.List getAccounts(); }
-keepclassmembers class android.text.util.Rfc822Token { int hashCode(); }
-keepclassmembers class com.fsck.k9.Preferences { com.fsck.k9.Account getDefaultAccount(); }
-keepclassmembers class android.app.ActivityManagerProxy { boolean isBackgroundVisibleBehind(android.os.IBinder); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void setTokenizer(android.widget.MultiAutoCompleteTextView$Tokenizer); }
-keepclassmembers class java.util.TreeMap$BoundedMap { void <init>(java.util.TreeMap,boolean,java.lang.Object,java.util.TreeMap$Bound,java.lang.Object,java.util.TreeMap$Bound); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.Preferences { com.fsck.k9.preferences.Storage getStorage(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { void <init>(java.net.URL,com.android.okhttp.OkHttpClient); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.fsck.k9.Preferences { void loadAccounts(); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void performFiltering(java.lang.CharSequence,int); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { android.content.Intent createArchiveMessageIntent(android.content.Context,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { void connect(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { void disconnect(); }
-keepclassmembers class android.text.util.Rfc822Token { boolean stringEquals(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { boolean enoughToFilter(); }
-keepclassmembers class java.io.ObjectOutputStream { void writeStreamHeader(); }
-keepclassmembers class android.text.util.Rfc822Token { boolean equals(java.lang.Object); }
-keepclassmembers class java.io.ObjectOutputStream { void writeObjectOverride(java.lang.Object); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void performValidation(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { java.lang.String getHeaderField(java.lang.String); }
-keepclassmembers class java.io.ObjectOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void <init>(android.widget.AdapterView); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void performFiltering(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.io.Reader { void <init>(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { android.content.Intent createDeleteAllMessagesIntent(android.content.Context,java.lang.String,java.util.List); }
-keepclassmembers class java.util.TreeMap$BoundedMap { boolean isEmpty(); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class android.os.StatFs { void <init>(java.lang.String); }
-keepclassmembers class android.os.StatFs { android.system.StructStatVfs doStat(java.lang.String); }
-keepclassmembers class com.fsck.k9.Preferences { com.fsck.k9.Account newAccount(); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void replaceText(java.lang.CharSequence); }
-keepclassmembers class android.os.StatFs { int getBlockSize(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { android.content.Intent createDeleteMessageIntent(android.content.Context,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void onInvalidated(); }
-keepclassmembers class com.fsck.k9.Preferences { void setDefaultAccount(com.fsck.k9.Account); }
-keepclassmembers class android.view.WindowInsets { void <clinit>(); }
-keepclassmembers class java.io.Reader { void <init>(java.lang.Object); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { android.content.Intent createDismissAllMessagesIntent(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class org.htmlcleaner.EndTagToken { void <init>(); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.AdapterView$AdapterDataSetObserver { void clearSavedState(); }
-keepclassmembers class org.htmlcleaner.EndTagToken { void <init>(java.lang.String); }
-keepclassmembers class java.io.Reader { int read(char[]); }
-keepclassmembers class java.util.TreeMap$BoundedMap { boolean isInBounds(java.lang.Object,java.util.TreeMap$Bound,java.util.TreeMap$Bound); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { android.content.Intent createDismissMessageIntent(android.content.Context,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class org.htmlcleaner.EndTagToken { void serialize(org.htmlcleaner.Serializer,java.io.Writer); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class com.android.okhttp.Dispatcher { void <init>(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { android.content.Intent createMarkAllAsReadIntent(android.content.Context,java.lang.String,java.util.List); }
-keepclassmembers class org.htmlcleaner.EndTagToken { java.lang.String toString(); }
-keepclassmembers class com.android.org.conscrypt.SSLNullSession$DefaultHolder { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$BoundedMap { java.util.TreeMap$Node bound(java.util.TreeMap$Node,java.util.TreeMap$Bound,java.util.TreeMap$Bound); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { android.content.Intent createMarkMessageAsReadIntent(android.content.Context,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.view.animation.BaseInterpolator { void setChangingConfiguration(int); }
-keepclassmembers class android.view.animation.BaseInterpolator { void <init>(); }
-keepclassmembers class android.view.animation.BaseInterpolator { int getChangingConfiguration(); }
-keepclassmembers class org.htmlcleaner.EndTagToken { void addAttribute(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { void setConnectTimeout(int); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo33 { void addPreviewColumn(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { void setReadTimeout(int); }
-keepclassmembers class libcore.io.IoBridge { int available(java.io.FileDescriptor); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { java.util.ArrayList createSingleItemArrayList(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class java.util.TreeMap$BoundedMap { java.lang.Object lastKey(); }
-keepclassmembers class java.util.TreeMap$BoundedMap { java.util.TreeMap$Node endpoint(boolean); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLocationFieldImpl$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawablePadding(android.content.res.TypedArray); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLocationFieldImpl$1 { org.apache.james.mime4j.dom.field.ContentLocationField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { void initHttpEngine(); }
-keepclassmembers class java.security.Permission { void <init>(java.lang.String); }
-keepclassmembers class libcore.io.IoBridge { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { void deleteMessages(android.content.Intent,com.fsck.k9.controller.MessagingController); }
-keepclassmembers class libcore.net.url.FtpHandler { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { com.android.okhttp.internal.http.HttpEngine newHttpEngine(java.lang.String,com.android.okhttp.Connection,com.android.okhttp.internal.http.RetryableSink,com.android.okhttp.Response); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLocationFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class libcore.net.url.FtpHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { android.content.Intent createMarkMessageAsSpamIntent(android.content.Context,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void <init>(java.math.BigInteger,java.util.Date,org.apache.harmony.security.x509.Extensions); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { boolean isMovePossible(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class libcore.net.url.FtpHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class libcore.io.IoBridge { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { void markMessagesAsRead(android.content.Intent,com.fsck.k9.Account,com.fsck.k9.controller.MessagingController); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { com.android.okhttp.internal.http.HttpEngine getResponse(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableStroke(android.content.res.TypedArray); }
-keepclassmembers class libcore.io.IoBridge { void connect(java.io.FileDescriptor,java.net.InetAddress,int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateDrawableCorners(android.content.res.TypedArray); }
-keepclassmembers class libcore.io.IoBridge { void connectErrno(java.io.FileDescriptor,java.net.InetAddress,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { boolean execute(boolean); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { void markMessageAsSpam(android.content.Intent,com.fsck.k9.Account,com.fsck.k9.controller.MessagingController); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { int hashCode(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableGradient(android.content.res.Resources,android.content.res.TypedArray); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void <clinit>(); }
-keepclassmembers class libcore.io.IoBridge { java.lang.String connectDetail(java.net.InetAddress,int,int,android.system.ErrnoException); }
-keepclassmembers class android.webkit.WebViewDelegate { void <init>(); }
-keepclassmembers class com.fsck.k9.notification.NotificationActionService { int startService(android.content.Intent,int); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { java.math.BigInteger access$000(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { org.apache.harmony.security.x509.Extensions access$200(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSolid(android.content.res.TypedArray); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void <init>(int,java.io.OutputStream,boolean); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry processResponseHeaders(); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$RevokedCertificate { java.util.Date access$100(org.apache.harmony.security.x509.TBSCertList$RevokedCertificate); }
-keepclassmembers class android.widget.Button { void <init>(android.content.Context); }
-keepclassmembers class android.widget.Button { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { void <init>(java.lang.String$1); }
-keepclassmembers class android.widget.Button { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.Button { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { void <init>(javax.security.auth.x500.X500Principal); }
-keepclassmembers class java.lang.String$CaseInsensitiveComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.io.IoBridge { void closeAndSignalBlockedThreads(java.io.FileDescriptor); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String nextAT(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void clearPending(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void <init>(java.io.OutputStream,boolean); }
-keepclassmembers class android.widget.Button { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class java.nio.channels.ClosedChannelException { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$8 { void <init>(com.fsck.k9.mailstore.LocalStore,android.content.ContentValues); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void encode(byte); }
-keepclassmembers class libcore.io.IoBridge { boolean isConnected(java.io.FileDescriptor,java.net.InetAddress,int,int,int); }
-keepclassmembers class android.widget.Button { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.util.ConcurrentModificationException { void <init>(); }
-keepclassmembers class android.graphics.Rect$1 { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void completeEncoding(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$8 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void encodeChunk(byte[],int,int); }
-keepclassmembers class java.util.concurrent.Semaphore { void <init>(int); }
-keepclassmembers class android.graphics.Rect$1 { android.graphics.Rect createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.Rect$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void softBreak(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void escape(byte); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void write(byte); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void lineBreak(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { int getResponseCode(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { java.lang.String getResponseMessage(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$8 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void plain(byte); }
-keepclassmembers class libcore.io.IoBridge { java.lang.Object getSocketOption(java.io.FileDescriptor,int); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void writePending(); }
-keepclassmembers class java.util.concurrent.Semaphore { void acquire(); }
-keepclassmembers class libcore.io.IoBridge { java.lang.Object getSocketOptionErrno(java.io.FileDescriptor,int); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void close(); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String quotedAV(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { void addRequestProperty(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void flush(); }
-keepclassmembers class java.util.concurrent.Semaphore { void release(); }
-keepclassmembers class com.fsck.k9.activity.EmailAddressList { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class com.fsck.k9.activity.EmailAddressList { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.EmailAddressList { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate$3 { void onClick(android.view.View); }
-keepclassmembers class com.fsck.k9.mailstore.TempFileBody { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.impl.auth.UnsupportedDigestAlgorithmException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void flushOutput(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void updateGradientDrawableSize(android.content.res.TypedArray); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String hexAV(); }
-keepclassmembers class com.fsck.k9.mailstore.TempFileBody { void setEncoding(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.TempFileBody { java.io.InputStream getInputStream(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void <init>(com.fsck.k9.mail.internet.MimeMessage); }
-keepclassmembers class com.fsck.k9.mailstore.TempFileBody { long getSize(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpURLConnectionImpl { void setProtocols(java.lang.String,boolean); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate$3 { void <init>(android.widget.TimePickerSpinnerDelegate); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { int getIntrinsicWidth(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void <init>(com.android.okhttp.ConnectionPool,com.android.okhttp.Connection,java.net.Socket); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class com.fsck.k9.mailstore.TempFileBody { void writeTo(java.io.OutputStream); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.ViewCompat$SDK11 { void setLayerType(android.view.View,int); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void expect(java.lang.Class); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaqueForState(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { float getFloatOrFraction(android.content.res.TypedArray,int,float); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void body(org.apache.james.mime4j.stream.BodyDescriptor,java.io.InputStream); }
-keepclassmembers class libcore.io.IoBridge { boolean booleanFromInt(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void closeOnIdle(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$ExpatLocator { java.lang.String getPublicId(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$ExpatLocator { void <init>(org.apache.harmony.xml.ExpatParser); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$ExpatLocator { java.lang.String getSystemId(); }
-keepclassmembers class libcore.io.IoBridge { int booleanToInt(boolean); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.lang.String,java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$ExpatLocator { int getLineNumber(); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String escapedAV(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void endHeader(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void endBodyPart(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void poolOnIdle(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void endMultipart(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { boolean isClosed(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { long bufferSize(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$ExpatLocator { int getColumnNumber(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class libcore.io.IoBridge { void setSocketOption(java.io.FileDescriptor,int,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void endMessage(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { void <init>(); }
-keepclassmembers class libcore.io.IoBridge { void setSocketOptionErrno(java.io.FileDescriptor,int,java.lang.Object); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$200(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$300(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { org.apache.harmony.security.fortress.Engine$SpiAndProvider getInstance(java.security.Provider$Service,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void closeIfOwnedBy(java.lang.Object); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$400(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$100(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$ExpatLocator { void <init>(org.apache.harmony.xml.ExpatParser,org.apache.harmony.xml.ExpatParser$1); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void flush(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { boolean isReadable(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void epilogue(java.io.InputStream); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$700(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { java.util.ArrayList getServices(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void preamble(java.io.InputStream); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$500(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$800(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1000(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void field(org.apache.james.mime4j.stream.Field); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$900(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void writeRequest(com.android.okhttp.Headers,java.lang.String); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$102(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$600(android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { char getEscaped(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$302(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$502(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void startBodyPart(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void raw(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine { java.security.NoSuchAlgorithmException notFound(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$202(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void clearMutated(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$402(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$802(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$702(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { char getUTF8(); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$602(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$19 { void <init>(com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.Set,boolean); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void startMessage(); }
-keepclassmembers class java.util.HashSet { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { boolean isOpaque(int); }
-keepclassmembers class android.view.View$5 { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void startHeader(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$19 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okhttp.Response$Builder readResponse(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$19 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.util.HashSet { void <init>(int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$1002(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class android.content.res.StringBlock$StyleIDs { int access$902(android.content.res.StringBlock$StyleIDs,int); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$MimeMessageBuilder { void startMultipart(org.apache.james.mime4j.stream.BodyDescriptor); }
-keepclassmembers class java.util.HashSet { void <init>(int,float); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setPattern(java.lang.String); }
-keepclassmembers class java.util.HashSet { void <init>(java.util.HashMap); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void <init>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void initializeWithState(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest { void <init>(com.bumptech.glide.RequestManager$GenericModelRequest,java.lang.Object); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { int getByte(int); }
-keepclassmembers class java.util.HashSet { void <init>(java.util.Collection); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void readHeaders(com.android.okhttp.Headers$Builder); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.String getMessage(); }
-keepclassmembers class java.util.HashSet { boolean add(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { boolean discard(com.android.okio.Source,int); }
-keepclassmembers class java.io.WriteAbortedException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest { com.bumptech.glide.GenericTranscodeRequest as(java.lang.Class); }
-keepclassmembers class java.util.HashSet { void clear(); }
-keepclassmembers class java.util.HashSet { java.lang.Object clone(); }
-keepclassmembers class java.util.HashSet { boolean contains(java.lang.Object); }
-keepclassmembers class java.io.WriteAbortedException { java.lang.Throwable getCause(); }
-keepclassmembers class java.util.HashSet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.HashSet { boolean remove(java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { int leadingDigitsPatternSize(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setFormat(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.Sink newChunkedSink(); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageIdGenerator { java.lang.String generateMessageId(com.fsck.k9.mail.Message); }
-keepclassmembers class java.util.HashSet { boolean isEmpty(); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageIdGenerator { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageIdGenerator { com.fsck.k9.mail.internet.MessageIdGenerator getInstance(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle { void <clinit>(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle { void <init>(java.lang.String,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle { com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle getDefault(); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(); }
-keepclassmembers class android.text.style.SubscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.Sink newFixedLengthSink(long); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle { com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle mapIntToValue(int); }
-keepclassmembers class java.util.HashSet { int size(); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.lang.String findMostSpecific(java.lang.String); }
-keepclassmembers class android.widget.AutoCompleteTextView$MyWatcher { void <init>(android.widget.AutoCompleteTextView); }
-keepclassmembers class android.widget.AutoCompleteTextView$MyWatcher { void afterTextChanged(android.text.Editable); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixFormattingRule(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void writeRequestBody(com.android.okhttp.internal.http.RetryableSink); }
-keepclassmembers class android.text.style.SubscriptSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setNationalPrefixOptionalWhenFormatting(boolean); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle { com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle[] values(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle { com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation,android.content.res.TypedArray); }
-keepclassmembers class android.widget.AutoCompleteTextView$MyWatcher { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.fsck.k9.mail.internet.MessageIdGenerator { java.lang.String generateUuid(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapUtility { java.lang.String encodeString(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { com.android.i18n.phonenumbers.Phonemetadata$NumberFormat setDomesticCarrierCodeFormattingRule(java.lang.String); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void advanceHead(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class android.widget.AutoCompleteTextView$MyWatcher { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperKitKat { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.Source newFixedLengthSource(java.net.CacheRequest,long); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void <init>(); }
-keepclassmembers class android.app.ProgressDialog { void <init>(android.content.Context); }
-keepclassmembers class android.database.ContentObserver { void <init>(android.os.Handler); }
-keepclassmembers class android.graphics.drawable.GradientDrawable { void <init>(android.graphics.drawable.GradientDrawable$GradientState,android.graphics.drawable.GradientDrawable$1); }
-keepclassmembers class libcore.io.IoBridge { int getGroupSourceReqOp(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.Source newChunkedSource(java.net.CacheRequest,com.android.okhttp.internal.http.HttpEngine); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void advanceTail(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class org.apache.http.impl.io.SocketInputBuffer { void <init>(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class android.app.ProgressDialog { void initFormats(); }
-keepclassmembers class java.util.WeakHashMap { java.util.WeakHashMap$Entry[] newEntryArray(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void emptyResponseBody(); }
-keepclassmembers class java.util.WeakHashMap { void <init>(); }
-keepclassmembers class javax.net.ssl.DistinguishedNameParser { java.util.List getAllMostSpecificFirst(java.lang.String); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { boolean casCleanMe(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class libcore.io.IoBridge { java.io.FileDescriptor open(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { void <init>(com.android.i18n.phonenumbers.NumberParseException$ErrorType,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class java.util.WeakHashMap { void <init>(int); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { com.android.i18n.phonenumbers.NumberParseException$ErrorType getErrorType(); }
-keepclassmembers class org.apache.http.impl.io.SocketInputBuffer { boolean isDataAvailable(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { java.lang.Object transfer(java.lang.Object,boolean,long); }
-keepclassmembers class com.fsck.k9.activity.misc.ExtendedAsyncTask { void <init>(android.app.Activity); }
-keepclassmembers class android.app.ProgressDialog { android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean); }
-keepclassmembers class com.fsck.k9.activity.misc.ExtendedAsyncTask { void onPreExecute(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.Source newUnknownLengthSource(java.net.CacheRequest); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException { java.lang.String toString(); }
-keepclassmembers class android.widget.AutoCompleteTextView$MyWatcher { void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1); }
-keepclassmembers class com.fsck.k9.activity.misc.ExtendedAsyncTask { void removeProgressDialog(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapUtility { java.util.List getImapRangeValues(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.misc.ExtendedAsyncTask { void restore(android.app.Activity); }
-keepclassmembers class android.app.ProgressDialog { android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean,android.content.DialogInterface$OnCancelListener); }
-keepclassmembers class com.fsck.k9.activity.setup.WelcomeMessage { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.WelcomeMessage { void showWelcomeMessage(android.content.Context); }
-keepclassmembers class android.transition.ChangeScroll { void <init>(); }
-keepclassmembers class android.transition.ChangeScroll { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$NumberFormat { void readExternal(java.io.ObjectInput); }
-keepclassmembers class android.transition.ChangeScroll { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.BufferedSink access$200(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class libcore.io.IoBridge { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.transition.ChangeScroll { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { byte[] access$400(); }
-keepclassmembers class org.apache.http.impl.io.SocketInputBuffer { boolean isStale(); }
-keepclassmembers class android.app.ProgressDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.setup.WelcomeMessage { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.misc.ExtendedAsyncTask { boolean retain(); }
-keepclassmembers class com.fsck.k9.activity.setup.WelcomeMessage { void onClick(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { int access$300(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { int access$302(com.android.okhttp.internal.http.HttpConnection,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { int access$600(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class android.transition.ChangeScroll { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class java.util.WeakHashMap { void clear(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { int access$602(com.android.okhttp.internal.http.HttpConnection,int); }
-keepclassmembers class java.util.WeakHashMap { void computeMaxSize(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okhttp.ConnectionPool access$800(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class libcore.io.IoBridge { void write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapUtility { java.util.List getImapSequenceValues(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes$4 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okio.BufferedSource access$900(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamStringLoader$Factory { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { void <clinit>(); }
-keepclassmembers class libcore.io.IoBridge { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { com.android.okhttp.Connection access$700(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class java.util.WeakHashMap { java.util.Set keySet(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { void <init>(); }
-keepclassmembers class java.util.WeakHashMap { java.util.Set entrySet(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapUtility { boolean is32bitValue(long); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamStringLoader$Factory { void teardown(); }
-keepclassmembers class android.animation.PathKeyframes$4 { int getIntValue(float); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamStringLoader$Factory { com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { java.util.Date getDate(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapUtility { boolean isNumberValid(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapUtility { com.fsck.k9.mail.store.imap.ImapResponse getLastResponse(java.util.List); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { java.lang.Object awaitFulfill(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.lang.Object,boolean,long); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void <init>(java.io.InputStream,java.net.Socket); }
-keepclassmembers class android.app.ProgressDialog { void onStop(); }
-keepclassmembers class android.app.ProgressDialog { void onStart(); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(android.view.View,int); }
-keepclassmembers class android.widget.FastScroller$5 { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { java.util.Date parseDate(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { boolean inRange(int); }
-keepclassmembers class android.app.ProgressDialog { void setProgress(int); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Integer get(android.view.View); }
-keepclassmembers class java.util.Timer { long nextId(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int read(byte[],int,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void <init>(com.fsck.k9.mail.store.imap.ImapFolderPusher); }
-keepclassmembers class android.app.ProgressDialog { void setSecondaryProgress(int); }
-keepclassmembers class libcore.io.IoBridge { int maybeThrowAfterSendto(boolean,android.system.ErrnoException); }
-keepclassmembers class android.widget.FastScroller$5 { void setValue(java.lang.Object,int); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int read(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void reset(); }
-keepclassmembers class android.widget.FastScroller$5 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Timer { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.app.ProgressDialog { void setMax(int); }
-keepclassmembers class java.util.Timer { void <init>(); }
-keepclassmembers class libcore.io.IoBridge { int recvfrom(boolean,java.io.FileDescriptor,byte[],int,int,int,java.net.DatagramPacket,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void checkConnectionIdleCapable(com.fsck.k9.mail.store.imap.ImapConnection); }
-keepclassmembers class java.util.Timer { void <init>(boolean); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void mark(int); }
-keepclassmembers class android.app.ProgressDialog { void incrementProgressBy(int); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { void close(); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { int available(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void <init>(com.fsck.k9.mail.store.imap.ImapFolderPusher,com.fsck.k9.mail.store.imap.ImapFolderPusher$1); }
-keepclassmembers class android.app.ProgressDialog { void setProgressDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.ProgressDialog { void incrementSecondaryProgressBy(int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void checkConnectionNotNull(com.fsck.k9.mail.store.imap.ImapConnection); }
-keepclassmembers class java.util.WeakHashMap { boolean isEmpty(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { void <init>(com.fsck.k9.mailstore.CryptoResultAnnotation$CryptoError,com.fsck.k9.mail.internet.MimeBodyPart,org.openintents.openpgp.OpenPgpDecryptionResult,org.openintents.openpgp.OpenPgpSignatureResult,android.app.PendingIntent,org.openintents.openpgp.OpenPgpError); }
-keepclassmembers class android.app.ProgressDialog { void setIndeterminate(boolean); }
-keepclassmembers class libcore.net.url.FtpURLInputStream { long skip(long); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { void <init>(java.net.Socket,java.lang.String,int,boolean,com.android.org.conscrypt.SSLParametersImpl); }
-keepclassmembers class android.app.ProgressDialog { void setIndeterminateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Timer { void schedule(java.util.TimerTask,long); }
-keepclassmembers class android.text.util.LinkSpec { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void clearStoredUntaggedResponses(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { int getKeyIndex(java.lang.String); }
-keepclassmembers class java.util.WeakHashMap { void poll(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void clean(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { java.util.List getAndClearStoredUntaggedResponses(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { boolean containsKey(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { com.fsck.k9.mail.store.imap.ImapList getKeyedList(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { void <init>(com.fsck.k9.mailstore.CryptoResultAnnotation,com.fsck.k9.mailstore.CryptoResultAnnotation); }
-keepclassmembers class java.util.WeakHashMap { void removeEntry(java.util.WeakHashMap$Entry); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { int getKeyedNumber(java.lang.String); }
-keepclassmembers class android.app.ProgressDialog { void setMessage(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { java.util.Date getKeyedDate(java.lang.String); }
-keepclassmembers class com.fsck.k9.view.MessageTitleView { void <init>(android.content.Context); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { void connect(java.net.SocketAddress,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { java.lang.Object getKeyedValue(java.lang.String); }
-keepclassmembers class com.fsck.k9.view.MessageTitleView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue { void <clinit>(); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.io.IoBridge { int postRecvfrom(boolean,java.net.DatagramPacket,boolean,java.net.InetSocketAddress,int); }
-keepclassmembers class android.app.ProgressDialog { void onProgressChanged(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { com.fsck.k9.mailstore.CryptoResultAnnotation createErrorAnnotation(com.fsck.k9.mailstore.CryptoResultAnnotation$CryptoError,com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class android.app.ProgressDialog { java.lang.String access$100(android.app.ProgressDialog); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { java.lang.String getKeyedString(java.lang.String); }
-keepclassmembers class android.app.ProgressDialog { android.widget.ProgressBar access$000(android.app.ProgressDialog); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { long getNewUidNext(); }
-keepclassmembers class com.fsck.k9.view.MessageTitleView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.fsck.k9.view.MessageTitleView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.app.ProgressDialog { android.widget.TextView access$200(android.app.ProgressDialog); }
-keepclassmembers class libcore.io.IoBridge { int maybeThrowAfterRecvfrom(boolean,boolean,android.system.ErrnoException); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { com.fsck.k9.mail.store.imap.ImapList getList(int); }
-keepclassmembers class libcore.io.IoBridge { java.io.FileDescriptor socket(boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { long getLong(int); }
-keepclassmembers class android.app.ProgressDialog { java.text.NumberFormat access$300(android.app.ProgressDialog); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { long getOldUidNext(); }
-keepclassmembers class android.app.ProgressDialog { android.widget.TextView access$400(android.app.ProgressDialog); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.TokenMgrError { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { com.fsck.k9.mailstore.CryptoResultAnnotation createOpenPgpCanceledAnnotation(); }
-keepclassmembers class android.graphics.Point { void <init>(int,int); }
-keepclassmembers class android.graphics.Point { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { java.lang.Object getObject(int); }
-keepclassmembers class java.util.Timer { void scheduleImpl(java.util.TimerTask,long,long,boolean); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { java.net.InetAddress getInetAddress(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { int getNumber(int); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.TokenMgrError { void <init>(boolean,int,int,int,java.lang.String,char,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { java.lang.String getString(int); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { com.fsck.k9.mailstore.CryptoResultAnnotation createOpenPgpResultAnnotation(org.openintents.openpgp.OpenPgpDecryptionResult,org.openintents.openpgp.OpenPgpSignatureResult,android.app.PendingIntent,com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { boolean isList(int); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { com.fsck.k9.mailstore.CryptoResultAnnotation createOpenPgpEncryptionErrorAnnotation(org.openintents.openpgp.OpenPgpError); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { void setTcpNoDelay(boolean); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { java.lang.String toString(); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter); }
-keepclassmembers class libcore.io.IoBridge { java.net.InetAddress getSocketLocalAddress(java.io.FileDescriptor); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.view.MessageTitleView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class libcore.io.IoBridge { int getSocketLocalPort(java.io.FileDescriptor); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { void setSoLinger(boolean,int); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { com.fsck.k9.mailstore.CryptoResultAnnotation createOpenPgpSignatureErrorAnnotation(org.openintents.openpgp.OpenPgpError,com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class com.fsck.k9.view.MessageTitleView { void showSubjectInMessageHeader(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.TokenMgrError { java.lang.String LexicalError(boolean,int,int,int,java.lang.String,char); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapList { boolean isString(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { void setSoTimeout(int); }
-keepclassmembers class com.fsck.k9.view.MessageTitleView { void setMessageHeader(com.fsck.k9.view.MessageHeader); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher { void <init>(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class android.os.Messenger$1 { void <init>(); }
-keepclassmembers class java.util.WeakHashMap { void rehash(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { com.fsck.k9.mailstore.CryptoResultAnnotation getEncapsulatedResult(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { com.fsck.k9.mailstore.CryptoResultAnnotation$CryptoError getErrorType(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { long getStartUid(long,long); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { org.openintents.openpgp.OpenPgpError getOpenPgpError(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { org.openintents.openpgp.OpenPgpDecryptionResult getOpenPgpDecryptionResult(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void <init>(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { android.view.GLES20RecordingCanvas obtain(android.view.RenderNode); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void notifyMessagesArrived(long,long); }
-keepclassmembers class java.util.WeakHashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { android.app.PendingIntent getOpenPgpPendingIntent(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher { void <init>(com.tokenautocomplete.TokenCompleteTextView,com.tokenautocomplete.TokenCompleteTextView$1); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.view.GLES20RecordingCanvas { boolean isRecordingFor(java.lang.Object); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void recycle(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { boolean hasEncapsulatedResult(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { org.openintents.openpgp.OpenPgpSignatureResult getOpenPgpSignatureResult(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { int getSoTimeout(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { boolean isConnected(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { long finishRecording(); }
-keepclassmembers class com.fsck.k9.mail.K9MailLib { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { android.app.PendingIntent getOpenPgpSigningKeyIntentIfAny(); }
-keepclassmembers class com.fsck.k9.mail.K9MailLib { boolean isDebug(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { boolean hasReplacementData(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { com.fsck.k9.mail.internet.MimeBodyPart getReplacementData(); }
-keepclassmembers class java.util.WeakHashMap { int size(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { boolean hasSignatureResult(); }
-keepclassmembers class com.fsck.k9.mail.K9MailLib { boolean isDebugSensitive(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.TokenMgrError { java.lang.String addEscapes(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { boolean isInputShutdown(); }
-keepclassmembers class android.view.GLES20RecordingCanvas { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.K9MailLib { void setDebugStatus(com.fsck.k9.mail.K9MailLib$DebugStatus); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { boolean isOpenPgpResult(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { boolean isClosed(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { boolean isOutputShutdown(); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImplWrapper { int getPort(); }
-keepclassmembers class com.fsck.k9.mailstore.CryptoResultAnnotation { com.fsck.k9.mailstore.CryptoResultAnnotation withEncapsulatedResult(com.fsck.k9.mailstore.CryptoResultAnnotation); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { boolean openConnectionIfNecessary(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void prepareForIdle(); }
-keepclassmembers class android.graphics.Point { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$IntentAndResolvedActivitiesCount { void <init>(android.content.Intent,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$ReverseComparator { void <init>(java.util.Comparator); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.app.FragmentManagerImpl$3 { void run(); }
-keepclassmembers class android.app.FragmentManagerImpl$3 { void <init>(android.app.FragmentManagerImpl,java.lang.String,int); }
-keepclassmembers class android.widget.ArrayAdapter$ArrayFilter { void <init>(android.widget.ArrayAdapter,android.widget.ArrayAdapter$1); }
-keepclassmembers class libcore.net.event.NetworkEventDispatcher { libcore.net.event.NetworkEventDispatcher getInstance(); }
-keepclassmembers class libcore.net.event.NetworkEventDispatcher { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void processStoredUntaggedResponses(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { int processUntaggedResponse(long,com.fsck.k9.mail.store.imap.ImapResponse,java.util.List,java.util.List); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$IntentAndResolvedActivitiesCount { boolean containsFileUri(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$IntentAndResolvedActivitiesCount { java.lang.String getMimeType(); }
-keepclassmembers class libcore.net.event.NetworkEventDispatcher { void addListener(libcore.net.event.NetworkEventListener); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$ReverseComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$IntentAndResolvedActivitiesCount { boolean hasResolvedActivities(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$IntentAndResolvedActivitiesCount { android.content.Intent getIntent(); }
-keepclassmembers class libcore.net.event.NetworkEventDispatcher { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.K9Activity { void setupGestureDetector(com.fsck.k9.activity.misc.SwipeGestureDetector$OnSwipeGestureListener); }
-keepclassmembers class com.fsck.k9.activity.K9Activity { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.TokenMgrError { java.lang.String getMessage(); }
-keepclassmembers class com.fsck.k9.activity.K9Activity { void <init>(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.CertificateFactory getInstance(java.lang.String); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenTextWatcher { void removeToken(com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan,android.text.Editable); }
-keepclassmembers class java.text.StringCharacterIterator { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SimpleDialog$1 { void <init>(com.fsck.k9.activity.Accounts$SimpleDialog,com.fsck.k9.activity.Accounts); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue$Node { void <init>(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.internet.Viewable$Alternative { void <init>(java.util.List,java.util.List); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub { android.hardware.display.IDisplayManager asInterface(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SimpleDialog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.security.cert.CertificateFactory { java.security.cert.Certificate generateCertificate(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.mail.internet.Viewable$Alternative { java.util.List getHtml(); }
-keepclassmembers class java.io.PrintStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.Viewable$Alternative { java.util.List getText(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopMr1DrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { long getLengthWhenQuotedPrintableEncoded(byte[]); }
-keepclassmembers class com.fsck.k9.activity.K9Activity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(int); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { void writeSignSafeQuotedPrintable(java.io.OutputStream,byte[]); }
-keepclassmembers class java.text.StringCharacterIterator { int getBeginIndex(); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoWrapperEncoder { void <init>(com.bumptech.glide.load.Encoder,com.bumptech.glide.load.Encoder); }
-keepclassmembers class android.view.Choreographer$FrameDisplayEventReceiver { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class java.security.cert.CertificateFactory { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { java.lang.Integer getComposedMessageLength(); }
-keepclassmembers class java.text.StringCharacterIterator { int getEndIndex(); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoWrapperEncoder { boolean encode(com.bumptech.glide.load.model.ImageVideoWrapper,java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase$WrappedException { void <init>(java.lang.Exception); }
-keepclassmembers class javax.net.ssl.SSLSocket { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { java.lang.Integer getComposedMessageOffset(); }
-keepclassmembers class android.text.style.BackgroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.bumptech.glide.load.model.StreamEncoder { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { java.io.InputStream getInputStream(); }
-keepclassmembers class java.security.cert.CertificateFactory { void <init>(java.security.cert.CertificateFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { void <init>(java.util.Date,java.util.Date); }
-keepclassmembers class com.bumptech.glide.load.model.StreamEncoder { boolean encode(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoWrapperEncoder { boolean encode(java.lang.Object,java.io.OutputStream); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date getNotAfter(); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoWrapperEncoder { java.lang.String getId(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date getNotBefore(); }
-keepclassmembers class android.os.StrictMode$AndroidCloseGuardReporter { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { java.lang.String getRawText(); }
-keepclassmembers class android.os.StrictMode$AndroidCloseGuardReporter { void <init>(android.os.StrictMode$1); }
-keepclassmembers class javax.net.ssl.SSLSocket { void shutdownOutput(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date access$000(org.apache.harmony.security.x509.Validity); }
-keepclassmembers class android.os.StrictMode$AndroidCloseGuardReporter { void report(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { long getSize(); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { java.util.Date access$100(org.apache.harmony.security.x509.Validity); }
-keepclassmembers class com.bumptech.glide.load.model.StreamEncoder { boolean encode(java.lang.Object,java.io.OutputStream); }
-keepclassmembers class javax.net.ssl.SSLSocket { void shutdownInput(); }
-keepclassmembers class java.text.StringCharacterIterator { char setIndex(int); }
-keepclassmembers class org.apache.harmony.security.x509.Validity { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$16 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class java.util.concurrent.Semaphore$NonfairSync { void <init>(int); }
-keepclassmembers class com.bumptech.glide.load.model.StreamEncoder { java.lang.String getId(); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { void setCharset(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { void setComposedMessageOffset(java.lang.Integer); }
-keepclassmembers class java.util.concurrent.Semaphore$NonfairSync { int tryAcquireShared(int); }
-keepclassmembers class android.database.sqlite.SQLiteDirectCursorDriver { void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { void setComposedMessageLength(java.lang.Integer); }
-keepclassmembers class java.io.PrintStream { void close(); }
-keepclassmembers class com.android.okio.Okio { com.android.okio.BufferedSink buffer(com.android.okio.Sink); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$16 { void run(); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { void writeTo(java.io.OutputStream); }
-keepclassmembers class com.android.okio.Okio { void copy(com.android.okio.OkBuffer,long,long,java.io.OutputStream); }
-keepclassmembers class java.io.PrintStream { void flush(); }
-keepclassmembers class android.database.sqlite.SQLiteDirectCursorDriver { android.database.Cursor query(android.database.sqlite.SQLiteDatabase$CursorFactory,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.mail.internet.TextBody { void setEncoding(java.lang.String); }
-keepclassmembers class com.android.okio.Okio { com.android.okio.Sink sink(java.io.OutputStream); }
-keepclassmembers class java.io.PrintStream { void newline(); }
-keepclassmembers class dalvik.system.BlockGuard { void setThreadPolicy(dalvik.system.BlockGuard$Policy); }
-keepclassmembers class com.android.okio.Okio { com.android.okio.BufferedSource buffer(com.android.okio.Source); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { boolean verify(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$1 { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okio.Okio { com.android.okio.Source source(java.io.InputStream); }
-keepclassmembers class dalvik.system.BlockGuard { dalvik.system.BlockGuard$Policy getThreadPolicy(); }
-keepclassmembers class android.database.sqlite.SQLiteDirectCursorDriver { void cursorClosed(); }
-keepclassmembers class com.android.okio.Deadline { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.compose.IdentityAdapter$IdentityContainer { void <init>(com.fsck.k9.Identity,com.fsck.k9.Account); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int); }
-keepclassmembers class com.android.okio.Deadline { void throwIfReached(); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorStringLoader { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorStringLoader { void <init>(com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int,int); }
-keepclassmembers class java.io.PrintStream { void print(java.lang.String); }
-keepclassmembers class com.android.okio.Deadline { void <clinit>(); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void <init>(android.content.Context); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$3 { void <init>(int); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void setupAnimations(android.view.animation.Animation,android.view.animation.Animation); }
-keepclassmembers class java.lang.ArrayIndexOutOfBoundsException { void <init>(int,int); }
-keepclassmembers class java.io.PrintStream { void write(byte[],int,int); }
-keepclassmembers class java.io.PrintStream { void setError(); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.io.PrintStream { void println(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void processUntaggedResponses(java.util.List); }
-keepclassmembers class android.view.View$PerformClick { void <init>(android.view.View); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(); }
-keepclassmembers class java.security.Security$SecurityDoor { void <init>(); }
-keepclassmembers class java.security.Security$SecurityDoor { void renumProviders(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$1 { void <init>(org.openintents.openpgp.util.OpenPgpApi,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void handleSwitchCompleteCallback(); }
-keepclassmembers class java.security.Security$SecurityDoor { java.util.List getAliases(java.security.Provider$Service); }
-keepclassmembers class java.io.PrintStream { java.io.PrintStream append(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$1 { boolean handleMessage(android.os.Message); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { java.lang.Object getTargetByName(java.lang.String); }
-keepclassmembers class java.security.Security$SecurityDoor { void <init>(java.security.Security$1); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void setFirstOutAnimation(android.view.animation.Animation); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void reacquireWakeLockAndCleanUp(); }
-keepclassmembers class android.text.method.TextKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class java.io.PrintStream { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void setFirstInAnimation(android.view.animation.Animation); }
-keepclassmembers class android.text.method.TextKeyListener { boolean shouldCap(android.text.method.TextKeyListener$Capitalize,java.lang.CharSequence,int); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void setSecondOutAnimation(android.view.animation.Animation); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void setSecondInAnimation(android.view.animation.Animation); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void setOnSwitchCompleteListener(com.fsck.k9.view.ViewSwitcher$OnSwitchCompleteListener); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { boolean hasNext(); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void <init>(java.util.ServiceLoader,java.util.ServiceLoader); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void removeMessages(java.util.List); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.TextKeyListener getInstance(); }
-keepclassmembers class android.text.method.TextKeyListener { int getInputType(); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { java.lang.Object next(); }
-keepclassmembers class com.fsck.k9.view.ColorChip { void <clinit>(); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void showFirstView(); }
-keepclassmembers class com.fsck.k9.view.ViewSwitcher { void showSecondView(); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void readClass(); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$2 { void <init>(org.openintents.openpgp.util.OpenPgpApi,org.openintents.openpgp.util.OpenPgpApi$PermissionPingCallback); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAlpha(int); }
-keepclassmembers class com.fsck.k9.activity.ConfirmationDialog { android.app.Dialog create(android.app.Activity,int,int,java.lang.String,int,int,java.lang.Runnable); }
-keepclassmembers class android.text.method.TextKeyListener { boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class com.fsck.k9.activity.ConfirmationDialog { android.app.Dialog create(android.app.Activity,int,int,java.lang.String,int,int,java.lang.Runnable,java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getOpacity(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void returnFromIdle(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicWidth(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$2 { void onReturn(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean canApplyTheme(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void sendIdle(com.fsck.k9.mail.store.imap.ImapConnection); }
-keepclassmembers class java.util.ServiceLoader$ServiceIterator { void checkValidJavaClassName(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getIntrinsicHeight(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void setReadTimeoutForIdle(com.fsck.k9.mail.store.imap.ImapConnection); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler { void <init>(com.fsck.k9.provider.MessageProvider,com.fsck.k9.provider.MessageProvider$QueryHandler); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void syncFolderOnConnect(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void syncMessages(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { float getPixelSize(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler { java.lang.String getPath(); }
-keepclassmembers class android.text.method.TextKeyListener { android.text.method.KeyListener getKeyListener(android.view.KeyEvent); }
-keepclassmembers class android.text.method.TextKeyListener { void updatePrefs(android.content.ContentResolver); }
-keepclassmembers class com.fsck.k9.view.ColorChip { void <init>(int,boolean,android.graphics.Path); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler { android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$UnreadComparator { void <init>(); }
-keepclassmembers class android.os.SystemClock { void sleep(long); }
-keepclassmembers class android.text.method.TextKeyListener { void initPrefs(android.content.Context); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$UnreadComparator { int compare(android.database.Cursor,android.database.Cursor); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int applyAlpha(int,float); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$UnreadComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.os.SystemClock { long uptimeMillis(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void syncMessages(java.util.List); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.os.SystemClock { long elapsedRealtime(); }
-keepclassmembers class android.os.SystemClock { long elapsedRealtimeNanos(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$1 { void <init>(com.fsck.k9.controller.MessagingController); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$1 { void run(); }
-keepclassmembers class com.bumptech.glide.request.target.BitmapImageViewTarget { void <init>(android.widget.ImageView); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor { void <init>(android.database.Cursor,java.lang.String[],java.util.Map); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class com.bumptech.glide.request.target.BitmapImageViewTarget { void setResource(android.graphics.Bitmap); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.text.method.TextKeyListener { void <clinit>(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void handleAsyncUntaggedResponse(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class android.text.method.TextKeyListener { int getPrefs(android.content.Context); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.content.UriMatcher { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void <init>(int,int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$13 { void <init>(com.fsck.k9.mailstore.LocalStore,java.lang.String,java.lang.String[],com.fsck.k9.mailstore.LocalFolder,java.util.List,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class com.bumptech.glide.request.target.BitmapImageViewTarget { void setResource(java.lang.Object); }
-keepclassmembers class android.content.UriMatcher { void <init>(int); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int fixMethodFlags(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$13 { java.lang.Integer doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor { int getColumnCount(); }
-keepclassmembers class android.content.ContentProvider$1 { void <init>(android.content.ContentProvider,android.content.ContentProvider$PipeDataWriter,android.os.ParcelFileDescriptor[],android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getModifiers(); }
-keepclassmembers class android.content.UriMatcher { void addURI(java.lang.String,java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.james.mime4j.stream.Event { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Explicit { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.content.ContentProvider$1 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor { int getColumnIndex(java.lang.String); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getAccessFlags(); }
-keepclassmembers class org.apache.james.mime4j.stream.Event { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.Class getDeclaringClass(); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor { int getColumnIndexOrThrow(java.lang.String); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { int getDexMethodIndex(); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor { java.lang.String getColumnName(int); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub { com.android.internal.os.IResultReceiver asInterface(android.os.IBinder); }
-keepclassmembers class java.lang.reflect.AbstractMethod { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.graphics.drawable.ScaleDrawable,android.content.res.Resources); }
-keepclassmembers class java.util.concurrent.CountDownLatch$Sync { void <init>(int); }
-keepclassmembers class org.apache.james.mime4j.stream.Event { int hashCode(); }
-keepclassmembers class org.apache.james.mime4j.stream.Event { void <init>(java.lang.String); }
-keepclassmembers class android.content.UriMatcher { int match(android.net.Uri); }
-keepclassmembers class android.widget.NumberPicker$InputTextFilter { void <init>(android.widget.NumberPicker); }
-keepclassmembers class org.apache.james.mime4j.stream.Event { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor { int getInt(int); }
-keepclassmembers class java.util.concurrent.CountDownLatch$Sync { int tryAcquireShared(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$5 { void <init>(int); }
-keepclassmembers class android.widget.NumberPicker$InputTextFilter { int getInputType(); }
-keepclassmembers class java.util.concurrent.CountDownLatch$Sync { boolean tryReleaseShared(int); }
-keepclassmembers class android.widget.NumberPicker$InputTextFilter { char[] getAcceptedChars(); }
-keepclassmembers class android.widget.NumberPicker$InputTextFilter { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class java.lang.reflect.AbstractMethod { java.lang.reflect.AbstractMethod$GenericInfo getMethodOrConstructorGenericInfo(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$PushRunnable { void run(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor { long getLong(int); }
-keepclassmembers class android.content.UriMatcher { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { int getChangingConfigurations(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$SpecialColumnsCursor { java.lang.String getString(int); }
-keepclassmembers class javax.net.ssl.SSLHandshakeException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { boolean canConstantState(); }
-keepclassmembers class javax.net.ssl.SSLHandshakeException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.widget.AutoCompleteTextView$PopupDataSetObserver$1 { void <init>(android.widget.AutoCompleteTextView$PopupDataSetObserver); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$13 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class javax.net.ssl.SSLHandshakeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable$ScaleState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.GlideBitmapDrawableTranscoder { void <init>(android.content.res.Resources,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader { void <init>(com.bumptech.glide.load.model.ModelCache); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.GlideBitmapDrawableTranscoder { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.GlideBitmapDrawableTranscoder { java.lang.String getId(); }
-keepclassmembers class java.io.File { void <init>(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(com.bumptech.glide.load.model.GlideUrl,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void <init>(byte[]); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.GlideBitmapDrawableTranscoder { com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class java.io.File { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class com.android.okhttp.Request$ParsedHeaders { java.lang.String access$600(com.android.okhttp.Request$ParsedHeaders); }
-keepclassmembers class com.android.okhttp.Request$ParsedHeaders { void <init>(com.android.okhttp.Headers); }
-keepclassmembers class java.util.ResourceBundle { void <init>(); }
-keepclassmembers class com.android.okhttp.Request$ParsedHeaders { java.lang.String access$700(com.android.okhttp.Request$ParsedHeaders); }
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int); }
-keepclassmembers class java.io.File { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$2 { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { javax.security.auth.x500.X500Principal getIssuer(); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider$2 { void <init>(com.fsck.k9.provider.DecryptedFileProvider,android.content.Context); }
-keepclassmembers class java.lang.ClassLoader$SystemClassLoader { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.io.File { void <init>(java.net.URI); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider$2 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase$1 { void <init>(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.io.File { java.lang.String fixSlashes(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase$1 { android.database.sqlite.SQLiteSession initialValue(); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider$2 { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { android.graphics.drawable.GradientDrawable$Orientation[] values(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean needMirroring(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAllowCaching(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateIssuer { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void setAutoMirrored(boolean); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { void <init>(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase$1 { java.lang.Object initialValue(); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { void <init>(java.lang.String,com.bumptech.glide.load.model.Headers); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void <init>(com.fsck.k9.activity.FolderList$FolderListAdapter); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { boolean isAutoMirrored(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState,android.graphics.drawable.VectorDrawable$1); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { int access$800(int,float); }
-keepclassmembers class libcore.reflect.AnnotationMember$DefaultValues { void <clinit>(); }
-keepclassmembers class libcore.reflect.AnnotationMember$DefaultValues { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable { void <clinit>(); }
-keepclassmembers class java.io.File { java.lang.String join(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void refreshFolder(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$Orientation { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { void <init>(java.net.URL); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { java.net.URL getSafeUrl(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$1 { void <init>(); }
-keepclassmembers class java.util.ResourceBundle { java.util.MissingResourceException missingResourceException(java.lang.String,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder { void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder { void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifHeaderParserPool,com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifDecoderPool); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { void <init>(java.net.URL,com.bumptech.glide.load.model.Headers); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { java.lang.String getSafeStringUrl(); }
-keepclassmembers class java.io.File { void checkURI(java.net.URI); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder { com.bumptech.glide.load.resource.gif.GifDrawableResource decode(byte[],int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.gifdecoder.GifDecoder); }
-keepclassmembers class android.os.StrictMode$8 { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { java.lang.String getCacheKey(); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { java.lang.String toString(); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { java.util.Map getHeaders(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder { byte[] inputStreamToBytes(java.io.InputStream); }
-keepclassmembers class android.os.StrictMode$8 { android.os.StrictMode$ThreadSpanState initialValue(); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpecFactory { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { int hashCode(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { android.widget.EditText access$000(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class android.os.StrictMode$8 { java.lang.Object initialValue(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder { android.graphics.Bitmap decodeFirstFrame(com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.gifdecoder.GifHeader,byte[]); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { int access$100(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpecFactory { org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { void <init>(java.util.List,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void access$200(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { int access$400(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder { com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void accountSizeChanged(com.fsck.k9.Account,long,long); }
-keepclassmembers class com.bumptech.glide.load.model.GlideUrl { java.net.URL toURL(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { com.fsck.k9.mail.AuthType access$600(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void access$500(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { com.fsck.k9.view.ClientCertificateSpinner access$700(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder { com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.io.InputStream,int,int); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { int findNext(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void access$300(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void actionEditIncomingSettings(android.app.Activity,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void actionIncomingSettings(android.app.Activity,com.fsck.k9.Account,boolean); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { boolean filterHeader(int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder { java.lang.String getId(); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody { java.io.File getTempDirectory(); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody { java.io.File access$000(com.fsck.k9.mail.internet.BinaryTempFileBody); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody { void setTempDirectory(java.io.File); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { android.widget.EditText access$800(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet$1 { java.lang.Enum get(java.util.MapEntry); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet$1 { void <init>(java.util.EnumMap$EnumMapKeySet); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void accountStatusChanged(com.fsck.k9.BaseAccount,com.fsck.k9.AccountStats); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { org.apache.http.Header nextHeader(); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody { java.lang.String getEncoding(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void failure(java.lang.Exception); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { boolean hasNext(); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody { java.io.File getFile(); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody { java.io.InputStream getInputStream(); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet$1 { java.lang.Object get(java.util.MapEntry); }
-keepclassmembers class android.widget.AbsListView$3 { void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView$PerformClick); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody { void setEncoding(java.lang.String); }
-keepclassmembers class java.io.File { int compareTo(java.io.File); }
-keepclassmembers class org.apache.http.message.BasicListHeaderIterator { java.lang.Object next(); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody { java.io.OutputStream getOutputStream(); }
-keepclassmembers class java.io.File { boolean delete(); }
-keepclassmembers class android.widget.AbsListView$3 { void run(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { com.fsck.k9.mail.ConnectionSecurity getSelectedSecurity(); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody { long getSize(); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { long getLongParameter(java.lang.String,long); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { void <init>(); }
-keepclassmembers class java.io.File { boolean doAccess(int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$3 { void <init>(com.fsck.k9.ui.messageview.MessageContainerView,java.lang.String); }
-keepclassmembers class java.io.File { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void emptyTrashCompleted(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { com.fsck.k9.mail.AuthType getSelectedAuthType(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void initializeViewListeners(); }
-keepclassmembers class java.io.File { void deleteOnExit(); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { int getIntParameter(java.lang.String,int); }
-keepclassmembers class java.io.File { java.lang.String getAbsolutePath(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$3 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int); }
-keepclassmembers class java.io.File { java.io.File getAbsoluteFile(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void informUserOfStatus(); }
-keepclassmembers class java.io.File { boolean exists(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { android.content.Intent intentActionEditIncomingSettings(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void updateAuthPlainTextFromSecurityType(com.fsck.k9.mail.ConnectionSecurity); }
-keepclassmembers class java.io.File { java.lang.String canonicalizePath(java.lang.String); }
-keepclassmembers class java.util.Timer$TimerImpl$TimerHeap { void <init>(); }
-keepclassmembers class java.io.File { java.io.File getCanonicalFile(); }
-keepclassmembers class java.io.File { java.lang.String getCanonicalPath(); }
-keepclassmembers class java.io.File { java.lang.String getName(); }
-keepclassmembers class com.bumptech.glide.gifencoder.LZWEncoder { void <init>(int,int,byte[],int); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { boolean getBooleanParameter(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void listFolders(com.fsck.k9.Account,java.util.List); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { boolean isParameterTrue(java.lang.String); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { org.apache.http.params.HttpParams setBooleanParameter(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void updateViewFromAuthType(); }
-keepclassmembers class java.io.File { java.lang.String getParent(); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody { void writeTo(java.io.OutputStream); }
-keepclassmembers class java.util.Timer$TimerImpl$TimerHeap { void insert(java.util.TimerTask); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void <init>(java.net.HttpURLConnection); }
-keepclassmembers class org.apache.http.params.AbstractHttpParams { boolean isParameterFalse(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void updatePortFromSecurityType(); }
-keepclassmembers class java.util.Timer$TimerImpl$TimerHeap { void upHeap(); }
-keepclassmembers class com.bumptech.glide.gifencoder.LZWEncoder { int MAXCODE(int); }
-keepclassmembers class java.io.File { java.io.File getParentFile(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$WearableExtender { void <init>(); }
-keepclassmembers class com.bumptech.glide.gifencoder.LZWEncoder { int nextPixel(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void validateFields(); }
-keepclassmembers class java.io.File { java.lang.String getPath(); }
-keepclassmembers class android.os.Environment$UserEnvironment { void <init>(int); }
-keepclassmembers class com.bumptech.glide.gifencoder.LZWEncoder { void char_out(byte,java.io.OutputStream); }
-keepclassmembers class java.io.File { boolean isAbsolute(); }
-keepclassmembers class android.os.AsyncTask$WorkerRunnable { void <init>(); }
-keepclassmembers class android.os.AsyncTask$WorkerRunnable { void <init>(android.os.AsyncTask$1); }
-keepclassmembers class com.bumptech.glide.gifencoder.LZWEncoder { void cl_hash(int); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void disconnect(); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void connect(); }
-keepclassmembers class com.bumptech.glide.gifencoder.LZWEncoder { void cl_block(java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { void <init>(java.lang.String); }
-keepclassmembers class java.io.File { int hashCode(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.bumptech.glide.gifencoder.LZWEncoder { void compress(int,java.io.OutputStream); }
-keepclassmembers class java.io.File { boolean isDirectory(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { com.fsck.k9.mail.internet.MimeMultipart newInstance(); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { int getResponseCode(); }
-keepclassmembers class java.io.File { boolean isFile(); }
-keepclassmembers class org.xml.sax.SAXNotRecognizedException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { java.lang.String getMimeType(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { java.lang.String getBoundary(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { void setPreamble(byte[]); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { byte[] getPreamble(); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { java.lang.String getResponseMessage(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$WearableExtender { android.support.v4.app.NotificationCompat$WearableExtender addAction(android.support.v4.app.NotificationCompat$Action); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { void setEpilogue(byte[]); }
-keepclassmembers class java.io.File { long lastModified(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { byte[] getEpilogue(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { java.io.InputStream getInputStream(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { void setSubType(java.lang.String); }
-keepclassmembers class android.os.Environment$UserEnvironment { java.io.File[] buildExternalStoragePublicDirs(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMultipart { void writeTo(java.io.OutputStream); }
-keepclassmembers class java.util.Timer$TimerImpl$TimerHeap { void <init>(java.util.Timer$1); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { java.lang.String getContentType(); }
-keepclassmembers class java.io.File { boolean setLastModified(long); }
-keepclassmembers class java.io.File { boolean setLastModifiedImpl(java.lang.String,long); }
-keepclassmembers class android.os.Environment$UserEnvironment { java.io.File[] getExternalDirsForApp(); }
-keepclassmembers class com.fsck.k9.preferences.Settings$IntegerRangeSetting { void <init>(int,int,int); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { int getContentLength(); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { java.lang.String getContentEncoding(); }
-keepclassmembers class java.io.File { boolean setExecutable(boolean,boolean); }
-keepclassmembers class com.fsck.k9.preferences.Settings$IntegerRangeSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void addRequestProperty(java.lang.String,java.lang.String); }
-keepclassmembers class java.io.File { boolean setReadable(boolean,boolean); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void listFoldersFailed(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class java.io.File { boolean setWritable(boolean,boolean); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void listFoldersFinished(com.fsck.k9.Account); }
-keepclassmembers class com.bumptech.glide.gifencoder.LZWEncoder { void encode(java.io.OutputStream); }
-keepclassmembers class java.io.File { boolean doChmod(int,boolean); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { java.lang.String getHeaderField(java.lang.String); }
-keepclassmembers class android.app.Instrumentation { void checkStartActivityResult(int,java.lang.Object); }
-keepclassmembers class java.io.File { boolean setWritable(boolean); }
-keepclassmembers class com.bumptech.glide.gifencoder.LZWEncoder { void flush_char(java.io.OutputStream); }
-keepclassmembers class android.support.v4.app.NotificationCompat$WearableExtender { android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void listFoldersStarted(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$28$1 { void <init>(com.fsck.k9.controller.MessagingController$28,com.fsck.k9.Account,java.util.List); }
-keepclassmembers class com.bumptech.glide.gifencoder.LZWEncoder { void output(int,java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void sendPendingMessagesFailed(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void sendPendingMessagesCompleted(com.fsck.k9.Account); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { boolean getUseCaches(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void messageDeleted(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class java.io.File { long length(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$28$1 { void run(); }
-keepclassmembers class java.util.ResourceBundle { java.util.ResourceBundle handleGetBundle(boolean,java.lang.String,java.util.Locale,java.lang.ClassLoader); }
-keepclassmembers class java.io.File { java.lang.String[] listImpl(java.lang.String); }
-keepclassmembers class java.io.File { java.lang.String[] list(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void onClick(android.view.View); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void sendPendingMessagesStarted(com.fsck.k9.Account); }
-keepclassmembers class java.io.File { java.io.File[] listFiles(java.io.FileFilter); }
-keepclassmembers class java.io.File { java.io.File[] listFiles(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void onCreate(android.os.Bundle); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void setDoInput(boolean); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void setPushActive(com.fsck.k9.Account,java.lang.String,boolean); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void setUseCaches(boolean); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void setReadTimeout(int); }
-keepclassmembers class com.bumptech.glide.RequestManager { void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void setDoOutput(boolean); }
-keepclassmembers class android.content.ClipDescription$1 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.DelegatingHttpsURLConnection { void setConnectTimeout(int); }
-keepclassmembers class com.bumptech.glide.RequestManager { void <init>(android.content.Context,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class java.io.File { java.io.File[] filenamesToFiles(java.lang.String[]); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(int,int); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64OutputStream { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$1 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class java.io.File { void mkdirErrno(); }
-keepclassmembers class java.io.File { boolean mkdirs(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$1 { void synchronizeMailboxStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class java.io.File { boolean mkdir(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$HasStarExtractor { void <init>(); }
-keepclassmembers class java.io.File { boolean mkdirs(boolean); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$HasStarExtractor { java.lang.Boolean getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$1 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$HasStarExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class java.util.concurrent.TimeUnit$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.bumptech.glide.RequestManager { java.lang.Class access$000(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.RequestManager { com.bumptech.glide.manager.Lifecycle access$400(com.bumptech.glide.RequestManager); }
-keepclassmembers class com.bumptech.glide.RequestManager { android.content.Context access$100(com.bumptech.glide.RequestManager); }
-keepclassmembers class com.bumptech.glide.RequestManager { com.bumptech.glide.Glide access$200(com.bumptech.glide.RequestManager); }
-keepclassmembers class java.io.File { boolean createNewFile(); }
-keepclassmembers class com.bumptech.glide.RequestManager { com.bumptech.glide.RequestManager$OptionsApplier access$500(com.bumptech.glide.RequestManager); }
-keepclassmembers class com.bumptech.glide.RequestManager { com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Class); }
-keepclassmembers class com.bumptech.glide.RequestManager { com.bumptech.glide.manager.RequestTracker access$300(com.bumptech.glide.RequestManager); }
-keepclassmembers class com.bumptech.glide.RequestManager { java.lang.Class getSafeClass(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.RequestManager { com.bumptech.glide.RequestManager$DefaultOptions access$800(com.bumptech.glide.RequestManager); }
-keepclassmembers class com.bumptech.glide.load.resource.UnitTransformation { void <clinit>(); }
-keepclassmembers class android.util.EventLog { int writeEvent(int,java.lang.Object[]); }
-keepclassmembers class java.util.ResourceBundle { java.util.Hashtable getLoaderCache(java.lang.Object); }
-keepclassmembers class android.util.EventLog { int writeEvent(int,java.lang.String); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderParser { java.util.Map parse(java.lang.String); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.UnitTransformation { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.UnitTransformation { com.bumptech.glide.load.resource.UnitTransformation get(); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView); }
-keepclassmembers class com.bumptech.glide.load.resource.UnitTransformation { com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void setMargins(int,int,int,int); }
-keepclassmembers class java.io.File { java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.UnitTransformation { java.lang.String getId(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPushState { void <init>(long); }
-keepclassmembers class android.widget.AbsListView$2 { void <init>(android.widget.AbsListView,boolean); }
-keepclassmembers class java.util.ResourceBundle { java.util.Locale strip(java.util.Locale); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPushState { com.fsck.k9.mail.store.imap.ImapPushState createDefaultImapPushState(); }
-keepclassmembers class java.util.ResourceBundle { void setLocale(java.util.Locale); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPushState { com.fsck.k9.mail.store.imap.ImapPushState parse(java.lang.String); }
-keepclassmembers class com.android.okhttp.HttpHandler { void <init>(); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void setMarginStart(int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginEnd(); }
-keepclassmembers class com.android.okhttp.HttpHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void setMarginEnd(int); }
-keepclassmembers class java.util.ResourceBundle { void setParent(java.util.ResourceBundle); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapPushState { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getMarginStart(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { boolean isMarginRelative(); }
-keepclassmembers class java.io.File { boolean renameTo(java.io.File); }
-keepclassmembers class android.widget.TextView$ChangeWatcher { void <init>(android.widget.TextView,android.widget.TextView$1); }
-keepclassmembers class java.util.ResourceBundle { void <clinit>(); }
-keepclassmembers class com.android.okhttp.HttpHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class java.io.File { java.net.URI toURI(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void setLayoutDirection(int); }
-keepclassmembers class com.bumptech.glide.RequestManager { com.bumptech.glide.DrawableTypeRequest fromUri(); }
-keepclassmembers class com.android.okhttp.HttpHandler { com.android.okhttp.OkHttpClient createHttpOkHttpClient(java.net.Proxy); }
-keepclassmembers class java.io.File { java.lang.String toString(); }
-keepclassmembers class java.io.UnsupportedEncodingException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.Editor$SelectionActionModeCallback { void <init>(android.widget.Editor); }
-keepclassmembers class java.io.UnsupportedEncodingException { void <init>(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void doResolveMargins(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { int getLayoutDirection(); }
-keepclassmembers class com.android.okhttp.HttpHandler { com.android.okhttp.OkHttpClient newOkHttpClient(java.net.Proxy); }
-keepclassmembers class com.bumptech.glide.RequestManager { com.bumptech.glide.DrawableTypeRequest load(android.net.Uri); }
-keepclassmembers class java.lang.ref.Reference { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineKey { void <init>(java.lang.String,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.Encoder); }
-keepclassmembers class android.util.EventLog { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$KeySet$1 { void <init>(java.util.TreeMap$KeySet,java.util.TreeMap$Node); }
-keepclassmembers class java.io.File { java.lang.String getAbsoluteName(); }
-keepclassmembers class java.util.TreeMap$KeySet$1 { java.lang.Object next(); }
-keepclassmembers class java.io.File { java.net.URL toURL(); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object getReferent(); }
-keepclassmembers class android.view.animation.LinearInterpolator { void <init>(); }
-keepclassmembers class java.lang.ref.Reference { java.lang.Object get(); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { boolean isLayoutRtl(); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor$ViewableExtractedText { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.ref.Reference { void <init>(java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatementCache { void <init>(android.database.sqlite.SQLiteConnection,int); }
-keepclassmembers class com.bumptech.glide.RequestManager { void onDestroy(); }
-keepclassmembers class org.apache.james.mime4j.field.UnstructuredFieldImpl$1 { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatementCache { void entryRemoved(boolean,java.lang.String,android.database.sqlite.SQLiteConnection$PreparedStatement,android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.view.animation.LinearInterpolator { float getInterpolation(float); }
-keepclassmembers class com.bumptech.glide.RequestManager { void onLowMemory(); }
-keepclassmembers class com.bumptech.glide.RequestManager { void onStart(); }
-keepclassmembers class org.apache.james.mime4j.field.UnstructuredFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.view.animation.LinearInterpolator { long createNativeInterpolator(); }
-keepclassmembers class java.lang.ref.Reference { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.RequestManager { void onStop(); }
-keepclassmembers class org.apache.james.mime4j.field.UnstructuredFieldImpl$1 { org.apache.james.mime4j.dom.field.UnstructuredField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.bumptech.glide.RequestManager { void resumeRequests(); }
-keepclassmembers class com.bumptech.glide.RequestManager { void pauseRequests(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineKey { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.RequestManager { void onTrimMemory(int); }
-keepclassmembers class com.bumptech.glide.RequestManager { com.bumptech.glide.RequestManager$GenericModelRequest using(com.bumptech.glide.load.model.ModelLoader,java.lang.Class); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream { void write(byte[],int,int); }
-keepclassmembers class java.io.File { int compareTo(java.lang.Object); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream { void <init>(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo37 { void addAttachmentsContentDispositionColumn(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.io.File { void <clinit>(); }
-keepclassmembers class org.apache.http.util.EncodingUtils { byte[] getBytes(java.lang.String,java.lang.String); }
-keepclassmembers class java.nio.charset.CoderResult { void <init>(int,int); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$LanguageSetting { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.http.util.EncodingUtils { byte[] getAsciiBytes(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.nio.charset.CoderResult { java.nio.charset.CoderResult malformedForLength(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$LanguageSetting { java.util.Map getMapping(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$PreparedStatementCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup$MarginLayoutParams { void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$LanguageSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl$SSLOutputStream { void awaitPendingOps(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserConstants { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1SetOf { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { void <init>(android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState,android.graphics.drawable.AnimatedRotateDrawable,android.content.res.Resources); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isError(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void onNext(); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isMalformed(); }
-keepclassmembers class com.fsck.k9.helper.ParcelableUtil { byte[] marshall(android.os.Parcelable); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isUnderflow(); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isOverflow(); }
-keepclassmembers class java.nio.charset.CoderResult { boolean isUnmappable(); }
-keepclassmembers class com.fsck.k9.helper.ParcelableUtil { java.lang.Object unmarshall(byte[],android.os.Parcelable$Creator); }
-keepclassmembers class android.os.AsyncTask$Status { void <init>(java.lang.String,int); }
-keepclassmembers class java.nio.charset.CoderResult { int length(); }
-keepclassmembers class com.fsck.k9.helper.ParcelableUtil { android.os.Parcel unmarshall(byte[]); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,boolean,org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class android.os.AsyncTask$Status { void <clinit>(); }
-keepclassmembers class java.nio.charset.CoderResult { void throwException(); }
-keepclassmembers class java.nio.charset.CoderResult { java.lang.String toString(); }
-keepclassmembers class android.os.AsyncTask$Status { android.os.AsyncTask$Status[] values(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <init>(java.lang.String,android.net.Uri,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Time { void <init>(int); }
-keepclassmembers class android.widget.Editor$SelectionActionModeCallback { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { int getChangingConfigurations(); }
-keepclassmembers class android.provider.Settings$NameValueCache { android.content.IContentProvider lazyGetProvider(android.content.ContentResolver); }
-keepclassmembers class android.text.method.TimeKeyListener { void <init>(); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.text.method.TimeKeyListener { android.text.method.TimeKeyListener getInstance(); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { boolean canApplyTheme(); }
-keepclassmembers class java.io.ObjectStreamException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedRotateDrawable$AnimatedRotateState { boolean canConstantState(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,byte[]); }
-keepclassmembers class android.text.method.TimeKeyListener { int getInputType(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Time { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.method.TimeKeyListener { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineKey { com.bumptech.glide.load.Key getOriginalKey(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class java.nio.charset.CoderResult { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming { void onPostCreate(android.os.Bundle); }
-keepclassmembers class android.app.Dialog$ListenersHandler { void <init>(android.app.Dialog); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineKey { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void <init>(java.lang.String,byte[],int); }
-keepclassmembers class android.app.Dialog$ListenersHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.text.method.TimeKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class com.bumptech.glide.load.model.UriLoader { boolean isLocalUri(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { boolean isPrintableString(java.lang.String); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShotStateStore { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.model.UriLoader { void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$MDrawableImpl { void <init>(); }
-keepclassmembers class android.provider.Settings$NameValueCache { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String getHexString(); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <init>(java.lang.String,int); }
-keepclassmembers class java.io.FilterReader { void <init>(java.io.Reader); }
-keepclassmembers class android.text.TextUtils$TruncateAt { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { int getTag(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShotStateStore { boolean hasShot(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShotStateStore { boolean isSingleShot(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineKey { java.lang.String toString(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class com.bumptech.glide.load.model.UriLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(android.net.Uri,int,int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShotStateStore { void storeShot(); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config parse(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.preferences.Settings$V { void <init>(java.lang.Integer,com.fsck.k9.preferences.Settings$SettingsDescription); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.mail.store.RemoteStore { void <clinit>(); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Config readFamilies(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.fsck.k9.mail.store.RemoteStore { void <init>(com.fsck.k9.mail.store.StoreConfig,com.fsck.k9.mail.ssl.TrustedSocketFactory); }
-keepclassmembers class com.fsck.k9.mail.store.RemoteStore { com.fsck.k9.mail.ServerSettings decodeStoreUri(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.model.UriLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int); }
-keepclassmembers class com.fsck.k9.mail.store.RemoteStore { java.lang.String createStoreUri(com.fsck.k9.mail.ServerSettings); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Family readFamily(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { void appendQEString(java.lang.StringBuilder); }
-keepclassmembers class com.fsck.k9.mail.store.RemoteStore { com.fsck.k9.mail.Store getInstance(android.content.Context,com.fsck.k9.mail.store.StoreConfig); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.util.Collection getValues(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { int[] getInputDeviceIds(); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { void <init>(java.lang.String,org.apache.http.conn.scheme.SocketFactory,int); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { int getDefaultPort(); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { java.lang.String getName(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineKey { void updateDiskCacheKey(java.security.MessageDigest); }
-keepclassmembers class android.graphics.FontListParser { android.graphics.FontListParser$Alias readAlias(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { int resolvePort(int); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { org.apache.http.conn.scheme.SocketFactory getSocketFactory(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String makeEscaped(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$12 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { int hashCode(); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { java.lang.String toString(); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { boolean isLayered(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$12 { void messageUidChanged(com.fsck.k9.Account,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf$SectionHeader { void <init>(); }
-keepclassmembers class android.graphics.FontListParser { void skip(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class org.apache.http.conn.scheme.Scheme { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget { int access$100(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget); }
-keepclassmembers class com.fsck.k9.mail.store.RemoteStore { void removeInstance(com.fsck.k9.mail.store.StoreConfig); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget { android.graphics.Bitmap getResource(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$1 { java.io.InputStream loadMetadata(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget { void <init>(android.os.Handler,int,long); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$5 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class android.provider.Settings$NameValueCache { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.request.animation.NoAnimation { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.request.animation.NoAnimation { void <init>(); }
-keepclassmembers class com.bumptech.glide.request.animation.NoAnimation { com.bumptech.glide.request.animation.NoAnimation access$000(); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { void <init>(android.text.method.MultiTapKeyListener,android.text.Editable); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String makeCanonical(); }
-keepclassmembers class com.bumptech.glide.request.animation.NoAnimation { com.bumptech.glide.request.animation.GlideAnimation get(); }
-keepclassmembers class com.bumptech.glide.request.animation.NoAnimation { boolean animate(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation$ViewAdapter); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget { void onResourceReady(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget { void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.animation.GlideAnimation); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { void run(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$5 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void <init>(android.graphics.drawable.StateListDrawable$StateListState,android.graphics.drawable.StateListDrawable,android.content.res.Resources); }
-keepclassmembers class com.bumptech.glide.request.animation.NoAnimation { com.bumptech.glide.request.animation.GlideAnimationFactory getFactory(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$3 { void <init>(com.fsck.k9.activity.FolderList,android.view.MenuItem); }
-keepclassmembers class android.text.method.MultiTapKeyListener$Timeout { android.text.Editable access$002(android.text.method.MultiTapKeyListener$Timeout,android.text.Editable); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$2 { void <init>(com.fsck.k9.ui.messageview.MessageContainerView,boolean,com.fsck.k9.mailstore.AttachmentViewInfo,android.net.Uri); }
-keepclassmembers class com.fsck.k9.activity.FolderList$3 { boolean onQueryTextSubmit(java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { void checkClosed(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeValue { java.lang.String getRFC2253String(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { void <init>(android.database.CrossProcessCursor,java.util.concurrent.Semaphore); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { void close(); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$2 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class android.app.SearchDialog$3 { void <init>(android.app.SearchDialog); }
-keepclassmembers class com.fsck.k9.activity.FolderList$3 { boolean onQueryTextChange(java.lang.String); }
-keepclassmembers class java.util.StringTokenizer { int countTokens(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { int getColumnCount(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void mutate(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { int getColumnIndexOrThrow(java.lang.String); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int indexOfStateSet(int[]); }
-keepclassmembers class java.util.StringTokenizer { void <init>(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { int getColumnIndex(java.lang.String); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { int addStateSet(int[],android.graphics.drawable.Drawable); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class java.util.StringTokenizer { boolean hasMoreTokens(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { void <init>(libcore.util.ZoneInfoDB$TzData,int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { int getCount(); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { void <init>(android.content.Context,int); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { void <clinit>(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData$1 { libcore.util.ZoneInfo create(java.lang.String); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { int getInt(int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { long getLong(int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$7 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.StringTokenizer { java.lang.String nextToken(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$7 { com.fsck.k9.mail.filter.SignSafeOutputStream$State nextState(int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { java.lang.String getString(int); }
-keepclassmembers class android.os.ResultReceiver { void <init>(android.os.Handler); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { android.content.ContentResolver access$100(com.fsck.k9.activity.misc.ContactPictureLoader); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { boolean canApplyTheme(); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { int access$200(com.fsck.k9.activity.misc.ContactPictureLoader); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { int getPosition(); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void growArray(int,int); }
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher { void <init>(android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpInlineDialog { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher { void close(android.os.ParcelFileDescriptor); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { android.graphics.Bitmap access$300(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address); }
-keepclassmembers class android.graphics.drawable.StateListDrawable$StateListState { void access$000(android.graphics.drawable.StateListDrawable$StateListState); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { com.fsck.k9.helper.Contacts access$000(com.fsck.k9.activity.misc.ContactPictureLoader); }
-keepclassmembers class android.util.Log$TerribleFailure { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { void access$400(com.fsck.k9.activity.misc.ContactPictureLoader,com.fsck.k9.mail.Address,android.graphics.Bitmap); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { boolean isAfterLast(); }
-keepclassmembers class com.fsck.k9.preferences.Settings$EnumSetting { void <init>(java.lang.Class,java.lang.Object); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { boolean isBeforeFirst(); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpInlineDialog { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher { void close(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpInlineDialog { com.fsck.k9.activity.compose.PgpInlineDialog newInstance(boolean,int); }
-keepclassmembers class com.fsck.k9.preferences.Settings$EnumSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher { android.os.ParcelFileDescriptor loadResource(android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class android.content.AsyncTaskLoader { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask access$500(com.fsck.k9.activity.misc.ContactPictureLoader,android.widget.ImageView); }
-keepclassmembers class android.os.ResultReceiver { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.content.AsyncTaskLoader { void <init>(android.content.Context,java.util.concurrent.Executor); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { void <init>(android.content.Context); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { void <init>(android.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { boolean isLast(); }
-keepclassmembers class android.os.ResultReceiver { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { void addBitmapToCache(com.fsck.k9.mail.Address,android.graphics.Bitmap); }
-keepclassmembers class android.hardware.input.IInputManager$Stub$Proxy { void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener); }
-keepclassmembers class android.content.AsyncTaskLoader { void onForceLoad(); }
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher { java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.ServerSessionContext { void <init>(); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager,android.hardware.input.InputManager$1); }
-keepclassmembers class android.hardware.input.InputManager$InputDevicesChangedListener { void <init>(android.hardware.input.InputManager); }
-keepclassmembers class android.os.ResultReceiver { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CounterCell { void <init>(long); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { boolean moveToFirst(); }
-keepclassmembers class android.content.AsyncTaskLoader { boolean onCancelLoad(); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { int calcUnknownContactColor(com.fsck.k9.mail.Address); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar { android.view.Window$Callback getWrappedWindowCallback(); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { com.fsck.k9.mailstore.StorageManager getInstance(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$4 { void <init>(com.fsck.k9.activity.Accounts$AccountsHandler,com.fsck.k9.Account,long,long); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { android.graphics.Bitmap calculateFallbackBitmap(com.fsck.k9.mail.Address); }
-keepclassmembers class com.fsck.k9.preferences.CheckBoxListPreference { boolean[] access$000(com.fsck.k9.preferences.CheckBoxListPreference); }
-keepclassmembers class android.util.ArraySet { int indexOf(java.lang.Object,int); }
-keepclassmembers class android.content.AsyncTaskLoader { void executePendingTask(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { boolean moveToNext(); }
-keepclassmembers class android.content.AsyncTaskLoader { void onCanceled(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { java.lang.String calcUnknownContactLetter(com.fsck.k9.mail.Address); }
-keepclassmembers class com.android.org.conscrypt.ServerSessionContext { void sessionRemoved(javax.net.ssl.SSLSession); }
-keepclassmembers class com.fsck.k9.preferences.CheckBoxListPreference { void onDialogClosed(boolean); }
-keepclassmembers class com.fsck.k9.preferences.CheckBoxListPreference { void onPrepareDialogBuilder(android.app.AlertDialog$Builder); }
-keepclassmembers class com.android.org.conscrypt.ServerSessionContext { void putSession(javax.net.ssl.SSLSession); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { void addListener(com.fsck.k9.mailstore.StorageManager$StorageListener); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { boolean moveToPosition(int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { void registerContentObserver(android.database.ContentObserver); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$4 { void run(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { boolean moveToPrevious(); }
-keepclassmembers class android.util.ArraySet { int indexOfNull(); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { java.util.Map getAvailableProviders(); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { boolean cancelPotentialWork(com.fsck.k9.mail.Address,android.widget.ImageView); }
-keepclassmembers class android.os.Trace { long nativeGetEnabledTags(); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { java.io.File getAttachmentDirectory(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Trace { void nativeTraceEnd(long); }
-keepclassmembers class android.os.Trace { void nativeTraceBegin(long,java.lang.String); }
-keepclassmembers class android.content.AsyncTaskLoader { void dispatchOnLoadComplete(android.content.AsyncTaskLoader$LoadTask,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo31 { void changeMsgFolderIdDeletedDateIndex(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.content.AsyncTaskLoader { void dispatchOnCancelled(android.content.AsyncTaskLoader$LoadTask,java.lang.Object); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { void <init>(); }
-keepclassmembers class android.os.Trace { long cacheEnabledTags(); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { android.graphics.Bitmap getBitmapFromCache(com.fsck.k9.mail.Address); }
-keepclassmembers class android.os.Trace { boolean isTagEnabled(long); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class android.hardware.display.IDisplayManagerCallback$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask getContactPictureRetrievalTask(android.widget.ImageView); }
-keepclassmembers class android.util.ArraySet { void allocArrays(int); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { com.fsck.k9.mailstore.StorageManager$StorageProvider getProvider(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { java.lang.String getDefaultProviderId(); }
-keepclassmembers class android.content.AsyncTaskLoader { java.lang.Object onLoadInBackground(); }
-keepclassmembers class android.content.AsyncTaskLoader { void cancelLoadInBackground(); }
-keepclassmembers class android.os.Trace { void nativeAsyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { java.io.File getDatabase(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.AsyncTaskLoader { boolean isLoadInBackgroundCanceled(); }
-keepclassmembers class android.os.Trace { void traceEnd(long); }
-keepclassmembers class android.content.AsyncTaskLoader { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MonitoredCursor { void unregisterContentObserver(android.database.ContentObserver); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader { void loadContactPicture(com.fsck.k9.mail.Address,android.widget.ImageView); }
-keepclassmembers class android.os.Trace { void asyncTraceBegin(long,java.lang.String,int); }
-keepclassmembers class android.os.Trace { long access$000(); }
-keepclassmembers class com.android.okhttp.ConnectionPool$1 { void <init>(com.android.okhttp.ConnectionPool); }
-keepclassmembers class android.os.Trace { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$31 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.android.okhttp.ConnectionPool$1 { void run(); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByPositiveInt(java.math.BigInteger,int); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByTenPow(java.math.BigInteger,long); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$31 { void act(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,java.util.List); }
-keepclassmembers class android.os.Trace { void asyncTraceEnd(long,java.lang.String,int); }
-keepclassmembers class android.util.ArraySet { void freeArrays(int[],java.lang.Object[],int); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { void onAfterUnmount(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { void lockProvider(java.lang.String); }
-keepclassmembers class java.nio.CharArrayBuffer { void <init>(int,char[],int,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { void onBeforeUnmount(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { boolean isReady(java.lang.String); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger powerOf10(long); }
-keepclassmembers class com.fsck.k9.notification.LockScreenNotification { android.support.v4.app.NotificationCompat$Builder createPublicNotification(com.fsck.k9.notification.NotificationData); }
-keepclassmembers class android.util.ArraySet { void <init>(); }
-keepclassmembers class android.os.Trace { void traceBegin(long,java.lang.String); }
-keepclassmembers class java.nio.CharArrayBuffer { void <init>(char[]); }
-keepclassmembers class com.fsck.k9.R$styleable { void <clinit>(); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharBuffer asReadOnlyBuffer(); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharArrayBuffer copy(java.nio.CharArrayBuffer,int,boolean); }
-keepclassmembers class android.util.ArraySet { void <init>(android.util.ArraySet); }
-keepclassmembers class com.fsck.k9.notification.LockScreenNotification { void <init>(com.fsck.k9.notification.NotificationController); }
-keepclassmembers class android.view.View$9 { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { void onMount(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$11 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$11 { void <init>(com.fsck.k9.mailstore.LocalStore,com.fsck.k9.mailstore.LocalStore$PendingCommand); }
-keepclassmembers class android.util.ArraySet { void ensureCapacity(int); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { void removeListener(com.fsck.k9.mailstore.StorageManager$StorageListener); }
-keepclassmembers class com.fsck.k9.notification.LockScreenNotification { android.app.Notification createPublicNotificationWithNewMessagesCount(com.fsck.k9.notification.NotificationData); }
-keepclassmembers class com.fsck.k9.notification.LockScreenNotification { android.app.Notification createPublicNotificationWithSenderList(com.fsck.k9.notification.NotificationData); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView$3 { void <init>(com.fsck.k9.ui.messageview.MessageTopView); }
-keepclassmembers class java.math.Multiplication { java.math.BigInteger multiplyByFivePow(java.math.BigInteger,int); }
-keepclassmembers class java.nio.CharArrayBuffer { char[] protectedArray(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$11 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.nio.CharArrayBuffer { boolean isReadOnly(); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { com.fsck.k9.mailstore.StorageManager$StorageProvider resolveProvider(java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.LockScreenNotification { com.fsck.k9.notification.LockScreenNotification newInstance(com.fsck.k9.notification.NotificationController); }
-keepclassmembers class java.nio.CharArrayBuffer { char get(); }
-keepclassmembers class com.fsck.k9.notification.LockScreenNotification { void configureLockScreenNotification(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.notification.NotificationData); }
-keepclassmembers class com.fsck.k9.helper.ExceptionHelper { java.lang.String getRootCauseMessage(java.lang.Throwable); }
-keepclassmembers class java.math.Multiplication { void <clinit>(); }
-keepclassmembers class java.util.IllegalFormatConversionException { void <init>(char,java.lang.Class); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView$3 { void onClick(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.http.HttpDate$1 { void <init>(); }
-keepclassmembers class java.nio.CharArrayBuffer { char get(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpDate$1 { java.text.DateFormat initialValue(); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharBuffer get(char[],int,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpDate$1 { java.lang.Object initialValue(); }
-keepclassmembers class java.util.IllegalFormatConversionException { java.lang.String getMessage(); }
-keepclassmembers class android.util.ArraySet { java.lang.Object valueAt(int); }
-keepclassmembers class com.fsck.k9.notification.LockScreenNotification { java.lang.String createCommaSeparatedListOfSenders(java.util.List); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager { void unlockProvider(java.lang.String); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { void <init>(java.lang.String,int); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onWriteToDisk(); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { long toNanos(long); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <init>(int,java.lang.Object[],org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.pkcs7.AuthenticatedAttributes,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],java.util.List); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onReadFromDisk(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$1 { int getPolicyMask(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifDecoderPool { com.bumptech.glide.gifdecoder.GifDecoder obtain(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider); }
-keepclassmembers class dalvik.system.BlockGuard$1 { void onNetwork(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifDecoderPool { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieAttributeHandler { void <init>(); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { long toMillis(long); }
-keepclassmembers class android.util.ArraySet { boolean add(java.lang.Object); }
-keepclassmembers class org.apache.http.MalformedChunkCodingException { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.http.MalformedChunkCodingException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.TimeUnit$1 { long convert(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharBuffer put(char[],int,int); }
-keepclassmembers class java.text.Format { void <init>(); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner { void access$000(com.fsck.k9.view.ClientCertificateSpinner); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.security.spec.X509EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner { void onDelete(); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner { void access$100(com.fsck.k9.view.ClientCertificateSpinner); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner { void updateView(); }
-keepclassmembers class java.text.Format { java.lang.String format(java.lang.Object); }
-keepclassmembers class java.nio.CharArrayBuffer { java.nio.CharBuffer put(char); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter { void <init>(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void <init>(com.android.okhttp.internal.http.HttpEngine,com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceDecoder$GifDecoderPool { void release(com.bumptech.glide.gifdecoder.GifDecoder); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner { void chooseCertificate(); }
-keepclassmembers class java.nio.CharArrayBuffer { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { javax.security.auth.x500.X500Principal getIssuer(); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner { java.lang.String getAlias(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestAlgorithm(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { com.android.okio.Sink createRequestBody(com.android.okhttp.Request); }
-keepclassmembers class com.android.okhttp.Response$ParsedHeaders { void <init>(com.android.okhttp.Headers); }
-keepclassmembers class android.util.ArraySet { void addAll(android.util.ArraySet); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter { com.fsck.k9.activity.ActivityListener access$400(com.fsck.k9.activity.FolderList$FolderListAdapter); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter { java.util.List access$700(com.fsck.k9.activity.FolderList$FolderListAdapter); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner { void setAlias(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter { java.util.List access$702(com.fsck.k9.activity.FolderList$FolderListAdapter,java.util.List); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestAlgorithmName(); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner { void setOnClientCertificateChangedListener(com.fsck.k9.view.ClientCertificateSpinner$OnClientCertificateChangedListener); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool { void <init>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestEncryptionAlgorithm(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String getDigestEncryptionAlgorithmName(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter { java.util.List access$802(com.fsck.k9.activity.FolderList$FolderListAdapter,java.util.List); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] getEncodedAuthenticatedAttributes(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.util.List getAuthenticatedAttributes(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool { com.bumptech.glide.load.engine.bitmap_recycle.Poolable create(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool { com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key create(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] getEncryptedDigest(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void flushRequest(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool { com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key get(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void writeRequestHeaders(com.android.okhttp.Request); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.lang.String toString(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { com.android.okhttp.Response$Builder readResponseHeaders(); }
-keepclassmembers class libcore.io.Memory { int peekInt(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void writeRequestBody(com.android.okhttp.internal.http.RetryableSink); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void releaseConnectionOnIdle(); }
-keepclassmembers class com.android.okhttp.Response$ParsedHeaders { void <init>(com.android.okhttp.Headers,com.android.okhttp.Response$1); }
-keepclassmembers class java.util.AbstractList$SubAbstractListRandomAccess { void <init>(java.util.AbstractList,int,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { int access$000(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { boolean canReuseConnection(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$500(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class libcore.io.Memory { long peekLong(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { javax.security.auth.x500.X500Principal access$100(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { com.android.okio.Source getTransferStream(java.net.CacheRequest); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { byte[] access$600(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void emptyTransferStream(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.math.BigInteger access$200(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.x509.AlgorithmIdentifier access$300(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { java.util.List access$700(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class android.util.ArraySet { int size(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <init>(int,java.lang.Object[],org.apache.harmony.security.x509.AlgorithmIdentifier,org.apache.harmony.security.pkcs7.AuthenticatedAttributes,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],java.util.List,org.apache.harmony.security.pkcs7.SignerInfo$1); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$3 { void <init>(com.fsck.k9.ui.messageview.AttachmentController,java.lang.Runnable); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { org.apache.harmony.security.pkcs7.AuthenticatedAttributes access$400(org.apache.harmony.security.pkcs7.SignerInfo); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$3 { void loadAttachmentFinished(com.fsck.k9.Account,com.fsck.k9.mail.Message,com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter { java.lang.Object getItem(int); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter { com.fsck.k9.activity.FolderInfoHolder getFolder(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$3 { void loadAttachmentFailed(com.fsck.k9.Account,com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpTransport { void disconnect(com.android.okhttp.internal.http.HttpEngine); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter { int getFolderIndex(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void <init>(com.android.okio.BufferedSource,int,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readConnectionHeader(); }
-keepclassmembers class com.android.okhttp.ConfigAwareConnectionPool$1 { void <init>(com.android.okhttp.ConfigAwareConnectionPool); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil$Encoding { void <init>(java.lang.String,int); }
-keepclassmembers class org.htmlcleaner.OptionalOutput { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil$Encoding { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { boolean nextFrame(com.android.okhttp.internal.spdy.FrameReader$Handler); }
-keepclassmembers class libcore.io.Memory { short peekShort(byte[],int,java.nio.ByteOrder); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$8 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.controller.MessagingListener,com.fsck.k9.Account,java.lang.String,java.util.List); }
-keepclassmembers class com.android.okhttp.Address { void <init>(java.lang.String,int,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,com.android.okhttp.OkAuthenticator,java.net.Proxy,java.util.List); }
-keepclassmembers class libcore.io.Memory { void pokeLong(byte[],int,long,java.nio.ByteOrder); }
-keepclassmembers class libcore.io.Memory { void pokeInt(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$8 { void run(); }
-keepclassmembers class com.android.okhttp.Address { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readHeaders(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class org.htmlcleaner.OptionalOutput { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.Address { javax.net.ssl.SSLSocketFactory getSslSocketFactory(); }
-keepclassmembers class android.security.KeyChainException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.AccountStats { void <init>(); }
-keepclassmembers class com.android.okhttp.Address { java.net.Proxy getProxy(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$AttachErrorState { void <clinit>(); }
-keepclassmembers class com.android.okhttp.Address { java.lang.String getUriHost(); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases$UpgradeDatabaseBroadcastReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$AttachErrorState { com.fsck.k9.activity.compose.ComposeCryptoStatus$AttachErrorState[] values(); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableColorFilterAction { void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.android.okhttp.Address { int hashCode(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void <init>(com.fsck.k9.controller.MessagingController,android.app.DownloadManager,com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.AttachmentViewInfo); }
-keepclassmembers class android.security.KeyChainException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases$UpgradeDatabaseBroadcastReceiver { void <init>(com.fsck.k9.activity.UpgradeDatabases); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$AttachErrorState { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { java.util.List readHeaderBlock(short,byte,int); }
-keepclassmembers class libcore.io.Memory { void pokeShort(byte[],int,short,java.nio.ByteOrder); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { com.fsck.k9.mailstore.AttachmentViewInfo access$100(com.fsck.k9.ui.messageview.AttachmentController); }
-keepclassmembers class com.android.okhttp.internal.http.StatusLine { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void access$1000(com.fsck.k9.ui.messageview.AttachmentController); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$13 { void run(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readData(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void access$300(com.fsck.k9.ui.messageview.AttachmentController,java.io.File); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void access$000(com.fsck.k9.ui.messageview.AttachmentController); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$13 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { android.content.Context access$700(com.fsck.k9.ui.messageview.AttachmentController); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableColorFilterAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { com.fsck.k9.ui.messageview.MessageViewFragment access$200(com.fsck.k9.ui.messageview.AttachmentController); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void <init>(); }
-keepclassmembers class libcore.io.Memory { byte peekByte(long); }
-keepclassmembers class libcore.io.Memory { void memmove(java.lang.Object,int,java.lang.Object,int,long); }
-keepclassmembers class libcore.io.Memory { int peekInt(long,boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void access$800(com.fsck.k9.ui.messageview.AttachmentController,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { java.io.File access$900(com.fsck.k9.ui.messageview.AttachmentController,java.io.File); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { android.content.Intent access$600(com.fsck.k9.ui.messageview.AttachmentController); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void addSavedAttachmentToDownloadsDatabase(java.io.File); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readPriority(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableColorFilterAction { android.graphics.PorterDuff$Mode readPorterDuffMode(android.os.Parcel); }
-keepclassmembers class libcore.io.Memory { int peekIntNative(long); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { android.content.Intent createViewIntentForAttachmentProviderUri(android.net.Uri,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void updateSeed(byte[]); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void engineSetSeed(byte[]); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { android.content.Intent createViewIntentForFileUri(java.lang.String,android.net.Uri); }
-keepclassmembers class libcore.io.Memory { void peekByteArray(long,byte[],int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void addUiIntentFlags(android.content.Intent); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readRstStream(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class android.widget.RemoteViews$TextViewDrawableColorFilterAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void displayMessageToUser(java.lang.String); }
-keepclassmembers class libcore.io.Memory { void peekIntArray(long,int[],int,int,boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void displayAttachmentNotSavedMessage(); }
-keepclassmembers class android.graphics.Paint$FontMetricsInt { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void downloadAndSaveAttachmentTo(com.fsck.k9.mailstore.LocalPart,java.io.File); }
-keepclassmembers class com.android.okhttp.internal.http.StatusLine { java.lang.String getStatusLine(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void downloadAttachment(com.fsck.k9.mailstore.LocalPart,java.lang.Runnable); }
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTargetFactory { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void downloadAndViewAttachment(com.fsck.k9.mailstore.LocalPart); }
-keepclassmembers class com.android.okhttp.internal.http.StatusLine { int code(); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void engineNextBytes(byte[]); }
-keepclassmembers class com.android.okhttp.internal.http.StatusLine { java.lang.String message(); }
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTargetFactory { com.bumptech.glide.request.target.Target buildTarget(android.widget.ImageView,java.lang.Class); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readSettings(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class com.android.okhttp.internal.http.StatusLine { int httpMinorVersion(); }
-keepclassmembers class com.android.okhttp.CacheControl { void <init>(boolean,boolean,int,int,boolean,boolean,int,int,boolean); }
-keepclassmembers class org.apache.http.protocol.RequestTargetHost { void <init>(); }
-keepclassmembers class com.android.okhttp.CacheControl { boolean noStore(); }
-keepclassmembers class com.android.okhttp.CacheControl { int maxAgeSeconds(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readPushPromise(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class com.android.okhttp.CacheControl { int sMaxAgeSeconds(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readPing(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class org.apache.http.protocol.RequestTargetHost { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.android.okhttp.CacheControl { boolean noCache(); }
-keepclassmembers class com.android.okhttp.CacheControl { boolean mustRevalidate(); }
-keepclassmembers class com.android.okhttp.CacheControl { int maxStaleSeconds(); }
-keepclassmembers class com.android.okhttp.CacheControl { boolean isPublic(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { android.content.Intent getBestViewIntentAndSaveFile(); }
-keepclassmembers class com.android.okhttp.CacheControl { int minFreshSeconds(); }
-keepclassmembers class com.android.okhttp.CacheControl { boolean onlyIfCached(); }
-keepclassmembers class com.android.okhttp.CacheControl { com.android.okhttp.CacheControl parse(com.android.okhttp.Headers); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { com.fsck.k9.ui.messageview.AttachmentController$IntentAndResolvedActivitiesCount getBestViewIntentForMimeType(android.net.Uri,java.lang.String); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { void <init>(); }
-keepclassmembers class android.os.Build { java.lang.String deriveFingerprint(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { java.util.GregorianCalendar createGregorianCalendar(); }
-keepclassmembers class org.htmlcleaner.TagToken { void <init>(); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void run(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { void localtime(int,libcore.util.ZoneInfo); }
-keepclassmembers class org.htmlcleaner.TagToken { java.lang.String getName(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readGoAway(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { int getResolvedIntentActivitiesCount(android.content.Intent); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void saveAttachmentTo(java.io.File); }
-keepclassmembers class org.htmlcleaner.TagToken { void <init>(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceEncoder { void <init>(com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.ResourceEncoder); }
-keepclassmembers class com.fsck.k9.notification.BaseNotifications { void <init>(com.fsck.k9.notification.NotificationController,com.fsck.k9.notification.NotificationActionCreator); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void readWindowUpdate(com.android.okhttp.internal.spdy.FrameReader$Handler,short,byte,int); }
-keepclassmembers class android.widget.AbsListView$PerformClick { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { java.io.File saveAttachmentWithUniqueFileName(java.io.File); }
-keepclassmembers class org.htmlcleaner.TagToken { java.lang.String toString(); }
-keepclassmembers class android.os.Build { java.lang.String[] getStringList(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void saveLocalAttachmentTo(java.io.File); }
-keepclassmembers class com.fsck.k9.notification.BaseNotifications { int getNewMailNotificationIcon(); }
-keepclassmembers class android.os.Build { java.lang.String getString(java.lang.String); }
-keepclassmembers class android.os.Build { long getLong(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceEncoder { boolean encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void viewLocalAttachment(); }
-keepclassmembers class android.os.Build { java.lang.String[] access$100(java.lang.String,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceEncoder { boolean encode(java.lang.Object,java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.notification.BaseNotifications { android.support.v4.app.NotificationCompat$BigTextStyle createBigTextStyle(android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$2 { android.content.Loader onCreateLoader(int,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$2 { void <init>(com.fsck.k9.activity.compose.AttachmentPresenter); }
-keepclassmembers class android.os.Build { java.lang.String access$000(java.lang.String); }
-keepclassmembers class android.os.MessageQueue { long nativeInit(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void writeAttachmentToStorage(java.io.File); }
-keepclassmembers class android.os.MessageQueue { void nativeDestroy(long); }
-keepclassmembers class android.os.MessageQueue { void nativePollOnce(long,int); }
-keepclassmembers class com.fsck.k9.notification.BaseNotifications { android.support.v4.app.NotificationCompat$Builder createAndInitializeNotificationBuilder(com.fsck.k9.Account); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceEncoder { java.lang.String getId(); }
-keepclassmembers class android.os.MessageQueue { boolean nativeIsIdling(long); }
-keepclassmembers class android.os.Build { void <clinit>(); }
-keepclassmembers class android.os.MessageQueue { void addIdleHandler(android.os.MessageQueue$IdleHandler); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Reader { void close(); }
-keepclassmembers class com.fsck.k9.notification.BaseNotifications { android.support.v4.app.NotificationCompat$Builder createBigTextStyleNotification(com.fsck.k9.Account,com.fsck.k9.notification.NotificationHolder,int); }
-keepclassmembers class android.os.MessageQueue { void nativeWake(long); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void viewAttachment(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void saveAttachment(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$7 { void <init>(com.fsck.k9.activity.FolderList$FolderListHandler); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$2 { void onLoadFinished(android.content.Loader,com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void <init>(byte[]); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController { void saveAttachmentTo(java.lang.String); }
-keepclassmembers class android.os.MessageQueue { void <init>(boolean); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$7 { void run(); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.Throwable); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { byte[] getEncoded(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { java.util.List getExtendedKeyUsage(); }
-keepclassmembers class com.fsck.k9.notification.BaseNotifications { boolean isDeleteActionEnabled(); }
-keepclassmembers class java.lang.Exception { void <init>(); }
-keepclassmembers class android.os.MessageQueue { void dispose(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalBodyPart { void <init>(java.lang.String,com.fsck.k9.mailstore.LocalMessage,long,long); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$2 { void onLoadFinished(android.content.Loader,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalBodyPart { java.lang.String getAccountUuid(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalBodyPart { long getId(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalBodyPart { com.fsck.k9.mailstore.LocalMessage getMessage(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$2 { void onLoaderReset(android.content.Loader); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { com.fsck.k9.ui.messageview.MessageTopView access$000(com.fsck.k9.ui.messageview.MessageViewFragment); }
-keepclassmembers class com.fsck.k9.mailstore.LocalBodyPart { long getSize(); }
-keepclassmembers class java.lang.Exception { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { com.fsck.k9.activity.MessageLoaderHelper access$100(com.fsck.k9.ui.messageview.MessageViewFragment); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.DatabasePreviewType { void <clinit>(); }
-keepclassmembers class android.content.res.TypedArray { int length(); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog { void access$000(com.fsck.k9.activity.compose.CryptoSettingsDialog); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void access$200(com.fsck.k9.ui.messageview.MessageViewFragment,int); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog { void changeCryptoSettings(); }
-keepclassmembers class android.content.res.TypedArray { int getIndexCount(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { com.fsck.k9.mailstore.LocalMessage access$302(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog { com.fsck.k9.activity.compose.CryptoSettingsDialog newInstance(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode); }
-keepclassmembers class android.content.res.TypedArray { int getIndex(int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void access$400(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void access$500(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mailstore.DatabasePreviewType { void <init>(java.lang.String,int,java.lang.String,com.fsck.k9.message.extractors.PreviewResult$PreviewType); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.Resources getResources(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { com.fsck.k9.ui.messageview.AttachmentController access$600(com.fsck.k9.ui.messageview.MessageViewFragment,com.fsck.k9.mailstore.AttachmentViewInfo); }
-keepclassmembers class com.fsck.k9.mailstore.DatabasePreviewType { com.fsck.k9.mailstore.DatabasePreviewType fromDatabaseValue(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void delete(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5 { void <init>(com.fsck.k9.ui.messageview.MessageViewFragment); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5 { void onDownloadErrorMessageNotFound(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void displayHeaderForLoadingMessage(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.mailstore.DatabasePreviewType { com.fsck.k9.mailstore.DatabasePreviewType fromPreviewType(com.fsck.k9.message.extractors.PreviewResult$PreviewType); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5 { void onDownloadErrorNetworkError(); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog { void onCryptoStatusSelected(com.fsck.k9.view.CryptoModeSelector$CryptoModeSelectorState); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5 { void onMessageDataLoadFailed(); }
-keepclassmembers class android.os.MessageQueue { void quit(boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5 { void onMessageDataLoadFinished(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void displayMessage(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getString(int); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5 { void onMessageViewInfoLoadFailed(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class com.fsck.k9.mailstore.DatabasePreviewType { java.lang.String getDatabaseValue(); }
-keepclassmembers class com.fsck.k9.mailstore.DatabasePreviewType { com.fsck.k9.mailstore.DatabasePreviewType[] values(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5 { void onMessageViewInfoLoadFinished(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class android.preference.PreferenceActivity { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.DatabasePreviewType { com.fsck.k9.message.extractors.PreviewResult$PreviewType getPreviewType(); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog { void updateView(boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5 { void setLoadingProgress(int,int); }
-keepclassmembers class android.transition.ChangeBounds$1 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { com.fsck.k9.ui.messageview.AttachmentController getAttachmentController(com.fsck.k9.mailstore.AttachmentViewInfo); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5 { void startIntentSenderForMessageLoaderHelper(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void displayMessageSubject(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { java.lang.String getDialogTag(int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { java.lang.String getSubjectForMessage(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void hideKeyboard(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { com.fsck.k9.ui.messageview.MessageViewFragment newInstance(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.os.MessageQueue { boolean enqueueMessage(android.os.Message,long); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { void <init>(com.fsck.k9.mail.store.StoreConfig,com.fsck.k9.mail.ssl.TrustedSocketFactory); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void refileMessage(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { byte[] getRandomBytes(int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void removeDialog(int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.AuthType access$1100(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.store.StoreConfig access$100(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.ssl.TrustedSocketFactory access$1000(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { java.lang.String access$1200(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { java.lang.String access$1300(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void showDialog(int); }
-keepclassmembers class android.content.res.TypedArray { boolean getBoolean(int,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.store.StoreConfig access$1400(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.store.StoreConfig access$1500(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { boolean access$1702(com.fsck.k9.mail.store.pop3.Pop3Store,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.store.StoreConfig access$1600(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.store.StoreConfig access$200(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.store.StoreConfig access$300(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void showMessage(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { java.lang.String access$400(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { boolean access$1700(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class android.os.MessageQueue { boolean hasMessages(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { int access$500(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.ConnectionSecurity access$600(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getMonthDay(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getMonth(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getYear(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.ssl.TrustedSocketFactory access$800(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class android.preference.PreferenceActivity { boolean hasHeaders(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { java.lang.String access$700(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getHour(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getMinute(); }
-keepclassmembers class android.content.res.TypedArray { int getInt(int,int); }
-keepclassmembers class android.preference.PreferenceActivity { java.util.List getHeaders(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Capabilities access$900(com.fsck.k9.mail.store.pop3.Pop3Store); }
-keepclassmembers class android.preference.PreferenceActivity { boolean isMultiPane(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { java.lang.String createUri(com.fsck.k9.mail.ServerSettings); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getYearDay(); }
-keepclassmembers class android.preference.PreferenceActivity { boolean onIsMultiPane(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Capabilities access$902(com.fsck.k9.mail.store.pop3.Pop3Store,com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Capabilities); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$1 { void <init>(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getSecond(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void startRefileActivity(int); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getWeekDay(); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.TypedArray obtain(android.content.res.Resources,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$1 { void onCheckedChanged(android.widget.CompoundButton,boolean); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getGmtOffset(); }
-keepclassmembers class android.preference.PreferenceActivity { boolean onIsHidingHeaders(); }
-keepclassmembers class android.os.MessageQueue { android.os.Message next(); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.PreferenceActivity$Header onGetInitialHeader(); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.PreferenceActivity$Header onGetNewHeader(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { boolean allHeadersVisible(); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { boolean canMessageBeArchived(); }
-keepclassmembers class android.os.MessageQueue { boolean isIdlingLocked(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int getIsDst(); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider { java.io.File getDatabase(android.content.Context,java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity { void invalidateHeaders(); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { void copyFieldsFromCalendar(); }
-keepclassmembers class android.content.res.TypedArray { float getFloat(int,float); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider { java.io.File getAttachmentDirectory(android.content.Context,java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity { void onBuildHeaders(java.util.List); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineReset(); }
-keepclassmembers class android.os.MessageQueue { void removeMessages(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { boolean canMessageBeMovedToSpam(); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { byte[] engineDigest(); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider { java.lang.String getId(); }
-keepclassmembers class android.preference.PreferenceActivity { void loadHeadersFromResource(int,java.util.List); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider { java.lang.String getName(android.content.Context); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { void <init>(android.content.Context,com.fsck.k9.mail.internet.MessageIdGenerator,com.fsck.k9.mail.BoundaryGenerator); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineUpdate(byte); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void copyMessage(com.fsck.k9.activity.MessageReference,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider { java.io.File getRoot(android.content.Context); }
-keepclassmembers class org.apache.james.mime4j.field.MailboxFieldImpl$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void disableAttachmentButtons(com.fsck.k9.mailstore.AttachmentViewInfo); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void engineUpdate(byte[],int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void dialogCancelled(int); }
-keepclassmembers class libcore.util.ZoneInfo$WallTime { int findTransitionIndex(libcore.util.ZoneInfo,int); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.ServerSettings decodeUri(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { android.content.Intent buildOpenPgpApiIntent(boolean,boolean,boolean); }
-keepclassmembers class org.apache.james.mime4j.field.MailboxFieldImpl$1 { org.apache.james.mime4j.dom.field.MailboxField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider { boolean isSupported(android.content.Context); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void doNegativeClick(int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void doPositiveClick(int); }
-keepclassmembers class java.security.MessageDigest$MessageDigestImpl { void <init>(java.security.MessageDigestSpi,java.security.Provider,java.lang.String,java.security.MessageDigest$1); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider { void init(android.content.Context); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void enableAttachmentButtons(com.fsck.k9.mailstore.AttachmentViewInfo); }
-keepclassmembers class android.content.res.TypedArray { int getColor(int,int); }
-keepclassmembers class org.apache.james.mime4j.field.MailboxFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$ExternalStorageProvider { boolean isReady(android.content.Context); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { android.content.Context getApplicationContext(); }
-keepclassmembers class android.os.MessageQueue { void removeMessages(android.os.Handler,java.lang.Runnable,java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { boolean isMessageRead(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { boolean isMoveCapable(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { com.fsck.k9.activity.MessageReference getMessageReference(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void hideAttachmentLoadingDialogOnMainThread(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void moveMessage(com.fsck.k9.activity.MessageReference,java.lang.String); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource createOpenPgpDataSourceFromBodyPart(com.fsck.k9.mail.internet.MimeBodyPart,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$40 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.mail.Folder,java.util.List,boolean,java.util.concurrent.CountDownLatch); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { boolean isCopyCapable(); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { android.app.PendingIntent launchOpenPgpApiIntent(android.content.Intent,boolean,boolean,boolean); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserConstants { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { boolean isInitialized(); }
-keepclassmembers class android.content.res.TypedArray { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.support.v4.app.RemoteInputCompatApi20 { android.app.RemoteInput[] fromCompat(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { void checkSettings(); }
-keepclassmembers class android.os.MessageQueue { void removeAllMessagesLocked(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onCopy(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onArchive(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$40 { void run(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { com.fsck.k9.mail.Folder getFolder(java.lang.String); }
-keepclassmembers class android.content.res.TypedArray { int getInteger(int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onAttach(android.app.Activity); }
-keepclassmembers class android.content.res.TypedArray { float getDimension(int,float); }
-keepclassmembers class com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder { void <init>(); }
-keepclassmembers class android.os.MessageQueue { void removeAllFutureMessagesLocked(); }
-keepclassmembers class com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder { void <init>(com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$1); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { boolean isSeenFlagSupported(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store { java.util.List getPersonalNamespaces(boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder { com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int); }
-keepclassmembers class android.os.Bundle { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.os.MessageQueue { void dump(android.util.Printer,java.lang.String); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { void <init>(java.util.TreeMap$EntrySet,java.util.TreeMap$Node); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onClickShowCryptoKey(); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { java.lang.Object next(); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.TreeMap$EntrySet$1 { java.util.Map$Entry next(); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { void mimeBuildEncryptedMessage(com.fsck.k9.mail.Body); }
-keepclassmembers class com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder { com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelOffset(int,int); }
-keepclassmembers class android.preference.PreferenceActivity { boolean isValidFragment(java.lang.String); }
-keepclassmembers class android.os.Bundle { void <init>(java.lang.ClassLoader); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider$ErrorSourceDecoder { java.lang.String getId(); }
-keepclassmembers class android.os.Bundle { void <init>(int); }
-keepclassmembers class android.database.AbstractCursor { int getColumnCount(); }
-keepclassmembers class android.database.AbstractCursor { void onDeactivateOrClose(); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onForward(); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { void mimeBuildMessage(android.content.Intent,com.fsck.k9.mail.internet.MimeBodyPart,com.fsck.k9.mail.internet.BinaryTempFileBody); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onDestroy(); }
-keepclassmembers class android.os.Bundle { void setClassLoader(java.lang.ClassLoader); }
-keepclassmembers class android.preference.PreferenceActivity { void setListFooter(android.view.View); }
-keepclassmembers class android.database.AbstractCursor { void close(); }
-keepclassmembers class android.content.res.TypedArray { int getDimensionPixelSize(int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onDelete(); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { void mimeBuildInlineMessage(com.fsck.k9.mail.Body); }
-keepclassmembers class android.os.Bundle { void <init>(android.os.PersistableBundle); }
-keepclassmembers class android.database.AbstractCursor { boolean onMove(int,int); }
-keepclassmembers class android.os.Bundle { void putAll(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onMove(); }
-keepclassmembers class android.os.Bundle { boolean setAllowFds(boolean); }
-keepclassmembers class android.database.AbstractCursor { void <init>(); }
-keepclassmembers class android.os.Bundle { void clear(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onPendingIntentResult(int,int,android.content.Intent); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onRefile(java.lang.String); }
-keepclassmembers class android.graphics.Matrix { boolean isIdentity(); }
-keepclassmembers class android.graphics.Matrix { void <init>(android.graphics.Matrix); }
-keepclassmembers class android.preference.PreferenceActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.graphics.Matrix { void <init>(); }
-keepclassmembers class android.database.AbstractCursor { int getPosition(); }
-keepclassmembers class android.preference.PreferenceActivity { void onContentChanged(); }
-keepclassmembers class android.database.AbstractCursor { boolean moveToPosition(int); }
-keepclassmembers class android.graphics.Matrix { boolean rectStaysRect(); }
-keepclassmembers class android.graphics.Matrix { void set(android.graphics.Matrix); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onReply(); }
-keepclassmembers class android.database.AbstractCursor { boolean moveToFirst(); }
-keepclassmembers class android.graphics.Matrix { int hashCode(); }
-keepclassmembers class android.graphics.Matrix { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.Matrix { void reset(); }
-keepclassmembers class android.graphics.Matrix { void setTranslate(float,float); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { void mimeBuildSignedMessage(com.fsck.k9.mail.BodyPart,android.content.Intent); }
-keepclassmembers class android.preference.PreferenceActivity { void onHeaderClick(android.preference.PreferenceActivity$Header,int); }
-keepclassmembers class android.graphics.Matrix { void setScale(float,float,float,float); }
-keepclassmembers class org.apache.james.mime4j.util.MimeUtil { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onSaveAttachment(com.fsck.k9.mailstore.AttachmentViewInfo); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onSaveAttachmentToUserProvidedDirectory(com.fsck.k9.mailstore.AttachmentViewInfo); }
-keepclassmembers class android.database.AbstractCursor { boolean moveToPrevious(); }
-keepclassmembers class android.graphics.Matrix { void setScale(float,float); }
-keepclassmembers class java.net.InetAddress { void <init>(int,byte[],java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onReplyAll(); }
-keepclassmembers class org.apache.james.mime4j.util.MimeUtil { java.lang.String createUniqueBoundary(); }
-keepclassmembers class android.graphics.Matrix { void setRotate(float,float,float); }
-keepclassmembers class android.database.AbstractCursor { boolean moveToNext(); }
-keepclassmembers class android.database.AbstractCursor { boolean isLast(); }
-keepclassmembers class android.database.AbstractCursor { boolean isBeforeFirst(); }
-keepclassmembers class android.preference.PreferenceActivity { android.content.Intent onBuildStartFragmentIntent(java.lang.String,android.os.Bundle,int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onSelectText(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onSendAlternate(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.preference.PreferenceActivity { void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int); }
-keepclassmembers class android.database.AbstractCursor { int getColumnIndex(java.lang.String); }
-keepclassmembers class android.database.AbstractCursor { boolean isAfterLast(); }
-keepclassmembers class java.net.InetAddress { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.Matrix { void setRotate(float); }
-keepclassmembers class android.preference.PreferenceActivity { void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int,int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onToggleAllHeadersView(); }
-keepclassmembers class java.net.InetAddress { byte[] getAddress(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onToggleFlagged(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] getAllByName(java.lang.String); }
-keepclassmembers class android.content.res.TypedArray { int getResourceId(int,int); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { com.fsck.k9.message.PgpMessageBuilder newInstance(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onSpam(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onToggleRead(); }
-keepclassmembers class android.preference.PreferenceActivity { void showBreadCrumbs(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.database.AbstractCursor { int getColumnIndexOrThrow(java.lang.String); }
-keepclassmembers class android.os.Bundle { void putFloat(java.lang.String,float); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] getAllByNameImpl(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { void startOrContinueBuildMessage(android.content.Intent); }
-keepclassmembers class android.graphics.Matrix { boolean preTranslate(float,float); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void onViewAttachment(com.fsck.k9.mailstore.AttachmentViewInfo); }
-keepclassmembers class android.content.res.TypedArray { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class android.database.AbstractCursor { void registerContentObserver(android.database.ContentObserver); }
-keepclassmembers class android.database.AbstractCursor { void unregisterContentObserver(android.database.ContentObserver); }
-keepclassmembers class android.graphics.Matrix { boolean preScale(float,float); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void refreshAttachmentThumbnail(com.fsck.k9.mailstore.AttachmentViewInfo); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper { void <clinit>(); }
-keepclassmembers class android.database.AbstractCursor { java.lang.String getColumnName(int); }
-keepclassmembers class android.database.AbstractCursor { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper { void <init>(java.io.File,int); }
-keepclassmembers class android.database.AbstractCursor { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.os.Bundle { void putCharSequence(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void updateTitle(); }
-keepclassmembers class android.graphics.Matrix { boolean postTranslate(float,float); }
-keepclassmembers class android.os.Bundle { void putParcelable(java.lang.String,android.os.Parcelable); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress makeInetAddress(byte[],java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper { com.bumptech.glide.load.engine.cache.DiskCache get(java.io.File,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void runOnMainThread(java.lang.Runnable); }
-keepclassmembers class android.graphics.Matrix { boolean preConcat(android.graphics.Matrix); }
-keepclassmembers class com.bumptech.glide.util.Util { void <clinit>(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader createSystemClassLoader(); }
-keepclassmembers class android.database.AbstractCursor { void setNotificationUri(android.content.ContentResolver,android.net.Uri); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment { void showAttachmentLoadingDialog(); }
-keepclassmembers class android.preference.PreferenceActivity { void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View$OnClickListener); }
-keepclassmembers class android.os.Bundle { void putParcelableArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class android.preference.PreferenceActivity { void setSelectedHeader(android.preference.PreferenceActivity$Header); }
-keepclassmembers class android.os.Bundle { void putParcelableArray(java.lang.String,android.os.Parcelable[]); }
-keepclassmembers class android.graphics.Matrix { boolean postScale(float,float); }
-keepclassmembers class com.bumptech.glide.util.Util { void assertMainThread(); }
-keepclassmembers class org.apache.james.mime4j.util.MimeUtil { boolean isBase64Encoding(java.lang.String); }
-keepclassmembers class com.bumptech.glide.util.Util { java.lang.String bytesToHex(byte[],char[]); }
-keepclassmembers class android.database.AbstractCursor { void setNotificationUri(android.content.ContentResolver,android.net.Uri,int); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper { com.bumptech.glide.disklrucache.DiskLruCache getDiskCache(); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getSystemResourceAsStream(java.lang.String); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float,float,float); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader getSystemClassLoader(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress disallowDeprecatedFormats(java.lang.String,java.net.InetAddress); }
-keepclassmembers class android.preference.PreferenceActivity { void showBreadCrumbs(android.preference.PreferenceActivity$Header); }
-keepclassmembers class org.apache.james.mime4j.util.MimeUtil { boolean isMessage(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.ClassLoader); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress parseNumericAddressNoThrow(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { void buildMessageInternal(); }
-keepclassmembers class android.graphics.Matrix { boolean postConcat(android.graphics.Matrix); }
-keepclassmembers class org.apache.james.mime4j.util.MimeUtil { boolean isQuotedPrintableEncoded(java.lang.String); }
-keepclassmembers class android.os.Bundle { void putStringArrayList(java.lang.String,java.util.ArrayList); }
-keepclassmembers class android.graphics.Matrix { boolean postRotate(float); }
-keepclassmembers class com.bumptech.glide.util.Util { int getBitmapByteSize(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class java.lang.ClassLoader { void <init>(java.lang.ClassLoader,boolean); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper { void delete(com.bumptech.glide.load.Key); }
-keepclassmembers class com.bumptech.glide.util.Util { java.util.Queue createQueue(int); }
-keepclassmembers class android.preference.PreferenceActivity { void switchToHeaderInner(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.os.Bundle { void putSparseParcelableArray(java.lang.String,android.util.SparseArray); }
-keepclassmembers class android.graphics.Matrix { boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit); }
-keepclassmembers class android.os.Bundle { void putSerializable(java.lang.String,java.io.Serializable); }
-keepclassmembers class android.content.res.TypedArray { boolean hasValue(int); }
-keepclassmembers class com.bumptech.glide.util.Util { int getBitmapByteSize(android.graphics.Bitmap); }
-keepclassmembers class org.apache.james.mime4j.util.MimeUtil { int nextCounterValue(); }
-keepclassmembers class org.apache.james.mime4j.util.MimeUtil { boolean isSameMimeType(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.Bundle { void putByteArray(java.lang.String,byte[]); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { void buildMessageOnActivityResult(int,android.content.Intent); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper { java.io.File get(com.bumptech.glide.load.Key); }
-keepclassmembers class org.apache.james.mime4j.util.MimeUtil { boolean isMultipart(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { void setCryptoStatus(com.fsck.k9.activity.compose.ComposeCryptoStatus); }
-keepclassmembers class android.graphics.Matrix { void checkPointArrays(float[],int,float[],int,int); }
-keepclassmembers class org.apache.james.mime4j.util.MimeUtil { java.lang.String unfold(java.lang.String); }
-keepclassmembers class com.bumptech.glide.util.Util { int getBytesPerPixel(android.graphics.Bitmap$Config); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper { void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer); }
-keepclassmembers class android.os.Bundle { void putBundle(java.lang.String,android.os.Bundle); }
-keepclassmembers class org.apache.james.mime4j.util.MimeUtil { java.lang.String unfold0(java.lang.String,int); }
-keepclassmembers class android.preference.PreferenceActivity { void switchToHeader(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.os.Bundle { void putCharSequenceArray(java.lang.String,java.lang.CharSequence[]); }
-keepclassmembers class com.bumptech.glide.util.Util { java.util.List getSnapshot(java.util.Collection); }
-keepclassmembers class com.fsck.k9.message.PgpMessageBuilder { void setOpenPgpApi(org.openintents.openpgp.util.OpenPgpApi); }
-keepclassmembers class android.database.AbstractCursor { void checkPosition(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByName(java.lang.String); }
-keepclassmembers class android.os.Bundle { void putBinder(java.lang.String,android.os.IBinder); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class android.content.res.TypedArray { android.util.TypedValue peekValue(int); }
-keepclassmembers class android.os.Bundle { void putIBinder(java.lang.String,android.os.IBinder); }
-keepclassmembers class com.bumptech.glide.util.Util { boolean isOnBackgroundThread(); }
-keepclassmembers class android.preference.PreferenceActivity { void switchToHeader(android.preference.PreferenceActivity$Header); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class findLoadedClass(java.lang.String); }
-keepclassmembers class java.util.Collections$UnmodifiableRandomAccessList { java.util.List subList(int,int); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[],int,float[],int,int); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostAddress(); }
-keepclassmembers class com.bumptech.glide.util.Util { boolean isValidDimensions(int,int); }
-keepclassmembers class com.bumptech.glide.util.Util { boolean isValidDimension(int); }
-keepclassmembers class java.net.InetAddress { java.lang.String getHostName(); }
-keepclassmembers class com.bumptech.glide.util.Util { boolean isOnMainThread(); }
-keepclassmembers class java.util.Collections$UnmodifiableRandomAccessList { void <init>(java.util.List); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String getPositionDescription(); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader getParent(); }
-keepclassmembers class org.apache.james.mime4j.field.address.ParseException { void <init>(java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.PreferenceActivity$Header findBestMatchingHeader(android.preference.PreferenceActivity$Header,java.util.ArrayList); }
-keepclassmembers class java.lang.ClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class android.net.Uri$1 { void <init>(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getLocalHost(); }
-keepclassmembers class android.content.res.TypedArray { void recycle(); }
-keepclassmembers class android.net.Uri$1 { android.net.Uri createFromParcel(android.os.Parcel); }
-keepclassmembers class java.lang.ClassLoader { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class com.bumptech.glide.util.Util { java.lang.String sha256BytesToHex(byte[]); }
-keepclassmembers class java.net.InetAddress { int hashCode(); }
-keepclassmembers class java.net.InetAddress { java.lang.String getCanonicalHostName(); }
-keepclassmembers class org.apache.james.mime4j.field.address.ParseException { void <init>(); }
-keepclassmembers class android.os.Bundle { float getFloat(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.ParseException { void <init>(org.apache.james.mime4j.field.address.Token,int[][],java.lang.String[]); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String); }
-keepclassmembers class android.os.Bundle { java.lang.CharSequence getCharSequence(java.lang.String); }
-keepclassmembers class android.os.Bundle { float getFloat(java.lang.String,float); }
-keepclassmembers class android.content.res.TypedArray { int[] extractThemeAttrs(); }
-keepclassmembers class org.apache.james.mime4j.field.address.ParseException { java.lang.String add_escapes(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class android.net.Uri$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class java.net.BindException { void <init>(java.lang.String); }
-keepclassmembers class java.net.BindException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.system.StructPollfd { void <init>(); }
-keepclassmembers class android.graphics.Matrix { void mapPoints(float[]); }
-keepclassmembers class java.io.NotSerializableException { void <init>(); }
-keepclassmembers class android.content.res.TypedArray { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.Matrix { boolean mapRect(android.graphics.RectF); }
-keepclassmembers class android.graphics.Matrix { void getValues(float[]); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] lookupHostByName(java.lang.String,int); }
-keepclassmembers class java.net.BindException { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void <init>(com.fsck.k9.activity.MessageCompose,com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.Account); }
-keepclassmembers class java.io.NotSerializableException { void <init>(java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity { void startPreferenceFragment(android.app.Fragment,boolean); }
-keepclassmembers class android.content.res.TypedArray { boolean getValueAt(int,android.util.TypedValue); }
-keepclassmembers class java.lang.ClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void processSourceMessageText(com.fsck.k9.mail.Part,int,int,boolean); }
-keepclassmembers class android.os.Bundle { android.os.Bundle getBundle(java.lang.String); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Package definePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL); }
-keepclassmembers class android.graphics.Matrix { java.lang.String toString(); }
-keepclassmembers class org.apache.james.mime4j.field.address.ParseException { java.lang.String getMessage(); }
-keepclassmembers class android.graphics.Matrix { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.content.res.TypedArray { java.lang.CharSequence loadStringValueAt(int); }
-keepclassmembers class android.widget.AbsSpinner$RecycleBin { void <init>(android.widget.AbsSpinner); }
-keepclassmembers class android.preference.PreferenceActivity { void startPreferencePanel(java.lang.String,android.os.Bundle,int,java.lang.CharSequence,android.app.Fragment,int); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void awaitFinalization(); }
-keepclassmembers class android.os.Bundle { android.os.Parcelable getParcelable(java.lang.String); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(java.lang.ref.FinalizerReference$1); }
-keepclassmembers class java.lang.ClassLoader { java.lang.Package getPackage(java.lang.String); }
-keepclassmembers class java.lang.ref.FinalizerReference$Sentinel { void <init>(); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getHostByAddrImpl(java.net.InetAddress); }
-keepclassmembers class android.preference.PreferenceActivity { void finishPreferencePanel(android.app.Fragment,int,android.content.Intent); }
-keepclassmembers class android.widget.AbsSpinner$RecycleBin { void put(int,android.view.View); }
-keepclassmembers class java.io.ObjectStreamClass$1 { void <init>(); }
-keepclassmembers class android.os.Bundle { android.os.Parcelable[] getParcelableArray(java.lang.String); }
-keepclassmembers class android.widget.AbsSpinner$RecycleBin { void clear(); }
-keepclassmembers class java.io.ObjectStreamClass$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.Matrix { long ni(); }
-keepclassmembers class java.net.InetAddress { java.lang.String toString(); }
-keepclassmembers class android.graphics.Matrix { long native_create(long); }
-keepclassmembers class android.content.res.TypedArray { void <init>(android.content.res.Resources,int[],int[],int); }
-keepclassmembers class java.io.ObjectStreamClass$1 { int compare(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getParcelableArrayList(java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity { void postBindPreferences(); }
-keepclassmembers class android.widget.AbsSpinner$RecycleBin { android.view.View get(int); }
-keepclassmembers class android.graphics.Matrix { boolean native_isIdentity(long); }
-keepclassmembers class android.graphics.Matrix { void native_reset(long); }
-keepclassmembers class android.preference.PreferenceActivity { boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference); }
-keepclassmembers class android.graphics.Matrix { void native_set(long,long); }
-keepclassmembers class android.graphics.Matrix { boolean native_rectStaysRect(long); }
-keepclassmembers class android.graphics.Matrix { void native_setTranslate(long,float,float); }
-keepclassmembers class android.preference.PreferenceActivity { void bindPreferences(); }
-keepclassmembers class android.content.res.TypedArray { java.lang.String toString(); }
-keepclassmembers class android.graphics.Matrix { void native_setScale(long,float,float); }
-keepclassmembers class android.os.Bundle { android.util.SparseArray getSparseParcelableArray(java.lang.String); }
-keepclassmembers class android.graphics.Matrix { void native_setRotate(long,float); }
-keepclassmembers class java.lang.ClassLoader { java.lang.ClassLoader access$000(); }
-keepclassmembers class java.net.InetAddress { boolean isNumeric(java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.PreferenceManager getPreferenceManager(); }
-keepclassmembers class android.graphics.Matrix { void native_setScale(long,float,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_setRotate(long,float,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_preTranslate(long,float,float); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress parseNumericAddress(java.lang.String); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress[] loopbackAddresses(); }
-keepclassmembers class android.preference.PreferenceActivity { void setPreferenceScreen(android.preference.PreferenceScreen); }
-keepclassmembers class android.graphics.Matrix { void native_preConcat(long,long); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.PreferenceScreen getPreferenceScreen(); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void builderSetProperties(com.fsck.k9.message.MessageBuilder); }
-keepclassmembers class android.preference.PreferenceActivity { void requirePreferenceManager(); }
-keepclassmembers class android.os.Bundle { java.io.Serializable getSerializable(java.lang.String); }
-keepclassmembers class android.graphics.Matrix { void native_postScale(long,float,float); }
-keepclassmembers class android.graphics.Matrix { void native_preScale(long,float,float); }
-keepclassmembers class android.preference.PreferenceActivity { void addPreferencesFromIntent(android.content.Intent); }
-keepclassmembers class android.graphics.Matrix { void native_postTranslate(long,float,float); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getStringArrayList(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { boolean includeQuotedText(); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float); }
-keepclassmembers class android.preference.PreferenceActivity { void addPreferencesFromResource(int); }
-keepclassmembers class android.graphics.Matrix { void native_postConcat(long,long); }
-keepclassmembers class com.android.internal.os.IResultReceiver$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.graphics.Matrix { void native_postRotate(long,float,float,float); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void initFromReplyToMessage(com.fsck.k9.mailstore.MessageViewInfo,com.fsck.k9.activity.MessageCompose$Action); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence get(int); }
-keepclassmembers class android.graphics.Matrix { boolean native_setRectToRect(long,android.graphics.RectF,android.graphics.RectF,int); }
-keepclassmembers class android.os.Bundle { java.util.ArrayList getCharSequenceArrayList(java.lang.String); }
-keepclassmembers class android.graphics.Matrix { boolean native_mapRect(long,android.graphics.RectF,android.graphics.RectF); }
-keepclassmembers class android.preference.PreferenceActivity { boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference); }
-keepclassmembers class android.graphics.Matrix { void native_mapPoints(long,float[],int,float[],int,int,boolean); }
-keepclassmembers class android.graphics.Matrix { boolean native_equals(long,long); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void onClickDeleteQuotedText(); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void onClickEditQuotedText(); }
-keepclassmembers class android.graphics.Matrix { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { boolean isQuotedTextText(); }
-keepclassmembers class android.graphics.Matrix { void native_getValues(long,float[]); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { void <init>(char[]); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void onClickShowQuotedText(); }
-keepclassmembers class android.text.method.QwertyKeyListener$Replaced { char[] access$000(android.text.method.QwertyKeyListener$Replaced); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.Preference findPreference(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class android.preference.PreferenceActivity { java.util.ArrayList access$100(android.preference.PreferenceActivity); }
-keepclassmembers class android.preference.PreferenceActivity { void access$000(android.preference.PreferenceActivity); }
-keepclassmembers class android.preference.PreferenceActivity { android.widget.ListAdapter access$200(android.preference.PreferenceActivity); }
-keepclassmembers class android.os.Bundle { android.os.IBinder getBinder(java.lang.String); }
-keepclassmembers class android.preference.PreferenceActivity { android.preference.PreferenceActivity$Header access$400(android.preference.PreferenceActivity); }
-keepclassmembers class java.text.DateFormat { void <init>(); }
-keepclassmembers class android.os.Bundle { byte[] getByteArray(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo46$1 { void <clinit>(); }
-keepclassmembers class android.preference.PreferenceActivity { android.widget.ListAdapter access$300(android.preference.PreferenceActivity); }
-keepclassmembers class android.view.Choreographer$FrameHandler { void handleMessage(android.os.Message); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { boolean isForcePlainText(); }
-keepclassmembers class android.transition.ChangeTransform$1 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void onSwitchAccount(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void populateUIWithQuotedMessage(com.fsck.k9.mailstore.MessageViewInfo,boolean,com.fsck.k9.activity.MessageCompose$Action); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[]); }
-keepclassmembers class java.text.DateFormat { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.Choreographer$FrameHandler { void <init>(android.view.Choreographer,android.os.Looper); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(byte[]); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class java.net.InetAddress { java.net.InetAddress getByAddress(java.lang.String,byte[],int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { void <init>(java.lang.String[],boolean); }
-keepclassmembers class libcore.io.HeapBufferIterator { void seek(int); }
-keepclassmembers class java.text.DateFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class libcore.io.HeapBufferIterator { void skip(int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { org.apache.http.impl.cookie.BasicClientCookie createCookie(java.lang.String,java.lang.String,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class libcore.io.HeapBufferIterator { void <init>(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { void <init>(); }
-keepclassmembers class java.net.InetAddress { java.net.UnknownHostException badAddressLength(byte[]); }
-keepclassmembers class android.os.Bundle { java.lang.String toString(); }
-keepclassmembers class android.os.Bundle { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class libcore.io.HeapBufferIterator { int readInt(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { org.apache.http.impl.cookie.BasicClientCookie createCookie2(java.lang.String,java.lang.String,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$ToolbarCallbackWrapper { void <init>(com.android.internal.app.ToolbarActionBar,android.view.Window$Callback); }
-keepclassmembers class java.net.InetAddress { boolean isIPv4MappedAddress(byte[]); }
-keepclassmembers class libcore.io.HeapBufferIterator { short readShort(); }
-keepclassmembers class java.text.DateFormat { java.lang.String format(java.util.Date); }
-keepclassmembers class java.net.InetAddress { byte[] ipv4MappedToIPv4(byte[]); }
-keepclassmembers class android.content.res.StringBlock { java.lang.CharSequence applyStyles(java.lang.String,int[],android.content.res.StringBlock$StyleIDs); }
-keepclassmembers class com.github.amlcurran.showcaseview.MaterialShowcaseDrawer { void <init>(android.content.res.Resources); }
-keepclassmembers class android.os.Bundle { void <clinit>(); }
-keepclassmembers class libcore.io.HeapBufferIterator { libcore.io.BufferIterator iterator(byte[],int,int,java.nio.ByteOrder); }
-keepclassmembers class com.github.amlcurran.showcaseview.MaterialShowcaseDrawer { void drawToCanvas(android.graphics.Canvas,android.graphics.Bitmap); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void <init>(android.content.Context,android.app.LoaderManager,android.app.FragmentManager,com.fsck.k9.activity.MessageLoaderHelper$MessageLoaderCallbacks); }
-keepclassmembers class com.github.amlcurran.showcaseview.MaterialShowcaseDrawer { void drawShowcase(android.graphics.Bitmap,float,float,float); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void <init>(java.lang.Object,boolean); }
-keepclassmembers class com.github.amlcurran.showcaseview.MaterialShowcaseDrawer { void erase(android.graphics.Bitmap); }
-keepclassmembers class com.github.amlcurran.showcaseview.MaterialShowcaseDrawer { int getShowcaseHeight(); }
-keepclassmembers class java.net.InetAddress { void <clinit>(); }
-keepclassmembers class java.text.DateFormat { java.text.DateFormat getTimeInstance(int,java.util.Locale); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean casNext(java.util.concurrent.SynchronousQueue$TransferQueue$QNode,java.util.concurrent.SynchronousQueue$TransferQueue$QNode); }
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTarget { void onLoadCleared(android.graphics.drawable.Drawable); }
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTarget { void <init>(android.widget.ImageView); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean casItem(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.github.amlcurran.showcaseview.MaterialShowcaseDrawer { void setShowcaseColour(int); }
-keepclassmembers class com.github.amlcurran.showcaseview.MaterialShowcaseDrawer { void setBackgroundColour(int); }
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTarget { android.graphics.drawable.Drawable getCurrentDrawable(); }
-keepclassmembers class com.github.amlcurran.showcaseview.MaterialShowcaseDrawer { int getShowcaseWidth(); }
-keepclassmembers class android.app.IUiModeManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTarget { void onLoadStarted(android.graphics.drawable.Drawable); }
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTarget { void onLoadFailed(java.lang.Exception,android.graphics.drawable.Drawable); }
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTarget { void onResourceReady(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation); }
-keepclassmembers class java.text.DateFormat { int hashCode(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { android.content.Context access$000(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class com.github.amlcurran.showcaseview.MaterialShowcaseDrawer { float getBlockedRadius(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void tryCancel(java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void processDraftMessage(com.fsck.k9.mailstore.MessageViewInfo,java.util.Map); }
-keepclassmembers class java.text.DateFormat { java.util.Date parse(java.lang.String); }
-keepclassmembers class com.bumptech.glide.request.target.ImageViewTarget { void setDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.james.mime4j.field.address.Token { void <init>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean isCancelled(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { boolean isOffList(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.app.IUiModeManager$Stub$Proxy { int getCurrentModeType(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { com.fsck.k9.Account access$100(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { com.fsck.k9.mailstore.LocalMessage access$302(com.fsck.k9.activity.MessageLoaderHelper,com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void access$1000(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class org.apache.james.mime4j.field.address.Token { org.apache.james.mime4j.field.address.Token newToken(int,java.lang.String); }
-keepclassmembers class android.view.View$8 { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { com.fsck.k9.activity.MessageReference access$200(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class org.apache.james.mime4j.field.address.Token { void <init>(int,java.lang.String); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferQueue$QNode { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void access$1100(com.fsck.k9.activity.MessageLoaderHelper,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void access$400(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { com.fsck.k9.ui.crypto.MessageCryptoAnnotations access$702(com.fsck.k9.activity.MessageLoaderHelper,com.fsck.k9.ui.crypto.MessageCryptoAnnotations); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { com.fsck.k9.mailstore.LocalMessage access$300(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class org.apache.james.mime4j.field.address.Token { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { com.fsck.k9.ui.crypto.MessageCryptoAnnotations access$700(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class android.view.GestureDetector$GestureHandler { void <init>(android.view.GestureDetector); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { org.apache.http.cookie.CookieOrigin adjustEffectiveHost(org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.text.DateFormat { void checkDateStyle(int); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void access$900(com.fsck.k9.activity.MessageLoaderHelper,com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class java.text.DateFormat { void setTimeZone(java.util.TimeZone); }
-keepclassmembers class android.widget.CompoundButton$SavedState$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void access$500(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class android.view.GestureDetector$GestureHandler { void <init>(android.view.GestureDetector,android.os.Handler); }
-keepclassmembers class java.text.DateFormat { void checkTimeStyle(int); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { com.fsck.k9.activity.MessageLoaderHelper$MessageLoaderCallbacks access$600(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void access$800(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class android.view.GestureDetector$GestureHandler { void handleMessage(android.os.Message); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void cancelAndClearCryptoOperation(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$5 { void <init>(com.fsck.k9.activity.Accounts$AccountsHandler,boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void cancelAndClearDecodeLoader(); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$LoadTask { int compareTo(com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$LoadTask); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$LoadTask { void <init>(java.lang.Runnable,java.lang.Object,int); }
-keepclassmembers class libcore.io.Posix { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { int getVersion(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965Spec { org.apache.http.Header getVersionHeader(); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress); }
-keepclassmembers class libcore.io.Posix { boolean access(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { void chmod(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$5 { void run(); }
-keepclassmembers class android.app.ExitTransitionCoordinator$9 { void <init>(android.app.ExitTransitionCoordinator,java.util.ArrayList); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$LoadTask { int compareTo(java.lang.Object); }
-keepclassmembers class libcore.io.Posix { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void cancelAndClearLocalMessageLoader(); }
-keepclassmembers class libcore.io.Posix { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { void <init>(int,java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { com.fsck.k9.mailstore.MessageViewInfo createErrorStateMessageViewInfo(); }
-keepclassmembers class libcore.io.Posix { void close(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.Posix { int fcntlLong(java.io.FileDescriptor,int,long); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$LoadTask { boolean equals(java.lang.Object); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { com.fsck.k9.helper.RetainFragment getMessageCryptoHelperRetainFragment(boolean); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$DeletePolicySetting { void <init>(com.fsck.k9.Account$DeletePolicy); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { int hashCode(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class java.lang.CaseMapper$1 { void <init>(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$2 { void <init>(de.cketti.library.changelog.ChangeLog); }
-keepclassmembers class libcore.io.Posix { int fcntlVoid(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.io.Posix { java.lang.String gai_strerror(int); }
-keepclassmembers class java.lang.CaseMapper$1 { libcore.icu.Transliterator initialValue(); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$LoadTask { int hashCode(); }
-keepclassmembers class libcore.io.Posix { int getpid(); }
-keepclassmembers class libcore.io.Posix { java.lang.String getenv(java.lang.String); }
-keepclassmembers class libcore.io.Posix { void fsync(java.io.FileDescriptor); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void onDecodeMessageFinished(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class java.lang.CaseMapper$1 { java.lang.Object initialValue(); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$DeletePolicySetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction { void <clinit>(); }
-keepclassmembers class libcore.io.Posix { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class libcore.io.Posix { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class libcore.io.Posix { java.net.SocketAddress getsockname(java.io.FileDescriptor); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$DeletePolicySetting { java.util.Map getMapping(); }
-keepclassmembers class com.bumptech.glide.load.data.StreamLocalUriFetcher { void <init>(android.content.Context,android.net.Uri); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor { void <init>(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { android.system.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int); }
-keepclassmembers class com.bumptech.glide.load.data.StreamLocalUriFetcher { void close(java.io.InputStream); }
-keepclassmembers class libcore.io.Posix { int getuid(); }
-keepclassmembers class libcore.io.Posix { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.data.StreamLocalUriFetcher { void close(java.lang.Object); }
-keepclassmembers class libcore.io.Posix { java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void onDownloadMessageFailed(java.lang.Throwable); }
-keepclassmembers class com.bumptech.glide.load.data.StreamLocalUriFetcher { java.io.InputStream loadResource(android.net.Uri,android.content.ContentResolver); }
-keepclassmembers class com.bumptech.glide.load.data.StreamLocalUriFetcher { java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo30 { void addDeletedColumn(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor { boolean access$000(com.bumptech.glide.manager.DefaultConnectivityMonitor); }
-keepclassmembers class libcore.io.Posix { int ioctlInt(java.io.FileDescriptor,int,android.util.MutableInt); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor { boolean access$002(com.bumptech.glide.manager.DefaultConnectivityMonitor,boolean); }
-keepclassmembers class libcore.io.Posix { void listen(java.io.FileDescriptor,int); }
-keepclassmembers class android.content.res.StringBlock { android.text.style.CharacterStyle getColor(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void onLoadMessageFromDatabaseFailed(); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor { boolean isConnected(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void onLoadMessageFromDatabaseFinished(); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor { boolean access$100(com.bumptech.glide.manager.DefaultConnectivityMonitor,android.content.Context); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor { com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener access$200(com.bumptech.glide.manager.DefaultConnectivityMonitor); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo32 { void updateDeletedColumnFromFlags(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class libcore.io.Posix { long lseek(java.io.FileDescriptor,long,int); }
-keepclassmembers class libcore.io.Posix { void mkdir(java.lang.String,int); }
-keepclassmembers class libcore.io.Posix { boolean isatty(java.io.FileDescriptor); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$3 { void <init>(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class libcore.io.Posix { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$3 { java.lang.Integer doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor[] pipe(); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor { void onDestroy(); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor { void unregister(); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor { void onStart(); }
-keepclassmembers class libcore.io.Posix { int poll(android.system.StructPollfd[],int); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor { void register(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void onMessageDownloadFinished(); }
-keepclassmembers class android.content.res.StringBlock { void addParagraphSpan(android.text.Spannable,java.lang.Object,int,int); }
-keepclassmembers class libcore.io.Posix { int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Credential { com.android.okhttp.OkAuthenticator$Credential basic(java.lang.String,java.lang.String); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor { void onStop(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void startDownloadingMessageBody(boolean); }
-keepclassmembers class libcore.io.Posix { int preadBytes(java.io.FileDescriptor,java.lang.Object,int,int,long); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String subtag(java.lang.String,java.lang.String); }
-keepclassmembers class java.nio.CharSequenceAdapter { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.nio.CharSequenceAdapter { char get(); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Credential { void <init>(java.lang.String); }
-keepclassmembers class android.net.Network$NetworkBoundSocketFactory { void <init>(android.net.Network,int); }
-keepclassmembers class android.content.res.StringBlock { void <init>(long,boolean); }
-keepclassmembers class android.content.res.StringBlock { int nativeGetSize(long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$3 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.http.protocol.RequestContent { void <init>(); }
-keepclassmembers class android.app.Notification$Style { void internalSetBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.content.res.StringBlock { java.lang.String nativeGetString(long,int); }
-keepclassmembers class android.content.res.StringBlock { int[] nativeGetStyle(long,int); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void startOrResumeCryptoOperation(); }
-keepclassmembers class org.apache.http.protocol.RequestContent { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.app.Notification$Style { void <init>(); }
-keepclassmembers class com.android.okhttp.OkAuthenticator$Credential { java.lang.String getHeaderValue(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void startOrResumeDecodeMessage(); }
-keepclassmembers class android.app.Notification$Style { void internalSetSummaryText(java.lang.CharSequence); }
-keepclassmembers class libcore.io.Posix { int read(java.io.FileDescriptor,java.nio.ByteBuffer); }
-keepclassmembers class android.app.Notification$Style { void checkBuilder(); }
-keepclassmembers class android.app.Notification$Style { android.widget.RemoteViews getStandardView(int); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void asyncReloadMessage(); }
-keepclassmembers class libcore.io.Posix { int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void asyncRestartMessageCryptoProcessing(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void asyncStartOrResumeLoadingMessage(com.fsck.k9.activity.MessageReference,android.os.Parcelable); }
-keepclassmembers class libcore.io.Posix { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.app.Notification$Style { void setBuilder(android.app.Notification$Builder); }
-keepclassmembers class libcore.io.Posix { int readBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class libcore.io.Posix { int recvfromBytes(java.io.FileDescriptor,java.lang.Object,int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void startOrResumeLocalMessageLoader(); }
-keepclassmembers class libcore.io.Posix { void remove(java.lang.String); }
-keepclassmembers class libcore.io.Posix { void rename(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int runStateOf(int); }
-keepclassmembers class android.app.Notification$Style { void applyTopPadding(android.widget.RemoteViews); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.drawable.BitmapDrawable$BitmapState); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void downloadCompleteMessage(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int ctlOf(int,int); }
-keepclassmembers class android.app.Notification$Style { void addExtras(android.os.Bundle); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateLessThan(int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { int workerCountOf(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean runStateAtLeast(int,int); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { void <init>(android.graphics.Bitmap); }
-keepclassmembers class libcore.io.Posix { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.app.Notification$Style { android.app.Notification buildStyled(android.app.Notification); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean isRunning(int); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void onDestroy(); }
-keepclassmembers class android.graphics.Region { void <init>(); }
-keepclassmembers class libcore.io.Posix { int sendtoBytes(java.io.FileDescriptor,java.lang.Object,int,int,int,java.net.InetAddress,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndIncrementWorkerCount(int); }
-keepclassmembers class android.app.Notification$Style { void populateContentView(android.app.Notification); }
-keepclassmembers class android.app.Notification$Style { void populateTickerView(android.app.Notification); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void increment(int); }
-keepclassmembers class android.app.Notification$Style { void populateHeadsUpContentView(android.app.Notification); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper { void onDestroyChangingConfigurations(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void clear(); }
-keepclassmembers class com.android.okio.GzipSource { void <init>(com.android.okio.Source); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void <init>(android.widget.RemoteViews); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { int getMemoryUsage(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void addBitmapMemory(android.graphics.Bitmap); }
-keepclassmembers class android.graphics.Region { void <init>(android.graphics.Region); }
-keepclassmembers class android.app.Notification$Style { boolean hasProgress(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { boolean canApplyTheme(); }
-keepclassmembers class libcore.io.Posix { void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptGroupReq(java.io.FileDescriptor,int,int,android.system.StructGroupReq); }
-keepclassmembers class libcore.io.Posix { void setsockoptByte(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptGroupSourceReq(java.io.FileDescriptor,int,int,android.system.StructGroupSourceReq); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean compareAndDecrementWorkerCount(int); }
-keepclassmembers class com.android.okio.GzipSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class libcore.io.Posix { void setsockoptLinger(java.io.FileDescriptor,int,int,android.system.StructLinger); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void decrementWorkerCount(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void advanceRunState(int); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void processMessageToForward(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class android.graphics.Region { void setEmpty(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.widget.RemoteViews$MemoryUsageCounter { void <init>(android.widget.RemoteViews,android.widget.RemoteViews$1); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessagePresenter { void showOrHideQuotedText(com.fsck.k9.message.QuotedTextMode); }
-keepclassmembers class libcore.io.Posix { void shutdown(java.io.FileDescriptor,int); }
-keepclassmembers class libcore.io.Posix { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class libcore.io.Posix { void setsockoptInt(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class org.openintents.openpgp.OpenPgpSignatureResult$SenderStatusResult { void <clinit>(); }
-keepclassmembers class libcore.io.Posix { java.lang.String strerror(int); }
-keepclassmembers class libcore.io.Posix { long sysconf(int); }
-keepclassmembers class libcore.io.Posix { java.io.FileDescriptor socket(int,int,int); }
-keepclassmembers class libcore.io.Posix { void tcdrain(java.io.FileDescriptor); }
-keepclassmembers class com.android.okio.GzipSource { void consumeHeader(); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { int getChangingConfigurations(); }
-keepclassmembers class libcore.io.Posix { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class android.view.View { void <init>(android.content.Context); }
-keepclassmembers class libcore.io.Posix { android.system.StructStatVfs statvfs(java.lang.String); }
-keepclassmembers class android.graphics.drawable.BitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class org.openintents.openpgp.OpenPgpSignatureResult$SenderStatusResult { org.openintents.openpgp.OpenPgpSignatureResult$SenderStatusResult[] values(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void tryTerminate(); }
-keepclassmembers class libcore.io.Posix { void maybeUpdateBufferPosition(java.nio.ByteBuffer,int,int); }
-keepclassmembers class libcore.io.Posix { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class libcore.io.Posix { int writeBytes(java.io.FileDescriptor,java.lang.Object,int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void checkShutdownAccess(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan { java.lang.Object access$1800(com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan); }
-keepclassmembers class android.view.View { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.graphics.Region { boolean op(int,int,int,int,android.graphics.Region$Op); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan { java.lang.Object getToken(); }
-keepclassmembers class libcore.io.Posix { android.system.StructUtsname uname(); }
-keepclassmembers class android.view.View { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.openintents.openpgp.OpenPgpSignatureResult$SenderStatusResult { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void interruptIdleWorkers(boolean); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan { void <init>(com.tokenautocomplete.TokenCompleteTextView,android.view.View,java.lang.Object,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$5 { void <init>(com.fsck.k9.mailstore.LocalStore); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$5 { java.lang.Integer doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.android.okio.GzipSource { void consumeTrailer(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void interruptIdleWorkers(); }
-keepclassmembers class android.os.StrictMode$4 { android.os.StrictMode$AndroidBlockGuardPolicy initialValue(); }
-keepclassmembers class android.os.StrictMode$4 { java.lang.Object initialValue(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { java.lang.Object getObjectToEncode(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$5 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.android.okio.GzipSource { void close(); }
-keepclassmembers class com.fsck.k9.activity.AccountList { void <init>(); }
-keepclassmembers class android.os.StrictMode$4 { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompatIceCreamSandwich$Builder { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void reject(java.lang.Runnable); }
-keepclassmembers class com.fsck.k9.activity.AccountList { void onCreate(android.os.Bundle); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean isRunningOrShutdown(boolean); }
-keepclassmembers class com.android.okio.GzipSource { void updateCrc(com.android.okio.OkBuffer,long,long); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void onShutdown(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { int getIndex(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.AccountList { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.graphics.Region { void <init>(long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { int beginOperation(java.lang.String,java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.apache.james.mime4j.util.CharsetUtil { boolean isASCII(char); }
-keepclassmembers class android.graphics.Region { long nativeConstructor(); }
-keepclassmembers class android.graphics.Region { void nativeSetRegion(long,long); }
-keepclassmembers class com.fsck.k9.activity.AccountList { void onResume(); }
-keepclassmembers class android.graphics.Region { boolean nativeSetRect(long,int,int,int,int); }
-keepclassmembers class com.fsck.k9.account.AccountCreator$1 { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.util.CharsetUtil { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.util.CharsetUtil { boolean isWhitespace(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.util.CharsetUtil { boolean isWhitespace(char); }
-keepclassmembers class org.apache.james.mime4j.util.CharsetUtil { boolean isASCII(java.lang.String); }
-keepclassmembers class android.graphics.Region { boolean nativeOp(long,int,int,int,int,int); }
-keepclassmembers class android.animation.StateListAnimator$1 { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class android.animation.StateListAnimator$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.activity.AccountList { void populateListView(java.util.List); }
-keepclassmembers class android.graphics.Region { void <clinit>(); }
-keepclassmembers class com.android.okio.GzipSource { void checkEqual(java.lang.String,int,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean addWorker(java.lang.Runnable,boolean); }
-keepclassmembers class com.fsck.k9.helper.ClipboardManager { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.helper.ClipboardManager { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3 { com.android.okhttp.internal.spdy.FrameReader newReader(com.android.okio.BufferedSource,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3 { com.android.okhttp.internal.spdy.FrameWriter newWriter(com.android.okio.BufferedSink,boolean); }
-keepclassmembers class com.fsck.k9.helper.ClipboardManager { com.fsck.k9.helper.ClipboardManager getInstance(android.content.Context); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3 { int maxFrameSize(); }
-keepclassmembers class com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper { void <init>(android.net.Uri); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.helper.ClipboardManager { void setText(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.util.CharsetUtil { java.nio.charset.Charset lookup(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.helper.MailTo$CaseInsensitiveParamWrapper { java.util.List getQueryParameters(java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void failOperation(int,java.lang.Exception); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.NegativeImapResponseException { boolean wasByeResponseReceived(); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.widget.ListPopupWindow$3 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { java.lang.String getQuotedText(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void endOperation(int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void addWorkerFailed(java.util.concurrent.ThreadPoolExecutor$Worker); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { java.lang.String getSignature(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void logOperation(int,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.NegativeImapResponseException { void <init>(java.lang.String,java.util.List); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { boolean endOperationDeferLogLocked(int); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { java.lang.String getSignatureHtml(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void processWorkerExit(java.util.concurrent.ThreadPoolExecutor$Worker,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void logOperationLocked(int,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { boolean endOperationDeferLog(int); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { com.fsck.k9.mail.internet.TextBody buildTextHtml(); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { com.fsck.k9.message.InsertableHtmlContent getQuotedTextHtml(); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$1 { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.stream.BasicBodyDescriptor { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { org.apache.harmony.security.x509.CertificatePolicies decode(byte[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { android.database.sqlite.SQLiteConnection$Operation getOperationLocked(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(java.util.List,byte[]); }
-keepclassmembers class org.apache.james.mime4j.stream.BasicBodyDescriptor { java.lang.String getBoundary(); }
-keepclassmembers class org.apache.james.mime4j.stream.BasicBodyDescriptor { java.lang.String getMimeType(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.support.v4.app.NotificationCompatIceCreamSandwich$Builder { android.app.Notification build(); }
-keepclassmembers class org.apache.james.mime4j.stream.BasicBodyDescriptor { java.lang.String getTransferEncoding(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.lang.Runnable getTask(); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.james.mime4j.stream.BasicBodyDescriptor { java.lang.String toString(); }
-keepclassmembers class com.bumptech.glide.provider.ChildLoadProvider { void <init>(com.bumptech.glide.provider.LoadProvider); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { int newOperationCookieLocked(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor); }
-keepclassmembers class com.bumptech.glide.provider.ChildLoadProvider { com.bumptech.glide.load.ResourceEncoder getEncoder(); }
-keepclassmembers class org.htmlcleaner.CleanerTransformations { void <init>(); }
-keepclassmembers class org.htmlcleaner.CleanerTransformations { void clear(); }
-keepclassmembers class com.fsck.k9.preferences.Settings { java.util.Map convert(java.util.Map,java.util.Map); }
-keepclassmembers class org.htmlcleaner.CleanerTransformations { java.lang.String getTagName(java.lang.String); }
-keepclassmembers class com.bumptech.glide.provider.ChildLoadProvider { com.bumptech.glide.load.ResourceDecoder getCacheDecoder(); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { com.fsck.k9.mail.internet.TextBody buildTextPlain(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.CertificatePolicies$1); }
-keepclassmembers class org.htmlcleaner.CleanerTransformations { org.htmlcleaner.TagTransformation getTransformation(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder$ChildNodeIterator { void <init>(org.apache.james.mime4j.field.address.SimpleNode); }
-keepclassmembers class com.bumptech.glide.provider.ChildLoadProvider { com.bumptech.glide.load.model.ModelLoader getModelLoader(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void runWorker(java.util.concurrent.ThreadPoolExecutor$Worker); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder$ChildNodeIterator { boolean hasNext(); }
-keepclassmembers class com.bumptech.glide.provider.ChildLoadProvider { com.bumptech.glide.load.Encoder getSourceEncoder(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificatePolicies { void <clinit>(); }
-keepclassmembers class com.fsck.k9.preferences.Settings { java.util.Set upgrade(int,java.util.Map,java.util.Map,java.util.Map); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder$ChildNodeIterator { org.apache.james.mime4j.field.address.Node next(); }
-keepclassmembers class com.bumptech.glide.provider.ChildLoadProvider { void setSourceDecoder(com.bumptech.glide.load.ResourceDecoder); }
-keepclassmembers class org.htmlcleaner.CleanerTransformations { boolean hasTransformationForTag(java.lang.String); }
-keepclassmembers class org.htmlcleaner.CleanerTransformations { java.util.Map transformAttributes(java.lang.String,java.util.Map); }
-keepclassmembers class com.bumptech.glide.provider.ChildLoadProvider { com.bumptech.glide.load.ResourceDecoder getSourceDecoder(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection$OperationLog { void <init>(android.database.sqlite.SQLiteConnection$1); }
-keepclassmembers class org.apache.http.conn.scheme.SchemeRegistry { void <init>(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$Transferer { void <init>(); }
-keepclassmembers class com.bumptech.glide.provider.ChildLoadProvider { com.bumptech.glide.load.resource.transcode.ResourceTranscoder getTranscoder(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser$JJCalls { void <init>(); }
-keepclassmembers class com.bumptech.glide.provider.ChildLoadProvider { void setSourceEncoder(com.bumptech.glide.load.Encoder); }
-keepclassmembers class org.apache.http.conn.scheme.SchemeRegistry { org.apache.http.conn.scheme.Scheme getScheme(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { void setIncludeQuotedText(boolean); }
-keepclassmembers class org.apache.http.conn.scheme.SchemeRegistry { org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { void setReplyAfterQuote(boolean); }
-keepclassmembers class org.apache.http.conn.scheme.SchemeRegistry { org.apache.http.conn.scheme.Scheme register(org.apache.http.conn.scheme.Scheme); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { void setQuotedText(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { void setInsertSeparator(boolean); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { void setAppendSignature(boolean); }
-keepclassmembers class java.io.SerializationHandleMap { void resizeArrays(int); }
-keepclassmembers class org.apache.http.conn.scheme.SchemeRegistry { org.apache.http.conn.scheme.Scheme get(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { void setSignatureBeforeQuotedText(boolean); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { void setSignature(java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue); }
-keepclassmembers class java.io.SerializationHandleMap { int findIndex(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { void setQuotedTextHtml(com.fsck.k9.message.InsertableHtmlContent); }
-keepclassmembers class com.fsck.k9.message.TextBodyBuilder { java.lang.String textToHtmlFragment(java.lang.String); }
-keepclassmembers class org.apache.http.impl.io.HttpTransportMetricsImpl { void incrementBytesTransferred(long); }
-keepclassmembers class java.io.SerializationHandleMap { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory); }
-keepclassmembers class org.apache.http.conn.ssl.StrictHostnameVerifier { void <init>(); }
-keepclassmembers class java.io.SerializationHandleMap { int put(java.lang.Object,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue,java.util.concurrent.ThreadFactory,java.util.concurrent.RejectedExecutionHandler); }
-keepclassmembers class org.apache.http.conn.ssl.StrictHostnameVerifier { void verify(java.lang.String,java.lang.String[],java.lang.String[]); }
-keepclassmembers class org.apache.http.impl.io.HttpTransportMetricsImpl { void <init>(); }
-keepclassmembers class android.graphics.Point$1 { void <init>(); }
-keepclassmembers class java.io.SerializationHandleMap { int getModuloHash(java.lang.Object,int); }
-keepclassmembers class java.io.SerializationHandleMap { int get(java.lang.Object); }
-keepclassmembers class android.widget.Editor$CursorAnchorInfoNotifier { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class java.io.SerializationHandleMap { void rehash(); }
-keepclassmembers class android.text.AutoText { void <init>(android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { void <init>(com.fsck.k9.notification.NotificationController,com.fsck.k9.notification.NotificationContentCreator,com.fsck.k9.notification.DeviceNotifications,com.fsck.k9.notification.WearNotifications); }
-keepclassmembers class com.fsck.k9.preferences.Settings { java.util.Map validate(int,java.util.Map,java.util.Map,boolean); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void execute(java.lang.Runnable); }
-keepclassmembers class java.io.SerializationHandleMap { int remove(java.lang.Object); }
-keepclassmembers class libcore.util.CollectionUtils { java.lang.Iterable dereferenceIterable(java.lang.Iterable,boolean); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { void cancelNotification(int); }
-keepclassmembers class android.text.AutoText { android.text.AutoText getInstance(android.view.View); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void shutdown(); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.http.protocol.DefaultedHttpContext { void <init>(org.apache.http.protocol.HttpContext,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.apache.http.protocol.DefaultedHttpContext { java.lang.Object getAttribute(java.lang.String); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,java.util.Map,boolean); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,boolean); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { void createStackedNotification(com.fsck.k9.Account,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class android.text.AutoText { java.lang.String get(java.lang.CharSequence,int,int,android.view.View); }
-keepclassmembers class org.apache.http.protocol.DefaultedHttpContext { void setAttribute(java.lang.String,java.lang.Object); }
-keepclassmembers class java.io.EOFException { void <init>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean isShutdown(); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { void createSummaryNotification(com.fsck.k9.Account,com.fsck.k9.notification.NotificationData,boolean); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class java.io.EOFException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$3 { void <init>(java.lang.String); }
-keepclassmembers class android.text.AutoText { java.lang.String lookup(java.lang.CharSequence,int,int); }
-keepclassmembers class android.webkit.WebView { void <init>(android.content.Context,android.util.AttributeSet,int,int,java.util.Map,boolean); }
-keepclassmembers class android.view.View$3 { java.lang.Float get(android.view.View); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { com.fsck.k9.notification.NotificationData getNotificationData(com.fsck.k9.Account); }
-keepclassmembers class android.webkit.WebView { void setVerticalScrollbarOverlay(boolean); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { android.support.v4.app.NotificationManagerCompat getNotificationManager(); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { com.fsck.k9.notification.NotificationData getOrCreateNotificationData(com.fsck.k9.Account,int); }
-keepclassmembers class android.view.View$3 { void setValue(android.view.View,float); }
-keepclassmembers class com.fsck.k9.preferences.Settings$WebFontSizeSetting { void <init>(int); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { com.fsck.k9.notification.NewMailNotifications newInstance(com.fsck.k9.notification.NotificationController,com.fsck.k9.notification.NotificationActionCreator); }
-keepclassmembers class android.view.View$3 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.fsck.k9.preferences.Settings$WebFontSizeSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class android.view.View$3 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.text.AutoText { void init(android.content.res.Resources); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.util.concurrent.ThreadFactory getThreadFactory(); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { boolean isPrivacyModeEnabled(); }
-keepclassmembers class android.view.MenuInflater$InflatedOnMenuItemClickListener { void <clinit>(); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { com.fsck.k9.notification.NotificationData removeNotificationData(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.preferences.Settings$WebFontSizeSetting { java.util.Map getMapping(); }
-keepclassmembers class com.fsck.k9.message.ComposePgpInlineDecider { void <init>(); }
-keepclassmembers class com.fsck.k9.preferences.Settings { java.util.TreeMap versions(com.fsck.k9.preferences.Settings$V[]); }
-keepclassmembers class java.util.TimeZone { java.lang.Object clone(); }
-keepclassmembers class java.util.TimeZone { void <init>(); }
-keepclassmembers class java.util.TimeZone { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getDefault(); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { void updateSummaryNotification(com.fsck.k9.Account,com.fsck.k9.notification.NotificationData); }
-keepclassmembers class com.fsck.k9.message.ComposePgpInlineDecider { boolean messageHasPgpInlineParts(com.fsck.k9.mail.Message); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void ensurePrestart(); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { void addNewMailNotification(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage,int); }
-keepclassmembers class com.fsck.k9.message.ComposePgpInlineDecider { boolean shouldReplyInline(com.fsck.k9.mail.Message); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.ParseException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.ParseException { java.lang.String add_escapes(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.ParseException { void <init>(org.apache.james.mime4j.field.datetime.parser.Token,int[][],java.lang.String[]); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.ParseException { void <init>(); }
-keepclassmembers class android.text.AutoText { void add(java.lang.String,char); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase$1 { void <clinit>(); }
-keepclassmembers class org.apache.http.auth.AuthScope { void <init>(java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { void clearNewMailNotifications(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { com.fsck.k9.notification.NotificationData createNotificationData(com.fsck.k9.Account,int); }
-keepclassmembers class java.util.TimeZone { java.lang.String getDisplayName(boolean,int,java.util.Locale); }
-keepclassmembers class java.util.TimeZone { java.lang.String getDisplayName(boolean,int); }
-keepclassmembers class java.util.TimeZone { java.lang.String createGmtOffsetString(boolean,boolean,int); }
-keepclassmembers class android.text.AutoText { char newTrieNode(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { boolean remove(java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.util.concurrent.BlockingQueue getQueue(); }
-keepclassmembers class com.fsck.k9.notification.NewMailNotifications { void removeNewMailNotification(com.fsck.k9.Account,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.webkit.WebView { void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.TimeZone { void appendNumber(java.lang.StringBuilder,int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <init>(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void appendRecord(android.view.accessibility.AccessibilityRecord); }
-keepclassmembers class android.text.AutoText { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getRecordCount(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { int getEventType(); }
-keepclassmembers class org.apache.http.auth.AuthScope { int match(org.apache.http.auth.AuthScope); }
-keepclassmembers class java.util.TimeZone { java.lang.String getID(); }
-keepclassmembers class android.webkit.WebView { android.webkit.WebView$HitTestResult getHitTestResult(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setEventType(int); }
-keepclassmembers class javax.net.ssl.HttpsURLConnection { javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier(); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getTimeZone(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.ParseException { java.lang.String getMessage(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void <init>(); }
-keepclassmembers class java.net.URI$PartEncoder { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { org.apache.harmony.security.asn1.ASN1GeneralizedTime getInstance(); }
-keepclassmembers class javax.net.ssl.HttpsURLConnection { javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock { void <init>(boolean); }
-keepclassmembers class java.net.URI$PartEncoder { boolean isRetained(char); }
-keepclassmembers class org.apache.http.auth.AuthScope { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock { java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setContentChangeTypes(int); }
-keepclassmembers class android.view.animation.Animation$2 { void <init>(android.view.animation.Animation); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void setPackageName(java.lang.CharSequence); }
-keepclassmembers class android.webkit.WebView { void resumeTimers(); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner$1 { void onClick(android.view.View); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner$1 { void <init>(com.fsck.k9.view.ClientCertificateSpinner); }
-keepclassmembers class android.webkit.WebView { void onResume(); }
-keepclassmembers class javax.net.ssl.HttpsURLConnection { void <init>(java.net.URL); }
-keepclassmembers class java.util.TimeZone { java.util.TimeZone getCustomTimeZone(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(int); }
-keepclassmembers class org.apache.http.auth.AuthScope { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock { java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { android.view.accessibility.AccessibilityEvent obtain(); }
-keepclassmembers class android.webkit.WebView { void onPause(); }
-keepclassmembers class org.apache.http.cookie.CookieSpecRegistry { void register(java.lang.String,org.apache.http.cookie.CookieSpecFactory); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1GeneralizedTime { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.http.cookie.CookieSpecRegistry { org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.cookie.CookieSpecRegistry { void <init>(); }
-keepclassmembers class org.apache.http.auth.AuthScope { int hashCode(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SenderAddressExtractor { void <init>(); }
-keepclassmembers class android.widget.QuickContactBadge$QueryHandler { void <init>(android.widget.QuickContactBadge,android.content.ContentResolver); }
-keepclassmembers class android.webkit.WebView { java.lang.String findAddress(java.lang.String); }
-keepclassmembers class org.apache.http.impl.io.SocketOutputBuffer { void <init>(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class android.widget.QuickContactBadge$QueryHandler { void onQueryComplete(int,java.lang.Object,android.database.Cursor); }
-keepclassmembers class android.webkit.WebView { void setWebViewClient(android.webkit.WebViewClient); }
-keepclassmembers class org.apache.http.auth.AuthScope { void <clinit>(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SenderAddressExtractor { java.lang.String getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class com.android.okhttp.internal.http.RetryableSink { void <init>(int); }
-keepclassmembers class com.android.okhttp.internal.http.RetryableSink { void <init>(); }
-keepclassmembers class java.util.TimeZone { void setID(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.RetryableSink { void close(); }
-keepclassmembers class java.util.TimeZone { void <clinit>(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$RecipientTokenViewHolder { void <init>(android.view.View); }
-keepclassmembers class java.io.RandomAccessFile { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void beforeExecute(java.lang.Thread,java.lang.Runnable); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SenderAddressExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class android.webkit.WebView { android.webkit.WebSettings getSettings(); }
-keepclassmembers class android.webkit.WebView { void onGlobalFocusChanged(android.view.View,android.view.View); }
-keepclassmembers class android.webkit.WebView { void onChildViewAdded(android.view.View,android.view.View); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void afterExecute(java.lang.Runnable,java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor { void terminated(); }
-keepclassmembers class com.fsck.k9.search.SqlQueryBuilder$1 { void <clinit>(); }
-keepclassmembers class android.webkit.WebView { void onChildViewRemoved(android.view.View,android.view.View); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$4 { void <init>(com.fsck.k9.ui.crypto.MessageCryptoHelper); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock { java.util.concurrent.locks.Lock writeLock(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock { java.util.concurrent.locks.Lock readLock(); }
-keepclassmembers class com.android.okhttp.internal.http.RetryableSink { long contentLength(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$4 { void onProgress(int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$3 { void <init>(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class com.android.okhttp.internal.http.RetryableSink { void writeToSocket(com.android.okio.BufferedSink); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$3 { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.android.okio.DeflaterSink { void <init>(com.android.okio.Sink,java.util.zip.Deflater); }
-keepclassmembers class java.io.RandomAccessFile { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.IContentService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$4 { void onReturn(android.content.Intent,com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class com.android.okio.DeflaterSink { void write(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$3 { void afterTextChanged(android.text.Editable); }
-keepclassmembers class java.io.RandomAccessFile { void close(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$4 { void onReturn(android.content.Intent,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.Multipart { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.Multipart { com.fsck.k9.mail.BodyPart getBodyPart(int); }
-keepclassmembers class com.fsck.k9.mail.Multipart { java.util.List getBodyParts(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$3 { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.webkit.WebView { void ensureProviderCreated(); }
-keepclassmembers class android.webkit.WebView { android.webkit.WebViewFactoryProvider getFactory(); }
-keepclassmembers class com.android.okio.DeflaterSink { void deflate(boolean); }
-keepclassmembers class com.fsck.k9.mail.Multipart { int getCount(); }
-keepclassmembers class com.android.okio.DeflaterSink { void flush(); }
-keepclassmembers class android.webkit.WebView { void checkThread(); }
-keepclassmembers class com.fsck.k9.mail.Multipart { com.fsck.k9.mail.Part getParent(); }
-keepclassmembers class android.animation.LayoutTransition$1 { void <init>(android.animation.LayoutTransition,android.view.ViewGroup); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void writeAccessibilityRecordToParcel(android.view.accessibility.AccessibilityRecord,android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.mail.Multipart { void addBodyPart(com.fsck.k9.mail.BodyPart); }
-keepclassmembers class com.android.okio.DeflaterSink { void close(); }
-keepclassmembers class com.fsck.k9.mail.Multipart { void setCharset(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.Multipart { void setParent(com.fsck.k9.mail.Part); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { float[] createLUT(android.animation.TimeInterpolator,long); }
-keepclassmembers class com.fsck.k9.mail.Multipart { void setEncoding(java.lang.String); }
-keepclassmembers class android.webkit.WebView { void setOverScrollMode(int); }
-keepclassmembers class java.io.RandomAccessFile { java.io.FileDescriptor getFD(); }
-keepclassmembers class android.webkit.WebView { void setLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.webkit.WebView { void onAttachedToWindow(); }
-keepclassmembers class com.fsck.k9.mail.internet.Iso2022JpToShiftJisInputStream$Charset { void <clinit>(); }
-keepclassmembers class android.webkit.WebView { int computeHorizontalScrollRange(); }
-keepclassmembers class java.io.RandomAccessFile { long length(); }
-keepclassmembers class android.util.Log$1 { void <init>(); }
-keepclassmembers class android.webkit.WebView { void setScrollBarStyle(int); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollRange(); }
-keepclassmembers class android.webkit.WebView { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollOffset(); }
-keepclassmembers class android.webkit.WebView { void onDetachedFromWindowInternal(); }
-keepclassmembers class android.content.ContextWrapper { void <init>(android.content.Context); }
-keepclassmembers class android.util.Log$1 { void onTerribleFailure(java.lang.String,android.util.Log$TerribleFailure,boolean); }
-keepclassmembers class java.io.RandomAccessFile { int read(byte[],int,int); }
-keepclassmembers class android.webkit.WebView { void computeScroll(); }
-keepclassmembers class com.fsck.k9.mail.internet.Iso2022JpToShiftJisInputStream$Charset { void <init>(java.lang.String,int); }
-keepclassmembers class android.webkit.WebView { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String toString(); }
-keepclassmembers class com.android.internal.view.animation.FallbackLUTInterpolator { long createNativeInterpolator(android.animation.TimeInterpolator,long); }
-keepclassmembers class com.fsck.k9.mail.internet.Iso2022JpToShiftJisInputStream$Charset { com.fsck.k9.mail.internet.Iso2022JpToShiftJisInputStream$Charset[] values(); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.AssetManager getAssets(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getBaseContext(); }
-keepclassmembers class android.text.SpannableString { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.webkit.WebView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.text.SpannableString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.webkit.WebView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.webkit.WebView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.content.ContextWrapper { android.content.ContentResolver getContentResolver(); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.PackageManager getPackageManager(); }
-keepclassmembers class android.content.ContextWrapper { android.os.Looper getMainLooper(); }
-keepclassmembers class libcore.math.MathUtils { void <clinit>(); }
-keepclassmembers class android.webkit.WebView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context getApplicationContext(); }
-keepclassmembers class android.text.SpannableString { void removeSpan(java.lang.Object); }
-keepclassmembers class android.text.SpannableString { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorFileLoader { void <init>(android.content.Context); }
-keepclassmembers class android.content.ContextWrapper { void setTheme(int); }
-keepclassmembers class android.text.SpannableString { int hashCode(); }
-keepclassmembers class android.text.SpannableString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorFileLoader { void <init>(com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class android.webkit.WebView { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.webkit.WebView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.text.SpannableString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.content.ContextWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class android.content.ContextWrapper { int getThemeResId(); }
-keepclassmembers class java.io.RandomAccessFile { void readFully(byte[],int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { java.lang.String eventTypeToString(int); }
-keepclassmembers class android.webkit.WebView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageName(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getBasePackageName(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.ClassLoader getClassLoader(); }
-keepclassmembers class java.io.RandomAccessFile { int readInt(); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.text.SpannableString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class android.content.ContextWrapper { android.content.pm.ApplicationInfo getApplicationInfo(); }
-keepclassmembers class android.webkit.WebView { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getOpPackageName(); }
-keepclassmembers class android.text.SpannableString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.webkit.WebView { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageResourcePath(); }
-keepclassmembers class java.io.RandomAccessFile { void readFully(byte[]); }
-keepclassmembers class android.webkit.WebView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.webkit.CookieSyncManager { void setGetInstanceIsAllowed(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String getPackageCodePath(); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer); }
-keepclassmembers class android.content.ContextWrapper { android.content.SharedPreferences getSharedPreferences(java.lang.String,int); }
-keepclassmembers class android.webkit.CookieSyncManager { void <clinit>(); }
-keepclassmembers class android.widget.AdapterView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.text.SpannableString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { boolean hasDueCallbacksLocked(long); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void <init>(java.lang.String,int,int,int,org.ccil.cowan.tagsoup.Schema); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { android.view.Choreographer$CallbackRecord extractDueCallbacksLocked(long); }
-keepclassmembers class android.webkit.WebView { void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileInputStream openFileInput(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteFile(java.lang.String); }
-keepclassmembers class android.webkit.WebView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFileStreamPath(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.FileOutputStream openFileOutput(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getFilesDir(); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] fileList(); }
-keepclassmembers class android.text.SpannableString { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getSharedPrefsFile(java.lang.String); }
-keepclassmembers class android.webkit.WebView { void onWindowVisibilityChanged(int); }
-keepclassmembers class android.widget.AdapterView { void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalFilesDir(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getNoBackupFilesDir(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String namespace(java.lang.String,boolean); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void addCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AdapterView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalFilesDirs(java.lang.String); }
-keepclassmembers class android.webkit.WebView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class java.io.RandomAccessFile { void seek(long); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getObbDir(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getObbDirs(); }
-keepclassmembers class android.webkit.WebView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCodeCacheDir(); }
-keepclassmembers class android.app.PendingIntent$1 { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String localName(java.lang.String); }
-keepclassmembers class android.webkit.WebView { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalCacheDirs(); }
-keepclassmembers class android.app.PendingIntent$1 { android.app.PendingIntent createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getCacheDir(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { void <init>(android.text.Spannable,android.text.method.PasswordTransformationMethod); }
-keepclassmembers class android.app.PendingIntent$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.content.ContextWrapper { java.io.File[] getExternalMediaDirs(); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getExternalCacheDir(); }
-keepclassmembers class android.webkit.WebView { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDir(java.lang.String,int); }
-keepclassmembers class java.text.NumberFormat { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String name(); }
-keepclassmembers class android.webkit.WebView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void removeCallbacksLocked(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { void run(); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String namespace(); }
-keepclassmembers class android.widget.AdapterView { android.widget.AdapterView$OnItemSelectedListener getOnItemSelectedListener(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod$Visible { android.text.method.PasswordTransformationMethod access$000(android.text.method.PasswordTransformationMethod$Visible); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String localName(); }
-keepclassmembers class android.widget.AdapterView { void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener); }
-keepclassmembers class android.webkit.WebView { boolean setFrame(int,int,int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { int model(); }
-keepclassmembers class android.content.ContextWrapper { android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase$CursorFactory,android.database.DatabaseErrorHandler); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { int flags(); }
-keepclassmembers class android.webkit.WebView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { org.ccil.cowan.tagsoup.AttributesImpl atts(); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int); }
-keepclassmembers class android.webkit.WebView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class java.text.NumberFormat { java.lang.String format(double); }
-keepclassmembers class android.content.ContextWrapper { java.io.File getDatabasePath(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { org.ccil.cowan.tagsoup.ElementType parent(); }
-keepclassmembers class android.content.ContentUris { android.net.Uri withAppendedId(android.net.Uri,long); }
-keepclassmembers class android.content.ContextWrapper { java.lang.String[] databaseList(); }
-keepclassmembers class android.content.ContextWrapper { boolean deleteDatabase(java.lang.String); }
-keepclassmembers class android.view.Choreographer$CallbackQueue { void <init>(android.view.Choreographer,android.view.Choreographer$1); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View); }
-keepclassmembers class java.text.NumberFormat { java.lang.String format(long); }
-keepclassmembers class android.webkit.WebView { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setAttribute(org.ccil.cowan.tagsoup.AttributesImpl,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.io.StreamCorruptedException { void <init>(); }
-keepclassmembers class android.widget.AdapterView { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable getWallpaper(); }
-keepclassmembers class android.content.ContentUris { android.net.Uri$Builder appendId(android.net.Uri$Builder,long); }
-keepclassmembers class android.webkit.WebView { void onMeasure(int,int); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumWidth(); }
-keepclassmembers class java.text.NumberFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class android.widget.AdapterView { void removeView(android.view.View); }
-keepclassmembers class android.content.ContextWrapper { int getWallpaperDesiredMinimumHeight(); }
-keepclassmembers class java.io.StreamCorruptedException { void <init>(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { android.graphics.drawable.Drawable peekWallpaper(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { boolean canContain(org.ccil.cowan.tagsoup.ElementType); }
-keepclassmembers class android.webkit.WebView { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.Bitmap); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(java.io.InputStream); }
-keepclassmembers class android.content.ContextWrapper { void setWallpaper(android.graphics.Bitmap); }
-keepclassmembers class android.webkit.WebView { void setBackgroundColor(int); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,android.graphics.Bitmap); }
-keepclassmembers class java.text.FieldPosition { void <init>(java.text.Format$Field); }
-keepclassmembers class android.content.ContextWrapper { void clearWallpaper(); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,android.graphics.Bitmap,int); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class java.text.FieldPosition { void <init>(int); }
-keepclassmembers class android.widget.AdapterView { void removeAllViews(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent { void <clinit>(); }
-keepclassmembers class android.webkit.WebView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class android.widget.AdapterView { int getSelectedItemPosition(); }
-keepclassmembers class android.content.ContextWrapper { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.widget.AdapterView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.webkit.WebView { void setLayerType(int,android.graphics.Paint); }
-keepclassmembers class android.content.ContextWrapper { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.widget.AdapterView { java.lang.Object getSelectedItem(); }
-keepclassmembers class android.webkit.WebView { void onStartTemporaryDetach(); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[]); }
-keepclassmembers class android.widget.AdapterView { long getSelectedItemId(); }
-keepclassmembers class android.webkit.WebView { void onFinishTemporaryDetach(); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { java.lang.String normalize(java.lang.String); }
-keepclassmembers class android.widget.AdapterView { int getCount(); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.Bitmap,int); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getIntegerInstance(); }
-keepclassmembers class android.content.ContextWrapper { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setAttribute(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class java.text.FieldPosition { int getEndIndex(); }
-keepclassmembers class java.text.FieldPosition { int getField(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getIntegerInstance(java.util.Locale); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable,int); }
-keepclassmembers class java.text.FieldPosition { java.text.Format$Field getFieldAttribute(); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.util.Locale); }
-keepclassmembers class android.content.ContextWrapper { void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class android.content.ContextWrapper { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.ElementType { void setParent(org.ccil.cowan.tagsoup.ElementType); }
-keepclassmembers class java.text.NumberFormat { int getMaximumFractionDigits(); }
-keepclassmembers class java.text.NumberFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.graphics.drawable.Drawable,java.lang.String,int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <init>(org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getInstance(java.lang.String,java.util.Locale); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser$LookaheadSuccess { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class android.widget.AdapterView { int getLastVisiblePosition(); }
-keepclassmembers class java.text.NumberFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class android.widget.AdapterView { int getFirstVisiblePosition(); }
-keepclassmembers class android.widget.AdapterView { int getPositionForView(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <init>(org.apache.harmony.security.x501.Name); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getNumberInstance(java.util.Locale); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser$LookaheadSuccess { void <init>(org.apache.james.mime4j.field.address.AddressListParser$1); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,android.net.Uri); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcast(android.content.Intent,java.lang.String,int); }
-keepclassmembers class java.text.FieldPosition { void setBeginIndex(int); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getPercentInstance(java.util.Locale); }
-keepclassmembers class java.text.FieldPosition { void setEndIndex(int); }
-keepclassmembers class java.text.NumberFormat { java.text.NumberFormat getPercentInstance(); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { org.apache.harmony.security.x509.GeneralNames access$000(org.apache.harmony.security.x509.DistributionPointName); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,int,int); }
-keepclassmembers class android.widget.AdapterView { void setFocusable(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { org.apache.harmony.security.x501.Name access$100(org.apache.harmony.security.x509.DistributionPointName); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.view.AbsSavedState$2 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$10 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.widget.AdapterView { void setFocusableInTouchMode(boolean); }
-keepclassmembers class android.webkit.WebView { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$10 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,android.net.Uri,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void <init>(android.graphics.drawable.DrawableContainer$DrawableContainerState,android.graphics.drawable.DrawableContainer,android.content.res.Resources); }
-keepclassmembers class android.content.ContextWrapper { void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String); }
-keepclassmembers class android.text.style.ImageSpan { void <init>(android.content.Context,int); }
-keepclassmembers class android.widget.AdapterView { boolean isInFilterMode(); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.widget.AdapterView { void checkFocus(); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class java.text.NumberFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class java.text.NumberFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.content.ContextWrapper { void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory { void <init>(); }
-keepclassmembers class java.text.NumberFormat { void setMinimumFractionDigits(int); }
-keepclassmembers class java.text.NumberFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class org.apache.http.impl.entity.EntitySerializer { void <init>(org.apache.http.entity.ContentLengthStrategy); }
-keepclassmembers class android.widget.AdapterView { void updateEmptyStatus(boolean); }
-keepclassmembers class java.text.NumberFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcast(android.content.Intent); }
-keepclassmembers class org.apache.http.impl.entity.EntitySerializer { java.io.OutputStream doSerialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPointName { void <clinit>(); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcast(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.ContextWrapper { void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.widget.AdapterView { java.lang.Object getItemAtPosition(int); }
-keepclassmembers class android.widget.AdapterView { void selectionChanged(); }
-keepclassmembers class android.widget.AdapterView { long getItemIdAtPosition(int); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class android.widget.AdapterView { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class android.content.ContextWrapper { void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int addChild(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.ContextWrapper { android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler); }
-keepclassmembers class android.widget.AdapterView { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.AdapterView { void fireOnSelected(); }
-keepclassmembers class android.content.ContextWrapper { void unregisterReceiver(android.content.BroadcastReceiver); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChangingConfigurations(); }
-keepclassmembers class java.text.NumberFormat { void <clinit>(); }
-keepclassmembers class com.jcraft.jzlib.Adler32 { long adler32(long,byte[],int,int); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startService(android.content.Intent); }
-keepclassmembers class android.widget.AdapterView { void dispatchOnItemSelected(); }
-keepclassmembers class org.apache.http.impl.entity.EntitySerializer { void serialize(org.apache.http.io.SessionOutputBuffer,org.apache.http.HttpMessage,org.apache.http.HttpEntity); }
-keepclassmembers class android.content.ContextWrapper { boolean stopService(android.content.Intent); }
-keepclassmembers class android.content.ContextWrapper { android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class com.jcraft.jzlib.Adler32 { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getChildCount(); }
-keepclassmembers class android.view.View { void <init>(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void createAllFutures(); }
-keepclassmembers class android.widget.AdapterView { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.ContextWrapper { boolean bindService(android.content.Intent,android.content.ServiceConnection,int); }
-keepclassmembers class android.content.ContextWrapper { boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle); }
-keepclassmembers class android.widget.AdapterView { void performAccessibilityActionsOnSelected(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getCapacity(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$1 { void initializeComponent(android.app.Application); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$6 { void <init>(com.fsck.k9.activity.FolderList$FolderListHandler,boolean); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.ContextWrapper { void unbindService(android.content.ServiceConnection); }
-keepclassmembers class android.widget.AdapterView { boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$1 { void <init>(com.fsck.k9.provider.MessageProvider); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.drawable.Drawable getChild(int); }
-keepclassmembers class android.widget.AdapterView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.content.ContextWrapper { boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.View { android.util.SparseArray getAttributeMap(); }
-keepclassmembers class android.widget.AdapterView { boolean isScrollableForAccessibility(); }
-keepclassmembers class com.fsck.k9.activity.MessageList$StorageListenerImplementation { void <init>(com.fsck.k9.activity.MessageList); }
-keepclassmembers class android.view.View { void saveAttributeData(android.util.AttributeSet,android.content.res.TypedArray); }
-keepclassmembers class libcore.io.BlockGuardOs { void <init>(libcore.io.Os); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor tagSocket(java.io.FileDescriptor); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setLayoutDirection(int); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$6 { void run(); }
-keepclassmembers class com.fsck.k9.activity.MessageList$StorageListenerImplementation { void onUnmount(java.lang.String); }
-keepclassmembers class android.widget.AdapterView { void handleDataChanged(); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor accept(java.io.FileDescriptor,java.net.InetSocketAddress); }
-keepclassmembers class android.content.ContextWrapper { int checkPermission(java.lang.String,int,int,android.os.IBinder); }
-keepclassmembers class android.content.ContextWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageList$StorageListenerImplementation { void onMount(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canApplyTheme(); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingPermission(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageList$StorageListenerImplementation { void <init>(com.fsck.k9.activity.MessageList,com.fsck.k9.activity.MessageList$1); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECPointContext { void <init>(com.android.org.conscrypt.OpenSSLECGroupContext,long); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfPermission(java.lang.String); }
-keepclassmembers class libcore.io.BlockGuardOs { void untagSocket(java.io.FileDescriptor); }
-keepclassmembers class android.widget.AdapterView { boolean canAnimate(); }
-keepclassmembers class android.widget.AdapterView { void checkSelectionChanged(); }
-keepclassmembers class libcore.io.BlockGuardOs { void chmod(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { android.graphics.Rect getConstantPadding(); }
-keepclassmembers class android.widget.AdapterView { int findSyncPosition(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setVariablePadding(boolean); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean access(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void mutate(); }
-keepclassmembers class android.content.ContextWrapper { void enforcePermission(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class libcore.io.BlockGuardOs { boolean isLingerSocket(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.BlockGuardOs { void close(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.BlockGuardOs { void connect(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class android.content.ContextWrapper { void grantUriPermission(java.lang.String,android.net.Uri,int); }
-keepclassmembers class android.view.View { java.lang.String toString(); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingPermission(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void revokeUriPermission(android.net.Uri,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECPointContext { long getContext(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isConstantSize(); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class android.util.DisplayMetrics { void <init>(); }
-keepclassmembers class android.widget.AdapterView { int lookForSelectablePosition(int,boolean); }
-keepclassmembers class android.widget.AdapterView { void setSelectedPositionInt(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantWidth(); }
-keepclassmembers class android.util.DisplayMetrics { void setTo(android.util.DisplayMetrics); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantHeight(); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder); }
-keepclassmembers class android.widget.AdapterView { void setNextSelectedPositionInt(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumWidth(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getConstantMinimumHeight(); }
-keepclassmembers class libcore.io.BlockGuardOs { void fsync(java.io.FileDescriptor); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void <init>(android.view.View); }
-keepclassmembers class android.widget.AdapterView { void rememberSyncState(); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,int,int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void computeConstantSize(); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingUriPermission(android.net.Uri,int); }
-keepclassmembers class android.util.DisplayMetrics { void setToDefaults(); }
-keepclassmembers class android.content.ContextWrapper { int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setConstantSize(boolean); }
-keepclassmembers class android.content.IContentService$Stub$Proxy { boolean getMasterSyncAutomatically(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setEnterFadeDuration(int); }
-keepclassmembers class android.content.ContextWrapper { int checkCallingOrSelfUriPermission(android.net.Uri,int); }
-keepclassmembers class android.widget.AdapterView { android.os.Parcelable access$100(android.widget.AdapterView); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfPermission(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void setExitFadeDuration(int); }
-keepclassmembers class libcore.io.BlockGuardOs { long lseek(java.io.FileDescriptor,long,int); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String); }
-keepclassmembers class android.widget.AdapterView { void access$000(android.widget.AdapterView,android.os.Parcelable); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { int getOpacity(); }
-keepclassmembers class com.fsck.k9.preferences.Settings$PseudoEnumSetting { void <init>(java.lang.Object); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setEnabled(boolean); }
-keepclassmembers class com.fsck.k9.preferences.Settings$PseudoEnumSetting { java.lang.Object fromPrettyString(java.lang.String); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean isStateful(); }
-keepclassmembers class libcore.io.BlockGuardOs { void mkdir(java.lang.String,int); }
-keepclassmembers class android.content.ContextWrapper { void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setMaximumVelocity(float,float); }
-keepclassmembers class com.fsck.k9.ui.dialog.ApgDeprecationWarningDialog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void growArray(int,int); }
-keepclassmembers class android.content.ContextWrapper { void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { boolean canConstantState(); }
-keepclassmembers class com.fsck.k9.preferences.Settings$PseudoEnumSetting { java.lang.String toPrettyString(java.lang.Object); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator); }
-keepclassmembers class android.view.View { void initializeFadingEdgeInternal(android.content.res.TypedArray); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setRelativeVelocity(float,float); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContext(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.ui.dialog.ApgDeprecationWarningDialog$1 { void <init>(com.fsck.k9.ui.dialog.ApgDeprecationWarningDialog); }
-keepclassmembers class android.animation.PathKeyframes { void <init>(android.graphics.Path,float); }
-keepclassmembers class android.view.View { int getVerticalFadingEdgeLength(); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor open(java.lang.String,int,int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setMinimumVelocity(float,float); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setMaximumEdges(float,float); }
-keepclassmembers class android.animation.StateListAnimator$Tuple { void <init>(int[],android.animation.Animator,android.animation.StateListAnimator$1); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setActivationDelay(int); }
-keepclassmembers class android.view.View { int getHorizontalFadingEdgeLength(); }
-keepclassmembers class libcore.io.BlockGuardOs { int poll(android.system.StructPollfd[],int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setRelativeEdges(float,float); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setRampUpDuration(int); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setEdgeType(int); }
-keepclassmembers class android.view.View { int getVerticalScrollbarWidth(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState { void access$000(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class com.fsck.k9.service.RemoteControlReceiver { void <init>(); }
-keepclassmembers class libcore.io.BlockGuardOs { int pread(java.io.FileDescriptor,java.nio.ByteBuffer,long); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper setRampDownDuration(int); }
-keepclassmembers class android.view.View { int getHorizontalScrollbarHeight(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class android.content.ContextWrapper { int getUserId(); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <init>(); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createDisplayContext(android.view.Display); }
-keepclassmembers class android.animation.PathKeyframes { java.lang.Object getValue(float); }
-keepclassmembers class com.fsck.k9.service.RemoteControlReceiver { java.lang.Integer receive(android.content.Context,android.content.Intent,java.lang.Integer); }
-keepclassmembers class android.content.ContextWrapper { android.content.Context createConfigurationContext(android.content.res.Configuration); }
-keepclassmembers class android.view.View { void initializeScrollbarsInternal(android.content.res.TypedArray); }
-keepclassmembers class android.util.DisplayMetrics { int getDeviceDensity(); }
-keepclassmembers class android.util.DisplayMetrics { void <clinit>(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean shouldAnimate(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isInherited(java.lang.Class); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF interpolateInRange(float,int,int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void startAnimating(); }
-keepclassmembers class libcore.io.BlockGuardOs { int read(java.io.FileDescriptor,java.nio.ByteBuffer); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$6 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$6 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.ConnectionPool$4 { void <clinit>(); }
-keepclassmembers class libcore.io.BlockGuardOs { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.transition.ChangeTransform { void <init>(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void requestStop(); }
-keepclassmembers class android.view.View { void initScrollCache(); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { float computeTargetVelocity(int,float,float,float); }
-keepclassmembers class android.transition.ChangeTransform { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.text.TextDirectionHeuristics$FirstStrong { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo47 { void createThreadsTable(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.View { android.view.View$ListenerInfo getListenerInfo(); }
-keepclassmembers class android.view.View { int getVerticalScrollbarPosition(); }
-keepclassmembers class android.content.ContextWrapper { boolean isRestricted(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { float getEdgeValue(float,float,float,float); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context); }
-keepclassmembers class android.view.View { void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isAnnotationPresent(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.mail.internet.DecoderUtil { java.lang.String decodeB(java.lang.String,java.lang.String); }
-keepclassmembers class android.transition.ChangeTransform { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.hardware.display.IDisplayManager$Stub$Proxy { void registerCallback(android.hardware.display.IDisplayManagerCallback); }
-keepclassmembers class android.animation.PathKeyframes { android.graphics.PointF pointForIndex(int); }
-keepclassmembers class android.widget.RelativeLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.view.View { void removeOnLayoutChangeListener(android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.content.ContextWrapper { android.view.DisplayAdjustments getDisplayAdjustments(int); }
-keepclassmembers class android.view.View { void addOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener); }
-keepclassmembers class com.fsck.k9.mail.internet.DecoderUtil { java.lang.String decodeEncodedWord(java.lang.String,int,int,com.fsck.k9.mail.Message); }
-keepclassmembers class android.animation.PathKeyframes { float interpolate(float,float,float); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.Annotation getAnnotation(java.lang.reflect.AnnotatedElement,java.lang.Class); }
-keepclassmembers class android.view.View { void removeOnAttachStateChangeListener(android.view.View$OnAttachStateChangeListener); }
-keepclassmembers class libcore.io.BlockGuardOs { int recvfrom(java.io.FileDescriptor,byte[],int,int,int,java.net.InetSocketAddress); }
-keepclassmembers class libcore.io.BlockGuardOs { void remove(java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createYFloatKeyframes(); }
-keepclassmembers class libcore.io.BlockGuardOs { void rename(java.lang.String,java.lang.String); }
-keepclassmembers class android.transition.ChangeTransform { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createXIntKeyframes(); }
-keepclassmembers class android.transition.ChangeTransform { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { int constrain(int,int,int); }
-keepclassmembers class android.widget.RelativeLayout { void queryCompatibilityModes(android.content.Context); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$IntKeyframes createYIntKeyframes(); }
-keepclassmembers class android.view.View { void setOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { float constrainEdgeValue(float,float); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isDeclaredAnnotationPresent(java.lang.reflect.AnnotatedElement,java.lang.Class); }
-keepclassmembers class android.widget.RelativeLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class android.view.View { boolean hasOnClickListeners(); }
-keepclassmembers class android.widget.RelativeLayout { void initFromAttributes(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.animation.PathKeyframes { android.animation.Keyframes$FloatKeyframes createXFloatKeyframes(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void cancelTargetTouch(); }
-keepclassmembers class android.animation.PathKeyframes { void <clinit>(); }
-keepclassmembers class android.view.View { void setOnLongClickListener(android.view.View$OnLongClickListener); }
-keepclassmembers class android.widget.ListPopupWindow$2 { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class android.view.View { void setOnFocusChangeListener(android.view.View$OnFocusChangeListener); }
-keepclassmembers class libcore.reflect.AnnotationAccess { int getAnnotationSetOffset(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { float constrain(float,float,float); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$100(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class libcore.io.BlockGuardOs { int sendto(java.io.FileDescriptor,byte[],int,int,int,java.net.InetAddress,int); }
-keepclassmembers class android.view.View { void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener); }
-keepclassmembers class android.animation.PathKeyframes { java.util.ArrayList access$200(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$200(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$202(com.android.internal.widget.AutoScrollHelper,boolean); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool { void <init>(); }
-keepclassmembers class android.view.View { boolean performClick(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class getDexClass(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class android.widget.RelativeLayout { int getBaseline(); }
-keepclassmembers class android.view.GestureDetector { void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$400(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool { com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key create(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$102(com.android.internal.widget.AutoScrollHelper,boolean); }
-keepclassmembers class libcore.io.BlockGuardOs { java.io.FileDescriptor socket(int,int,int); }
-keepclassmembers class android.widget.RelativeLayout { void sortChildren(); }
-keepclassmembers class android.widget.RelativeLayout { void requestLayout(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$500(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool { com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key get(int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.view.GestureDetector { void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { boolean access$502(com.android.internal.widget.AutoScrollHelper,boolean); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { android.view.View access$700(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStatVfs statvfs(java.lang.String); }
-keepclassmembers class libcore.io.BlockGuardOs { android.system.StructStat stat(java.lang.String); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void access$600(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class android.widget.RelativeLayout { void onMeasure(int,int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { int access$800(int,int,int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { float access$900(float,float,float); }
-keepclassmembers class com.fsck.k9.mail.internet.DecoderUtil { java.lang.String decodeEncodedWords(java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class android.view.View { boolean showContextMenu(); }
-keepclassmembers class android.view.View { boolean performButtonActionOnTouchDown(android.view.MotionEvent); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { void <clinit>(); }
-keepclassmembers class libcore.io.BlockGuardOs { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.view.View { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper { com.android.internal.widget.AutoScrollHelper$ClampedScroller access$300(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool { com.bumptech.glide.load.engine.bitmap_recycle.Poolable create(); }
-keepclassmembers class android.view.GestureDetector { void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener); }
-keepclassmembers class android.view.GestureDetector { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.mail.internet.DecoderUtil { java.lang.String decodeQ(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class getEnclosingClass(java.lang.Class); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.reflect.AccessibleObject getEnclosingMethodOrConstructor(java.lang.Class); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect); }
-keepclassmembers class android.view.View { boolean showContextMenu(float,float,int); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView$HierarchyTreeChangeListener { void <init>(com.fsck.k9.view.NonLockingScrollView); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Class[] getExceptions(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView$HierarchyTreeChangeListener { void onChildViewAdded(android.view.View,android.view.View); }
-keepclassmembers class android.view.View { void setOnTouchListener(android.view.View$OnTouchListener); }
-keepclassmembers class libcore.reflect.AnnotationAccess { int getInnerClassFlags(java.lang.Class,int); }
-keepclassmembers class android.view.View { void clearFocus(); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView$HierarchyTreeChangeListener { void onChildViewRemoved(android.view.View,android.view.View); }
-keepclassmembers class android.view.View { void clearFocusInternal(android.view.View,boolean,boolean); }
-keepclassmembers class android.view.View { boolean requestRectangleOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class android.view.GestureDetector { void init(android.content.Context); }
-keepclassmembers class com.getkeepsafe.relinker.SystemLibraryLoader { void loadLibrary(java.lang.String); }
-keepclassmembers class com.getkeepsafe.relinker.SystemLibraryLoader { void loadPath(java.lang.String); }
-keepclassmembers class com.getkeepsafe.relinker.SystemLibraryLoader { java.lang.String mapLibraryName(java.lang.String); }
-keepclassmembers class android.view.View { void notifyGlobalFocusCleared(android.view.View); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Object getDefaultValue(java.lang.reflect.Method); }
-keepclassmembers class android.view.View { boolean rootViewRequestFocus(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.String getInnerClassName(java.lang.Class); }
-keepclassmembers class com.getkeepsafe.relinker.SystemLibraryLoader { void <init>(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.EncodedValueReader getAnnotationReader(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String,int); }
-keepclassmembers class android.view.View { boolean hasFocus(); }
-keepclassmembers class android.graphics.BitmapShader { void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode); }
-keepclassmembers class com.getkeepsafe.relinker.SystemLibraryLoader { java.lang.String unmapLibraryName(java.lang.String); }
-keepclassmembers class android.view.View { boolean hasFocusable(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.String getSignature(java.lang.reflect.AnnotatedElement); }
-keepclassmembers class android.provider.Settings$Global { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout$1 { void <clinit>(); }
-keepclassmembers class android.view.View { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class libcore.reflect.AnnotationAccess { boolean isAnonymousClass(java.lang.Class); }
-keepclassmembers class android.transition.ChangeTransform { void <clinit>(); }
-keepclassmembers class android.graphics.BitmapShader { android.graphics.Shader copy(); }
-keepclassmembers class com.fsck.k9.mail.filter.Hex { char[] encodeHex(byte[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage$1 { void <init>(com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class android.graphics.BitmapShader { long nativeCreate(long,int,int); }
-keepclassmembers class com.fsck.k9.mail.filter.Hex { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage$1 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage$1 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.support.v4.content.FileProvider { void <clinit>(); }
-keepclassmembers class android.support.v4.content.FileProvider { void <init>(); }
-keepclassmembers class android.view.View { void sendAccessibilityEvent(int); }
-keepclassmembers class android.support.v4.content.FileProvider { java.io.File buildPath(java.io.File,java.lang.String[]); }
-keepclassmembers class android.widget.BaseAdapter { void <init>(); }
-keepclassmembers class com.getkeepsafe.relinker.SystemLibraryLoader { java.lang.String[] supportedAbis(); }
-keepclassmembers class android.view.View { void unFocus(android.view.View); }
-keepclassmembers class android.view.View { void announceForAccessibility(java.lang.CharSequence); }
-keepclassmembers class android.widget.BaseAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.BaseAdapter { void notifyDataSetChanged(); }
-keepclassmembers class android.widget.BaseAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class org.apache.http.conn.params.ConnManagerParams { long getTimeout(org.apache.http.params.HttpParams); }
-keepclassmembers class libcore.reflect.AnnotationAccess { com.android.dex.EncodedValueReader getOnlyAnnotationValue(com.android.dex.Dex,java.lang.reflect.AnnotatedElement,java.lang.String); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEnabled(int); }
-keepclassmembers class android.widget.BaseAdapter { void notifyDataSetInvalidated(); }
-keepclassmembers class android.support.v4.content.FileProvider { java.lang.Object[] copyOf(java.lang.Object[],int); }
-keepclassmembers class android.view.View { void sendAccessibilityEventInternal(int); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$6 { void <init>(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.BaseAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$6 { void run(); }
-keepclassmembers class android.widget.BaseAdapter { int getViewTypeCount(); }
-keepclassmembers class android.widget.BaseAdapter { boolean hasStableIds(); }
-keepclassmembers class android.widget.BaseAdapter { boolean isEmpty(); }
-keepclassmembers class android.support.v4.content.FileProvider { android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.reflect.AccessibleObject indexToMethod(java.lang.Class,com.android.dex.Dex,int); }
-keepclassmembers class com.bumptech.glide.disklrucache.StrictLineReader$1 { java.lang.String toString(); }
-keepclassmembers class org.apache.http.conn.params.ConnManagerParams { void <clinit>(); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.bumptech.glide.disklrucache.StrictLineReader$1 { void <init>(com.bumptech.glide.disklrucache.StrictLineReader,int); }
-keepclassmembers class android.view.View { void sendAccessibilityEventUncheckedInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.content.FileProvider { java.lang.String[] copyOf(java.lang.String[],int); }
-keepclassmembers class android.view.View { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.BaseAdapter { int getItemViewType(int); }
-keepclassmembers class com.fsck.k9.helper.Contacts { void <clinit>(); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody$BinaryTempFileBodyInputStream { void close(); }
-keepclassmembers class com.fsck.k9.search.SearchAccount { void <init>(java.lang.String,com.fsck.k9.search.LocalSearch,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.ProgressDialogFragment { com.fsck.k9.fragment.ProgressDialogFragment newInstance(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.Contacts { void <init>(android.content.Context); }
-keepclassmembers class android.view.GestureDetector { void cancelTaps(); }
-keepclassmembers class android.view.View { void onPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody$BinaryTempFileBodyInputStream { void <init>(com.fsck.k9.mail.internet.BinaryTempFileBody,java.io.InputStream); }
-keepclassmembers class android.view.GestureDetector { void cancel(); }
-keepclassmembers class com.fsck.k9.helper.Contacts { android.database.Cursor getContactByAddress(java.lang.String); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.support.v4.content.FileProvider { android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File); }
-keepclassmembers class com.fsck.k9.fragment.ProgressDialogFragment { void onCancel(android.content.DialogInterface); }
-keepclassmembers class com.android.okhttp.HttpsHandler { com.android.okhttp.OkHttpClient newOkHttpClient(java.net.Proxy); }
-keepclassmembers class android.provider.Settings$Global { void <clinit>(); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.android.okhttp.HttpsHandler { void <init>(); }
-keepclassmembers class android.view.GestureDetector { boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class android.support.v4.content.FileProvider { int modeToMode(java.lang.String); }
-keepclassmembers class com.android.okhttp.HttpsHandler { com.android.okhttp.OkHttpClient createHttpsOkHttpClient(java.net.Proxy); }
-keepclassmembers class com.fsck.k9.helper.Contacts { com.fsck.k9.helper.Contacts getInstance(android.content.Context); }
-keepclassmembers class com.fsck.k9.fragment.ProgressDialogFragment { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.helper.Contacts { void addPhoneContact(java.lang.String); }
-keepclassmembers class com.android.okhttp.HttpsHandler { void <clinit>(); }
-keepclassmembers class com.fsck.k9.search.SearchAccount { java.lang.String getDescription(); }
-keepclassmembers class android.text.Layout$Ellipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.text.Layout$Ellipsizer { char charAt(int); }
-keepclassmembers class com.fsck.k9.search.SearchAccount { com.fsck.k9.search.LocalSearch getRelatedSearch(); }
-keepclassmembers class com.fsck.k9.helper.Contacts { android.content.Intent contactPickerIntent(); }
-keepclassmembers class org.apache.james.mime4j.field.MailboxListFieldImpl { void <clinit>(); }
-keepclassmembers class com.fsck.k9.search.SearchAccount { java.lang.String getUuid(); }
-keepclassmembers class android.text.Layout$Ellipsizer { void getChars(int,int,char[],int); }
-keepclassmembers class android.widget.RelativeLayout { void alignBaseline(android.view.View,android.widget.RelativeLayout$LayoutParams); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$6 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,com.android.okio.OkBuffer,int,boolean); }
-keepclassmembers class org.apache.james.mime4j.field.MailboxListFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.fsck.k9.helper.Contacts { void createContact(com.fsck.k9.mail.Address); }
-keepclassmembers class android.support.v4.content.FileProvider { android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String); }
-keepclassmembers class android.text.Layout$Ellipsizer { int length(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$6 { void execute(); }
-keepclassmembers class com.fsck.k9.helper.Contacts { java.lang.String getNameForAddress(java.lang.String); }
-keepclassmembers class android.text.Layout$Ellipsizer { java.lang.String toString(); }
-keepclassmembers class android.view.GestureDetector { void dispatchLongPress(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.annotation.Annotation toAnnotationInstance(java.lang.Class,com.android.dex.Dex,java.lang.Class,com.android.dex.EncodedValueReader); }
-keepclassmembers class android.view.GestureDetector { android.view.MotionEvent access$000(android.view.GestureDetector); }
-keepclassmembers class com.fsck.k9.helper.Contacts { android.net.Uri getPhotoUri(java.lang.String); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.fsck.k9.search.SearchAccount { com.fsck.k9.search.SearchAccount createUnifiedInboxAccount(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.UnreadWidgetConfiguration { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.UnreadWidgetConfiguration { void deleteWidgetConfiguration(android.content.Context,int); }
-keepclassmembers class android.view.GestureDetector { void access$200(android.view.GestureDetector); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$6 { void <init>(com.fsck.k9.activity.Accounts$AccountsHandler,int); }
-keepclassmembers class android.view.GestureDetector { android.view.GestureDetector$OnDoubleTapListener access$300(android.view.GestureDetector); }
-keepclassmembers class android.view.View { void getBoundsOnScreen(android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.fragment.ProgressDialogFragment { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$6 { void run(); }
-keepclassmembers class android.view.GestureDetector { boolean access$400(android.view.GestureDetector); }
-keepclassmembers class android.view.View { void getBoundsOnScreen(android.graphics.Rect,boolean); }
-keepclassmembers class android.view.GestureDetector { android.view.GestureDetector$OnGestureListener access$100(android.view.GestureDetector); }
-keepclassmembers class android.widget.RelativeLayout { void measureChild(android.view.View,android.widget.RelativeLayout$LayoutParams,int,int); }
-keepclassmembers class android.view.GestureDetector { boolean access$502(android.view.GestureDetector,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.UnreadWidgetConfiguration { java.lang.String getAccountUuid(android.content.Context,int); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedServerSettings { void <init>(com.fsck.k9.preferences.SettingsImporter$ImportedServer); }
-keepclassmembers class android.view.GestureDetector { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$25$1 { void <init>(com.fsck.k9.controller.MessagingController$25,com.fsck.k9.Account,java.util.List); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedServerSettings { com.fsck.k9.mail.ConnectionSecurity convertConnectionSecurity(java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$25$1 { void run(); }
-keepclassmembers class android.widget.RelativeLayout { void measureChildHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int,int); }
-keepclassmembers class com.fsck.k9.activity.UnreadWidgetConfiguration { void onCreate(android.os.Bundle); }
-keepclassmembers class java.util.Dictionary { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.AccountList$LoadAccounts { void <init>(com.fsck.k9.activity.AccountList); }
-keepclassmembers class libcore.reflect.AnnotationAccess { java.lang.Object decodeValue(java.lang.Class,java.lang.Class,com.android.dex.Dex,com.android.dex.EncodedValueReader); }
-keepclassmembers class com.fsck.k9.search.SearchAccount { com.fsck.k9.search.SearchAccount createAllMessagesAccount(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.AccountList$LoadAccounts { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.mail.internet.BinaryTempFileBody$BinaryTempFileBodyInputStream { void closeWithoutDeleting(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SenderExtractor { void <init>(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedServerSettings { int convertPort(java.lang.String); }
-keepclassmembers class android.support.v4.content.FileProvider { void attachInfo(android.content.Context,android.content.pm.ProviderInfo); }
-keepclassmembers class com.fsck.k9.activity.AccountList$LoadAccounts { java.util.List doInBackground(java.lang.Void[]); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SenderExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedServerSettings { java.util.Map getExtra(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$1 { void <init>(com.bumptech.glide.disklrucache.DiskLruCache); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SenderExtractor { java.lang.CharSequence getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class com.fsck.k9.activity.AccountList$LoadAccounts { void onPostExecute(java.lang.Object); }
-keepclassmembers class com.fsck.k9.helper.Contacts { boolean isAnyInContacts(com.fsck.k9.mail.Address[]); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$1 { java.lang.Object call(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$1 { java.lang.Void call(); }
-keepclassmembers class com.fsck.k9.activity.AccountList$LoadAccounts { void onPostExecute(java.util.List); }
-keepclassmembers class android.view.View { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.bumptech.glide.request.animation.NoAnimation$NoAnimationFactory { void <init>(); }
-keepclassmembers class com.bumptech.glide.request.animation.NoAnimation$NoAnimationFactory { com.bumptech.glide.request.animation.GlideAnimation build(boolean,boolean); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$2 { void <init>(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class com.fsck.k9.helper.Contacts { boolean isInContacts(java.lang.String); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$2 { void onAnimationEnd(); }
-keepclassmembers class android.text.SpannableStringInternal { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$ViewAttachmentAsyncTask { void <init>(com.fsck.k9.ui.messageview.AttachmentController); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.Boolean truthValue(boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$ViewAttachmentAsyncTask { void <init>(com.fsck.k9.ui.messageview.AttachmentController,com.fsck.k9.ui.messageview.AttachmentController$1); }
-keepclassmembers class com.fsck.k9.helper.Contacts { void markAsContacted(com.fsck.k9.mail.Address[]); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$ViewAttachmentAsyncTask { void viewAttachment(android.content.Intent); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class android.widget.RelativeLayout { int getChildMeasureSpec(int,int,int,int,int,int,int,int); }
-keepclassmembers class android.support.v4.content.FileProvider { android.net.Uri insert(android.net.Uri,android.content.ContentValues); }
-keepclassmembers class android.support.v4.content.FileProvider { boolean onCreate(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { void <init>(android.content.Context); }
-keepclassmembers class android.support.v4.content.FileProvider { android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String); }
-keepclassmembers class android.database.StaleDataException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.content.FileProvider { android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class android.text.SpannableStringInternal { int length(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence); }
-keepclassmembers class android.text.SpannableStringInternal { char charAt(int); }
-keepclassmembers class android.database.CursorWindowAllocationException { void <init>(java.lang.String); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String toString(); }
-keepclassmembers class android.text.SpannableStringInternal { void getChars(int,int,char[],int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { void setFlag(int,boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$ViewAttachmentAsyncTask { android.content.Intent doInBackground(java.lang.Void[]); }
-keepclassmembers class android.widget.RelativeLayout { boolean positionChildHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int,boolean); }
-keepclassmembers class android.text.SpannableStringInternal { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$ViewAttachmentAsyncTask { void onPostExecute(android.content.Intent); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$ViewAttachmentAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$ViewAttachmentAsyncTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setProperty(java.lang.String,java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$ViewAttachmentAsyncTask { void onPreExecute(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$CurrentAttributes { void <init>(org.apache.harmony.xml.ExpatParser); }
-keepclassmembers class android.view.View { android.view.View findLabelForView(android.view.View,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.app.Notification build(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser$CurrentAttributes { void <init>(org.apache.harmony.xml.ExpatParser,org.apache.harmony.xml.ExpatParser$1); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { android.database.sqlite.SQLiteDatabase getDatabase(); }
-keepclassmembers class libcore.reflect.AnnotationAccess { void <clinit>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder extend(android.support.v4.app.NotificationCompat$Extender); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$RingtoneSetting { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$BuilderExtender getExtender(); }
-keepclassmembers class android.view.View { boolean isVisibleToUser(android.graphics.Rect); }
-keepclassmembers class android.support.v4.content.FileProvider { int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setContentHandler(org.xml.sax.ContentHandler); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { java.lang.Object[] getBindArgs(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.os.Bundle getExtras(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.activity.setup.SliderPreference { boolean access$000(com.fsck.k9.activity.setup.SliderPreference,java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { java.lang.String[] getColumnNames(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { android.database.sqlite.SQLiteSession getSession(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { int getConnectionFlags(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void onCorruption(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setCategory(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void parse(org.xml.sax.InputSource); }
-keepclassmembers class android.widget.RelativeLayout { boolean positionChildVertical(android.view.View,android.widget.RelativeLayout$LayoutParams,int,boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setColor(int); }
-keepclassmembers class android.view.View { android.view.View$AccessibilityDelegate getAccessibilityDelegate(); }
-keepclassmembers class android.view.View { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { java.lang.String getSql(); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$RingtoneSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentView { void onSaveButtonLongClick(); }
-keepclassmembers class com.fsck.k9.activity.setup.SliderPreference { android.view.View onCreateDialogView(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentView { void onViewButtonClick(); }
-keepclassmembers class android.view.View { int getAccessibilityViewId(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentView { void <init>(android.content.Context); }
-keepclassmembers class android.view.View { int getAccessibilityWindowId(); }
-keepclassmembers class android.view.View { void setAccessibilityDelegate(android.view.View$AccessibilityDelegate); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void bindString(int,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentView { void onSaveButtonClick(); }
-keepclassmembers class android.view.View { java.lang.CharSequence getContentDescription(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void setup(); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void clearBindings(); }
-keepclassmembers class com.fsck.k9.activity.setup.SliderPreference { java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { android.widget.ProgressBar$RefreshData obtain(int,int,boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentView { void onClick(android.view.View); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void bindAllArgsAsStrings(java.lang.String[]); }
-keepclassmembers class com.fsck.k9.activity.setup.SliderPreference { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.io.Reader getReader(org.xml.sax.InputSource); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentView { boolean onLongClick(android.view.View); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalBefore(int); }
-keepclassmembers class com.fsck.k9.activity.setup.SliderPreference { void onDialogClosed(boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { void recycle(); }
-keepclassmembers class android.view.View { void setAccessibilityTraversalAfter(int); }
-keepclassmembers class com.fsck.k9.activity.setup.SliderPreference { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.ProgressBar$RefreshData { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void bind(int,java.lang.Object); }
-keepclassmembers class android.widget.RelativeLayout { void applyHorizontalSizeRules(android.widget.RelativeLayout$LayoutParams,int,int[]); }
-keepclassmembers class com.fsck.k9.activity.setup.SliderPreference { void onSetInitialValue(boolean,java.lang.Object); }
-keepclassmembers class android.view.View { void setLabelFor(int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence); }
-keepclassmembers class android.view.View { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class android.widget.TimePickerClockDelegate$1 { void <init>(android.widget.TimePickerClockDelegate); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.io.InputStream getInputStream(java.lang.String,java.lang.String); }
-keepclassmembers class android.os.SystemProperties { java.lang.String native_get(java.lang.String,java.lang.String); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setGroup(java.lang.String); }
-keepclassmembers class java.util.HashMap$EntrySet { void <init>(java.util.HashMap); }
-keepclassmembers class android.os.SystemProperties { int native_get_int(java.lang.String,int); }
-keepclassmembers class android.os.SystemProperties { long native_get_long(java.lang.String,long); }
-keepclassmembers class android.view.View { void onFocusLost(); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void onAllReferencesReleased(); }
-keepclassmembers class android.os.SystemProperties { boolean native_get_boolean(java.lang.String,boolean); }
-keepclassmembers class java.util.HashMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setGroupSummary(boolean); }
-keepclassmembers class android.view.View { void resetPressedState(); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void adup(char[],int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setLights(int,int,int); }
-keepclassmembers class android.os.SystemProperties { java.lang.String get(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { boolean isFocused(); }
-keepclassmembers class android.os.SystemProperties { int getInt(java.lang.String,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void aval(char[],int,int); }
-keepclassmembers class android.view.View { android.view.View findFocus(); }
-keepclassmembers class android.text.SpannableStringInternal { void removeSpan(java.lang.Object); }
-keepclassmembers class java.util.HashMap$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.os.SystemProperties { void native_add_change_callback(); }
-keepclassmembers class java.util.HashMap$EntrySet { int size(); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanStart(java.lang.Object); }
-keepclassmembers class org.apache.http.client.CircularRedirectException { void <init>(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String expandEntities(java.lang.String); }
-keepclassmembers class android.os.SystemProperties { long getLong(java.lang.String,long); }
-keepclassmembers class android.database.sqlite.SQLiteProgram { void <clinit>(); }
-keepclassmembers class java.util.HashMap$EntrySet { boolean isEmpty(); }
-keepclassmembers class android.os.SystemProperties { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { void <init>(java.util.Enumeration,java.util.jar.JarFile); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanEnd(java.lang.Object); }
-keepclassmembers class android.widget.RelativeLayout { void applyVerticalSizeRules(android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setNumber(int); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { boolean hasMoreElements(); }
-keepclassmembers class android.view.View { void setScrollContainer(boolean); }
-keepclassmembers class java.util.HashMap$EntrySet { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { java.util.jar.JarEntry nextElement(); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder { org.apache.http.conn.ssl.SSLSocketFactory access$100(); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory$NoPreloadHolder { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringInternal { int getSpanFlags(java.lang.Object); }
-keepclassmembers class java.util.jar.JarFile$JarFileEnumerator { java.lang.Object nextElement(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { void <init>(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$Node,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.os.SystemProperties { void addChangeCallback(java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setPriority(int); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class java.lang.Class$Caches { libcore.util.BasicLruCache access$000(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeNode { java.util.concurrent.ConcurrentHashMap$TreeNode findTreeNode(int,java.lang.Object,java.lang.Class); }
-keepclassmembers class java.lang.Class$Caches { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void entity(char[],int,int); }
-keepclassmembers class org.apache.james.mime4j.field.ContentTypeFieldImpl { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { int lookupEntity(char[],int,int); }
-keepclassmembers class android.os.storage.StorageVolume { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.james.mime4j.field.ContentTypeFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setPublicVersion(android.app.Notification); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setSmallIcon(int); }
-keepclassmembers class android.os.SystemProperties { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void eof(char[],int,int); }
-keepclassmembers class org.apache.http.client.ClientProtocolException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.client.ClientProtocolException { void <init>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void aname(char[],int,int); }
-keepclassmembers class org.apache.http.client.ClientProtocolException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher { void close(android.os.ParcelFileDescriptor); }
-keepclassmembers class android.view.View { boolean isShown(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void etag(char[],int,int); }
-keepclassmembers class org.apache.http.client.ClientProtocolException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { boolean etag_cdata(char[],int,int); }
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher { void close(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher { void <init>(android.content.Context,android.net.Uri); }
-keepclassmembers class android.widget.RelativeLayout { android.widget.RelativeLayout$LayoutParams getRelatedViewParams(int[],int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <init>(java.lang.String,android.graphics.Bitmap,int); }
-keepclassmembers class android.view.View { boolean fitSystemWindows(android.graphics.Rect); }
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher { android.os.ParcelFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver); }
-keepclassmembers class android.os.storage.StorageVolume { java.lang.String getPath(); }
-keepclassmembers class libcore.io.NioBufferIterator { void <init>(long,int,boolean); }
-keepclassmembers class com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher { java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver); }
-keepclassmembers class android.os.storage.StorageVolume { java.io.File getPathFile(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style); }
-keepclassmembers class libcore.io.NioBufferIterator { void seek(int); }
-keepclassmembers class android.widget.RelativeLayout { int getRelatedViewBaseline(int[],int); }
-keepclassmembers class libcore.io.NioBufferIterator { void skip(int); }
-keepclassmembers class android.widget.RelativeLayout { void centerHorizontal(android.view.View,android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class libcore.io.NioBufferIterator { void readByteArray(byte[],int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence); }
-keepclassmembers class android.widget.RelativeLayout { void centerVertical(android.view.View,android.widget.RelativeLayout$LayoutParams,int); }
-keepclassmembers class libcore.io.NioBufferIterator { byte readByte(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void etag_basic(char[],int,int); }
-keepclassmembers class libcore.io.NioBufferIterator { int readInt(); }
-keepclassmembers class android.widget.RelativeLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setVibrate(long[]); }
-keepclassmembers class libcore.io.NioBufferIterator { void readIntArray(int[],int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setVisibility(int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setWhen(long); }
-keepclassmembers class android.view.View { boolean fitSystemWindowsInt(android.graphics.Rect); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Builder { android.support.v4.app.NotificationCompat$Builder setOngoing(boolean); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.RelativeLayout { android.view.View getRelatedView(int[],int); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { java.lang.String getLabel(); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.Exception); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void restart(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.text.SpannableStringInternal { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.widget.RelativeLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap getIcon(); }
-keepclassmembers class android.widget.RelativeLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pop(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { java.lang.String getIconFilename(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { android.graphics.Bitmap loadTaskDescriptionIcon(java.lang.String); }
-keepclassmembers class android.widget.RelativeLayout { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View { android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class android.widget.RelativeLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.RelativeLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void push(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class android.view.View { android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class android.text.SpanSet { void <init>(java.lang.Class); }
-keepclassmembers class android.text.SpanSet { void init(android.text.Spanned,int,int); }
-keepclassmembers class java.security.NoSuchProviderException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { boolean computeFitSystemWindows(android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.util.AndroidRuntimeException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.RelativeLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.os.PersistableBundle$1 { void <init>(); }
-keepclassmembers class android.text.SpannableStringInternal { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String prefixOf(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { boolean foreign(java.lang.String,java.lang.String); }
-keepclassmembers class android.database.sqlite.DatabaseObjectNotClosedException { void <init>(); }
-keepclassmembers class android.os.storage.StorageVolume { void <init>(android.os.Parcel,android.os.storage.StorageVolume$1); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager { void <clinit>(); }
-keepclassmembers class android.text.SpanSet { boolean hasSpansIntersecting(int,int); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager { void <init>(android.content.Context); }
-keepclassmembers class android.widget.RelativeLayout { void <clinit>(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.os.storage.StorageVolume { void <clinit>(); }
-keepclassmembers class android.text.SpanSet { int getNextTransition(int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void decl(char[],int,int); }
-keepclassmembers class android.text.SpannableStringInternal { java.lang.String region(int,int); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager { java.util.Timer access$000(com.fsck.k9.mail.power.TracingPowerManager); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager { com.fsck.k9.mail.power.TracingPowerManager getPowerManager(android.content.Context); }
-keepclassmembers class android.view.Choreographer$1 { void <init>(); }
-keepclassmembers class android.text.SpanSet { void recycle(); }
-keepclassmembers class android.view.Choreographer$1 { android.view.Choreographer initialValue(); }
-keepclassmembers class com.android.okhttp.internal.Util$1 { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.text.SpannableStringInternal { void checkRange(java.lang.String,int,int); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager { void <init>(android.content.Context); }
-keepclassmembers class android.view.Choreographer$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.view.View { void setFitsSystemWindows(boolean); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager { com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock newWakeLock(int,java.lang.String); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager { void access$000(android.support.v4.content.LocalBroadcastManager); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager { void executePendingBroadcasts(); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { void <clinit>(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String trimquotes(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { void <init>(android.content.Context,com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.helper.HtmlSanitizer); }
-keepclassmembers class android.text.SpannableStringInternal { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { int getVisibility(); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { int getPrimaryColor(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void restartablyPop(); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { void addHtmlDivider(java.lang.StringBuilder,com.fsck.k9.mail.Part,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String[] split(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { void addMessageHeaderHtml(java.lang.StringBuilder,com.fsck.k9.mail.Message); }
-keepclassmembers class android.view.View { boolean isEnabled(); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class android.app.ActivityManager$TaskDescription { void <clinit>(); }
-keepclassmembers class android.view.KeyCharacterMap$UnavailableException { void <init>(java.lang.String); }
-keepclassmembers class android.text.SpannableStringInternal { int hashCode(); }
-keepclassmembers class android.view.View { void setFocusable(boolean); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.okhttp.internal.Util$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void updateMinAndMaxOffsets(android.view.MotionEvent); }
-keepclassmembers class android.text.SpannableStringInternal { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { com.android.okhttp.internal.spdy.FrameReader newReader(com.android.okio.BufferedSource,boolean); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMinTouchOffset(); }
-keepclassmembers class android.view.View { boolean isSoundEffectsEnabled(); }
-keepclassmembers class android.view.View { void setVisibility(int); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager { android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context); }
-keepclassmembers class android.view.View { void setEnabled(boolean); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager { void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter); }
-keepclassmembers class android.view.View { void setFocusableInTouchMode(boolean); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { int getMaxTouchOffset(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { com.android.okhttp.internal.spdy.FrameWriter newWriter(com.android.okio.BufferedSink,boolean); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void resetTouchOffsets(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String cleanPublicid(java.lang.String); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { boolean isSelectionStartDragged(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { int maxFrameSize(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.http.HeaderParser { int skipUntil(java.lang.String,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { void addMessageHeaderText(java.lang.StringBuilder,com.fsck.k9.mail.Message); }
-keepclassmembers class android.widget.Editor$SelectionModifierCursorController { void onDetached(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { java.io.IOException ioException(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.view.View { int getRawLayoutDirection(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { com.android.okio.ByteString access$000(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void gi(char[],int,int); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager { boolean sendBroadcast(android.content.Intent); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { java.io.IOException access$100(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.view.View { void setLayoutDirection(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { java.lang.IllegalArgumentException access$200(java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.http.HeaderParser { int parseSeconds(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09 { void <clinit>(); }
-keepclassmembers class android.view.View { int getLayoutDirection(); }
-keepclassmembers class android.view.View { boolean hasTransientState(); }
-keepclassmembers class android.view.View$UnsetPressedState { void run(); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pitarget(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pi(char[],int,int); }
-keepclassmembers class android.view.View { void setHasTransientState(boolean); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { void addTableRow(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { void addTextDivider(java.lang.StringBuilder,com.fsck.k9.mail.Part,boolean); }
-keepclassmembers class android.text.style.LeadingMarginSpan$Standard { void <init>(android.os.Parcel); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void stagc(char[],int,int); }
-keepclassmembers class android.view.View { boolean isAttachedToWindow(); }
-keepclassmembers class com.android.okhttp.internal.http.HeaderParser { int skipWhitespace(java.lang.String,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void stage(char[],int,int); }
-keepclassmembers class android.view.View { boolean isLaidOut(); }
-keepclassmembers class android.view.View { boolean isLayoutRtl(); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthOutputStream { void <init>(org.apache.http.io.SessionOutputBuffer,long); }
-keepclassmembers class android.view.View { void setWillNotDraw(boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void cmnt(char[],int,int); }
-keepclassmembers class android.view.View$UnsetPressedState { void <init>(android.view.View); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthOutputStream { void close(); }
-keepclassmembers class com.fsck.k9.message.extractors.EncryptionDetector { void <init>(com.fsck.k9.message.extractors.TextPartFinder); }
-keepclassmembers class android.app.ExitTransitionCoordinator$8 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.message.extractors.EncryptionDetector { boolean containsInlinePgpEncryptedText(com.fsck.k9.mail.Message); }
-keepclassmembers class android.app.ExitTransitionCoordinator$8 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthOutputStream { void flush(); }
-keepclassmembers class android.view.View { void setWillNotCacheDrawing(boolean); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthOutputStream { void write(byte[],int,int); }
-keepclassmembers class com.fsck.k9.message.extractors.EncryptionDetector { boolean containsPartWithMimeType(com.fsck.k9.mail.Part,java.lang.String[]); }
-keepclassmembers class android.view.View { boolean isClickable(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void pcdata(char[],int,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { int getEntity(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { java.lang.String makeName(char[],int,int); }
-keepclassmembers class android.view.View { void setClickable(boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void rectify(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class android.view.animation.BounceInterpolator { void <init>(); }
-keepclassmembers class android.view.View { boolean isLongClickable(); }
-keepclassmembers class com.fsck.k9.message.extractors.EncryptionDetector { boolean isMimeTypeAnyOf(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.view.View { void setLongClickable(boolean); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { java.lang.StringBuilder buildHtml(com.fsck.k9.mail.internet.Viewable,boolean); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthOutputStream { void write(byte[]); }
-keepclassmembers class android.view.View { void setPressed(boolean,float,float); }
-keepclassmembers class android.view.View { void setPressed(boolean); }
-keepclassmembers class android.view.animation.BounceInterpolator { float bounce(float); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { java.lang.StringBuilder buildText(com.fsck.k9.mail.internet.Viewable,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void endDTD(); }
-keepclassmembers class android.view.animation.BounceInterpolator { float getInterpolation(float); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void startDTD(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { void dispatchSetPressed(boolean); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager { void unregisterReceiver(android.content.BroadcastReceiver); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$21 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$21 { void run(); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { com.fsck.k9.mailstore.MessageViewInfoExtractor$ViewableExtractedText extractViewableAndAttachments(java.util.List,java.util.List); }
-keepclassmembers class com.fsck.k9.mailstore.StoreSchemaDefinition$RealMigrationsHelper { void <init>(com.fsck.k9.mailstore.LocalStore); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3ResponseInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.mailstore.StoreSchemaDefinition$RealMigrationsHelper { com.fsck.k9.Account getAccount(); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { com.fsck.k9.mailstore.MessageViewInfoExtractor getInstance(); }
-keepclassmembers class com.fsck.k9.mailstore.StoreSchemaDefinition$RealMigrationsHelper { android.content.Context getContext(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11$1 { void <init>(com.fsck.k9.activity.MessageCompose$11); }
-keepclassmembers class com.fsck.k9.message.extractors.EncryptionDetector { boolean isPgpMimeOrSMimeEncrypted(com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.mailstore.StoreSchemaDefinition$RealMigrationsHelper { com.fsck.k9.mailstore.LocalStore getLocalStore(); }
-keepclassmembers class com.fsck.k9.mailstore.StoreSchemaDefinition$RealMigrationsHelper { com.fsck.k9.preferences.Storage getStorage(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3ResponseInputStream { int read(); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { java.lang.String getPartName(com.fsck.k9.mail.Part); }
-keepclassmembers class android.view.View { boolean isFocusable(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11$1 { void run(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void <init>(com.fsck.k9.mail.store.webdav.WebDavStore,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { com.fsck.k9.mailstore.MessageViewInfo extractMessageForView(com.fsck.k9.mail.Message,com.fsck.k9.ui.crypto.MessageCryptoAnnotations); }
-keepclassmembers class java.nio.FileChannelImpl$1 { void <init>(); }
-keepclassmembers class android.view.View { boolean isFocusableInTouchMode(); }
-keepclassmembers class android.view.View { boolean isPressed(); }
-keepclassmembers class com.fsck.k9.message.extractors.EncryptionDetector { boolean isEncrypted(com.fsck.k9.mail.Message); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void comment(char[],int,int); }
-keepclassmembers class android.view.View { android.view.View focusSearch(int); }
-keepclassmembers class com.fsck.k9.mailstore.StoreSchemaDefinition$RealMigrationsHelper { java.lang.String serializeFlags(java.util.List); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$InternalStorageProvider { java.io.File getAttachmentDirectory(android.content.Context,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext$HostAndPort { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View { android.view.View findUserSetNextFocus(android.view.View,int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Parser { void <clinit>(); }
-keepclassmembers class java.nio.FileChannelImpl$1 { int compare(java.nio.channels.FileLock,java.nio.channels.FileLock); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void buildFolderUrl(); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext$HostAndPort { int hashCode(); }
-keepclassmembers class com.android.org.conscrypt.ClientSessionContext$HostAndPort { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$InternalStorageProvider { java.io.File getDatabase(android.content.Context,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$22 { void <init>(com.fsck.k9.mailstore.LocalFolder,long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$22 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$InternalStorageProvider { java.lang.String getId(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$22 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void deleteServerMessages(java.lang.String[]); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$InternalStorageProvider { java.lang.String getName(android.content.Context); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$InternalStorageProvider { void init(android.content.Context); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$InternalStorageProvider { java.io.File getRoot(android.content.Context); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfoExtractor { com.fsck.k9.mailstore.MessageViewInfoExtractor$ViewableExtractedText extractTextFromViewables(java.util.List); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { android.view.View$AttachInfo$InvalidateInfo obtain(); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$InternalStorageProvider { boolean isReady(android.content.Context); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$InternalStorageProvider { boolean isSupported(android.content.Context); }
-keepclassmembers class java.net.JarURLConnection { void <init>(java.net.URL); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher { void <init>(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class android.view.View$AttachInfo$InvalidateInfo { void <clinit>(); }
-keepclassmembers class com.beetstra.jutf7.ModifiedUTF7Charset { void <init>(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.view.View { android.view.View findViewInsideOutShouldExist(android.view.View,int); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher { void onSpanAdded(android.text.Spannable,java.lang.Object,int,int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void fetchEnvelope(java.util.List,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class com.beetstra.jutf7.ModifiedUTF7Charset { boolean canEncodeDirectly(char); }
-keepclassmembers class com.bumptech.glide.GenericTranscodeRequest { void <init>(android.content.Context,com.bumptech.glide.Glide,java.lang.Class,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,java.lang.Class,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.RequestManager$OptionsApplier); }
-keepclassmembers class com.beetstra.jutf7.ModifiedUTF7Charset { byte shift(); }
-keepclassmembers class com.beetstra.jutf7.ModifiedUTF7Charset { byte unshift(); }
-keepclassmembers class android.net.SSLCertificateSocketFactory$1 { void <init>(); }
-keepclassmembers class android.net.SSLCertificateSocketFactory$1 { java.security.cert.X509Certificate[] getAcceptedIssuers(); }
-keepclassmembers class java.net.JarURLConnection { java.lang.String getEntryName(); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$InternalStorageProvider { void <init>(); }
-keepclassmembers class java.nio.FileChannelImpl$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.net.JarURLConnection { java.net.URL getJarFileURL(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher { void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int); }
-keepclassmembers class java.net.JarURLConnection { java.lang.String decode(java.lang.String); }
-keepclassmembers class com.bumptech.glide.GenericTranscodeRequest { com.bumptech.glide.provider.LoadProvider build(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpSignOnlyDialog$3 { void <init>(com.fsck.k9.activity.compose.PgpSignOnlyDialog); }
-keepclassmembers class java.io.BufferedWriter { void <init>(java.io.Writer); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpSignOnlyDialog$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.util.Pools$SimplePool { void <init>(int); }
-keepclassmembers class java.io.BufferedWriter { void <init>(java.io.Writer,int); }
-keepclassmembers class android.util.Pools$SimplePool { java.lang.Object acquire(); }
-keepclassmembers class java.io.BufferedWriter { void close(); }
-keepclassmembers class android.util.Pools$SimplePool { boolean release(java.lang.Object); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocused(); }
-keepclassmembers class android.util.Pools$SimplePool { boolean isInPool(java.lang.Object); }
-keepclassmembers class android.app.ExitTransitionCoordinator$7 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator$7 { void run(); }
-keepclassmembers class java.io.BufferedWriter { void flush(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void fetchFlags(java.util.List,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(int,int,int,int); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher { void <init>(com.tokenautocomplete.TokenCompleteTextView,com.tokenautocomplete.TokenCompleteTextView$1); }
-keepclassmembers class java.io.BufferedWriter { void checkNotClosed(); }
-keepclassmembers class android.view.View { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void <clinit>(); }
-keepclassmembers class java.io.BufferedWriter { void flushInternal(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class android.view.View { void clearAccessibilityFocus(); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicy(android.os.StrictMode$ThreadPolicy); }
-keepclassmembers class java.io.BufferedWriter { boolean isClosed(); }
-keepclassmembers class android.os.StrictMode { void setThreadPolicyMask(int); }
-keepclassmembers class android.os.StrictMode { void setBlockGuardPolicy(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setBounds(android.graphics.Rect); }
-keepclassmembers class android.os.StrictMode { void setCloseGuardEnabled(boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { void copyBounds(android.graphics.Rect); }
-keepclassmembers class android.view.View { void sendAccessibilityHoverEvent(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { org.openintents.openpgp.util.OpenPgpApi access$002(com.fsck.k9.ui.crypto.MessageCryptoHelper,org.openintents.openpgp.util.OpenPgpApi); }
-keepclassmembers class android.view.View { void clearAccessibilityFocusNoCallbacks(); }
-keepclassmembers class android.view.View { boolean requestAccessibilityFocus(); }
-keepclassmembers class android.app.FragmentState { void <init>(android.app.Fragment); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getBounds(); }
-keepclassmembers class android.view.View { boolean requestFocus(); }
-keepclassmembers class android.app.FragmentState { android.app.Fragment instantiate(android.app.Activity,android.app.Fragment); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$ThreadPolicy allowThreadDiskReads(); }
-keepclassmembers class android.view.View { boolean requestFocus(int); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void access$300(com.fsck.k9.ui.crypto.MessageCryptoHelper,int,int); }
-keepclassmembers class android.os.StrictMode { int getThreadPolicyMask(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Rect getDirtyBounds(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { android.content.Context access$100(com.fsck.k9.ui.crypto.MessageCryptoHelper); }
-keepclassmembers class android.view.View { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class android.widget.HorizontalScrollView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.Drawable { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setChangingConfigurations(int); }
-keepclassmembers class android.view.View { boolean requestFocusNoSearch(int,android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { org.openintents.openpgp.util.OpenPgpApi$CancelableBackgroundOperation access$402(com.fsck.k9.ui.crypto.MessageCryptoHelper,org.openintents.openpgp.util.OpenPgpApi$CancelableBackgroundOperation); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { android.content.Intent access$502(com.fsck.k9.ui.crypto.MessageCryptoHelper,android.content.Intent); }
-keepclassmembers class java.lang.NegativeArraySizeException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { void setFilterBitmap(boolean); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void access$200(com.fsck.k9.ui.crypto.MessageCryptoHelper); }
-keepclassmembers class android.graphics.drawable.Drawable { void setCallback(android.graphics.drawable.Drawable$Callback); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable$Callback getCallback(); }
-keepclassmembers class java.util.AbstractCollection { boolean add(java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPart access$700(com.fsck.k9.ui.crypto.MessageCryptoHelper); }
-keepclassmembers class java.util.AbstractCollection { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void access$600(com.fsck.k9.ui.crypto.MessageCryptoHelper,com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class java.io.BufferedWriter { void write(int); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.graphics.drawable.Drawable { void invalidateSelf(); }
-keepclassmembers class android.view.View { boolean requestFocusFromTouch(); }
-keepclassmembers class android.graphics.drawable.Drawable { void scheduleSelf(java.lang.Runnable,long); }
-keepclassmembers class android.graphics.drawable.Drawable { void setDither(boolean); }
-keepclassmembers class java.util.AbstractCollection { boolean addAll(java.util.Collection); }
-keepclassmembers class java.io.BufferedWriter { void write(java.lang.String,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.View { boolean hasAncestorThatBlocksDescendantFocus(); }
-keepclassmembers class android.app.FragmentState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class android.view.View { int getImportantForAccessibility(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLayoutDirection(); }
-keepclassmembers class java.util.AbstractCollection { boolean contains(java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void addCryptoResultAnnotationToMessage(com.fsck.k9.mailstore.CryptoResultAnnotation); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void addFoundInlinePgpParts(java.util.List); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$9 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { void setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.view.View { void setAccessibilityLiveRegion(int); }
-keepclassmembers class android.app.FragmentState { void <clinit>(); }
-keepclassmembers class android.view.View { int getAccessibilityLiveRegion(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void addErrorAnnotation(com.fsck.k9.mail.Part,com.fsck.k9.mailstore.CryptoResultAnnotation$CryptoError,com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void fetchMessages(java.util.List,com.fsck.k9.mail.MessageRetrievalListener,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpDate { java.util.Date parse(java.lang.String); }
-keepclassmembers class java.util.AbstractCollection { boolean containsAll(java.util.Collection); }
-keepclassmembers class org.apache.harmony.security.x509.Validity$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.Drawable { void setLayoutDirection(int); }
-keepclassmembers class android.os.StrictMode { boolean tooManyViolationsThisLoop(); }
-keepclassmembers class android.view.View { void setImportantForAccessibility(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class java.util.AbstractCollection { boolean isEmpty(); }
-keepclassmembers class android.os.StrictMode { int parseViolationFromMessage(java.lang.String); }
-keepclassmembers class android.os.StrictMode { void dropboxViolationAsync(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class java.util.AbstractCollection { boolean remove(java.lang.Object); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompatEclair { void cancelNotification(android.app.NotificationManager,java.lang.String,int); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void callAsyncDecrypt(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.View { boolean isImportantForAccessibility(); }
-keepclassmembers class android.os.StrictMode { boolean hasGatheredViolations(); }
-keepclassmembers class java.util.AbstractCollection { boolean removeAll(java.util.Collection); }
-keepclassmembers class android.graphics.drawable.Drawable { void setHotspot(float,float); }
-keepclassmembers class com.android.okhttp.internal.http.HttpDate { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setState(int[]); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isProjected(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompatEclair { void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification); }
-keepclassmembers class android.os.StrictMode { void executeDeathPenalty(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void callAsyncInlineOperation(android.content.Intent); }
-keepclassmembers class android.widget.HorizontalScrollView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.View { android.view.ViewParent getParentForAccessibility(); }
-keepclassmembers class java.util.AbstractCollection { boolean retainAll(java.util.Collection); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.Drawable { int[] getState(); }
-keepclassmembers class android.os.StrictMode { void clearGatheredViolations(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void callAsyncDetachedVerify(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.Drawable { void jumpToCurrentState(); }
-keepclassmembers class android.os.StrictMode { void setVmPolicy(android.os.StrictMode$VmPolicy); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class android.view.View { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void callbackPendingIntent(android.app.PendingIntent); }
-keepclassmembers class android.view.View { boolean includeForAccessibility(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { void <init>(); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setLevel(int); }
-keepclassmembers class android.graphics.drawable.Drawable { int getLevel(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class java.util.AbstractCollection { java.util.ArrayList toArrayList(); }
-keepclassmembers class java.util.AbstractCollection { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.view.View { boolean isActionableForAccessibility(); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle); }
-keepclassmembers class android.os.StrictMode { void enableDefaults(); }
-keepclassmembers class android.view.View { boolean hasListenersForAccessibility(); }
-keepclassmembers class android.widget.HorizontalScrollView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.text.Layout$TabStops { void reset(int,java.lang.Object[]); }
-keepclassmembers class android.graphics.drawable.Drawable { void setAutoMirrored(boolean); }
-keepclassmembers class android.os.StrictMode { boolean vmSqliteObjectLeaksEnabled(); }
-keepclassmembers class java.util.AbstractCollection { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void callbackProgress(int,int); }
-keepclassmembers class android.text.Layout$TabStops { void <init>(int,java.lang.Object[]); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { void removeChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment); }
-keepclassmembers class android.view.View { void notifyViewAccessibilityStateChangedIfNeeded(int); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { void addChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void callbackReturnResult(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean canApplyTheme(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { void <init>(java.lang.String,int); }
-keepclassmembers class android.os.StrictMode { boolean vmClosableObjectLeaksEnabled(); }
-keepclassmembers class android.view.View { void notifySubtreeAccessibilityStateChangedIfNeeded(); }
-keepclassmembers class android.os.StrictMode { boolean vmFileUriExposureEnabled(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void cleanupAfterProcessingFinished(); }
-keepclassmembers class android.os.StrictMode { void onWebViewMethodCalledOnWrongThread(java.lang.Throwable); }
-keepclassmembers class android.system.StructTimeval { void <init>(long,long); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onStateChange(int[]); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { com.bumptech.glide.manager.ActivityFragmentLifecycle getLifecycle(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void connectToCryptoProviderService(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { void updateParametersFrom(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class android.os.StrictMode { void onFileUriExposed(java.lang.String); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { com.bumptech.glide.RequestManager getRequestManager(); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean isVisible(); }
-keepclassmembers class android.system.StructTimeval { android.system.StructTimeval fromMillis(long); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode(); }
-keepclassmembers class android.graphics.drawable.Drawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.os.StrictMode { void onVmPolicyViolation(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { void onAttach(android.app.Activity); }
-keepclassmembers class android.view.View { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicHeight(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog$3 { void <init>(com.fsck.k9.activity.Accounts$ImportSelectionDialog,com.fsck.k9.activity.Accounts); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumWidth(); }
-keepclassmembers class android.graphics.drawable.Drawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { void onDestroy(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void decryptOrVerifyPart(com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPart); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { void onDetach(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.graphics.drawable.Drawable { int getMinimumHeight(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void decryptOrVerifyNextPart(); }
-keepclassmembers class android.graphics.drawable.Drawable { int getIntrinsicWidth(); }
-keepclassmembers class android.support.v4.app.RemoteInputCompatJellybean { android.os.Bundle toBundle(android.support.v4.app.RemoteInputCompatBase$RemoteInput); }
-keepclassmembers class android.graphics.drawable.Drawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.text.Layout$TabStops { float nextTab(float); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { boolean isInMemoryDb(); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { void onStart(); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { void onStop(); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { java.lang.String stripPathForLogs(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void decryptVerify(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.Drawable { void clearMutated(); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { void onLowMemory(); }
-keepclassmembers class android.support.v4.app.RemoteInputCompatJellybean { android.os.Bundle[] toBundleArray(android.support.v4.app.RemoteInputCompatBase$RemoteInput[]); }
-keepclassmembers class android.text.Layout$TabStops { float nextDefaultStop(float,int); }
-keepclassmembers class android.graphics.drawable.Drawable { int resolveOpacity(int,int); }
-keepclassmembers class android.app.ActivityManager$TaskDescription$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void deliverResult(); }
-keepclassmembers class android.view.View$4 { void <init>(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$3 { void <init>(com.fsck.k9.ui.messageview.MessageViewFragment); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context); }
-keepclassmembers class android.view.View$4 { void setValue(android.view.View,float); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$3 { void run(); }
-keepclassmembers class android.view.View$4 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.view.View$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { com.fsck.k9.mail.internet.MimeBodyPart extractClearsignedTextReplacementPart(com.fsck.k9.mail.Part); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView$CommaTokenizer { void <init>(); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment { void setRequestManager(com.bumptech.glide.RequestManager); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView$CommaTokenizer { int findTokenStart(java.lang.CharSequence,int); }
-keepclassmembers class android.os.StrictMode { void writeGatheredViolationsToParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.AbstractQueue { void <init>(); }
-keepclassmembers class java.util.AbstractQueue { boolean add(java.lang.Object); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView$CommaTokenizer { int findTokenEnd(java.lang.CharSequence,int); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.database.sqlite.SQLiteDatabaseConfiguration { void <init>(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink getDataSinkForDecryptedData(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink getDataSinkForDecryptedInlineData(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource getDataSourceForEncryptedOrInlineData(); }
-keepclassmembers class android.os.StrictMode { void readAndHandleBinderCallViolations(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource getDataSourceForSignedData(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { android.content.Intent getDecryptionIntent(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <init>(int,java.util.HashMap); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.SearchDialog$5 { void <init>(android.app.SearchDialog); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { com.fsck.k9.mail.internet.MimeBodyPart getMultipartSignedContentPartIfAvailable(com.fsck.k9.mail.Part); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <init>(int,java.util.HashMap,android.os.StrictMode$1); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection { com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection[] values(); }
-keepclassmembers class java.io.PushbackReader { void <init>(java.io.Reader,int); }
-keepclassmembers class android.os.StrictMode$VmPolicy { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void handleCryptoOperationError(); }
-keepclassmembers class android.view.View { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionStart(); }
-keepclassmembers class android.view.View$4 { java.lang.Float get(android.view.View); }
-keepclassmembers class android.os.StrictMode { android.os.StrictMode$Span enterCriticalSpan(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void handleCryptoOperationResult(com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class java.io.PushbackReader { void checkNotClosed(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { java.lang.String generateDeleteUrl(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void handleCryptoOperationSuccess(com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { int getMessageCount(boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.MultiAutoCompleteTextView$CommaTokenizer { java.lang.CharSequence terminateToken(java.lang.CharSequence); }
-keepclassmembers class android.widget.ImageView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.ImageView { void initImageView(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void handleUserInteractionRequest(); }
-keepclassmembers class android.os.StrictMode { java.lang.Object trackActivity(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { java.util.Map getMessageUrls(java.lang.String[]); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { boolean isBoundToCryptoProviderService(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void markServerMessagesRead(java.lang.String[],boolean); }
-keepclassmembers class android.widget.ImageView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void onCryptoFinished(); }
-keepclassmembers class android.view.View { void dispatchStartTemporaryDetach(); }
-keepclassmembers class android.widget.ImageView { boolean hasOverlappingRendering(); }
-keepclassmembers class android.view.View { void onStartTemporaryDetach(); }
-keepclassmembers class android.widget.ImageView { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.View { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getObjectIdentifier(java.lang.String); }
-keepclassmembers class android.view.View { void onFinishTemporaryDetach(); }
-keepclassmembers class java.io.PushbackReader { int read(); }
-keepclassmembers class android.view.View { int getAccessibilitySelectionEnd(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.ImageView { void setAdjustViewBounds(boolean); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void moveOrCopyMessages(java.util.List,java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$19 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,java.lang.String,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class java.io.PushbackReader { void unread(int); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void onCryptoOperationFailed(org.openintents.openpgp.OpenPgpError); }
-keepclassmembers class android.widget.ImageView { void setMaxWidth(int); }
-keepclassmembers class android.widget.ImageView { void setMaxHeight(int); }
-keepclassmembers class android.widget.ImageView { android.graphics.drawable.Drawable getDrawable(); }
-keepclassmembers class android.transition.Slide$6 { void <init>(); }
-keepclassmembers class android.widget.ImageView { void setImageResource(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$19 { void run(); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(); }
-keepclassmembers class android.os.StrictMode { boolean access$400(); }
-keepclassmembers class android.os.StrictMode { java.util.HashMap access$100(); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.String); }
-keepclassmembers class android.os.StrictMode { android.util.Singleton access$600(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$500(); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$700(); }
-keepclassmembers class android.os.StrictMode { boolean access$800(); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$900(); }
-keepclassmembers class java.net.SocketTimeoutException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void onCryptoOperationReturned(com.fsck.k9.mail.internet.MimeBodyPart); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(int[],org.apache.harmony.security.x501.AttributeValue); }
-keepclassmembers class android.os.StrictMode { void access$1200(int); }
-keepclassmembers class android.os.StrictMode { int access$1000(java.lang.String); }
-keepclassmembers class android.os.StrictMode { void access$1300(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.os.StrictMode { void access$1100(int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.widget.ImageView { void setImageDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.os.StrictMode { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(org.apache.harmony.security.utils.ObjectIdentifier,org.apache.harmony.security.x501.AttributeValue); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void processFoundEncryptedParts(java.util.List); }
-keepclassmembers class android.view.View { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.os.StrictMode { java.lang.ThreadLocal access$2200(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void onCryptoOperationSuccess(com.fsck.k9.mailstore.CryptoResultAnnotation); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void appendName(java.lang.String,java.lang.StringBuilder); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { java.util.Map appendMessages(java.util.List); }
-keepclassmembers class android.widget.ImageView { void applyImageTint(); }
-keepclassmembers class android.view.View { android.view.KeyEvent$DispatcherState getKeyDispatcherState(); }
-keepclassmembers class android.os.AsyncTask$InternalHandler { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { java.util.List appendWebDavMessages(java.util.List); }
-keepclassmembers class android.util.Xml$XmlSerializerFactory { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask$InternalHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.widget.ImageView { void setImageBitmap(android.graphics.Bitmap); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void processFoundSignedParts(java.util.List); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void <init>(android.graphics.drawable.Animatable); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void start(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatableTransition { void stop(); }
-keepclassmembers class android.widget.ImageView { void setSelected(boolean); }
-keepclassmembers class android.view.View { boolean isAccessibilityFocusedViewOrHost(); }
-keepclassmembers class android.text.DynamicLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class android.view.View { boolean onFilterTouchEventForSecurity(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner$3 { void <init>(com.fsck.k9.view.ClientCertificateSpinner); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner$3 { void run(); }
-keepclassmembers class android.widget.ImageView { android.graphics.Matrix getImageMatrix(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void propagateEncapsulatedSignedPart(com.fsck.k9.mailstore.CryptoResultAnnotation,com.fsck.k9.mail.Part); }
-keepclassmembers class android.text.DynamicLayout { void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean); }
-keepclassmembers class android.widget.ImageView { void setImageMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void onCryptoOperationCanceled(); }
-keepclassmembers class android.widget.CursorFilter { void <init>(android.widget.CursorFilter$CursorFilterClient); }
-keepclassmembers class android.widget.ImageView { void resolveUri(); }
-keepclassmembers class android.widget.ImageView { void setScaleType(android.widget.ImageView$ScaleType); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void reattachCallback(com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.ui.crypto.MessageCryptoCallback); }
-keepclassmembers class android.widget.CursorFilter { android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence); }
-keepclassmembers class android.text.DynamicLayout { void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.view.View { boolean dispatchGenericMotionEventInternal(android.view.MotionEvent); }
-keepclassmembers class android.widget.CursorFilter { void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getType(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.x501.AttributeValue getValue(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier getOID(int[]); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void runFirstPass(); }
-keepclassmembers class android.view.View { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.ImageView { android.widget.ImageView$ScaleType getScaleType(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void runSecondPassOrReturnResultToFragment(); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.View { boolean hasHoveredChild(); }
-keepclassmembers class android.text.DynamicLayout { void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class android.view.View { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void runSecondPass(); }
-keepclassmembers class android.view.View { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { boolean areMoreMessagesAvailable(int,java.util.Date); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void startDecryptingOrVerifyingPart(com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPart); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void init(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { java.util.Map copyMessages(java.util.List,com.fsck.k9.mail.Folder); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { boolean create(com.fsck.k9.mail.Folder$FolderType); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void delete(java.util.List,java.lang.String); }
-keepclassmembers class android.view.View { void onWindowFocusChanged(boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void addOID(org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { int hashIntArray(int[]); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void setDisplayedChild(int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void setDisplayedChild(int,boolean); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void cancelIfRunning(); }
-keepclassmembers class android.view.View { boolean hasWindowFocus(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void close(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void asyncStartOrResumeProcessingMessage(com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.ui.crypto.MessageCryptoCallback,org.openintents.openpgp.OpenPgpDecryptionResult); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <init>(int[],org.apache.harmony.security.x501.AttributeValue,org.apache.harmony.security.x501.AttributeTypeAndValue$1); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { boolean exists(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class android.widget.ImageView { int[] onCreateDrawableState(int); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void detachCallback(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.utils.ObjectIdentifier access$100(org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class android.view.View { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void setDownInAnimation(android.content.Context,int); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { org.apache.harmony.security.x501.AttributeValue access$200(org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class android.view.View { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService$1 { void <init>(com.fsck.k9.service.DatabaseUpgradeService,java.lang.String); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService$1 { void run(); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void setDownInAnimation(android.view.animation.Animation); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue { void <clinit>(); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void setDownOutAnimation(android.content.Context,int); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable createFromPath(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void delete(boolean); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void setUpInAnimation(android.view.animation.Animation); }
-keepclassmembers class android.view.View { void onWindowVisibilityChanged(int); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void setDownOutAnimation(android.view.animation.Animation); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void setUpInAnimation(android.content.Context,int); }
-keepclassmembers class android.view.View { int getWindowVisibility(); }
-keepclassmembers class android.widget.ImageView { void resizeFromDrawable(); }
-keepclassmembers class org.apache.http.message.BasicRequestLine { void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion); }
-keepclassmembers class android.text.DynamicLayout { void reflow(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { com.fsck.k9.mail.store.webdav.WebDavMessage getMessage(java.lang.String); }
-keepclassmembers class android.view.View { void getWindowVisibleDisplayFrame(android.graphics.Rect); }
-keepclassmembers class android.widget.ImageView { void updateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { java.util.List getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class com.fsck.k9.mail.ssl.KeyChainKeyManager { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class android.widget.ImageView { void onRtlPropertiesChanged(int); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void setUpOutAnimation(android.content.Context,int); }
-keepclassmembers class org.apache.http.message.BasicRequestLine { java.lang.String getUri(); }
-keepclassmembers class android.widget.ImageView { android.graphics.Matrix$ScaleToFit scaleTypeToScaleToFit(android.widget.ImageView$ScaleType); }
-keepclassmembers class org.apache.http.message.BasicRequestLine { java.lang.String toString(); }
-keepclassmembers class android.widget.ImageView { void onMeasure(int,int); }
-keepclassmembers class java.lang.Thread$State { java.lang.Thread$State[] values(); }
-keepclassmembers class java.lang.Thread$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.Drawable { void inflateWithAttributes(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.TypedArray,int); }
-keepclassmembers class org.apache.http.message.BasicRequestLine { java.lang.String getMethod(); }
-keepclassmembers class org.apache.http.message.BasicRequestLine { org.apache.http.ProtocolVersion getProtocolVersion(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.drawable.Drawable drawableFromBitmap(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { int getMessageCount(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { java.lang.String getName(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { com.fsck.k9.mail.store.webdav.WebDavStore getStore(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { java.lang.String getUidFromMessageId(com.fsck.k9.mail.Message); }
-keepclassmembers class android.view.View { boolean isInTouchMode(); }
-keepclassmembers class com.fsck.k9.view.LinearViewAnimator { void setUpOutAnimation(android.view.animation.Animation); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { com.fsck.k9.mail.Message getMessage(java.lang.String); }
-keepclassmembers class android.view.View { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { void performCollectViewAttributes(android.view.View$AttachInfo,int); }
-keepclassmembers class android.view.View { void needGlobalAttributesUpdate(boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { void <clinit>(); }
-keepclassmembers class android.view.View { android.content.Context getContext(); }
-keepclassmembers class java.lang.Thread$State { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { java.lang.String getUrl(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { void <init>(); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { void verify(java.lang.String,javax.net.ssl.SSLSocket); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { android.graphics.Bitmap decodeStream(com.bumptech.glide.util.MarkEnforcingInputStream,com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream,android.graphics.BitmapFactory$Options); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { void <init>(); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.View { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { int getMode(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void open(int); }
-keepclassmembers class com.fsck.k9.mail.ssl.KeyChainKeyManager { java.security.cert.X509Certificate[] fetchCertificateChain(android.content.Context,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void setFlags(java.util.List,java.util.Set,boolean); }
-keepclassmembers class android.graphics.drawable.Drawable { android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { void verify(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { void verify(java.lang.String,java.lang.String[],java.lang.String[],boolean); }
-keepclassmembers class com.fsck.k9.mail.ssl.KeyChainKeyManager { java.security.PrivateKey fetchPrivateKey(android.content.Context,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Drawable { android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { java.util.Map moveMessages(java.util.List,com.fsck.k9.mail.Folder); }
-keepclassmembers class android.view.View { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void setFlags(java.util.Set,boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { android.graphics.Bitmap downsampleWithSize(com.bumptech.glide.util.MarkEnforcingInputStream,com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int,int,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class android.graphics.drawable.Drawable { void <clinit>(); }
-keepclassmembers class android.view.View { boolean onCheckIsTextEditor(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavFolder { void setUrl(java.lang.String); }
-keepclassmembers class android.ddm.DdmHandleThread { void <init>(); }
-keepclassmembers class java.util.TreeMap$Bound$3 { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.ImageView { int resolveAdjustedSize(int,int,int); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode$1 { void <init>(); }
-keepclassmembers class android.widget.ImageView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.text.DynamicLayout { void createBlocks(); }
-keepclassmembers class android.widget.ImageView { void configureBounds(); }
-keepclassmembers class android.view.View { void onCreateContextMenu(android.view.ContextMenu); }
-keepclassmembers class android.view.View { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.view.View { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.view.View { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.DynamicLayout { void addBlockAtOffset(int); }
-keepclassmembers class android.view.View { boolean onHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.ddm.DdmHandleThread { void register(); }
-keepclassmembers class com.fsck.k9.mail.ssl.KeyChainKeyManager { void savePrivateKeyReference(java.security.PrivateKey); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { android.graphics.Bitmap$Config getConfig(java.io.InputStream,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$1 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void onChanged(); }
-keepclassmembers class android.text.MeasuredText { void <init>(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void onInvalidated(); }
-keepclassmembers class android.widget.ListPopupWindow$PopupDataSetObserver { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText obtain(); }
-keepclassmembers class android.view.View { boolean isHoverable(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.Token { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.Token { void <init>(int,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$1 { void execute(); }
-keepclassmembers class android.text.MeasuredText { android.text.MeasuredText recycle(android.text.MeasuredText); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.Token { org.apache.james.mime4j.field.datetime.parser.Token newToken(int,java.lang.String); }
-keepclassmembers class android.view.View { void setHovered(boolean); }
-keepclassmembers class android.view.View { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.BackStackRecord$1 { void <init>(android.app.BackStackRecord,android.view.View,java.util.ArrayList,android.app.Fragment,android.transition.Transition,android.transition.Transition,android.app.BackStackRecord$TransitionState,boolean,java.util.ArrayList,android.app.Fragment,android.transition.Transition,java.util.ArrayList); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.Token { java.lang.String toString(); }
-keepclassmembers class java.util.MiniEnumSet$MiniEnumSetIterator { void <init>(java.util.MiniEnumSet); }
-keepclassmembers class android.view.View { void onHoverChanged(boolean); }
-keepclassmembers class android.ddm.DdmHandleThread { void <clinit>(); }
-keepclassmembers class android.util.TypedValue { void <init>(); }
-keepclassmembers class android.text.MeasuredText { void setPos(int); }
-keepclassmembers class android.util.TypedValue { float getFloat(); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { boolean acceptableCountryWildcard(java.lang.String); }
-keepclassmembers class java.util.MiniEnumSet$MiniEnumSetIterator { java.lang.Enum next(); }
-keepclassmembers class android.text.MeasuredText { void setPara(java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic); }
-keepclassmembers class android.util.TypedValue { float complexToFloat(int); }
-keepclassmembers class android.util.TypedValue { float complexToDimension(int,android.util.DisplayMetrics); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelOffset(int,android.util.DisplayMetrics); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { java.lang.String[] getCNs(java.security.cert.X509Certificate); }
-keepclassmembers class android.util.TypedValue { int complexToDimensionPixelSize(int,android.util.DisplayMetrics); }
-keepclassmembers class java.util.MiniEnumSet$MiniEnumSetIterator { java.lang.Object next(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { android.graphics.BitmapFactory$Options getDefaultOptions(); }
-keepclassmembers class java.util.MiniEnumSet$MiniEnumSetIterator { void <init>(java.util.MiniEnumSet,java.util.MiniEnumSet$1); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { java.lang.String[] getDNSSubjectAlts(java.security.cert.X509Certificate); }
-keepclassmembers class android.util.TypedValue { float applyDimension(int,float,android.util.DisplayMetrics); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { int getRoundedSampleSize(int,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { void <init>(int); }
-keepclassmembers class android.util.TypedValue { float getDimension(android.util.DisplayMetrics); }
-keepclassmembers class android.text.DynamicLayout { void updateBlocks(int,int,int); }
-keepclassmembers class android.util.TypedValue { float complexToFraction(int,float,float); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { void <init>(int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { void releaseOptions(android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.text.DynamicLayout { int[] getBlockEndLines(); }
-keepclassmembers class android.widget.ImageView { void drawableStateChanged(); }
-keepclassmembers class android.text.DynamicLayout { int[] getBlockIndices(); }
-keepclassmembers class android.util.TypedValue { float getFraction(float,float); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void clinit(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void ENGINE_load_dynamic(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object decode(byte[]); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { void resetOptions(android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long ENGINE_by_id(java.lang.String); }
-keepclassmembers class android.text.DynamicLayout { int getNumberOfBlocks(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int ENGINE_add(long); }
-keepclassmembers class android.text.DynamicLayout { int getIndexFirstChangedBlock(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int ENGINE_free(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int ENGINE_init(long); }
-keepclassmembers class android.util.TypedValue { java.lang.CharSequence coerceToString(); }
-keepclassmembers class android.text.DynamicLayout { void setIndexFirstChangedBlock(int); }
-keepclassmembers class android.widget.ImageView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.text.DynamicLayout { int getLineCount(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object decode(java.io.InputStream); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long ENGINE_load_private_key(long,java.lang.String); }
-keepclassmembers class android.util.TypedValue { java.lang.String coerceToString(int,int); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { int countDots(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { void setInBitmap(android.graphics.BitmapFactory$Options,android.graphics.Bitmap); }
-keepclassmembers class android.text.DynamicLayout { int getLineDescent(int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int EVP_PKEY_type(long); }
-keepclassmembers class android.text.DynamicLayout { int getLineStart(int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { boolean shouldUsePool(java.io.InputStream); }
-keepclassmembers class android.text.DynamicLayout { boolean getLineContainsTab(int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long d2i_PKCS8_PRIV_KEY_INFO(byte[]); }
-keepclassmembers class org.apache.http.conn.ssl.AbstractVerifier { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { byte[] encode(java.lang.Object); }
-keepclassmembers class android.view.View { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.text.DynamicLayout { int getLineTop(int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long getDSAPrivateKeyWrapper(java.security.interfaces.DSAPrivateKey); }
-keepclassmembers class android.text.DynamicLayout { int getParagraphDirection(int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long getECPrivateKeyWrapper(java.security.interfaces.ECPrivateKey,long); }
-keepclassmembers class android.widget.ImageView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.text.DynamicLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.reflect.Method$1 { void <init>(); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisStart(int); }
-keepclassmembers class android.view.View { boolean isInScrollingContainer(); }
-keepclassmembers class java.util.MiniEnumSet$MiniEnumSetIterator { boolean hasNext(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { android.graphics.Bitmap decode(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class android.text.DynamicLayout { int getEllipsisCount(int); }
-keepclassmembers class android.util.TypedValue { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Type { java.lang.String toString(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long getRSAPrivateKeyWrapper(java.security.interfaces.RSAPrivateKey,byte[]); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.view.View { void removePerformClickCallback(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long EC_GROUP_new_curve(int,byte[],byte[],byte[]); }
-keepclassmembers class android.view.View { void removeUnsetPressCallback(); }
-keepclassmembers class android.view.View { void removeLongPressCallback(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void EC_GROUP_set_asn1_flag(long,int); }
-keepclassmembers class android.text.DynamicLayout { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void EC_GROUP_set_point_conversion_form(long,int); }
-keepclassmembers class android.view.View { void removeTapCallback(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long EC_GROUP_new_by_curve_name(java.lang.String); }
-keepclassmembers class java.lang.reflect.Method$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.AuthenticationFailedException { void <init>(java.lang.String); }
-keepclassmembers class android.util.TypedValue { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { com.fsck.k9.Preferences access$000(com.fsck.k9.activity.UpgradeDatabases); }
-keepclassmembers class android.view.View { void cancelLongPress(); }
-keepclassmembers class android.text.DynamicLayout { void access$000(android.text.DynamicLayout,java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.view.View { void removeSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long EC_GROUP_dup(long); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { void access$200(com.fsck.k9.activity.UpgradeDatabases); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void EC_POINT_set_affine_coordinates(long,long,byte[],byte[]); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { boolean actionUpgradeDatabases(android.content.Context,android.content.Intent); }
-keepclassmembers class com.fsck.k9.service.RemoteControlService$1 { void <init>(com.fsck.k9.service.RemoteControlService,android.content.Intent,com.fsck.k9.Preferences); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long EC_KEY_get0_group(long); }
-keepclassmembers class android.widget.ImageView { void setColorFilter(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.ImageView { int getBaseline(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void EC_GROUP_set_generator(long,long,byte[],byte[]); }
-keepclassmembers class android.text.MeasuredText { float addStyleRun(android.text.TextPaint,android.text.style.MetricAffectingSpan[],int,android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class com.fsck.k9.service.RemoteControlService$1 { void run(); }
-keepclassmembers class android.widget.ImageView { void setColorFilter(int); }
-keepclassmembers class java.lang.HexStringParser { void <init>(int,int); }
-keepclassmembers class java.lang.HexStringParser { double parseDouble(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { void initializeLayout(); }
-keepclassmembers class java.lang.HexStringParser { float parseFloat(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { void launchOriginalActivity(); }
-keepclassmembers class android.widget.ImageView { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { void decodeExtras(); }
-keepclassmembers class android.view.View { void setFlags(int,int); }
-keepclassmembers class java.lang.HexStringParser { long parse(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { void setupBroadcastReceiver(); }
-keepclassmembers class android.widget.ImageView { void setAlpha(int); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.ImageView { void applyColorMod(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void RAND_seed(byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int RAND_load_file(java.lang.String,long); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { void onPause(); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { void onResume(); }
-keepclassmembers class java.lang.HexStringParser { void parseHexSign(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int X509_NAME_hash_old(javax.security.auth.x500.X500Principal); }
-keepclassmembers class java.lang.HexStringParser { void parseExponent(java.lang.String); }
-keepclassmembers class android.widget.ImageView { boolean isOpaque(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState { void <init>(java.lang.Long,java.lang.Long,long,int); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int X509_NAME_hash(javax.security.auth.x500.X500Principal,java.lang.String); }
-keepclassmembers class android.widget.ImageView { boolean isFilledByImage(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState { java.lang.Long access$000(com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState); }
-keepclassmembers class java.lang.HexStringParser { void parseMantissa(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState { com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState getNewRootState(); }
-keepclassmembers class libcore.net.MimeUtils { void add(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState { void applyValues(android.content.ContentValues); }
-keepclassmembers class android.text.MeasuredText { int breakText(int,boolean,float); }
-keepclassmembers class libcore.net.MimeUtils { java.io.InputStream getContentTypesPropertiesStream(); }
-keepclassmembers class java.lang.HexStringParser { void setInfinite(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long d2i_X509(byte[]); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler { int[] getDimensions(com.bumptech.glide.util.MarkEnforcingInputStream,com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream,android.graphics.BitmapFactory$Options); }
-keepclassmembers class java.lang.HexStringParser { void setZero(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { byte[] i2d_X509(long); }
-keepclassmembers class java.lang.HexStringParser { void checkedAddExponent(long); }
-keepclassmembers class android.widget.ImageView { void setVisibility(int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int X509_cmp(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int get_X509_hashCode(long); }
-keepclassmembers class libcore.net.MimeUtils { void applyOverrides(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void X509_print_ex(long,long,long,long); }
-keepclassmembers class java.lang.HexStringParser { void processNormalNumber(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { byte[] X509_get_issuer_name(long); }
-keepclassmembers class android.widget.ImageView { void onAttachedToWindow(); }
-keepclassmembers class com.fsck.k9.activity.UpgradeDatabases { android.widget.TextView access$100(com.fsck.k9.activity.UpgradeDatabases); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long EC_POINT_new(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { byte[] X509_get_subject_name(long); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState { com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState nextChild(long); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$1 { void <init>(com.fsck.k9.ui.messageview.MessageContainerView,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.String get_X509_sig_alg_oid(long); }
-keepclassmembers class android.widget.GridView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class org.kxml2.io.KXmlParser$ValueContext { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$1 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class java.lang.HexStringParser { void processSubNormalNumber(); }
-keepclassmembers class android.widget.GridView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.text.MeasuredText { float measure(int,int); }
-keepclassmembers class android.view.View { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.widget.ImageView { void onDetachedFromWindow(); }
-keepclassmembers class com.fsck.k9.mail.AuthenticationFailedException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.GridView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.Object[][] get_X509_GENERAL_NAME_stack(long,int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { void <init>(com.fsck.k9.mail.store.StoreConfig,com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.Certificate[] verifySignature(java.io.InputStream,java.io.InputStream); }
-keepclassmembers class android.widget.ImageView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.text.MeasuredText { void <clinit>(); }
-keepclassmembers class android.widget.ImageView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long X509_get_notBefore(long); }
-keepclassmembers class java.lang.HexStringParser { void discardTrailingBits(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void X509_verify(long,long); }
-keepclassmembers class android.widget.ImageView { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long X509_get_notAfter(long); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState { com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState nextMultipartChild(long); }
-keepclassmembers class android.view.View { void onSizeChanged(int,int,int,int); }
-keepclassmembers class libcore.net.MimeUtils { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { byte[] get_X509_cert_info_enc(long); }
-keepclassmembers class android.view.View { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { byte[] get_X509_signature(long); }
-keepclassmembers class android.view.View { android.view.ViewParent getParent(); }
-keepclassmembers class android.view.View { int getScrollX(); }
-keepclassmembers class libcore.net.MimeUtils { java.lang.String guessMimeTypeFromExtension(java.lang.String); }
-keepclassmembers class java.lang.HexStringParser { void fitMantissaInDesiredWidth(int); }
-keepclassmembers class android.view.WindowCallbackWrapper { void <init>(android.view.Window$Callback); }
-keepclassmembers class android.view.View { void getDrawingRect(android.graphics.Rect); }
-keepclassmembers class android.view.View { int getHeight(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int X509_check_issued(long,long); }
-keepclassmembers class java.lang.HexStringParser { void round(); }
-keepclassmembers class android.graphics.Color { int red(int); }
-keepclassmembers class android.graphics.Color { int green(int); }
-keepclassmembers class android.view.View { int getMeasuredHeight(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState { com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState popParent(); }
-keepclassmembers class java.lang.HexStringParser { java.lang.String getNormalizedSignificand(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Color { int blue(int); }
-keepclassmembers class android.view.View { int getMeasuredState(); }
-keepclassmembers class android.view.View { int getScrollY(); }
-keepclassmembers class android.graphics.Color { int alpha(int); }
-keepclassmembers class android.view.View { int getMeasuredWidth(); }
-keepclassmembers class android.graphics.Color { int rgb(int,int,int); }
-keepclassmembers class de.cketti.safecontentresolver.Os { void <clinit>(); }
-keepclassmembers class android.view.View { android.graphics.Matrix getMatrix(); }
-keepclassmembers class de.cketti.safecontentresolver.Os { int fstat(int); }
-keepclassmembers class android.graphics.Color { int argb(int,int,int,int); }
-keepclassmembers class android.view.View { boolean hasIdentityMatrix(); }
-keepclassmembers class android.view.View { void ensureTransformationInfo(); }
-keepclassmembers class android.view.View { int getWidth(); }
-keepclassmembers class de.cketti.safecontentresolver.Os { void init(android.content.Context); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void ASN1_TIME_to_Calendar(long,java.util.Calendar); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long create_BIO_OutputStream(java.io.OutputStream); }
-keepclassmembers class de.cketti.safecontentresolver.Os { void loadLibrary(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void BIO_free_all(long); }
-keepclassmembers class com.fsck.k9.activity.ChooseIdentity$1 { void <init>(com.fsck.k9.activity.ChooseIdentity); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void add(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.ChooseIdentity$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class de.cketti.safecontentresolver.Os { int nativeFstat(int); }
-keepclassmembers class android.view.View { float getRotation(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.String[] getSupportedCipherSuites(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_CTX_set_session_id_context(long,byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_new(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_enable_tls_channel_id(long); }
-keepclassmembers class android.view.View { float getRotationY(); }
-keepclassmembers class android.view.View { android.graphics.Matrix getInverseMatrix(); }
-keepclassmembers class java.lang.HexStringParser { int countBitsLength(long); }
-keepclassmembers class android.view.View { void setRotationY(float); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_CTX_new(); }
-keepclassmembers class android.view.View { void setRotation(float); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set1_tls_channel_id(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_use_PrivateKey(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_check_private_key(long); }
-keepclassmembers class java.lang.HexStringParser { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_client_CA_list(long,byte[][]); }
-keepclassmembers class java.util.zip.ZipException { void <init>(); }
-keepclassmembers class android.graphics.Color { int parseColor(java.lang.String); }
-keepclassmembers class java.util.zip.ZipException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.UnreadWidgetProvider { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_set_mode(long,long); }
-keepclassmembers class android.view.View { float getRotationX(); }
-keepclassmembers class java.lang.HexStringParser { int getOffset(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_set_options(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_clear_options(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_use_psk_identity_hint(long,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void set_SSL_psk_client_callback_enabled(long,boolean); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void set_SSL_psk_server_callback_enabled(long,boolean); }
-keepclassmembers class android.view.View { float getScaleX(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_use_certificate(long,long[]); }
-keepclassmembers class com.fsck.k9.provider.UnreadWidgetProvider { void updateWidget(android.content.Context,android.appwidget.AppWidgetManager,int,java.lang.String); }
-keepclassmembers class android.view.View { void setScaleX(float); }
-keepclassmembers class com.fsck.k9.provider.UnreadWidgetProvider { void updateUnreadCount(android.content.Context); }
-keepclassmembers class android.view.View { void setRotationX(float); }
-keepclassmembers class android.view.View { float getScaleY(); }
-keepclassmembers class android.view.View { void setPivotX(float); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void <init>(); }
-keepclassmembers class com.fsck.k9.service.StorageGoneReceiver { void <init>(); }
-keepclassmembers class com.fsck.k9.service.StorageGoneReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void post(java.lang.Runnable); }
-keepclassmembers class android.view.View { float getPivotY(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void setEnabledProtocols(long,java.lang.String[]); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void postDelayed(java.lang.Runnable,long); }
-keepclassmembers class android.view.View { void setPivotY(float); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.String[] checkEnabledProtocols(java.lang.String[]); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { com.fsck.k9.mail.store.webdav.WebDavFolder createFolder(java.lang.String); }
-keepclassmembers class android.view.View { float getAlpha(); }
-keepclassmembers class android.view.View { void setScaleY(float); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String createUri(com.fsck.k9.mail.ServerSettings); }
-keepclassmembers class android.view.View { boolean hasOverlappingRendering(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawHorizontalTrack(boolean); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class android.view.View { void setAlpha(float); }
-keepclassmembers class android.view.View { float getPivotX(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int get_SSL_CIPHER_algorithm_auth(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void setEnabledCipherSuites(long,java.lang.String[]); }
-keepclassmembers class java.nio.Buffer { void <init>(int,int,long); }
-keepclassmembers class android.graphics.Color { void <clinit>(); }
-keepclassmembers class android.view.View { boolean setAlphaNoInvalidation(float); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_cipher_lists(long,java.lang.String[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long[] SSL_get_ciphers(long); }
-keepclassmembers class java.nio.Buffer { void checkIndex(int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { com.fsck.k9.mail.store.webdav.WebDavStoreSettings decodeUri(java.lang.String); }
-keepclassmembers class android.view.View { void setTransitionAlpha(float); }
-keepclassmembers class android.graphics.Color { int getHtmlColor(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int get_SSL_CIPHER_algorithm_mkey(long); }
-keepclassmembers class java.nio.Buffer { void checkIndex(int,int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.String[] checkEnabledCipherSuites(java.lang.String[]); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlwaysDrawVerticalTrack(boolean); }
-keepclassmembers class android.view.View { float getFinalAlpha(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setParameters(int,int,int,boolean); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class android.view.View { float getTransitionAlpha(); }
-keepclassmembers class java.util.HashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class java.util.HashMap$EntryIterator { void <init>(java.util.HashMap,java.util.HashMap$1); }
-keepclassmembers class android.view.View { int getTop(); }
-keepclassmembers class java.nio.Buffer { int capacity(); }
-keepclassmembers class android.view.View { void setTop(int); }
-keepclassmembers class java.util.HashMap$EntryIterator { void <init>(java.util.HashMap); }
-keepclassmembers class java.nio.Buffer { int checkGetBounds(int,int,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.IncomingStreamHandler { void <clinit>(); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance$1 { void <init>(com.getkeepsafe.relinker.ReLinkerInstance,android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_verify(long,int); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_session(long,long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_session_creation_enabled(long,boolean); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_set_tlsext_host_name(long,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_CTX_enable_npn(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int SSL_set_alpn_protos(long,byte[]); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_do_handshake(long,java.io.FileDescriptor,com.android.org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,int,boolean,byte[],byte[]); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance$1 { void run(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long[] SSL_get_certificate(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long[] SSL_get_peer_cert_chain(long); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer clear(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { int SSL_read(long,java.io.FileDescriptor,com.android.org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,byte[],int,int,int); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer flip(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_write(long,java.io.FileDescriptor,com.android.org.conscrypt.NativeCrypto$SSLHandshakeCallbacks,byte[],int,int,int); }
-keepclassmembers class java.nio.Buffer { boolean hasRemaining(); }
-keepclassmembers class android.view.View { int getBottom(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_shutdown(long,java.io.FileDescriptor,com.android.org.conscrypt.NativeCrypto$SSLHandshakeCallbacks); }
-keepclassmembers class android.widget.ScrollBarDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.X509Certificate[] createChain(java.security.cert.X509Certificate,java.security.cert.X509Certificate[]); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$1 { void <init>(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class java.nio.Buffer { int limit(); }
-keepclassmembers class android.view.View { void setBottom(int); }
-keepclassmembers class java.math.Conversion { java.lang.String bigInteger2String(java.math.BigInteger,int); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer limit(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void drawTrack(android.graphics.Canvas,android.graphics.Rect,boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$1 { android.content.Loader onCreateLoader(int,android.os.Bundle); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_free(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { byte[] SSL_SESSION_session_id(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long SSL_SESSION_get_time(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.String SSL_SESSION_get_version(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { java.lang.String SSL_SESSION_cipher(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_SESSION_free(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { byte[] i2d_SSL_SESSION(long); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { long d2i_SSL_SESSION(byte[]); }
-keepclassmembers class android.widget.ScrollBarDrawable { void drawThumb(android.graphics.Canvas,android.graphics.Rect,int,int,boolean); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$1 { void onLoadFinished(android.content.Loader,com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class android.widget.ExpandableListView { void onRtlPropertiesChanged(int); }
-keepclassmembers class java.nio.Buffer { int position(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class java.nio.Buffer { int checkPutBounds(int,int,int,int); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer position(int); }
-keepclassmembers class android.net.Uri$AbstractPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$1 { void onLoadFinished(android.content.Loader,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { com.fsck.k9.mail.store.webdav.ConnectionInfo doInitialConnection(); }
-keepclassmembers class android.net.Uri$AbstractPart { java.lang.String getDecoded(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$1 { void onLoaderReset(android.content.Loader); }
-keepclassmembers class java.nio.Buffer { int remaining(); }
-keepclassmembers class java.nio.Buffer { void checkWritable(); }
-keepclassmembers class java.nio.Buffer { void positionImpl(int); }
-keepclassmembers class android.view.View { int getLeft(); }
-keepclassmembers class com.android.org.conscrypt.NativeCrypto { void SSL_interrupt(long); }
-keepclassmembers class android.view.View { void setLeft(int); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$1 { void <init>(com.fsck.k9.activity.compose.RecipientPresenter,android.content.Context,java.lang.String,com.fsck.k9.mail.Address[],com.fsck.k9.mail.Message$RecipientType); }
-keepclassmembers class com.fsck.k9.provider.UnreadWidgetProvider { void onDeleted(android.content.Context,int[]); }
-keepclassmembers class android.util.FloatProperty { void <init>(java.lang.String); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setHorizontalTrackDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { void <clinit>(); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Float); }
-keepclassmembers class android.widget.ScrollBarDrawable { int getSize(boolean); }
-keepclassmembers class android.util.FloatProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { float getCurrentAnimatorScale(); }
-keepclassmembers class com.fsck.k9.provider.UnreadWidgetProvider { void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility$1 { void <init>(java.io.InputStream,boolean,java.io.InputStream); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection { void <init>(com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$1 { void deliverResult(java.util.List); }
-keepclassmembers class com.android.internal.policy.PolicyManager { android.view.Window makeNewWindow(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$1 { void deliverResult(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility$1 { void close(); }
-keepclassmembers class android.widget.ScrollBarDrawable { android.widget.ScrollBarDrawable mutate(); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createPaint(android.graphics.Paint); }
-keepclassmembers class android.graphics.CanvasProperty { android.graphics.CanvasProperty createFloat(float); }
-keepclassmembers class android.view.View { void setRight(int); }
-keepclassmembers class android.view.View { int getRight(); }
-keepclassmembers class java.nio.Buffer { java.nio.Buffer rewind(); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils { java.security.cert.X509Certificate findCert(java.security.Principal,java.security.cert.X509Certificate[]); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setVerticalThumbDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.internal.policy.PolicyManager { void <clinit>(); }
-keepclassmembers class android.graphics.CanvasProperty { void <init>(long); }
-keepclassmembers class android.widget.ScrollBarDrawable { void setAlpha(int); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.graphics.CanvasProperty { long getNativeContainer(); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreateFloat(float); }
-keepclassmembers class android.graphics.CanvasProperty { long nCreatePaint(long); }
-keepclassmembers class com.fsck.k9.view.K9PullToRefreshListView$1 { void <init>(com.fsck.k9.view.K9PullToRefreshListView,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { void showStrictModeViolation(boolean); }
-keepclassmembers class android.net.Uri$AbstractPart { void writeTo(android.os.Parcel); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set entrySet(); }
-keepclassmembers class com.fsck.k9.view.K9PullToRefreshListView$1 { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.K9PullToRefreshListView$1 { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { boolean isEmpty(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { int hashCode(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.util.Set keySet(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { boolean hasToBeEncoded(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String findFormAction(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { void <init>(); }
-keepclassmembers class android.widget.ScrollBarDrawable { void <clinit>(); }
-keepclassmembers class android.view.View { float getY(); }
-keepclassmembers class org.apache.http.impl.entity.EntityDeserializer { void <init>(org.apache.http.entity.ContentLengthStrategy); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { void writeNameValueField(java.io.BufferedWriter,com.fsck.k9.mail.internet.MimeHeader$Field); }
-keepclassmembers class android.view.View { float getZ(); }
-keepclassmembers class android.view.View { float getElevation(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { void <init>(java.util.Map); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { void writeNameValueField(java.lang.StringBuilder,com.fsck.k9.mail.internet.MimeHeader$Field); }
-keepclassmembers class android.view.View { float getTranslationX(); }
-keepclassmembers class android.view.View { void setTranslationX(float); }
-keepclassmembers class org.apache.http.impl.entity.EntityDeserializer { org.apache.http.entity.BasicHttpEntity doDeserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { int size(); }
-keepclassmembers class android.view.View { float getTranslationY(); }
-keepclassmembers class android.view.View { void setElevation(float); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getFolderListXml(); }
-keepclassmembers class android.view.View { void setTranslationY(float); }
-keepclassmembers class java.util.Collections$UnmodifiableMap { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { void clear(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getFolderName(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { void addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$1 { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer wrap(byte[],int,int); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer wrap(byte[]); }
-keepclassmembers class android.view.View { float getTranslationZ(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getRoot(); }
-keepclassmembers class java.nio.ByteBuffer { void <init>(int,long); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { java.lang.String[] getHeader(java.lang.String); }
-keepclassmembers class android.view.View { void setTranslationZ(float); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { void addRawHeader(java.lang.String,java.lang.String); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$1 { void <init>(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class java.nio.ByteBuffer { int arrayOffset(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { java.util.Set getHeaderNames(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { void removeHeader(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { void setCharset(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List,byte[]); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { void setHeader(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { java.lang.String toString(); }
-keepclassmembers class android.view.View { void setStateListAnimator(android.animation.StateListAnimator); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { java.lang.String getFirstHeader(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.MailboxListFieldImpl$1 { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.MailboxListFieldImpl$1 { org.apache.james.mime4j.dom.field.MailboxListField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.MailboxListFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.io.InputStream sendRequest(java.lang.String,java.lang.String,org.apache.http.entity.StringEntity,java.util.Map,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.GeneralNames$1); }
-keepclassmembers class java.nio.ByteBuffer { byte[] array(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { java.util.List access$100(org.apache.harmony.security.x509.GeneralNames); }
-keepclassmembers class android.view.View { void setOutlineProviderFromAttribute(int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getSpecialFoldersList(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void <init>(com.fsck.k9.mail.filter.PeekableInputStream); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void checkTokenIsString(java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatcher$State { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { boolean equalsIgnoreCase(java.lang.Object,java.lang.String); }
-keepclassmembers class android.view.IWindowManager$Stub$Proxy { boolean hasNavigationBar(); }
-keepclassmembers class android.view.View { void setOutlineProvider(android.view.ViewOutlineProvider); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer allocate(int); }
-keepclassmembers class org.apache.http.impl.entity.EntityDeserializer { org.apache.http.HttpEntity deserialize(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpMessage); }
-keepclassmembers class android.view.View { android.view.ViewOutlineProvider getOutlineProvider(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { void handleUnexpectedRedirect(org.apache.http.HttpResponse,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeHeader { void writeTo(java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { boolean isStatusResponse(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.NamespaceResponse { com.fsck.k9.mail.store.imap.NamespaceResponse parse(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class android.view.View { void rebuildOutline(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { java.lang.String parseBareString(boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { boolean parseCommandContinuationRequest(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { com.fsck.k9.mail.store.imap.ImapList parseList(com.fsck.k9.mail.store.imap.ImapList,char,char); }
-keepclassmembers class java.nio.ByteBuffer { boolean isAccessible(); }
-keepclassmembers class android.view.View { void getHitRect(android.graphics.Rect); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer get(byte[]); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer order(java.nio.ByteOrder); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void expect(char); }
-keepclassmembers class com.fsck.k9.mail.store.imap.NamespaceResponse { java.lang.String getHierarchyDelimiter(); }
-keepclassmembers class android.widget.GridView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer put(byte[]); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void parseListResponse(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class android.widget.GridView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.fsck.k9.mail.store.imap.NamespaceResponse { java.lang.String getPrefix(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { java.lang.Object parseLiteral(); }
-keepclassmembers class java.math.Conversion { double bigInteger2Double(java.math.BigInteger); }
-keepclassmembers class android.widget.GridView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void <init>(); }
-keepclassmembers class java.nio.ByteBuffer { java.nio.ByteBuffer put(java.nio.ByteBuffer); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.view.View { boolean pointInView(float,float); }
-keepclassmembers class java.math.Conversion { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void parseNil(); }
-keepclassmembers class com.android.okio.SegmentPool { void <init>(); }
-keepclassmembers class android.view.View { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.mail.store.imap.NamespaceResponse { com.fsck.k9.mail.store.imap.NamespaceResponse parse(java.util.List); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { java.lang.String parseQuoted(); }
-keepclassmembers class com.android.okio.SegmentPool { com.android.okio.Segment take(); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class android.widget.ExpandableListView { long getPackedPositionForGroup(int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { java.lang.String parseQuotedOrNil(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { boolean testAuthenticationResponse(org.apache.http.HttpResponse); }
-keepclassmembers class com.android.okio.SegmentPool { void recycle(com.android.okio.Segment); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings$SignatureSetting { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void parseResponseText(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class com.bumptech.glide.manager.EmptyRequestManagerTreeNode { void <init>(); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings$SignatureSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings$SignatureSetting { java.lang.Object getDefaultValue(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$3 { void <init>(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <init>(); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { android.view.ViewGroup$HoverTarget obtain(android.view.View); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$3 { void onRefresh(com.handmark.pulltorefresh.library.PullToRefreshBase); }
-keepclassmembers class android.view.View { boolean getGlobalVisibleRect(android.graphics.Rect); }
-keepclassmembers class android.view.View { boolean pointInView(float,float,float); }
-keepclassmembers class com.fsck.k9.mail.store.imap.NamespaceResponse { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { void invalidateOutline(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { java.lang.String parseTaggedResponse(); }
-keepclassmembers class com.android.okio.SegmentPool { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { java.lang.Object parseToken(com.fsck.k9.mail.store.imap.ImapList); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void recycle(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentDescriptionFieldImpl { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentDescriptionFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.view.View { void offsetTopAndBottom(int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { java.lang.String parseString(); }
-keepclassmembers class com.fsck.k9.notification.NotificationGroupKeys { java.lang.String getGroupKey(com.fsck.k9.Account); }
-keepclassmembers class android.widget.ExpandableListView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void parseUntaggedResponse(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void readContinuationRequest(com.fsck.k9.mail.store.imap.ImapResponseCallback); }
-keepclassmembers class android.widget.ExpandableListView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { java.lang.String readStringUntil(char); }
-keepclassmembers class android.widget.ExpandableListView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { java.lang.String readStringUntilEndOfLine(); }
-keepclassmembers class android.widget.ExpandableListView { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { java.lang.Object readToken(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void readTaggedResponse(com.fsck.k9.mail.store.imap.ImapResponseCallback); }
-keepclassmembers class android.view.View { void offsetLeftAndRight(int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void readTokens(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$3 { void <init>(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$3 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { boolean authenticate(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void readUntaggedResponse(com.fsck.k9.mail.store.imap.ImapResponseCallback); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { void skipIfSpace(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { com.fsck.k9.mail.store.imap.ImapResponse readResponse(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { com.fsck.k9.mail.store.imap.ImapResponse readResponse(com.fsck.k9.mail.store.imap.ImapResponseCallback); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void <init>(com.bumptech.glide.load.resource.gif.GifDrawable$GifState); }
-keepclassmembers class android.view.View { android.view.ViewGroup$LayoutParams getLayoutParams(); }
-keepclassmembers class android.view.ViewGroup$HoverTarget { void <clinit>(); }
-keepclassmembers class android.widget.ExpandableListView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParser { java.util.List readStatusResponse(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.store.imap.UntaggedHandler); }
-keepclassmembers class android.view.View { void scrollTo(int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifHeader,byte[],android.graphics.Bitmap); }
-keepclassmembers class android.view.View { void scrollBy(int,int); }
-keepclassmembers class android.view.View { void setLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void <init>(com.bumptech.glide.load.resource.gif.GifDrawable,android.graphics.Bitmap,com.bumptech.glide.load.Transformation); }
-keepclassmembers class android.view.View { boolean initialAwakenScrollBars(); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int,boolean); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(); }
-keepclassmembers class android.view.View { void resolveLayoutParams(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { void doFBA(com.fsck.k9.mail.store.webdav.ConnectionInfo); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineResource { int getSize(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineResource { boolean isCacheable(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineResource { void recycle(); }
-keepclassmembers class android.view.View { boolean skipInvalidate(); }
-keepclassmembers class android.view.View { boolean awakenScrollBars(int); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineResource { void <init>(com.bumptech.glide.load.engine.Resource,boolean); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountNumberExtractor { java.lang.Integer getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void reset(); }
-keepclassmembers class android.view.View { void invalidate(android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountNumberExtractor { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountNumberExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineResource { void release(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void resetLoopCount(); }
-keepclassmembers class android.view.View { void invalidate(int,int,int,int); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineResource { void acquire(); }
-keepclassmembers class android.view.View { void invalidate(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler { void <init>(java.util.Map,java.lang.ref.ReferenceQueue); }
-keepclassmembers class android.view.View { void invalidateInternal(int,int,int,int,boolean,boolean); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineResource { java.lang.Object get(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { void checkSettings(); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine$RefQueueIdleHandler { boolean queueIdle(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void startRunning(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineResource { void setResourceListener(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.CharSequence createFromParcel(android.os.Parcel); }
-keepclassmembers class android.text.TextUtils$1 { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { byte[] getData(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { android.graphics.Bitmap getFirstFrame(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { int getFrameCount(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { int getIntrinsicWidth(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$TagPos { void <init>(org.htmlcleaner.HtmlCleaner,int,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { int getOpacity(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { com.bumptech.glide.load.Transformation getFrameTransformation(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { boolean isAnimated(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { int getIntrinsicHeight(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$TagPos { java.lang.String access$000(org.htmlcleaner.HtmlCleaner$TagPos); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$TagPos { int access$100(org.htmlcleaner.HtmlCleaner$TagPos); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$TagPos { org.htmlcleaner.TagInfo access$400(org.htmlcleaner.HtmlCleaner$TagPos); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void onFrameReady(int); }
-keepclassmembers class android.view.View { android.view.View getProjectionReceiver(); }
-keepclassmembers class android.animation.AnimatorSet$Dependency { void <init>(android.animation.AnimatorSet$Node,int); }
-keepclassmembers class android.view.View { boolean isProjectionReceiver(); }
-keepclassmembers class android.view.View { void invalidate(boolean); }
-keepclassmembers class android.ddm.DdmRegister { void registerHandlers(); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { void damageShadowReceiver(); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void stopRunning(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void setAlpha(int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void recycle(); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { int hashCode(); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { java.lang.String getName(); }
-keepclassmembers class android.view.View { void invalidateViewProperty(boolean,boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable$ShapeState { void <init>(android.graphics.drawable.ShapeDrawable$ShapeState); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void setLoopCount(int); }
-keepclassmembers class libcore.io.Base64 { byte[] decode(byte[]); }
-keepclassmembers class android.view.View { void damageInParent(); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { java.lang.String toString(); }
-keepclassmembers class libcore.io.Base64 { byte[] decode(byte[],int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable$ShapeState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void start(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable$ShapeState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.text.AttributedCharacterIterator$Attribute { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable { void stop(); }
-keepclassmembers class android.view.View { void transformRect(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable$ShapeState { boolean canApplyTheme(); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException$Reason { void <clinit>(); }
-keepclassmembers class java.util.Hashtable { void <init>(); }
-keepclassmembers class java.util.Hashtable { void <init>(int); }
-keepclassmembers class android.view.View { void invalidateParentCaches(); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException$Reason { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Hashtable { void <init>(int,float); }
-keepclassmembers class android.view.View { void invalidateParentIfNeededAndWasQuickRejected(); }
-keepclassmembers class com.fsck.k9.mail.CertificateValidationException$Reason { com.fsck.k9.mail.CertificateValidationException$Reason[] values(); }
-keepclassmembers class android.view.View { boolean isOpaque(); }
-keepclassmembers class java.util.Hashtable { void constructorPutAll(java.util.Map); }
-keepclassmembers class android.view.View { void computeOpaqueFlags(); }
-keepclassmembers class android.text.TextUtils$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.View { void invalidateParentIfNeeded(); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory { void <init>(com.bumptech.glide.load.data.HttpUrlFetcher$1); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory { java.net.HttpURLConnection build(java.net.URL); }
-keepclassmembers class java.util.Hashtable { int capacityForInitSize(int); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$1 { void <init>(com.fsck.k9.view.FoldableLinearLayout); }
-keepclassmembers class com.fsck.k9.preferences.Settings$FontSizeSetting { void <init>(int); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$1 { void onClick(android.view.View); }
-keepclassmembers class android.view.View { boolean hasOpaqueScrollbars(); }
-keepclassmembers class java.util.Hashtable { void <init>(java.util.Map); }
-keepclassmembers class java.util.Hashtable { int size(); }
-keepclassmembers class java.util.Hashtable { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.fsck.k9.preferences.Settings$FontSizeSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class android.view.View { boolean post(java.lang.Runnable); }
-keepclassmembers class com.fsck.k9.preferences.Settings$FontSizeSetting { java.util.Map getMapping(); }
-keepclassmembers class android.view.View { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class java.util.Hashtable { boolean isEmpty(); }
-keepclassmembers class android.view.View { android.view.ViewRootImpl getViewRootImpl(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getAuthString(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { short getAuthentication(); }
-keepclassmembers class java.util.Hashtable { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { void <init>(android.app.LoaderManagerImpl,int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { com.fsck.k9.mail.Folder getFolder(java.lang.String); }
-keepclassmembers class android.view.View { void postOnAnimation(java.lang.Runnable); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { org.apache.http.protocol.HttpContext getContext(); }
-keepclassmembers class android.view.View { void postOnAnimationDelayed(java.lang.Runnable,long); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory { void <init>(); }
-keepclassmembers class android.view.View { boolean removeCallbacks(java.lang.Runnable); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$6 { void <init>(com.fsck.k9.ui.crypto.MessageCryptoHelper,com.fsck.k9.mail.Part); }
-keepclassmembers class android.view.View { void postInvalidate(int,int,int,int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { com.fsck.k9.mail.store.webdav.WebDavFolder getFolder(java.lang.String); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { void start(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$6 { void writeTo(java.io.OutputStream); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long); }
-keepclassmembers class java.util.Hashtable { boolean containsValue(java.lang.Object); }
-keepclassmembers class android.widget.TimePickerClockDelegate$3 { void <init>(android.widget.TimePickerClockDelegate); }
-keepclassmembers class android.view.View { void postInvalidateDelayed(long,int,int,int,int); }
-keepclassmembers class java.util.Hashtable { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(int,int,int,int); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { void retain(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$5 { void run(); }
-keepclassmembers class java.util.Collections$EmptySet { java.util.Iterator iterator(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void <init>(java.io.File,int,int,long); }
-keepclassmembers class java.util.Collections$EmptySet { void <init>(java.util.Collections$1); }
-keepclassmembers class android.view.View { void postSendViewScrolledAccessibilityEventCallback(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$5 { void <init>(com.fsck.k9.activity.FolderList$FolderListHandler,java.lang.String,boolean); }
-keepclassmembers class android.view.View { void postInvalidateOnAnimation(); }
-keepclassmembers class java.util.Collections$EmptySet { int size(); }
-keepclassmembers class java.util.Hashtable { void constructorPut(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.style.SuggestionSpan$1 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { void stop(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.View { void computeScroll(); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { void reportStart(); }
-keepclassmembers class android.view.View { boolean isHorizontalFadingEdgeEnabled(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { com.fsck.k9.mail.store.webdav.WebDavHttpClient getHttpClient(); }
-keepclassmembers class android.view.View { void postInvalidate(); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$2 { void <init>(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class android.view.View { boolean isVerticalFadingEdgeEnabled(); }
-keepclassmembers class android.view.View { void setVerticalFadingEdgeEnabled(boolean); }
-keepclassmembers class android.view.View { void setHorizontalFadingEdgeEnabled(boolean); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$2 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class android.view.View { float getBottomFadingEdgeStrength(); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { void destroy(); }
-keepclassmembers class android.view.View { float getTopFadingEdgeStrength(); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { void cancel(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { java.io.Writer access$000(com.bumptech.glide.disklrucache.DiskLruCache); }
-keepclassmembers class android.view.View { float getRightFadingEdgeStrength(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getMarkMessagesReadXml(java.lang.String[],boolean); }
-keepclassmembers class android.view.View { float getLeftFadingEdgeStrength(); }
-keepclassmembers class java.util.Hashtable { void rehash(); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] doubleCapacity(); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] makeTable(int); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarEnabled(); }
-keepclassmembers class android.view.View { boolean isHorizontalScrollBarEnabled(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void access$100(com.bumptech.glide.disklrucache.DiskLruCache); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { java.io.File access$1900(com.bumptech.glide.disklrucache.DiskLruCache); }
-keepclassmembers class android.view.View { void setVerticalScrollBarEnabled(boolean); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { boolean access$200(com.bumptech.glide.disklrucache.DiskLruCache); }
-keepclassmembers class android.view.View { void recomputePadding(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { int access$1800(com.bumptech.glide.disklrucache.DiskLruCache); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void access$2000(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <init>(); }
-keepclassmembers class android.net.Uri$PathSegments { java.lang.String get(int); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { void onLoadCanceled(android.content.Loader); }
-keepclassmembers class android.net.Uri$PathSegments { int size(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void access$300(com.bumptech.glide.disklrucache.DiskLruCache); }
-keepclassmembers class android.net.Uri$PathSegments { java.lang.Object get(int); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <init>(java.lang.ThreadLocal$Values); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getMessageCountXml(java.lang.String); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { int access$402(com.bumptech.glide.disklrucache.DiskLruCache,int); }
-keepclassmembers class android.net.Uri$PathSegments { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void checkNotClosed(); }
-keepclassmembers class libcore.io.Base64 { void <clinit>(); }
-keepclassmembers class java.util.Hashtable { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean); }
-keepclassmembers class java.lang.ThreadLocal$Values { void inheritValues(java.lang.ThreadLocal$Values); }
-keepclassmembers class android.transition.Slide$CalculateSlideHorizontal { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { void <init>(android.content.Context); }
-keepclassmembers class android.widget.AbsListView$SavedState$1 { void <init>(); }
-keepclassmembers class android.transition.Slide$CalculateSlideHorizontal { void <init>(android.transition.Slide$1); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { boolean ensureServiceBound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { void onLoadComplete(android.content.Loader,java.lang.Object); }
-keepclassmembers class android.view.View { int getScrollBarStyle(); }
-keepclassmembers class android.view.View { void setScrollBarStyle(int); }
-keepclassmembers class android.net.Uri$PathSegments { void <init>(java.lang.String[],int); }
-keepclassmembers class android.view.View { int computeHorizontalScrollRange(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getMessageEnvelopeXml(java.lang.String[]); }
-keepclassmembers class android.view.View { int computeHorizontalScrollExtent(); }
-keepclassmembers class java.util.Hashtable { java.util.Set entrySet(); }
-keepclassmembers class android.view.View { int computeVerticalScrollExtent(); }
-keepclassmembers class java.util.Hashtable { java.util.Enumeration keys(); }
-keepclassmembers class java.util.Hashtable { boolean containsMapping(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.View { boolean canScrollVertically(int); }
-keepclassmembers class android.view.View { int computeHorizontalScrollOffset(); }
-keepclassmembers class android.view.View { int computeVerticalScrollRange(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { void ensureServiceUnbound(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.lang.ThreadLocal$Values { void initializeTable(int); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { void handleQueueTask(android.support.v4.app.NotificationManagerCompat$Task); }
-keepclassmembers class android.view.View { void onDrawScrollBars(android.graphics.Canvas); }
-keepclassmembers class java.util.Hashtable { java.util.Collection values(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getMessageFlagsXml(java.lang.String[]); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { void handleRetryListenerQueue(android.content.ComponentName); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { void handleServiceConnected(android.content.ComponentName,android.os.IBinder); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { void handleServiceDisconnected(android.content.ComponentName); }
-keepclassmembers class java.lang.ThreadLocal$Values { boolean rehash(); }
-keepclassmembers class android.view.animation.AnimationSet { void <init>(boolean); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { void processListenerQueue(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord); }
-keepclassmembers class android.view.animation.AnimationSet { android.view.animation.AnimationSet clone(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getMessageUrlsXml(java.lang.String[]); }
-keepclassmembers class org.htmlcleaner.ProxyTagNode { void <init>(org.htmlcleaner.CommentNode,org.htmlcleaner.TagNode); }
-keepclassmembers class java.util.Hashtable { boolean equals(java.lang.Object); }
-keepclassmembers class org.htmlcleaner.ProxyTagNode { void <init>(org.htmlcleaner.ContentNode,org.htmlcleaner.TagNode); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$DirectorySetting { void <init>(java.io.File); }
-keepclassmembers class java.util.Hashtable { int hashCode(); }
-keepclassmembers class android.view.animation.AnimationSet { void setFlag(int,boolean); }
-keepclassmembers class android.view.View { int computeVerticalScrollOffset(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$DirectorySetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class org.htmlcleaner.ProxyTagNode { org.htmlcleaner.TagNode getParent(); }
-keepclassmembers class android.view.animation.AnimationSet { void init(); }
-keepclassmembers class org.htmlcleaner.ProxyTagNode { org.htmlcleaner.BaseToken getToken(); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { void callOnLoadFinished(android.content.Loader,java.lang.Object); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillAfter(boolean); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getMessagesXml(); }
-keepclassmembers class org.htmlcleaner.ProxyTagNode { boolean removeFromTree(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void add(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class android.view.animation.AnimationSet { void setFillBefore(boolean); }
-keepclassmembers class com.fsck.k9.preferences.FolderSettings { void <clinit>(); }
-keepclassmembers class android.view.animation.AnimationSet { void setRepeatMode(int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getMoveOrCopyMessagesReadXml(java.lang.String[],boolean); }
-keepclassmembers class java.util.Hashtable { java.lang.String toString(); }
-keepclassmembers class android.view.animation.AnimationSet { void setStartOffset(long); }
-keepclassmembers class android.view.animation.AnimationSet { boolean hasAlpha(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.lang.ThreadLocal$Values { void put(java.lang.ThreadLocal,java.lang.Object); }
-keepclassmembers class android.view.animation.AnimationSet { void setDuration(long); }
-keepclassmembers class android.view.animation.AnimationSet { void addAnimation(android.view.animation.Animation); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.util.List getPersonalNamespaces(boolean); }
-keepclassmembers class android.view.View { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class java.lang.ThreadLocal$Values { void cleanUp(); }
-keepclassmembers class com.fsck.k9.mail.internet.ListHeaders { com.fsck.k9.mail.Address extractAddress(java.lang.String); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { java.lang.String toString(); }
-keepclassmembers class java.lang.ThreadLocal$Values { java.lang.Object getAfterMiss(java.lang.ThreadLocal); }
-keepclassmembers class android.view.View { void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class com.fsck.k9.preferences.FolderSettings { java.util.Map convert(java.util.Map); }
-keepclassmembers class android.view.View { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.fsck.k9.preferences.FolderSettings { java.util.Map getFolderSettings(com.fsck.k9.preferences.Storage,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.View { void assignParent(android.view.ViewParent); }
-keepclassmembers class com.fsck.k9.mail.internet.ListHeaders { void <clinit>(); }
-keepclassmembers class android.view.View { void onDrawHorizontalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int); }
-keepclassmembers class android.view.animation.AnimationSet { void setStartTime(long); }
-keepclassmembers class android.view.animation.AnimationSet { long getStartTime(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { void scheduleListenerRetry(android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord); }
-keepclassmembers class java.util.Hashtable { boolean access$1100(java.util.Hashtable,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.LoaderManagerImpl$LoaderInfo { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean canApplyTheme(); }
-keepclassmembers class com.fsck.k9.mail.internet.ListHeaders { com.fsck.k9.mail.Address[] getListPostAddresses(com.fsck.k9.mail.Message); }
-keepclassmembers class android.view.View { void onAttachedToWindow(); }
-keepclassmembers class java.util.Hashtable { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLanguageFieldImpl$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { com.fsck.k9.mail.Folder getSendSpoolFolder(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLanguageFieldImpl$1 { org.apache.james.mime4j.dom.field.ContentLanguageField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.view.animation.AnimationSet { long getDuration(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { com.fsck.k9.mail.store.StoreConfig getStoreConfig(); }
-keepclassmembers class java.util.Hashtable { int access$500(java.util.Hashtable); }
-keepclassmembers class android.view.View { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class java.util.Hashtable { java.util.Hashtable$HashtableEntry[] access$600(java.util.Hashtable); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLanguageFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { boolean isCopyCapable(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { boolean isMoveCapable(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { com.fsck.k9.mail.store.webdav.DataSet processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map); }
-keepclassmembers class android.view.View { void resetRtlProperties(); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Matcher matcher(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String[] split(java.lang.CharSequence,int); }
-keepclassmembers class android.view.View { void onScreenStateChanged(int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { java.lang.String getUrl(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.app.SearchDialog { int resolveDialogTheme(android.content.Context); }
-keepclassmembers class android.view.animation.AnimationSet { void initializeInvalidateRegion(int,int,int,int); }
-keepclassmembers class android.view.View { boolean isRtlCompatibilityMode(); }
-keepclassmembers class android.app.SearchDialog { void <init>(android.content.Context,android.app.SearchManager); }
-keepclassmembers class android.view.View { boolean needRtlPropertiesResolution(); }
-keepclassmembers class android.view.View { boolean hasRtlSupport(); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String[] split(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.preferences.FolderSettings { java.util.Set upgrade(int,java.util.Map); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { void updateListenerMap(); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.preferences.FolderSettings { java.util.Map validate(int,java.util.Map,boolean); }
-keepclassmembers class android.view.View { void onRtlPropertiesChanged(int); }
-keepclassmembers class java.lang.ThreadLocal$Values { void remove(java.lang.ThreadLocal); }
-keepclassmembers class java.util.regex.Pattern { java.util.regex.Pattern compile(java.lang.String); }
-keepclassmembers class java.util.regex.Pattern { void <init>(java.lang.String,int); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void deleteIfExists(java.io.File); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String,long); }
-keepclassmembers class java.lang.ThreadLocal$Values { int next(int); }
-keepclassmembers class android.view.animation.AnimationSet { boolean getTransformation(long,android.view.animation.Transformation); }
-keepclassmembers class java.util.regex.Pattern { void compile(); }
-keepclassmembers class java.lang.ThreadLocal$Values { java.lang.Object[] access$000(java.lang.ThreadLocal$Values); }
-keepclassmembers class android.app.SearchDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setHotspot(float,float); }
-keepclassmembers class java.lang.ThreadLocal$Values { int access$100(java.lang.ThreadLocal$Values); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class java.lang.ThreadLocal$Values { void <clinit>(); }
-keepclassmembers class java.util.regex.Pattern { boolean matches(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class android.view.View { boolean canResolveLayoutDirection(); }
-keepclassmembers class android.view.View { boolean resolveLayoutDirection(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { com.fsck.k9.mail.store.webdav.DataSet processRequest(java.lang.String,java.lang.String,java.lang.String,java.util.Map,boolean); }
-keepclassmembers class android.view.ViewGroup$1 { void <init>(android.view.ViewGroup); }
-keepclassmembers class java.util.regex.Pattern { java.lang.String quote(java.lang.String); }
-keepclassmembers class android.app.SearchDialog { void createContentView(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.view.View { void resetResolvedLayoutDirection(); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionInherited(); }
-keepclassmembers class libcore.net.event.NetworkEventListener { void <init>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.view.View { boolean isPaddingResolved(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.View { void resolvePadding(); }
-keepclassmembers class com.fsck.k9.notification.SendFailedNotifications { void <init>(com.fsck.k9.notification.NotificationController,com.fsck.k9.notification.NotificationActionCreator); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setLayoutDirection(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getOpacity(); }
-keepclassmembers class com.fsck.k9.notification.SendFailedNotifications { android.support.v4.app.NotificationManagerCompat getNotificationManager(); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser { org.apache.james.mime4j.parser.MimeStreamParser getMimeStreamParser(); }
-keepclassmembers class android.view.animation.AnimationSet { void initialize(int,int,int,int); }
-keepclassmembers class com.fsck.k9.notification.SendFailedNotifications { int getSendFailedNotificationIcon(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { boolean handleMessage(android.os.Message); }
-keepclassmembers class com.fsck.k9.notification.SendFailedNotifications { void clearSendFailedNotification(com.fsck.k9.Account); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean isStateful(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean onStateChange(int[]); }
-keepclassmembers class com.fsck.k9.notification.SendFailedNotifications { void showSendFailedNotification(com.fsck.k9.Account,java.lang.Exception); }
-keepclassmembers class android.app.SearchDialog { boolean show(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser { void parse(com.fsck.k9.mail.Part,java.io.InputStream); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { boolean onLevelChange(int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider { void <init>(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.app.SearchDialog { boolean doShow(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle); }
-keepclassmembers class android.view.View { void resetResolvedPadding(); }
-keepclassmembers class java.util.regex.Pattern { long compileImpl(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider { com.fsck.k9.helper.MessageHelper access$100(com.fsck.k9.provider.MessageProvider); }
-keepclassmembers class android.view.View { void resetResolvedPaddingInternal(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider { java.lang.String[] access$000(); }
-keepclassmembers class android.view.View { void onDetachedFromWindow(); }
-keepclassmembers class android.view.View { void onDetachedFromWindowInternal(); }
-keepclassmembers class android.app.SearchDialog { boolean show(android.content.ComponentName,android.os.Bundle); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.view.View { void cleanupDraw(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider { int delete(android.net.Uri,java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$CryptoStatusDisplayType { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { com.bumptech.glide.disklrucache.DiskLruCache open(java.io.File,int,int,long); }
-keepclassmembers class android.view.View { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { boolean journalRebuildRequired(); }
-keepclassmembers class android.view.View { int getWindowAttachCount(); }
-keepclassmembers class android.view.View { android.os.IBinder getWindowToken(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager { void queueTask(android.support.v4.app.NotificationManagerCompat$Task); }
-keepclassmembers class android.graphics.Paint { void <init>(int); }
-keepclassmembers class com.fsck.k9.search.LocalSearch$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.app.SearchDialog { void onStart(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.graphics.DashPathEffect { void <init>(float[],float); }
-keepclassmembers class android.app.SearchDialog { void onStop(); }
-keepclassmembers class android.graphics.Paint { void <init>(android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.DashPathEffect { long nativeCreate(float[],float); }
-keepclassmembers class android.view.animation.AnimationSet { void reset(); }
-keepclassmembers class android.view.View { android.os.IBinder getApplicationWindowToken(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.view.View { boolean isLayoutDirectionResolved(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { int getIntrinsicHeight(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch$1 { void <init>(); }
-keepclassmembers class com.bumptech.glide.RequestManager$1 { void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.manager.Lifecycle); }
-keepclassmembers class android.app.SearchDialog { void setWorking(boolean); }
-keepclassmembers class android.view.animation.AnimationSet { void restoreChildrenStartOffset(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void clearMutated(); }
-keepclassmembers class com.bumptech.glide.RequestManager$1 { void run(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.helper.FileBrowserHelper$2 { void <init>(com.fsck.k9.helper.FileBrowserHelper,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeTransformationMatrix(); }
-keepclassmembers class android.view.View { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class com.fsck.k9.search.LocalSearch$1 { com.fsck.k9.search.LocalSearch createFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.Paint { void <init>(); }
-keepclassmembers class com.fsck.k9.helper.FileBrowserHelper$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void processJournal(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.content.res.Resources,android.graphics.drawable.InsetDrawable$1); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider { java.lang.String getType(android.net.Uri); }
-keepclassmembers class android.graphics.Paint { void set(android.graphics.Paint); }
-keepclassmembers class android.view.animation.AnimationSet { boolean willChangeBounds(); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(); }
-keepclassmembers class android.text.style.SuperscriptSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore { void sendMessages(java.util.List); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider { android.net.Uri insert(android.net.Uri,android.content.ContentValues); }
-keepclassmembers class android.view.animation.AnimationSet { android.view.animation.Animation clone(); }
-keepclassmembers class android.graphics.Paint { void setClassVariablesFrom(android.graphics.Paint); }
-keepclassmembers class android.text.style.SuperscriptSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int spread(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int tableSizeFor(int); }
-keepclassmembers class java.lang.Character { int unicodeBlockForCodePoint(int); }
-keepclassmembers class android.app.SearchDialog { void updateUI(); }
-keepclassmembers class java.lang.Character { void <init>(char); }
-keepclassmembers class android.text.method.DigitsKeyListener { char[] getAcceptedChars(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider { boolean onCreate(); }
-keepclassmembers class java.lang.Character { char charValue(); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isSignChar(char); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void readJournal(); }
-keepclassmembers class android.text.method.DigitsKeyListener { boolean isDecimalPointChar(char); }
-keepclassmembers class java.lang.Character { void checkValidCodePoint(int); }
-keepclassmembers class android.graphics.Path { void <init>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Class comparableClassFor(java.lang.Object); }
-keepclassmembers class android.view.View { void dispatchDetachedFromWindow(); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { void <init>(com.bumptech.glide.load.engine.EngineKey,int,int,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.engine.DiskCacheStrategy,com.bumptech.glide.Priority); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Character); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider { android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class android.graphics.Path { void <init>(android.graphics.Path); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(); }
-keepclassmembers class java.lang.Character { int compare(char,char); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$CryptoStatusDisplayType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <init>(boolean,boolean); }
-keepclassmembers class android.app.SearchDialog { void updateSearchAutoComplete(); }
-keepclassmembers class java.lang.Character { java.lang.Character valueOf(char); }
-keepclassmembers class android.graphics.Paint { void setCompatibilityScaling(float); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int compareComparables(java.lang.Class,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.lang.Character { boolean isValidCodePoint(int); }
-keepclassmembers class java.lang.Character { boolean isSupplementaryCodePoint(int); }
-keepclassmembers class android.app.SearchDialog { void updateSearchAppIcon(); }
-keepclassmembers class android.view.View { void cancelPendingInputEvents(); }
-keepclassmembers class android.graphics.Path { void reset(); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { void <init>(com.bumptech.glide.load.engine.EngineKey,int,int,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.engine.DiskCacheStrategy,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DecodeJob$FileOpener); }
-keepclassmembers class java.lang.Character { boolean isHighSurrogate(char); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(boolean,boolean); }
-keepclassmembers class java.lang.Character { boolean isLowSurrogate(char); }
-keepclassmembers class android.graphics.Paint { int getFlags(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean casTabAt(java.util.concurrent.ConcurrentHashMap$Node[],int,java.util.concurrent.ConcurrentHashMap$Node,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.view.View { void onCancelPendingInputEvents(); }
-keepclassmembers class android.graphics.Paint { boolean isAntiAlias(); }
-keepclassmembers class java.lang.Character { boolean isSurrogatePair(char,char); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider { void registerQueryHandler(com.fsck.k9.provider.MessageProvider$QueryHandler); }
-keepclassmembers class java.lang.Character { int charCount(int); }
-keepclassmembers class android.graphics.Paint { void setAntiAlias(boolean); }
-keepclassmembers class android.graphics.Path { android.graphics.Path$FillType getFillType(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void setTabAt(java.util.concurrent.ConcurrentHashMap$Node[],int,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.graphics.Paint { boolean isDither(); }
-keepclassmembers class android.text.method.DigitsKeyListener { android.text.method.DigitsKeyListener getInstance(java.lang.String); }
-keepclassmembers class java.lang.Character { int toCodePoint(char,char); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider { int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.graphics.Path { void setFillType(android.graphics.Path$FillType); }
-keepclassmembers class android.view.View { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(int); }
-keepclassmembers class android.text.method.DigitsKeyListener { int getInputType(); }
-keepclassmembers class java.lang.Character { int codePointAt(char[],int); }
-keepclassmembers class android.graphics.Path { boolean isEmpty(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(java.util.Map); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { com.bumptech.glide.load.engine.DecodeJob$FileOpener access$000(com.bumptech.glide.load.engine.DecodeJob); }
-keepclassmembers class java.nio.channels.ClosedByInterruptException { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { com.bumptech.glide.load.engine.Resource cacheAndDecodeSourceData(java.lang.Object); }
-keepclassmembers class java.lang.Character { int codePointAt(java.lang.CharSequence,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(int,float); }
-keepclassmembers class android.graphics.Paint { void setDither(boolean); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void <init>(java.lang.String[],boolean); }
-keepclassmembers class android.view.View { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.text.method.DigitsKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <init>(int,float,int); }
-keepclassmembers class java.lang.Character { int codePointAt(char[],int,int); }
-keepclassmembers class android.graphics.Path { void moveTo(float,float); }
-keepclassmembers class android.graphics.Path { void rMoveTo(float,float); }
-keepclassmembers class java.lang.Character { int codePointBefore(java.lang.CharSequence,int); }
-keepclassmembers class android.graphics.Path { void lineTo(float,float); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int size(); }
-keepclassmembers class android.graphics.Path { void rLineTo(float,float); }
-keepclassmembers class android.view.View { void dispatchCancelPendingInputEvents(); }
-keepclassmembers class android.view.View { long getDrawingTime(); }
-keepclassmembers class android.graphics.Paint { void setFlags(int); }
-keepclassmembers class android.app.SearchDialog { void updateSearchBadge(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { com.bumptech.glide.load.engine.Resource decodeFromSourceData(java.lang.Object); }
-keepclassmembers class android.graphics.Path { void quadTo(float,float,float,float); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean isEmpty(); }
-keepclassmembers class android.graphics.Paint { void setFakeBoldText(boolean); }
-keepclassmembers class android.graphics.Paint { boolean isFilterBitmap(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.graphics.Path { void rQuadTo(float,float,float,float); }
-keepclassmembers class android.graphics.Paint { void setFilterBitmap(boolean); }
-keepclassmembers class java.lang.Character { int codePointBefore(char[],int,int); }
-keepclassmembers class android.view.View { void setLayerType(int,android.graphics.Paint); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node tabAt(java.util.concurrent.ConcurrentHashMap$Node[],int); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$Style getStyle(); }
-keepclassmembers class android.graphics.Path { void cubicTo(float,float,float,float,float,float); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { com.bumptech.glide.load.engine.Resource decodeSource(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.graphics.Paint { void setStyle(android.graphics.Paint$Style); }
-keepclassmembers class android.graphics.Path { void rCubicTo(float,float,float,float,float,float); }
-keepclassmembers class android.graphics.Paint { int getColor(); }
-keepclassmembers class java.lang.Character { int toChars(int,char[],int); }
-keepclassmembers class android.graphics.Paint { void setColor(int); }
-keepclassmembers class android.graphics.Paint { int getAlpha(); }
-keepclassmembers class android.graphics.Paint { void setAlpha(int); }
-keepclassmembers class android.graphics.Paint { void setARGB(int,int,int,int); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { com.bumptech.glide.load.engine.Resource loadFromCache(com.bumptech.glide.load.Key); }
-keepclassmembers class android.graphics.Path { void arcTo(android.graphics.RectF,float,float,boolean); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { java.util.List formatCookies(java.util.List); }
-keepclassmembers class android.graphics.Path { void arcTo(android.graphics.RectF,float,float); }
-keepclassmembers class android.graphics.Paint { float getStrokeWidth(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.graphics.Paint { void setStrokeWidth(float); }
-keepclassmembers class android.view.View { void setLayerPaint(android.graphics.Paint); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void readJournalLine(java.lang.String); }
-keepclassmembers class android.graphics.Path { void computeBounds(android.graphics.RectF,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean containsValue(java.lang.Object); }
-keepclassmembers class android.graphics.Path { void arcTo(float,float,float,float,float,float,boolean); }
-keepclassmembers class android.graphics.Paint { void setStrokeCap(android.graphics.Paint$Cap); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { java.util.List doFormatOneHeader(java.util.List); }
-keepclassmembers class java.lang.Character { char[] toChars(int); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { void logWithTimeAndKey(java.lang.String,long); }
-keepclassmembers class android.view.View { boolean hasStaticLayer(); }
-keepclassmembers class android.graphics.Path { void close(); }
-keepclassmembers class android.graphics.Path { void detectSimplePath(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void rebuildJournal(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader getShader(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object putVal(java.lang.Object,java.lang.Object,boolean); }
-keepclassmembers class android.graphics.Paint { android.graphics.Shader setShader(android.graphics.Shader); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class android.view.View { android.view.HardwareLayer getHardwareLayer(); }
-keepclassmembers class android.graphics.Paint { void setStrokeMiter(float); }
-keepclassmembers class android.graphics.Path { void addRect(android.graphics.RectF,android.graphics.Path$Direction); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter getColorFilter(); }
-keepclassmembers class android.text.method.DigitsKeyListener { void <clinit>(); }
-keepclassmembers class android.graphics.Paint { android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { com.bumptech.glide.load.engine.Resource transformEncodeAndTranscode(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class android.view.View { boolean isDrawingCacheEnabled(); }
-keepclassmembers class android.view.View { int getLayerType(); }
-keepclassmembers class android.app.SearchDialog { void setUserQuery(java.lang.String); }
-keepclassmembers class android.graphics.Path { void addRect(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class android.graphics.Paint { android.graphics.Xfermode getXfermode(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Xfermode setXfermode(android.graphics.Xfermode); }
-keepclassmembers class android.graphics.Path { void addOval(android.graphics.RectF,android.graphics.Path$Direction); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$3 { void <init>(com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.activity.compose.RecipientPresenter); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { void writeTransformedToCache(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void formatParamAsVer(org.apache.http.util.CharArrayBuffer,java.lang.String,java.lang.String,int); }
-keepclassmembers class android.graphics.Path { void addOval(float,float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class android.graphics.Paint { android.graphics.PathEffect setPathEffect(android.graphics.PathEffect); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void formatCookieAsVer(org.apache.http.util.CharArrayBuffer,org.apache.http.cookie.Cookie,int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$3 { void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class android.graphics.Path { void addCircle(float,float,float,android.graphics.Path$Direction); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$3 { void onTokenChanged(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { void cancel(); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { com.bumptech.glide.load.engine.Resource decodeFromSource(); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface getTypeface(); }
-keepclassmembers class android.graphics.Path { void addArc(android.graphics.RectF,float,float); }
-keepclassmembers class android.graphics.Paint { android.graphics.Typeface setTypeface(android.graphics.Typeface); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { com.bumptech.glide.load.engine.Resource decodeResultFromCache(); }
-keepclassmembers class android.view.View { void dispatchGetDisplayList(); }
-keepclassmembers class android.graphics.Path { void addArc(float,float,float,float,float,float); }
-keepclassmembers class android.view.View { boolean canHaveDisplayList(); }
-keepclassmembers class android.view.View { void setDrawingCacheEnabled(boolean); }
-keepclassmembers class android.view.View { void updateDisplayListIfDirty(); }
-keepclassmembers class android.graphics.Paint { void setStrokeJoin(android.graphics.Paint$Join); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { org.apache.http.Header getVersionHeader(); }
-keepclassmembers class android.graphics.Paint { void setShadowLayer(float,float,float,int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob { com.bumptech.glide.load.engine.Resource decodeSourceFromCache(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$ActionModeCallback { void <init>(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.content.ComponentName { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class android.text.TextPaint { void <init>(); }
-keepclassmembers class android.graphics.Paint { boolean hasShadowLayer(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$ActionModeCallback { java.util.Set getAccountUuidsForSelected(); }
-keepclassmembers class java.lang.Character { int offsetByCodePoints(char[],int,int,int,int); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence); }
-keepclassmembers class android.text.TextPaint { void <init>(int); }
-keepclassmembers class android.content.ComponentName { java.lang.String getPackageName(); }
-keepclassmembers class android.app.RemoteInput { void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],int,android.os.Bundle); }
-keepclassmembers class android.widget.Filter { void filter(java.lang.CharSequence,android.widget.Filter$FilterListener); }
-keepclassmembers class android.graphics.Path { void addRoundRect(android.graphics.RectF,float[],android.graphics.Path$Direction); }
-keepclassmembers class android.graphics.Paint { java.util.Locale getTextLocale(); }
-keepclassmembers class android.graphics.Paint { void setTextLocale(java.util.Locale); }
-keepclassmembers class android.text.TextPaint { void set(android.text.TextPaint); }
-keepclassmembers class android.graphics.Path { void addRoundRect(float,float,float,float,float[],android.graphics.Path$Direction); }
-keepclassmembers class android.content.ComponentName { void appendShortClassName(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Paint { void setElegantTextHeight(boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void putAll(java.util.Map); }
-keepclassmembers class android.graphics.Paint { float getTextSize(); }
-keepclassmembers class android.graphics.Paint { void setTextSize(float); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void renameTo(java.io.File,java.io.File,boolean); }
-keepclassmembers class android.graphics.Paint { float getTextScaleX(); }
-keepclassmembers class android.graphics.Paint { void setTextScaleX(float); }
-keepclassmembers class android.graphics.Paint { void setTextSkewX(float); }
-keepclassmembers class android.app.RemoteInput { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.Paint { float getLetterSpacing(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void trimToSize(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.graphics.Paint { void setLetterSpacing(float); }
-keepclassmembers class android.graphics.Paint { java.lang.String getFontFeatureSettings(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object replaceNode(java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.graphics.Paint { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class android.view.View { android.view.RenderNode getDisplayList(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { java.util.List doFormatManyHeaders(java.util.List); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void close(); }
-keepclassmembers class android.view.View { void resetDisplayList(); }
-keepclassmembers class android.widget.Filter { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2109Spec { int getVersion(); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { org.apache.http.conn.scheme.PlainSocketFactory getSocketFactory(); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { void <init>(org.apache.http.conn.scheme.HostNameResolver); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$ActionModeCallback { void setContextCapabilities(com.fsck.k9.Account,android.view.Menu); }
-keepclassmembers class android.graphics.Paint { float ascent(); }
-keepclassmembers class android.content.ComponentName { java.lang.String flattenToShortString(); }
-keepclassmembers class android.graphics.Paint { float getFontMetrics(android.graphics.Paint$FontMetrics); }
-keepclassmembers class android.view.View { android.graphics.Bitmap getDrawingCache(boolean); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Paint { int getFontMetricsInt(android.graphics.Paint$FontMetricsInt); }
-keepclassmembers class android.graphics.Paint { android.graphics.Paint$FontMetricsInt getFontMetricsInt(); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { void delete(); }
-keepclassmembers class java.lang.Character { int digit(int,int); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams); }
-keepclassmembers class android.graphics.Paint { float getFontSpacing(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String); }
-keepclassmembers class android.graphics.Paint { float measureText(char[],int,int); }
-keepclassmembers class android.view.View { void destroyDrawingCache(); }
-keepclassmembers class android.view.View { void setDrawingCacheBackgroundColor(int); }
-keepclassmembers class android.graphics.Path { void addPath(android.graphics.Path,android.graphics.Matrix); }
-keepclassmembers class com.fsck.k9.mail.filter.EOLConvertingOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.app.RemoteInput { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.lang.Character { int digitImpl(int,int); }
-keepclassmembers class android.content.ComponentName { android.content.ComponentName unflattenFromString(java.lang.String); }
-keepclassmembers class java.lang.Character { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.filter.EOLConvertingOutputStream { void completeCrLf(); }
-keepclassmembers class android.widget.Filter { android.os.Handler access$200(android.widget.Filter); }
-keepclassmembers class android.view.View { void buildDrawingCache(boolean); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { void <init>(); }
-keepclassmembers class java.lang.Character { int digit(char,int); }
-keepclassmembers class android.app.RemoteInput { void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],int,android.os.Bundle,android.app.RemoteInput$1); }
-keepclassmembers class com.fsck.k9.mail.filter.EOLConvertingOutputStream { void writeByte(int); }
-keepclassmembers class android.graphics.Paint { float native_measureText(char[],int,int,int); }
-keepclassmembers class android.widget.Filter { android.os.Handler access$400(android.widget.Filter); }
-keepclassmembers class java.lang.Character { char forDigit(int,int); }
-keepclassmembers class android.widget.Filter { android.os.Handler access$402(android.widget.Filter,android.os.Handler); }
-keepclassmembers class com.fsck.k9.mail.filter.EOLConvertingOutputStream { void endWithCrLfAndFlush(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$3 { void <init>(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class android.graphics.Path { long ni(); }
-keepclassmembers class android.graphics.Path { float[] approximate(float); }
-keepclassmembers class android.app.RemoteInput { void <init>(android.os.Parcel,android.app.RemoteInput$1); }
-keepclassmembers class android.content.ComponentName { java.lang.String toShortString(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$3 { void onAnimationStart(); }
-keepclassmembers class com.fsck.k9.mail.filter.EOLConvertingOutputStream { void flush(); }
-keepclassmembers class android.app.RemoteInput { void <clinit>(); }
-keepclassmembers class android.graphics.Path { long init1(); }
-keepclassmembers class android.graphics.Path { long init2(long); }
-keepclassmembers class android.graphics.Path { void native_reset(long); }
-keepclassmembers class android.view.View { void buildDrawingCacheImpl(boolean); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { com.bumptech.glide.disklrucache.DiskLruCache$Value get(java.lang.String); }
-keepclassmembers class android.widget.Filter { java.lang.CharSequence convertResultToString(java.lang.Object); }
-keepclassmembers class android.graphics.Path { void native_setFillType(long,int); }
-keepclassmembers class android.content.ComponentName { java.lang.String toString(); }
-keepclassmembers class android.graphics.Path { boolean native_isEmpty(long); }
-keepclassmembers class android.graphics.Path { void native_computeBounds(long,android.graphics.RectF); }
-keepclassmembers class android.graphics.Path { void native_moveTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_rMoveTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_lineTo(long,float,float); }
-keepclassmembers class android.graphics.Path { void native_rLineTo(long,float,float); }
-keepclassmembers class android.content.ComponentName { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.Path { void native_quadTo(long,float,float,float,float); }
-keepclassmembers class android.graphics.Paint { float measureText(java.lang.String); }
-keepclassmembers class android.graphics.Path { void native_rQuadTo(long,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_cubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$ActionModeCallback { boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem); }
-keepclassmembers class android.graphics.Path { void native_rCubicTo(long,float,float,float,float,float,float); }
-keepclassmembers class android.graphics.Path { void native_arcTo(long,float,float,float,float,float,float,boolean); }
-keepclassmembers class android.content.ComponentName { int hashCode(); }
-keepclassmembers class android.graphics.Path { void native_close(long); }
-keepclassmembers class android.graphics.Path { void native_addRect(long,float,float,float,float,int); }
-keepclassmembers class android.graphics.Path { void native_addOval(long,float,float,float,float,int); }
-keepclassmembers class android.content.ComponentName { int compareTo(android.content.ComponentName); }
-keepclassmembers class android.graphics.Path { void native_addCircle(long,float,float,float,int); }
-keepclassmembers class android.graphics.Path { void native_addArc(long,float,float,float,float,float,float); }
-keepclassmembers class android.graphics.Paint { float native_measureText(java.lang.String,int); }
-keepclassmembers class java.lang.Character { int getType(char); }
-keepclassmembers class java.lang.Character { int getType(int); }
-keepclassmembers class android.graphics.Path { void native_addRoundRect(long,float,float,float,float,float[],int); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.lang.Character { int getTypeImpl(int); }
-keepclassmembers class android.graphics.Path { void native_addPath(long,long,long); }
-keepclassmembers class java.lang.Character { byte getDirectionality(char); }
-keepclassmembers class android.content.ComponentName { void writeToParcel(android.content.ComponentName,android.os.Parcel); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache { boolean remove(java.lang.String); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { boolean isSecure(java.net.Socket); }
-keepclassmembers class java.lang.Character { byte getDirectionality(int); }
-keepclassmembers class android.graphics.Path { void native_transform(long,long,long); }
-keepclassmembers class android.content.ComponentName { android.content.ComponentName readFromParcel(android.os.Parcel); }
-keepclassmembers class android.graphics.Path { float[] native_approximate(long,float); }
-keepclassmembers class android.content.ComponentName { void <init>(android.os.Parcel); }
-keepclassmembers class android.graphics.Path { void <clinit>(); }
-keepclassmembers class java.lang.Character { byte getIcuDirectionality(int); }
-keepclassmembers class android.net.Uri$Builder { void <init>(); }
-keepclassmembers class android.widget.Filter { java.lang.Object access$300(android.widget.Filter); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder scheme(java.lang.String); }
-keepclassmembers class android.content.ComponentName { void <init>(java.lang.String,android.os.Parcel); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { boolean equals(java.lang.Object); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder opaquePart(android.net.Uri$Part); }
-keepclassmembers class java.lang.Character { int hashCode(); }
-keepclassmembers class android.content.ComponentName { int compareTo(java.lang.Object); }
-keepclassmembers class android.content.ComponentName { void <clinit>(); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { int hashCode(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(android.net.Uri$Part); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet$1 { void <init>(java.util.EnumMap$EnumMapEntrySet); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void clear(); }
-keepclassmembers class org.apache.http.conn.scheme.PlainSocketFactory { void <clinit>(); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet$1 { java.util.Map$Entry get(java.util.MapEntry); }
-keepclassmembers class java.util.EnumMap$EnumMapEntrySet$1 { java.lang.Object get(java.util.MapEntry); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder authority(java.lang.String); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder path(android.net.Uri$PathPart); }
-keepclassmembers class java.lang.Character { boolean isDigit(char); }
-keepclassmembers class android.app.Activity { void <init>(); }
-keepclassmembers class java.lang.Character { boolean isDigit(int); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder encodedPath(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$20 { void <init>(com.fsck.k9.mailstore.LocalFolder,java.lang.String[]); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder appendPath(java.lang.String); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder appendEncodedPath(java.lang.String); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { void <init>(com.android.okio.RealBufferedSource); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$20 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$20 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder query(android.net.Uri$Part); }
-keepclassmembers class android.content.ComponentName { void appendShortString(java.lang.StringBuilder,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { int read(); }
-keepclassmembers class java.lang.Character { boolean isDigitImpl(int); }
-keepclassmembers class android.graphics.Path { void transform(android.graphics.Matrix,android.graphics.Path); }
-keepclassmembers class org.apache.http.conn.HttpHostConnectException { void <init>(org.apache.http.HttpHost,java.net.ConnectException); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$ActionModeCallback { boolean onCreateActionMode(android.view.ActionMode,android.view.Menu); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder encodedQuery(java.lang.String); }
-keepclassmembers class android.app.Activity { android.content.Intent getIntent(); }
-keepclassmembers class android.app.Activity { void setIntent(android.content.Intent); }
-keepclassmembers class java.lang.Character { boolean isISOControl(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.Set keySet(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder fragment(android.net.Uri$Part); }
-keepclassmembers class android.app.Activity { android.app.Application getApplication(); }
-keepclassmembers class java.lang.Character { boolean isISOControl(char); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.Collection values(); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierPart(int); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { int read(byte[],int,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$ActionModeCallback { boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu); }
-keepclassmembers class android.app.Activity { android.app.Activity getParent(); }
-keepclassmembers class android.app.Activity { boolean isChild(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$ActionModeCallback { void onDestroyActionMode(android.view.ActionMode); }
-keepclassmembers class com.fsck.k9.mail.filter.EOLConvertingOutputStream { void write(int); }
-keepclassmembers class android.os.Message { android.os.Message obtain(); }
-keepclassmembers class android.graphics.Path { int native_getFillType(long); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.Set entrySet(); }
-keepclassmembers class android.app.Activity { android.view.WindowManager getWindowManager(); }
-keepclassmembers class android.app.Activity { android.view.Window getWindow(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String); }
-keepclassmembers class java.text.BreakIterator { void <init>(libcore.icu.NativeBreakIterator); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Message); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.String toString(); }
-keepclassmembers class java.lang.Character { boolean isJavaIdentifierPart(char); }
-keepclassmembers class android.app.Activity { android.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { void close(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$ActionModeCallback { void showFlag(boolean); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { java.lang.String toString(); }
-keepclassmembers class android.app.Activity { android.view.View getCurrentFocus(); }
-keepclassmembers class java.lang.Character { boolean isLetter(char); }
-keepclassmembers class java.text.BreakIterator { java.text.BreakIterator getWordInstance(java.util.Locale); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { int hashCode(); }
-keepclassmembers class android.app.Activity { android.app.LoaderManager getLoaderManager(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { boolean equals(java.lang.Object); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int,java.lang.Object); }
-keepclassmembers class java.lang.Character { boolean isLetter(int); }
-keepclassmembers class android.net.Uri$Builder { boolean hasSchemeOrAuthority(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$ActionModeCallback { void showMarkAsRead(boolean); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle); }
-keepclassmembers class java.lang.Character { boolean isLetterImpl(int); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(char); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int,int,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$ActionModeCallback { void showSelectAll(boolean); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigit(int); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog { void <init>(); }
-keepclassmembers class java.text.BreakIterator { void setText(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog { android.view.View access$000(com.fsck.k9.ui.messageview.CryptoInfoDialog); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog { android.view.View access$100(com.fsck.k9.ui.messageview.CryptoInfoDialog); }
-keepclassmembers class java.lang.Character { boolean isLetterOrDigitImpl(int); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(char); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog { android.widget.TextView access$200(com.fsck.k9.ui.messageview.CryptoInfoDialog); }
-keepclassmembers class java.lang.Character { boolean isLowerCase(int); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog { android.widget.TextView access$300(com.fsck.k9.ui.messageview.CryptoInfoDialog); }
-keepclassmembers class java.lang.Character { boolean isLowerCaseImpl(int); }
-keepclassmembers class android.app.Activity { void onCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class com.android.okio.RealBufferedSource$1 { int available(); }
-keepclassmembers class android.net.Uri$Builder { android.net.Uri build(); }
-keepclassmembers class android.os.Message { void recycle(); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(char); }
-keepclassmembers class java.lang.Character { boolean isSpaceChar(int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$1 { void <init>(); }
-keepclassmembers class android.os.Message { android.os.Message obtain(android.os.Handler,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog { void prepareIconAnimation(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$25 { void <init>(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class android.app.BackStackState { void <init>(android.app.FragmentManagerImpl,android.app.BackStackRecord); }
-keepclassmembers class android.view.View { boolean isInEditMode(); }
-keepclassmembers class android.os.Message { void recycleUnchecked(); }
-keepclassmembers class android.view.View { int getRightPaddingOffset(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$25 { java.lang.Long doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.View { int getLeftPaddingOffset(); }
-keepclassmembers class java.lang.Character { boolean isSpace(char); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog { com.fsck.k9.ui.messageview.CryptoInfoDialog newInstance(com.fsck.k9.view.MessageCryptoDisplayStatus); }
-keepclassmembers class java.lang.Character { boolean isSpaceCharImpl(int); }
-keepclassmembers class java.lang.Character { boolean isTitleCase(char); }
-keepclassmembers class android.view.View { int getBottomPaddingOffset(); }
-keepclassmembers class android.view.View { int getTopPaddingOffset(); }
-keepclassmembers class android.app.Activity { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class android.app.Activity { void onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class android.view.View { boolean isPaddingOffsetRequired(); }
-keepclassmembers class android.view.View { int getFadeHeight(boolean); }
-keepclassmembers class android.view.View { int getFadeTop(boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog { void setMessageForDisplayStatus(com.fsck.k9.view.MessageCryptoDisplayStatus); }
-keepclassmembers class java.lang.Character { boolean isUnicodeIdentifierStartImpl(int); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(char); }
-keepclassmembers class java.lang.Character { boolean isUpperCase(int); }
-keepclassmembers class java.lang.Character { boolean isUpperCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(char); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog { void setMessageSingleLine(int,int,int,java.lang.Integer); }
-keepclassmembers class java.lang.Character { boolean isWhitespace(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$25 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(); }
-keepclassmembers class android.view.View { android.graphics.Rect getClipBounds(); }
-keepclassmembers class android.app.Activity { android.app.Dialog createDialog(java.lang.Integer,android.os.Bundle,android.os.Bundle); }
-keepclassmembers class java.lang.Character { boolean isUnicodeIdentifierStart(char); }
-keepclassmembers class android.view.View { boolean isHardwareAccelerated(); }
-keepclassmembers class java.lang.Character { boolean isTitleCaseImpl(int); }
-keepclassmembers class java.lang.Character { boolean isWhitespaceImpl(int); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList valueOf(int); }
-keepclassmembers class android.os.Message { void sendToTarget(); }
-keepclassmembers class android.os.Message { boolean isAsynchronous(); }
-keepclassmembers class java.lang.Character { char toLowerCase(char); }
-keepclassmembers class com.fsck.k9.mail.ServerSettings$Type { void <clinit>(); }
-keepclassmembers class android.os.Message { void setAsynchronous(boolean); }
-keepclassmembers class java.lang.Character { int toLowerCase(int); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog { void setMessageWithAnimation(int,int,int,int,int); }
-keepclassmembers class java.lang.Character { java.lang.String toString(char); }
-keepclassmembers class java.lang.Character { int toLowerCaseImpl(int); }
-keepclassmembers class java.lang.Character { java.lang.String toString(); }
-keepclassmembers class android.os.Message { boolean isInUse(); }
-keepclassmembers class android.app.BackStackState { android.app.BackStackRecord instantiate(android.app.FragmentManagerImpl); }
-keepclassmembers class android.app.Activity { void onPostCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mail.ServerSettings$Type { void <init>(java.lang.String,int,int,int); }
-keepclassmembers class android.os.Message { void markInUse(); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class android.app.Activity { void onPostCreate(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class com.fsck.k9.mail.ServerSettings$Type { com.fsck.k9.mail.ServerSettings$Type valueOf(java.lang.String); }
-keepclassmembers class android.os.Message { java.lang.String toString(); }
-keepclassmembers class java.lang.Character { char toUpperCase(char); }
-keepclassmembers class android.app.Activity { void onStart(); }
-keepclassmembers class android.os.Message { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.ServerSettings$Type { com.fsck.k9.mail.ServerSettings$Type[] values(); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class java.lang.Character { int toUpperCaseImpl(int); }
-keepclassmembers class java.lang.Character { int compareTo(java.lang.Object); }
-keepclassmembers class android.app.Activity { void onResume(); }
-keepclassmembers class android.content.res.ColorStateList { void <init>(int[][],int[]); }
-keepclassmembers class android.view.View { boolean drawAnimation(android.view.ViewGroup,long,android.view.animation.Animation,boolean); }
-keepclassmembers class android.os.Message { java.lang.String toString(long); }
-keepclassmembers class java.lang.Character { int toUpperCase(int); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int); }
-keepclassmembers class java.lang.Character { void <clinit>(); }
-keepclassmembers class android.app.Activity { boolean isVoiceInteraction(); }
-keepclassmembers class java.lang.Character { void access$100(int); }
-keepclassmembers class java.lang.Character { int access$200(int); }
-keepclassmembers class android.app.Activity { android.app.VoiceInteractor getVoiceInteractor(); }
-keepclassmembers class android.app.Activity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.content.res.ColorStateList { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.service.CoreService { java.lang.String access$000(com.fsck.k9.service.CoreService); }
-keepclassmembers class android.app.Activity { void onNewIntent(android.content.Intent); }
-keepclassmembers class android.view.View { void setDisplayListProperties(android.view.RenderNode); }
-keepclassmembers class com.fsck.k9.service.CoreService { void <init>(); }
-keepclassmembers class android.app.Activity { void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle); }
-keepclassmembers class com.fsck.k9.service.CoreService { void <clinit>(); }
-keepclassmembers class com.fsck.k9.service.CoreService { com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock acquireWakeLock(android.content.Context,java.lang.String,long); }
-keepclassmembers class java.util.logging.LoggingPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.res.AssetFileDescriptor$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.service.CoreService { void addWakeLock(android.content.Context,android.content.Intent); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(); }
-keepclassmembers class android.app.Activity { void onPause(); }
-keepclassmembers class android.app.BackStackState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.Activity { boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { long mappingCount(); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.net.InetAddress,int); }
-keepclassmembers class com.fsck.k9.service.CoreService { void addWakeLockId(android.content.Context,android.content.Intent,java.lang.Integer,boolean); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void <init>(android.transition.Transition,android.view.ViewGroup); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence onCreateDescription(); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void removeListeners(); }
-keepclassmembers class android.app.Activity { void onStop(); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class android.transition.TransitionManager$MultiListener { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView$1 { void <init>(com.fsck.k9.ui.messageview.MessageTopView); }
-keepclassmembers class com.fsck.k9.service.CoreService { java.lang.Integer registerWakeLock(com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock); }
-keepclassmembers class android.app.Activity { void onDestroy(); }
-keepclassmembers class android.app.BackStackState { void <clinit>(); }
-keepclassmembers class android.os.Message { void <clinit>(); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.service.CoreService { void execute(android.content.Context,java.lang.Runnable,int,java.lang.Integer); }
-keepclassmembers class android.app.Activity { void onProvideAssistData(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView$1 { void onClick(android.view.View); }
-keepclassmembers class java.net.InetSocketAddress { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node[] initTable(); }
-keepclassmembers class android.app.Activity { void reportFullyDrawn(); }
-keepclassmembers class android.view.View { boolean draw(android.graphics.Canvas,android.view.ViewGroup,long); }
-keepclassmembers class android.app.Activity { int getChangingConfigurations(); }
-keepclassmembers class android.app.Activity { java.lang.Object getLastNonConfigurationInstance(); }
-keepclassmembers class android.app.Activity { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.graphics.Xfermode { void <init>(); }
-keepclassmembers class java.net.InetSocketAddress { int getPort(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { void <init>(); }
-keepclassmembers class android.app.Activity { java.lang.Object onRetainNonConfigurationInstance(); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetAddress getAddress(); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String getHostName(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$SubjectComparator { void <init>(); }
-keepclassmembers class java.net.InetSocketAddress { java.net.InetSocketAddress createUnresolved(java.lang.String,int); }
-keepclassmembers class android.graphics.Paint { float getTextRunAdvances(java.lang.String,int,int,int,int,boolean,float[],int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$SubjectComparator { int compare(android.database.Cursor,android.database.Cursor); }
-keepclassmembers class java.net.InetSocketAddress { java.lang.String toString(); }
-keepclassmembers class java.net.InetSocketAddress { boolean isUnresolved(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void addCount(long,int); }
-keepclassmembers class java.net.InetSocketAddress { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void onChanged(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParser newPullParser(); }
-keepclassmembers class org.apache.http.client.entity.UrlEncodedFormEntity { void <init>(java.util.List); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$SubjectComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.Activity { void onTrimMemory(int); }
-keepclassmembers class android.app.Activity { void onLowMemory(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParser getParserInstance(); }
-keepclassmembers class java.net.InetSocketAddress { int hashCode(); }
-keepclassmembers class android.app.Activity { void invalidateFragment(java.lang.String); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void <init>(android.widget.CursorAdapter,android.widget.CursorAdapter$1); }
-keepclassmembers class android.app.Activity { void onAttachFragment(android.app.Fragment); }
-keepclassmembers class android.widget.CursorAdapter$MyDataSetObserver { void onInvalidated(); }
-keepclassmembers class android.app.Activity { android.app.FragmentManager getFragmentManager(); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node[] helpTransfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.app.Activity { android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.K9PreferenceActivity { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.K9PreferenceActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.service.CoreService { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class android.app.Activity { void startManagingCursor(android.database.Cursor); }
-keepclassmembers class com.fsck.k9.activity.K9PreferenceActivity { android.preference.ListPreference setupListPreference(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.K9PreferenceActivity { void initListPreference(android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[]); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy { void <init>(); }
-keepclassmembers class android.app.Activity { void stopManagingCursor(android.database.Cursor); }
-keepclassmembers class org.apache.harmony.xml.ExpatReader { void <init>(); }
-keepclassmembers class org.apache.harmony.xml.ExpatReader { void setFeature(java.lang.String,boolean); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParserException newInstantiationException(java.lang.String,java.util.ArrayList); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy { java.lang.String getBitmapString(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.fsck.k9.service.CoreService { void onDestroy(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void tryPresize(int); }
-keepclassmembers class android.app.Activity { void setPersistent(boolean); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlSerializer getSerializerInstance(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlSerializer newSerializer(); }
-keepclassmembers class android.app.Activity { android.view.View findViewById(int); }
-keepclassmembers class com.fsck.k9.service.CoreService { void onCreate(); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(char[],int,int,int,int,int); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParserFactory newInstance(); }
-keepclassmembers class com.fsck.k9.service.CoreService { void onLowMemory(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy { java.lang.String access$000(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.app.Activity { android.app.ActionBar getActionBar(); }
-keepclassmembers class org.xmlpull.v1.XmlPullParserFactory { org.xmlpull.v1.XmlPullParserFactory newInstance(java.lang.String,java.lang.Class); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy { java.lang.String getBitmapString(android.graphics.Bitmap); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy { android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.app.Activity { void initWindowDecorActionBar(); }
-keepclassmembers class android.content.res.ColorStateList { boolean isStateful(); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.String,int,int,int,int,int); }
-keepclassmembers class android.app.Activity { void setContentView(int); }
-keepclassmembers class android.graphics.Paint { int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy { int getSize(android.graphics.Bitmap); }
-keepclassmembers class android.app.Activity { void setContentView(android.view.View); }
-keepclassmembers class android.app.Activity { void setActionBar(android.widget.Toolbar); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy { java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.content.res.ColorStateList { int getColorForState(int[],int); }
-keepclassmembers class android.app.Activity { void addContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy { java.lang.String logBitmap(android.graphics.Bitmap); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void transfer(java.util.concurrent.ConcurrentHashMap$Node[],java.util.concurrent.ConcurrentHashMap$Node[]); }
-keepclassmembers class android.app.Activity { android.transition.TransitionManager getContentTransitionManager(); }
-keepclassmembers class android.app.Activity { void setContentView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.fsck.k9.service.CoreService { int onStartCommand(android.content.Intent,int,int); }
-keepclassmembers class android.app.Activity { void setContentTransitionManager(android.transition.TransitionManager); }
-keepclassmembers class android.app.Activity { android.transition.Scene getContentScene(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy { android.graphics.Bitmap removeLast(); }
-keepclassmembers class android.content.res.ColorStateList { android.content.res.ColorStateList addFirstIfMissing(android.content.res.ColorStateList,int,int); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy { java.lang.String toString(); }
-keepclassmembers class android.app.Activity { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class org.apache.harmony.xml.ExpatReader { void parse(org.xml.sax.InputSource); }
-keepclassmembers class android.graphics.Paint { void getTextBounds(java.lang.String,int,int,android.graphics.Rect); }
-keepclassmembers class android.app.Activity { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class org.apache.harmony.xml.ExpatReader { void setContentHandler(org.xml.sax.ContentHandler); }
-keepclassmembers class android.content.res.ColorStateList { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.service.CoreService { void setAutoShutdown(boolean); }
-keepclassmembers class android.app.Activity { void setFinishOnTouchOutside(boolean); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy { void put(android.graphics.Bitmap); }
-keepclassmembers class android.content.res.ColorStateList { int getDefaultColor(); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf$ProgramHeader { void <init>(); }
-keepclassmembers class android.app.Activity { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.content.res.ColorStateList { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.Activity { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.ddm.DdmHandleHeap { void <init>(); }
-keepclassmembers class android.app.Activity { void onBackPressed(); }
-keepclassmembers class android.animation.KeyframeSet { void <init>(android.animation.Keyframe[]); }
-keepclassmembers class android.app.Activity { void setDefaultKeyMode(int); }
-keepclassmembers class android.app.Activity { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.content.res.ColorStateList { void <clinit>(); }
-keepclassmembers class org.apache.harmony.xml.ExpatReader { void parse(java.io.Reader,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.ddm.DdmHandleHeap { void register(); }
-keepclassmembers class android.app.Activity { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { void onUserInteraction(); }
-keepclassmembers class android.app.Activity { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.animation.KeyframeSet { void invalidateCache(); }
-keepclassmembers class org.apache.harmony.xml.ExpatReader { void parse(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String); }
-keepclassmembers class android.app.Activity { void onContentChanged(); }
-keepclassmembers class android.animation.KeyframeSet { java.util.List getKeyframes(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofInt(int[]); }
-keepclassmembers class android.app.Activity { void onWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.widget.TextView$4 { void <clinit>(); }
-keepclassmembers class android.app.Activity { void onWindowFocusChanged(boolean); }
-keepclassmembers class java.util.ServiceConfigurationError { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.Paint { void native_set(long,long); }
-keepclassmembers class android.app.Activity { void onAttachedToWindow(); }
-keepclassmembers class android.app.Activity { boolean hasWindowFocus(); }
-keepclassmembers class android.graphics.Paint { void native_setStyle(long,int); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void <init>(android.widget.Editor); }
-keepclassmembers class android.graphics.Paint { void native_setStrokeCap(long,int); }
-keepclassmembers class android.app.Activity { void onWindowDismissed(); }
-keepclassmembers class android.graphics.Paint { long native_init(); }
-keepclassmembers class android.app.Activity { void onDetachedFromWindow(); }
-keepclassmembers class android.graphics.Paint { long native_initWithPaint(long); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void createPopupWindow(); }
-keepclassmembers class android.graphics.Paint { int native_getStyle(long); }
-keepclassmembers class android.graphics.Paint { long native_setShader(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setXfermode(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setColorFilter(long,long); }
-keepclassmembers class android.graphics.Paint { long native_setPathEffect(long,long); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void initContentView(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofFloat(float[]); }
-keepclassmembers class android.graphics.Paint { long native_setTypeface(long,long); }
-keepclassmembers class android.graphics.Paint { void native_setTextLocale(long,java.lang.String); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyShortcutEvent(android.view.KeyEvent); }
-keepclassmembers class android.app.Activity { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean dispatchTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Activity { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class org.apache.james.mime4j.field.ContentDescriptionFieldImpl$1 { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentDescriptionFieldImpl$1 { org.apache.james.mime4j.dom.field.ContentDescriptionField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.graphics.Paint { float native_getTextRunAdvances(long,long,char[],int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.app.Activity { boolean dispatchGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class org.apache.james.mime4j.field.ContentDescriptionFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.graphics.Paint { int native_getTextRunCursor(long,char[],int,int,int,int,int); }
-keepclassmembers class android.graphics.Paint { int native_getTextRunCursor(long,java.lang.String,int,int,int,int,int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter { java.util.concurrent.locks.ReentrantReadWriteLock$Sync$HoldCounter initialValue(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter { java.lang.Object initialValue(); }
-keepclassmembers class android.app.Activity { android.view.View onCreatePanelView(int); }
-keepclassmembers class android.graphics.Paint { void native_setStrokeJoin(long,int); }
-keepclassmembers class android.app.Activity { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class android.graphics.Paint { float native_getLetterSpacing(long); }
-keepclassmembers class android.graphics.Paint { void native_setLetterSpacing(long,float); }
-keepclassmembers class android.graphics.Paint { void native_setFontFeatureSettings(long,java.lang.String); }
-keepclassmembers class android.app.Activity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.graphics.Paint { float native_getTextRunAdvances(long,long,java.lang.String,int,int,int,int,boolean,float[],int); }
-keepclassmembers class android.app.Activity { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.Activity { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class android.graphics.Paint { void native_setShadowLayer(long,float,float,float,int); }
-keepclassmembers class android.graphics.Paint { boolean native_hasShadowLayer(long); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet ofObject(java.lang.Object[]); }
-keepclassmembers class android.graphics.Paint { void <clinit>(); }
-keepclassmembers class android.app.Activity { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class android.ddm.DdmHandleHeap { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$1 { void <init>(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$4 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { void <init>(java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$4 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.app.Activity { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference$1 { void <init>(org.openintents.openpgp.util.OpenPgpAppPreference,android.content.Context,int,int,java.util.List); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.util.Map$Entry next(); }
-keepclassmembers class java.net.SocketException { void <init>(); }
-keepclassmembers class android.app.Activity { void invalidateOptionsMenu(); }
-keepclassmembers class android.graphics.Paint { void nativeGetStringBounds(long,long,java.lang.String,int,int,int,android.graphics.Rect); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { java.lang.Object next(); }
-keepclassmembers class android.animation.KeyframeSet { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.app.Activity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1 { boolean hasNext(); }
-keepclassmembers class android.widget.Editor$ActionPopupWindow { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class com.fsck.k9.PRNGFixes { void <clinit>(); }
-keepclassmembers class android.app.Activity { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class com.fsck.k9.PRNGFixes { void applyOpenSSLFix(); }
-keepclassmembers class android.app.Activity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class java.net.SocketException { void <init>(java.lang.String); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.PathKeyframes ofPath(android.graphics.Path,float); }
-keepclassmembers class android.app.Activity { boolean onNavigateUp(); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.KeyframeSet clone(); }
-keepclassmembers class android.view.View { void draw(android.graphics.Canvas); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.app.Activity { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class com.fsck.k9.PRNGFixes { void apply(); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$5$1 { void onPathEntered(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.model.StringLoader { void <init>(com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class android.app.Activity { void closeOptionsMenu(); }
-keepclassmembers class android.app.Activity { boolean onNavigateUpFromChild(android.app.Activity); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$5$1 { void onCancel(); }
-keepclassmembers class android.app.Activity { void openOptionsMenu(); }
-keepclassmembers class com.bumptech.glide.load.model.StringLoader { android.net.Uri toFileUri(java.lang.String); }
-keepclassmembers class android.app.Activity { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.app.Activity { void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class com.fsck.k9.PRNGFixes { byte[] generateSeed(); }
-keepclassmembers class com.bumptech.glide.load.model.StringLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int); }
-keepclassmembers class android.app.Activity { void registerForContextMenu(android.view.View); }
-keepclassmembers class android.app.Activity { void unregisterForContextMenu(android.view.View); }
-keepclassmembers class android.app.Activity { void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder); }
-keepclassmembers class android.animation.KeyframeSet { java.lang.String toString(); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int); }
-keepclassmembers class android.app.Activity { void closeContextMenu(); }
-keepclassmembers class com.bumptech.glide.load.model.StringLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.String,int,int); }
-keepclassmembers class android.app.Activity { void openContextMenu(android.view.View); }
-keepclassmembers class org.apache.james.mime4j.field.ContentDispositionFieldImpl$1 { void <init>(); }
-keepclassmembers class android.app.Activity { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$5$1 { void <init>(com.fsck.k9.activity.setup.Prefs$5); }
-keepclassmembers class org.apache.james.mime4j.field.ContentDispositionFieldImpl$1 { org.apache.james.mime4j.dom.field.ContentDispositionField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.app.Activity { void onContextMenuClosed(android.view.Menu); }
-keepclassmembers class android.animation.KeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.TransformationUtils { android.graphics.Bitmap centerCrop(android.graphics.Bitmap,android.graphics.Bitmap,int,int); }
-keepclassmembers class com.fsck.k9.PRNGFixes { java.lang.String getDeviceSerialNumber(); }
-keepclassmembers class android.app.Activity { android.app.Dialog onCreateDialog(int); }
-keepclassmembers class android.app.Activity { android.app.Dialog onCreateDialog(int,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.PRNGFixes { byte[] getBuildFingerprintAndDeviceSerial(); }
-keepclassmembers class com.fsck.k9.PRNGFixes { void installLinuxPRNGSecureRandom(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { void <init>(); }
-keepclassmembers class android.app.Activity { void onPrepareDialog(int,android.app.Dialog,android.os.Bundle); }
-keepclassmembers class org.apache.james.mime4j.field.ContentDispositionFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.params.HttpParams createHttpParams(); }
-keepclassmembers class android.app.Activity { void showDialog(int); }
-keepclassmembers class android.app.Activity { boolean showDialog(int,android.os.Bundle); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,java.lang.Object[]); }
-keepclassmembers class android.app.Activity { void onPrepareDialog(int,android.app.Dialog); }
-keepclassmembers class java.net.URLEncoder$1 { void <init>(); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,int,java.util.List); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,int,java.lang.Object[]); }
-keepclassmembers class java.net.URLEncoder$1 { boolean isRetained(char); }
-keepclassmembers class android.text.method.BaseKeyListener$1 { void <clinit>(); }
-keepclassmembers class android.widget.ArrayAdapter { void <init>(android.content.Context,int,java.util.List); }
-keepclassmembers class android.app.Activity { void dismissDialog(int); }
-keepclassmembers class android.widget.ArrayAdapter { void add(java.lang.Object); }
-keepclassmembers class android.app.Activity { boolean onSearchRequested(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.conn.ClientConnectionManager createClientConnectionManager(); }
-keepclassmembers class android.app.Activity { void removeDialog(int); }
-keepclassmembers class android.app.Activity { void takeKeyEvents(boolean); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.protocol.HttpRequestExecutor createRequestExecutor(); }
-keepclassmembers class android.app.Activity { java.lang.IllegalArgumentException missingDialog(int); }
-keepclassmembers class android.app.Activity { void startSearch(java.lang.String,boolean,android.os.Bundle,boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.TransformationUtils { android.graphics.Bitmap fitCenter(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableUri(int,android.net.Uri); }
-keepclassmembers class android.app.Activity { boolean requestWindowFeature(int); }
-keepclassmembers class java.net.ProxySelectorImpl { void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException); }
-keepclassmembers class android.app.Activity { void setFeatureDrawable(int,android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Activity { void triggerSearch(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableResource(int,int); }
-keepclassmembers class java.net.ProxySelectorImpl { void <init>(); }
-keepclassmembers class java.net.ProxySelectorImpl { java.util.List select(java.net.URI); }
-keepclassmembers class android.app.Activity { android.view.LayoutInflater getLayoutInflater(); }
-keepclassmembers class android.app.Activity { void setFeatureDrawableAlpha(int,int); }
-keepclassmembers class android.app.Activity { android.view.MenuInflater getMenuInflater(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.protocol.HttpContext createHttpContext(); }
-keepclassmembers class android.app.Activity { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class android.widget.ArrayAdapter { void clear(); }
-keepclassmembers class java.math.BigInteger { void <init>(java.math.BigInt); }
-keepclassmembers class android.widget.ArrayAdapter { void setNotifyOnChange(boolean); }
-keepclassmembers class java.net.ProxySelectorImpl { java.net.Proxy selectOneProxy(java.net.URI); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void treeifyBin(java.util.concurrent.ConcurrentHashMap$Node[],int); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.auth.AuthSchemeRegistry createAuthSchemeRegistry(); }
-keepclassmembers class android.widget.ArrayAdapter { void init(android.content.Context,int,int,java.util.List); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.ConnectionReuseStrategy createConnectionReuseStrategy(); }
-keepclassmembers class java.math.BigInteger { void <init>(int,long); }
-keepclassmembers class android.view.View { void drawBackground(android.graphics.Canvas); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class android.widget.ArrayAdapter { void notifyDataSetChanged(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.conn.ConnectionKeepAliveStrategy createConnectionKeepAliveStrategy(); }
-keepclassmembers class android.app.Activity { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class android.widget.ArrayAdapter { long getItemId(int); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.cookie.CookieSpecRegistry createCookieSpecRegistry(); }
-keepclassmembers class java.math.BigInteger { void <init>(int,int,int[]); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.net.ProxySelectorImpl { java.net.Proxy lookupProxy(java.lang.String,java.lang.String,java.net.Proxy$Type,int); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View createViewFromResource(int,android.view.View,android.view.ViewGroup,int); }
-keepclassmembers class android.widget.ArrayAdapter { int getCount(); }
-keepclassmembers class java.math.BigInteger { void <init>(int,java.util.Random); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { java.util.concurrent.ConcurrentHashMap$Node untreeify(java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void onChanged(); }
-keepclassmembers class android.widget.ArrayAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.UserHandle); }
-keepclassmembers class android.view.View { void setBackgroundRenderNodeProperties(android.view.RenderNode); }
-keepclassmembers class android.view.View { android.view.RenderNode getDrawableRenderNode(android.graphics.drawable.Drawable,android.view.RenderNode); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.protocol.BasicHttpProcessor createHttpProcessor(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { long sumCount(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$2 { java.util.List search(); }
-keepclassmembers class java.net.ProxySelectorImpl { boolean isNonProxyHost(java.lang.String,java.lang.String); }
-keepclassmembers class java.math.BigInteger { void <init>(int,int,java.util.Random); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.HttpRequestRetryHandler createHttpRequestRetryHandler(); }
-keepclassmembers class android.widget.ArrayAdapter { void setDropDownViewResource(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void fullAddCount(long,java.util.concurrent.ConcurrentHashMap$CounterHashCode,boolean); }
-keepclassmembers class android.widget.ArrayAdapter { android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.RedirectHandler createRedirectHandler(); }
-keepclassmembers class org.apache.james.mime4j.field.address.JJTAddressListParserState { void <init>(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.AuthenticationHandler createTargetAuthenticationHandler(); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.AuthenticationHandler createProxyAuthenticationHandler(); }
-keepclassmembers class org.apache.james.mime4j.field.address.JJTAddressListParserState { void clearNodeScope(org.apache.james.mime4j.field.address.Node); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.CookieStore createCookieStore(); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.UserHandle); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.CredentialsProvider createCredentialsProvider(); }
-keepclassmembers class android.app.Activity { void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.conn.routing.HttpRoutePlanner createHttpRoutePlanner(); }
-keepclassmembers class android.view.View { int getSolidColor(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$2 { void <init>(com.fsck.k9.mail.store.imap.ImapFolder,int,int,java.lang.String,boolean); }
-keepclassmembers class android.app.Activity { void startActivityForResultAsUser(android.content.Intent,int,android.os.Bundle,android.os.UserHandle); }
-keepclassmembers class android.widget.ArrayAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class java.math.BigInteger { boolean isSmallPrime(int); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.ArrayList access$100(android.widget.ArrayAdapter); }
-keepclassmembers class org.apache.http.impl.client.DefaultHttpClient { org.apache.http.client.UserTokenHandler createUserTokenHandler(); }
-keepclassmembers class android.widget.ArrayAdapter { java.lang.Object access$200(android.widget.ArrayAdapter); }
-keepclassmembers class android.widget.AbsListView$AdapterDataSetObserver { void onInvalidated(); }
-keepclassmembers class java.net.ProxySelectorImpl { int getSystemPropertyInt(java.lang.String,int); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.List access$300(android.widget.ArrayAdapter); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.ArrayList access$102(android.widget.ArrayAdapter,java.util.ArrayList); }
-keepclassmembers class android.widget.ArrayAdapter { java.util.List access$302(android.widget.ArrayAdapter,java.util.List); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { void cleanUpOldAttachmentDirectory(java.io.File); }
-keepclassmembers class java.math.BigInteger { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class org.apache.james.mime4j.field.address.JJTAddressListParserState { void closeNodeScope(org.apache.james.mime4j.field.address.Node,boolean); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class android.app.Activity { void startActivityAsCaller(android.content.Intent,android.os.Bundle,int); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void <init>(android.content.res.Resources); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void put(long,android.content.res.Resources$Theme,android.content.res.ConstantState); }
-keepclassmembers class java.util.ResourceBundle$MissingBundle { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.TransformationUtils { int getExifOrientationDegrees(int); }
-keepclassmembers class java.math.BigInteger { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { void copyMessageMetadataToNewTable(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.app.Activity { void startIntentSenderForResultInner(android.content.IntentSender,int,android.content.Intent,int,int,android.app.Activity,android.os.Bundle); }
-keepclassmembers class org.apache.james.mime4j.field.address.JJTAddressListParserState { void openNodeScope(org.apache.james.mime4j.field.address.Node); }
-keepclassmembers class java.math.BigInteger { void <init>(byte[]); }
-keepclassmembers class org.apache.james.mime4j.field.address.JJTAddressListParserState { org.apache.james.mime4j.field.address.Node popNode(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInt getBigInt(); }
-keepclassmembers class android.graphics.drawable.RippleBackground$1 { void <init>(android.graphics.drawable.RippleBackground,int); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { java.lang.Object get(long,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.james.mime4j.field.address.JJTAddressListParserState { void pushNode(org.apache.james.mime4j.field.address.Node); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.TransformationUtils { android.graphics.Bitmap$Config getSafeConfig(android.graphics.Bitmap); }
-keepclassmembers class android.view.View { boolean isLayoutModeOptical(java.lang.Object); }
-keepclassmembers class android.view.View { boolean isLayoutRequested(); }
-keepclassmembers class java.math.BigInteger { void <init>(int,byte[]); }
-keepclassmembers class org.apache.james.mime4j.field.address.JJTAddressListParserState { int nodeArity(); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { void db51MigrateMessageFormat(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper); }
-keepclassmembers class android.app.Activity { void startActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.TransformationUtils { void initializeMatrixForRotation(int,android.graphics.Matrix); }
-keepclassmembers class java.math.BigInteger { void setJavaRepresentation(int,int,int[]); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[]); }
-keepclassmembers class android.view.View { boolean setOpticalFrame(int,int,int,int); }
-keepclassmembers class android.transition.ChangeTransform$Transforms { void <init>(android.view.View); }
-keepclassmembers class java.math.BigInteger { void prepareJavaRepresentation(); }
-keepclassmembers class android.app.Activity { void startActivities(android.content.Intent[],android.os.Bundle); }
-keepclassmembers class java.math.BigInteger { void setBigInt(java.math.BigInt); }
-keepclassmembers class android.view.View { void layout(int,int,int,int); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void onConfigurationChange(int); }
-keepclassmembers class android.app.Activity { void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger valueOf(long); }
-keepclassmembers class android.transition.ChangeTransform$Transforms { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int); }
-keepclassmembers class java.math.BigInteger { byte[] toByteArray(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger abs(); }
-keepclassmembers class android.app.Activity { boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class org.apache.james.mime4j.field.address.JJTAddressListParserState { org.apache.james.mime4j.field.address.Node rootNode(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap { void <clinit>(); }
-keepclassmembers class android.view.InputDevice$MotionRange { int access$100(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.content.res.ConfigurationBoundResourceCache { void onConfigurationChangeInt(android.util.LongSparseArray,int); }
-keepclassmembers class android.view.InputDevice$MotionRange { void <init>(int,int,float,float,float,float,float,android.view.InputDevice$1); }
-keepclassmembers class android.view.InputDevice$MotionRange { int access$200(android.view.InputDevice$MotionRange); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger add(java.math.BigInteger); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$400(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.view.View { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$500(android.view.InputDevice$MotionRange); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.TransformationUtils { android.graphics.Bitmap rotateImageExif(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int); }
-keepclassmembers class android.support.v4.content.AsyncTaskLoader$LoadTask { java.lang.Object doInBackground(java.lang.Void[]); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$600(android.view.InputDevice$MotionRange); }
-keepclassmembers class java.math.BigInteger { int signum(); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$700(android.view.InputDevice$MotionRange); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent); }
-keepclassmembers class android.view.InputDevice$MotionRange { float access$800(android.view.InputDevice$MotionRange); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$21 { void <init>(com.fsck.k9.mailstore.LocalStore,java.util.List,android.content.ContentValues); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeft(int); }
-keepclassmembers class android.app.Activity { boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle); }
-keepclassmembers class android.view.View { boolean setFrame(int,int,int,int); }
-keepclassmembers class com.android.internal.R$styleable { void <clinit>(); }
-keepclassmembers class java.math.BigInteger { int bitLength(); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftRight(int); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus { void <init>(java.lang.String,int,int,int); }
-keepclassmembers class java.math.BigInteger { boolean testBit(int); }
-keepclassmembers class android.support.v4.content.AsyncTaskLoader$LoadTask { void run(); }
-keepclassmembers class android.app.Activity { void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$21 { void doDbWork(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[]); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger shiftLeftOneBit(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Blockquote { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.view.View { void sizeChange(int,int,int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$21 { int getListSize(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$21 { void postDbWork(); }
-keepclassmembers class org.apache.james.mime4j.dom.address.DomainList { void <init>(java.util.List,boolean); }
-keepclassmembers class android.view.View { void onFinishInflate(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$21 { java.lang.String getListItem(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Blockquote { void <init>(); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus { void <init>(java.lang.String,int,int,int,java.lang.Integer,int,java.lang.Integer); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class org.apache.james.mime4j.dom.address.DomainList { java.lang.Object get(int); }
-keepclassmembers class org.apache.james.mime4j.dom.address.DomainList { java.lang.String get(int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.TransformationUtils { void setAlpha(android.graphics.Bitmap,android.graphics.Bitmap); }
-keepclassmembers class org.apache.james.mime4j.dom.address.DomainList { int size(); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus { com.fsck.k9.view.MessageCryptoDisplayStatus fromResultAnnotation(com.fsck.k9.mailstore.CryptoResultAnnotation); }
-keepclassmembers class org.apache.james.mime4j.dom.address.DomainList { java.lang.String toRouteString(); }
-keepclassmembers class com.bumptech.glide.disklrucache.StrictLineReader { void <init>(java.io.InputStream,int,java.nio.charset.Charset); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class android.support.v4.content.AsyncTaskLoader$LoadTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus { com.fsck.k9.view.MessageCryptoDisplayStatus getDisplayStatusForPgpResult(com.fsck.k9.mailstore.CryptoResultAnnotation); }
-keepclassmembers class android.app.Activity { void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle); }
-keepclassmembers class java.math.BigInteger { int getLowestSetBit(); }
-keepclassmembers class org.apache.james.mime4j.dom.address.DomainList { java.lang.String toString(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource { void <init>(); }
-keepclassmembers class android.view.View { android.content.res.Resources getResources(); }
-keepclassmembers class android.view.View { void unscheduleDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.james.mime4j.dom.field.ParseException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { void dropOldMessagesTable(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource { void access$000(org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource { void cancel(); }
-keepclassmembers class com.bumptech.glide.disklrucache.StrictLineReader { java.nio.charset.Charset access$000(com.bumptech.glide.disklrucache.StrictLineReader); }
-keepclassmembers class android.view.View { void resolveDrawables(); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus { void <init>(java.lang.String,int,int,int,int); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState insertAttachments(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,long,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator$1 { void <init>(); }
-keepclassmembers class android.app.Activity { void overridePendingTransition(int,int); }
-keepclassmembers class com.bumptech.glide.disklrucache.StrictLineReader { void fillBuf(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource { java.lang.Long getSizeForProgress(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator$1 { com.android.okhttp.OkAuthenticator$Credential authenticate(java.net.Proxy,java.net.URL,java.util.List); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource { boolean isCancelled(); }
-keepclassmembers class java.math.BigInteger { int intValue(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource { android.os.ParcelFileDescriptor startPumpThread(); }
-keepclassmembers class com.bumptech.glide.disklrucache.StrictLineReader { void close(); }
-keepclassmembers class android.view.View { boolean areDrawablesResolved(); }
-keepclassmembers class android.app.Activity { void setResult(int); }
-keepclassmembers class android.app.Activity { void startActivityFromFragment(android.app.Fragment,android.content.Intent,int); }
-keepclassmembers class android.view.View { void onResolveDrawables(int); }
-keepclassmembers class com.bumptech.glide.disklrucache.StrictLineReader { void <init>(java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class java.math.BigInteger { long longValue(); }
-keepclassmembers class android.view.View { void resetResolvedDrawables(); }
-keepclassmembers class com.bumptech.glide.disklrucache.StrictLineReader { boolean hasUnterminatedLine(); }
-keepclassmembers class android.view.View { void resetResolvedDrawablesInternal(); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus { com.fsck.k9.view.MessageCryptoDisplayStatus getStatusForPgpEncryptedResult(org.openintents.openpgp.OpenPgpSignatureResult); }
-keepclassmembers class android.view.View { void drawableStateChanged(); }
-keepclassmembers class android.app.Activity { android.net.Uri getReferrer(); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieSpec { void <init>(); }
-keepclassmembers class java.math.BigInteger { int compareTo(java.math.BigInteger); }
-keepclassmembers class android.view.View { void drawableHotspotChanged(float,float); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieSpec { void registerAttribHandler(java.lang.String,org.apache.http.cookie.CookieAttributeHandler); }
-keepclassmembers class android.view.View { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.app.Activity { java.lang.String getCallingPackage(); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getCallingActivity(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$3 { void <init>(com.fsck.k9.activity.Accounts$AccountsHandler,int,com.fsck.k9.Account); }
-keepclassmembers class android.view.View { void refreshDrawableState(); }
-keepclassmembers class java.math.BigInteger { double doubleValue(); }
-keepclassmembers class org.apache.james.mime4j.stream.ParserCursor { void <init>(int,int); }
-keepclassmembers class android.app.Activity { void setResult(int,android.content.Intent); }
-keepclassmembers class org.apache.james.mime4j.util.ContentUtil { java.lang.String decode(org.apache.james.mime4j.util.ByteSequence); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus { com.fsck.k9.view.MessageCryptoDisplayStatus getStatusForPgpUnencryptedResult(org.openintents.openpgp.OpenPgpSignatureResult); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieSpec { org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String); }
-keepclassmembers class android.app.Activity { void setVisible(boolean); }
-keepclassmembers class android.view.View { int[] getDrawableState(); }
-keepclassmembers class com.bumptech.glide.disklrucache.StrictLineReader { java.lang.String readLine(); }
-keepclassmembers class java.math.BigInteger { int hashCode(); }
-keepclassmembers class org.apache.james.mime4j.stream.ParserCursor { boolean atEnd(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator$1 { com.android.okhttp.OkAuthenticator$Credential authenticateProxy(java.net.Proxy,java.net.URL,java.util.List); }
-keepclassmembers class org.apache.james.mime4j.util.ContentUtil { java.lang.String decode(org.apache.james.mime4j.util.ByteSequence,int,int); }
-keepclassmembers class android.view.View { int[] onCreateDrawableState(int); }
-keepclassmembers class org.apache.james.mime4j.stream.ParserCursor { int getPos(); }
-keepclassmembers class android.app.Activity { boolean isFinishing(); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog$1 { void <init>(com.fsck.k9.activity.compose.CryptoSettingsDialog); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.app.Activity { boolean isDestroyed(); }
-keepclassmembers class org.apache.james.mime4j.stream.ParserCursor { int getUpperBound(); }
-keepclassmembers class android.app.Activity { boolean isChangingConfigurations(); }
-keepclassmembers class org.apache.james.mime4j.util.ContentUtil { org.apache.james.mime4j.util.ByteSequence encode(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.stream.ParserCursor { java.lang.String toString(); }
-keepclassmembers class android.animation.Keyframe { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.AbstractCookieSpec { java.util.Collection getAttribHandlers(); }
-keepclassmembers class com.github.amlcurran.showcaseview.AnimatorAnimationFactory$2 { void <init>(com.github.amlcurran.showcaseview.AnimatorAnimationFactory,com.github.amlcurran.showcaseview.AnimationFactory$AnimationEndListener); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float,int); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofInt(float); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus { com.fsck.k9.view.MessageCryptoDisplayStatus valueOf(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.stream.ParserCursor { void updatePos(int); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float,float); }
-keepclassmembers class android.app.Activity { void recreate(); }
-keepclassmembers class android.app.Activity { void finish(boolean); }
-keepclassmembers class java.math.BigInteger { java.lang.String toString(); }
-keepclassmembers class com.github.amlcurran.showcaseview.AnimatorAnimationFactory$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus { com.fsck.k9.view.MessageCryptoDisplayStatus[] values(); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofFloat(float); }
-keepclassmembers class java.math.BigInteger { java.lang.String toString(int); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float,java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoDisplayStatus { boolean isUnencryptedSigned(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState insertBodyAsMultipartAlternative(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { void finish(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$3 { void run(); }
-keepclassmembers class android.app.Activity { void finishAffinity(); }
-keepclassmembers class java.math.BigInteger { boolean equals(java.lang.Object); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger multiply(java.math.BigInteger); }
-keepclassmembers class android.view.View { int[] mergeDrawableStates(int[],int[]); }
-keepclassmembers class android.animation.Keyframe { boolean hasValue(); }
-keepclassmembers class java.nio.ByteArrayBuffer { void <init>(int,byte[],int,boolean); }
-keepclassmembers class com.bumptech.glide.util.MultiClassKey { void <init>(); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate { void <init>(java.security.cert.X509Certificate,byte[]); }
-keepclassmembers class android.animation.Keyframe { boolean valueWasSetOnStart(); }
-keepclassmembers class com.bumptech.glide.util.MultiClassKey { void <init>(java.lang.Class,java.lang.Class); }
-keepclassmembers class android.animation.Keyframe { void setValueWasSetOnStart(boolean); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger pow(int); }
-keepclassmembers class android.app.Activity { void finishFromChild(android.app.Activity); }
-keepclassmembers class org.apache.harmony.security.utils.JarUtils$VerbatimX509Certificate { byte[] getEncoded(); }
-keepclassmembers class com.bumptech.glide.util.MultiClassKey { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation$2 { void <init>(com.fsck.k9.activity.NotificationDeleteConfirmation); }
-keepclassmembers class android.animation.Keyframe { float getFraction(); }
-keepclassmembers class android.app.Activity { void finishAfterTransition(); }
-keepclassmembers class java.nio.ByteArrayBuffer { void <init>(byte[]); }
-keepclassmembers class android.animation.Keyframe { android.animation.Keyframe ofObject(float); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation$2 { void run(); }
-keepclassmembers class android.app.Activity { void finishActivity(int); }
-keepclassmembers class android.view.View { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.view.View { void setBackgroundColor(int); }
-keepclassmembers class java.nio.ByteOrder { void <init>(java.lang.String,boolean); }
-keepclassmembers class android.text.util.Rfc822Tokenizer { void tokenize(java.lang.CharSequence,java.util.Collection); }
-keepclassmembers class com.bumptech.glide.util.MultiClassKey { int hashCode(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger[] divideAndRemainder(java.math.BigInteger); }
-keepclassmembers class android.animation.Keyframe { android.animation.TimeInterpolator getInterpolator(); }
-keepclassmembers class android.app.Activity { void finishActivityFromChild(android.app.Activity,int); }
-keepclassmembers class java.nio.ByteOrder { java.nio.ByteOrder nativeOrder(); }
-keepclassmembers class com.bumptech.glide.util.MultiClassKey { void set(java.lang.Class,java.lang.Class); }
-keepclassmembers class java.nio.ByteOrder { void <clinit>(); }
-keepclassmembers class com.android.internal.util.ImageUtils { void <init>(); }
-keepclassmembers class android.app.Activity { void finishAndRemoveTask(); }
-keepclassmembers class android.view.View { void setBackgroundResource(int); }
-keepclassmembers class android.view.View { void setBackground(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.okhttp.internal.http.HttpAuthenticator$1 { java.net.InetAddress getConnectToInetAddress(java.net.Proxy,java.net.URL); }
-keepclassmembers class com.bumptech.glide.util.MultiClassKey { java.lang.String toString(); }
-keepclassmembers class com.android.internal.util.ImageUtils { boolean isGrayscale(android.graphics.Bitmap); }
-keepclassmembers class com.fsck.k9.mail.store.imap.CopyUidResponse { void <init>(java.util.Map); }
-keepclassmembers class android.app.Activity { boolean releaseInstance(); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer compact(); }
-keepclassmembers class android.view.View { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.Keyframe { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class java.nio.ByteOrder { boolean isLittleEndian(); }
-keepclassmembers class android.app.Activity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class com.fsck.k9.mail.store.imap.CopyUidResponse { com.fsck.k9.mail.store.imap.CopyUidResponse parse(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class android.app.Activity { void onActivityReenter(int,android.content.Intent); }
-keepclassmembers class android.app.Activity { android.app.PendingIntent createPendingResult(int,android.content.Intent,int); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.nio.ByteArrayBuffer { boolean isReadOnly(); }
-keepclassmembers class java.nio.ByteArrayBuffer { byte[] protectedArray(); }
-keepclassmembers class java.nio.ByteArrayBuffer { int protectedArrayOffset(); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer get(byte[],int,int); }
-keepclassmembers class android.app.Activity { void setRequestedOrientation(int); }
-keepclassmembers class android.graphics.Path$FillType { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.app.Activity { int getRequestedOrientation(); }
-keepclassmembers class java.math.BigInteger { java.math.BigInteger divide(java.math.BigInteger); }
-keepclassmembers class org.apache.harmony.security.x509.AlgorithmIdentifier$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.android.internal.util.ImageUtils { boolean isGrayscale(int); }
-keepclassmembers class android.app.Activity { int getTaskId(); }
-keepclassmembers class android.graphics.Path$FillType { void <clinit>(); }
-keepclassmembers class android.transition.TransitionManager { android.util.ArrayMap getRunningTransitions(); }
-keepclassmembers class android.app.Activity { boolean moveTaskToBack(boolean); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeRunTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException { void <init>(java.lang.String); }
-keepclassmembers class com.android.internal.util.ImageUtils { void ensureBufferSize(int); }
-keepclassmembers class android.app.Activity { android.content.ComponentName getComponentName(); }
-keepclassmembers class android.transition.TransitionManager { void sceneChangeSetup(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class java.math.BigInteger { byte[] twosComplement(); }
-keepclassmembers class android.app.Activity { void ensureSearchManager(); }
-keepclassmembers class android.app.Activity { boolean isTaskRoot(); }
-keepclassmembers class android.app.Activity { java.lang.String getLocalClassName(); }
-keepclassmembers class android.app.Activity { android.content.SharedPreferences getPreferences(int); }
-keepclassmembers class android.view.View { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.app.Activity { void setTitle(int); }
-keepclassmembers class android.database.sqlite.SQLiteStatementInfo { void <init>(); }
-keepclassmembers class android.app.Activity { int getTitleColor(); }
-keepclassmembers class android.app.Activity { java.lang.CharSequence getTitle(); }
-keepclassmembers class android.transition.TransitionManager { void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition); }
-keepclassmembers class android.app.Activity { void setTitleColor(int); }
-keepclassmembers class android.app.Activity { void onTitleChanged(java.lang.CharSequence,int); }
-keepclassmembers class java.nio.ByteArrayBuffer { byte get(); }
-keepclassmembers class android.transition.TransitionManager { java.util.ArrayList access$000(); }
-keepclassmembers class android.view.View { void applyBackgroundTint(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOptions { void actionOptions(android.content.Context,com.fsck.k9.Account,boolean); }
-keepclassmembers class android.transition.TransitionManager { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState insertMimeAttachmentPart(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,long,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { void setTaskDescription(android.app.ActivityManager$TaskDescription); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOptions { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOptions { void onDone(); }
-keepclassmembers class android.view.View { void internalSetPadding(int,int,int,int); }
-keepclassmembers class android.app.Activity { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$SendErrorState { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.Activity { void setProgressBarVisibility(boolean); }
-keepclassmembers class android.app.Activity { void setTitle(java.lang.CharSequence); }
-keepclassmembers class android.transition.TransitionManager { android.util.ArrayMap access$100(); }
-keepclassmembers class java.nio.ByteArrayBuffer { int getInt(); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminateVisibility(boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.FolderNameCodec { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.CopyUidResponse { java.util.Map getUidMapping(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.FolderNameCodec { com.fsck.k9.mail.store.imap.FolderNameCodec newInstance(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.FolderNameCodec { java.lang.String decode(java.lang.String); }
-keepclassmembers class android.app.Activity { void setProgressBarIndeterminate(boolean); }
-keepclassmembers class java.nio.ByteArrayBuffer { int getInt(int); }
-keepclassmembers class android.app.Activity { void setProgress(int); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$SendErrorState { com.fsck.k9.activity.compose.ComposeCryptoStatus$SendErrorState[] values(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.FolderNameCodec { java.lang.String encode(java.lang.String); }
-keepclassmembers class android.app.Activity { void setSecondaryProgress(int); }
-keepclassmembers class android.app.Activity { void setVolumeControlStream(int); }
-keepclassmembers class java.nio.ByteArrayBuffer { long getLong(); }
-keepclassmembers class android.app.Activity { void setMediaController(android.media.session.MediaController); }
-keepclassmembers class android.text.util.Rfc822Tokenizer { android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence); }
-keepclassmembers class java.math.BigInteger { int multiplyByInt(int[],int[],int,int); }
-keepclassmembers class android.app.Activity { android.media.session.MediaController getMediaController(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOptions { void onClick(android.view.View); }
-keepclassmembers class android.app.Activity { int getVolumeControlStream(); }
-keepclassmembers class java.nio.ByteArrayBuffer { short getShort(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOptions { void onCreate(android.os.Bundle); }
-keepclassmembers class java.nio.ByteArrayBuffer { short getShort(int); }
-keepclassmembers class android.text.util.Rfc822Tokenizer { void crunch(java.lang.StringBuilder); }
-keepclassmembers class android.app.Activity { android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.app.Activity { void runOnUiThread(java.lang.Runnable); }
-keepclassmembers class java.nio.ByteArrayBuffer { boolean isDirect(); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <init>(byte[],int); }
-keepclassmembers class java.math.BigInteger { int inplaceAdd(int[],int,int); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer put(byte); }
-keepclassmembers class android.app.Activity { android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.app.Activity { void dumpInner(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.app.Activity { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class java.math.BigInteger { void parseFromString(java.math.BigInteger,java.lang.String,int); }
-keepclassmembers class android.view.View { int getPaddingLeft(); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <init>(boolean[]); }
-keepclassmembers class android.view.View { int getPaddingBottom(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$SendErrorState { void <clinit>(); }
-keepclassmembers class android.view.View { int getPaddingTop(); }
-keepclassmembers class android.view.View { void setPadding(int,int,int,int); }
-keepclassmembers class org.apache.http.message.ParserCursor { void <init>(int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { boolean getBit(int); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void <init>(); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void register(); }
-keepclassmembers class android.view.View { int getPaddingRight(); }
-keepclassmembers class org.apache.http.message.ParserCursor { int getUpperBound(); }
-keepclassmembers class org.apache.http.message.ParserCursor { int getPos(); }
-keepclassmembers class org.apache.http.message.ParserCursor { void updatePos(int); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void setBit(int,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { boolean[] toBooleanArray(); }
-keepclassmembers class org.apache.http.message.ParserCursor { boolean atEnd(); }
-keepclassmembers class android.app.Activity { boolean isTopOfTask(); }
-keepclassmembers class android.app.Activity { boolean isImmersive(); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer put(byte[],int,int); }
-keepclassmembers class android.app.Activity { void convertFromTranslucent(); }
-keepclassmembers class android.app.Activity { boolean convertToTranslucent(android.app.Activity$TranslucentConversionListener,android.app.ActivityOptions); }
-keepclassmembers class java.math.BigInteger { int getFirstNonzeroDigit(); }
-keepclassmembers class org.apache.http.protocol.RequestConnControl { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.app.Activity { void onNewActivityOptions(android.app.ActivityOptions); }
-keepclassmembers class org.apache.harmony.security.asn1.BitString { void <clinit>(); }
-keepclassmembers class android.view.View { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class android.ddm.DdmHandleNativeHeap { void <clinit>(); }
-keepclassmembers class org.apache.http.protocol.RequestConnControl { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { void <init>(java.util.List); }
-keepclassmembers class android.widget.RemoteViews$ActionException { void <init>(java.lang.String); }
-keepclassmembers class java.math.BigInteger { int compareTo(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { java.util.List getSubtrees(); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.String); }
-keepclassmembers class java.math.BigInteger { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.model.Headers$1 { void <init>(); }
-keepclassmembers class android.view.View { android.graphics.Insets getOpticalInsets(); }
-keepclassmembers class android.app.Activity { boolean requestVisibleBehind(boolean); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.ContentNode { void <init>(java.lang.String); }
-keepclassmembers class android.app.ProgressDialog$1 { void <init>(android.app.ProgressDialog); }
-keepclassmembers class android.view.View { void setSelected(boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$11 { void <init>(com.fsck.k9.controller.MessagingController,java.util.Date,com.fsck.k9.Account,java.lang.String,java.util.concurrent.atomic.AtomicInteger,int,java.util.List,java.util.List); }
-keepclassmembers class org.htmlcleaner.ContentNode { boolean isBlank(); }
-keepclassmembers class org.htmlcleaner.ContentNode { void serialize(org.htmlcleaner.Serializer,java.io.Writer); }
-keepclassmembers class android.app.Activity { void onVisibleBehindCanceled(); }
-keepclassmembers class java.lang.IllegalArgumentException { void <init>(java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtrees { java.util.List access$000(org.apache.harmony.security.x509.GeneralSubtrees); }
-keepclassmembers class org.htmlcleaner.ContentNode { java.lang.String toString(); }
-keepclassmembers class android.app.Activity { void onBackgroundVisibleBehindChanged(boolean); }
-keepclassmembers class android.app.Activity { boolean isBackgroundVisibleBehind(); }
-keepclassmembers class android.app.Activity { void onEnterAnimationComplete(); }
-keepclassmembers class java.nio.ByteArrayBuffer { java.nio.ByteBuffer putInt(int); }
-keepclassmembers class android.app.Activity { void dispatchEnterAnimationComplete(); }
-keepclassmembers class android.app.ProgressDialog$1 { void handleMessage(android.os.Message); }
-keepclassmembers class org.htmlcleaner.ContentNode { java.lang.String getContent(); }
-keepclassmembers class android.app.Activity { void setImmersive(boolean); }
-keepclassmembers class android.content.ClipDescription { boolean compareMimeTypes(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Activity { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class android.view.View { void setActivated(boolean); }
-keepclassmembers class android.view.View { void dispatchSetSelected(boolean); }
-keepclassmembers class android.view.View { boolean isSelected(); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { void <init>(); }
-keepclassmembers class android.app.Activity { void onActionModeStarted(android.view.ActionMode); }
-keepclassmembers class android.content.ClipDescription { void <init>(java.lang.CharSequence,java.lang.String[]); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class android.app.Activity { void onActionModeFinished(android.view.ActionMode); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { void set(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$11 { void messageFinished(com.fsck.k9.mail.Message,int,int); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { void toggle(int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.gif.GifResourceEncoder$Factory); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { boolean get(int); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <init>(); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { void shiftLeft(int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder { com.bumptech.glide.gifdecoder.GifDecoder decodeHeaders(byte[]); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { com.android.okhttp.internal.BitArray toVariableCapacity(); }
-keepclassmembers class android.app.Activity { boolean navigateUpTo(android.content.Intent); }
-keepclassmembers class android.app.Activity { boolean shouldUpRecreateTask(android.content.Intent); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { java.util.concurrent.Future submit(java.lang.Runnable); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder { com.bumptech.glide.load.engine.Resource getTransformedFrame(android.graphics.Bitmap,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.resource.gif.GifDrawable); }
-keepclassmembers class android.view.View { void dispatchSetActivated(boolean); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { int checkInput(int); }
-keepclassmembers class com.android.okhttp.internal.BitArray$FixedCapacity { void clear(); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { java.util.concurrent.Future submit(java.util.concurrent.Callable); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder { void <clinit>(); }
-keepclassmembers class android.app.Activity { boolean navigateUpToFromChild(android.app.Activity,android.content.Intent); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$16 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.View { android.view.ViewTreeObserver getViewTreeObserver(); }
-keepclassmembers class android.app.Activity { android.view.ActionMode startActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$16 { void <init>(com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,java.util.Map); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder { boolean writeDataDirect(byte[],java.io.OutputStream); }
-keepclassmembers class android.transition.ArcMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.View { android.view.View getRootView(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$16 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.app.Activity { android.content.Intent getParentActivityIntent(); }
-keepclassmembers class android.content.ClipDescription { boolean toShortString(java.lang.StringBuilder); }
-keepclassmembers class android.app.Activity { void setEnterSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder { boolean encode(com.bumptech.glide.load.engine.Resource,java.io.OutputStream); }
-keepclassmembers class android.app.Activity { void postponeEnterTransition(); }
-keepclassmembers class android.app.Activity { void setExitSharedElementCallback(android.app.SharedElementCallback); }
-keepclassmembers class android.app.Activity { void startPostponedEnterTransition(); }
-keepclassmembers class android.text.format.DateUtils { java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int); }
-keepclassmembers class android.transition.ArcMotion { void setMinimumHorizontalAngle(float); }
-keepclassmembers class android.content.ClipDescription { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.transition.ArcMotion { void setMinimumVerticalAngle(float); }
-keepclassmembers class android.content.ClipDescription { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.Filter$FilterResults { void <init>(); }
-keepclassmembers class android.transition.ArcMotion { void setMaximumAngle(float); }
-keepclassmembers class android.view.View { boolean toGlobalMotionEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$17 { void <init>(com.fsck.k9.mailstore.LocalStore,java.io.InputStream,java.io.InputStream); }
-keepclassmembers class android.transition.ArcMotion { float toTangent(float); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$17 { void close(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseAreaCalculator { void <init>(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseAreaCalculator { boolean calculateShowcaseRect(float,float,com.github.amlcurran.showcaseview.ShowcaseDrawer); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$11 { void messageStarted(java.lang.String,int,int); }
-keepclassmembers class android.view.View { boolean toLocalMotionEvent(android.view.MotionEvent); }
-keepclassmembers class android.view.View { void transformMatrixToLocal(android.graphics.Matrix); }
-keepclassmembers class android.view.View { void getLocationInWindow(int[]); }
-keepclassmembers class android.content.ClipDescription { void <clinit>(); }
-keepclassmembers class android.transition.ArcMotion { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder { java.lang.String getId(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.SliderPreference$1 { void <init>(com.fsck.k9.activity.setup.SliderPreference); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock { void <init>(com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$1); }
-keepclassmembers class com.fsck.k9.activity.setup.SliderPreference$1 { void onProgressChanged(android.widget.SeekBar,int,boolean); }
-keepclassmembers class com.fsck.k9.notification.RemoveNotificationResult { void <init>(com.fsck.k9.notification.NotificationHolder,int,boolean); }
-keepclassmembers class com.fsck.k9.notification.RemoveNotificationResult { com.fsck.k9.notification.RemoveNotificationResult cancelNotification(int); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamUrlLoader$Factory { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamUrlLoader$Factory { com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory); }
-keepclassmembers class com.fsck.k9.notification.RemoveNotificationResult { com.fsck.k9.notification.RemoveNotificationResult createNotification(com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class com.fsck.k9.activity.setup.SliderPreference$1 { void onStartTrackingTouch(android.widget.SeekBar); }
-keepclassmembers class com.fsck.k9.activity.setup.SliderPreference$1 { void onStopTrackingTouch(android.widget.SeekBar); }
-keepclassmembers class com.fsck.k9.notification.RemoveNotificationResult { com.fsck.k9.notification.RemoveNotificationResult unknownNotification(); }
-keepclassmembers class com.fsck.k9.notification.RemoveNotificationResult { com.fsck.k9.notification.NotificationHolder getNotificationHolder(); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamUrlLoader$Factory { void teardown(); }
-keepclassmembers class java.net.InterfaceAddress { void <init>(java.net.Inet4Address,java.net.Inet4Address,java.net.Inet4Address); }
-keepclassmembers class android.widget.RemoteViews$4 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.notification.RemoveNotificationResult { int getNotificationId(); }
-keepclassmembers class android.view.View { android.view.View findViewTraversal(int); }
-keepclassmembers class android.view.View { void transformMatrixToGlobal(android.graphics.Matrix); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseAreaCalculator { android.graphics.Rect getShowcaseRect(); }
-keepclassmembers class android.view.View { void getLocationOnScreen(int[]); }
-keepclassmembers class com.fsck.k9.notification.RemoveNotificationResult { boolean isUnknownNotification(); }
-keepclassmembers class java.net.InterfaceAddress { void <init>(java.net.Inet6Address,short); }
-keepclassmembers class com.fsck.k9.notification.RemoveNotificationResult { boolean shouldCreateNotification(); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class android.text.format.DateUtils { java.lang.String getRelativeDayString(android.content.res.Resources,long,long); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifResourceEncoder { boolean encode(java.lang.Object,java.io.OutputStream); }
-keepclassmembers class java.net.InterfaceAddress { short countPrefixLength(java.net.Inet4Address); }
-keepclassmembers class android.view.View { android.view.View findViewById(int); }
-keepclassmembers class org.apache.commons.io.input.BoundedInputStream { void <init>(java.io.InputStream,long); }
-keepclassmembers class java.net.InterfaceAddress { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicate(com.android.internal.util.Predicate); }
-keepclassmembers class org.apache.commons.io.input.BoundedInputStream { int available(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { com.fsck.k9.mail.internet.MimeHeader loadHeaderFromHeadersTable(android.database.sqlite.SQLiteDatabase,long); }
-keepclassmembers class android.view.View { android.view.View findViewByPredicateInsideOut(android.view.View,com.android.internal.util.Predicate); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState insertTextualPartIntoDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState,com.fsck.k9.mail.internet.MimeHeader,java.lang.String,boolean); }
-keepclassmembers class org.apache.commons.io.input.BoundedInputStream { void close(); }
-keepclassmembers class java.net.InterfaceAddress { int hashCode(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener$1 { void <init>(com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.commons.io.input.BoundedInputStream { int read(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener$1 { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.io.input.BoundedInputStream { int read(byte[],int,int); }
-keepclassmembers class android.view.View { void setId(int); }
-keepclassmembers class android.content.IIntentSender$Stub { android.content.IIntentSender asInterface(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState migrateComplexMailContent(android.database.sqlite.SQLiteDatabase,java.io.File,java.io.File,long,java.lang.String,java.lang.String,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState); }
-keepclassmembers class android.view.View { boolean isRootNamespace(); }
-keepclassmembers class android.view.View { java.lang.Object getTag(); }
-keepclassmembers class java.net.InterfaceAddress { java.lang.String toString(); }
-keepclassmembers class android.media.AudioAttributes { void <init>(); }
-keepclassmembers class android.media.AudioAttributes { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.View { void setTagInternal(int,java.lang.Object); }
-keepclassmembers class android.view.View { void setKeyedTag(int,java.lang.Object); }
-keepclassmembers class android.view.View { int getId(); }
-keepclassmembers class android.app.Activity { android.os.IBinder getActivityToken(); }
-keepclassmembers class android.view.View { java.lang.Object getTag(int); }
-keepclassmembers class org.apache.commons.io.input.BoundedInputStream { java.lang.String toString(); }
-keepclassmembers class java.lang.UnsatisfiedLinkError { void <init>(java.lang.String); }
-keepclassmembers class android.text.format.DateUtils { java.lang.String formatDateRange(android.content.Context,long,long,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperHoneycomb { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.format.DateUtils { java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int); }
-keepclassmembers class android.text.format.DateUtils { java.lang.String formatDateTime(android.content.Context,long,int); }
-keepclassmembers class android.text.format.DateUtils { java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String); }
-keepclassmembers class android.text.format.DateUtils { java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean); }
-keepclassmembers class org.apache.http.impl.auth.DigestSchemeFactory { org.apache.http.auth.AuthScheme newInstance(org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.auth.DigestSchemeFactory { void <init>(); }
-keepclassmembers class android.view.View { int getBaseline(); }
-keepclassmembers class java.io.ObjectStreamClass$5 { void <init>(); }
-keepclassmembers class java.io.ObjectStreamClass$5 { java.util.WeakHashMap initialValue(); }
-keepclassmembers class java.io.ObjectStreamClass$5 { java.lang.Object initialValue(); }
-keepclassmembers class android.media.AudioAttributes { int access$000(android.media.AudioAttributes); }
-keepclassmembers class android.view.View { void forceLayout(); }
-keepclassmembers class android.media.AudioAttributes { int access$100(android.media.AudioAttributes); }
-keepclassmembers class android.media.AudioAttributes { int access$200(android.media.AudioAttributes); }
-keepclassmembers class android.media.AudioAttributes { java.util.HashSet access$300(android.media.AudioAttributes); }
-keepclassmembers class android.view.View { void measure(int,int); }
-keepclassmembers class android.view.View { void requestLayout(); }
-keepclassmembers class android.media.AudioAttributes { void <init>(android.media.AudioAttributes$1); }
-keepclassmembers class android.media.AudioAttributes { int access$102(android.media.AudioAttributes,int); }
-keepclassmembers class android.text.format.DateUtils { java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long); }
-keepclassmembers class org.openintents.openpgp.OpenPgpError { void <clinit>(); }
-keepclassmembers class android.media.AudioAttributes { int access$002(android.media.AudioAttributes,int); }
-keepclassmembers class org.openintents.openpgp.OpenPgpError { void <init>(); }
-keepclassmembers class org.openintents.openpgp.OpenPgpError { void <init>(int,java.lang.String); }
-keepclassmembers class android.media.AudioAttributes { int access$502(android.media.AudioAttributes,int); }
-keepclassmembers class android.text.format.DateUtils { void <clinit>(); }
-keepclassmembers class android.media.AudioAttributes { int access$202(android.media.AudioAttributes,int); }
-keepclassmembers class org.openintents.openpgp.OpenPgpError { void <init>(org.openintents.openpgp.OpenPgpError); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.ExecutorService newFixedThreadPool(int); }
-keepclassmembers class android.media.AudioAttributes { java.util.HashSet access$302(android.media.AudioAttributes,java.util.HashSet); }
-keepclassmembers class android.media.AudioAttributes { java.lang.String access$602(android.media.AudioAttributes,java.lang.String); }
-keepclassmembers class java.util.zip.Deflater { int deflate(byte[],int,int); }
-keepclassmembers class org.openintents.openpgp.OpenPgpError { int getErrorId(); }
-keepclassmembers class org.openintents.openpgp.OpenPgpError { java.lang.String getMessage(); }
-keepclassmembers class java.util.zip.Deflater { int deflate(byte[],int,int,int); }
-keepclassmembers class android.media.AudioAttributes { void <clinit>(); }
-keepclassmembers class org.openintents.openpgp.OpenPgpError { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1ValueCollection { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.util.zip.Deflater { int deflateImpl(byte[],int,int,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1ValueCollection { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class java.util.concurrent.AbstractExecutorService { void <clinit>(); }
-keepclassmembers class org.apache.http.message.BufferedHeader { void <init>(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class java.util.zip.Deflater { int deflateImpl(byte[],int,int,long,int); }
-keepclassmembers class java.lang.reflect.GenericSignatureFormatError { void <init>(); }
-keepclassmembers class java.util.zip.Deflater { void end(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void <init>(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom,com.android.org.conscrypt.ClientSessionContext,com.android.org.conscrypt.ServerSessionContext); }
-keepclassmembers class android.preference.PreferenceActivity$Header$1 { void <init>(); }
-keepclassmembers class java.util.zip.Deflater { void endImpl(); }
-keepclassmembers class java.util.zip.Deflater { void <init>(); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.ExecutorService newCachedThreadPool(); }
-keepclassmembers class android.view.View { void onMeasure(int,int); }
-keepclassmembers class java.util.zip.Deflater { void endImpl(long); }
-keepclassmembers class java.util.zip.Deflater { void finish(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <init>(android.content.Context); }
-keepclassmembers class org.apache.http.message.BufferedHeader { java.lang.String getName(); }
-keepclassmembers class android.app.Activity { boolean isResumed(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo49 { void createMsgCompositeIndex(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.View { void setMeasuredDimension(int,int); }
-keepclassmembers class java.util.zip.Deflater { void <init>(int,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState migratePgpMimeEncryptedContent(android.database.sqlite.SQLiteDatabase,long,java.io.File,java.io.File,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void updateScroll(float); }
-keepclassmembers class org.apache.http.message.BufferedHeader { org.apache.http.HeaderElement[] getElements(); }
-keepclassmembers class android.view.View { void setMeasuredDimensionRaw(int,int); }
-keepclassmembers class org.apache.http.message.BufferedHeader { java.lang.String getValue(); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.ScheduledExecutorService newScheduledThreadPool(int); }
-keepclassmembers class java.util.zip.Deflater { boolean needsInput(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float getDeceleration(int); }
-keepclassmembers class android.view.View { int combineMeasuredStates(int,int); }
-keepclassmembers class android.view.View { int resolveSize(int,int); }
-keepclassmembers class org.apache.http.message.BufferedHeader { org.apache.http.util.CharArrayBuffer getBuffer(); }
-keepclassmembers class android.view.View { int resolveSizeAndState(int,int,int); }
-keepclassmembers class org.apache.http.message.BufferedHeader { java.lang.String toString(); }
-keepclassmembers class java.util.zip.Deflater { void setDictionary(byte[]); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.SSLParametersImpl getDefault(); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$SettingsUpgraderV24 { void <init>(); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.ThreadFactory defaultThreadFactory(); }
-keepclassmembers class java.util.zip.Deflater { void setDictionary(byte[],int,int); }
-keepclassmembers class android.app.Activity { void stopLockTask(); }
-keepclassmembers class android.view.View { int getDefaultSize(int,int); }
-keepclassmembers class org.apache.http.message.BufferedHeader { int getValuePos(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void adjustDuration(int,int,int); }
-keepclassmembers class android.app.Activity { void <clinit>(); }
-keepclassmembers class java.util.BitSet { void shrinkSize(); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$SettingsUpgraderV24 { java.util.Set upgrade(java.util.Map); }
-keepclassmembers class android.view.View { int getSuggestedMinimumHeight(); }
-keepclassmembers class java.util.BitSet { void <init>(); }
-keepclassmembers class java.util.zip.Deflater { void setInput(byte[]); }
-keepclassmembers class java.util.zip.Deflater { void setInput(byte[],int,int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startScroll(int,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.AbstractSessionContext getSessionContext(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$ImageTypeParser { com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$ImageType parse(java.io.InputStream); }
-keepclassmembers class java.util.BitSet { void <init>(long[]); }
-keepclassmembers class android.view.View { int getSuggestedMinimumWidth(); }
-keepclassmembers class android.app.Activity { void startLockTask(); }
-keepclassmembers class java.util.concurrent.Executors { java.util.concurrent.Callable callable(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class java.util.zip.Deflater { void setDictionaryImpl(byte[],int,int,long); }
-keepclassmembers class java.util.zip.Deflater { void setLevelsImpl(int,int,long); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore$3 { void <init>(com.android.org.conscrypt.TrustedCertificateStore,java.security.cert.X509Certificate); }
-keepclassmembers class java.util.zip.Deflater { void setInputImpl(byte[],int,int,long); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void finish(); }
-keepclassmembers class android.view.View { void setMinimumHeight(int); }
-keepclassmembers class android.view.View { void setMinimumWidth(int); }
-keepclassmembers class java.util.BitSet { void <init>(int); }
-keepclassmembers class android.app.Activity { void requestPermissions(java.lang.String[],int); }
-keepclassmembers class android.app.Activity { boolean shouldShowRequestPermissionRationale(java.lang.String); }
-keepclassmembers class android.view.View { void startAnimation(android.view.animation.Animation); }
-keepclassmembers class java.util.BitSet { long[] arrayForBits(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean springback(int,int,int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509TrustManager getX509TrustManager(); }
-keepclassmembers class android.view.View { void setAnimation(android.view.animation.Animation); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore$3 { boolean match(java.security.cert.X509Certificate); }
-keepclassmembers class java.util.BitSet { void ensureCapacity(int); }
-keepclassmembers class android.view.View { void onAnimationStart(); }
-keepclassmembers class android.view.View { android.view.animation.Animation getAnimation(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startSpringback(int,int,int); }
-keepclassmembers class android.view.View { void onAnimationEnd(); }
-keepclassmembers class java.util.zip.Deflater { long createStream(int,int,boolean); }
-keepclassmembers class java.util.zip.Deflater { void checkOpen(); }
-keepclassmembers class android.view.View { boolean onSetAlpha(int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.PSKKeyManager getPSKKeyManager(); }
-keepclassmembers class android.view.View { void clearAnimation(); }
-keepclassmembers class java.util.BitSet { boolean get(int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void setEnabledCipherSuites(java.lang.String[]); }
-keepclassmembers class java.util.jar.Attributes$Name { void <init>(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fling(int,int,int,int,int); }
-keepclassmembers class java.util.BitSet { void set(int); }
-keepclassmembers class com.fsck.k9.helper.HtmlSanitizer { void <clinit>(); }
-keepclassmembers class com.fsck.k9.helper.HtmlSanitizer { void <init>(); }
-keepclassmembers class android.view.View { void playSoundEffect(int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509KeyManager getX509KeyManager(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void setEnabledProtocols(java.lang.String[]); }
-keepclassmembers class com.fsck.k9.helper.HtmlSanitizer { com.fsck.k9.helper.HtmlSanitizer getInstance(); }
-keepclassmembers class java.util.jar.Attributes$Name { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.helper.HtmlSanitizer { void removeMetaRefresh(org.htmlcleaner.TagNode); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean getUseClientMode(); }
-keepclassmembers class java.util.jar.Attributes$Name { int hashCode(); }
-keepclassmembers class java.util.jar.Attributes$Name { java.lang.String toString(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineDeceleration(int); }
-keepclassmembers class java.util.jar.Attributes$Name { void <clinit>(); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner$2 { void <init>(com.fsck.k9.view.ClientCertificateSpinner); }
-keepclassmembers class java.util.BitSet { void checkIndex(int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean getNeedClientAuth(); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner$2 { void onClick(android.view.View); }
-keepclassmembers class com.fsck.k9.helper.HtmlSanitizer { java.lang.String sanitize(java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { double getSplineFlingDistance(int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean getWantClientAuth(); }
-keepclassmembers class android.app.FragmentManagerImpl$4 { void <init>(android.app.FragmentManagerImpl,int,int); }
-keepclassmembers class android.view.View { void onWindowSystemUiVisibilityChanged(int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.security.SecureRandom getSecureRandomMember(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.lang.String[] getEnabledCipherSuites(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean getEnableSessionCreation(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int getSplineFlingDuration(int); }
-keepclassmembers class android.app.FragmentManagerImpl$4 { void run(); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String canonicalizePath(java.lang.String,boolean); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void fitOnBounceCurve(int,int,int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean getUseSni(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { byte[][] encodeIssuerX509Principals(java.security.cert.X509Certificate[]); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startBounceAfterEdge(int,int,int); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker { void acquire(com.bumptech.glide.load.Key); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.OpenSSLX509Certificate[] createCertChain(long[]); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void startAfterEdge(int,int,int,int); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void setTlsChannelId(long,com.android.org.conscrypt.OpenSSLKey); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.OpenSSLSessionImpl getSessionToReuse(long,java.lang.String,int); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String getSchemePrefix(java.lang.String); }
-keepclassmembers class libcore.net.url.UrlUtils { java.lang.String authoritySafePath(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.net.url.UrlUtils { boolean isValidSchemeChar(int,char); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void setCertificate(long,java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void onEdgeReached(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker { void release(com.bumptech.glide.load.Key); }
-keepclassmembers class libcore.net.url.UrlUtils { int findFirstOf(java.lang.String,java.lang.String,int,int); }
-keepclassmembers class android.view.View { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState migrateSimpleMailContent(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mailstore.migrations.MigrationTo51$MimeStructureState); }
-keepclassmembers class android.view.View { void onCloseSystemDialogs(java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.HtmlSanitizer { org.htmlcleaner.CleanerProperties createCleanerProperties(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility$2 { void close(); }
-keepclassmembers class java.text.RuleBasedBreakIterator { void <init>(libcore.icu.NativeBreakIterator); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void setSSLParameters(long,long,com.android.org.conscrypt.SSLParametersImpl$AliasChooser,com.android.org.conscrypt.SSLParametersImpl$PSKCallbacks,java.lang.String); }
-keepclassmembers class java.text.RuleBasedBreakIterator { int following(int); }
-keepclassmembers class java.text.RuleBasedBreakIterator { void checkOffset(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean continueWhenFinished(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { void <init>(android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources); }
-keepclassmembers class android.view.View { void checkForLongClick(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean update(); }
-keepclassmembers class android.view.View { boolean overScrollBy(int,int,int,int,int,int,int,int,boolean); }
-keepclassmembers class android.view.View { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility$2 { void <init>(java.io.InputStream,java.io.InputStream); }
-keepclassmembers class java.text.RuleBasedBreakIterator { int preceding(int); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { void <init>(android.widget.TextView); }
-keepclassmembers class com.android.internal.widget.EditableInputConnection { android.text.Editable getEditable(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { java.io.File renameOldAttachmentDirAndCreateNew(com.fsck.k9.Account,java.io.File); }
-keepclassmembers class com.fsck.k9.mail.Address { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.Address { void <init>(com.fsck.k9.mail.Address); }
-keepclassmembers class com.fsck.k9.mail.Address { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { void renameOldMessagesTableAndCreateNew(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mail.Address { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.Address { void <init>(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class android.view.View { int getOverScrollMode(); }
-keepclassmembers class android.view.View { boolean canAcceptDrag(); }
-keepclassmembers class java.text.RuleBasedBreakIterator { boolean isBoundary(int); }
-keepclassmembers class android.view.View { void setOverScrollMode(int); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { java.lang.String replaceContentUriWithContentIdInHtmlPart(android.database.sqlite.SQLiteDatabase,long,java.lang.String); }
-keepclassmembers class android.view.View { boolean isNestedScrollingEnabled(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { boolean access$000(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo51 { void updateFlagsForMessage(android.database.sqlite.SQLiteDatabase,long,java.lang.String,com.fsck.k9.mailstore.migrations.MigrationsHelper); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { boolean isSniEnabledByDefault(); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int access$100(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { float access$200(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.transition.Slide$3 { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { void setCertificateValidation(long); }
-keepclassmembers class android.view.View { void stopNestedScroll(); }
-keepclassmembers class android.view.View { android.view.View inflate(android.content.Context,int,android.view.ViewGroup); }
-keepclassmembers class android.view.View { void setNestedScrollingEnabled(boolean); }
-keepclassmembers class android.view.View { boolean startNestedScroll(int); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { int access$500(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$AccountDescription { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { long access$600(android.widget.OverScroller$SplineOverScroller); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$AnimatedVectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class android.view.View { boolean hasNestedScrollingParent(); }
-keepclassmembers class com.fsck.k9.mail.Address { java.lang.String pack(com.fsck.k9.mail.Address[]); }
-keepclassmembers class android.view.View { boolean dispatchNestedScroll(int,int,int,int,int[]); }
-keepclassmembers class com.fsck.k9.mail.Address { com.fsck.k9.mail.Address[] parse(java.lang.String); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$8 { void <init>(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.activity.Accounts$8 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.fsck.k9.mail.Address { com.fsck.k9.mail.Address[] parseUnencoded(java.lang.String); }
-keepclassmembers class java.util.AbstractSequentialList { void <init>(); }
-keepclassmembers class android.text.style.URLSpan { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreScroll(int,int,int[],int[]); }
-keepclassmembers class android.widget.OverScroller$SplineOverScroller { void <clinit>(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$AccountDescription { void <init>(java.lang.String,java.lang.String,com.fsck.k9.preferences.SettingsImporter$1); }
-keepclassmembers class com.fsck.k9.mail.Address { java.lang.String quoteAtoms(java.lang.String); }
-keepclassmembers class android.text.style.URLSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.ViewPropertyAnimator { void <init>(android.view.View); }
-keepclassmembers class com.fsck.k9.mail.Address { java.lang.String quoteString(java.lang.String); }
-keepclassmembers class java.util.AbstractSequentialList { java.util.Iterator iterator(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle { com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle[] values(); }
-keepclassmembers class com.fsck.k9.mail.Address { java.lang.String toEncodedString(com.fsck.k9.mail.Address[]); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20 { android.app.Notification$Action getActionFromActionCompat(android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle { boolean isSelectable(); }
-keepclassmembers class com.fsck.k9.notification.NotificationContentCreator { void <init>(android.content.Context); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator setDuration(long); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavHttpClient { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavHttpClient { java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity); }
-keepclassmembers class com.fsck.k9.notification.NotificationContentCreator { java.lang.CharSequence buildMessageSummary(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.Address { java.lang.String toString(com.fsck.k9.mail.Address[]); }
-keepclassmembers class android.os.Message$1 { void <init>(); }
-keepclassmembers class android.view.View { boolean dispatchNestedFling(float,float,boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20 { void addAction(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.OpenSSLSessionImpl setupSession(long,long,com.android.org.conscrypt.OpenSSLSessionImpl,java.lang.String,int,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavHttpClient { void modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest); }
-keepclassmembers class com.fsck.k9.notification.NotificationContentCreator { android.text.style.TextAppearanceSpan getEmphasizedSpan(); }
-keepclassmembers class android.view.View { boolean dispatchNestedPreFling(float,float); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavHttpClient { org.apache.http.HttpResponse executeOverride(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.text.style.URLSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.notification.NotificationContentCreator { java.lang.CharSequence getMessagePreview(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$TokenClickStyle { void <init>(java.lang.String,int,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$8 { void <init>(com.fsck.k9.mailstore.LocalFolder,long); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator setStartDelay(long); }
-keepclassmembers class android.view.View { float getVerticalScrollFactor(); }
-keepclassmembers class android.view.View$2 { void <init>(android.view.View,int); }
-keepclassmembers class com.fsck.k9.mail.Address { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$8 { java.lang.String doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.View$2 { boolean apply(android.view.View); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20 { java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.view.View$2 { boolean apply(java.lang.Object); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { void <init>(long,java.security.cert.X509Certificate[],java.security.cert.X509Certificate[],java.lang.String,int,com.android.org.conscrypt.AbstractSessionContext); }
-keepclassmembers class android.app.FragmentManagerImpl$2 { void <init>(android.app.FragmentManagerImpl); }
-keepclassmembers class com.fsck.k9.mail.Address { com.fsck.k9.mail.Address[] unpack(java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.NotificationContentCreator { java.lang.String getMessageSender(com.fsck.k9.Account,com.fsck.k9.mail.Message); }
-keepclassmembers class android.view.View { int getRawTextDirection(); }
-keepclassmembers class com.fsck.k9.mail.Address { java.lang.String getAddress(); }
-keepclassmembers class com.fsck.k9.mail.Address { java.lang.String getHostname(); }
-keepclassmembers class com.fsck.k9.mail.Address { java.lang.String getPersonal(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { void <init>(byte[],java.lang.String,int,java.security.cert.X509Certificate[],com.android.org.conscrypt.AbstractSessionContext); }
-keepclassmembers class android.view.View { int getTextDirection(); }
-keepclassmembers class com.fsck.k9.mail.Address { int hashCode(); }
-keepclassmembers class android.view.View { boolean resolveTextDirection(); }
-keepclassmembers class android.view.ViewPropertyAnimator { void start(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { byte[] getId(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { void resetId(); }
-keepclassmembers class com.fsck.k9.mail.Address { java.lang.String toEncodedString(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { byte[] getEncoded(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.OpenSSLSessionImpl getCachedClientSession(com.android.org.conscrypt.ClientSessionContext,java.lang.String,int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isAbstract(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { long getCreationTime(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isFinal(int); }
-keepclassmembers class com.fsck.k9.mail.Address { java.lang.String toString(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isInterface(int); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isNative(int); }
-keepclassmembers class com.fsck.k9.notification.NotificationContentCreator { java.lang.String getMessageSenderForDisplay(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { java.security.Principal getLocalPrincipal(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isPrivate(int); }
-keepclassmembers class libcore.net.url.FileURLConnection$1 { void <init>(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isProtected(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { java.security.cert.Certificate[] getLocalCertificates(); }
-keepclassmembers class com.fsck.k9.notification.NotificationContentCreator { java.lang.String getMessageSubject(com.fsck.k9.mail.Message); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isPublic(int); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner$1 { void <clinit>(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isStatic(int); }
-keepclassmembers class com.fsck.k9.notification.NotificationContentCreator { java.lang.String getPreview(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isStrict(int); }
-keepclassmembers class android.os.Trace$1 { void <init>(); }
-keepclassmembers class android.os.Trace$1 { void run(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isSynchronized(int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.lang.Object clone(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isTransient(int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509KeyManager getDefaultX509KeyManager(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isVolatile(int); }
-keepclassmembers class android.view.View { boolean canResolveTextDirection(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$8 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.lang.reflect.Modifier { java.lang.String toString(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { java.security.cert.Certificate[] getPeerCertificates(); }
-keepclassmembers class com.fsck.k9.notification.NotificationContentCreator { com.fsck.k9.notification.NotificationContent createFromMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { void <init>(com.fsck.k9.Account,java.util.List); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { void checkPeerCertificatesPresent(); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { android.widget.EditText access$1100(com.fsck.k9.activity.Accounts$PasswordPromptDialog); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { android.widget.EditText access$1200(com.fsck.k9.activity.Accounts$PasswordPromptDialog); }
-keepclassmembers class org.apache.http.conn.routing.RouteInfo$LayerType { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View { void resetResolvedTextDirection(); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { java.lang.String getPeerHost(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { com.fsck.k9.Account access$1400(com.fsck.k9.activity.Accounts$PasswordPromptDialog); }
-keepclassmembers class org.apache.http.conn.routing.RouteInfo$LayerType { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { int getPeerPort(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { java.util.List access$1500(com.fsck.k9.activity.Accounts$PasswordPromptDialog); }
-keepclassmembers class android.view.View { boolean isTextDirectionInherited(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { android.widget.CheckBox access$1300(com.fsck.k9.activity.Accounts$PasswordPromptDialog); }
-keepclassmembers class android.widget.EditText { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { com.android.okhttp.internal.spdy.ErrorCode[] values(); }
-keepclassmembers class android.view.View { boolean isTextDirectionResolved(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509KeyManager createDefaultX509KeyManager(); }
-keepclassmembers class java.lang.reflect.Modifier { boolean isConstructor(int); }
-keepclassmembers class org.apache.http.impl.client.DefaultProxyAuthenticationHandler { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509KeyManager findFirstX509KeyManager(javax.net.ssl.KeyManager[]); }
-keepclassmembers class org.apache.http.impl.client.DefaultProxyAuthenticationHandler { boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator translationY(float); }
-keepclassmembers class android.widget.EditText { boolean getDefaultEditable(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { java.lang.String getProtocol(); }
-keepclassmembers class android.widget.EditText { android.text.method.MovementMethod getDefaultMovementMethod(); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { void <init>(java.lang.String,int,int,int,int); }
-keepclassmembers class android.view.View { int getRawTextAlignment(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { java.lang.String getCipherSuite(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { void show(com.fsck.k9.activity.Accounts,boolean); }
-keepclassmembers class android.widget.EditText { android.text.Editable getText(); }
-keepclassmembers class android.widget.EditText { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSessionImpl { boolean isValid(); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { com.android.okhttp.internal.spdy.ErrorCode fromSpdy3Rst(int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { com.android.org.conscrypt.PSKKeyManager findFirstPSKKeyManager(javax.net.ssl.KeyManager[]); }
-keepclassmembers class android.widget.EditText { void setSelection(int); }
-keepclassmembers class android.view.View { void setTextAlignment(int); }
-keepclassmembers class org.apache.http.impl.client.DefaultProxyAuthenticationHandler { java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { com.android.okhttp.internal.spdy.ErrorCode fromHttp2(int); }
-keepclassmembers class android.view.View { int getTextAlignment(); }
-keepclassmembers class android.app.FragmentManagerImpl$2 { void run(); }
-keepclassmembers class android.view.View { void setTextDirection(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { com.android.okhttp.internal.spdy.ErrorCode fromSpdyGoAway(int); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509TrustManager getDefaultX509TrustManager(); }
-keepclassmembers class android.widget.EditText { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$19 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.http.impl.client.BasicCredentialsProvider { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$19 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.ErrorCode { void <clinit>(); }
-keepclassmembers class android.widget.EditText { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509TrustManager createDefaultX509TrustManager(); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.view.ViewPropertyAnimator alpha(float); }
-keepclassmembers class org.apache.http.impl.client.BasicCredentialsProvider { org.apache.http.auth.Credentials matchCredentials(java.util.HashMap,org.apache.http.auth.AuthScope); }
-keepclassmembers class android.widget.EditText { java.lang.CharSequence getText(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { javax.net.ssl.X509TrustManager findFirstX509TrustManager(javax.net.ssl.TrustManager[]); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView$3 { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources); }
-keepclassmembers class org.htmlcleaner.ContentType { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class org.htmlcleaner.ContentType { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class android.view.View { boolean canResolveTextAlignment(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.lang.String getServerX509KeyType(long); }
-keepclassmembers class org.apache.http.impl.client.BasicCredentialsProvider { org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope); }
-keepclassmembers class org.apache.http.impl.client.BasicCredentialsProvider { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.service.ShutdownReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.view.View { void resetResolvedTextAlignment(); }
-keepclassmembers class android.view.View { boolean resolveTextAlignment(); }
-keepclassmembers class org.htmlcleaner.ContentType { org.htmlcleaner.ContentType[] values(); }
-keepclassmembers class android.view.View { boolean isTextAlignmentInherited(); }
-keepclassmembers class android.widget.EditText { void setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <init>(int[],java.lang.Object,byte[]); }
-keepclassmembers class android.content.CursorLoader { android.database.Cursor loadInBackground(); }
-keepclassmembers class java.io.CharArrayWriter { void <init>(int); }
-keepclassmembers class android.view.View { int generateViewId(); }
-keepclassmembers class android.view.ViewPropertyAnimator { void startAnimation(); }
-keepclassmembers class com.fsck.k9.service.ShutdownReceiver { void <init>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.io.CharArrayWriter { void close(); }
-keepclassmembers class java.io.CharArrayWriter { void expand(int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setAlpha(int); }
-keepclassmembers class android.ddm.DdmHandleHello { void <init>(); }
-keepclassmembers class android.ddm.DdmHandleHello { void register(); }
-keepclassmembers class android.view.View { android.view.ViewPropertyAnimator animate(); }
-keepclassmembers class android.view.View { boolean isTextAlignmentResolved(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { org.apache.harmony.security.pkcs7.SignedData getSignedData(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.app.FragmentState$1 { void <init>(); }
-keepclassmembers class java.net.UnknownHostException { void <init>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class java.net.UnknownHostException { void <init>(java.lang.String); }
-keepclassmembers class android.view.View { void setTransitionName(java.lang.String); }
-keepclassmembers class android.view.View { java.lang.String getTransitionName(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { java.lang.String toString(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.lang.String[] getDefaultCipherSuites(boolean,boolean); }
-keepclassmembers class android.content.CursorLoader { void cancelLoadInBackground(); }
-keepclassmembers class android.view.ViewPropertyAnimator { void animateProperty(int,float); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { int[] access$000(org.apache.harmony.security.pkcs7.ContentInfo); }
-keepclassmembers class android.content.CursorLoader { void deliverResult(android.database.Cursor); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { java.lang.Object access$100(org.apache.harmony.security.pkcs7.ContentInfo); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getOpacity(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <init>(int[],java.lang.Object,byte[],org.apache.harmony.security.pkcs7.ContentInfo$1); }
-keepclassmembers class android.view.ViewPropertyAnimator { void animatePropertyBy(int,float,float); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { void restore(android.app.Activity); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { boolean retain(); }
-keepclassmembers class android.content.CursorLoader { void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.lang.String[] getDefaultProtocols(); }
-keepclassmembers class java.io.CharArrayWriter { java.lang.String toString(); }
-keepclassmembers class com.android.org.conscrypt.SSLParametersImpl { java.lang.String[] concat(java.lang.String[][]); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Traverser { void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int); }
-keepclassmembers class android.content.CursorLoader { void onStartLoading(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Traverser { java.util.concurrent.ConcurrentHashMap$Node advance(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog { void show(com.fsck.k9.activity.Accounts); }
-keepclassmembers class android.content.CursorLoader { void onStopLoading(); }
-keepclassmembers class android.content.CursorLoader { void onCanceled(android.database.Cursor); }
-keepclassmembers class java.io.CharArrayWriter { void write(char[],int,int); }
-keepclassmembers class com.fsck.k9.view.HighlightDialogFragment { void <init>(); }
-keepclassmembers class android.content.CursorLoader { void onReset(); }
-keepclassmembers class android.view.ViewPropertyAnimator { void setValue(int,float); }
-keepclassmembers class com.fsck.k9.view.HighlightDialogFragment { void hideKeyboard(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLanguageFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLanguageFieldImpl { void <clinit>(); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <init>(android.view.ViewConfiguration,android.view.View); }
-keepclassmembers class android.view.View { boolean access$2000(); }
-keepclassmembers class com.fsck.k9.view.HighlightDialogFragment { void hideShowcaseView(); }
-keepclassmembers class android.view.ViewPropertyAnimator { float getValue(int); }
-keepclassmembers class android.view.View { int access$2400(android.view.View); }
-keepclassmembers class java.io.CharArrayWriter { void flush(); }
-keepclassmembers class android.view.View { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean canApplyTheme(); }
-keepclassmembers class android.content.CursorLoader { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.support.v4.app.INotificationSideChannel$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.util.zip.GZIPInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.support.v4.app.INotificationSideChannel$Stub$Proxy { void cancel(java.lang.String,int,java.lang.String); }
-keepclassmembers class java.util.zip.GZIPInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class com.fsck.k9.view.HighlightDialogFragment { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class com.fsck.k9.view.HighlightDialogFragment { void onStart(); }
-keepclassmembers class android.view.View$ScrollabilityCache { void setFadeColor(int); }
-keepclassmembers class android.support.v4.app.INotificationSideChannel$Stub$Proxy { void cancelAll(java.lang.String); }
-keepclassmembers class android.app.ExitTransitionCoordinator$6 { void <init>(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.content.ClipData { void <init>(java.lang.CharSequence,java.lang.String[],android.content.ClipData$Item); }
-keepclassmembers class android.app.ExitTransitionCoordinator$6 { void onTranslucentConversionComplete(boolean); }
-keepclassmembers class android.view.ViewPropertyAnimator { java.util.HashMap access$200(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.view.ViewPropertyAnimator { java.util.HashMap access$300(android.view.ViewPropertyAnimator); }
-keepclassmembers class java.util.zip.GZIPInputStream { void close(); }
-keepclassmembers class java.util.HashMap$HashMapEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class java.util.zip.GZIPInputStream { int read(byte[],int,int); }
-keepclassmembers class android.support.v4.app.INotificationSideChannel$Stub$Proxy { void notify(java.lang.String,int,java.lang.String,android.app.Notification); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.animation.Animator$AnimatorListener access$400(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.view.ViewPropertyAnimator { java.util.HashMap access$500(android.view.ViewPropertyAnimator); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.Object getKey(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.Object getValue(); }
-keepclassmembers class android.view.ViewPropertyAnimator { java.util.HashMap access$600(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.view.ViewPropertyAnimator { java.util.HashMap access$700(android.view.ViewPropertyAnimator); }
-keepclassmembers class java.util.HashMap$HashMapEntry { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean isStateful(); }
-keepclassmembers class android.content.CursorLoader { java.lang.Object loadInBackground(); }
-keepclassmembers class android.content.ClipData { void <init>(android.content.ClipData); }
-keepclassmembers class android.view.ViewPropertyAnimator { void access$800(android.view.ViewPropertyAnimator,int,float); }
-keepclassmembers class android.content.CursorLoader { void onCanceled(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.util.zip.GZIPInputStream { boolean maybeReadNextMember(); }
-keepclassmembers class android.content.CursorLoader { void deliverResult(java.lang.Object); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.view.ViewPropertyAnimator { android.animation.ValueAnimator$AnimatorUpdateListener access$900(android.view.ViewPropertyAnimator); }
-keepclassmembers class java.util.HashMap$HashMapEntry { int hashCode(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <init>(); }
-keepclassmembers class java.util.HashMap$HashMapEntry { java.lang.String toString(); }
-keepclassmembers class android.view.View$ScrollabilityCache { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.ViewGroup$ChildListForAccessibility obtain(android.view.ViewGroup,boolean); }
-keepclassmembers class com.android.org.conscrypt.Platform { java.io.FileDescriptor getFileDescriptor(java.net.Socket); }
-keepclassmembers class android.view.textservice.SpellCheckerSubtype$1 { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.Platform { java.io.FileDescriptor getFileDescriptorFromSSLSocket(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class java.util.zip.GZIPInputStream { byte[] readHeader(java.io.InputStream); }
-keepclassmembers class java.util.zip.GZIPInputStream { void parseGzipHeader(java.io.InputStream,byte[],java.util.zip.CRC32,byte[]); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void recycle(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { int getChildCount(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getIntrinsicWidth(); }
-keepclassmembers class com.jcraft.jzlib.ZOutputStream { void <init>(java.io.OutputStream,int,boolean); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { android.view.View getChildAt(int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { int getIntrinsicHeight(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo40 { void addMimeTypeColumn(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class com.android.org.conscrypt.Platform { java.lang.String getCurveName(java.security.spec.ECParameterSpec); }
-keepclassmembers class com.jcraft.jzlib.ZOutputStream { void close(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void init(android.view.ViewGroup,boolean); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.jcraft.jzlib.ZOutputStream { void end(); }
-keepclassmembers class com.android.org.conscrypt.Platform { void setSocketWriteTimeout(java.net.Socket,long); }
-keepclassmembers class com.jcraft.jzlib.ZOutputStream { void finish(); }
-keepclassmembers class android.view.LayoutInflater { android.view.LayoutInflater from(android.content.Context); }
-keepclassmembers class android.content.ClipData { android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri); }
-keepclassmembers class android.ddm.DdmHandleHello { void <clinit>(); }
-keepclassmembers class android.content.ClipData { void addItem(android.content.ClipData$Item); }
-keepclassmembers class java.util.zip.GZIPInputStream { void verifyCrc(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.content.ClipData { int getItemCount(); }
-keepclassmembers class com.android.org.conscrypt.Platform { com.android.org.conscrypt.OpenSSLKey wrapRsaKey(java.security.PrivateKey); }
-keepclassmembers class android.content.ClipData { android.content.ClipData$Item getItemAt(int); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void sort(java.util.ArrayList); }
-keepclassmembers class com.android.org.conscrypt.Platform { void logEvent(java.lang.String); }
-keepclassmembers class android.content.ClipData { void prepareToLeaveProcess(); }
-keepclassmembers class java.util.zip.GZIPInputStream { void readZeroTerminated(java.io.InputStream,java.util.zip.CRC32,boolean); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void clear(); }
-keepclassmembers class android.view.ViewGroup$ChildListForAccessibility { void <clinit>(); }
-keepclassmembers class com.fsck.k9.view.HighlightDialogFragment { void setDialogBackgroundDim(); }
-keepclassmembers class com.jcraft.jzlib.ZOutputStream { void flush(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.jcraft.jzlib.ZOutputStream { void setFlushMode(int); }
-keepclassmembers class com.fsck.k9.view.HighlightDialogFragment { void highlightViewInBackground(); }
-keepclassmembers class com.jcraft.jzlib.ZOutputStream { void write(int); }
-keepclassmembers class com.jcraft.jzlib.ZOutputStream { void write(byte[],int,int); }
-keepclassmembers class com.android.org.conscrypt.Platform { boolean isLiteralIpAddress(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.Platform { boolean isSniEnabledByDefault(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$1 { void <init>(com.fsck.k9.ui.crypto.MessageCryptoHelper); }
-keepclassmembers class android.content.ClipData { void toShortString(java.lang.StringBuilder); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { boolean isShared(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node predecessor(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$1 { void onBound(org.openintents.openpgp.IOpenPgpService2); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory$1 { void <init>(com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory,java.lang.Runnable,java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(java.lang.Thread,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$1 { void onError(java.lang.Exception); }
-keepclassmembers class java.nio.ReadOnlyBufferException { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$DefaultThreadFactory$1 { void run(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer$Node { void <init>(java.lang.Thread,int); }
-keepclassmembers class android.view.View { boolean access$2500(android.view.View); }
-keepclassmembers class android.view.animation.CycleInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.content.ClipData { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor$1 { void run(); }
-keepclassmembers class android.os.AsyncTask$SerialExecutor$1 { void <init>(android.os.AsyncTask$SerialExecutor,java.lang.Runnable); }
-keepclassmembers class android.security.AndroidKeyStoreProvider { void <init>(); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { void <init>(); }
-keepclassmembers class android.view.animation.CycleInterpolator { float getInterpolation(float); }
-keepclassmembers class android.content.ClipData { void <init>(android.os.Parcel); }
-keepclassmembers class android.content.ClipData { void <clinit>(); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { void add(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.ContentMD5FieldImpl { void <clinit>(); }
-keepclassmembers class android.net.Uri$PathSegmentsBuilder { android.net.Uri$PathSegments build(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentMD5FieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class java.nio.charset.StandardCharsets { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.view.DisplayEventReceiver { long nativeInit(android.view.DisplayEventReceiver,android.os.MessageQueue); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void clearMutated(); }
-keepclassmembers class org.apache.james.mime4j.MimeException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.content.res.Resources,android.graphics.drawable.RotateDrawable$1); }
-keepclassmembers class org.apache.james.mime4j.MimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.DisplayEventReceiver { void nativeScheduleVsync(long); }
-keepclassmembers class com.fsck.k9.mail.internet.Viewable$MessageHeader { void <init>(com.fsck.k9.mail.Part,com.fsck.k9.mail.Message); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperResourceDecoder$BufferedStreamFactory { java.io.InputStream build(java.io.InputStream,byte[]); }
-keepclassmembers class android.view.DisplayEventReceiver { void <init>(android.os.Looper); }
-keepclassmembers class com.fsck.k9.mail.internet.Viewable$MessageHeader { com.fsck.k9.mail.Part getContainerPart(); }
-keepclassmembers class android.webkit.WebSettings$LayoutAlgorithm { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.james.mime4j.MimeException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.mail.internet.Viewable$MessageHeader { com.fsck.k9.mail.Message getMessage(); }
-keepclassmembers class android.webkit.WebSettings$LayoutAlgorithm { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews$3 { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$3 { android.widget.RemoteViews createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.RemoteViews$3 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.DisplayEventReceiver { void scheduleVsync(); }
-keepclassmembers class android.animation.PathKeyframes$3 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class android.animation.PathKeyframes$3 { int getIntValue(float); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter$2 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$1 { void <init>(com.fsck.k9.mailstore.LocalStore,java.io.File,com.fsck.k9.mailstore.StorageManager); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$1 { java.lang.Long doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy$1 { void run(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { void <clinit>(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy$1 { void <init>(android.os.StrictMode$AndroidBlockGuardPolicy,android.view.IWindowManager,java.util.ArrayList); }
-keepclassmembers class android.widget.FastScroller { void <init>(android.widget.AbsListView,int); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody$1 { void <init>(com.fsck.k9.mailstore.DeferredFileBody,int,com.fsck.k9.mailstore.util.FileFactory); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$1 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedIdentity { void <init>(com.fsck.k9.preferences.SettingsImporter$1); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody$1 { void close(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedIdentity { void <init>(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void close(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void <init>(int); }
-keepclassmembers class org.htmlcleaner.TagNode { void <init>(java.lang.String); }
-keepclassmembers class org.htmlcleaner.TagNode { void <init>(java.lang.String,boolean); }
-keepclassmembers class java.io.ByteArrayOutputStream { void expand(int); }
-keepclassmembers class android.app.ActivityManagerNative$1 { void <init>(); }
-keepclassmembers class android.app.ActivityManagerNative$1 { java.lang.Object create(); }
-keepclassmembers class android.app.ActivityManagerNative$1 { android.app.IActivityManager create(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void reset(); }
-keepclassmembers class java.io.ByteArrayOutputStream { byte[] toByteArray(); }
-keepclassmembers class org.htmlcleaner.TagNode { java.util.Map attributesToLowerCase(); }
-keepclassmembers class java.io.ByteArrayOutputStream { java.lang.String toString(); }
-keepclassmembers class android.widget.FastScroller { void updateAppearance(); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(int); }
-keepclassmembers class java.io.ByteArrayOutputStream { java.lang.String toString(java.lang.String); }
-keepclassmembers class org.htmlcleaner.TagNode { java.util.List findMatchingTagNodes(org.htmlcleaner.conditional.ITagNodeCondition,boolean); }
-keepclassmembers class java.io.ByteArrayOutputStream { void writeTo(java.io.OutputStream); }
-keepclassmembers class android.animation.AnimatorSet$1 { void <init>(android.animation.AnimatorSet,java.util.ArrayList); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void <init>(java.lang.String[]); }
-keepclassmembers class java.io.ByteArrayOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.animation.AnimatorSet$1 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class org.htmlcleaner.TagNode { void handleInterruption(); }
-keepclassmembers class org.htmlcleaner.TagNode { void replaceAttributes(java.util.Map); }
-keepclassmembers class android.widget.FastScroller { void setStyle(int); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readHeader(); }
-keepclassmembers class android.app.BackStackState$1 { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class org.htmlcleaner.TagNode { void addAttribute(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { boolean loadData(java.lang.String); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readIndex(libcore.io.BufferIterator,int,int); }
-keepclassmembers class android.view.View$1 { void onClick(android.view.View); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { void readZoneTab(libcore.io.BufferIterator,int,int); }
-keepclassmembers class android.view.View$1 { void <init>(android.view.View,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$6 { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.TagNode { void addChild(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller { boolean isEnabled(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void <init>(int[],java.lang.String,java.lang.Object); }
-keepclassmembers class org.htmlcleaner.TagNode { void addChildren(java.util.List); }
-keepclassmembers class android.widget.FastScroller { void setEnabled(boolean); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void <init>(int[]); }
-keepclassmembers class android.widget.FastScroller { void setAlwaysShow(boolean); }
-keepclassmembers class android.widget.FastScroller { boolean isAlwaysShowEnabled(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int[] getOid(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String getName(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.Object getGroup(); }
-keepclassmembers class org.htmlcleaner.TagNode { void addItemForMoving(java.lang.Object); }
-keepclassmembers class android.widget.FastScroller { void onStateDependencyChanged(boolean); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { boolean equals(java.lang.Object); }
-keepclassmembers class org.htmlcleaner.TagNode { void addNamespaceDeclaration(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String toOIDString(); }
-keepclassmembers class android.widget.FastScroller { void setScrollBarStyle(int); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { java.lang.String toString(); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamFileLoader$Factory { void <init>(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { java.lang.String[] getAvailableIDs(); }
-keepclassmembers class android.widget.FastScroller { void stop(); }
-keepclassmembers class android.widget.FastScroller { void setScrollbarPosition(int); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int hashCode(); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { void validateOid(int[]); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamFileLoader$Factory { com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory); }
-keepclassmembers class org.apache.harmony.security.utils.ObjectIdentifier { int hashIntArray(int[]); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$7 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class org.htmlcleaner.TagNode { java.util.List getAllChildren(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.util.ZoneInfo makeTimeZone(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$7 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamFileLoader$Factory { void teardown(); }
-keepclassmembers class org.htmlcleaner.TagNode { java.lang.String getAttributeByName(java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { java.lang.String[] access$000(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class android.widget.FastScroller { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.FastScroller { int getWidth(); }
-keepclassmembers class com.github.amlcurran.showcaseview.targets.Target$1 { void <init>(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { libcore.io.MemoryMappedFile access$100(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class com.github.amlcurran.showcaseview.targets.Target$1 { android.graphics.Point getPoint(); }
-keepclassmembers class android.view.View { boolean inLiveRegion(); }
-keepclassmembers class org.htmlcleaner.TagNode { java.util.Map getAttributes(); }
-keepclassmembers class org.htmlcleaner.TagNode { java.util.Map getAttributesInLowerCase(); }
-keepclassmembers class libcore.util.ZoneInfoDB$TzData { int[] access$200(libcore.util.ZoneInfoDB$TzData); }
-keepclassmembers class android.widget.FastScroller { void onItemCountChanged(int,int); }
-keepclassmembers class org.apache.james.mime4j.field.MimeVersionFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.james.mime4j.field.MimeVersionFieldImpl { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.TagNode { org.htmlcleaner.DoctypeToken getDocType(); }
-keepclassmembers class android.widget.FastScroller { void updateLongList(int,int); }
-keepclassmembers class android.widget.ListPopupWindow$PopupTouchInterceptor { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class org.htmlcleaner.TagNode { java.util.List getElementList(org.htmlcleaner.conditional.ITagNodeCondition,boolean); }
-keepclassmembers class java.util.LinkedList$Link { void <init>(java.lang.Object,java.util.LinkedList$Link,java.util.LinkedList$Link); }
-keepclassmembers class org.htmlcleaner.TagNode { java.util.List getElementListByName(java.lang.String,boolean); }
-keepclassmembers class android.widget.FastScroller { android.widget.TextView createPreviewTextView(android.content.Context); }
-keepclassmembers class android.graphics.drawable.AnimatedVectorDrawable$1 { void <init>(android.graphics.drawable.AnimatedVectorDrawable); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest$Status { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.io.LimitedInputStream { void <init>(java.io.InputStream,long); }
-keepclassmembers class android.widget.FastScroller { void updateLayout(); }
-keepclassmembers class org.apache.james.mime4j.io.LimitedInputStream { void enforceLimit(); }
-keepclassmembers class org.apache.james.mime4j.io.LimitedInputStream { int getBytesLeft(); }
-keepclassmembers class org.apache.james.mime4j.io.LimitedInputStream { int read(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void <init>(android.content.Context,com.fsck.k9.activity.compose.AttachmentPresenter$AttachmentMvpView,android.app.LoaderManager); }
-keepclassmembers class org.apache.james.mime4j.io.LimitedInputStream { int read(byte[],int,int); }
-keepclassmembers class org.apache.james.mime4j.io.LimitedInputStream { long skip(long); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader$AsyncDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap,com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask); }
-keepclassmembers class org.htmlcleaner.TagNode { java.util.List getItemsToMove(); }
-keepclassmembers class org.htmlcleaner.TagNode { java.lang.String getName(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { android.content.Context access$000(com.fsck.k9.activity.compose.AttachmentPresenter); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest$Status { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader$AsyncDrawable { com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask getContactPictureRetrievalTask(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { android.app.LoaderManager access$200(com.fsck.k9.activity.compose.AttachmentPresenter); }
-keepclassmembers class android.widget.FastScroller { void applyLayout(android.view.View,android.graphics.Rect); }
-keepclassmembers class org.htmlcleaner.TagNode { java.util.Map getNamespaceDeclarations(); }
-keepclassmembers class com.fsck.k9.helper.K9AlarmManager { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { com.fsck.k9.activity.compose.AttachmentPresenter$AttachmentMvpView access$300(com.fsck.k9.activity.compose.AttachmentPresenter); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void access$400(com.fsck.k9.activity.compose.AttachmentPresenter,com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { java.util.LinkedHashMap access$100(com.fsck.k9.activity.compose.AttachmentPresenter); }
-keepclassmembers class com.fsck.k9.helper.K9AlarmManager { boolean isDozeWhiteListed(); }
-keepclassmembers class com.fsck.k9.helper.K9AlarmManager { com.fsck.k9.helper.K9AlarmManager getAlarmManager(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void access$500(com.fsck.k9.activity.compose.AttachmentPresenter); }
-keepclassmembers class com.fsck.k9.helper.K9AlarmManager { void cancel(android.app.PendingIntent); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void addAttachment(android.net.Uri); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void addAttachmentAndStartLoader(com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class android.widget.FastScroller { void measurePreview(android.view.View,android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.helper.K9AlarmManager { boolean isDozeSupported(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ValuesView { void <init>(java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class com.fsck.k9.helper.K9AlarmManager { void set(int,long,android.app.PendingIntent); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void <init>(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry); }
-keepclassmembers class org.htmlcleaner.TagNode { org.htmlcleaner.TagNode getParent(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { int getNextFreeLoaderId(); }
-keepclassmembers class com.fsck.k9.helper.K9AlarmManager { void setAndAllowWhileIdle(int,long,android.app.PendingIntent); }
-keepclassmembers class android.widget.FastScroller { void measureViewToSide(android.view.View,android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.htmlcleaner.TagNode { boolean hasAttribute(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { boolean hasLoadingAttachments(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ValuesView { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.TemporaryBuffer { char[] obtain(int); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry(); }
-keepclassmembers class org.htmlcleaner.TagNode { boolean hasChildren(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { org.apache.http.conn.ClientConnectionOperator createConnectionOperator(org.apache.http.conn.scheme.SchemeRegistry); }
-keepclassmembers class com.fsck.k9.mail.ssl.TrustManagerFactory { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void assertStillUp(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { org.apache.http.conn.ssl.SSLSocketFactory getSocketFactory(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void initAttachmentInfoLoader(com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void initAttachmentContentLoader(com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class android.graphics.TemporaryBuffer { void recycle(char[]); }
-keepclassmembers class android.graphics.TemporaryBuffer { void <clinit>(); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler { void <clinit>(); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler { void <init>(com.fsck.k9.helper.HtmlConverter$1); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler { java.lang.Object getOpeningAnnotation(android.text.Editable); }
-keepclassmembers class com.fsck.k9.mail.ssl.TrustManagerFactory { javax.net.ssl.X509TrustManager get(java.lang.String,int); }
-keepclassmembers class org.htmlcleaner.TagNode { boolean isCopy(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { org.apache.http.conn.ManagedClientConnection getConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object); }
-keepclassmembers class org.htmlcleaner.TagNode { boolean isAutoGenerated(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void postPerformStalledAction(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void addAttachment(android.net.Uri,java.lang.String); }
-keepclassmembers class org.htmlcleaner.TagNode { boolean isEmpty(); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamFileLoader { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamFileLoader { void <init>(com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void addAttachment(com.fsck.k9.mailstore.AttachmentViewInfo); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$14 { void <init>(com.fsck.k9.mailstore.LocalStore,java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void measureFloating(android.view.View,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.htmlcleaner.TagNode { boolean isFormed(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$14 { com.fsck.k9.mailstore.LocalStore$AttachmentInfo doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.htmlcleaner.TagNode { org.htmlcleaner.TagNode makeCopy(); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler { void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader); }
-keepclassmembers class org.htmlcleaner.TagNode { boolean removeChild(java.lang.Object); }
-keepclassmembers class org.htmlcleaner.TagNode { boolean isPruned(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void addAttachmentsFromResultIntent(android.content.Intent); }
-keepclassmembers class com.fsck.k9.helper.HtmlConverter$HtmlToTextTagHandler { void handleIgnoredTag(boolean,android.text.Editable); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void attachmentProgressDialogCancelled(); }
-keepclassmembers class org.htmlcleaner.TagNode { void removeAttribute(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void updateContainerRect(); }
-keepclassmembers class org.htmlcleaner.TagNode { void serialize(org.htmlcleaner.Serializer,java.io.Writer); }
-keepclassmembers class org.htmlcleaner.TagNode { void setAttributes(java.util.Map); }
-keepclassmembers class org.htmlcleaner.TagNode { boolean removeFromTree(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { boolean checkOkForSendingOrDraftSaving(); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { void <init>(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void releaseConnection(org.apache.http.conn.ManagedClientConnection,long,java.util.concurrent.TimeUnit); }
-keepclassmembers class com.android.okhttp.Headers { java.lang.String get(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { java.util.ArrayList createAttachmentList(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { boolean loadNonInlineAttachments(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class android.widget.FastScroller { void layoutThumb(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$14 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.android.okhttp.Headers { void <init>(com.android.okhttp.Headers$Builder); }
-keepclassmembers class com.android.okhttp.Headers { java.lang.String name(int); }
-keepclassmembers class com.android.okhttp.Headers { int size(); }
-keepclassmembers class org.htmlcleaner.TagNode { void setAutoGenerated(boolean); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class android.widget.FastScroller { void layoutTrack(); }
-keepclassmembers class org.htmlcleaner.TagNode { void setDocType(org.htmlcleaner.DoctypeToken); }
-keepclassmembers class com.android.okhttp.Headers { java.lang.String value(int); }
-keepclassmembers class org.htmlcleaner.TagNode { void setForeignMarkup(boolean); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void onClickRemoveAttachment(android.net.Uri); }
-keepclassmembers class android.widget.FastScroller { void setState(int); }
-keepclassmembers class org.htmlcleaner.TagNode { void setFormed(); }
-keepclassmembers class org.htmlcleaner.TagNode { void setItemsToMove(java.util.List); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void onClickAddAttachment(com.fsck.k9.activity.compose.RecipientPresenter); }
-keepclassmembers class org.htmlcleaner.TagNode { void setPruned(boolean); }
-keepclassmembers class org.htmlcleaner.TagNode { void setFormed(boolean); }
-keepclassmembers class android.widget.FastScroller { void refreshDrawablePressedState(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class org.htmlcleaner.TagNode { void setTrimAttributeValues(boolean); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void <init>(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEvent(android.view.View,int); }
-keepclassmembers class android.widget.FastScroller { void transitionToHidden(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.LayoutInflater { void <clinit>(); }
-keepclassmembers class com.android.okhttp.Headers { com.android.okhttp.Headers$Builder newBuilder(); }
-keepclassmembers class android.widget.FastScroller { void transitionToVisible(); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void <init>(android.widget.TimePicker,android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void performStalledAction(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { void <init>(int); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { boolean isSecure(java.net.Socket); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.android.okhttp.Headers { java.lang.String get(java.lang.String[],java.lang.String); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void closeExpiredConnections(); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter { void processMessageToForward(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class java.util.IllegalFormatPrecisionException { java.lang.String getMessage(); }
-keepclassmembers class com.android.okhttp.Headers { void <init>(com.android.okhttp.Headers$Builder,com.android.okhttp.Headers$1); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Href { void <init>(java.lang.String); }
-keepclassmembers class android.view.View$AccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.FastScroller { void transitionToDragging(); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { void <init>(org.apache.http.conn.ssl.SSLSocketFactory$1); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { void setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier); }
-keepclassmembers class android.view.View$AccessibilityDelegate { android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View); }
-keepclassmembers class android.view.View$AccessibilityDelegate { boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void closeIdleConnections(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.widget.FastScroller { void postAutoHide(); }
-keepclassmembers class android.widget.FastScroller { void onScroll(int,int,int); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager { void revokeConnection(); }
-keepclassmembers class android.widget.FastScroller { void getSectionsFromIndexer(); }
-keepclassmembers class android.transition.ChangeBounds { void <init>(); }
-keepclassmembers class org.apache.http.conn.ssl.SSLSocketFactory { void <clinit>(); }
-keepclassmembers class android.transition.ChangeBounds { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.james.mime4j.io.LineReaderInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.widget.Editor$TextDisplayList { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { void scrollTo(float); }
-keepclassmembers class android.transition.ChangeBounds { void setResizeClip(boolean); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void connect(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void getHourFormatData(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void <init>(java.net.URL); }
-keepclassmembers class android.transition.ChangeBounds { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.ChangeBounds { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.widget.FastScroller { void onSectionsChanged(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { boolean isAmPmAtStart(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void findJarFile(); }
-keepclassmembers class android.transition.ChangeBounds { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { java.util.jar.JarFile openJarFile(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void findJarEntry(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void setCurrentMinute(java.lang.Integer); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.IndicatorLayout { void <init>(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void setDividerText(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void setCurrentHour(java.lang.Integer); }
-keepclassmembers class android.widget.FastScroller { boolean transitionPreviewLayout(int); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void setCurrentHour(java.lang.Integer,boolean); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void setIs24HourView(java.lang.Boolean); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { java.lang.Integer getCurrentMinute(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { java.lang.Integer getCurrentHour(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { java.lang.String getContentType(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void setEnabled(boolean); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { int getBaseline(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { boolean is24HourView(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { boolean isEnabled(); }
-keepclassmembers class android.widget.FastScroller { void setThumbPos(float); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { boolean getUseCaches(); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { void <clinit>(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fsck.k9.mail.K9MailLib$DefaultDebugStatus { void <init>(); }
-keepclassmembers class android.os.IMessenger$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.mail.K9MailLib$DefaultDebugStatus { void <init>(com.fsck.k9.mail.K9MailLib$1); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl { boolean access$002(libcore.net.url.JarURLConnectionImpl,boolean); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fsck.k9.mail.K9MailLib$DefaultDebugStatus { boolean debugSensitive(); }
-keepclassmembers class android.widget.FastScroller { float getPosFromMotionEvent(float); }
-keepclassmembers class android.widget.FastScroller { float getPosFromItemCount(int,int,int); }
-keepclassmembers class java.text.Format$Field { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.K9MailLib$DefaultDebugStatus { boolean enabled(); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget { void <init>(android.view.View); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.IndicatorLayout { boolean isVisible(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void updateAmPmControl(); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget { void <clinit>(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void setCurrentLocale(java.util.Locale); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget { void setTag(java.lang.Object); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void onTimeChanged(); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget { java.lang.Object getTag(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.IndicatorLayout { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine$EngineJobFactory { void <init>(java.util.concurrent.ExecutorService,java.util.concurrent.ExecutorService,com.bumptech.glide.load.engine.EngineJobListener); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void updateHourControl(); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine$EngineJobFactory { com.bumptech.glide.load.engine.EngineJob build(com.bumptech.glide.load.Key,boolean); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget { com.bumptech.glide.request.Request getRequest(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.IndicatorLayout { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.IndicatorLayout { void hide(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.IndicatorLayout { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.IndicatorLayout { void pullToRefresh(); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget { void getSize(com.bumptech.glide.request.target.SizeReadyCallback); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void updateMinuteControl(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.IndicatorLayout { void releaseToRefresh(); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget { android.view.View getView(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void setContentDescriptions(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.IndicatorLayout { void show(); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget { java.lang.String toString(); }
-keepclassmembers class android.widget.FastScroller { void cancelPendingDrag(); }
-keepclassmembers class android.widget.FastScroller { void startPendingDrag(); }
-keepclassmembers class android.widget.FastScroller { void cancelFling(); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget { void setRequest(com.bumptech.glide.request.Request); }
-keepclassmembers class android.widget.FastScroller { void beginDrag(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void trySetContentDescription(android.view.View,int,int); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <init>(java.util.Locale); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void access$300(android.widget.TimePickerSpinnerDelegate); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { java.lang.String[] getAmPmStrings(android.content.Context); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { boolean access$102(android.widget.TimePickerSpinnerDelegate,boolean); }
-keepclassmembers class android.widget.FastScroller { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.math.BigDecimal$1 { void <clinit>(); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { boolean access$100(android.widget.TimePickerSpinnerDelegate); }
-keepclassmembers class android.widget.FastScroller { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TimePickerSpinnerDelegate { void access$200(android.widget.TimePickerSpinnerDelegate); }
-keepclassmembers class android.view.Display { void <init>(android.hardware.display.DisplayManagerGlobal,int,android.view.DisplayInfo,android.view.DisplayAdjustments); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$10 { void <init>(com.fsck.k9.mailstore.LocalStore,android.content.ContentValues); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportContents { void <init>(boolean,java.util.List,com.fsck.k9.preferences.SettingsImporter$1); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.Object clone(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$10 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.transition.ChangeBounds { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$10 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportContents { void <init>(boolean,java.util.List); }
-keepclassmembers class android.database.DataSetObserver { void <init>(); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInside(float,float); }
-keepclassmembers class java.text.DecimalFormatSymbols { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.ThreadInfo { void <init>(long,long,java.lang.String,long,long); }
-keepclassmembers class javax.xml.parsers.ParserConfigurationException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideX(float); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.view.animation.AccelerateDecelerateInterpolator { long createNativeInterpolator(); }
-keepclassmembers class org.apache.http.impl.io.AbstractMessageWriter { void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter,org.apache.http.params.HttpParams); }
-keepclassmembers class android.widget.FastScroller { boolean isPointInsideY(float); }
-keepclassmembers class android.view.Display { void getRectSize(android.graphics.Rect); }
-keepclassmembers class org.apache.http.impl.io.AbstractMessageWriter { void write(org.apache.http.HttpMessage); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock { void <init>(com.fsck.k9.mail.power.TracingPowerManager,int,java.lang.String); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void <init>(java.net.PlainSocketImpl); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void close(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void write(int); }
-keepclassmembers class android.widget.TextView$2 { void <init>(android.widget.TextView); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator groupAnimatorOfFloat(android.util.Property,float,android.view.View[]); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateAlpha(android.view.View,float); }
-keepclassmembers class android.database.DataSetObserver { void onInvalidated(); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateScaleX(android.view.View,float); }
-keepclassmembers class android.widget.FastScroller { android.animation.Animator animateBounds(android.view.View,android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock { void raiseNotification(); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock { void cancelNotification(); }
-keepclassmembers class android.widget.FastScroller { boolean access$102(android.widget.FastScroller,boolean); }
-keepclassmembers class java.net.ResponseCache { void <clinit>(); }
-keepclassmembers class org.apache.harmony.luni.internal.util.TimezoneGetter { org.apache.harmony.luni.internal.util.TimezoneGetter getInstance(); }
-keepclassmembers class java.net.ContentHandler { void <init>(); }
-keepclassmembers class android.widget.FastScroller { boolean access$100(android.widget.FastScroller); }
-keepclassmembers class java.net.ResponseCache { java.net.ResponseCache getDefault(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getCurrencySymbol(); }
-keepclassmembers class android.widget.FastScroller { void <clinit>(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getInternationalCurrencySymbol(); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock { void acquire(long); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getDigit(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getInfinity(); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.Editor$InputMethodState { void <init>(); }
-keepclassmembers class android.text.style.StyleSpan { void <init>(int); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getGroupingSeparator(); }
-keepclassmembers class android.text.style.StyleSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamUrlLoader { void <init>(com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getDecimalSeparator(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock { void release(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getPercentString(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class android.animation.PathKeyframes$IntKeyframesBase { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getMinusSignString(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getMonetaryDecimalSeparator(); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getNaN(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getZeroDigit(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getPatternSeparator(); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void <init>(int); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void expand(int); }
-keepclassmembers class java.text.DecimalFormatSymbols { java.lang.String getExponentSeparator(); }
-keepclassmembers class java.text.DecimalFormatSymbols { char getPerMill(); }
-keepclassmembers class android.view.Display { void updateDisplayInfoLocked(); }
-keepclassmembers class android.content.ClipData$1 { void <init>(); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void append(byte[],int,int); }
-keepclassmembers class com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock { void setReferenceCounted(boolean); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void append(org.apache.http.util.CharArrayBuffer,int,int); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void clear(); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { byte[] toByteArray(); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView$2 { void onClick(android.view.View); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void append(char[],int,int); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView$2 { void <init>(com.fsck.k9.ui.compose.QuotedMessageMvpView,com.fsck.k9.ui.compose.QuotedMessagePresenter); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$CryptoSpecialModeDisplayType { void <clinit>(); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier$1 { void <init>(); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { byte[] buffer(); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { int byteAt(int); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { void setLength(int); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { int capacity(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$2 { void <init>(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$2 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { boolean isEmpty(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$CryptoSpecialModeDisplayType { void <init>(java.lang.String,int,int); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { int length(); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTangle_addr { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class org.apache.http.util.ByteArrayBuffer { boolean isFull(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap { void makeHead(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTangle_addr { void <init>(int); }
-keepclassmembers class com.handmark.pulltorefresh.library.OverscrollHelper$1 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog$1 { void <init>(com.fsck.k9.ui.messageview.CryptoInfoDialog); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap { void makeTail(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap { void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$2 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap { java.lang.Object get(com.bumptech.glide.load.engine.bitmap_recycle.Poolable); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap { void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.impl.conn.AbstractPoolEntry); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void detach(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void assertAttached(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { org.apache.http.conn.routing.HttpRoute getRoute(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class android.util.PathParser { android.graphics.Path createPathFromPathData(java.lang.String); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(dalvik.system.CloseGuard$1); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap { void put(com.bumptech.glide.load.engine.bitmap_recycle.Poolable,java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap { java.lang.Object removeLast(); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void <init>(); }
-keepclassmembers class dalvik.system.CloseGuard$DefaultReporter { void report(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void tunnelTarget(boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(); }
-keepclassmembers class android.util.PathParser { android.util.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.Authentication { java.lang.String computeCramMd5(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void close(); }
-keepclassmembers class android.util.PathParser { android.util.PathParser$PathDataNode[] deepCopyNodes(android.util.PathParser$PathDataNode[]); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class android.util.PathParser { boolean canMorph(android.util.PathParser$PathDataNode[],android.util.PathParser$PathDataNode[]); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.mail.Authentication { byte[] computeCramMd5Bytes(java.lang.String,java.lang.String,byte[]); }
-keepclassmembers class android.widget.TextView$3 { void <init>(android.widget.TextView); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void setState(java.lang.Object); }
-keepclassmembers class android.widget.TextView$3 { void run(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(long); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler { void <init>(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPooledConnAdapter { void shutdown(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler { java.lang.ref.WeakReference access$000(com.fsck.k9.fragment.MessageListFragment$MessageListHandler); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.Locale); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler { void folderLoading(java.lang.String,boolean); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone,java.util.Locale); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler { void goBack(); }
-keepclassmembers class java.text.DecimalFormatSymbols { void <clinit>(); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(boolean); }
-keepclassmembers class android.util.PathParser { int nextStart(java.lang.String,int); }
-keepclassmembers class android.util.PathParser { void addNode(java.util.ArrayList,char,float[]); }
-keepclassmembers class android.util.PathParser { float[] getFloats(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler { void openMessage(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class java.util.GregorianCalendar { void add(int,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler { void progress(boolean); }
-keepclassmembers class java.util.GregorianCalendar { void <init>(java.util.TimeZone); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler { void refreshTitle(); }
-keepclassmembers class android.graphics.drawable.RippleBackground$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler { void handleMessage(android.os.Message); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler { void restoreListPosition(); }
-keepclassmembers class android.graphics.drawable.RippleBackground$2 { void <init>(android.graphics.drawable.RippleBackground); }
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader { void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler { void updateFooter(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListHandler { void remoteSearchFinished(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <init>(byte[],java.util.List); }
-keepclassmembers class android.util.PathParser { void extract(java.lang.String,int,android.util.PathParser$ExtractFloatResult); }
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader { void <init>(android.content.res.Resources,com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$ContinuationSource { void <init>(com.android.okio.BufferedSource); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { java.util.List getAttributes(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$ContinuationSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Integer,int,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <init>(byte[],java.util.List,org.apache.harmony.security.pkcs7.AuthenticatedAttributes$1); }
-keepclassmembers class org.apache.harmony.security.pkcs7.AuthenticatedAttributes { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { void <init>(org.apache.james.mime4j.io.LineNumberSource,java.io.InputStream,org.apache.james.mime4j.stream.BodyDescriptorBuilder); }
-keepclassmembers class java.util.GregorianCalendar { void fullFieldsCalc(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$ContinuationSource { void readContinuationHeader(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$ContinuationSource { void close(); }
-keepclassmembers class android.os.ParcelFileDescriptor$Status { void <init>(int); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$Action { void <clinit>(); }
-keepclassmembers class android.util.PathParser { void <clinit>(); }
-keepclassmembers class android.transition.ChangeBounds$5 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.os.ParcelFileDescriptor$Status { void <init>(int,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertList$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$PreferencesHolder { void <init>(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class android.widget.NumberPicker$TwoDigitFormatter { void init(java.util.Locale); }
-keepclassmembers class com.bumptech.glide.load.model.ResourceLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { void <init>(org.apache.james.mime4j.io.LineNumberSource,java.io.InputStream,org.apache.james.mime4j.stream.MimeConfig,org.apache.james.mime4j.stream.BodyDescriptorBuilder); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { void <init>(org.apache.james.mime4j.io.LineNumberSource,java.io.InputStream,org.apache.james.mime4j.stream.FieldBuilder,org.apache.james.mime4j.stream.BodyDescriptorBuilder); }
-keepclassmembers class android.widget.NumberPicker$TwoDigitFormatter { void <init>(); }
-keepclassmembers class android.widget.NumberPicker$TwoDigitFormatter { char getZeroDigit(java.util.Locale); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { void <init>(org.apache.james.mime4j.io.LineNumberSource,java.io.InputStream,org.apache.james.mime4j.stream.MimeConfig,org.apache.james.mime4j.stream.EntityState,org.apache.james.mime4j.stream.EntityState,org.apache.james.mime4j.codec.DecodeMonitor,org.apache.james.mime4j.stream.FieldBuilder,org.apache.james.mime4j.stream.BodyDescriptorBuilder); }
-keepclassmembers class android.widget.NumberPicker$TwoDigitFormatter { java.util.Formatter createFormatter(java.util.Locale); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$Action { com.fsck.k9.activity.MessageCompose$Action[] values(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$4 { void <init>(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$Action { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener { boolean onPreDraw(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$4 { void onClientCertificateChanged(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$Action { int getTitleResource(); }
-keepclassmembers class com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener { void <init>(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer); }
-keepclassmembers class java.util.TreeMap$Relation { java.util.TreeMap$Relation[] values(); }
-keepclassmembers class android.widget.AbsListView$ListItemAccessibilityDelegate { void <init>(android.widget.AbsListView); }
-keepclassmembers class java.util.TreeMap$Relation { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.TreeMap$Bound { java.util.TreeMap$Bound[] values(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void <clinit>(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void <init>(); }
-keepclassmembers class android.os.OperationCanceledException { void <init>(); }
-keepclassmembers class java.util.WeakHashMap$2 { void <init>(java.util.WeakHashMap); }
-keepclassmembers class android.os.OperationCanceledException { void <init>(java.lang.String); }
-keepclassmembers class java.util.TreeMap$Bound { void <init>(java.lang.String,int,java.util.TreeMap$1); }
-keepclassmembers class java.util.TreeMap$Bound { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { void <init>(org.apache.james.mime4j.io.LineNumberSource,java.io.InputStream,org.apache.james.mime4j.stream.MimeConfig,org.apache.james.mime4j.stream.EntityState,org.apache.james.mime4j.stream.EntityState,org.apache.james.mime4j.stream.BodyDescriptorBuilder); }
-keepclassmembers class android.database.CursorWrapper { void <init>(android.database.Cursor); }
-keepclassmembers class android.database.CursorWrapper { int getCount(); }
-keepclassmembers class java.util.TreeMap$Relation { void <clinit>(); }
-keepclassmembers class java.util.WeakHashMap$2 { java.util.Iterator iterator(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$11 { void <init>(com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.MessageRetrievalListener,boolean); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void <init>(java.lang.String,com.fsck.k9.search.ConditionsTreeNode,java.lang.String,boolean); }
-keepclassmembers class java.util.TreeMap$Bound { void <clinit>(); }
-keepclassmembers class android.database.CursorWrapper { boolean moveToFirst(); }
-keepclassmembers class android.database.CursorWrapper { int getColumnCount(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void <init>(java.lang.String); }
-keepclassmembers class android.database.CursorWrapper { void close(); }
-keepclassmembers class android.database.CursorWrapper { int getColumnIndexOrThrow(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$11 { java.util.List doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$11 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.database.CursorWrapper { int getColumnIndex(java.lang.String); }
-keepclassmembers class android.database.CursorWrapper { java.lang.String getColumnName(int); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { void advanceToBoundary(); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { void <init>(java.lang.String,char); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { void clearMimePartStream(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { void createMimePartStream(); }
-keepclassmembers class java.util.FormatFlagsConversionMismatchException { java.lang.String getMessage(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void addAccountUuids(java.lang.String[]); }
-keepclassmembers class android.database.CursorWrapper { int getInt(int); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void addAllowedFolder(java.lang.String); }
-keepclassmembers class java.util.GregorianCalendar { void computeTime(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void addAccountUuid(java.lang.String); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { com.fsck.k9.search.ConditionsTreeNode and(com.fsck.k9.search.SearchSpecification$SearchCondition); }
-keepclassmembers class java.util.GregorianCalendar { void computeFields(); }
-keepclassmembers class android.database.CursorWrapper { long getLong(int); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.K9$1 { void <init>(com.fsck.k9.K9,java.util.concurrent.BlockingQueue); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { com.fsck.k9.search.ConditionsTreeNode and(com.fsck.k9.search.ConditionsTreeNode); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { java.io.InputStream getLimitedContentStream(); }
-keepclassmembers class android.database.CursorWrapper { java.lang.String getString(int); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { org.apache.james.mime4j.io.LineReaderInputStream getDataStream(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void and(com.fsck.k9.search.SearchSpecification$SearchField,java.lang.String,com.fsck.k9.search.SearchSpecification$Attribute); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { int getLineNumber(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { com.fsck.k9.search.LocalSearch clone(); }
-keepclassmembers class com.fsck.k9.K9$1 { void run(); }
-keepclassmembers class android.text.method.AllCapsTransformationMethod { void setLengthChangesAllowed(boolean); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { org.apache.james.mime4j.stream.EntityStateMachine nextMessage(); }
-keepclassmembers class android.database.CursorWrapper { boolean isBeforeFirst(); }
-keepclassmembers class android.database.CursorWrapper { boolean isAfterLast(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { java.io.InputStream decodedStream(java.io.InputStream); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { org.apache.james.mime4j.stream.EntityStateMachine nextMimeEntity(); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { void <init>(java.util.AbstractList); }
-keepclassmembers class android.app.Application { void onCreate(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { java.lang.String[] getAccountUuids(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { com.fsck.k9.search.ConditionsTreeNode getConditions(); }
-keepclassmembers class android.app.Application { void onTerminate(); }
-keepclassmembers class android.app.Application { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.app.Application { void onLowMemory(); }
-keepclassmembers class android.app.Application { void <init>(); }
-keepclassmembers class android.database.CursorWrapper { boolean isLast(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void <init>(android.content.Context,android.app.LoaderManager,com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.Account,com.fsck.k9.message.ComposePgpInlineDecider,com.fsck.k9.helper.ReplyToParser); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { org.apache.james.mime4j.stream.EntityStateMachine nextMimeEntity(org.apache.james.mime4j.stream.EntityState,org.apache.james.mime4j.stream.EntityState,java.io.InputStream); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { java.lang.Object next(); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { boolean hasNext(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { java.util.List getFolderNames(); }
-keepclassmembers class android.database.CursorWrapper { boolean moveToPosition(int); }
-keepclassmembers class android.database.CursorWrapper { boolean moveToNext(); }
-keepclassmembers class android.app.Application { void onTrimMemory(int); }
-keepclassmembers class android.database.CursorWrapper { boolean moveToPrevious(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { java.util.Set getLeafSet(); }
-keepclassmembers class java.util.AbstractList$SimpleListIterator { void remove(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { java.lang.String getName(); }
-keepclassmembers class android.app.Application { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.app.Application { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.database.CursorWrapper { void registerContentObserver(android.database.ContentObserver); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { void readRawField(); }
-keepclassmembers class android.database.CursorWrapper { int getPosition(); }
-keepclassmembers class android.app.Application { void registerActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$2 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.app.Application { void unregisterActivityLifecycleCallbacks(android.app.Application$ActivityLifecycleCallbacks); }
-keepclassmembers class android.database.CursorWrapper { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { com.fsck.k9.activity.compose.RecipientMvpView access$000(com.fsck.k9.activity.compose.RecipientPresenter); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void access$100(com.fsck.k9.activity.compose.RecipientPresenter); }
-keepclassmembers class android.app.Application { void registerOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void access$200(com.fsck.k9.activity.compose.RecipientPresenter,java.lang.Exception); }
-keepclassmembers class android.database.CursorWrapper { void unregisterContentObserver(android.database.ContentObserver); }
-keepclassmembers class android.app.Application { void unregisterOnProvideAssistDataListener(android.app.Application$OnProvideAssistDataListener); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { java.lang.String stateToString(org.apache.james.mime4j.stream.EntityState); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { java.lang.String getRemoteSearchArguments(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { com.fsck.k9.search.ConditionsTreeNode or(com.fsck.k9.search.ConditionsTreeNode); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void addRecipientsFromAddresses(com.fsck.k9.mail.Message$RecipientType,com.fsck.k9.mail.Address[]); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$2 { void <init>(com.fsck.k9.activity.ChooseFolder); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean); }
-keepclassmembers class android.app.Notification$BuilderRemoteViews { void <init>(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class android.database.CursorWrapper { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.app.Notification$BuilderRemoteViews { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void addRecipientFromContactUri(com.fsck.k9.mail.Message$RecipientType,android.net.Uri); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { com.fsck.k9.mail.Address[] addressFromStringArray(java.util.List); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { boolean isManualSearch(); }
-keepclassmembers class com.android.okio.Okio$2 { void <init>(java.io.InputStream); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { org.apache.james.mime4j.stream.EntityStateMachine advance(); }
-keepclassmembers class android.app.Notification$BuilderRemoteViews { android.app.Notification$BuilderRemoteViews clone(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { boolean searchAllAccounts(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void <init>(android.widget.Toolbar,boolean,int); }
-keepclassmembers class com.android.okio.Okio$2 { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void setManualSearch(boolean); }
-keepclassmembers class android.app.Notification$BuilderRemoteViews { android.widget.RemoteViews clone(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { com.fsck.k9.mail.Address[] addressFromStringArray(java.lang.String[]); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { com.fsck.k9.search.ConditionsTreeNode or(com.fsck.k9.search.SearchSpecification$SearchCondition); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void setName(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { boolean checkAndIncrementPgpInlineDialogCounter(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { boolean checkAndIncrementPgpSignOnlyDialogCounter(); }
-keepclassmembers class com.fsck.k9.search.LocalSearch { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void write(int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void cryptoProviderBindOrCheckPermission(); }
-keepclassmembers class com.android.okio.Okio$2 { void close(); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void <init>(java.lang.String,java.security.MessageDigest,byte[],java.security.cert.Certificate[][],java.util.Hashtable); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void verify(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void hideEmptyExtendedRecipientFields(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void initPgpInlineFromDraftMessage(com.fsck.k9.mail.Message); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] fastSplit(java.lang.String,java.lang.String,int); }
-keepclassmembers class com.android.okio.Okio$2 { java.lang.String toString(); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <clinit>(); }
-keepclassmembers class java.util.jar.JarVerifier$VerifierEntry { void write(byte[],int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.NumberParseException$ErrorType { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { int recipientTypeToRequestCode(com.fsck.k9.mail.Message$RecipientType); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void initRecipientsFromDraftMessage(com.fsck.k9.mail.Message); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDefaultNavigationContentDescription(int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.content.Context getContext(); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void setCryptoProvider(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onCryptoProviderError(java.lang.Exception); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { com.fsck.k9.mail.Message$RecipientType recipientTypeFromRequestCode(int); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowCallback(android.view.Window$Callback); }
-keepclassmembers class android.text.style.ForegroundColorSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { int detectDisplayOptions(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitle(java.lang.CharSequence); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { org.apache.james.mime4j.stream.BodyDescriptor getBodyDescriptor(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] split(java.util.regex.Pattern,java.lang.String,java.lang.String,int); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers$Builder add(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.Headers$Builder { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { java.io.InputStream getContentStream(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setTitleInt(java.lang.CharSequence); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { java.io.InputStream getDecodedContentStream(); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers$Builder addLine(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void updateRecipientExpanderVisibility(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void addBccAddresses(com.fsck.k9.mail.Address[]); }
-keepclassmembers class java.net.URL { void <init>(java.net.URL,java.lang.String); }
-keepclassmembers class java.util.regex.Splitter { java.lang.String[] finishSplit(java.util.List,java.lang.String,int,int); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setSubtitle(java.lang.CharSequence); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { org.apache.james.mime4j.stream.Field getField(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { org.apache.james.mime4j.stream.EntityState getState(); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { void monitor(org.apache.james.mime4j.stream.Event); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { boolean nextField(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { java.lang.String message(org.apache.james.mime4j.stream.Event); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void builderSetProperties(com.fsck.k9.message.PgpMessageBuilder); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void addCcAddresses(com.fsck.k9.mail.Address[]); }
-keepclassmembers class java.net.URL { void <init>(java.net.URL,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setLogo(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers$Builder removeAll(java.lang.String); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateToolbarLogo(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void addToAddresses(com.fsck.k9.mail.Address[]); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers build(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { java.util.List getAllRecipients(); }
-keepclassmembers class com.android.okhttp.Headers$Builder { com.android.okhttp.Headers$Builder set(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.Headers$Builder { java.util.List access$000(com.android.okhttp.Headers$Builder); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { boolean checkRecipientsOkForSending(); }
-keepclassmembers class com.bumptech.glide.manager.ActivityFragmentLifecycle { void <init>(); }
-keepclassmembers class java.util.GregorianCalendar { long daysFromBaseYear(long); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { boolean isOID(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { int[] toIntArray(java.lang.String); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,int,java.lang.String); }
-keepclassmembers class com.bumptech.glide.manager.ActivityFragmentLifecycle { void addListener(com.bumptech.glide.manager.LifecycleListener); }
-keepclassmembers class java.net.URL { void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.net.URLStreamHandler); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { java.lang.String toString(int[]); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { void setRecursionMode(org.apache.james.mime4j.stream.RecursionMode); }
-keepclassmembers class org.apache.harmony.security.asn1.ObjectIdentifier { int[] toIntArray(java.lang.String,boolean); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity { java.lang.String toString(); }
-keepclassmembers class java.util.GregorianCalendar { int computeYearAndDay(long,long); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { java.util.List getBccAddresses(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { com.fsck.k9.activity.compose.ComposeCryptoStatus getCurrentCryptoStatus(); }
-keepclassmembers class com.bumptech.glide.manager.ActivityFragmentLifecycle { void onStart(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { java.util.List getCcAddresses(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { org.openintents.openpgp.util.OpenPgpApi getOpenPgpApi(); }
-keepclassmembers class com.bumptech.glide.manager.ActivityFragmentLifecycle { void onDestroy(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setDisplayOptions(int); }
-keepclassmembers class com.bumptech.glide.manager.ActivityFragmentLifecycle { void onStop(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$4 { void afterTextChanged(android.text.Editable); }
-keepclassmembers class com.fsck.k9.mailstore.MessageHelper { com.fsck.k9.mail.internet.MimeBodyPart createEmptyPart(); }
-keepclassmembers class java.util.GregorianCalendar { int daysInMonth(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$4 { void <init>(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class com.fsck.k9.mailstore.MessageHelper { boolean isCompletePartAvailable(com.fsck.k9.mail.Part); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void <init>(java.io.InputStream); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.IllegalArgumentException incorrectInputEncoding(java.io.IOException); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { java.util.List getToAddresses(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$4 { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void <init>(byte[]); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void <init>(java.lang.String); }
-keepclassmembers class java.net.URL { void fixURL(boolean); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { boolean hasContactPicker(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { void <init>(java.lang.String,java.util.Map); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$4 { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.text.util.Linkify$3 { void <init>(); }
-keepclassmembers class java.util.GregorianCalendar { int daysInYear(int); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.IllegalArgumentException incorrectInputName(java.io.IOException,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void initFromMailto(com.fsck.k9.helper.MailTo); }
-keepclassmembers class java.net.URL { void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.GregorianCalendar { int daysInMonth(boolean,int); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void initFromDraftMessage(com.fsck.k9.mail.Message); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getCanonicalName(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { boolean equals(java.lang.Object); }
-keepclassmembers class java.net.URL { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.GregorianCalendar { int daysInYear(boolean,int); }
-keepclassmembers class com.fsck.k9.service.PollService { void <clinit>(); }
-keepclassmembers class android.view.View$CheckForLongPress { void rememberWindowAttachCount(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void initFromReplyToMessage(com.fsck.k9.mail.Message,boolean); }
-keepclassmembers class com.fsck.k9.service.PollService { void stopService(android.content.Context); }
-keepclassmembers class com.fsck.k9.service.PollService { void startService(android.content.Context); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getName(); }
-keepclassmembers class java.net.URL { void setupStreamHandler(); }
-keepclassmembers class com.fsck.k9.service.PollService { void <init>(); }
-keepclassmembers class java.net.URL { int hashCode(); }
-keepclassmembers class android.view.View$CheckForLongPress { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class com.fsck.k9.service.PollService { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class com.fsck.k9.service.PollService { void onCreate(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String getName(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { boolean isForceTextMessageFormat(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { byte[] getEncoded(); }
-keepclassmembers class com.fsck.k9.service.PollService { int startService(android.content.Intent,int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onActivityDestroy(); }
-keepclassmembers class java.util.GregorianCalendar { int getOffset(long); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { boolean checkTag(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setCustomView(android.view.View); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onBccFocused(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void <init>(int,org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class java.net.URL { java.io.InputStream openStream(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$3 { void <clinit>(); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(java.net.Proxy); }
-keepclassmembers class java.net.URL { java.net.URLConnection openConnection(); }
-keepclassmembers class java.net.URL { java.net.URI toURI(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void initFromSendOrViewIntent(android.content.Intent); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onCcFocused(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateNavigationIcon(); }
-keepclassmembers class java.net.URL { java.net.URI toURILenient(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onBccTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void setNavigationContentDescription(int); }
-keepclassmembers class java.util.GregorianCalendar { boolean isLeapYear(int); }
-keepclassmembers class javax.security.auth.x500.X500Principal { int hashCode(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String toString(); }
-keepclassmembers class java.net.URL { java.lang.String toString(); }
-keepclassmembers class java.net.URL { java.lang.String toExternalForm(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onClickCryptoSpecialModeIndicator(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onClickCcLabel(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onCcTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { void updateHomeAccessibility(); }
-keepclassmembers class javax.security.auth.x500.X500Principal { java.lang.String substituteNameFromMap(java.lang.String,java.util.Map); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onClickBccLabel(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Implicit { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.GregorianCalendar { int julianError(); }
-keepclassmembers class java.util.GregorianCalendar { int mod(int,int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onClickRecipientExpander(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onClickCryptoStatus(); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { java.lang.CharSequence access$100(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class java.util.GregorianCalendar { int mod7(long); }
-keepclassmembers class com.android.internal.widget.ToolbarWidgetWrapper { android.widget.Toolbar access$000(com.android.internal.widget.ToolbarWidgetWrapper); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onClickToLabel(); }
-keepclassmembers class java.util.DualPivotQuicksort { void sort(int[],int,int); }
-keepclassmembers class java.util.DualPivotQuicksort { void doSort(int[],int,int); }
-keepclassmembers class java.util.DualPivotQuicksort { void sort(int[]); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onCryptoPgpInlineChanged(boolean); }
-keepclassmembers class java.util.GregorianCalendar { void roll(int,int); }
-keepclassmembers class java.io.FileNotFoundException { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onMenuAddFromContacts(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onCryptoPgpSignOnlyDisabled(); }
-keepclassmembers class java.io.FileNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onCryptoModeChanged(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onMenuSetSignOnly(boolean); }
-keepclassmembers class java.net.URL { java.lang.String getHost(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onMenuSetPgpInline(boolean); }
-keepclassmembers class java.net.URL { java.lang.String getAuthority(); }
-keepclassmembers class java.net.URL { int getEffectivePort(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onNonRecipientFieldFocused(); }
-keepclassmembers class java.net.URL { java.lang.String getUserInfo(); }
-keepclassmembers class java.net.URL { java.lang.String getProtocol(); }
-keepclassmembers class java.util.concurrent.CountDownLatch { void <init>(int); }
-keepclassmembers class java.net.URL { int getPort(); }
-keepclassmembers class java.util.concurrent.CountDownLatch { void await(); }
-keepclassmembers class java.util.DualPivotQuicksort { void dualPivotQuicksort(int[],int,int); }
-keepclassmembers class java.net.URL { java.lang.String getFile(); }
-keepclassmembers class java.net.URL { java.lang.String getQuery(); }
-keepclassmembers class java.net.URL { java.lang.String getPath(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onPgpPermissionCheckResult(android.content.Intent); }
-keepclassmembers class java.util.concurrent.CountDownLatch { void countDown(); }
-keepclassmembers class java.net.URL { java.lang.String getRef(); }
-keepclassmembers class org.apache.james.mime4j.codec.DecodeMonitor$1 { boolean warn(java.lang.String,java.lang.String); }
-keepclassmembers class java.net.URL { void <clinit>(); }
-keepclassmembers class java.net.URL { void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.CountDownLatch { boolean await(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class org.apache.james.mime4j.codec.DecodeMonitor$1 { void <init>(); }
-keepclassmembers class android.os.Messenger { boolean equals(java.lang.Object); }
-keepclassmembers class android.os.Messenger { void <init>(android.os.Handler); }
-keepclassmembers class org.apache.james.mime4j.codec.DecodeMonitor$1 { boolean isListening(); }
-keepclassmembers class android.os.Messenger { int hashCode(); }
-keepclassmembers class android.os.Messenger { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onSwitchAccount(com.fsck.k9.Account); }
-keepclassmembers class java.util.GregorianCalendar { void roll(int,boolean); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onToFocused(); }
-keepclassmembers class java.net.URLStreamHandler { java.net.URLConnection openConnection(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.os.Messenger { void <init>(android.os.IBinder); }
-keepclassmembers class java.net.URLStreamHandler { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onSwitchIdentity(com.fsck.k9.Identity); }
-keepclassmembers class android.os.Messenger { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.GregorianCalendar { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.CloseTag { void <clinit>(); }
-keepclassmembers class de.cketti.safecontentresolver.Blacklist { java.util.Set findBlacklistedContentProviderAuthorities(); }
-keepclassmembers class java.lang.NumberFormatException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void showPgpAttachError(com.fsck.k9.activity.compose.ComposeCryptoStatus$AttachErrorState); }
-keepclassmembers class android.database.Observable { void registerObserver(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void onToTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class de.cketti.safecontentresolver.Blacklist { void <init>(android.content.Context); }
-keepclassmembers class org.htmlcleaner.CloseTag { void <init>(java.lang.String,int,boolean,boolean); }
-keepclassmembers class java.net.URLStreamHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class com.fsck.k9.helper.ContactPicture { com.fsck.k9.activity.misc.ContactPictureLoader getContactPictureLoader(android.content.Context); }
-keepclassmembers class de.cketti.safecontentresolver.Blacklist { android.content.pm.ProviderInfo[] getProviderInfo(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void showPgpSendError(com.fsck.k9.activity.compose.ComposeCryptoStatus$SendErrorState); }
-keepclassmembers class android.database.Observable { void unregisterObserver(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Constructor { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.database.Observable { void <init>(); }
-keepclassmembers class java.lang.reflect.Constructor { int getModifiers(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder$1 { void <init>(com.fsck.k9.message.MessageBuilder); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void <init>(android.widget.RemoteViews,int,android.app.PendingIntent); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder$1 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.database.Observable { void unregisterAll(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler { void <init>(); }
-keepclassmembers class android.support.v4.app.INotificationSideChannel$Stub { android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder$1 { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter { void updateCryptoStatus(); }
-keepclassmembers class java.lang.reflect.Constructor { int hashCode(); }
-keepclassmembers class android.view.DragEvent$1 { void <init>(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Class[] getExceptionTypes(); }
-keepclassmembers class de.cketti.safecontentresolver.Blacklist { boolean isBlacklisted(java.lang.String); }
-keepclassmembers class java.lang.reflect.Constructor { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider$1 { void <init>(android.content.Context); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.reflect.TypeVariable[] getTypeParameters(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder$1 { void onPostExecute(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class de.cketti.safecontentresolver.Blacklist { boolean isContentProviderWhitelisted(android.content.pm.ProviderInfo); }
-keepclassmembers class org.apache.http.client.NonRepeatableRequestException { void <init>(java.lang.String); }
-keepclassmembers class org.htmlcleaner.MathMLTagProvider { void layoutElements(org.htmlcleaner.TagInfo,java.util.concurrent.ConcurrentMap); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickPendingIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder$1 { void onPostExecute(java.lang.Void); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void <clinit>(); }
-keepclassmembers class android.util.Singleton { void <init>(); }
-keepclassmembers class com.fsck.k9.service.StorageReceiver { void <init>(); }
-keepclassmembers class org.htmlcleaner.MathMLTagProvider { void <init>(org.htmlcleaner.TagInfo,java.util.concurrent.ConcurrentMap); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider$1 { java.io.File createFile(); }
-keepclassmembers class com.fsck.k9.service.StorageReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void <init>(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void <init>(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { boolean canNotifyStatusChanged(); }
-keepclassmembers class android.util.Singleton { java.lang.Object get(); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void clear(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { boolean canSetResource(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void check(java.lang.String,java.lang.Object,java.lang.String); }
-keepclassmembers class libcore.util.ZoneInfo$CheckedArithmeticException { void <init>(); }
-keepclassmembers class java.io.SyncFailedException { void <init>(java.lang.String); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.Object newInstance(java.lang.Object[],boolean); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void add(android.view.View); }
-keepclassmembers class libcore.util.ZoneInfo$CheckedArithmeticException { void <init>(libcore.util.ZoneInfo$1); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void getSortedViews(android.view.View[],int[]); }
-keepclassmembers class java.lang.reflect.Constructor { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { android.graphics.drawable.Drawable getErrorDrawable(); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String relativePath(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport$NegativeSmtpReplyException { int getReplyCode(); }
-keepclassmembers class java.lang.reflect.Constructor { java.lang.String toString(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { android.graphics.drawable.Drawable getPlaceholderDrawable(); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchField { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport$NegativeSmtpReplyException { boolean isPermanentSmtpError(int); }
-keepclassmembers class org.htmlcleaner.MathMLTagProvider { void presentationMarkup(org.htmlcleaner.TagInfo,java.util.concurrent.ConcurrentMap); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.net.URLStreamHandler { void setURL(java.net.URL,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.util.MapCollections$ValuesCollection { boolean contains(java.lang.Object); }
-keepclassmembers class org.htmlcleaner.MathMLTagProvider { void put(java.lang.String,org.htmlcleaner.TagInfo,java.util.concurrent.ConcurrentMap); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String toExternalForm(java.net.URL); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { android.graphics.drawable.Drawable getFallbackDrawable(); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport$NegativeSmtpReplyException { void <init>(int,java.lang.String); }
-keepclassmembers class java.net.URLStreamHandler { java.lang.String toExternalForm(java.net.URL,boolean); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void init(com.bumptech.glide.provider.LoadProvider,java.lang.Object,com.bumptech.glide.load.Key,android.content.Context,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,float,android.graphics.drawable.Drawable,int,android.graphics.drawable.Drawable,int,android.graphics.drawable.Drawable,int,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.Transformation,java.lang.Class,boolean,com.bumptech.glide.request.animation.GlideAnimationFactory,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { java.util.ArrayDeque findRoots(int[]); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { void <init>(com.android.i18n.phonenumbers.PhoneNumberUtil,java.lang.CharSequence,java.lang.String,com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency,long); }
-keepclassmembers class org.htmlcleaner.MathMLTagProvider { void scriptElements(org.htmlcleaner.TagInfo,java.util.concurrent.ConcurrentMap); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchField { void <init>(java.lang.String,int); }
-keepclassmembers class android.util.MapCollections$ValuesCollection { void <init>(android.util.MapCollections); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchField { com.fsck.k9.search.SearchSpecification$SearchField[] values(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$2 { java.util.Iterator iterator(); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub$Proxy { void waitForRelroCreationCompleted(boolean); }
-keepclassmembers class java.net.URLStreamHandler { boolean equals(java.net.URL,java.net.URL); }
-keepclassmembers class android.widget.RemoteViews { void configureRemoteViewsAsChild(android.widget.RemoteViews); }
-keepclassmembers class android.widget.RemoteViews { void setNotRoot(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat { void <init>(); }
-keepclassmembers class android.widget.RemoteViews { void <init>(java.lang.String,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class java.security.MessageDigestSpi { void <init>(); }
-keepclassmembers class android.widget.RemoteViews { void <init>(java.lang.String,int,int); }
-keepclassmembers class org.htmlcleaner.MathMLTagProvider { void tableElements(org.htmlcleaner.TagInfo,java.util.concurrent.ConcurrentMap); }
-keepclassmembers class android.widget.RemoteViews { boolean hasLandscapeAndPortraitLayouts(); }
-keepclassmembers class java.net.URLStreamHandler { int hashCode(java.net.URL); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.content.pm.ApplicationInfo,int); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { void <init>(android.widget.RelativeLayout$1); }
-keepclassmembers class android.widget.RelativeLayout$DependencyGraph { android.util.SparseArray access$500(android.widget.RelativeLayout$DependencyGraph); }
-keepclassmembers class java.net.URLStreamHandler { boolean sameFile(java.net.URL,java.net.URL); }
-keepclassmembers class android.util.MapCollections$ValuesCollection { java.lang.Object[] toArray(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplKitKat { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MesssageInfoHolderRetrieverListener { void listLocalMessagesAddMessages(com.fsck.k9.Account,java.lang.String,java.util.List); }
-keepclassmembers class org.htmlcleaner.SpecialEntity { java.lang.String getDecimalNCR(); }
-keepclassmembers class org.htmlcleaner.SpecialEntity { void <init>(java.lang.String,int,java.lang.String,boolean); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MesssageInfoHolderRetrieverListener { void <init>(com.fsck.k9.provider.MessageProvider,java.util.concurrent.BlockingQueue); }
-keepclassmembers class org.htmlcleaner.MathMLTagProvider { void tokenElements(org.htmlcleaner.TagInfo,java.util.concurrent.ConcurrentMap); }
-keepclassmembers class java.net.URLStreamHandler { boolean hostsEqual(java.net.URL,java.net.URL); }
-keepclassmembers class org.htmlcleaner.SpecialEntity { java.lang.String getEscaped(boolean); }
-keepclassmembers class org.htmlcleaner.SpecialEntity { java.lang.String getEscapedValue(); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class org.htmlcleaner.SpecialEntity { java.lang.String getEscapedXmlString(); }
-keepclassmembers class org.htmlcleaner.SpecialEntity { java.lang.String getHexNCR(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$MesssageInfoHolderRetrieverListener { void searchStats(com.fsck.k9.AccountStats); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.widget.RemoteViews,android.widget.RemoteViews); }
-keepclassmembers class org.htmlcleaner.SpecialEntity { java.lang.String getHtmlString(); }
-keepclassmembers class org.htmlcleaner.SpecialEntity { int intValue(); }
-keepclassmembers class org.htmlcleaner.SpecialEntity { java.lang.String getKey(); }
-keepclassmembers class org.htmlcleaner.SpecialEntity { boolean isHtmlSpecialEntity(); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoStatusView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoStatusView { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoStatusView { void setCryptoDisplayStatus(com.fsck.k9.view.MessageCryptoDisplayStatus); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoStatusView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.Enum { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(android.view.View); }
-keepclassmembers class com.fsck.k9.view.MessageCryptoStatusView { void onFinishInflate(); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean apply(android.view.View); }
-keepclassmembers class android.view.View$MatchIdPredicate { boolean apply(java.lang.Object); }
-keepclassmembers class java.lang.Enum { java.lang.String name(); }
-keepclassmembers class android.widget.RemoteViews { int getLayoutId(); }
-keepclassmembers class android.view.View$MatchIdPredicate { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.util.Timer$FinalizerHelper { void <init>(java.util.Timer$TimerImpl); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(); }
-keepclassmembers class java.lang.Enum { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Enum { int hashCode(); }
-keepclassmembers class android.util.DebugUtils { void buildShortClassTag(java.lang.Object,java.lang.StringBuilder); }
-keepclassmembers class android.widget.RemoteViews { java.lang.String getPackage(); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Enum); }
-keepclassmembers class java.lang.Enum { int ordinal(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setRoot(android.view.ViewGroup); }
-keepclassmembers class java.lang.Enum { java.lang.Class getDeclaringClass(); }
-keepclassmembers class android.widget.RemoteViews { void recalculateMemoryUsage(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void setIsLayoutRtl(boolean); }
-keepclassmembers class android.text.style.EasyEditSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.lang.Enum { java.lang.Enum valueOf(java.lang.Class,java.lang.String); }
-keepclassmembers class java.lang.Enum { java.lang.String toString(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class android.widget.RemoteViews { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { boolean isFirstReadyResource(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void logV(java.lang.String); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void notifyLoadSuccess(); }
-keepclassmembers class android.widget.RemoteViews { int estimateMemoryUsage(); }
-keepclassmembers class android.widget.RemoteViews { void addAction(android.widget.RemoteViews$Action); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation$1 { void <init>(com.fsck.k9.activity.NotificationDeleteConfirmation); }
-keepclassmembers class java.lang.Enum { int compareTo(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.NotificationDeleteConfirmation$1 { void run(); }
-keepclassmembers class java.lang.Enum { void <clinit>(); }
-keepclassmembers class libcore.net.url.JarHandler { void <init>(); }
-keepclassmembers class libcore.net.url.JarHandler { java.net.URLConnection openConnection(java.net.URL); }
-keepclassmembers class android.widget.RemoteViews { void removeAllViews(int); }
-keepclassmembers class libcore.net.url.JarHandler { void parseURL(java.net.URL,java.lang.String,int,int); }
-keepclassmembers class android.widget.RemoteViews { void setViewVisibility(int,int); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewText(int,java.lang.CharSequence); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewTextSize(int,int,float); }
-keepclassmembers class android.view.animation.LayoutAnimationController$AnimationParameters { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean$Builder { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,int,java.lang.CharSequence,boolean,android.os.Bundle,java.lang.String,boolean,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTphrase { void <init>(int); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTphrase { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewCompoundDrawablesRelative(int,int,int,int,int); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void getRect(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.widget.RemoteViews { void setTextViewCompoundDrawablesRelativeColorFilter(int,int,int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.net.url.JarHandler { java.lang.String toExternalForm(java.net.URL); }
-keepclassmembers class android.widget.RemoteViews { void setImageViewResource(int,int); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class android.support.v4.content.FileProvider$SimplePathStrategy { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$Command { void <init>(); }
-keepclassmembers class android.widget.RemoteViews { void setImageViewBitmap(int,android.graphics.Bitmap); }
-keepclassmembers class org.apache.http.ProtocolException { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.content.FileProvider$SimplePathStrategy { void addRoot(java.lang.String,java.io.File); }
-keepclassmembers class org.apache.http.ProtocolException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$Command { void <init>(com.fsck.k9.controller.MessagingController$1); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$Command { int compareTo(com.fsck.k9.controller.MessagingController$Command); }
-keepclassmembers class java.lang.Package { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.net.URL); }
-keepclassmembers class android.widget.RemoteViews { void setProgressBar(int,int,int,boolean); }
-keepclassmembers class android.widget.RemoteViews { void setOnClickPendingIntent(int,android.app.PendingIntent); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$Command { int compareTo(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void onResourceReady(com.bumptech.glide.load.engine.Resource,java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews { void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff$Mode,int); }
-keepclassmembers class android.widget.RemoteViews { void setProgressTintList(int,android.content.res.ColorStateList); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSink { void <init>(com.android.okhttp.internal.http.HttpConnection); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void <init>(); }
-keepclassmembers class android.widget.RemoteViews { void setProgressBackgroundTintList(int,android.content.res.ColorStateList); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { org.apache.harmony.security.asn1.ASN1Oid getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.widget.RemoteViews { void setProgressIndeterminateTintList(int,android.content.res.ColorStateList); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void releaseResource(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void setErrorPlaceholder(java.lang.Exception); }
-keepclassmembers class android.support.v4.content.FileProvider$SimplePathStrategy { android.net.Uri getUriForFile(java.io.File); }
-keepclassmembers class java.lang.Package { java.lang.String getName(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void begin(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSink { void close(); }
-keepclassmembers class com.android.internal.os.BinderInternal$GcWatcher { void <init>(); }
-keepclassmembers class android.widget.RemoteViews { void setViewPadding(int,int,int,int,int); }
-keepclassmembers class android.widget.RemoteViews { void setBoolean(int,java.lang.String,boolean); }
-keepclassmembers class java.lang.Package { int hashCode(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void cancel(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSink { void <init>(com.android.okhttp.internal.http.HttpConnection,com.android.okhttp.internal.http.HttpConnection$1); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener$1 { void <init>(com.fsck.k9.activity.ActivityListener); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void clear(); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener$1 { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class android.widget.RemoteViews { void setInt(int,java.lang.String,int); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.widget.RemoteViews { void setLong(int,java.lang.String,long); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { boolean isCancelled(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$IdExtractor { void <init>(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { boolean isComplete(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$IdExtractor { java.lang.Long getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { boolean isFailed(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$IdExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { boolean isResourceSet(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { boolean isRunning(); }
-keepclassmembers class java.lang.Package { java.lang.String toString(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { void <init>(java.io.Reader); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void onException(java.lang.Exception); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { com.bumptech.glide.request.GenericRequest obtain(com.bumptech.glide.provider.LoadProvider,java.lang.Object,com.bumptech.glide.load.Key,android.content.Context,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,float,android.graphics.drawable.Drawable,int,android.graphics.drawable.Drawable,int,android.graphics.drawable.Drawable,int,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.Transformation,java.lang.Class,boolean,com.bumptech.glide.request.animation.GlideAnimationFactory,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy); }
-keepclassmembers class java.lang.Enum { java.lang.Enum[] getSharedConstants(java.lang.Class); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer); }
-keepclassmembers class java.lang.Package { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews { void setCharSequence(int,java.lang.String,java.lang.CharSequence); }
-keepclassmembers class java.io.PrintWriter { void <init>(java.io.Writer,boolean); }
-keepclassmembers class android.widget.Spinner$DropdownPopup$2 { void <init>(android.widget.Spinner$DropdownPopup); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean$Builder { void addAction(android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void onResourceReady(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Oid { void <clinit>(); }
-keepclassmembers class android.widget.RemoteViews { void setBitmap(int,java.lang.String,android.graphics.Bitmap); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean$Builder { android.app.Notification build(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { int getMilitaryZoneOffset(char); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void <init>(android.content.Context,com.fsck.k9.mail.internet.MessageIdGenerator,com.fsck.k9.mail.BoundaryGenerator); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean$Builder { android.app.Notification$Builder getBuilder(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { org.apache.james.mime4j.field.datetime.parser.Token jj_consume_token(int); }
-keepclassmembers class android.widget.RemoteViews { void setContentDescription(int,java.lang.CharSequence); }
-keepclassmembers class java.io.PrintWriter { void close(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void addAttachmentsToMessage(com.fsck.k9.mail.internet.MimeMultipart); }
-keepclassmembers class java.io.PrintWriter { void flush(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { void jj_la1_init_0(); }
-keepclassmembers class android.view.FocusFinder$SequentialFocusComparator { void recycle(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void onSizeReady(int,int); }
-keepclassmembers class java.io.PrintWriter { java.io.PrintWriter format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { int jj_ntk(); }
-keepclassmembers class android.graphics.PointF { void <init>(); }
-keepclassmembers class org.apache.http.entity.StringEntity { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { void jj_la1_init_1(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { int parseDigits(org.apache.james.mime4j.field.datetime.parser.Token); }
-keepclassmembers class android.graphics.PointF { void set(float,float); }
-keepclassmembers class java.io.PrintWriter { java.io.PrintWriter format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.util.HugeEnumSet { void <init>(java.lang.Class,java.lang.Enum[]); }
-keepclassmembers class org.apache.http.entity.StringEntity { void <init>(java.lang.String); }
-keepclassmembers class java.io.PrintWriter { void print(int); }
-keepclassmembers class org.apache.http.entity.StringEntity { boolean isRepeatable(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void buildBody(com.fsck.k9.mail.internet.MimeMessage); }
-keepclassmembers class java.io.PrintWriter { void print(java.lang.Object); }
-keepclassmembers class java.util.HugeEnumSet { boolean add(java.lang.Enum); }
-keepclassmembers class java.io.PrintWriter { void print(java.lang.String); }
-keepclassmembers class org.apache.http.entity.StringEntity { long getContentLength(); }
-keepclassmembers class org.apache.http.entity.StringEntity { void writeTo(java.io.OutputStream); }
-keepclassmembers class java.io.PrintWriter { void println(); }
-keepclassmembers class java.io.PrintWriter { void print(boolean); }
-keepclassmembers class android.widget.RemoteViews { void addView(int,android.widget.RemoteViews); }
-keepclassmembers class java.util.HugeEnumSet { boolean addAll(java.util.Collection); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { void <init>(android.database.Cursor[],java.util.Comparator); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void pause(); }
-keepclassmembers class java.io.PrintWriter { void println(int); }
-keepclassmembers class android.widget.RemoteViews { int getSequenceNumber(); }
-keepclassmembers class com.bumptech.glide.request.GenericRequest { void recycle(); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date date(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { org.apache.james.mime4j.dom.datetime.DateTime date_time(); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { void resetCursors(); }
-keepclassmembers class java.io.PrintWriter { void println(java.lang.Object); }
-keepclassmembers class java.io.PrintWriter { void println(boolean); }
-keepclassmembers class android.graphics.PointF { void <clinit>(); }
-keepclassmembers class java.io.PrintWriter { void setError(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { int day(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void buildHeader(com.fsck.k9.mail.internet.MimeMessage); }
-keepclassmembers class android.widget.RemoteViews { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.HugeEnumSet { int size(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { java.lang.String day_of_week(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { void <init>(); }
-keepclassmembers class java.io.PrintWriter { void write(char[]); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class java.io.PrintWriter { void write(char[],int,int); }
-keepclassmembers class java.io.PrintWriter { void doWrite(char[],int,int); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { void close(); }
-keepclassmembers class java.io.ObjectStreamClass$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews { android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int); }
-keepclassmembers class java.io.PrintWriter { void write(java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { int getColumnIndex(java.lang.String); }
-keepclassmembers class java.io.PrintWriter { void write(java.lang.String,int,int); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { org.apache.james.mime4j.field.datetime.parser.ParseException generateParseException(); }
-keepclassmembers class java.io.PrintWriter { java.io.PrintWriter append(java.lang.CharSequence); }
-keepclassmembers class java.util.HugeEnumSet { boolean contains(java.lang.Object); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { int getColumnIndexOrThrow(java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { int getColumnCount(); }
-keepclassmembers class java.util.HugeEnumSet { boolean containsAll(java.util.Collection); }
-keepclassmembers class java.io.PrintWriter { java.lang.Appendable append(java.lang.CharSequence,int,int); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { int getInt(int); }
-keepclassmembers class android.widget.RemoteViews { android.widget.RemoteViews$BitmapCache access$400(android.widget.RemoteViews); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { int getCount(); }
-keepclassmembers class java.io.PrintWriter { java.io.PrintWriter append(java.lang.CharSequence,int,int); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { long getLong(int); }
-keepclassmembers class android.widget.RemoteViews { void access$600(android.widget.RemoteViews,android.widget.RemoteViews); }
-keepclassmembers class java.io.PrintWriter { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { java.lang.String buildIdentityHeader(com.fsck.k9.mail.internet.TextBody,com.fsck.k9.mail.internet.TextBody); }
-keepclassmembers class android.widget.RemoteViews { void access$800(android.widget.RemoteViews,android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { java.lang.String getString(int); }
-keepclassmembers class android.widget.RemoteViews { void <clinit>(); }
-keepclassmembers class java.util.HugeEnumSet { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { int getPosition(); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { boolean isAfterLast(); }
-keepclassmembers class java.util.HugeEnumSet { java.util.Iterator iterator(); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { boolean isBeforeFirst(); }
-keepclassmembers class java.util.HugeEnumSet { boolean remove(java.lang.Object); }
-keepclassmembers class android.widget.RemoteViews { void <init>(android.os.Parcel,android.widget.RemoteViews$BitmapCache,android.widget.RemoteViews$1); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { void <init>(int); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <init>(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { void <init>(byte[],int,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { int getVirtualDescendantId(long); }
-keepclassmembers class android.text.method.MultiTapKeyListener { android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener$Capitalize); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { boolean moveToFirst(); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { boolean isLast(); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { boolean moveToNext(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.mail.internet.TextBody buildText(boolean); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { void append(int); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { void expand(int); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.mail.internet.TextBody buildText(boolean,com.fsck.k9.message.SimpleMessageFormat); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { int hour(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { int minute(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { int month(); }
-keepclassmembers class android.text.method.MultiTapKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { long makeNodeId(int,int); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { boolean moveToPosition(int); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { byte[] buffer(); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { void append(byte[],int,int); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { byte byteAt(int); }
-keepclassmembers class android.text.method.MultiTapKeyListener { int getInputType(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.mail.internet.MimeMessage build(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void buildAsync(com.fsck.k9.message.MessageBuilder$Callback); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { int obs_zone(); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { void clear(); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { boolean moveToPrevious(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { org.apache.james.mime4j.dom.datetime.DateTime parseAll(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob$MainThreadCallback { void <init>(com.bumptech.glide.load.engine.EngineJob$1); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob$MainThreadCallback { void <init>(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.mail.internet.MimeMultipart createMimeMultipart(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob$MainThreadCallback { boolean handleMessage(android.os.Message); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { int length(); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { void remove(int,int); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Time time(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$PoolEntry { void <init>(org.apache.http.impl.conn.SingleClientConnManager); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { void registerContentObserver(android.database.ContentObserver); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void deliverResult(); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { byte[] toByteArray(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void <init>(com.fsck.k9.mail.store.imap.ImapStore,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { int second(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$PoolEntry { void close(); }
-keepclassmembers class org.apache.james.mime4j.util.ByteArrayBuffer { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$PoolEntry { void shutdown(); }
-keepclassmembers class java.lang.Math { double abs(double); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void <init>(com.fsck.k9.mail.store.imap.ImapStore,java.lang.String,com.fsck.k9.mail.store.imap.FolderNameCodec); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { java.lang.String year(); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class java.lang.Math { float abs(float); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser { int zone(); }
-keepclassmembers class java.lang.Math { int abs(int); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { boolean isDraft(); }
-keepclassmembers class java.lang.Math { double ceil(double); }
-keepclassmembers class java.lang.Math { double cos(double); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void detachCallback(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.List access$000(com.fsck.k9.mail.store.imap.ImapFolder,java.lang.String); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void onActivityResult(int,int,android.content.Intent,com.fsck.k9.message.MessageBuilder$Callback); }
-keepclassmembers class java.lang.Math { long abs(long); }
-keepclassmembers class java.lang.Math { double exp(double); }
-keepclassmembers class java.lang.Math { double floor(double); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void <init>(int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.lang.String access$100(java.lang.Object[],char); }
-keepclassmembers class java.lang.Math { double log10(double); }
-keepclassmembers class java.lang.Math { double log(double); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void checkOpen(); }
-keepclassmembers class java.lang.Math { double atan2(double,double); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { boolean checkTag(int); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { void unregisterContentObserver(android.database.ContentObserver); }
-keepclassmembers class java.util.HugeEnumSet { boolean add(java.lang.Object); }
-keepclassmembers class java.util.HugeEnumSet { long[] access$000(java.util.HugeEnumSet); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.lang.String combine(java.lang.Object[],char); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void queueMessageBuildException(com.fsck.k9.mail.MessagingException); }
-keepclassmembers class java.util.HugeEnumSet { java.lang.Enum[] access$100(java.util.HugeEnumSet); }
-keepclassmembers class java.lang.Math { float max(float,float); }
-keepclassmembers class com.fsck.k9.helper.MergeCursor { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void queueMessageBuildPendingIntent(android.app.PendingIntent,int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.lang.Math { int max(int,int); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTdomain { void <init>(int); }
-keepclassmembers class org.apache.james.mime4j.field.ContentIdFieldImpl$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$20 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.Account,com.fsck.k9.mail.Part,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void queueMessageBuildSuccess(com.fsck.k9.mail.internet.MimeMessage); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.lang.String combineFlags(java.lang.Iterable); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTdomain { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { void reattachCallback(com.fsck.k9.message.MessageBuilder$Callback); }
-keepclassmembers class org.apache.james.mime4j.field.ContentIdFieldImpl$1 { org.apache.james.mime4j.dom.field.ContentIdField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$20 { void run(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.lang.Math { float min(float,float); }
-keepclassmembers class org.apache.james.mime4j.field.ContentIdFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.system.StructAddrinfo { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileToStreamDecoder$FileOpener { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileToStreamDecoder$FileOpener { java.io.InputStream open(java.io.File); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType { void <clinit>(); }
-keepclassmembers class java.lang.Math { long max(long,long); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setAttachments(java.util.List); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setBcc(java.util.List); }
-keepclassmembers class java.lang.Math { long min(long,long); }
-keepclassmembers class com.fsck.k9.activity.Accounts$MoveAccountAsyncTask { void <init>(android.app.Activity,com.fsck.k9.Account,boolean); }
-keepclassmembers class com.fsck.k9.activity.Accounts$MoveAccountAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.lang.Math { int min(int,int); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setCc(java.util.List); }
-keepclassmembers class java.lang.Math { long round(double); }
-keepclassmembers class com.fsck.k9.activity.Accounts$MoveAccountAsyncTask { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class java.lang.Math { double pow(double,double); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setCursorPosition(int); }
-keepclassmembers class java.lang.Math { int round(float); }
-keepclassmembers class android.graphics.Bitmap$2 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setDraft(boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.List executeSimpleCommand(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setIdentity(com.fsck.k9.Identity); }
-keepclassmembers class com.fsck.k9.activity.Accounts$MoveAccountAsyncTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setHideTimeZone(boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { boolean exists(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts$MoveAccountAsyncTask { void showProgressDialog(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setInReplyTo(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setIdentityChanged(boolean); }
-keepclassmembers class com.fsck.k9.activity.Accounts$MoveAccountAsyncTask { void onPostExecute(java.lang.Void); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setIsPgpInlineEnabled(boolean); }
-keepclassmembers class android.content.IntentFilter$1 { void <init>(); }
-keepclassmembers class java.lang.Math { double sqrt(double); }
-keepclassmembers class android.security.KeyChain$1 { void <init>(java.util.concurrent.BlockingQueue); }
-keepclassmembers class java.lang.Math { double tan(double); }
-keepclassmembers class java.lang.Math { double random(); }
-keepclassmembers class java.lang.Math { float signum(float); }
-keepclassmembers class java.lang.Math { double toDegrees(double); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setMessageReference(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class java.lang.Math { double sin(double); }
-keepclassmembers class java.lang.Math { double toRadians(double); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setMessageFormat(com.fsck.k9.message.SimpleMessageFormat); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setQuoteStyle(com.fsck.k9.Account$QuoteStyle); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setQuotedHtmlContent(com.fsck.k9.message.InsertableHtmlContent); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewResult { void <init>(com.fsck.k9.message.extractors.PreviewResult$PreviewType,java.lang.String); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void removeTimeouts(android.text.Spannable); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewResult { com.fsck.k9.message.extractors.PreviewResult encrypted(); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewResult { com.fsck.k9.message.extractors.PreviewResult error(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setReferences(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { boolean existsNonDeletedMessageInRange(int,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setQuotedTextMode(com.fsck.k9.message.QuotedTextMode); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setQuotedText(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setRequestReadReceipt(boolean); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setReplyAfterQuote(boolean); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setSignature(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewResult { com.fsck.k9.message.extractors.PreviewResult none(); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewResult { java.lang.String getPreviewText(); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewResult { boolean isPreviewTextAvailable(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setSentDate(java.util.Date); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setSignatureChanged(boolean); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewResult { com.fsck.k9.message.extractors.PreviewResult$PreviewType getPreviewType(); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewResult { com.fsck.k9.message.extractors.PreviewResult text(java.lang.String); }
-keepclassmembers class android.text.method.MultiTapKeyListener { void <clinit>(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setSignatureBeforeQuotedText(boolean); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setText(java.lang.String); }
-keepclassmembers class android.util.Log { int v(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setSubject(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.FolderList$1 { void <init>(com.fsck.k9.activity.FolderList,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock); }
-keepclassmembers class com.fsck.k9.activity.FolderList$1 { void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log { int d(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder { com.fsck.k9.message.MessageBuilder setTo(java.util.List); }
-keepclassmembers class com.fsck.k9.activity.FolderList$1 { void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class org.htmlcleaner.TagTransformation { void <clinit>(); }
-keepclassmembers class android.util.Log { int v(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.lang.String getDateSearchString(java.util.Date); }
-keepclassmembers class android.util.Log { int i(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$1 { void <clinit>(); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(); }
-keepclassmembers class org.htmlcleaner.TagTransformation { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { long extractHighestUid(com.fsck.k9.mail.store.imap.SearchResponse); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.lang.String getPrefixedName(); }
-keepclassmembers class android.util.Log { int i(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.util.Log { boolean isLoggable(java.lang.String,int); }
-keepclassmembers class android.util.Log { int w(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void <init>(); }
-keepclassmembers class org.htmlcleaner.TagTransformation { java.util.Map applyTagTransformations(java.util.Map); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void analyzePixels(); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.text.SpannableStringBuilder { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { java.lang.String[] access$000(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { java.util.Map access$200(); }
-keepclassmembers class android.util.Log { int wtf(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.helper.FileBrowserHelper { void <clinit>(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { boolean containsAny(java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.helper.FileBrowserHelper { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { void access$300(com.fsck.k9.provider.EmailProvider,java.lang.String[],java.lang.String,java.lang.String[],java.lang.StringBuilder); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { java.lang.String[] access$100(); }
-keepclassmembers class com.fsck.k9.helper.FileBrowserHelper { com.fsck.k9.helper.FileBrowserHelper getInstance(); }
-keepclassmembers class android.util.Log { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.htmlcleaner.TagTransformation { java.lang.String evaluateTemplate(java.lang.String,java.util.Map); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { void createThreadedSubQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.StringBuilder); }
-keepclassmembers class com.fsck.k9.helper.FileBrowserHelper { void showPathTextInput(android.app.Activity,java.io.File,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { java.lang.String[] access$400(); }
-keepclassmembers class android.util.Log { int wtf(int,java.lang.String,java.lang.String,java.lang.Throwable,boolean,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { char charAt(int); }
-keepclassmembers class android.util.Log { java.lang.String getStackTraceString(java.lang.Throwable); }
-keepclassmembers class android.util.Log { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { int findClosest(int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { com.fsck.k9.mail.store.imap.ImapStore getStore(); }
-keepclassmembers class org.htmlcleaner.TagTransformation { java.util.Map getAttributeTransformations(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { com.fsck.k9.Account getAccount(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void resizeFor(int); }
-keepclassmembers class android.text.SpannableStringBuilder { int length(); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <init>(); }
-keepclassmembers class org.htmlcleaner.TagTransformation { boolean hasAttributeTransformations(); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { float viscousFluid(float); }
-keepclassmembers class com.fsck.k9.helper.FileBrowserHelper { boolean showFileBrowserActivity(android.app.Activity,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.lang.Object handleFetchResponse(com.fsck.k9.mail.store.imap.ImapMessage,com.fsck.k9.mail.store.imap.ImapList); }
-keepclassmembers class org.htmlcleaner.TagTransformation { boolean isPreserveSourceAttributes(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo41 { void db41FoldersAddClassColumns(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { android.database.Cursor getAccountStats(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo41 { void db41UpdateFolderMetadata(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { void <clinit>(); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.widget.Scroller$ViscousFluidInterpolator { float getInterpolation(float); }
-keepclassmembers class android.text.SpannableStringBuilder { void moveGapTo(int); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void getImagePixels(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo41 { void update41Metadata(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper,int,java.lang.String); }
-keepclassmembers class android.util.Log { int println_native(int,int,java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { void <init>(); }
-keepclassmembers class java.lang.StringBuilder { void <init>(java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { void <init>(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(boolean); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(long); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.String); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(double); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { android.database.Cursor getMessages(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.FileBrowserHelper { boolean showFileBrowserActivity(android.app.Fragment,java.io.File,int,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.Object); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(float); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { com.fsck.k9.mailstore.LockableDatabase getDatabase(com.fsck.k9.Account); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[],int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(char[]); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { android.database.Cursor getThread(java.lang.String,java.lang.String[],java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { int delete(android.net.Uri,java.lang.String,java.lang.String[]); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void writeGraphicCtrlExt(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder insert(int,java.lang.CharSequence); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void writeImageDesc(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder delete(int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void handlePermanentFlags(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder deleteCharAt(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder appendCodePoint(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void writeLSD(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder delete(int,int); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { android.net.Uri insert(android.net.Uri,android.content.ContentValues); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void handleSelectOrExamineOkResponse(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { java.lang.String getType(android.net.Uri); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void parseBodyStructure(com.fsck.k9.mail.store.imap.ImapList,com.fsck.k9.mail.Part,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { com.fsck.k9.mail.MessagingException ioExceptionHandler(com.fsck.k9.mail.store.imap.ImapConnection,java.io.IOException); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void writeShort(int); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void writePixels(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { android.database.Cursor getThreadedMessages(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { boolean onCreate(); }
-keepclassmembers class com.fsck.k9.message.extractors.TextPartFinder { void <init>(); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void writePalette(); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void writeString(java.lang.String); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void writeNetscapeExt(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { boolean addFrame(android.graphics.Bitmap); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char[]); }
-keepclassmembers class com.fsck.k9.message.extractors.TextPartFinder { com.fsck.k9.mail.Part findTextPartInMultipart(com.fsck.k9.mail.Multipart); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,char[],int,int); }
-keepclassmembers class com.fsck.k9.message.extractors.TextPartFinder { com.fsck.k9.mail.Part findTextPartInMultipartAlternative(com.fsck.k9.mail.Multipart); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder insert(int,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.ContentDispositionFieldImpl { void <clinit>(); }
-keepclassmembers class java.security.Provider$Service { void <init>(java.security.Provider,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.Map); }
-keepclassmembers class android.animation.AnimatorSet { void playTogether(android.animation.Animator[]); }
-keepclassmembers class java.security.Provider$Service { java.lang.Class loadClassOrThrow(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void change(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder append(char); }
-keepclassmembers class org.apache.james.mime4j.field.ContentDispositionFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.animation.AnimatorSet { void <init>(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.StringBuilder replace(int,int,java.lang.String); }
-keepclassmembers class android.animation.AnimatorSet { void playSequentially(android.animation.Animator[]); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { boolean finish(); }
-keepclassmembers class java.security.Provider$Service { void addAlias(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.extractors.TextPartFinder { com.fsck.k9.mail.Part findFirstTextPart(com.fsck.k9.mail.Part); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLDSAPrivateKey { void <init>(com.android.org.conscrypt.OpenSSLKey); }
-keepclassmembers class java.security.Provider$Service { void putAttribute(java.lang.String,java.lang.String); }
-keepclassmembers class java.security.Provider$Service { java.lang.String getAlgorithm(); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void setDelay(int); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { void setSize(int,int); }
-keepclassmembers class java.security.Provider$Service { java.security.Provider getProvider(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String toString(); }
-keepclassmembers class com.bumptech.glide.gifencoder.AnimatedGifEncoder { boolean start(java.io.OutputStream); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String,int); }
-keepclassmembers class java.security.Provider$Service { java.lang.String getAttribute(java.lang.String); }
-keepclassmembers class java.security.Provider$Service { java.lang.String getType(); }
-keepclassmembers class java.security.Provider$Service { java.util.List getAliases(); }
-keepclassmembers class java.lang.StringBuilder { int lastIndexOf(java.lang.String,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLDSAPrivateKey { com.android.org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.DSAPrivateKey); }
-keepclassmembers class android.animation.AnimatorSet { int getChangingConfigurations(); }
-keepclassmembers class java.lang.StringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider { int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class java.lang.StringBuilder { int indexOf(java.lang.String); }
-keepclassmembers class android.animation.AnimatorSet { void setTarget(java.lang.Object); }
-keepclassmembers class android.animation.AnimatorSet { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet$Builder play(android.animation.Animator); }
-keepclassmembers class java.lang.StringBuilder { void setCharAt(int,char); }
-keepclassmembers class android.content.res.StringBlock$Height { void <init>(int); }
-keepclassmembers class java.security.Provider$Service { java.lang.Object newInstance(java.lang.Object); }
-keepclassmembers class java.lang.StringBuilder { java.lang.String substring(int); }
-keepclassmembers class java.lang.StringBuilder { int length(); }
-keepclassmembers class android.animation.AnimatorSet { void cancel(); }
-keepclassmembers class java.lang.StringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class java.security.Provider$Service { java.lang.Object newInstanceWithParameter(java.lang.Object,java.lang.Class); }
-keepclassmembers class android.animation.AnimatorSet { void end(); }
-keepclassmembers class java.lang.StringBuilder { void setLength(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.Appendable append(java.lang.CharSequence); }
-keepclassmembers class java.security.Provider$Service { java.lang.Object newInstanceNoParameter(); }
-keepclassmembers class java.io.InputStream { int available(); }
-keepclassmembers class java.lang.StringBuilder { char charAt(int); }
-keepclassmembers class java.lang.StringBuilder { java.lang.Appendable append(java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.Layout$Directions { void <init>(int[]); }
-keepclassmembers class java.io.InputStream { void <init>(); }
-keepclassmembers class java.io.InputStream { void mark(int); }
-keepclassmembers class java.io.InputStream { int read(byte[],int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { int updatedIntervalBound(int,int,int,int,boolean,boolean); }
-keepclassmembers class android.animation.AnimatorSet { boolean isStarted(); }
-keepclassmembers class android.animation.AnimatorSet { long getStartDelay(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.List search(com.fsck.k9.mail.store.imap.ImapSearcher,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class java.lang.IncompatibleClassChangeError { void <init>(); }
-keepclassmembers class java.io.InputStream { void reset(); }
-keepclassmembers class java.io.InputStream { void close(); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.lang.String); }
-keepclassmembers class java.io.InputStream { long skip(long); }
-keepclassmembers class java.io.InputStream { int read(byte[]); }
-keepclassmembers class java.lang.IncompatibleClassChangeError { void <init>(java.lang.String); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet setDuration(long); }
-keepclassmembers class java.util.PropertyResourceBundle { void <init>(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.K9$LockScreenNotificationVisibility { void <clinit>(); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class java.util.PropertyResourceBundle { void <init>(java.io.Reader); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.Map appendMessages(java.util.List); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence); }
-keepclassmembers class java.security.Provider$Service { boolean isInArray(java.lang.Object[],java.lang.Object); }
-keepclassmembers class android.content.res.StringBlock$Height { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(int); }
-keepclassmembers class java.security.Provider$Service { void ensureSupportedKeysInitialized(); }
-keepclassmembers class java.io.InputStreamReader { void close(); }
-keepclassmembers class com.fsck.k9.K9$LockScreenNotificationVisibility { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class com.fsck.k9.K9$LockScreenNotificationVisibility { com.fsck.k9.K9$LockScreenNotificationVisibility valueOf(java.lang.String); }
-keepclassmembers class android.animation.AnimatorSet { void start(); }
-keepclassmembers class java.security.Provider$Service { boolean isInArray(java.lang.Class[],java.lang.Class); }
-keepclassmembers class java.io.InputStreamReader { int read(); }
-keepclassmembers class com.fsck.k9.K9$LockScreenNotificationVisibility { com.fsck.k9.K9$LockScreenNotificationVisibility[] values(); }
-keepclassmembers class java.util.EventObject { void <init>(java.lang.Object); }
-keepclassmembers class java.security.Provider$Service { java.lang.String toString(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { void <init>(int,java.io.InputStream,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class java.security.Provider$Service { java.util.List access$200(java.security.Provider$Service); }
-keepclassmembers class java.security.Provider$Service { java.util.Map access$400(java.security.Provider$Service); }
-keepclassmembers class java.security.Provider$Service { java.lang.String access$302(java.security.Provider$Service,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.io.InputStreamReader { int read(char[],int,int); }
-keepclassmembers class java.io.InputStreamReader { void <init>(java.io.InputStream); }
-keepclassmembers class java.security.Provider$Service { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { void <init>(java.io.InputStream,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { void <init>(int,java.io.InputStream,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean hasNonExclusiveExclusiveSpanAt(java.lang.CharSequence,int); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { void <init>(java.io.InputStream,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendToSpanWatchers(int,int,int); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.AnimatorSet clone(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { int fillBuffer(); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { int convert(int); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb { android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { void <init>(java.lang.Object,java.lang.Object,int,java.util.Hashtable$HashtableEntry); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void close(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { boolean areMoreMessagesAvailable(int,java.util.Date); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getKey(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.Map copyMessages(java.util.List,com.fsck.k9.mail.Folder); }
-keepclassmembers class com.fsck.k9.helper.MergeCursorWithUniqueId { void <init>(android.database.Cursor[],java.util.Comparator); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { void <init>(java.lang.String,java.lang.String,java.lang.String,com.fsck.k9.mail.Flag); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { int peek(int); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.Object getValue(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { int getnext(); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { com.fsck.k9.activity.MessageReference parse(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void <init>(byte[]); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(java.lang.Object,int,int,int); }
-keepclassmembers class java.io.InputStreamReader { boolean ready(); }
-keepclassmembers class android.text.SpannableStringBuilder { void setSpan(boolean,java.lang.Object,int,int,int); }
-keepclassmembers class java.io.InputStreamReader { boolean isOpen(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { int read0(byte[],int,int); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.helper.MergeCursorWithUniqueId { int getColumnCount(); }
-keepclassmembers class com.fsck.k9.helper.MergeCursorWithUniqueId { int getColumnIndex(java.lang.String); }
-keepclassmembers class java.util.Hashtable$HashtableEntry { int hashCode(); }
-keepclassmembers class android.view.ViewTreeObserver { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLNumber { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { boolean equals(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { boolean equals(java.lang.Object); }
-keepclassmembers class android.speech.tts.TextToSpeech$Connection { android.speech.tts.ITextToSpeechCallback$Stub access$1000(android.speech.tts.TextToSpeech$Connection); }
-keepclassmembers class com.fsck.k9.helper.MergeCursorWithUniqueId { long getLong(int); }
-keepclassmembers class com.fsck.k9.helper.MergeCursorWithUniqueId { int getColumnIndexOrThrow(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { boolean create(com.fsck.k9.mail.Folder$FolderType); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { java.lang.String getAccountUuid(); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet$Node,int); }
-keepclassmembers class android.speech.tts.TextToSpeech$Connection { android.speech.tts.ITextToSpeechService access$1100(android.speech.tts.TextToSpeech$Connection); }
-keepclassmembers class android.animation.AnimatorSet { void sortNodes(); }
-keepclassmembers class java.security.Provider$Service { boolean supportsParameter(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { com.fsck.k9.mail.Flag getFlag(); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { java.lang.String getUid(); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.helper.MergeCursorWithUniqueId { int getUniqueIdColumnIndex(); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { java.lang.String getFolderName(); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.mail.internet.CharsetSupport { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { int hashCode(); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.mail.internet.CharsetSupport { java.lang.String fixupCharset(java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { java.lang.String toIdentityString(); }
-keepclassmembers class com.bumptech.glide.load.resource.drawable.DrawableResource { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.helper.MergeCursorWithUniqueId { long getPerCursorId(); }
-keepclassmembers class android.animation.AnimatorSet$DependencyListener { void startIfReady(android.animation.Animator); }
-keepclassmembers class com.bumptech.glide.load.resource.drawable.DrawableResource { android.graphics.drawable.Drawable get(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void delete(java.util.List,java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void removeSpan(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { java.lang.String toString(); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanFlags(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { com.fsck.k9.activity.MessageReference withModifiedFlag(com.fsck.k9.mail.Flag); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanEnd(java.lang.Object); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.fsck.k9.activity.MessageReference { com.fsck.k9.activity.MessageReference withModifiedUid(java.lang.String); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class com.fsck.k9.mail.internet.CharsetSupport { java.lang.String getCharsetFromAddress(java.lang.String); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$ContinueTransitionListener { void <init>(android.app.ActivityTransitionCoordinator); }
-keepclassmembers class com.fsck.k9.mail.internet.CharsetSupport { java.lang.String getExternalCharset(java.lang.String); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener); }
-keepclassmembers class android.text.SpannableStringBuilder { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.bumptech.glide.load.resource.drawable.DrawableResource { java.lang.Object get(); }
-keepclassmembers class android.animation.AnimatorSet { void reverse(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void unread(java.io.PushbackReader,int); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class com.fsck.k9.mail.internet.CharsetSupport { int importCodePointFromIphone(int); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener); }
-keepclassmembers class java.util.jar.Manifest$Chunk { void <init>(int,int); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator clone(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Exception { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.Animator setDuration(long); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$000(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { boolean canReverse(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { java.lang.String getSystemId(); }
-keepclassmembers class android.animation.AnimatorSet { android.animation.ValueAnimator access$102(android.animation.AnimatorSet,android.animation.ValueAnimator); }
-keepclassmembers class android.animation.AnimatorSet { java.util.HashMap access$300(android.animation.AnimatorSet); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$502(android.animation.AnimatorSet,boolean); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$400(android.animation.AnimatorSet); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void delete(boolean); }
-keepclassmembers class android.animation.AnimatorSet { java.util.ArrayList access$600(android.animation.AnimatorSet); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { boolean equals(java.lang.Object); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void resetDocumentLocator(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.EdgeEffect { void <init>(android.content.Context); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void scan(java.io.Reader,org.ccil.cowan.tagsoup.ScanHandler); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { boolean exists(); }
-keepclassmembers class android.view.ViewTreeObserver { void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class android.animation.AnimatorSet { boolean access$702(android.animation.AnimatorSet,boolean); }
-keepclassmembers class com.fsck.k9.PRNGFixes$LinuxPRNGSecureRandomProvider { void <init>(); }
-keepclassmembers class android.widget.EdgeEffect { boolean isFinished(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void expunge(); }
-keepclassmembers class android.widget.EdgeEffect { void onPull(float,float); }
-keepclassmembers class android.widget.EdgeEffect { void setSize(int,int); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnScrollChangedListener(android.view.ViewTreeObserver$OnScrollChangedListener); }
-keepclassmembers class android.view.ViewTreeObserver { void checkIsAlive(); }
-keepclassmembers class android.widget.EdgeEffect { void onRelease(); }
-keepclassmembers class android.view.ViewTreeObserver { void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener); }
-keepclassmembers class android.view.ViewTreeObserver { boolean isAlive(); }
-keepclassmembers class android.widget.ProgressBar { void <init>(android.content.Context); }
-keepclassmembers class android.widget.ProgressBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { void <init>(java.lang.String[]); }
-keepclassmembers class android.widget.EdgeEffect { void onAbsorb(int); }
-keepclassmembers class android.widget.EdgeEffect { boolean draw(android.graphics.Canvas); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class android.widget.ProgressBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.widget.ProgressBar { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { int transfer(int,byte[],int,int,boolean); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { void <init>(); }
-keepclassmembers class android.text.SpannableStringBuilder { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class android.text.SpannableStringBuilder { void getChars(int,int,char[],int); }
-keepclassmembers class android.widget.EdgeEffect { int getMaxHeight(); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { java.util.List formatCookies(java.util.List); }
-keepclassmembers class android.widget.EdgeEffect { void update(); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String substring(int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendAfterTextChanged(android.text.TextWatcher[]); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendBeforeTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { org.apache.http.Header getVersionHeader(); }
-keepclassmembers class android.widget.EdgeEffect { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftSpec { int getVersion(); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { void close(); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanAdded(java.lang.Object,int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendTextChanged(android.text.TextWatcher[],int,int,int); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo { void <clinit>(); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanChanged(java.lang.Object,int,int,int,int); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { int read(byte[],int,int); }
-keepclassmembers class android.text.SpannableStringBuilder { void checkRange(java.lang.String,int,int); }
-keepclassmembers class org.apache.james.mime4j.codec.QuotedPrintableInputStream { int read(); }
-keepclassmembers class java.nio.charset.CharsetDecoder { void <init>(java.nio.charset.Charset,float,float); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.text.SpannableStringBuilder { void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class java.nio.charset.CharsetDecoder { java.nio.CharBuffer decode(java.nio.ByteBuffer); }
-keepclassmembers class android.text.SpannableStringBuilder { void sendSpanRemoved(java.lang.Object,int,int); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.shapes.Shape getDrawableShape(); }
-keepclassmembers class android.view.View$14 { void <init>(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void startCDATA(); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void save(int,org.ccil.cowan.tagsoup.ScanHandler); }
-keepclassmembers class android.app.BackStackRecord$3 { void <init>(android.graphics.Rect); }
-keepclassmembers class android.text.SpannableStringBuilder { java.lang.String region(int,int); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { void <init>(org.apache.http.HeaderIterator,org.apache.http.message.HeaderValueParser); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { void bufferHeaderValue(); }
-keepclassmembers class android.text.SpannableStringBuilder { void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { void <init>(org.apache.http.HeaderIterator); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void mark(); }
-keepclassmembers class okio.ByteString { void <init>(byte[]); }
-keepclassmembers class okio.ByteString { void <clinit>(); }
-keepclassmembers class android.widget.ProgressBar { void initProgressBar(); }
-keepclassmembers class android.widget.ProgressBar { void setIndeterminate(boolean); }
-keepclassmembers class java.nio.charset.CharsetDecoder { java.nio.CharBuffer allocateMore(java.nio.CharBuffer); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { void <init>(android.content.Context); }
-keepclassmembers class android.widget.ProgressBar { void setIndeterminateDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.nio.charset.CharsetDecoder { java.nio.charset.CoderResult decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean); }
-keepclassmembers class okio.ByteString { int codePointIndexToCharIndex(java.lang.String,int); }
-keepclassmembers class java.nio.charset.CharsetDecoder { void checkCoderResult(java.nio.charset.CoderResult); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { void <init>(android.content.Context,android.content.SharedPreferences,java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLScanner { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class com.fsck.k9.helper.Preconditions { java.lang.Object checkNotNull(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.android.org.conscrypt.util.Arrays { void checkOffsetAndCount(int,int,int); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { org.apache.http.HeaderElement nextElement(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { boolean parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { void parseNextElement(); }
-keepclassmembers class android.widget.ProgressBar { void applyIndeterminateTint(); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.text.SpannableStringBuilder { float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.x509.DistributionPoint$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.http.message.BasicHeaderElementIterator { boolean hasNext(); }
-keepclassmembers class com.fsck.k9.mail.internet.CharsetSupport { java.lang.String readToString(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable getProgressDrawable(); }
-keepclassmembers class android.widget.ProgressBar { void setIndeterminateDrawableTiled(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.ProgressBar { void setProgressDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.mail.internet.CharsetSupport { java.lang.String importStringFromIphone(java.lang.String); }
-keepclassmembers class android.widget.ImageView$ScaleType { android.widget.ImageView$ScaleType[] values(); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <clinit>(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { java.util.List getChangeLog(boolean); }
-keepclassmembers class android.widget.ProgressBar { void applyPrimaryProgressTint(); }
-keepclassmembers class android.text.SpannableStringBuilder { int getTextRunCursor(int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class okio.ByteString { okio.ByteString digest(java.lang.String); }
-keepclassmembers class android.text.SpannableStringBuilder { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class android.widget.ProgressBar { void applyProgressTints(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { java.util.Comparator getChangeLogComparator(); }
-keepclassmembers class android.text.SpannableStringBuilder { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.ImageView$ScaleType { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.nio.charset.CharsetDecoder { java.nio.charset.CoderResult flush(java.nio.CharBuffer); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.app.AlertDialog getDialog(boolean); }
-keepclassmembers class android.widget.ProgressBar { void applyProgressBackgroundTint(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { void <clinit>(); }
-keepclassmembers class java.nio.charset.CharsetDecoder { float maxCharsPerByte(); }
-keepclassmembers class java.nio.charset.CharsetDecoder { void implOnUnmappableCharacter(java.nio.charset.CodingErrorAction); }
-keepclassmembers class okio.ByteString { okio.ByteString encodeUtf8(java.lang.String); }
-keepclassmembers class java.nio.charset.CharsetDecoder { java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction); }
-keepclassmembers class java.nio.charset.CharsetDecoder { java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction); }
-keepclassmembers class android.widget.ProgressBar { void applySecondaryProgressTint(); }
-keepclassmembers class com.fsck.k9.mail.internet.CharsetSupport { void setCharset(java.lang.String,com.fsck.k9.mail.Part); }
-keepclassmembers class java.nio.charset.CharsetDecoder { void implOnMalformedInput(java.nio.charset.CodingErrorAction); }
-keepclassmembers class okio.ByteString { okio.ByteString of(byte[]); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.app.AlertDialog getFullLogDialog(); }
-keepclassmembers class android.text.SpannableStringBuilder { int hashCode(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { com.fsck.k9.mail.Body createBody(java.io.InputStream,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { void closeInputStreamWithoutDeletingTemporaryFiles(java.io.InputStream); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { java.lang.String getLog(boolean); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray getLocalizedChangeLog(boolean); }
-keepclassmembers class libcore.reflect.GenericArrayTypeImpl { void <init>(java.lang.reflect.Type); }
-keepclassmembers class libcore.reflect.GenericArrayTypeImpl { java.lang.reflect.Type getGenericComponentType(); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterList { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { java.lang.String decode(java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterList { void <init>(android.widget.RemoteViews,int,java.util.ArrayList,int); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable append(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void access$100(com.fsck.k9.mailstore.LocalStore,java.lang.String,java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void <init>(com.fsck.k9.Account,android.content.Context); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { java.io.InputStream decodeBody(com.fsck.k9.mail.Body); }
-keepclassmembers class java.nio.charset.CharsetDecoder { java.lang.IllegalStateException illegalStateException(); }
-keepclassmembers class libcore.reflect.GenericArrayTypeImpl { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.reflect.GenericArrayTypeImpl { int hashCode(); }
-keepclassmembers class java.nio.charset.CharsetDecoder { java.nio.charset.CharsetDecoder reset(); }
-keepclassmembers class android.widget.RemoteViews$SetRemoteViewsAdapterList { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.lang.String[] access$200(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable insert(int,java.lang.CharSequence); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable delete(int,int); }
-keepclassmembers class libcore.reflect.GenericArrayTypeImpl { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void access$300(com.fsck.k9.mailstore.LocalStore,android.database.sqlite.SQLiteDatabase,android.database.Cursor,java.io.OutputStream); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.app.AlertDialog getLogDialog(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { com.fsck.k9.mail.Part findFirstPartByMimeType(com.fsck.k9.mail.Part,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { void <init>(org.apache.james.mime4j.field.datetime.parser.SimpleCharStream); }
-keepclassmembers class android.app.SearchableInfo$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.Account access$400(com.fsck.k9.mailstore.LocalStore); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray getMasterChangeLog(boolean); }
-keepclassmembers class android.app.SearchableInfo$1 { android.app.SearchableInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void deleteAllMessagePartsDataFromDisk(); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { boolean isFirstRun(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { void ReInitRounds(); }
-keepclassmembers class android.text.SpannableStringBuilder { android.text.Editable replace(int,int,java.lang.CharSequence,int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void deleteAllMessageDataFromDisk(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { java.lang.String foldAndEncode(java.lang.String); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { boolean isFirstRunEver(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray readChangeLog(org.xmlpull.v1.XmlPullParser,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.mail.Part findPartById(com.fsck.k9.mail.Part,long); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { java.lang.String getEncodingforType(java.lang.String); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class android.app.SearchableInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$SavedState { void <clinit>(); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable getTintTarget(int,boolean); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { void jjCheckNAdd(int); }
-keepclassmembers class android.widget.ProgressBar { void setProgressDrawableTiled(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { java.lang.String getHeaderParameter(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { java.lang.String getExtensionByMimeType(java.lang.String); }
-keepclassmembers class android.app.SharedElementCallback$1 { void <init>(); }
-keepclassmembers class android.text.SpannableStringBuilder { void <clinit>(); }
-keepclassmembers class android.widget.ProgressBar { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { boolean willOverlap(); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { long getDelayForView(android.view.View); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.ProgressBar { void onResolveDrawables(int); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { int jjMoveNfa_0(int,int); }
-keepclassmembers class okio.ByteString { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { long getHighestUid(); }
-keepclassmembers class android.widget.ProgressBar { void postInvalidate(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.lang.String getLogId(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$SavedState { java.lang.String toString(); }
-keepclassmembers class android.widget.ProgressBar { android.graphics.drawable.Drawable getCurrentDrawable(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.mailstore.LocalStore getInstance(com.fsck.k9.Account,android.content.Context); }
-keepclassmembers class android.widget.ProgressBar { void doRefreshProgress(int,int,boolean,boolean); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { void <init>(android.os.Parcel,com.fsck.k9.search.ConditionsTreeNode$1); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.lang.String getColumnNameForFlag(com.fsck.k9.mail.Flag); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { java.lang.String getMimeTypeByExtension(java.lang.String); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray readChangeLogFromResource(int,boolean); }
-keepclassmembers class okio.ByteString { int hashCode(); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { void computeNextElement(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class okio.ByteString { java.lang.String hex(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { void <init>(com.fsck.k9.search.SearchSpecification$SearchCondition); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { com.fsck.k9.mail.store.imap.ImapMessage getMessage(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { com.fsck.k9.mail.Message getMessage(java.lang.String); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { void updateVersionInPreferences(); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { int getTransformedColumnIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { void <init>(com.fsck.k9.search.ConditionsTreeNode,com.fsck.k9.search.ConditionsTreeNode$Operator); }
-keepclassmembers class android.widget.ProgressBar { void onProgressRefresh(float,boolean); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { void <init>(java.util.HugeEnumSet); }
-keepclassmembers class org.apache.http.util.VersionInfo { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.io.InputStream getRawAttachmentInputStream(java.lang.String,int,android.database.Cursor); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { com.fsck.k9.search.ConditionsTreeNode add(com.fsck.k9.search.ConditionsTreeNode,com.fsck.k9.search.ConditionsTreeNode$Operator); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { boolean hasNext(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.List getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { int getMessageCount(); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { java.lang.Enum next(); }
-keepclassmembers class com.fsck.k9.mail.filter.CountingOutputStream { void write(int); }
-keepclassmembers class com.fsck.k9.mail.filter.CountingOutputStream { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.List getMessages(int,int,java.util.Date,boolean,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class com.fsck.k9.mail.filter.CountingOutputStream { void write(byte[]); }
-keepclassmembers class com.fsck.k9.mail.filter.CountingOutputStream { long getCount(); }
-keepclassmembers class android.widget.ProgressBar { void setProgress(int); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void <init>(int,java.util.Comparator); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.filter.CountingOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.widget.ProgressBar { void refreshProgress(int,int,boolean); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { java.lang.Object next(); }
-keepclassmembers class android.widget.ProgressBar { void setProgress(int,boolean); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { boolean isDefaultMimeType(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.mailstore.LocalMessage loadLocalMessageByMessageId(long); }
-keepclassmembers class android.view.animation.GridLayoutAnimationController { int getTransformedRowIndex(android.view.animation.GridLayoutAnimationController$AnimationParameters); }
-keepclassmembers class java.util.HugeEnumSet$HugeEnumSetIterator { void <init>(java.util.HugeEnumSet,java.util.HugeEnumSet$1); }
-keepclassmembers class android.widget.ProgressBar { void setSecondaryProgress(int); }
-keepclassmembers class android.widget.ProgressBar { int getProgress(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { boolean isMessage(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { boolean mimeTypeMatches(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { boolean isMultipart(java.lang.String); }
-keepclassmembers class android.widget.ProgressBar { int getMax(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.List getMessagesFromUids(java.util.List); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { int jjMoveNfa_1(int,int); }
-keepclassmembers class org.apache.http.util.VersionInfo { java.lang.String getRelease(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.mailstore.LocalMessage loadLocalMessageByRootPartId(android.database.sqlite.SQLiteDatabase,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.List getMessages(java.util.List,boolean,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { java.lang.String unfold(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { boolean isSameMimeType(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void tryGrow(java.lang.Object[],int); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { java.lang.String unfoldAndDecode(java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { int getMode(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLDHPrivateKey { void <init>(com.android.org.conscrypt.OpenSSLKey); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeUtility { java.lang.String unfoldAndDecode(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.lang.String getName(); }
-keepclassmembers class android.widget.ProgressBar { void setMax(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void markAllMessagePartsDataAsMissing(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.lang.String getNewPushState(java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class android.widget.ProgressBar { void stopAnimation(); }
-keepclassmembers class android.widget.ProgressBar { void setInterpolator(android.content.Context,int); }
-keepclassmembers class android.widget.ProgressBar { void startAnimation(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void siftUpComparable(int,java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.widget.ProgressBar { void setVisibility(int); }
-keepclassmembers class android.os.AsyncTask$AsyncTaskResult { void <init>(android.os.AsyncTask,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void removeInstance(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void removeAccount(com.fsck.k9.Account); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { java.lang.Object dequeue(); }
-keepclassmembers class okio.ByteString { okio.ByteString sha1(); }
-keepclassmembers class android.widget.ProgressBar { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.lang.String getUidFromMessageId(com.fsck.k9.mail.Message); }
-keepclassmembers class android.widget.ProgressBar { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class org.apache.http.util.VersionInfo { org.apache.http.util.VersionInfo loadVersionInfo(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { com.fsck.k9.search.ConditionsTreeNode cloneNode(com.fsck.k9.search.ConditionsTreeNode); }
-keepclassmembers class android.util.Slog { int d(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void siftDownComparable(int,java.lang.Object,java.lang.Object[],int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.lang.String serializeFlags(java.lang.Iterable); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void writeAttachmentDataToOutputStream(java.lang.String,java.io.OutputStream); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class com.android.okhttp.Handshake { void <init>(java.lang.String,java.util.List,java.util.List); }
-keepclassmembers class android.widget.ProgressBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void siftUpUsingComparator(int,java.lang.Object,java.lang.Object[],java.util.Comparator); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { int jjMoveNfa_2(int,int); }
-keepclassmembers class org.apache.http.util.VersionInfo { org.apache.http.util.VersionInfo fromMap(java.lang.String,java.util.Map,java.lang.ClassLoader); }
-keepclassmembers class okio.ByteString { okio.ByteString substring(int,int); }
-keepclassmembers class com.android.okhttp.Handshake { com.android.okhttp.Handshake get(javax.net.ssl.SSLSession); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.util.Slog { int e(java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.widget.ProgressBar { void updateDrawableBounds(int,int); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { java.util.Set getLeafSet(java.util.Set); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void writeCursorPartsToOutputStream(android.database.sqlite.SQLiteDatabase,android.database.Cursor,java.io.OutputStream); }
-keepclassmembers class com.android.okhttp.Handshake { com.android.okhttp.Handshake get(java.lang.String,java.util.List,java.util.List); }
-keepclassmembers class android.widget.AbsSpinner$SavedState { void <clinit>(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void siftDownUsingComparator(int,java.lang.Object,java.lang.Object[],int,java.util.Comparator); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { com.fsck.k9.search.ConditionsTreeNode and(com.fsck.k9.search.ConditionsTreeNode); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { void updateChild(com.fsck.k9.search.ConditionsTreeNode,com.fsck.k9.search.ConditionsTreeNode); }
-keepclassmembers class android.util.Slog { int wtfStack(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void writeRawBodyToStream(android.database.Cursor,android.database.sqlite.SQLiteDatabase,java.io.OutputStream); }
-keepclassmembers class android.widget.ProgressBar { void drawTrack(android.graphics.Canvas); }
-keepclassmembers class android.widget.ProgressBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { void <init>(java.lang.String[],boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void writeSimplePartToOutputStream(java.lang.String,android.database.Cursor,java.io.OutputStream); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void put(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void handlePossibleUidNext(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { boolean offer(java.lang.Object); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { boolean add(java.lang.Object); }
-keepclassmembers class android.preference.PreferenceActivity$HeaderAdapter { void <init>(android.content.Context,java.util.List,int,boolean); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { com.fsck.k9.search.SearchSpecification$SearchCondition getCondition(); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { org.apache.http.impl.cookie.RFC2965Spec getStrict(); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { com.fsck.k9.search.ConditionsTreeNode or(com.fsck.k9.search.ConditionsTreeNode); }
-keepclassmembers class android.widget.ProgressBar { void onMeasure(int,int); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { java.util.Set getLeafSet(); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { org.apache.http.impl.cookie.BrowserCompatSpec getCompat(); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { com.fsck.k9.search.ConditionsTreeNode cloneTree(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void addPendingCommand(com.fsck.k9.mailstore.LocalStore$PendingCommand); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer getInstance(); }
-keepclassmembers class android.view.Choreographer { float getRefreshRate(); }
-keepclassmembers class android.widget.ProgressBar { void updateDrawableState(); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { com.fsck.k9.search.ConditionsTreeNode or(com.fsck.k9.search.SearchSpecification$SearchCondition); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { org.apache.http.impl.cookie.NetscapeDraftSpec getNetscape(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { java.lang.Object take(); }
-keepclassmembers class com.fsck.k9.activity.EditIdentity$1 { void <init>(com.fsck.k9.activity.EditIdentity); }
-keepclassmembers class android.widget.ProgressBar { void drawableStateChanged(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { int jjMoveStringLiteralDfa0_0(); }
-keepclassmembers class okio.ByteString { java.lang.String toString(); }
-keepclassmembers class android.widget.ProgressBar { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.view.Choreographer { long getFrameIntervalNanos(); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.activity.EditIdentity$1 { void onCheckedChanged(android.widget.CompoundButton,boolean); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { java.lang.Object peek(); }
-keepclassmembers class android.widget.ProgressBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { java.lang.Object poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void checkSettings(); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.widget.ProgressBar { void onAttachedToWindow(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { int size(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void clear(); }
-keepclassmembers class java.util.concurrent.Executors$RunnableAdapter { void <init>(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayed(int,java.lang.Runnable,java.lang.Object,long); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { int indexOf(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.view.Choreographer { void postCallback(int,java.lang.Runnable,java.lang.Object); }
-keepclassmembers class java.util.concurrent.Executors$RunnableAdapter { java.lang.Object call(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void handleUntaggedResponse(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { int jjMoveStringLiteralDfa0_2(); }
-keepclassmembers class android.widget.ProgressBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.view.Choreographer { void postCallbackDelayedInternal(int,java.lang.Object,java.lang.Object,long); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void removeAt(int); }
-keepclassmembers class android.widget.ProgressBar { void onDetachedFromWindow(); }
-keepclassmembers class android.widget.ProgressBar { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Value { void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[],com.bumptech.glide.disklrucache.DiskLruCache$1); }
-keepclassmembers class android.widget.ProgressBar { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.util.jar.Attributes { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { int jjMoveStringLiteralDfa0_1(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Value { void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[]); }
-keepclassmembers class okio.ByteString { java.lang.String utf8(); }
-keepclassmembers class java.util.jar.Attributes { void <init>(java.util.jar.Attributes); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { int jjMoveStringLiteralDfa1_0(long); }
-keepclassmembers class android.widget.ProgressBar { void scheduleAccessibilityEventSender(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { boolean remove(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Value { java.io.File getFile(int); }
-keepclassmembers class java.util.jar.Attributes { boolean containsValue(java.lang.Object); }
-keepclassmembers class java.util.jar.Attributes { boolean containsKey(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { java.util.List formatCookies(java.util.List); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { org.apache.http.Header getVersionHeader(); }
-keepclassmembers class java.util.jar.Attributes { java.util.Set entrySet(); }
-keepclassmembers class org.apache.http.impl.cookie.BestMatchSpec { int getVersion(); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.IncomingStreamHandler$1 { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { int jjMoveStringLiteralDfa2_0(long,long); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.view.Choreographer { void removeCallbacksInternal(int,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.IncomingStreamHandler$1 { void receive(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class java.util.jar.Attributes { void <init>(int); }
-keepclassmembers class android.view.Choreographer { void postFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void compact(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { void <init>(org.apache.http.conn.ClientConnectionManager,org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$SavedState$1 { void <init>(); }
-keepclassmembers class java.util.jar.Attributes { boolean isEmpty(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void createFolders(java.util.List,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property); }
-keepclassmembers class java.util.jar.Attributes { int size(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.List handleUntaggedResponses(java.util.List); }
-keepclassmembers class android.view.Choreographer { void postFrameCallbackDelayed(android.view.Choreographer$FrameCallback,long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void delete(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.params.HttpParams getParams(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(java.lang.String,int[]); }
-keepclassmembers class android.view.Choreographer { void removeFrameCallback(android.view.Choreographer$FrameCallback); }
-keepclassmembers class java.util.jar.Attributes { int hashCode(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void doBatchSetSelection(com.fsck.k9.mailstore.LocalStore$BatchSetSelection,int); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.conn.ClientConnectionManager getConnectionManager(); }
-keepclassmembers class java.util.jar.Attributes { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofInt(android.util.Property,int[]); }
-keepclassmembers class java.util.jar.Attributes { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.Choreographer { long getFrameTime(); }
-keepclassmembers class android.view.Choreographer { long getFrameTimeNanos(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.List internalOpen(int); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.protocol.HttpRequestExecutor getRequestExecutor(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { int hashCode(); }
-keepclassmembers class com.fsck.k9.Throttle$MyTimerTask$HandlerRunnable { void <init>(com.fsck.k9.Throttle$MyTimerTask,com.fsck.k9.Throttle$1); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String getValue(java.lang.String); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { boolean canRunInCurrentRunState(boolean); }
-keepclassmembers class java.util.jar.Attributes { java.lang.String getValue(java.util.jar.Attributes$Name); }
-keepclassmembers class com.fsck.k9.Throttle$MyTimerTask$HandlerRunnable { void <init>(com.fsck.k9.Throttle$MyTimerTask); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.auth.AuthSchemeRegistry getAuthSchemes(); }
-keepclassmembers class com.fsck.k9.Throttle$MyTimerTask$HandlerRunnable { void run(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { long now(); }
-keepclassmembers class com.bumptech.glide.load.model.FileLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.io.File,int,int); }
-keepclassmembers class com.bumptech.glide.load.model.FileLoader { void <init>(com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.cookie.CookieSpecRegistry getCookieSpecs(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { void delayedExecute(java.util.concurrent.RunnableScheduledFuture); }
-keepclassmembers class android.view.Choreographer { void scheduleFrameLocked(long); }
-keepclassmembers class android.view.Choreographer { void doFrame(long,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.message.extractors.AttachmentCounter getAttachmentCounter(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.ConnectionReuseStrategy getConnectionReuseStrategy(); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskWriteViolation { void <init>(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.Account getAccount(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource getAttachmentDataSource(java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.conn.ConnectionKeepAliveStrategy getConnectionKeepAliveStrategy(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.HttpRequestRetryHandler getHttpRequestRetryHandler(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { void reExecutePeriodic(java.util.concurrent.RunnableScheduledFuture); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.Map moveMessages(java.util.List,com.fsck.k9.mail.Folder); }
-keepclassmembers class com.bumptech.glide.load.model.FileLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.mailstore.LocalStore$AttachmentInfo getAttachmentInfo(java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.RedirectHandler getRedirectHandler(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { boolean isOpen(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[]); }
-keepclassmembers class android.view.Choreographer { void doCallbacks(int,long); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void open(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { android.content.Context getContext(); }
-keepclassmembers class java.text.DecimalFormat { void <init>(java.lang.String,java.util.Locale); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.AuthenticationHandler getTargetAuthenticationHandler(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.mailstore.LockableDatabase getDatabase(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.io.File getAttachmentFile(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { java.util.List search(java.lang.String,java.util.Set,java.util.Set); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void setFlags(java.util.List,java.util.Set,boolean); }
-keepclassmembers class java.text.DecimalFormat { void initNative(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { int jjStartNfa_0(int,long); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { java.util.concurrent.RunnableScheduledFuture decorateTask(java.lang.Runnable,java.util.concurrent.RunnableScheduledFuture); }
-keepclassmembers class android.view.Choreographer { void doScheduleVsync(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.AuthenticationHandler getProxyAuthenticationHandler(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.io.InputStream getDecodingInputStream(java.io.InputStream,java.lang.String); }
-keepclassmembers class android.view.Choreographer { void doScheduleCallback(int); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { int jjStopAtPos(int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.mail.Folder getFolder(java.lang.String); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { void <init>(int); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.CookieStore getCookieStore(); }
-keepclassmembers class java.util.concurrent.PriorityBlockingQueue { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String); }
-keepclassmembers class android.view.Choreographer { boolean isRunningOnLooperThreadLocked(); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord obtainCallbackLocked(long,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { int getFolderCount(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.util.Map getFoldersAndUids(java.util.List,boolean); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { long triggerTime(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { int jjStopStringLiteralDfa_0(int,long); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder { void setFlags(java.util.Set,boolean); }
-keepclassmembers class android.view.Choreographer { void recycleCallbackLocked(android.view.Choreographer$CallbackRecord); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.CredentialsProvider getCredentialsProvider(); }
-keepclassmembers class android.view.Choreographer { void scheduleVsyncLocked(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { int getMessageCount(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { long triggerTime(long); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.conn.routing.HttpRoutePlanner getRoutePlanner(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class android.view.Choreographer { void <init>(android.os.Looper,android.view.Choreographer$1); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.message.extractors.MessageFulltextCreator getMessageFulltextCreator(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { void MoreLexicalActions(); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$ChooseFolderHandler { void <init>(com.fsck.k9.activity.ChooseFolder); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.mailstore.LocalFolder,java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.message.extractors.MessagePreviewCreator getMessagePreviewCreator(); }
-keepclassmembers class android.view.Choreographer { android.view.Choreographer$CallbackRecord access$500(android.view.Choreographer,long,java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.UserTokenHandler getUserTokenHandler(); }
-keepclassmembers class android.view.Choreographer { java.lang.Object access$400(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.view.Choreographer { void access$600(android.view.Choreographer,android.view.Choreographer$CallbackRecord); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.protocol.BasicHttpProcessor getHttpProcessor(); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$ChooseFolderHandler { void progress(boolean); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$ChooseFolderHandler { void handleMessage(android.os.Message); }
-keepclassmembers class java.text.DecimalFormat { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.field.DelegatingFieldParser { org.apache.james.mime4j.dom.FieldParser getParser(java.lang.String); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { long overflowFree(long); }
-keepclassmembers class org.apache.james.mime4j.field.DelegatingFieldParser { void <init>(org.apache.james.mime4j.dom.FieldParser); }
-keepclassmembers class java.text.DecimalFormat { void checkBufferAndFieldPosition(java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void <init>(java.lang.String,org.apache.harmony.xml.ExpatReader,boolean,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$ChooseFolderHandler { void setSelectedFolder(int); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLengthFieldImpl$1 { org.apache.james.mime4j.dom.field.ContentLengthField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.view.Choreographer { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLengthFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.util.List getPendingCommands(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLengthFieldImpl$1 { void <init>(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void <init>(android.content.Context); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.lang.AutoCloseable); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void <clinit>(); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(long,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(double,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class org.apache.james.mime4j.field.DelegatingFieldParser { void setFieldParser(java.lang.String,org.apache.james.mime4j.dom.FieldParser); }
-keepclassmembers class libcore.io.IoUtils { void close(java.io.FileDescriptor); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.io.FileDescriptor); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.util.List getPersonalNamespaces(boolean); }
-keepclassmembers class org.apache.james.mime4j.field.DelegatingFieldParser { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { void SwitchTo(int); }
-keepclassmembers class libcore.io.IoUtils { void closeQuietly(java.net.Socket); }
-keepclassmembers class libcore.io.IoUtils { void setBlocking(java.io.FileDescriptor,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { boolean isCopyCapable(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { long getSize(); }
-keepclassmembers class java.text.DecimalFormat { java.lang.StringBuffer format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { org.apache.james.mime4j.field.datetime.parser.Token getNextToken(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { com.fsck.k9.preferences.Storage getStorage(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { long initialize(java.lang.String,boolean); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void notifyChange(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.util.List getMessagesInThread(long); }
-keepclassmembers class android.os.ParcelFileDescriptor$AutoCloseInputStream { void close(); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder ofKeyframes(java.lang.String,android.animation.Keyframes); }
-keepclassmembers class android.os.ParcelFileDescriptor$AutoCloseInputStream { void <init>(android.os.ParcelFileDescriptor); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { boolean isMoveCapable(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void removePendingCommand(com.fsck.k9.mailstore.LocalStore$PendingCommand); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void removePendingCommands(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void resetVisibleLimits(int); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void access$1100(com.tokenautocomplete.TokenCompleteTextView,com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan); }
-keepclassmembers class java.text.DecimalFormat { java.text.DecimalFormatSymbols getDecimalFormatSymbols(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class libcore.io.IoUtils { java.lang.String readFileAsString(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView$5 { void <init>(com.fsck.k9.ui.messageview.MessageTopView); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void access$1000(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { java.util.List searchForMessages(com.fsck.k9.mail.MessageRetrievalListener,com.fsck.k9.search.LocalSearch); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void recreate(); }
-keepclassmembers class android.util.MapCollections$KeySet { void <init>(android.util.MapCollections); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean access$1500(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void access$1300(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.HttpHost determineTarget(org.apache.http.client.methods.HttpUriRequest); }
-keepclassmembers class java.text.DecimalFormat { java.lang.String getPositivePrefix(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean access$1400(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { com.tokenautocomplete.TokenCompleteTextView$TokenListener access$1600(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { java.util.ArrayList access$300(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { int access$200(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void access$1700(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setFloatValues(float[]); }
-keepclassmembers class libcore.io.IoUtils { boolean canOpenReadOnly(java.lang.String); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { java.util.concurrent.atomic.AtomicLong access$000(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { boolean access$100(java.util.concurrent.ScheduledThreadPoolExecutor); }
-keepclassmembers class java.text.DecimalFormat { boolean isParseBigDecimal(); }
-keepclassmembers class java.text.DecimalFormat { int hashCode(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { void <init>(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class java.text.DecimalFormat { boolean isParseIntegerOnly(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class java.text.DecimalFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean access$400(com.tokenautocomplete.TokenCompleteTextView,char); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean access$600(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { java.lang.CharSequence access$500(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int updateFrames(android.graphics.drawable.AnimationDrawable,boolean); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { java.util.List access$800(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class org.apache.harmony.xml.ExpatAttributes { void <init>(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void access$700(com.tokenautocomplete.TokenCompleteTextView,java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void api16Invalidate(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class android.util.MapCollections$KeySet { java.util.Iterator iterator(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { com.tokenautocomplete.TokenCompleteTextView$TokenSpanWatcher access$900(com.tokenautocomplete.TokenCompleteTextView); }
-keepclassmembers class java.text.DecimalFormat { java.lang.Number parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class libcore.io.IoUtils { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { int getTotalDuration(); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.client.RequestDirector createClientRequestDirector(org.apache.http.protocol.HttpRequestExecutor,org.apache.http.conn.ClientConnectionManager,org.apache.http.ConnectionReuseStrategy,org.apache.http.conn.ConnectionKeepAliveStrategy,org.apache.http.conn.routing.HttpRoutePlanner,org.apache.http.protocol.HttpProcessor,org.apache.http.client.HttpRequestRetryHandler,org.apache.http.client.RedirectHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.AuthenticationHandler,org.apache.http.client.UserTokenHandler,org.apache.http.params.HttpParams); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$FrameInterpolator { float getInterpolation(float); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void setFlagForThreads(java.util.List,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void setFlag(java.util.List,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { android.text.SpannableStringBuilder buildSpannableForText(java.lang.CharSequence); }
-keepclassmembers class android.util.MapCollections$KeySet { java.lang.Object[] toArray(); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { java.lang.String getDefaultAlgorithm(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean deleteSelectedObject(boolean); }
-keepclassmembers class java.text.DecimalFormat { void setGroupingUsed(boolean); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { javax.net.ssl.KeyManagerFactory getInstance(java.lang.String); }
-keepclassmembers class java.text.DecimalFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { int getCorrectedTokenBeginning(int); }
-keepclassmembers class org.apache.http.impl.client.AbstractHttpClient { org.apache.http.params.HttpParams determineParams(org.apache.http.HttpRequest); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { int getCorrectedTokenEnd(); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { void <init>(javax.net.ssl.KeyManagerFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void clearSelections(); }
-keepclassmembers class java.text.DecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class android.app.ActivityTransitionState$1 { void <init>(android.app.ActivityTransitionState,android.view.ViewGroup,android.app.Activity); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void handleDone(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore { void switchLocalStorage(java.lang.String); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { void init(java.security.KeyStore,char[]); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { javax.net.ssl.KeyManager[] getKeyManagers(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory { com.fsck.k9.mail.store.webdav.WebDavHttpClient create(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void setBlocker(java.lang.Thread,java.lang.Object); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void init(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavHttpClient$WebDavHttpClientFactory { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParserTokenManager { org.apache.james.mime4j.field.datetime.parser.Token jjFillToken(); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void park(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class); }
-keepclassmembers class java.text.DecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void unpark(java.lang.Thread); }
-keepclassmembers class javax.net.ssl.KeyManagerFactory { void <clinit>(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void insertSpan(com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void parkNanos(java.lang.Object,long); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void appendString(long,java.lang.String,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void <init>(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void insertSpan(java.lang.Object); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void insertSpan(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { org.apache.harmony.security.asn1.ASN1Integer getInstance(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.animation.LayoutTransition$6 { void <init>(android.animation.LayoutTransition,android.view.View,float,android.view.ViewGroup); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupGetter(java.lang.Class); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void appendChars(long,char[],int,int); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void appendBytes(long,byte[],int,int); }
-keepclassmembers class android.text.style.SuggestionRangeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void parseDocument(java.io.InputStream); }
-keepclassmembers class java.util.concurrent.locks.LockSupport { void <clinit>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupSetterAndGetter(java.lang.Object); }
-keepclassmembers class android.animation.LayoutTransition$6 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void parseDocument(java.io.Reader); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.math.BigInteger toBigIntegerValue(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamUriLoader$Factory { com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamUriLoader$Factory { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { java.lang.Object fromIntValue(int); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void parseFragment(java.io.Reader); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void removeSpan(com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean isSplitChar(char); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void parseFragment(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { int toIntValue(java.lang.Object); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void startDocument(); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamUriLoader$Factory { void teardown(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void endDocument(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Integer { void <clinit>(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void updateCountSpan(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void staticInitialize(java.lang.String); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { int column(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { int column(long); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void finish(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { int line(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <init>(); }
-keepclassmembers class android.text.Layout$1 { void <clinit>(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { int line(long); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { android.text.method.PasswordTransformationMethod getInstance(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void updateHint(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { java.lang.String access$600(org.apache.harmony.xml.ExpatParser); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { int access$800(org.apache.harmony.xml.ExpatParser); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { java.io.InputStream openUrl(java.lang.String); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { java.lang.String access$700(org.apache.harmony.xml.ExpatParser); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object convertBack(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupValue(java.lang.Object,android.animation.Keyframe); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { void <clinit>(); }
-keepclassmembers class org.apache.harmony.xml.ExpatParser { int access$900(org.apache.harmony.xml.ExpatParser); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void addListeners(); }
-keepclassmembers class java.util.Collections$1 { void <init>(); }
-keepclassmembers class java.util.Collections$1 { boolean hasNext(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect); }
-keepclassmembers class java.math.RoundingMode { java.math.RoundingMode[] values(); }
-keepclassmembers class org.apache.http.impl.client.RedirectLocations { void <init>(); }
-keepclassmembers class java.util.Collections$1 { java.lang.Object next(); }
-keepclassmembers class org.apache.http.impl.client.RedirectLocations { boolean contains(java.net.URI); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void addObject(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupStartValue(java.lang.Object); }
-keepclassmembers class android.os.IRemoteCallback$Stub { android.os.IRemoteCallback asInterface(android.os.IBinder); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void addObject(java.lang.Object,java.lang.CharSequence); }
-keepclassmembers class java.util.Collections$1 { void remove(); }
-keepclassmembers class java.math.RoundingMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine$LoadStatus { void <init>(com.bumptech.glide.request.ResourceCallback,com.bumptech.glide.load.engine.EngineJob); }
-keepclassmembers class org.apache.http.impl.client.RedirectLocations { void add(java.net.URI); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void allowDuplicates(boolean); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void removeVisibleSpans(android.text.Spannable); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setupEndValue(java.lang.Object); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class java.text.DecimalFormat { void setRoundingMode(java.math.RoundingMode); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine$LoadStatus { void cancel(); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { char access$100(); }
-keepclassmembers class java.math.RoundingMode { void <clinit>(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamStringLoader { void <init>(android.content.Context); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean canDeleteSelection(int); }
-keepclassmembers class android.text.method.PasswordTransformationMethod { void <clinit>(); }
-keepclassmembers class java.text.DecimalFormat { void <clinit>(); }
-keepclassmembers class com.android.okio.ByteString { com.android.okio.ByteString encodeUtf8(java.lang.String); }
-keepclassmembers class com.android.okio.ByteString { void <init>(byte[]); }
-keepclassmembers class android.animation.PropertyValuesHolder { void init(); }
-keepclassmembers class com.android.okio.ByteString { com.android.okio.ByteString of(byte[]); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamStringLoader { void <init>(com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessageHelper { void setBody(com.fsck.k9.mail.Part,com.fsck.k9.mail.Body); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class com.fsck.k9.activity.Accounts$3 { void <init>(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { java.lang.CharSequence convertSelectionToString(java.lang.Object); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { java.util.ArrayList convertSerializableArrayToObjectArray(java.util.ArrayList); }
-keepclassmembers class com.android.okio.ByteString { java.lang.String utf8(); }
-keepclassmembers class com.android.okio.ByteString { java.lang.String base64(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setPropertyName(java.lang.String); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void <init>(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode); }
-keepclassmembers class android.animation.PropertyValuesHolder { void setProperty(android.util.Property); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getPropertyName(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class com.fsck.k9.activity.Accounts$3 { void run(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { java.lang.String currentCompletionText(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference$OpenPgpProviderEntry { android.content.Intent access$200(org.openintents.openpgp.util.OpenPgpAppPreference$OpenPgpProviderEntry); }
-keepclassmembers class com.android.okio.ByteString { java.lang.String hex(); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.Object getAnimatedValue(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference$OpenPgpProviderEntry { java.lang.String access$400(org.openintents.openpgp.util.OpenPgpAppPreference$OpenPgpProviderEntry); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String toString(); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetIntMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void <init>(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle); }
-keepclassmembers class android.os.ParcelFileDescriptor$AutoCloseOutputStream { void close(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { java.util.List getObjects(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean enoughToFilter(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { java.util.ArrayList getSerializableObjects(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallIntMethod(java.lang.Object,long,int); }
-keepclassmembers class android.view.FocusFinder { android.view.FocusFinder getInstance(); }
-keepclassmembers class com.fsck.k9.service.PollService$Listener { void <init>(com.fsck.k9.service.PollService); }
-keepclassmembers class android.animation.PropertyValuesHolder { long nGetFloatMethod(java.lang.Class,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { java.lang.String getMethodName(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void <init>(java.util.concurrent.ThreadPoolExecutor,java.lang.Runnable); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <init>(android.view.View,boolean); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toNanos(long); }
-keepclassmembers class com.fsck.k9.service.PollService$Listener { void release(); }
-keepclassmembers class android.view.FocusFinder { void <init>(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void nCallFloatMethod(java.lang.Object,long,float); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessageHelper { void setEncoding(com.fsck.k9.mail.Part,java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isHeldExclusively(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void run(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { java.lang.CharSequence getTextForAccessibility(); }
-keepclassmembers class android.os.ParcelFileDescriptor$AutoCloseOutputStream { void <init>(android.os.ParcelFileDescriptor); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void removeComposingSpans(android.text.Spannable); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(java.lang.String,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryAcquire(int); }
-keepclassmembers class com.android.okio.ByteString { com.android.okio.ByteString toAsciiLowercase(); }
-keepclassmembers class java.util.concurrent.TimeUnit$4 { long toMillis(long); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <init>(android.util.Property,android.animation.PropertyValuesHolder$1); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$300(java.lang.Class,java.lang.String); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$400(java.lang.Object,long,float); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void unlock(); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.animation.PropertyValuesHolder { long access$500(java.lang.Class,java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { void lock(); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryRelease(int); }
-keepclassmembers class java.security.KeyFactory { void <init>(java.security.KeyFactorySpi,java.security.Provider,java.lang.String); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean tryLock(); }
-keepclassmembers class android.animation.PropertyValuesHolder { void access$200(java.lang.Object,long,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { android.view.animation.Interpolator access$100(com.handmark.pulltorefresh.library.PullToRefreshBase); }
-keepclassmembers class com.android.okio.ByteString { byte[] toByteArray(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void addRefreshableView(android.content.Context,android.view.View); }
-keepclassmembers class java.util.concurrent.ThreadPoolExecutor$Worker { boolean isLocked(); }
-keepclassmembers class com.fsck.k9.service.PollService$Listener { void checkMailFinished(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.service.PollService$Listener { void checkMailStarted(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class java.util.SimpleTimeZone { void <init>(int,java.lang.String); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanStart(android.text.Spannable); }
-keepclassmembers class com.android.okio.ByteString { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getComposingSpanEnd(android.text.Spannable); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextUserSpecifiedFocus(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class com.android.okio.ByteString { int hashCode(); }
-keepclassmembers class com.fsck.k9.service.PollService$Listener { void setStartId(int); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void invalidate(); }
-keepclassmembers class com.fsck.k9.service.PollService$Listener { void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class com.android.okio.ByteString { int size(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { android.widget.LinearLayout$LayoutParams getLoadingLayoutLayoutParams(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$1 { void <init>(com.fsck.k9.activity.FolderList$FolderListHandler); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$1 { void run(); }
-keepclassmembers class java.security.KeyFactory { java.security.KeyFactory getInstance(java.lang.String); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocus(android.view.ViewGroup,android.view.View,android.graphics.Rect,int,java.util.ArrayList); }
-keepclassmembers class com.android.okio.ByteString { java.lang.String toString(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { float maxTextWidth(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { int getMaximumPullScroll(); }
-keepclassmembers class java.security.KeyFactory { java.security.PublicKey generatePublic(java.security.spec.KeySpec); }
-keepclassmembers class com.fsck.k9.service.PollService$Listener { void wakeLockAcquire(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void init(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.okio.ByteString { void <clinit>(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class java.util.SimpleTimeZone { java.lang.Object clone(); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$1 { void <init>(org.apache.http.impl.conn.SingleClientConnManager,org.apache.http.conn.routing.HttpRoute,java.lang.Object); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean isTokenRemovable(java.lang.Object); }
-keepclassmembers class java.util.SimpleTimeZone { boolean equals(java.lang.Object); }
-keepclassmembers class android.animation.PropertyValuesHolder { void <clinit>(); }
-keepclassmembers class java.security.KeyFactory { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fsck.k9.service.PollService$Listener { void wakeLockRelease(); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInRelativeDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$1 { org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { int getCursorCapsMode(int); }
-keepclassmembers class android.app.SharedElementCallback { void onMapSharedElements(java.util.List,java.util.Map); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(int,int,int,int,int,int); }
-keepclassmembers class android.app.SharedElementCallback { void <init>(); }
-keepclassmembers class android.app.SharedElementCallback { void onSharedElementStart(java.util.List,java.util.List,java.util.List); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class java.util.SimpleTimeZone { int getDSTSavings(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.app.BackStackRecord$TransitionState { void <init>(android.app.BackStackRecord); }
-keepclassmembers class android.view.FocusFinder { void setFocusTopLeft(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class org.htmlcleaner.DoctypeToken { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.FocusFinder { void setFocusBottomRight(android.view.ViewGroup,android.graphics.Rect); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class org.htmlcleaner.DoctypeToken { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.FocusFinder { android.view.View findNextFocusInAbsoluteDirection(java.util.ArrayList,android.view.ViewGroup,android.view.View,android.graphics.Rect,int); }
-keepclassmembers class android.app.SharedElementCallback { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.ServerSettings { java.util.Map getExtra(); }
-keepclassmembers class com.fsck.k9.mail.ServerSettings { void <init>(com.fsck.k9.mail.ServerSettings$Type,java.lang.String,int,com.fsck.k9.mail.ConnectionSecurity,com.fsck.k9.mail.AuthType,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int); }
-keepclassmembers class com.fsck.k9.mail.ServerSettings { void <init>(com.fsck.k9.mail.ServerSettings$Type,java.lang.String,int,com.fsck.k9.mail.ConnectionSecurity,com.fsck.k9.mail.AuthType,java.lang.String,java.lang.String,java.lang.String,java.util.Map); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { boolean isReadyForPull(); }
-keepclassmembers class com.fsck.k9.mail.ServerSettings { com.fsck.k9.mail.ServerSettings newPassword(java.lang.String); }
-keepclassmembers class org.htmlcleaner.DoctypeToken { java.lang.String clean(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.ServerSettings { void putIfNotNull(java.util.Map,java.lang.String,java.lang.String); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void onSelectionChanged(int,int); }
-keepclassmembers class org.htmlcleaner.DoctypeToken { void validate(); }
-keepclassmembers class android.widget.AbsoluteLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.http.client.methods.HttpGet { void <init>(java.net.URI); }
-keepclassmembers class java.lang.ref.SoftReference { void <init>(java.lang.Object); }
-keepclassmembers class android.widget.AbsoluteLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.AbsoluteLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void pullEvent(); }
-keepclassmembers class org.apache.http.client.methods.HttpGet { java.lang.String getMethod(); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder { void <init>(); }
-keepclassmembers class libcore.reflect.Types { java.lang.reflect.Type[] getTypeArray(libcore.reflect.ListOfTypes,boolean); }
-keepclassmembers class android.widget.PopupWindow { void <init>(android.view.View,int,int,boolean); }
-keepclassmembers class android.widget.AbsoluteLayout { void onMeasure(int,int); }
-keepclassmembers class android.widget.PopupWindow { void setBackgroundDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.PopupWindow { android.graphics.drawable.Drawable getBackground(); }
-keepclassmembers class android.view.FocusFinder { android.view.View getNextFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder { com.fsck.k9.Account$FolderMode access$100(com.fsck.k9.activity.ChooseFolder); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void performBestGuess(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void <init>(byte[]); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder { com.fsck.k9.activity.ChooseFolder$ChooseFolderHandler access$000(com.fsck.k9.activity.ChooseFolder); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { byte[] getEncoded(); }
-keepclassmembers class android.widget.AbsoluteLayout { void <init>(android.content.Context); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void performCollapse(boolean); }
-keepclassmembers class java.util.SimpleTimeZone { int getOffset(long); }
-keepclassmembers class java.util.SimpleTimeZone { int getRawOffset(); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder { void onRefresh(); }
-keepclassmembers class android.view.FocusFinder { android.view.View getPreviousFocusable(android.view.View,java.util.ArrayList,int); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder { void setDisplayMode(com.fsck.k9.Account$FolderMode); }
-keepclassmembers class java.util.SimpleTimeZone { int hashCode(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtensionValue { void dumpValue(java.lang.StringBuilder); }
-keepclassmembers class android.widget.AbsoluteLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder { void configureFolderSearchView(android.view.Menu); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder { void onCreate(android.os.Bundle); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean casHead(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean isFulfilling(int); }
-keepclassmembers class libcore.reflect.Types { void appendTypeName(java.lang.StringBuilder,java.lang.Class); }
-keepclassmembers class android.view.FocusFinder { boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.preference.PreferenceActivity$Header { void <init>(); }
-keepclassmembers class android.widget.PopupWindow { void setAnimationStyle(int); }
-keepclassmembers class android.widget.PopupWindow { void setContentView(android.view.View); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.util.concurrent.SynchronousQueue$TransferStack$SNode snode(java.util.concurrent.SynchronousQueue$TransferStack$SNode,java.lang.Object,java.util.concurrent.SynchronousQueue$TransferStack$SNode,int); }
-keepclassmembers class android.widget.PopupWindow { android.view.View getContentView(); }
-keepclassmembers class android.preference.PreferenceActivity$Header { java.lang.CharSequence getTitle(android.content.res.Resources); }
-keepclassmembers class android.widget.AbsoluteLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AbsoluteLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AbsoluteLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.lang.Object transfer(java.lang.Object,boolean,long); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void smoothScrollTo(int,long); }
-keepclassmembers class libcore.io.BufferIterator { void <init>(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void smoothScrollTo(int,long,long,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener); }
-keepclassmembers class libcore.reflect.Types { java.lang.String toString(java.lang.Class[]); }
-keepclassmembers class android.widget.AbsoluteLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.util.SimpleTimeZone { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class android.preference.PreferenceActivity$Header { java.lang.CharSequence getBreadCrumbTitle(android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.widget.PopupWindow { void setTouchInterceptor(android.view.View$OnTouchListener); }
-keepclassmembers class android.view.FocusFinder { boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class java.util.SimpleTimeZone { boolean isLeapYear(int); }
-keepclassmembers class android.widget.PopupWindow { void setFocusable(boolean); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void <init>(java.net.URL,java.net.Proxy); }
-keepclassmembers class android.preference.PreferenceActivity$Header { java.lang.CharSequence getBreadCrumbShortTitle(android.content.res.Resources); }
-keepclassmembers class java.util.SimpleTimeZone { int mod7(int); }
-keepclassmembers class android.widget.PopupWindow { void setInputMethodMode(int); }
-keepclassmembers class android.preference.PreferenceActivity$Header { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.SimpleTimeZone { void checkRange(int,int,int); }
-keepclassmembers class android.widget.PopupWindow { void setSoftInputMode(int); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void cd(); }
-keepclassmembers class android.app.Notification { void <init>(); }
-keepclassmembers class android.widget.PopupWindow { int getInputMethodMode(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void <init>(java.net.URL); }
-keepclassmembers class android.widget.PopupWindow { void setTouchable(boolean); }
-keepclassmembers class android.widget.PopupWindow { void setOutsideTouchable(boolean); }
-keepclassmembers class android.widget.PopupWindow { void setClippingEnabled(boolean); }
-keepclassmembers class android.widget.PopupWindow { void setClipToScreenEnabled(boolean); }
-keepclassmembers class android.view.FocusFinder { int getWeightedDistanceFor(int,int); }
-keepclassmembers class libcore.reflect.Types { void <clinit>(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void addViewInternal(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.SimpleTimeZone { void checkDay(int,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void addViewInternal(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.FocusFinder { boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { com.handmark.pulltorefresh.library.internal.LoadingLayout createLoadingLayout(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,android.content.res.TypedArray); }
-keepclassmembers class android.preference.PreferenceActivity$Header { void readFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.PopupWindow { boolean isSplitTouchEnabled(); }
-keepclassmembers class android.widget.PopupWindow { void setAllowScrollingAnchorParent(boolean); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void connect(); }
-keepclassmembers class com.fsck.k9.Clock { void <init>(); }
-keepclassmembers class com.google.android.collect.Lists { java.util.ArrayList newArrayList(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean); }
-keepclassmembers class com.fsck.k9.Clock { long getTime(); }
-keepclassmembers class android.widget.PopupWindow { void setSplitTouchEnabled(boolean); }
-keepclassmembers class android.view.inputmethod.BaseInputConnection { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.DoctypeToken { java.lang.String getContent(); }
-keepclassmembers class android.widget.PopupWindow { void setAttachedInDecor(boolean); }
-keepclassmembers class android.preference.PreferenceActivity$Header { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.PopupWindow { void setWindowLayoutType(int); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void connectInternal(); }
-keepclassmembers class com.fsck.k9.Clock { void <clinit>(); }
-keepclassmembers class android.preference.PreferenceActivity$Header { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow { int getHeight(); }
-keepclassmembers class android.view.FocusFinder { boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.widget.PopupWindow { void setHeight(int); }
-keepclassmembers class android.widget.PopupWindow { void setWindowLayoutMode(int,int); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[]); }
-keepclassmembers class libcore.net.url.FtpURLConnection { java.lang.String getContentType(); }
-keepclassmembers class android.widget.PopupWindow { int getWidth(); }
-keepclassmembers class android.graphics.NinePatch { void <init>(android.graphics.Bitmap,byte[],java.lang.String); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$NestingState { void <init>(org.htmlcleaner.HtmlCleaner); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { java.util.concurrent.SynchronousQueue$TransferStack$SNode awaitFulfill(java.util.concurrent.SynchronousQueue$TransferStack$SNode,boolean,long); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void getFile(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getCurrentMode(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { com.handmark.pulltorefresh.library.internal.LoadingLayout getFooterLayout(); }
-keepclassmembers class android.widget.PopupWindow { void setWidth(int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$NestingState { org.htmlcleaner.HtmlCleaner$ChildBreaks getChildBreaks(); }
-keepclassmembers class android.view.FocusFinder { boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void disableLoadingLayoutVisibilityChanges(); }
-keepclassmembers class android.widget.PopupWindow { boolean isShowing(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { com.handmark.pulltorefresh.library.internal.LoadingLayout getHeaderLayout(); }
-keepclassmembers class android.app.Notification { void cloneInto(android.app.Notification,boolean); }
-keepclassmembers class libcore.net.url.FtpURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.os.IBinder,int,int,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$NestingState { org.htmlcleaner.HtmlCleaner$OpenTags getOpenTags(); }
-keepclassmembers class android.widget.PopupWindow { void showAtLocation(android.view.View,int,int,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { int getFooterSize(); }
-keepclassmembers class android.media.MediaMetadataRetriever { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSource { void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest,com.android.okhttp.internal.http.HttpEngine); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { int getHeaderSize(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { com.handmark.pulltorefresh.library.ILoadingLayout getLoadingLayoutProxy(boolean,boolean); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class org.htmlcleaner.DoctypeToken { java.lang.String getPublicId(); }
-keepclassmembers class android.graphics.NinePatch { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void clean(java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { boolean shouldSpin(java.util.concurrent.SynchronousQueue$TransferStack$SNode); }
-keepclassmembers class org.htmlcleaner.DoctypeToken { java.lang.String getSystemId(); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { com.handmark.pulltorefresh.library.PullToRefreshBase$Mode getMode(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { int getPullToRefreshScrollDuration(); }
-keepclassmembers class org.htmlcleaner.DoctypeToken { void serialize(org.htmlcleaner.Serializer,java.io.Writer); }
-keepclassmembers class libcore.net.url.FtpURLConnection { int getReply(); }
-keepclassmembers class android.widget.PopupWindow { void showAsDropDown(android.view.View,int,int,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { android.widget.FrameLayout getRefreshableViewWrapper(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { android.view.View getRefreshableView(); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Dynamic32Structure { void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { com.handmark.pulltorefresh.library.PullToRefreshBase$State getState(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { boolean getShowViewWhileRefreshing(); }
-keepclassmembers class org.htmlcleaner.DoctypeToken { java.lang.String toString(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void performCompletion(); }
-keepclassmembers class android.graphics.NinePatch { void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class java.util.concurrent.SynchronousQueue$TransferStack { void <clinit>(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void login(); }
-keepclassmembers class android.widget.PopupWindow { void updateAboveAnchor(boolean); }
-keepclassmembers class android.graphics.NinePatch { void drawSoftware(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.text.format.DateFormat { boolean is24HourFormat(android.content.Context); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { boolean isPullToRefreshOverScrollEnabled(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void handleStyledAttributes(android.content.res.TypedArray); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { boolean isPullToRefreshEnabled(); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.view.FocusFinder { int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.widget.PopupWindow { boolean isAboveAnchor(); }
-keepclassmembers class android.content.ContentProvider { void <init>(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { boolean isRefreshing(); }
-keepclassmembers class android.widget.PopupWindow { void preparePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.content.ContentProvider { void <init>(android.content.Context,java.lang.String,java.lang.String,android.content.pm.PathPermission[]); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSource { void readChunkSize(); }
-keepclassmembers class android.view.FocusFinder { int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect); }
-keepclassmembers class android.graphics.NinePatch { int getWidth(); }
-keepclassmembers class android.text.format.DateFormat { boolean is24HourFormat(android.content.Context,int); }
-keepclassmembers class android.media.MediaMetadataRetriever { void setDataSource(java.io.FileDescriptor); }
-keepclassmembers class android.graphics.NinePatch { boolean hasAlpha(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.NinePatch { int getHeight(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void port(); }
-keepclassmembers class android.graphics.NinePatch { int getDensity(); }
-keepclassmembers class android.graphics.NinePatch { boolean isNinePatchChunk(byte[]); }
-keepclassmembers class android.media.MediaMetadataRetriever { void setDataSource(java.io.FileDescriptor,long,long); }
-keepclassmembers class android.graphics.NinePatch { long validateNinePatchChunk(long,byte[]); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void <init>(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void removeListeners(); }
-keepclassmembers class android.app.Notification { void lightenPayload(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void performFiltering(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.graphics.NinePatch { void nativeDraw(long,android.graphics.Rect,long,long,long,int,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$ChunkedSource { void close(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { java.lang.String readLine(); }
-keepclassmembers class android.widget.PopupWindow { void invokePopup(android.view.WindowManager$LayoutParams); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { java.util.List getMetadataList(); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { void <init>(java.util.Properties); }
-keepclassmembers class android.app.Notification { java.lang.CharSequence safeCharSequence(java.lang.CharSequence); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void removeObject(java.lang.Object); }
-keepclassmembers class android.os.IRemoteCallback$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.lang.System$PropertiesWithNonOverrideableDefaults { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.PopupWindow { void setLayoutDirectionFromAnchor(); }
-keepclassmembers class android.widget.PopupWindow { android.view.WindowManager$LayoutParams createPopupLayout(android.os.IBinder); }
-keepclassmembers class android.content.ContentProvider { android.content.ContentProvider coerceToLocalContentProvider(android.content.IContentProvider); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavHandler { void <init>(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void replaceText(java.lang.CharSequence); }
-keepclassmembers class libcore.net.url.FtpURLConnection { boolean readMultiLine(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavHandler { void endDocument(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadataCollection { void readExternal(java.io.ObjectInput); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void sendFile(); }
-keepclassmembers class java.lang.Byte { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavHandler { com.fsck.k9.mail.store.webdav.DataSet getDataSet(); }
-keepclassmembers class java.lang.Byte { void <init>(byte); }
-keepclassmembers class android.text.format.DateFormat { java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String); }
-keepclassmembers class java.lang.Byte { byte byteValue(); }
-keepclassmembers class android.app.Notification { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.lang.Byte { int compare(byte,byte); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavHandler { void startDocument(); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void setDoInput(boolean); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Byte); }
-keepclassmembers class android.widget.PopupWindow { int computeFlags(int); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getPageHeight(android.widget.TextView); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <init>(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean isSelecting(android.text.Spannable); }
-keepclassmembers class android.media.MediaMetadataRetriever { android.graphics.Bitmap getFrameAtTime(long,int); }
-keepclassmembers class java.lang.Byte { double doubleValue(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void setDeletionStyle(com.tokenautocomplete.TokenCompleteTextView$TokenDeleteStyle); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void setType(); }
-keepclassmembers class java.lang.Byte { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { void <init>(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void setDoOutput(boolean); }
-keepclassmembers class java.util.SimpleTimeZone { boolean useDaylightTime(); }
-keepclassmembers class java.lang.Byte { int intValue(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { boolean updateForMe(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class android.view.FocusFinder { void <init>(android.view.FocusFinder$1); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { int getCurrentLineTop(android.text.Spannable,android.text.Layout); }
-keepclassmembers class libcore.net.url.FtpURLConnection { void write(java.lang.String); }
-keepclassmembers class android.media.MediaMetadataRetriever { android.graphics.Bitmap getFrameAtTime(long); }
-keepclassmembers class android.view.FocusFinder { void <clinit>(); }
-keepclassmembers class java.lang.Byte { long longValue(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent); }
-keepclassmembers class android.widget.PopupWindow { int computeAnimationResource(); }
-keepclassmembers class java.lang.Byte { byte parseByte(java.lang.String); }
-keepclassmembers class android.media.MediaMetadataRetriever { android.graphics.Bitmap getFrameAtTime(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.lang.Byte { int hashCode(); }
-keepclassmembers class android.util.FloatMath { float ceil(float); }
-keepclassmembers class android.util.FloatMath { float sqrt(float); }
-keepclassmembers class java.lang.Byte { byte parseByte(java.lang.String,int); }
-keepclassmembers class android.media.MediaMetadataRetriever { android.graphics.Bitmap _getFrameAtTime(long,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { void enableProgressIndicator(boolean); }
-keepclassmembers class android.widget.PopupWindow { boolean findDropDownPosition(android.view.View,android.view.WindowManager$LayoutParams,int,int,int); }
-keepclassmembers class android.util.FloatMath { float floor(float); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.method.BaseKeyListener { void <init>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int); }
-keepclassmembers class android.media.MediaMetadataRetriever { void native_setup(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.lang.Byte { java.lang.String toHexString(byte,boolean); }
-keepclassmembers class android.media.MediaMetadataRetriever { void native_init(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void onPtrRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class android.media.MediaMetadataRetriever { void <clinit>(); }
-keepclassmembers class android.animation.AnimatorSet$Builder { void <init>(android.animation.AnimatorSet,android.animation.Animator); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.app.Notification { void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.text.SpannedString { void <init>(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.Byte { java.lang.Byte valueOf(byte); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void onPtrSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean backspaceOrForwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent,boolean); }
-keepclassmembers class java.lang.Byte { java.lang.String toString(); }
-keepclassmembers class android.media.MediaMetadataRetriever { void release(); }
-keepclassmembers class java.lang.Byte { int compareTo(java.lang.Object); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.SpannedString { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { void informUserOfStatus(); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder with(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { void remoteSearchFailed(java.lang.String,java.lang.String); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void onRefreshComplete(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void setTokenListener(com.tokenautocomplete.TokenCompleteTextView$TokenListener); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView { void setTokenizer(android.widget.MultiAutoCompleteTextView$Tokenizer); }
-keepclassmembers class java.lang.Byte { void <clinit>(); }
-keepclassmembers class android.text.SpannedString { int hashCode(); }
-keepclassmembers class android.text.SpannedString { boolean equals(java.lang.Object); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void onPullToRefresh(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void onRefreshing(boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { void remoteSearchFinished(java.lang.String,int,int,java.util.List); }
-keepclassmembers class android.text.SpannedString { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamResourceLoader { void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class android.app.Notification { java.lang.String toString(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { void <init>(); }
-keepclassmembers class android.animation.AnimatorSet$Builder { android.animation.AnimatorSet$Builder before(android.animation.Animator); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamResourceLoader { void <init>(android.content.Context); }
-keepclassmembers class android.text.SpannedString { int getSpanFlags(java.lang.Object); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void onReleaseToRefresh(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock { void <init>(java.util.concurrent.locks.ReentrantReadWriteLock); }
-keepclassmembers class android.text.SpannedString { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getCountryCode(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCode(int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void onReset(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.SpannedString { int getSpanEnd(java.lang.Object); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteSelection(android.view.View,android.text.Editable); }
-keepclassmembers class android.text.SpannedString { int getSpanStart(java.lang.Object); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { void remoteSearchServerQueryComplete(java.lang.String,int,int); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void <init>(); }
-keepclassmembers class android.content.ContentProvider { android.content.Context getContext(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock { void lock(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean deleteLine(android.view.View,android.text.Editable); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void start(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void doAnimationFrame(long); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock { void unlock(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { long getNationalNumber(); }
-keepclassmembers class android.content.ContentProvider { java.lang.String getCallingPackage(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean leftWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock { boolean tryLock(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean rightWord(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.BaseKeyListener { int makeTextContentType(android.text.method.TextKeyListener$Capitalize,boolean); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { boolean isItalianLeadingZero(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNationalNumber(long); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setExtension(java.lang.String); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setItalianLeadingZero(boolean); }
-keepclassmembers class android.content.ContentProvider { java.lang.String getReadPermission(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { void remoteSearchStarted(java.lang.String); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { void <init>(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { int getNumberOfLeadingZeros(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean isTouchSelecting(boolean,android.text.Spannable); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.os.AsyncTask$1 { void <init>(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.os.AsyncTask$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class android.content.ContentProvider { void setAppOps(int,int); }
-keepclassmembers class android.content.ContentProvider { android.content.pm.PathPermission[] getPathPermissions(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.content.ContentProvider { android.app.AppOpsManager getAppOpsManager(); }
-keepclassmembers class android.text.method.BaseKeyListener { boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { int getSessionTimeout(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.content.ContentProvider { java.lang.String getWritePermission(); }
-keepclassmembers class java.util.SimpleTimeZone { void <clinit>(); }
-keepclassmembers class android.app.Notification { java.lang.String visibilityToString(int); }
-keepclassmembers class android.content.ContentProvider { void onLowMemory(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setNumberOfLeadingZeros(int); }
-keepclassmembers class android.content.ContentProvider { void onTrimMemory(int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListActivityListener { void synchronizeMailboxStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void run(); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void scheduleAnimation(); }
-keepclassmembers class android.text.method.BaseKeyListener { void <clinit>(); }
-keepclassmembers class android.content.ContentProvider { android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class android.content.ContentProvider { android.database.Cursor rejectQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setCountryCodeSource(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource); }
-keepclassmembers class android.content.ContentProvider { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.animation.ValueAnimator$AnimationHandler { void <init>(android.animation.ValueAnimator$1); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { boolean canSelectArbitrarily(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void initialize(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { void <init>(java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class android.content.ContentProvider { android.net.Uri canonicalize(android.net.Uri); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setRawInput(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber setPreferredDomesticCarrierCode(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearCountryCodeSource(); }
-keepclassmembers class android.content.ContentProvider { android.net.Uri uncanonicalize(android.net.Uri); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { byte[] toBytes(javax.net.ssl.SSLSession); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearRawInput(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { java.lang.Object getKey(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber { com.android.i18n.phonenumbers.Phonenumber$PhoneNumber clearPreferredDomesticCarrierCode(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { android.text.method.MovementMethod getInstance(); }
-keepclassmembers class android.app.Notification { java.lang.String access$402(android.app.Notification,java.lang.String); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { java.lang.Object getValue(); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void onTakeFocus(android.widget.TextView,android.text.Spannable,int); }
-keepclassmembers class android.content.ContentProvider { int bulkInsert(android.net.Uri,android.content.ContentValues[]); }
-keepclassmembers class android.widget.PopupWindow { int getMaxAvailableHeight(android.view.View,int,boolean); }
-keepclassmembers class android.text.method.ArrowKeyMovementMethod { void <clinit>(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void refreshLoadingViewsSize(); }
-keepclassmembers class android.content.ContentProvider { android.net.Uri rejectInsert(android.net.Uri,android.content.ContentValues); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ValueIterator { void <init>(java.util.concurrent.ConcurrentHashMap$Node[],int,int,int,java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.app.Notification { java.lang.String access$502(android.app.Notification,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapTransformation { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapTransformation { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { javax.net.ssl.SSLSession toSession(byte[],java.lang.String,int); }
-keepclassmembers class com.fsck.k9.view.K9PullToRefreshListView { android.widget.ListView createListView(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.view.K9PullToRefreshListView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapTransformation { com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { int hashCode(); }
-keepclassmembers class android.content.ContentProvider { android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader$1 { void <init>(com.android.okhttp.internal.spdy.NameValueBlockReader,com.android.okio.BufferedSource); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$MapEntry { boolean equals(java.lang.Object); }
-keepclassmembers class android.app.Notification { void <clinit>(); }
-keepclassmembers class android.content.ContentProvider { android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String); }
-keepclassmembers class android.content.ContentProvider { android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class android.widget.PopupWindow { void dismiss(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$ValueIterator { java.lang.Object next(); }
-keepclassmembers class android.widget.PopupWindow { void setOnDismissListener(android.widget.PopupWindow$OnDismissListener); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask { void <init>(org.openintents.openpgp.util.OpenPgpApi,android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment$LoadingState { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.TBSCertificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.service.SleepService { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader$1 { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask { void cancelOperation(); }
-keepclassmembers class android.content.ContentProvider { android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class com.fsck.k9.service.SleepService { void <init>(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask { void <init>(org.openintents.openpgp.util.OpenPgpApi,android.content.Intent,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpSinkResultCallback,org.openintents.openpgp.util.OpenPgpApi$1); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.NameValueBlockReader$1 { void close(); }
-keepclassmembers class com.fsck.k9.service.SleepService { void endSleep(java.lang.Integer); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask { org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult doInBackground(java.lang.Void[]); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment$LoadingState { void <init>(java.lang.String,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void refreshRefreshableViewSize(int,int); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { void putSession(javax.net.ssl.SSLSession); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int,boolean); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorFileLoader$Factory { void <init>(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask { void onPostExecute(org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataResult); }
-keepclassmembers class org.apache.james.mime4j.util.LangUtils { boolean equalsIgnoreCase(java.lang.String,java.lang.String); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpSourceSinkAsyncTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class com.android.org.conscrypt.AbstractSessionContext { void log(java.lang.Throwable); }
-keepclassmembers class org.apache.james.mime4j.util.LangUtils { boolean equals(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void setHeaderScroll(int); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorFileLoader$Factory { com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { void <init>(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]); }
-keepclassmembers class org.apache.james.mime4j.util.LangUtils { int hashCode(int,int); }
-keepclassmembers class android.content.ContentProvider { android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.service.SleepService { void reacquireWakeLock(com.fsck.k9.service.SleepService$SleepDatum); }
-keepclassmembers class okio.Util { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow { void update(int,int,int,int); }
-keepclassmembers class java.util.WeakHashMap$2$1 { void <init>(java.util.WeakHashMap$2); }
-keepclassmembers class java.util.WeakHashMap$2$1 { java.lang.Object get(java.util.Map$Entry); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { java.lang.String getName(); }
-keepclassmembers class org.apache.james.mime4j.util.LangUtils { int hashCode(int,java.lang.Object); }
-keepclassmembers class com.fsck.k9.service.SleepService { void sleep(android.content.Context,long,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock,long); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { java.lang.String getValue(); }
-keepclassmembers class android.hardware.input.IInputManager$Stub { android.hardware.input.IInputManager asInterface(android.os.IBinder); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,int,int,int,int); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorFileLoader$Factory { void teardown(); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { org.apache.http.NameValuePair[] getParameters(); }
-keepclassmembers class android.text.format.DateFormat { void <clinit>(); }
-keepclassmembers class android.widget.PopupWindow { void update(android.view.View,boolean,int,int,boolean,int,int,int); }
-keepclassmembers class android.content.ContentProvider { java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String); }
-keepclassmembers class android.content.ContentProvider { android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { org.apache.http.NameValuePair getParameterByName(java.lang.String); }
-keepclassmembers class android.content.ContentProvider { android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider$PipeDataWriter); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void setLongClickable(boolean); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.field.DateTimeFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void setOnRefreshListener(com.handmark.pulltorefresh.library.PullToRefreshBase$OnRefreshListener); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { int hashCode(); }
-keepclassmembers class android.content.ContentProvider { android.content.IContentProvider getIContentProvider(); }
-keepclassmembers class org.apache.james.mime4j.field.DateTimeFieldImpl$1 { void <init>(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void setMode(com.handmark.pulltorefresh.library.PullToRefreshBase$Mode); }
-keepclassmembers class org.apache.james.mime4j.field.DateTimeFieldImpl$1 { org.apache.james.mime4j.dom.field.DateTimeField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.widget.PopupWindow { void unregisterForScrollChanged(); }
-keepclassmembers class android.content.ContentProvider { void attachInfo(android.content.Context,android.content.pm.ProviderInfo); }
-keepclassmembers class android.content.ContentProvider { void attachInfoForTesting(android.content.Context,android.content.pm.ProviderInfo); }
-keepclassmembers class org.apache.http.message.BasicHeaderElement { java.lang.String toString(); }
-keepclassmembers class android.widget.PopupWindow { void registerForScrollChanged(android.view.View,int,int,int); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache { void <init>(int); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache { java.lang.Object get(java.lang.Object,int,int); }
-keepclassmembers class com.bumptech.glide.load.model.ModelCache { void put(java.lang.Object,int,int,java.lang.Object); }
-keepclassmembers class android.support.v4.print.PrintHelperKitkat { android.graphics.Bitmap access$300(android.support.v4.print.PrintHelperKitkat,android.net.Uri,int); }
-keepclassmembers class android.widget.PopupWindow { int[] access$800(); }
-keepclassmembers class android.content.ContentProvider { android.content.ContentProviderResult[] applyBatch(java.util.ArrayList); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.FlipLoadingLayout { void <init>(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation,android.content.res.TypedArray); }
-keepclassmembers class android.widget.PopupWindow { boolean access$700(android.widget.PopupWindow); }
-keepclassmembers class android.content.ContentProvider { void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void setScrollingWhileRefreshingEnabled(boolean); }
-keepclassmembers class android.content.ContentProvider { void shutdown(); }
-keepclassmembers class android.content.ContentProvider { android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.widget.PopupWindow { android.view.View$OnTouchListener access$900(android.widget.PopupWindow); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void setState(com.handmark.pulltorefresh.library.PullToRefreshBase$State,boolean[]); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { int getIntValue(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { java.lang.Object getValue(); }
-keepclassmembers class java.util.LinkedList { void <init>(); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe$IntKeyframe clone(); }
-keepclassmembers class java.util.LinkedList { void <init>(java.util.Collection); }
-keepclassmembers class android.content.ContentProvider { int getUserIdFromAuthority(java.lang.String,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void smoothScrollTo(int); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float,int); }
-keepclassmembers class android.widget.PopupWindow { android.view.View access$1000(android.widget.PopupWindow); }
-keepclassmembers class android.widget.PopupWindow { void <clinit>(); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { void <init>(float); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase { void updateUIForMode(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.FlipLoadingLayout { float getDrawableRotationAngle(); }
-keepclassmembers class android.content.ContentProvider { int getUserIdFromUri(android.net.Uri,int); }
-keepclassmembers class com.fsck.k9.activity.setup.FontSizeSettings$1 { void <init>(com.fsck.k9.activity.setup.FontSizeSettings,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.ContentProvider { int getUserIdFromAuthority(java.lang.String); }
-keepclassmembers class android.animation.Keyframe$IntKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class com.fsck.k9.activity.setup.FontSizeSettings$1 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void <init>(); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle); }
-keepclassmembers class java.util.LinkedList { boolean add(java.lang.Object); }
-keepclassmembers class android.content.ContentProvider { java.lang.String getAuthorityWithoutUserId(java.lang.String); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.FlipLoadingLayout { int getDefaultDrawableResId(); }
-keepclassmembers class android.content.ContentProvider { int getUserIdFromUri(android.net.Uri); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void <init>(org.htmlcleaner.CleanerProperties); }
-keepclassmembers class java.util.LinkedList { boolean addLastImpl(java.lang.Object); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void <init>(org.htmlcleaner.ITagInfoProvider,org.htmlcleaner.CleanerProperties); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpServiceConnection$1 { void <init>(org.openintents.openpgp.util.OpenPgpServiceConnection); }
-keepclassmembers class android.content.ContentProvider { android.net.Uri getUriWithoutUserId(android.net.Uri); }
-keepclassmembers class java.util.MiniEnumSet { void <init>(java.lang.Class,java.lang.Enum[]); }
-keepclassmembers class com.bumptech.glide.util.ContentLengthInputStream { int checkReadSoFarOrThrow(int); }
-keepclassmembers class java.util.MiniEnumSet { java.util.Iterator iterator(); }
-keepclassmembers class java.util.MiniEnumSet { int size(); }
-keepclassmembers class android.content.ContentProvider { android.net.Uri maybeAddUserId(android.net.Uri,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.FlipLoadingLayout { void onLoadingDrawableSet(android.graphics.drawable.Drawable); }
-keepclassmembers class android.content.ContentProvider { boolean uriHasUserId(android.net.Uri); }
-keepclassmembers class java.util.MiniEnumSet { boolean addAll(java.util.Collection); }
-keepclassmembers class com.bumptech.glide.util.ContentLengthInputStream { void <init>(java.io.InputStream,long); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void access$300(org.htmlcleaner.HtmlCleaner); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void addAttributesToTag(org.htmlcleaner.TagNode,java.util.Map); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.FlipLoadingLayout { void onPullImpl(float); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.FlipLoadingLayout { void refreshingImpl(); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.FlipLoadingLayout { void pullToRefreshImpl(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { boolean addIfNeededToPruneSet(org.htmlcleaner.TagNode,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class java.util.MiniEnumSet { boolean add(java.lang.Enum); }
-keepclassmembers class org.apache.james.mime4j.io.MaxHeaderLimitException { void <init>(java.lang.String); }
-keepclassmembers class com.bumptech.glide.util.ContentLengthInputStream { int available(); }
-keepclassmembers class java.util.MiniEnumSet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.MiniEnumSet { boolean containsAll(java.util.Collection); }
-keepclassmembers class com.android.okhttp.Response$Body { void <init>(); }
-keepclassmembers class com.fsck.k9.service.SleepService { int startService(android.content.Intent,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.FlipLoadingLayout { void releaseToRefreshImpl(); }
-keepclassmembers class java.util.LinkedList { boolean addAll(java.util.Collection); }
-keepclassmembers class com.android.okhttp.Response$Body { com.android.okio.Source source(); }
-keepclassmembers class com.bumptech.glide.util.ContentLengthInputStream { int read(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.FlipLoadingLayout { void resetImpl(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void <init>(android.content.res.XmlBlock,long,android.content.res.XmlBlock); }
-keepclassmembers class android.util.Patterns { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.util.ContentLengthInputStream { int read(byte[]); }
-keepclassmembers class java.util.LinkedList { void addFirst(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.util.ContentLengthInputStream { int read(byte[],int,int); }
-keepclassmembers class com.bumptech.glide.util.ContentLengthInputStream { java.io.InputStream obtain(java.io.InputStream,long); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void <init>(long,int); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle); }
-keepclassmembers class java.util.MiniEnumSet { boolean remove(java.lang.Object); }
-keepclassmembers class java.util.LinkedList { boolean addFirstImpl(java.lang.Object); }
-keepclassmembers class com.android.okhttp.Response$Body { void close(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void addPossibleHeadCandidate(org.htmlcleaner.TagInfo,org.htmlcleaner.TagNode,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class java.util.LinkedList { void addLast(java.lang.Object); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int following(int); }
-keepclassmembers class java.util.LinkedList { void clear(); }
-keepclassmembers class java.util.MiniEnumSet { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.icu.NativeBreakIterator { java.text.CharacterIterator getText(); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { boolean areCopiedTokensEqual(org.htmlcleaner.TagNode,org.htmlcleaner.TagNode); }
-keepclassmembers class java.util.LinkedList { boolean contains(java.lang.Object); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void calculateRootNode(org.htmlcleaner.CleanTimeValues,java.util.Set); }
-keepclassmembers class android.app.PendingIntent { android.content.IntentSender getIntentSender(); }
-keepclassmembers class java.util.MiniEnumSet { java.lang.Enum[] access$100(java.util.MiniEnumSet); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setText(java.lang.String); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getPositionDescription(); }
-keepclassmembers class java.util.MiniEnumSet { boolean add(java.lang.Object); }
-keepclassmembers class java.util.LinkedList { java.lang.Object get(int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToString(int,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setText(java.lang.String,java.text.CharacterIterator); }
-keepclassmembers class java.util.LinkedList { java.lang.Object getFirstImpl(); }
-keepclassmembers class java.util.MiniEnumSet { long access$000(java.util.MiniEnumSet); }
-keepclassmembers class java.util.LinkedList { java.lang.Object getFirst(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean isBoundary(int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean hasText(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object getLast(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getText(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getDepth(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getLineNumber(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { libcore.icu.NativeBreakIterator getWordInstance(java.util.Locale); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int preceding(int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToString(int); }
-keepclassmembers class java.util.LinkedList { java.util.ListIterator listIterator(int); }
-keepclassmembers class dalvik.system.DalvikLogging { java.lang.String loggerNameToTag(java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { void setTextImpl(long,java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int precedingImpl(long,java.lang.String,int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String convertInt(java.lang.AbstractStringBuilder,int); }
-keepclassmembers class java.lang.IntegralToString { void appendInt(java.lang.AbstractStringBuilder,int); }
-keepclassmembers class libcore.icu.NativeBreakIterator { long getWordInstanceImpl(java.lang.String); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int followingImpl(long,java.lang.String,int); }
-keepclassmembers class java.util.LinkedList { java.lang.Object remove(int); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getName(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getEventType(); }
-keepclassmembers class libcore.icu.NativeBreakIterator { boolean isBoundaryImpl(long,java.lang.String,int); }
-keepclassmembers class android.widget.Spinner$DropdownPopup$1 { void <init>(android.widget.Spinner$DropdownPopup,android.widget.Spinner); }
-keepclassmembers class libcore.icu.NativeBreakIterator { int currentImpl(long,java.lang.String); }
-keepclassmembers class android.animation.StateListAnimator { void <init>(); }
-keepclassmembers class android.animation.StateListAnimator { void initAnimatorListener(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object removeFirstImpl(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void closeAll(java.util.List,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class android.widget.Spinner$DropdownPopup$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class org.apache.http.impl.client.BasicCookieStore { void addCookie(org.apache.http.cookie.Cookie); }
-keepclassmembers class java.util.LinkedList { java.lang.Object removeFirst(); }
-keepclassmembers class java.util.LinkedList { boolean remove(java.lang.Object); }
-keepclassmembers class android.animation.StateListAnimator { void addState(int[],android.animation.Animator); }
-keepclassmembers class android.animation.StateListAnimator { android.view.View getTarget(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { java.util.List closeSnippet(java.util.List,org.htmlcleaner.HtmlCleaner$TagPos,java.lang.Object,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class org.apache.http.impl.client.BasicCookieStore { void <init>(); }
-keepclassmembers class android.animation.StateListAnimator { void setTarget(android.view.View); }
-keepclassmembers class android.animation.StateListAnimator { void clearTarget(); }
-keepclassmembers class org.apache.http.impl.client.BasicCookieStore { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.client.BasicCookieStore { java.util.List getCookies(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeCount(); }
-keepclassmembers class com.fsck.k9.activity.compose.SaveMessageTask { void <init>(android.content.Context,com.fsck.k9.Account,com.fsck.k9.helper.Contacts,android.os.Handler,com.fsck.k9.mail.Message,long,boolean); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator clone(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToString(long,int); }
-keepclassmembers class com.fsck.k9.activity.compose.SaveMessageTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.http.impl.client.BasicCookieStore { void clear(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object removeLast(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(int); }
-keepclassmembers class java.util.LinkedList { java.lang.Object removeLastImpl(); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int); }
-keepclassmembers class com.fsck.k9.activity.compose.SaveMessageTask { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class android.animation.StateListAnimator { void setState(int[]); }
-keepclassmembers class android.app.Dialog { void <init>(android.content.Context,int,boolean); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$1 { void <init>(java.lang.String); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToString(long); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int next(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$1 { void setValue(android.graphics.drawable.Drawable,int); }
-keepclassmembers class java.lang.IntegralToString { void appendLong(java.lang.AbstractStringBuilder,long); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$1 { java.lang.Integer get(android.graphics.drawable.Drawable); }
-keepclassmembers class android.animation.StateListAnimator { void start(android.animation.StateListAnimator$Tuple); }
-keepclassmembers class java.util.LinkedList { boolean removeFirstOccurrenceImpl(java.lang.Object); }
-keepclassmembers class android.animation.StateListAnimator { void cancel(); }
-keepclassmembers class java.util.LinkedList { boolean removeOneOccurrence(java.lang.Object,java.util.Iterator); }
-keepclassmembers class android.animation.StateListAnimator { void jumpToCurrentState(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$1 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$1 { void setValue(java.lang.Object,int); }
-keepclassmembers class com.bumptech.glide.load.model.Headers { void <clinit>(); }
-keepclassmembers class android.app.PendingIntent { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String convertLong(java.lang.AbstractStringBuilder,long); }
-keepclassmembers class android.animation.StateListAnimator { int getChangingConfigurations(); }
-keepclassmembers class android.animation.StateListAnimator { void appendChangingConfigurations(int); }
-keepclassmembers class java.net.SocketImpl { void <init>(); }
-keepclassmembers class java.util.LinkedList { int size(); }
-keepclassmembers class android.animation.StateListAnimator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object remove(); }
-keepclassmembers class java.net.SocketImpl { java.net.InetAddress getInetAddress(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object poll(); }
-keepclassmembers class java.util.LinkedList { boolean offer(java.lang.Object); }
-keepclassmembers class android.widget.Spinner$1 { void <init>(android.widget.Spinner,android.view.View,android.widget.Spinner$DropdownPopup); }
-keepclassmembers class android.app.Dialog { android.content.Context getContext(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object peekFirstImpl(); }
-keepclassmembers class java.net.SocketImpl { int getLocalPort(); }
-keepclassmembers class android.animation.StateListAnimator { void setChangingConfigurations(int); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$000(android.animation.StateListAnimator); }
-keepclassmembers class android.app.PendingIntent { int hashCode(); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.Animator access$002(android.animation.StateListAnimator,android.animation.Animator); }
-keepclassmembers class android.app.PendingIntent { java.lang.String toString(); }
-keepclassmembers class java.util.LinkedList { java.lang.Object peek(); }
-keepclassmembers class java.net.SocketImpl { int getPort(); }
-keepclassmembers class java.net.SocketImpl { java.lang.String toString(); }
-keepclassmembers class android.app.Dialog { void setOwnerActivity(android.app.Activity); }
-keepclassmembers class java.util.LinkedList { java.lang.Object[] toArray(); }
-keepclassmembers class android.app.Dialog { boolean isShowing(); }
-keepclassmembers class android.widget.Spinner$1 { boolean onForwardingStarted(); }
-keepclassmembers class android.widget.Spinner$1 { android.widget.ListPopupWindow getPopup(); }
-keepclassmembers class android.animation.StateListAnimator { android.animation.StateListAnimator$StateListAnimatorConstantState access$202(android.animation.StateListAnimator,android.animation.StateListAnimator$StateListAnimatorConstantState); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void createDocumentNodes(java.util.List,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class android.app.PendingIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class java.util.LinkedList { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.preferences.Settings$StringSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.Settings$StringSetting { void <init>(java.lang.String); }
-keepclassmembers class android.database.AbstractWindowedCursor { void <init>(); }
-keepclassmembers class org.apache.http.params.BasicHttpParams { java.lang.Object getParameter(java.lang.String); }
-keepclassmembers class org.apache.http.params.BasicHttpParams { org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object); }
-keepclassmembers class android.app.PendingIntent { android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel); }
-keepclassmembers class android.database.AbstractWindowedCursor { byte[] getBlob(int); }
-keepclassmembers class android.database.AbstractWindowedCursor { java.lang.String getString(int); }
-keepclassmembers class android.app.Dialog { void show(); }
-keepclassmembers class android.os.StrictMode$5 { void <init>(java.lang.String,int,android.os.StrictMode$ViolationInfo); }
-keepclassmembers class java.lang.IntegralToString { int intIntoCharArray(char[],int,int); }
-keepclassmembers class android.app.Dialog { void dismiss(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeNameResource(int); }
-keepclassmembers class android.app.Dialog { void hide(); }
-keepclassmembers class android.app.PendingIntent { void <init>(android.content.IIntentSender); }
-keepclassmembers class android.app.PendingIntent { void <init>(android.os.IBinder); }
-keepclassmembers class android.database.AbstractWindowedCursor { int getInt(int); }
-keepclassmembers class android.app.PendingIntent { void <clinit>(); }
-keepclassmembers class org.apache.http.params.BasicHttpParams { void <init>(); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.database.AbstractWindowedCursor { boolean isNull(int); }
-keepclassmembers class android.app.Dialog { void dismissDialog(); }
-keepclassmembers class android.app.Dialog { void sendDismissMessage(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToBinaryString(int); }
-keepclassmembers class android.animation.FloatEvaluator { void <init>(); }
-keepclassmembers class android.animation.FloatEvaluator { java.lang.Float evaluate(float,java.lang.Number,java.lang.Number); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.TagNode createTagNode(org.htmlcleaner.TagNode); }
-keepclassmembers class android.app.Dialog { void onStart(); }
-keepclassmembers class android.app.Dialog { void onCreate(android.os.Bundle); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { java.util.List flattenNestedList(java.util.List); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.HtmlCleaner$ChildBreaks getChildBreaks(org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class android.app.Dialog { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class android.app.Dialog { void sendShowMessage(); }
-keepclassmembers class android.app.Dialog { void onStop(); }
-keepclassmembers class android.database.AbstractWindowedCursor { long getLong(int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.HtmlCleaner$OpenTags getOpenTags(org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class android.content.res.XmlBlock$Parser { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMimeMessage { void <init>(java.lang.String,com.fsck.k9.mailstore.LocalMessage,long); }
-keepclassmembers class android.app.Dialog { android.os.Bundle onSaveInstanceState(); }
-keepclassmembers class android.app.Dialog { android.view.Window getWindow(); }
-keepclassmembers class android.database.AbstractWindowedCursor { void checkPosition(); }
-keepclassmembers class android.app.Dialog { void dispatchOnCreate(android.os.Bundle); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.TagInfo getTagInfo(java.lang.String,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMimeMessage { java.lang.String getAccountUuid(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeResourceValue(int,int); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String byteToHexString(byte,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMimeMessage { long getId(); }
-keepclassmembers class android.app.Dialog { android.view.View findViewById(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Node { void <init>(int,java.lang.Object,java.lang.Object,java.util.concurrent.ConcurrentHashMap$Node); }
-keepclassmembers class android.app.Dialog { void setContentView(android.view.View); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.database.AbstractWindowedCursor { void closeWindow(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { int getAttributeIntValue(int,int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void handleInterruption(); }
-keepclassmembers class android.content.res.XmlBlock$Parser { float getAttributeFloatValue(int,float); }
-keepclassmembers class android.app.Dialog { void setTitle(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMimeMessage { com.fsck.k9.mailstore.LocalMessage getMessage(); }
-keepclassmembers class android.database.AbstractWindowedCursor { void clearOrCreateWindow(java.lang.String); }
-keepclassmembers class android.app.Dialog { void setContentView(int); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamByteArrayLoader$Factory { void <init>(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { boolean isAllowedAsForeignMarkup(java.lang.String,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class android.app.Dialog { void setTitle(int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { boolean isAllowedInLastOpenTag(org.htmlcleaner.BaseToken,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class android.widget.CompoundButton$SavedState { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { boolean isCopiedTokenEqualToNextThreeCopiedTokens(org.htmlcleaner.TagNode,java.util.ListIterator); }
-keepclassmembers class android.app.Dialog { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamByteArrayLoader$Factory { void teardown(); }
-keepclassmembers class android.content.AsyncQueryHandler$WorkerHandler { void <init>(android.content.AsyncQueryHandler,android.os.Looper); }
-keepclassmembers class android.app.Dialog { boolean onKeyLongPress(int,android.view.KeyEvent); }
-keepclassmembers class android.app.Dialog { void onBackPressed(); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToHexString(int,boolean,int); }
-keepclassmembers class android.content.AsyncQueryHandler$WorkerHandler { void handleMessage(android.os.Message); }
-keepclassmembers class android.content.res.XmlBlock$Parser { void close(); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamByteArrayLoader$Factory { com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { libcore.icu.NativeDecimalFormat$FieldPositionIterator forFieldPosition(java.text.FieldPosition); }
-keepclassmembers class android.view.animation.Animation { void <init>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$Node { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class android.database.AbstractWindowedCursor { void onDeactivateOrClose(); }
-keepclassmembers class android.app.Dialog { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Dialog { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { boolean next(); }
-keepclassmembers class android.app.Dialog { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.Dialog { void onWindowAttributesChanged(android.view.WindowManager$LayoutParams); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { void setTint(android.graphics.drawable.Drawable,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int fieldId(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$9 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class android.app.Dialog { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { boolean isFatalTagSatisfied(org.htmlcleaner.TagInfo,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { void <init>(); }
-keepclassmembers class android.view.animation.Animation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.app.Dialog { void onContentChanged(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int start(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void <init>(java.lang.String,android.text.Html$ImageGetter,android.text.Html$TagHandler,org.ccil.cowan.tagsoup.Parser); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToHexString(long); }
-keepclassmembers class android.content.res.XmlBlock$Parser { java.lang.CharSequence getPooledString(int); }
-keepclassmembers class android.app.Dialog { void onAttachedToWindow(); }
-keepclassmembers class com.fsck.k9.service.RemoteControlService { void <init>(); }
-keepclassmembers class android.app.Dialog { void onDetachedFromWindow(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.Dialog { void onWindowFocusChanged(boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$9 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.app.Dialog { void onWindowDismissed(); }
-keepclassmembers class com.fsck.k9.service.RemoteControlService { void set(android.content.Context,android.content.Intent,java.lang.Integer); }
-keepclassmembers class com.fsck.k9.service.RemoteControlService { int startService(android.content.Intent,int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { boolean isStartToken(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$14 { void <init>(com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Message,java.lang.Runnable); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String intToOctalString(int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { boolean markNodesToPrune(java.util.List,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String longToOctalString(long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$14 { com.fsck.k9.mailstore.LocalMessage doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void <init>(android.view.ViewPropertyAnimator); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { boolean mustAddRequiredParent(org.htmlcleaner.TagInfo,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class java.lang.IntegralToString { java.lang.String stringOf(char[]); }
-keepclassmembers class com.fsck.k9.K9$Theme { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$14 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.animation.Animation { android.view.animation.Animation clone(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleStartTag(java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void <init>(android.widget.TimePicker,android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.app.Dialog { android.view.View onCreatePanelView(int); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.app.Dialog { boolean onPreparePanel(int,android.view.View,android.view.Menu); }
-keepclassmembers class libcore.icu.NativeDecimalFormat$FieldPositionIterator { int limit(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { android.text.Spanned convert(); }
-keepclassmembers class com.fsck.k9.K9$Theme { void <init>(java.lang.String,int); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int); }
-keepclassmembers class com.fsck.k9.K9$Theme { com.fsck.k9.K9$Theme[] values(); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <init>(int,android.os.StrictMode$1); }
-keepclassmembers class android.app.Dialog { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class android.app.Dialog { boolean onCreatePanelMenu(int,android.view.Menu); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Header { int access$900(android.text.HtmlToSpannedConverter$Header); }
-keepclassmembers class android.view.animation.Animation { void reset(); }
-keepclassmembers class android.app.Dialog { boolean onMenuItemSelected(int,android.view.MenuItem); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Header { void <init>(int); }
-keepclassmembers class java.lang.IntegralToString { void <clinit>(); }
-keepclassmembers class android.app.Dialog { void onPanelClosed(int,android.view.Menu); }
-keepclassmembers class android.app.Dialog { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy { void <clinit>(); }
-keepclassmembers class android.app.Dialog { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.view.animation.Animation { void detach(); }
-keepclassmembers class android.view.animation.Animation { void initialize(int,int,int,int); }
-keepclassmembers class java.util.Arrays { java.util.List asList(java.lang.Object[]); }
-keepclassmembers class android.view.animation.Animation { boolean isInitialized(); }
-keepclassmembers class android.app.Dialog { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.view.animation.Animation { void setListenerHandler(android.os.Handler); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.content.Context,int); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void onAnimationUpdate(android.animation.ValueAnimator); }
-keepclassmembers class android.view.animation.Animation { void setStartOffset(long); }
-keepclassmembers class android.view.animation.Animation { void setDuration(long); }
-keepclassmembers class android.app.Dialog { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class android.app.Dialog { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.TagNode newTagNode(java.lang.String); }
-keepclassmembers class android.app.Dialog { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class com.android.internal.app.AlertController$CheckedItemAdapter { void <init>(android.content.Context,int,int,java.lang.CharSequence[]); }
-keepclassmembers class android.view.animation.Animation { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class android.app.Dialog { void onContextMenuClosed(android.view.Menu); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.HtmlCleaner$NestingState pushNesting(org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class android.app.Dialog { void onActionModeStarted(android.view.ActionMode); }
-keepclassmembers class android.app.Dialog { android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void reopenBrokenNode(java.util.ListIterator,org.htmlcleaner.TagNode,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class android.widget.TimePickerClockDelegate { int computeStableWidth(android.widget.TextView,int); }
-keepclassmembers class android.app.Dialog { void onActionModeFinished(android.view.ActionMode); }
-keepclassmembers class android.view.animation.Animation { void setStartTime(long); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$7 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleEndTag(java.lang.String); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.HtmlCleaner$NestingState popNesting(org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class android.view.animation.Animation { void setRepeatMode(int); }
-keepclassmembers class android.app.Dialog { boolean onSearchRequested(); }
-keepclassmembers class org.apache.http.conn.ssl.AllowAllHostnameVerifier { void <init>(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void saveToLastOpenTag(java.util.List,java.lang.Object,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$7 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class org.apache.http.message.BasicHeader { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void initialize(int,int,boolean,int); }
-keepclassmembers class android.view.animation.Animation { void setRepeatCount(int); }
-keepclassmembers class android.view.animation.Animation { boolean isFillEnabled(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$2 { void <init>(com.fsck.k9.mailstore.LocalStore); }
-keepclassmembers class org.apache.http.message.BasicHeader { java.lang.String getName(); }
-keepclassmembers class android.view.animation.Animation { void setFillAfter(boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$2 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.animation.Animation { void setFillEnabled(boolean); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void setupListeners(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$2 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.app.Dialog { boolean requestWindowFeature(int); }
-keepclassmembers class android.view.ViewPropertyAnimator$AnimatorEventListener { void <init>(android.view.ViewPropertyAnimator,android.view.ViewPropertyAnimator$1); }
-keepclassmembers class android.view.animation.Animation { void setZAdjustment(int); }
-keepclassmembers class org.apache.http.message.BasicHeader { java.lang.String getValue(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void addPruneNode(org.htmlcleaner.TagNode,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class org.apache.http.message.BasicHeader { java.lang.String toString(); }
-keepclassmembers class android.view.animation.Animation { void setBackgroundColor(int); }
-keepclassmembers class android.view.animation.Animation { float getScaleFactor(); }
-keepclassmembers class android.view.animation.Animation { void setFillBefore(boolean); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void updateUI(int); }
-keepclassmembers class android.view.animation.Animation { long getStartTime(); }
-keepclassmembers class org.apache.http.message.BasicHeader { org.apache.http.HeaderElement[] getElements(); }
-keepclassmembers class java.util.Arrays { int binarySearch(int[],int,int,int); }
-keepclassmembers class android.view.animation.Animation { long getStartOffset(); }
-keepclassmembers class com.android.okhttp.ConnectionPool$CleanMode { com.android.okhttp.ConnectionPool$CleanMode[] values(); }
-keepclassmembers class android.app.Dialog { android.view.LayoutInflater getLayoutInflater(); }
-keepclassmembers class android.view.animation.Animation { void setDetachWallpaper(boolean); }
-keepclassmembers class android.view.animation.Animation { long getDuration(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void updateHeaderAmPm(); }
-keepclassmembers class java.util.Arrays { int binarySearch(long[],long); }
-keepclassmembers class android.app.Dialog { void setCancelable(boolean); }
-keepclassmembers class android.view.animation.Animation { boolean getFillBefore(); }
-keepclassmembers class android.app.Dialog { void setCanceledOnTouchOutside(boolean); }
-keepclassmembers class java.util.Arrays { int binarySearch(long[],int,int,long); }
-keepclassmembers class android.view.animation.Animation { boolean getFillAfter(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void updateRadialPicker(int); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class com.android.okhttp.ConnectionPool$CleanMode { void <clinit>(); }
-keepclassmembers class android.app.Dialog { void cancel(); }
-keepclassmembers class com.android.okhttp.ConnectionPool$CleanMode { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.animation.Animation { void setAnimationListener(android.view.animation.Animation$AnimationListener); }
-keepclassmembers class android.view.animation.Animation { void ensureInterpolator(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { java.util.regex.Pattern getPatternForRegex(java.lang.String); }
-keepclassmembers class android.view.animation.Animation { boolean getTransformation(long,android.view.animation.Transformation); }
-keepclassmembers class android.view.animation.Animation { boolean willChangeBounds(); }
-keepclassmembers class com.bumptech.glide.provider.DataLoadProviderRegistry { void <clinit>(); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object); }
-keepclassmembers class com.bumptech.glide.provider.DataLoadProviderRegistry { void <init>(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void setCurrentHour(java.lang.Integer); }
-keepclassmembers class android.app.Dialog { void setOnDismissListener(android.content.DialogInterface$OnDismissListener); }
-keepclassmembers class com.bumptech.glide.provider.DataLoadProviderRegistry { com.bumptech.glide.provider.DataLoadProvider get(java.lang.Class,java.lang.Class); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache { void <init>(int); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class libcore.icu.LocaleData { void <init>(); }
-keepclassmembers class android.app.Dialog { void setOnCancelListener(android.content.DialogInterface$OnCancelListener); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator); }
-keepclassmembers class libcore.icu.LocaleData { java.util.Locale mapInvalidAndNullLocales(java.util.Locale); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void setCurrentMinute(java.lang.Integer); }
-keepclassmembers class java.util.Arrays { int binarySearch(java.lang.Object[],int,int,java.lang.Object,java.util.Comparator); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.TagNode clean(java.io.Reader,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData get(java.util.Locale); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ScrollAnimationRunnable { void <init>(com.android.internal.widget.AutoScrollHelper); }
-keepclassmembers class android.text.Layout { float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint); }
-keepclassmembers class android.widget.TimePickerClockDelegate { java.lang.Integer getCurrentHour(); }
-keepclassmembers class com.bumptech.glide.provider.DataLoadProviderRegistry { void register(java.lang.Class,java.lang.Class,com.bumptech.glide.provider.DataLoadProvider); }
-keepclassmembers class android.app.Dialog { boolean takeCancelAndDismissListeners(java.lang.String,android.content.DialogInterface$OnCancelListener,android.content.DialogInterface$OnDismissListener); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleP(android.text.SpannableStringBuilder); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void setIs24HourView(java.lang.Boolean); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ScrollAnimationRunnable { void run(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void handleBr(android.text.SpannableStringBuilder); }
-keepclassmembers class android.text.HtmlToSpannedConverter { java.lang.Object getLast(android.text.Spanned,java.lang.Class); }
-keepclassmembers class android.app.Dialog { void setOnKeyListener(android.content.DialogInterface$OnKeyListener); }
-keepclassmembers class android.transition.ChangeTransform$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void start(android.text.SpannableStringBuilder,java.lang.Object); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String toString(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void setEnabled(boolean); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void end(android.text.SpannableStringBuilder,java.lang.Class,java.lang.Object); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ScrollAnimationRunnable { void <init>(com.android.internal.widget.AutoScrollHelper,com.android.internal.widget.AutoScrollHelper$1); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String getDateFormat(int); }
-keepclassmembers class java.util.Arrays { void checkBinarySearchBounds(int,int,int); }
-keepclassmembers class java.util.Arrays { void fill(byte[],byte); }
-keepclassmembers class android.widget.TimePickerClockDelegate { boolean isEnabled(); }
-keepclassmembers class android.text.Layout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float); }
-keepclassmembers class libcore.icu.LocaleData { java.lang.String getTimeFormat(int); }
-keepclassmembers class android.widget.TimePickerClockDelegate { java.lang.Integer getCurrentMinute(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { int getBaseline(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startImg(android.text.SpannableStringBuilder,org.xml.sax.Attributes,android.text.Html$ImageGetter); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationStart(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { android.widget.Editor$InsertionHandleView getHandle(); }
-keepclassmembers class java.util.Arrays { void fill(char[],char); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void show(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startFont(android.text.SpannableStringBuilder,org.xml.sax.Attributes); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void hide(); }
-keepclassmembers class android.view.animation.Animation { boolean getTransformation(long,android.view.animation.Transformation,float); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void <init>(org.apache.harmony.security.x509.DistributionPointName,org.apache.harmony.security.x509.ReasonFlags); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationEnd(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endFont(android.text.SpannableStringBuilder); }
-keepclassmembers class android.view.animation.Animation { boolean hasStarted(); }
-keepclassmembers class java.util.Arrays { void fill(char[],int,int,char); }
-keepclassmembers class android.view.animation.Animation { boolean hasEnded(); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void onDetached(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void setCurrentLocale(java.util.Locale); }
-keepclassmembers class libcore.icu.LocaleData { libcore.icu.LocaleData initLocaleData(java.util.Locale); }
-keepclassmembers class android.view.animation.Animation { void fireAnimationRepeat(); }
-keepclassmembers class android.view.animation.Animation { float resolveSize(int,float,int,int); }
-keepclassmembers class libcore.icu.LocaleData { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { org.apache.harmony.security.x509.IssuingDistributionPoint decode(byte[]); }
-keepclassmembers class android.widget.Editor$InsertionPointCursorController { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.widget.TimePickerClockDelegate { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsUserCerts(boolean); }
-keepclassmembers class android.view.animation.Animation { void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation); }
-keepclassmembers class android.view.animation.Animation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.database.CursorWindow$1 { void <init>(); }
-keepclassmembers class java.util.Arrays { void fill(int[],int); }
-keepclassmembers class android.content.IContentService$Stub { android.content.IContentService asInterface(android.os.IBinder); }
-keepclassmembers class android.text.Layout { void replaceWith(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setIndirectCRL(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsAttributeCerts(boolean); }
-keepclassmembers class java.util.Arrays { void fill(long[],long); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { java.lang.String getSchemeName(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void setOnlyContainsCACerts(boolean); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.TagNode clean(java.lang.String); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { void processChallenge(org.apache.http.Header); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { boolean isConnectionBased(); }
-keepclassmembers class android.view.animation.Animation { void initializeInvalidateRegion(int,int,int,int); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { boolean isComplete(); }
-keepclassmembers class android.view.InflateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startA(android.text.SpannableStringBuilder,org.xml.sax.Attributes); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl$JarURLConnectionInputStream { void <init>(libcore.net.url.JarURLConnectionImpl,java.io.InputStream,java.util.jar.JarFile); }
-keepclassmembers class android.text.Layout { void draw(android.graphics.Canvas); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { org.apache.http.Header authenticate(org.apache.http.auth.Credentials,java.lang.String,boolean); }
-keepclassmembers class android.text.Layout { void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class org.apache.http.impl.auth.BasicScheme { org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest); }
-keepclassmembers class android.text.Layout { void drawText(android.graphics.Canvas,int,int); }
-keepclassmembers class android.view.animation.Animation { boolean hasAlpha(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endA(android.text.SpannableStringBuilder); }
-keepclassmembers class libcore.net.url.JarURLConnectionImpl$JarURLConnectionInputStream { void close(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void onTimeChanged(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder { com.fsck.k9.activity.compose.ComposeCryptoStatus build(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$1 { void <init>(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.ITagInfoProvider getTagInfoProvider(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$1 { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.CleanerTransformations getTransformations(); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.IssuingDistributionPoint { void <clinit>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void setDocumentLocator(org.xml.sax.Locator); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { void makeTree(java.util.List,java.util.ListIterator,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startDocument(); }
-keepclassmembers class java.util.Arrays { void fill(java.lang.Object[],int,int,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder { void <init>(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void updateAmPmLabelStates(int); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endDocument(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner { org.htmlcleaner.CleanerProperties getProperties(); }
-keepclassmembers class java.util.Arrays { int hashCode(boolean[]); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endPrefixMapping(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie2 { int[] getPorts(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startPrefixMapping(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie2 { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie2 { void setPorts(int[]); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class libcore.icu.DateIntervalFormat { java.lang.String formatDateRange(long,long,int,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie2 { void setCommentURL(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder { com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setCryptoMode(com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode); }
-keepclassmembers class java.util.Arrays { int hashCode(int[]); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endElement(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$ResizePopupRunnable { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class android.view.animation.Animation { void <clinit>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void characters(char[],int,int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie2 { boolean isExpired(java.util.Date); }
-keepclassmembers class org.apache.http.impl.cookie.BasicClientCookie2 { void setDiscard(boolean); }
-keepclassmembers class libcore.icu.DateIntervalFormat { java.lang.String formatDateRange(java.util.Locale,java.util.TimeZone,long,long,int); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder { com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setCryptoProviderState(com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder { com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setEnablePgpInline(boolean); }
-keepclassmembers class java.util.Arrays { int hashCode(short[]); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder { com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setSelfEncryptId(long); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory { com.bumptech.glide.load.engine.EngineResource build(com.bumptech.glide.load.engine.Resource,boolean); }
-keepclassmembers class android.app.Fragment$InstantiationException { void <init>(java.lang.String,java.lang.Exception); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo43 { void fixOutboxFolders(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder { com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setRecipients(java.util.List); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void ignorableWhitespace(char[],int,int); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void updateHeaderHour(int,boolean); }
-keepclassmembers class java.util.Arrays { int hashCode(byte[]); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void processingInstruction(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder { com.fsck.k9.activity.compose.ComposeCryptoStatus$ComposeCryptoStatusBuilder setSigningKeyId(long); }
-keepclassmembers class libcore.icu.DateIntervalFormat { long getFormatter(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void <clinit>(); }
-keepclassmembers class libcore.icu.DateIntervalFormat { java.lang.String toSkeleton(java.util.Calendar,java.util.Calendar,int); }
-keepclassmembers class java.util.Arrays { int hashCode(long[]); }
-keepclassmembers class java.util.Arrays { int hashCode(char[]); }
-keepclassmembers class com.github.amlcurran.showcaseview.ApiUtils { boolean isCompatWith(int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ApiUtils { boolean isCompatWithHoneycomb(); }
-keepclassmembers class java.util.Arrays { int hashCode(float[]); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void tryAnnounceForAccessibility(java.lang.CharSequence,boolean); }
-keepclassmembers class java.util.Arrays { int hashCode(double[]); }
-keepclassmembers class com.github.amlcurran.showcaseview.ApiUtils { void <init>(); }
-keepclassmembers class java.util.Arrays { int hashCode(java.lang.Object[]); }
-keepclassmembers class android.transition.Slide$4 { void <init>(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void updateHeaderSeparator(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { int modulo12(int,boolean); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog$3 { void <init>(com.fsck.k9.ui.messageview.CryptoInfoDialog); }
-keepclassmembers class java.security.SecureRandomSpi { void <init>(); }
-keepclassmembers class android.widget.TimePickerClockDelegate { int lastIndexOfAny(java.lang.String,char[]); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean isMidnight(java.util.Calendar); }
-keepclassmembers class com.fsck.k9.ui.messageview.CryptoInfoDialog$3 { void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView$1 { void <clinit>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter { void endHeader(android.text.SpannableStringBuilder); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean onTheHour(java.util.Calendar); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent$InsertionLocation { void <clinit>(); }
-keepclassmembers class com.fsck.k9.message.InsertableHtmlContent$InsertionLocation { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void updateHeaderMinute(int,boolean); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean fallOnDifferentDates(java.util.Calendar,java.util.Calendar); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativeOpen(java.lang.String,int,java.lang.String,boolean,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeFinalizeStatement(long,long); }
-keepclassmembers class android.text.Layout { void drawBackground(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int,int,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeRegisterLocalizedCollators(long,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeClose(long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeRegisterCustomFunction(long,android.database.sqlite.SQLiteCustomFunction); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { boolean nativeIsReadOnly(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativePrepareStatement(long,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String nativeGetColumnName(long,long,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindNull(long,long,int); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean fallInSameMonth(java.util.Calendar,java.util.Calendar); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { int nativeGetColumnCount(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindLong(long,long,int,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindDouble(long,long,int,double); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void setCurrentItemShowing(int,boolean,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindBlob(long,long,int,byte[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeBindString(long,long,int,java.lang.String); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeResetStatementAndClearBindings(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeExecute(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativeExecuteForLong(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { int nativeExecuteForChangedRowCount(long,long); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { android.view.ViewGroup$TouchTarget obtain(android.view.View,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { int nativeGetParameterCount(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativeExecuteForLastInsertedRowId(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String nativeExecuteForString(long,long); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long nativeExecuteForCursorWindow(long,long,long,int,int,boolean); }
-keepclassmembers class java.beans.PropertyChangeEvent { void <init>(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean fallInSameYear(java.util.Calendar,java.util.Calendar); }
-keepclassmembers class libcore.icu.DateIntervalFormat { boolean isThisYear(java.util.Calendar); }
-keepclassmembers class com.android.okhttp.internal.http.RequestLine { java.lang.String get(com.android.okhttp.Request,java.net.Proxy$Type,int); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.Object getNewValue(); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.Object getOldValue(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void nativeResetCancel(long,boolean); }
-keepclassmembers class java.beans.PropertyChangeEvent { java.lang.String getPropertyName(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void <init>(com.android.okio.BufferedSink,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void <init>(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean); }
-keepclassmembers class java.util.Arrays { boolean equals(byte[],byte[]); }
-keepclassmembers class libcore.icu.DateIntervalFormat { int julianDay(java.util.Calendar); }
-keepclassmembers class com.android.okhttp.internal.http.RequestLine { boolean includeAuthorityInRequestLine(com.android.okhttp.Request,java.net.Proxy$Type); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel$1 { void <init>(java.nio.channels.spi.AbstractInterruptibleChannel); }
-keepclassmembers class libcore.icu.DateIntervalFormat { int dayDistance(java.util.Calendar,java.util.Calendar); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void <clinit>(); }
-keepclassmembers class java.util.Arrays { boolean equals(short[],short[]); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfo { void <init>(com.fsck.k9.mail.Message,boolean,com.fsck.k9.mail.Part,java.lang.String,java.util.List,com.fsck.k9.mailstore.CryptoResultAnnotation,com.fsck.k9.mailstore.AttachmentResolver,java.lang.String,java.util.List); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void flush(); }
-keepclassmembers class android.view.ViewGroup$TouchTarget { void recycle(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel$1 { void run(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void ackSettings(); }
-keepclassmembers class libcore.icu.DateIntervalFormat { void access$000(long); }
-keepclassmembers class libcore.icu.DateIntervalFormat { long createDateIntervalFormat(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.RequestLine { java.lang.String requestPath(java.net.URL); }
-keepclassmembers class libcore.icu.DateIntervalFormat { void <clinit>(); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings { void <clinit>(); }
-keepclassmembers class libcore.icu.DateIntervalFormat { void destroyDateIntervalFormat(long); }
-keepclassmembers class java.util.Arrays { boolean equals(char[],char[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { android.database.sqlite.SQLiteConnection open(android.database.sqlite.SQLiteConnectionPool,android.database.sqlite.SQLiteDatabaseConfiguration,int,boolean); }
-keepclassmembers class com.android.okhttp.internal.http.RequestLine { java.lang.String version(int); }
-keepclassmembers class libcore.icu.DateIntervalFormat { java.lang.String formatDateInterval(long,long,long); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void connectionHeader(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void synStream(boolean,boolean,int,int,int,int,java.util.List); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void close(); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfo { com.fsck.k9.mailstore.MessageViewInfo createWithErrorState(com.fsck.k9.mail.Message,boolean); }
-keepclassmembers class java.util.Arrays { boolean equals(long[],long[]); }
-keepclassmembers class android.text.PackedObjectVector { void <init>(int); }
-keepclassmembers class android.text.PackedObjectVector { void setValue(int,int,java.lang.Object); }
-keepclassmembers class android.text.PackedObjectVector { java.lang.Object getValue(int,int); }
-keepclassmembers class java.util.Arrays { boolean equals(int[],int[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void open(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void pushPromise(int,int,java.util.List); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setAutoCheckpointInterval(); }
-keepclassmembers class android.text.style.BulletSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void headers(boolean,int,int,java.util.List); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setPageSize(); }
-keepclassmembers class com.fsck.k9.mailstore.MessageViewInfo { com.fsck.k9.mailstore.MessageViewInfo createWithExtractedContent(com.fsck.k9.mail.Message,boolean,com.fsck.k9.mail.Part,java.lang.String,java.util.List,com.fsck.k9.mailstore.CryptoResultAnnotation,com.fsck.k9.mailstore.AttachmentResolver,java.lang.String,java.util.List); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void dispose(boolean); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void <init>(); }
-keepclassmembers class java.util.Arrays { boolean equals(float[],float[]); }
-keepclassmembers class android.os.StrictMode$StrictModeViolation { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setJournalSizeLimit(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLContextImpl { void <init>(); }
-keepclassmembers class java.util.Arrays { boolean equals(double[],double[]); }
-keepclassmembers class android.text.PackedObjectVector { void insertAt(int,java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { java.lang.Object getAndSet(java.lang.Object); }
-keepclassmembers class android.text.Layout { long getLineRangeForDraw(android.graphics.Canvas); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { boolean compareAndSet(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setForeignKeyModeFromConfiguration(); }
-keepclassmembers class java.util.Arrays { boolean equals(boolean[],boolean[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void rstStream(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.text.PackedObjectVector { void growBuffer(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLContextImpl { void engineInit(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom); }
-keepclassmembers class android.text.PackedObjectVector { int size(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setWalModeFromConfiguration(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { java.lang.Object get(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void <clinit>(); }
-keepclassmembers class android.text.Layout { int getLineStartPos(int,int,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicReference { void set(java.lang.Object); }
-keepclassmembers class android.text.PackedObjectVector { void deleteAt(int,int); }
-keepclassmembers class android.text.style.BulletSpan { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void data(boolean,int,com.android.okio.OkBuffer,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setSyncMode(java.lang.String); }
-keepclassmembers class java.io.OutputStream { void close(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String canonicalizeSyncMode(java.lang.String); }
-keepclassmembers class java.io.OutputStream { void <init>(); }
-keepclassmembers class java.util.Arrays { boolean deepEquals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class java.util.Arrays { boolean equals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLContextImpl { javax.net.ssl.SSLSocketFactory engineGetSocketFactory(); }
-keepclassmembers class android.text.PackedObjectVector { void moveRowGapTo(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setJournalMode(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTaddress { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTaddress { void <init>(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void dataFrame(int,byte,com.android.okio.OkBuffer,int); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void <init>(int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void settings(com.android.okhttp.internal.spdy.Settings); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLContextImpl { com.android.org.conscrypt.ClientSessionContext engineGetClientSessionContext(); }
-keepclassmembers class java.io.OutputStream { void flush(); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void resolveLayoutDirection(int); }
-keepclassmembers class java.util.Arrays { boolean deepEqualsElements(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setLocaleFromConfiguration(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date { int getDay(); }
-keepclassmembers class android.text.Layout { java.lang.CharSequence getText(); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date { int getMonth(); }
-keepclassmembers class android.text.Layout { android.text.TextPaint getPaint(); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$StringResourceSetting { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.james.mime4j.field.datetime.parser.DateTimeParser$Date { java.lang.String getYear(); }
-keepclassmembers class android.text.Layout { int getWidth(); }
-keepclassmembers class android.view.ViewGroup$LayoutParams { void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.text.Layout { void increaseWidthTo(int); }
-keepclassmembers class android.text.Layout { int getHeight(); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$StringResourceSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void ping(boolean,int,int); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { void <init>(); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { boolean canResponseHaveBody(org.apache.http.HttpRequest,org.apache.http.HttpResponse); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings$StringResourceSetting { java.util.Map getMapping(); }
-keepclassmembers class android.text.Layout { float getSpacingMultiplier(); }
-keepclassmembers class android.text.Layout { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class java.io.OutputStream { void write(byte[]); }
-keepclassmembers class android.text.Layout { float getSpacingAdd(); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { java.util.List findEncryptedParts(com.fsck.k9.mail.Part); }
-keepclassmembers class android.widget.TimePickerClockDelegate { int getAmOrPmKeyCode(int); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void goAway(int,com.android.okhttp.internal.spdy.ErrorCode,byte[]); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser { com.fsck.k9.mail.Body access$000(java.io.InputStream,java.lang.String,com.fsck.k9.mailstore.util.FileFactory); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser { com.fsck.k9.mail.Body createBody(java.io.InputStream,java.lang.String,com.fsck.k9.mailstore.util.FileFactory); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { java.lang.reflect.Type[] getLowerBounds(); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { void <init>(libcore.reflect.ListOfTypes,libcore.reflect.ListOfTypes); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { java.util.List findPgpInlineParts(com.fsck.k9.mail.Part); }
-keepclassmembers class android.text.Layout { boolean isLevelBoundary(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void reconfigure(android.database.sqlite.SQLiteDatabaseConfiguration); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { java.lang.reflect.Type[] getUpperBounds(); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.MimePartStreamParser { com.fsck.k9.mail.internet.MimeBodyPart parse(com.fsck.k9.mailstore.util.FileFactory,java.io.InputStream); }
-keepclassmembers class android.widget.TimePickerClockDelegate { void generateLegalTimesTree(); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { com.fsck.k9.mail.Part findPrimaryEncryptedOrSignedPart(com.fsck.k9.mail.Part,java.util.List); }
-keepclassmembers class java.util.Arrays { void checkOffsetAndCount(int,int,int); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void windowUpdate(int,long); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { int hashCode(); }
-keepclassmembers class java.util.Arrays { void checkStartAndEnd(int,int,int); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(java.lang.String); }
-keepclassmembers class libcore.reflect.WildcardTypeImpl { java.lang.String toString(); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment { void <clinit>(); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { com.fsck.k9.mail.Part findPrimaryPartInAlternative(com.fsck.k9.mail.Part); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void close(); }
-keepclassmembers class java.lang.UnsupportedOperationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment { void <init>(android.net.Uri,com.fsck.k9.activity.misc.Attachment$LoadingState,int,java.lang.String,java.lang.String,java.lang.Long,java.lang.String); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { org.apache.http.HttpResponse doSendRequest(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.text.Layout { boolean isRtlCharAt(int); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { com.fsck.k9.mail.Part findPrimaryPartInMixed(com.fsck.k9.mail.Part,java.util.List); }
-keepclassmembers class android.animation.PathKeyframes$1 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class com.android.okhttp.internal.spdy.Http20Draft09$Writer { void frameHeader(int,byte,byte,int); }
-keepclassmembers class android.animation.PathKeyframes$1 { float getFloatValue(float); }
-keepclassmembers class com.bumptech.glide.load.data.AssetPathFetcher { void <init>(android.content.res.AssetManager,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment { void <init>(android.os.Parcel); }
-keepclassmembers class com.bumptech.glide.load.data.AssetPathFetcher { java.lang.String getId(); }
-keepclassmembers class java.util.HashMap$HashIterator { void <init>(java.util.HashMap); }
-keepclassmembers class com.bumptech.glide.load.data.AssetPathFetcher { void cleanup(); }
-keepclassmembers class com.bumptech.glide.load.data.AssetPathFetcher { void cancel(); }
-keepclassmembers class android.view.View$13 { void setValue(android.view.View,float); }
-keepclassmembers class java.util.HashMap$HashIterator { boolean hasNext(); }
-keepclassmembers class android.view.View$13 { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment { void <init>(android.os.Parcel,com.fsck.k9.activity.misc.Attachment$1); }
-keepclassmembers class com.bumptech.glide.load.data.AssetPathFetcher { java.lang.Object loadData(com.bumptech.glide.Priority); }
-keepclassmembers class android.view.View$13 { java.lang.Float get(android.view.View); }
-keepclassmembers class java.util.HashMap$HashIterator { java.util.HashMap$HashMapEntry nextEntry(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { boolean isPreparedStatementInCache(java.lang.String); }
-keepclassmembers class android.view.View$13 { void setValue(java.lang.Object,float); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void setOnlyAllowReadOnlyOperations(boolean); }
-keepclassmembers class android.text.Layout { boolean primaryIsTrailingPrevious(int); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { java.util.List findSignedParts(com.fsck.k9.mail.Part,com.fsck.k9.ui.crypto.MessageCryptoAnnotations); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment { com.fsck.k9.activity.misc.Attachment createAttachment(android.net.Uri,int,java.lang.String); }
-keepclassmembers class java.util.Arrays { void sort(int[],int,int); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTaddress_list { void <init>(int); }
-keepclassmembers class android.view.View$13 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Arrays { void sort(int[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { boolean isPrimaryConnection(); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment { com.fsck.k9.activity.misc.Attachment deriveWithLoadCancelled(); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTaddress_list { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class java.util.HashMap$HashIterator { void remove(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void prepare(java.lang.String,android.database.sqlite.SQLiteStatementInfo); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment { com.fsck.k9.activity.misc.Attachment deriveWithLoadComplete(java.lang.String); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],int,int); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { byte[] getSignatureData(com.fsck.k9.mail.Part); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { org.apache.http.HttpResponse doReceiveResponse(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { boolean isPartEncryptedOrSigned(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment { com.fsck.k9.activity.misc.Attachment deriveWithMetadataLoaded(java.lang.String,java.lang.String,long); }
-keepclassmembers class java.util.Arrays { void sort(java.lang.Object[],java.util.Comparator); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(boolean[]); }
-keepclassmembers class com.fsck.k9.activity.misc.Attachment { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { boolean isPartMultipartSigned(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { boolean isPartMultipartEncrypted(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog$2 { void <init>(com.fsck.k9.activity.compose.CryptoSettingsDialog); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { boolean isPartPgpInlineEncrypted(com.fsck.k9.mail.Part); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(byte[]); }
-keepclassmembers class org.apache.http.protocol.HttpRequestExecutor { void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { boolean isPartPgpInlineEncryptedOrSigned(com.fsck.k9.mail.Part); }
-keepclassmembers class android.text.Layout { float getPrimaryHorizontal(int,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void execute(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(char[]); }
-keepclassmembers class java.net.URLEncoder { java.lang.String encode(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.Layout { float getSecondaryHorizontal(int,boolean); }
-keepclassmembers class com.getkeepsafe.relinker.MissingLibraryException { void <init>(java.lang.String); }
-keepclassmembers class java.net.URLEncoder { void <clinit>(); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,boolean); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(double[]); }
-keepclassmembers class android.app.Fragment$1 { boolean hasView(); }
-keepclassmembers class java.security.cert.CertificateEncodingException { void <init>(java.lang.String); }
-keepclassmembers class org.openintents.openpgp.OpenPgpError$1 { void <init>(); }
-keepclassmembers class android.app.Fragment$1 { android.view.View findViewById(int); }
-keepclassmembers class android.text.Layout { float getHorizontal(int,boolean,int,boolean); }
-keepclassmembers class android.text.Layout { float getLineLeft(int); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(float[]); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings { java.util.Map convert(java.util.Map); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings { java.util.Map getAccountSettings(com.fsck.k9.preferences.Storage,java.lang.String); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(long[]); }
-keepclassmembers class android.app.Fragment$1 { void <init>(android.app.Fragment); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$2 { void <init>(com.fsck.k9.activity.Accounts$AccountsHandler); }
-keepclassmembers class com.fsck.k9.crypto.MessageDecryptVerifier { boolean isPgpMimeEncryptedOrSignedPart(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$2 { void run(); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings { java.util.Set upgrade(int,java.util.Map); }
-keepclassmembers class android.widget.AutoCompleteTextView$PopupDataSetObserver { void <init>(android.widget.AutoCompleteTextView); }
-keepclassmembers class com.fsck.k9.preferences.AccountSettings { java.util.Map validate(int,java.util.Map,boolean); }
-keepclassmembers class android.text.Layout { float getLineRight(int); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(int[]); }
-keepclassmembers class android.widget.AutoCompleteTextView$PopupDataSetObserver { void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1); }
-keepclassmembers class android.widget.AutoCompleteTextView$PopupDataSetObserver { void onChanged(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long executeForLong(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(short[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageViewHolder { void <init>(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.text.Layout { float getLineMax(int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageViewHolder { void onClick(android.view.View); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String executeForString(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,boolean); }
-keepclassmembers class android.text.Layout { float getLineExtent(int,android.text.Layout$TabStops,boolean); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { int[] parsePortAttribute(java.lang.String); }
-keepclassmembers class java.util.Arrays { java.lang.String toString(java.lang.Object[]); }
-keepclassmembers class java.util.Arrays { void deepToStringImpl(java.lang.Object[],java.lang.Object[],java.lang.StringBuilder); }
-keepclassmembers class java.util.Arrays { java.lang.String deepToString(java.lang.Object[]); }
-keepclassmembers class android.widget.ViewAnimator { void <init>(android.content.Context); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$3 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],boolean,int,int,com.android.okhttp.internal.spdy.Ping); }
-keepclassmembers class android.text.Layout { float getLineWidth(int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { boolean portMatch(int,int[]); }
-keepclassmembers class android.widget.ViewAnimator { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class java.net.URLDecoder { java.lang.String decode(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.Layout { int getLineForVertical(int); }
-keepclassmembers class android.text.Layout { int getLineForOffset(int); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$3 { void execute(); }
-keepclassmembers class android.text.Layout { int getOffsetForHorizontal(int,float); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965PortAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class com.fsck.k9.Account$Expunge { void <clinit>(); }
-keepclassmembers class android.widget.ViewAnimator { void initViewAnimator(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.util.Arrays { boolean deepToStringImplContains(java.lang.Object[],java.lang.Object); }
-keepclassmembers class com.fsck.k9.Account$Expunge { com.fsck.k9.Account$Expunge valueOf(java.lang.String); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(float,float,float,float); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(float,float); }
-keepclassmembers class android.widget.ViewAnimator { void setDisplayedChild(int); }
-keepclassmembers class com.fsck.k9.view.RigidWebView { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$25 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$25 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void <init>(); }
-keepclassmembers class java.util.Arrays { float[] copyOf(float[],int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void accountSizeChanged(com.fsck.k9.Account,long,long); }
-keepclassmembers class com.fsck.k9.view.RigidWebView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.ViewAnimator { int getDisplayedChild(); }
-keepclassmembers class com.fsck.k9.Account$Expunge { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Arrays { int[] copyOf(int[],int); }
-keepclassmembers class android.view.animation.RotateAnimation { void initializePivotPoint(); }
-keepclassmembers class android.widget.ViewAnimator { void showOnly(int,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void checkMailFinished(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.view.RigidWebView { void <init>(android.content.Context); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { int executeForChangedRowCount(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void checkMailStarted(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOf(java.lang.Object[],int); }
-keepclassmembers class android.text.Layout { int getLineEnd(int); }
-keepclassmembers class android.view.animation.RotateAnimation { void <init>(float,float,int,float,int,float); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void accountStatusChanged(com.fsck.k9.BaseAccount,com.fsck.k9.AccountStats); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void emptyTrashCompleted(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.view.RigidWebView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void controllerCommandCompleted(boolean); }
-keepclassmembers class android.view.animation.RotateAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class com.fsck.k9.view.RigidWebView { void performSizeChange(int,int); }
-keepclassmembers class android.view.animation.RotateAnimation { void initialize(int,int,int,int); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOf(java.lang.Object[],int,java.lang.Class); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int); }
-keepclassmembers class android.widget.ViewAnimator { void showOnly(int); }
-keepclassmembers class android.text.Layout { int getLineVisibleEnd(int); }
-keepclassmembers class com.fsck.k9.view.RigidWebView { void performSizeChangeDelayed(); }
-keepclassmembers class com.fsck.k9.view.RigidWebView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class com.fsck.k9.view.RigidWebView { void access$000(com.fsck.k9.view.RigidWebView); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void listFoldersFailed(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void listFoldersFinished(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void listFolders(com.fsck.k9.Account,java.util.List); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { void setIndex(java.util.concurrent.RunnableScheduledFuture,int); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftOf(int); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { void siftDown(int,java.util.concurrent.RunnableScheduledFuture); }
-keepclassmembers class android.text.Layout { int getOffsetToRightOf(int); }
-keepclassmembers class android.widget.ViewAnimator { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.Arrays { char[] copyOfRange(char[],int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void listLocalMessagesFailed(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class android.text.Layout { int getLineBaseline(int); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { void siftUp(int,java.util.concurrent.RunnableScheduledFuture); }
-keepclassmembers class java.util.Arrays { byte[] copyOfRange(byte[],int,int); }
-keepclassmembers class android.text.Layout { int getLineBottom(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void listFoldersStarted(com.fsck.k9.Account); }
-keepclassmembers class android.widget.ViewAnimator { void removeAllViews(); }
-keepclassmembers class android.widget.ViewAnimator { void removeViewAt(int); }
-keepclassmembers class android.widget.ViewAnimator { void removeView(android.view.View); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void listLocalMessagesFinished(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class java.util.Arrays { float[] copyOfRange(float[],int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void listLocalMessagesStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(int,int,int); }
-keepclassmembers class android.widget.ViewAnimator { void removeViewInLayout(android.view.View); }
-keepclassmembers class android.text.Layout { int getOffsetToLeftRightOf(int,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void listLocalMessagesUpdateMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class android.widget.AbsListView$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftHeaderParser { void <init>(); }
-keepclassmembers class java.util.Arrays { int[] copyOfRange(int[],int,int); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftHeaderParser { org.apache.http.HeaderElement parseHeader(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { void grow(); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void loadAttachmentFailed(com.fsck.k9.Account,com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,java.lang.String); }
-keepclassmembers class android.text.Layout { int getOffsetAtStartOf(int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void <init>(java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { int indexOf(java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],android.os.CancellationSignal); }
-keepclassmembers class android.widget.ViewAnimator { android.view.View getCurrentView(); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void loadAttachmentFinished(com.fsck.k9.Account,com.fsck.k9.mail.Message,com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void loadMessageRemoteFailed(com.fsck.k9.Account,java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$HasAttachmentsExtractor { java.lang.Boolean getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class android.text.Layout { boolean shouldClampCursor(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void loadMessageRemoteFinished(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { void setDurationScale(float); }
-keepclassmembers class android.animation.ValueAnimator { float getDurationScale(); }
-keepclassmembers class android.widget.ViewAnimator { void setOutAnimation(android.view.animation.Animation); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOfRange(java.lang.Object[],int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$8 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class java.net.Inet4Address { void <init>(byte[],java.lang.String); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { void <init>(android.animation.StateListAnimator); }
-keepclassmembers class android.widget.ViewAnimator { void setInAnimation(android.content.Context,int); }
-keepclassmembers class android.animation.ValueAnimator { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$HasAttachmentsExtractor { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void messageDeleted(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class android.widget.ViewAnimator { void setInAnimation(android.view.animation.Animation); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDraftHeaderParser { void <clinit>(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$HasAttachmentsExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class android.text.Layout { void getCursorPath(int,android.graphics.Path,java.lang.CharSequence); }
-keepclassmembers class android.widget.ViewAnimator { void setOutAnimation(android.content.Context,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void pendingCommandCompleted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class java.util.Arrays { java.lang.Object[] copyOfRange(java.lang.Object[],int,int,java.lang.Class); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class android.widget.ViewAnimator { void setAnimateFirstView(boolean); }
-keepclassmembers class android.animation.StateListAnimator$StateListAnimatorConstantState { android.animation.StateListAnimator newInstance(); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void messageUidChanged(com.fsck.k9.Account,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,android.os.CancellationSignal); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void register(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { boolean remove(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$8 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class java.net.Inet4Address { boolean isAnyLocalAddress(); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void pendingCommandStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class android.widget.ViewAnimator { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class java.util.Grego { boolean isLeapYear(int); }
-keepclassmembers class android.widget.ViewAnimator { int getBaseline(); }
-keepclassmembers class android.os.StrictMode$StrictModeDiskReadViolation { void <init>(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void pendingCommandsProcessing(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void remoteSearchAddMessage(java.lang.String,com.fsck.k9.mail.Message,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void pendingCommandsFinished(com.fsck.k9.Account); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator ofFloat(float[]); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void contendedLock(); }
-keepclassmembers class android.animation.ValueAnimator { void setFloatValues(float[]); }
-keepclassmembers class com.bumptech.glide.load.MultiTransformation { void <init>(com.bumptech.glide.load.Transformation[]); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$Node find(int,java.lang.Object); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { int size(); }
-keepclassmembers class android.animation.ValueAnimator { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class java.util.Grego { int[] dayToFields(long,int[]); }
-keepclassmembers class com.bumptech.glide.load.MultiTransformation { java.lang.String getId(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { boolean isEmpty(); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void sendPendingMessagesFailed(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void sendPendingMessagesCompleted(com.fsck.k9.Account); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void lockRoot(); }
-keepclassmembers class android.widget.ViewAnimator { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.animation.ValueAnimator { void setIntValues(int[]); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void unlockRoot(); }
-keepclassmembers class com.bumptech.glide.load.MultiTransformation { com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void setPushActive(com.fsck.k9.Account,java.lang.String,boolean); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.PropertyValuesHolder[] getValues(); }
-keepclassmembers class java.net.Inet4Address { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void synchronizeMailboxAddOrUpdateMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void sendPendingMessagesStarted(com.fsck.k9.Account); }
-keepclassmembers class android.animation.ValueAnimator { void setValues(android.animation.PropertyValuesHolder[]); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { java.util.concurrent.RunnableScheduledFuture peek(); }
-keepclassmembers class android.text.Layout { void addSelection(int,int,int,int,int,android.graphics.Path); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { boolean offer(java.lang.Runnable); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode putTreeVal(int,java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void synchronizeMailboxHeadersFinished(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class android.animation.ValueAnimator { void initAnimation(); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentPlayTime(long); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class java.util.Grego { int[] timeToFields(long,int[]); }
-keepclassmembers class java.util.Grego { long floorDivide(long,long,long[]); }
-keepclassmembers class android.animation.ValueAnimator { void updateScaledDuration(); }
-keepclassmembers class android.text.style.LocaleSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void synchronizeMailboxHeadersProgress(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$1 { void run(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { boolean add(java.lang.Runnable); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void synchronizeMailboxHeadersStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderClickListener { void onClick(android.view.View); }
-keepclassmembers class android.text.Layout { void getSelectionPath(int,int,android.graphics.Path); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { java.util.concurrent.RunnableScheduledFuture finishPoll(java.util.concurrent.RunnableScheduledFuture); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$1 { void <init>(com.handmark.pulltorefresh.library.PullToRefreshBase); }
-keepclassmembers class java.util.Grego { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void synchronizeMailboxRemovedMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void synchronizeMailboxNewMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class android.animation.ValueAnimator { void setCurrentFraction(float); }
-keepclassmembers class android.widget.ActivityChooserModel { java.lang.String access$500(android.widget.ActivityChooserModel); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void synchronizeMailboxStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class org.htmlcleaner.audit.ErrorType { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingListener { void systemStatusChanged(); }
-keepclassmembers class android.widget.ActivityChooserModel { android.content.Context access$300(android.widget.ActivityChooserModel); }
-keepclassmembers class android.animation.ValueAnimator { long getStartDelay(); }
-keepclassmembers class org.htmlcleaner.audit.ErrorType { void <clinit>(); }
-keepclassmembers class android.widget.ActivityChooserModel { boolean access$602(android.widget.ActivityChooserModel,boolean); }
-keepclassmembers class java.util.EnumSet { void <init>(java.lang.Class); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet noneOf(java.lang.Class); }
-keepclassmembers class android.text.Layout { android.text.Layout$Alignment getParagraphAlignment(int); }
-keepclassmembers class android.widget.ActivityChooserModel { java.lang.String access$400(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$2 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,long); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { java.util.concurrent.RunnableScheduledFuture take(); }
-keepclassmembers class android.animation.ValueAnimator { void setStartDelay(long); }
-keepclassmembers class android.widget.ActivityChooserModel { void <clinit>(); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatMode(int); }
-keepclassmembers class android.text.Layout { int getParagraphRight(int); }
-keepclassmembers class android.animation.ValueAnimator { void setRepeatCount(int); }
-keepclassmembers class android.animation.ValueAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.animation.ValueAnimator { void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { void <init>(android.graphics.drawable.InsetDrawable$InsetState,android.graphics.drawable.InsetDrawable,android.content.res.Resources); }
-keepclassmembers class android.text.Layout { int getParagraphLeadingMargin(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$2 { void execute(); }
-keepclassmembers class android.text.Layout { int getParagraphLeft(int); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet of(java.lang.Enum); }
-keepclassmembers class android.animation.ValueAnimator { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum); }
-keepclassmembers class java.util.EnumSet { java.util.EnumSet of(java.lang.Enum,java.lang.Enum); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { java.util.concurrent.RunnableScheduledFuture poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { boolean removeTreeNode(java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.animation.ValueAnimator { void start(); }
-keepclassmembers class android.text.Layout { float measurePara(android.text.TextPaint,java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { boolean canApplyTheme(); }
-keepclassmembers class android.animation.ValueAnimator { void start(boolean); }
-keepclassmembers class android.animation.ValueAnimator { void notifyStartListeners(); }
-keepclassmembers class android.animation.ValueAnimator { void cancel(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { android.database.sqlite.SQLiteConnection$PreparedStatement acquirePreparedStatement(java.lang.String); }
-keepclassmembers class android.util.LruCache { void <init>(int); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.util.LruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.util.LruCache { void resize(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void finalizePreparedStatement(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.animation.ValueAnimator { void end(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { int getChangingConfigurations(); }
-keepclassmembers class android.graphics.drawable.InsetDrawable$InsetState { boolean canConstantState(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void detachCancellationSignal(android.os.CancellationSignal); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void releasePreparedStatement(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void attachCancellationSignal(android.os.CancellationSignal); }
-keepclassmembers class android.util.LruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.EnumSet { boolean isValidType(java.lang.Class); }
-keepclassmembers class android.animation.ValueAnimator { boolean isRunning(); }
-keepclassmembers class android.animation.ValueAnimator { void endAnimation(android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class android.animation.ValueAnimator { boolean isStarted(); }
-keepclassmembers class android.animation.ValueAnimator { boolean canReverse(); }
-keepclassmembers class android.os.AsyncTask$4 { void <clinit>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void bindArguments(android.database.sqlite.SQLiteConnection$PreparedStatement,java.lang.Object[]); }
-keepclassmembers class android.text.Layout { java.lang.Object[] getParagraphSpans(android.text.Spanned,int,int,java.lang.Class); }
-keepclassmembers class android.animation.ValueAnimator { void reverse(); }
-keepclassmembers class android.view.InputDevice$1 { void <init>(); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Program32Header { void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long); }
-keepclassmembers class android.view.InputDevice$1 { android.view.InputDevice createFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.InputDevice$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.animation.ValueAnimator { void startAnimation(android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class android.util.XmlPullAttributes { void <init>(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.fsck.k9.preferences.Settings$BooleanSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeCount(); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getAttributeValue(int); }
-keepclassmembers class android.text.Layout { char getEllipsisChar(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.text.Layout { void ellipsize(int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class com.fsck.k9.preferences.Settings$BooleanSetting { void <init>(boolean); }
-keepclassmembers class android.util.LruCache { void trimToSize(int); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { boolean add(java.lang.Object); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getAttributeValue(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { java.lang.Object peek(); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class android.util.XmlPullAttributes { java.lang.String getPositionDescription(); }
-keepclassmembers class android.util.LruCache { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class android.animation.ValueAnimator { boolean delayedAnimationFrame(long); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode rotateLeft(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.text.Layout { void access$000(android.text.Layout,int,int,int,char[],int,android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.util.LruCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { boolean offer(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { java.lang.Object poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.text.Layout { void <clinit>(); }
-keepclassmembers class android.util.LruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeNameResource(int); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { void <init>(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue { java.lang.Object take(); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { boolean parentCanNotifyStatusChanged(); }
-keepclassmembers class android.animation.ValueAnimator { boolean animationFrame(long); }
-keepclassmembers class android.graphics.Canvas$EdgeType { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { void <init>(com.bumptech.glide.request.RequestCoordinator); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { boolean parentCanSetImage(); }
-keepclassmembers class android.util.LruCache { int sizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.util.XmlPullAttributes { boolean getAttributeBooleanValue(int,boolean); }
-keepclassmembers class android.graphics.Canvas$EdgeType { void <clinit>(); }
-keepclassmembers class android.util.LruCache { int safeSizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode rotateRight(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void throwIfStatementForbidden(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { void begin(); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { boolean parentIsAnyResourceSet(); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeResourceValue(int,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void applyBlockGuardPolicy(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { boolean canSetImage(com.bumptech.glide.request.Request); }
-keepclassmembers class android.util.LruCache { void evictAll(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { boolean isCacheable(int); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { boolean canNotifyStatusChanged(com.bumptech.glide.request.Request); }
-keepclassmembers class android.util.XmlPullAttributes { int getAttributeIntValue(int,int); }
-keepclassmembers class android.animation.ValueAnimator { boolean doAnimationFrame(long); }
-keepclassmembers class android.util.XmlPullAttributes { float getAttributeFloatValue(int,float); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { boolean isAnyResourceSet(); }
-keepclassmembers class android.animation.ValueAnimator { float getAnimatedFraction(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode balanceInsertion(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { void clear(); }
-keepclassmembers class com.fsck.k9.mailstore.util.DeferredFileOutputStream { void <init>(int,com.fsck.k9.mailstore.util.FileFactory); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { boolean isCancelled(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator clone(); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { boolean isResourceSet(); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { boolean isComplete(); }
-keepclassmembers class com.fsck.k9.EmailAddressValidator { void <clinit>(); }
-keepclassmembers class android.animation.ValueAnimator { void animateValue(float); }
-keepclassmembers class com.fsck.k9.mailstore.util.DeferredFileOutputStream { byte[] getData(); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { void onRequestSuccess(com.bumptech.glide.request.Request); }
-keepclassmembers class com.fsck.k9.mailstore.util.DeferredFileOutputStream { boolean isMemoryBacked(); }
-keepclassmembers class com.fsck.k9.EmailAddressValidator { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.util.DeferredFileOutputStream { java.io.File getFile(); }
-keepclassmembers class com.fsck.k9.EmailAddressValidator { boolean isValidAddressOnly(java.lang.CharSequence); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { boolean isRunning(); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { void pause(); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request); }
-keepclassmembers class android.ddm.DdmHandleViewDebug { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.util.DeferredFileOutputStream { java.io.OutputStream getStream(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$PreviewExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.util.DeferredFileOutputStream { void thresholdReached(); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.ValueAnimator$AnimationHandler getOrCreateAnimationHandler(); }
-keepclassmembers class java.security.SecureRandom { void <init>(); }
-keepclassmembers class com.bumptech.glide.request.ThumbnailRequestCoordinator { void recycle(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$PreviewExtractor { java.lang.String getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class android.os.ParcelFileDescriptor$1 { void <init>(); }
-keepclassmembers class android.ddm.DdmHandleExit { void register(); }
-keepclassmembers class android.animation.ValueAnimator { int getCurrentAnimationsCount(); }
-keepclassmembers class android.widget.TextView$Drawables { void resolveWithLayoutDirection(int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$PreviewExtractor { void <init>(); }
-keepclassmembers class android.animation.ValueAnimator { java.lang.String toString(); }
-keepclassmembers class android.animation.ValueAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator clone(); }
-keepclassmembers class android.widget.TextView$Drawables { void <init>(android.content.Context); }
-keepclassmembers class android.animation.ValueAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.animation.ValueAnimator { long access$000(android.animation.ValueAnimator); }
-keepclassmembers class org.apache.james.mime4j.field.ContentMD5FieldImpl$1 { void <init>(); }
-keepclassmembers class java.security.SecureRandom { void <init>(java.security.SecureRandomSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.ddm.DdmHandleExit { void <init>(); }
-keepclassmembers class java.security.SecureRandom { java.security.SecureRandom getInstance(java.lang.String); }
-keepclassmembers class android.animation.ValueAnimator { void <clinit>(); }
-keepclassmembers class android.ddm.DdmHandleExit { void <clinit>(); }
-keepclassmembers class android.animation.ValueAnimator { boolean access$200(android.animation.ValueAnimator,long); }
-keepclassmembers class android.animation.ValueAnimator { void access$100(android.animation.ValueAnimator,android.animation.ValueAnimator$AnimationHandler); }
-keepclassmembers class android.widget.TextView$Drawables { void updateDrawablesLayoutDirection(int); }
-keepclassmembers class org.apache.james.mime4j.field.ContentMD5FieldImpl$1 { org.apache.james.mime4j.dom.field.ContentMD5Field parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.animation.ValueAnimator { boolean access$302(android.animation.ValueAnimator,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void <init>(com.android.okio.BufferedSink,boolean); }
-keepclassmembers class org.apache.james.mime4j.field.ContentMD5FieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.widget.TextView$Drawables { void setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog$2 { void <init>(com.fsck.k9.activity.Accounts$ImportSelectionDialog,com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void connectionHeader(); }
-keepclassmembers class android.graphics.drawable.Ripple { void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,float,float); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void flush(); }
-keepclassmembers class com.jcraft.jzlib.ZStreamException { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void ackSettings(); }
-keepclassmembers class android.widget.TextView$Drawables { void applyErrorDrawableIfNeeded(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void synStream(boolean,boolean,int,int,int,int,java.util.List); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void pushPromise(int,int,java.util.List); }
-keepclassmembers class java.security.SecureRandom { void setSeed(byte[]); }
-keepclassmembers class com.jcraft.jzlib.ZStreamException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { void setup(int,float); }
-keepclassmembers class java.security.SecureRandom { void setSeed(long); }
-keepclassmembers class java.security.SecureRandom { java.security.Provider getProvider(); }
-keepclassmembers class java.security.SecureRandom { void nextBytes(byte[]); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean isHardwareAnimating(); }
-keepclassmembers class android.graphics.Region$Op { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.security.SecureRandom { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Ripple { void clampStartingPosition(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { java.util.concurrent.ConcurrentHashMap$TreeNode balanceDeletion(java.util.concurrent.ConcurrentHashMap$TreeNode,java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class android.graphics.Region$Op { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.Ripple { void onHotspotBoundsChanged(); }
-keepclassmembers class com.getkeepsafe.relinker.elf.ElfParser { long offsetFromVma(com.getkeepsafe.relinker.elf.Elf$Header,long,long); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView); }
-keepclassmembers class com.getkeepsafe.relinker.elf.ElfParser { com.getkeepsafe.relinker.elf.Elf$Header parseHeader(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { android.database.sqlite.SQLiteConnection$PreparedStatement obtainPreparedStatement(java.lang.String,long,int,int,boolean); }
-keepclassmembers class com.getkeepsafe.relinker.elf.ElfParser { void <init>(java.io.File); }
-keepclassmembers class com.android.okio.Base64 { java.lang.String encode(byte[]); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String trimSqlForDisplay(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void rstStream(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.widget.AbsListView$CheckForKeyLongPress { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void recyclePreparedStatement(android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager getDefault(); }
-keepclassmembers class android.app.ActivityManagerNative { android.app.IActivityManager asInterface(android.os.IBinder); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void access$200(android.database.sqlite.SQLiteConnection,android.database.sqlite.SQLiteConnection$PreparedStatement); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void data(boolean,int,com.android.okio.OkBuffer,int); }
-keepclassmembers class com.getkeepsafe.relinker.elf.ElfParser { java.util.List parseNeededDependencies(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void sendDataFrame(int,int,com.android.okio.OkBuffer,int); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { java.lang.String access$300(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { android.os.Parcelable access$100(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean drawHardware(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { android.content.Context access$1000(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { java.lang.String access$1200(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { android.os.Parcelable access$102(com.fsck.k9.fragment.MessageListFragment,android.os.Parcelable); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { byte[] access$500(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { java.lang.String[] access$1400(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.database.sqlite.SQLiteConnection { void <clinit>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { int access$1302(com.fsck.k9.fragment.MessageListFragment,int); }
-keepclassmembers class android.graphics.drawable.Ripple { boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.Account access$1100(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { android.view.LayoutInflater access$1600(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.activity.misc.ContactPictureLoader access$1800(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.search.LocalSearch access$1500(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase$2 { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$200(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { int access$1700(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.database.sqlite.SQLiteDatabase$2 { boolean accept(java.io.File); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean access$1900(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean access$2100(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.android.okio.Base64 { void <clinit>(); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void <init>(float,float); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$2 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean access$2200(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.FontSizes access$2000(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { float getFloatValue(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$2 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.Account access$2300(com.fsck.k9.fragment.MessageListFragment,android.database.Cursor); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void writeNameValueBlockToBuffer(java.util.List); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { java.lang.Object getValue(); }
-keepclassmembers class dalvik.system.DexPathList { void <init>(java.lang.ClassLoader,java.lang.String,java.lang.String,java.io.File); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { void setValue(java.lang.Object); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.activity.MessageReference access$2700(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { int access$2500(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$2800(com.fsck.k9.fragment.MessageListFragment,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { java.util.Set access$2600(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$2900(com.fsck.k9.fragment.MessageListFragment,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean access$2400(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void settings(com.android.okhttp.internal.spdy.Settings); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$FolderListFilter { void <init>(com.fsck.k9.activity.FolderList$FolderListAdapter); }
-keepclassmembers class android.graphics.drawable.Ripple { void getBounds(android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$300(com.fsck.k9.fragment.MessageListFragment,java.lang.String,boolean); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe$FloatKeyframe clone(); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewResult$PreviewType { void <clinit>(); }
-keepclassmembers class com.getkeepsafe.relinker.elf.ElfParser { void read(java.nio.ByteBuffer,long,int); }
-keepclassmembers class android.animation.Keyframe$FloatKeyframe { android.animation.Keyframe clone(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean access$3000(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.graphics.drawable.Ripple { void move(float,float); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { android.view.ActionMode access$3202(com.fsck.k9.fragment.MessageListFragment,android.view.ActionMode); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$3300(com.fsck.k9.fragment.MessageListFragment,boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.Preferences access$3100(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { android.view.ActionMode access$3200(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment[] values(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.controller.MessagingController access$3400(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.graphics.drawable.Ripple { void enter(); }
-keepclassmembers class android.text.Layout$Alignment { android.text.Layout$Alignment valueOf(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$FolderListFilter { android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void ping(boolean,int,int); }
-keepclassmembers class android.text.Layout$Alignment { void <init>(java.lang.String,int); }
-keepclassmembers class com.getkeepsafe.relinker.elf.ElfParser { short readByte(java.nio.ByteBuffer,long); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { java.util.List access$3500(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$3600(com.fsck.k9.fragment.MessageListFragment,java.util.List); }
-keepclassmembers class com.getkeepsafe.relinker.elf.ElfParser { int readHalf(java.nio.ByteBuffer,long); }
-keepclassmembers class android.text.Layout$Alignment { void <clinit>(); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewResult$PreviewType { void <init>(java.lang.String,int); }
-keepclassmembers class dalvik.system.DexPathList { java.util.ArrayList splitDexPath(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { int access$3702(com.fsck.k9.fragment.MessageListFragment,int); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { int access$3700(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$3900(com.fsck.k9.fragment.MessageListFragment,java.util.List); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$3800(com.fsck.k9.fragment.MessageListFragment,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$400(com.fsck.k9.fragment.MessageListFragment,boolean); }
-keepclassmembers class com.getkeepsafe.relinker.elf.ElfParser { long readLong(java.nio.ByteBuffer,long); }
-keepclassmembers class com.fsck.k9.message.extractors.PreviewResult$PreviewType { com.fsck.k9.message.extractors.PreviewResult$PreviewType[] values(); }
-keepclassmembers class android.graphics.drawable.Ripple { void exit(); }
-keepclassmembers class dalvik.system.DexPathList { java.io.File[] splitLibraryPath(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$1 { java.lang.Object initialValue(); }
-keepclassmembers class dalvik.system.DexPathList { java.util.ArrayList splitPaths(java.lang.String,java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$FolderListFilter { void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$4000(com.fsck.k9.fragment.MessageListFragment,java.util.List); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$1 { java.text.SimpleDateFormat initialValue(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$4200(com.fsck.k9.fragment.MessageListFragment,java.util.List); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void access$4100(com.fsck.k9.fragment.MessageListFragment,java.util.List); }
-keepclassmembers class com.getkeepsafe.relinker.elf.ElfParser { java.lang.String readString(java.nio.ByteBuffer,long); }
-keepclassmembers class android.text.method.Touch { void scrollTo(android.widget.TextView,android.text.Layout,int,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.fragment.MessageListFragment$MessageListFragmentListener access$500(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$13 { void <init>(com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.Map); }
-keepclassmembers class dalvik.system.DexPathList { void splitAndAdd(java.lang.String,boolean,java.util.ArrayList); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void goAway(int,com.android.okhttp.internal.spdy.ErrorCode,byte[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.fragment.MessageListFragment$MessageListAdapter access$700(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <init>(java.util.List,byte[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.handmark.pulltorefresh.library.PullToRefreshListView access$800(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.fragment.MessageListFragment$MessageListHandler access$900(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { int adapterToListViewPosition(int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { android.widget.ListView access$600(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class android.graphics.drawable.Ripple { void startPendingHardwareExit(android.view.HardwareCanvas,android.graphics.Paint); }
-keepclassmembers class com.getkeepsafe.relinker.elf.ElfParser { long readWord(java.nio.ByteBuffer,long); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(java.lang.String,boolean,org.apache.harmony.security.x509.ExtensionValue); }
-keepclassmembers class android.graphics.drawable.Ripple { void createPendingHardwareExit(int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$13 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { java.lang.String buildSortOrder(); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexPathList$Element[] makeDexElements(java.util.ArrayList,java.io.File,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { org.apache.harmony.security.x509.CRLDistributionPoints decode(byte[]); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$1 { void <init>(com.github.amlcurran.showcaseview.ShowcaseView,com.github.amlcurran.showcaseview.targets.Target,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$13 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(java.lang.String,byte[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void windowUpdate(int,long); }
-keepclassmembers class com.android.okhttp.internal.spdy.Spdy3$Writer { void close(); }
-keepclassmembers class java.lang.ReflectiveOperationException { void <init>(java.lang.String); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$1 { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],byte[]); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$1 { void <init>(com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.activity.compose.RecipientPresenter); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void changeSort(com.fsck.k9.Account$SortType,java.lang.Boolean); }
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader$Factory { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$1 { void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { java.lang.String getId(); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <init>(java.util.List,byte[],org.apache.harmony.security.x509.CRLDistributionPoints$1); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(java.lang.String,boolean,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader$Factory { com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory); }
-keepclassmembers class com.bumptech.glide.load.model.stream.HttpUrlGlideUrlLoader$Factory { void teardown(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$1 { void onTokenChanged(java.lang.Object); }
-keepclassmembers class android.text.method.Touch { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[]); }
-keepclassmembers class dalvik.system.DexPathList { dalvik.system.DexFile loadDexFile(java.io.File,java.io.File); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager$ReceiverRecord { void <init>(android.content.IntentFilter,android.content.BroadcastReceiver); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { int hashCode(); }
-keepclassmembers class java.util.concurrent.FutureTask$WaitNode { void <init>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean checkCopyOrMovePossible(java.util.List,com.fsck.k9.fragment.MessageListFragment$FolderOperation); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { boolean checkInvariants(java.util.concurrent.ConcurrentHashMap$TreeNode); }
-keepclassmembers class org.apache.harmony.security.x509.CRLDistributionPoints { void <clinit>(); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.String optimizedPathFor(java.io.File,java.io.File); }
-keepclassmembers class dalvik.system.DexPathList { java.lang.Class findClass(java.lang.String,java.util.List); }
-keepclassmembers class android.graphics.drawable.Ripple { void jump(); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager$ReceiverRecord { java.lang.String toString(); }
-keepclassmembers class org.apache.james.mime4j.codec.DecoderUtil { java.lang.String decodeB(java.lang.String,java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.james.mime4j.codec.DecoderUtil { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.codec.DecoderUtil { byte[] decodeBase64(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.graphics.drawable.Ripple { void exitSoftware(int,int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void decodeExtensionValue(); }
-keepclassmembers class android.graphics.drawable.Ripple { void endSoftwareAnimations(); }
-keepclassmembers class org.apache.james.mime4j.codec.DecoderUtil { java.lang.String decodeEncodedWords(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.graphics.drawable.Ripple { android.graphics.Paint getTempPaint(android.graphics.Paint); }
-keepclassmembers class dalvik.system.DexPathList { java.net.URL findResource(java.lang.String); }
-keepclassmembers class org.apache.http.impl.DefaultConnectionReuseStrategy { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class org.apache.http.impl.DefaultConnectionReuseStrategy { boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class dalvik.system.DexPathList { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancel(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void cleanupSelected(android.database.Cursor); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void computeBatchDirection(); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancelSoftwareAnimations(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$TreeBin { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.codec.DecoderUtil { java.lang.String decodeQ(java.lang.String,java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(char,float[]); }
-keepclassmembers class android.graphics.drawable.Ripple { void cancelHardwareAnimations(boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void computeSelectAllVisibility(); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(android.util.PathParser$PathDataNode); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean onStateChange(int[]); }
-keepclassmembers class org.apache.james.mime4j.codec.DecoderUtil { void monitor(org.apache.james.mime4j.codec.DecodeMonitor,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean selectTransition(int); }
-keepclassmembers class android.util.PathParser$PathDataNode { void nodesToPath(android.util.PathParser$PathDataNode[],android.graphics.Path); }
-keepclassmembers class org.apache.james.mime4j.codec.DecoderUtil { byte[] decodeQuotedPrintable(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { boolean isStateful(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void copy(java.util.List,java.lang.String); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollY(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void copyOrMove(java.util.List,java.lang.String,com.fsck.k9.fragment.MessageListFragment$FolderOperation); }
-keepclassmembers class android.text.method.Touch { int getInitialScrollX(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.util.PathParser$PathDataNode { void interpolatePathDataNode(android.util.PathParser$PathDataNode,android.util.PathParser$PathDataNode,float); }
-keepclassmembers class android.graphics.drawable.Ripple { void access$100(android.graphics.drawable.Ripple); }
-keepclassmembers class android.graphics.drawable.Ripple { void removeSelf(); }
-keepclassmembers class android.graphics.drawable.Ripple { void <clinit>(); }
-keepclassmembers class android.text.method.Touch { boolean isActivelySelecting(android.text.Spannable); }
-keepclassmembers class android.database.MatrixCursor { void <init>(java.lang.String[],int); }
-keepclassmembers class org.apache.http.impl.DefaultConnectionReuseStrategy { org.apache.http.TokenIterator createTokenIterator(org.apache.http.HeaderIterator); }
-keepclassmembers class android.graphics.drawable.Ripple { void invalidateSelf(); }
-keepclassmembers class org.apache.james.mime4j.codec.DecoderUtil { java.lang.String recombine(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.database.MatrixCursor { java.lang.Object get(int); }
-keepclassmembers class android.text.method.Touch { boolean isSelectionStarted(android.text.Spannable); }
-keepclassmembers class libcore.io.Libcore { void <clinit>(); }
-keepclassmembers class android.util.PathParser$PathDataNode { void addCommand(android.graphics.Path,float[],char,char,float[]); }
-keepclassmembers class org.apache.james.mime4j.codec.DecoderUtil { java.lang.String replaceUnderscores(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.codec.DecoderUtil { java.lang.String tryDecodeEncodedWord(java.lang.String,java.lang.String,java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.android.okio.Segment { com.android.okio.Segment push(com.android.okio.Segment); }
-keepclassmembers class com.android.okio.Segment { void <init>(); }
-keepclassmembers class com.android.okio.Segment { com.android.okio.Segment pop(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void jumpToCurrentState(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback { void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback { void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader,com.bumptech.glide.load.resource.gif.GifFrameLoader$1); }
-keepclassmembers class android.database.MatrixCursor { void <init>(java.lang.String[]); }
-keepclassmembers class android.database.MatrixCursor { void addRow(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void decodeArguments(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void createCacheBroadcastReceiver(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <init>(int[],boolean,byte[],byte[],byte[],org.apache.harmony.security.x509.ExtensionValue,org.apache.harmony.security.x509.Extension$1); }
-keepclassmembers class com.android.okio.Segment { com.android.okio.Segment split(int); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { int[] access$100(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void init(); }
-keepclassmembers class com.fsck.k9.message.SimpleMessageFormat { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okio.Segment { void compact(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback { boolean handleMessage(android.os.Message); }
-keepclassmembers class com.fsck.k9.message.SimpleMessageFormat { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseTransition(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.os.FileUtils { boolean contains(java.io.File,java.io.File); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition$1 { void onCheckedChanged(android.widget.CompoundButton,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { boolean access$200(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class android.database.MatrixCursor { void ensureCapacity(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupComposition$1 { void <init>(com.fsck.k9.activity.setup.AccountSetupComposition); }
-keepclassmembers class com.android.okhttp.Request$Builder { void <init>(com.android.okhttp.Request); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { byte[] access$300(org.apache.harmony.security.x509.Extension); }
-keepclassmembers class android.widget.RemoteViews$ViewPaddingAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.x509.Extension { void <clinit>(); }
-keepclassmembers class com.android.okio.Segment { void writeTo(com.android.okio.Segment,int); }
-keepclassmembers class android.widget.RemoteViews$ViewPaddingAction { void <init>(android.widget.RemoteViews,int,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { int parseItem(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.database.MatrixCursor { int getCount(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void displayFolderChoice(int,java.lang.String,java.lang.String,java.lang.String,java.util.List); }
-keepclassmembers class android.database.MatrixCursor { java.lang.String getString(int); }
-keepclassmembers class com.android.okhttp.Request$Builder { void <init>(); }
-keepclassmembers class android.database.MatrixCursor { java.lang.String[] getColumnNames(); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { void <init>(); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Builder url(java.net.URL); }
-keepclassmembers class android.database.MatrixCursor { int getInt(int); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verify(java.lang.String,javax.net.ssl.SSLSession); }
-keepclassmembers class android.widget.RemoteViews$ViewPaddingAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String); }
-keepclassmembers class android.database.MatrixCursor { long getLong(int); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verify(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf$DynamicStructure { void <init>(); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Builder setUserAgent(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Builder addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verifyAsIpAddress(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState cloneConstantState(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { int getAdapterPositionForSelectedMessage(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.Account getAccountFromCursor(android.database.Cursor); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void clearMutated(); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Builder method(java.lang.String,com.android.okhttp.Request$Body); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { java.lang.String getDialogTag(int); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { java.util.List getCheckedMessages(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.mailstore.LocalFolder getFolder(java.lang.String,com.fsck.k9.Account); }
-keepclassmembers class com.android.okhttp.Request$Builder { java.net.URL access$000(com.android.okhttp.Request$Builder); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { java.lang.String access$100(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.activity.FolderInfoHolder getFolderInfoHolder(java.lang.String,com.fsck.k9.Account); }
-keepclassmembers class com.android.okhttp.Request$Builder { java.lang.String access$100(com.android.okhttp.Request$Builder); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <clinit>(); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request build(); }
-keepclassmembers class android.os.FileUtils { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.content.res.Resources,android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class com.android.okhttp.Request$Builder { void <init>(com.android.okhttp.Request,com.android.okhttp.Request$1); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Request$Body access$300(com.android.okhttp.Request$Builder); }
-keepclassmembers class com.android.okhttp.Request$Builder { com.android.okhttp.Headers$Builder access$200(com.android.okhttp.Request$Builder); }
-keepclassmembers class android.widget.SeekBar { void <init>(android.content.Context); }
-keepclassmembers class com.android.okhttp.Request$Builder { java.lang.Object access$400(com.android.okhttp.Request$Builder); }
-keepclassmembers class android.widget.SeekBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { android.view.View getFooterView(android.view.ViewGroup); }
-keepclassmembers class android.widget.SeekBar { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.activity.MessageReference getMessageAtPosition(int); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void <init>(android.widget.RemoteViews,int,java.lang.String,android.graphics.Bitmap); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { int getPosition(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.widget.SeekBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.mailstore.AttachmentViewInfo { void <init>(java.lang.String,java.lang.String,long,android.net.Uri,boolean,com.fsck.k9.mail.Part,boolean); }
-keepclassmembers class android.widget.SeekBar { void setOnSeekBarChangeListener(android.widget.SeekBar$OnSeekBarChangeListener); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { boolean verifyHostName(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.SeekBar { void onProgressRefresh(float,boolean); }
-keepclassmembers class android.widget.SeekBar { void onStopTrackingTouch(); }
-keepclassmembers class android.widget.SeekBar { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.SeekBar { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.SeekBar { void onStartTrackingTouch(); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { int getPositionForUniqueId(long); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class java.net.URISyntaxException { java.lang.String getMessage(); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.android.internal.os.BinderInternal { android.os.IBinder getContextObject(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { java.lang.String getThreadId(com.fsck.k9.search.LocalSearch); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { java.lang.String getSenderAddressFromCursor(android.database.Cursor); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.activity.MessageReference getReferenceForPosition(int); }
-keepclassmembers class com.android.okhttp.internal.tls.OkHostnameVerifier { void <clinit>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { java.util.Map groupMessagesByAccount(java.util.List); }
-keepclassmembers class com.android.internal.os.BinderInternal { void <clinit>(); }
-keepclassmembers class java.net.URISyntaxException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Canvas { long getNativeCanvasWrapper(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.activity.MessageReference getSelectedMessage(); }
-keepclassmembers class android.view.inputmethod.ComposingText { void <init>(); }
-keepclassmembers class android.animation.ObjectAnimator { void setProperty(android.util.Property); }
-keepclassmembers class android.widget.RemoteViews$BitmapReflectionAction { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context); }
-keepclassmembers class android.graphics.Canvas { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void <init>(android.graphics.Bitmap); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void initializeLayout(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class android.content.res.Resources$Theme { java.lang.String access$000(android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void handleSwipe(android.view.MotionEvent,boolean); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getPropertyName(); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void initializeMessageList(); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int,java.lang.Throwable); }
-keepclassmembers class android.system.ErrnoException { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void initializePullToRefresh(android.view.LayoutInflater,android.view.View); }
-keepclassmembers class android.animation.ObjectAnimator { void setPropertyName(java.lang.String); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.fsck.k9.mail.BodyPart { com.fsck.k9.mail.Multipart getParent(); }
-keepclassmembers class android.graphics.Canvas { boolean isRecordingFor(java.lang.Object); }
-keepclassmembers class android.graphics.Canvas { boolean isHardwareAccelerated(); }
-keepclassmembers class android.system.ErrnoException { java.lang.String getMessage(); }
-keepclassmembers class android.graphics.Canvas { void setBitmap(android.graphics.Bitmap); }
-keepclassmembers class java.nio.channels.NonReadableChannelException { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.BodyPart { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.BodyPart { void setParent(com.fsck.k9.mail.Multipart); }
-keepclassmembers class android.system.ErrnoException { java.net.SocketException rethrowAsSocketException(); }
-keepclassmembers class com.fsck.k9.mail.BodyPart { java.lang.String getServerExtra(); }
-keepclassmembers class java.nio.charset.IllegalCharsetNameException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void initializeSortSettings(); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String getNameForTrace(); }
-keepclassmembers class com.fsck.k9.mail.BodyPart { void setServerExtra(java.lang.String); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void insertReorderBarrier(); }
-keepclassmembers class android.graphics.Canvas { void insertInorderBarrier(); }
-keepclassmembers class android.widget.RemoteViews$SetEmptyView { void <init>(android.widget.RemoteViews,int,int); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isCheckMailAllowed(); }
-keepclassmembers class android.animation.ObjectAnimator { void <init>(java.lang.Object,android.util.Property); }
-keepclassmembers class android.widget.RemoteViews$SetEmptyView { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.view.inputmethod.CompletionInfo { void <init>(long,int,java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isPullToRefreshAllowed(); }
-keepclassmembers class com.fsck.k9.mailstore.FileBackedBody { void <init>(java.io.File,java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { int listViewToAdapterPosition(int); }
-keepclassmembers class android.system.ErrnoException { java.io.IOException rethrowAsIOException(); }
-keepclassmembers class com.fsck.k9.mailstore.FileBackedBody { java.io.InputStream getInputStream(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]); }
-keepclassmembers class com.fsck.k9.mailstore.FileBackedBody { long getSize(); }
-keepclassmembers class com.fsck.k9.mailstore.FileBackedBody { java.lang.String getEncoding(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { com.fsck.k9.fragment.MessageListFragment newInstance(com.fsck.k9.search.LocalSearch,boolean,boolean); }
-keepclassmembers class android.widget.RemoteViews$SetEmptyView { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.graphics.Canvas { int save(); }
-keepclassmembers class com.fsck.k9.mailstore.FileBackedBody { void setEncoding(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void move(java.util.List,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.FileBackedBody { void writeTo(java.io.OutputStream); }
-keepclassmembers class android.widget.AbsListView { void initAbsListView(); }
-keepclassmembers class javax.xml.parsers.SAXParserFactory { void <init>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onArchive(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class javax.xml.parsers.SAXParserFactory { javax.xml.parsers.SAXParserFactory newInstance(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onArchive(java.util.List); }
-keepclassmembers class android.widget.AbsListView { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class java.lang.Throwable { void <init>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onCopy(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.widget.AbsListView { void setOverScrollMode(int); }
-keepclassmembers class android.graphics.Canvas { int saveLayer(float,float,float,float,android.graphics.Paint,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onCopy(java.util.List); }
-keepclassmembers class android.widget.AbsListView { boolean isItemChecked(int); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { int save(int); }
-keepclassmembers class android.view.inputmethod.CompletionInfo { void <clinit>(); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onDebugClearLocally(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onDelete(java.util.List); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onDelete(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$22 { void <init>(com.fsck.k9.mailstore.LocalStore,java.util.List,java.lang.String,boolean); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String,java.lang.Throwable,boolean,boolean); }
-keepclassmembers class android.text.format.Time$TimeCalculator { void <init>(java.lang.String); }
-keepclassmembers class android.text.format.Time$TimeCalculator { void setTimeInMillis(long); }
-keepclassmembers class android.widget.AbsListView { void clearChoices(); }
-keepclassmembers class android.widget.AbsListView { void setItemChecked(int,boolean); }
-keepclassmembers class java.lang.Throwable { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable fillInStackTrace(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$22 { void doDbWork(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onDeleteConfirmed(java.util.List); }
-keepclassmembers class android.graphics.Canvas { int saveLayerAlpha(float,float,float,float,int,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onExpunge(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AuthTypeHolder { void <init>(com.fsck.k9.mail.AuthType,android.content.res.Resources); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onMove(java.util.List); }
-keepclassmembers class android.graphics.Canvas { int getSaveCount(); }
-keepclassmembers class android.graphics.Canvas { void restore(); }
-keepclassmembers class java.lang.Throwable { java.lang.String getMessage(); }
-keepclassmembers class com.fsck.k9.activity.setup.AuthTypeHolder { int resourceId(); }
-keepclassmembers class android.util.PathParser$PathDataNode { void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean); }
-keepclassmembers class java.lang.Throwable { java.lang.String getLocalizedMessage(); }
-keepclassmembers class android.text.format.Time$TimeCalculator { libcore.util.ZoneInfo lookupZoneInfo(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void translate(float,float); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$22 { java.lang.String getListItem(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AuthTypeHolder { void setInsecure(boolean); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void populate(int,int); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float); }
-keepclassmembers class com.fsck.k9.activity.setup.AuthTypeHolder { java.lang.String toString(); }
-keepclassmembers class android.graphics.Canvas { void scale(float,float,float,float); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onMove(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.text.format.Time$TimeCalculator { void updateZoneInfoFromTimeZone(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$22 { int getListSize(); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { int getSelectedPosition(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onSpam(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$22 { void postDbWork(); }
-keepclassmembers class android.graphics.Canvas { void rotate(float); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { int getAmountToScroll(); }
-keepclassmembers class android.widget.FastScroller$2 { void <init>(android.widget.FastScroller); }
-keepclassmembers class android.widget.ListView$ArrowScrollFocusResult { void <init>(android.widget.ListView$1); }
-keepclassmembers class android.graphics.Canvas { void rotate(float,float,float); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onSpam(java.util.List); }
-keepclassmembers class android.widget.FastScroller$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.notification.AddNotificationResult { void <init>(com.fsck.k9.notification.NotificationHolder,boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onSpamConfirmed(java.util.List); }
-keepclassmembers class android.graphics.Canvas { void concat(android.graphics.Matrix); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(); }
-keepclassmembers class com.fsck.k9.notification.AddNotificationResult { com.fsck.k9.notification.AddNotificationResult newNotification(com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class android.graphics.Canvas { void restoreToCount(int); }
-keepclassmembers class android.widget.AbsListView { boolean performItemClick(android.view.View,int,long); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getStackTrace(); }
-keepclassmembers class com.fsck.k9.notification.AddNotificationResult { com.fsck.k9.notification.NotificationHolder getNotificationHolder(); }
-keepclassmembers class com.fsck.k9.notification.AddNotificationResult { int getNotificationId(); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void <init>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onToggleFlag(com.fsck.k9.mail.Flag,int); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthInputStream { void <init>(org.apache.http.io.SessionInputBuffer,long); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationRepeat(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.notification.AddNotificationResult { boolean shouldCancelNotification(); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(android.graphics.Rect,android.graphics.Region$Op); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] getInternalStackTrace(); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationPause(android.animation.Animator); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthInputStream { void close(); }
-keepclassmembers class android.animation.AnimatorListenerAdapter { void onAnimationResume(android.animation.Animator); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintStream); }
-keepclassmembers class java.lang.Throwable { int countDuplicates(java.lang.StackTraceElement[],java.lang.StackTraceElement[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void reSort(); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthInputStream { int read(); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.io.PrintWriter); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void openMessageAtPosition(int); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void recalculateSelectionCount(); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthInputStream { int read(byte[],int,int); }
-keepclassmembers class java.lang.Throwable { void printStackTrace(java.lang.Appendable,java.lang.String,java.lang.StackTraceElement[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void resetActionMode(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$1 { void <init>(com.fsck.k9.provider.EmailProvider,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[]); }
-keepclassmembers class android.graphics.Canvas { boolean clipPath(android.graphics.Path,android.graphics.Region$Op); }
-keepclassmembers class android.widget.AbsListView { void updateOnScreenCheckedViews(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLengthFieldImpl { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLengthFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthInputStream { int read(byte[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void restartLoader(); }
-keepclassmembers class org.apache.http.impl.io.ContentLengthInputStream { long skip(long); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void restoreInstanceState(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$1 { android.database.Cursor doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.widget.AbsListView { int getChoiceMode(); }
-keepclassmembers class android.widget.AbsListView { void setChoiceMode(int); }
-keepclassmembers class android.animation.ObjectAnimator { void setIntValues(int[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void restoreSelectedMessages(android.os.Bundle); }
-keepclassmembers class android.view.View$BaseSavedState { void <init>(android.os.Parcel); }
-keepclassmembers class android.animation.ObjectAnimator { void setFloatValues(float[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void saveListState(android.os.Bundle); }
-keepclassmembers class android.util.PathParser$PathDataNode { void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double); }
-keepclassmembers class android.view.View$BaseSavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.view.View$BaseSavedState { void <clinit>(); }
-keepclassmembers class android.transition.AutoTransition { void <init>(); }
-keepclassmembers class android.transition.AutoTransition { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.AbsListView { boolean contentFits(); }
-keepclassmembers class android.text.Selection$START { void <init>(); }
-keepclassmembers class android.graphics.Canvas { boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void saveSelectedMessages(android.os.Bundle); }
-keepclassmembers class android.text.Selection$START { void <init>(android.text.Selection$1); }
-keepclassmembers class java.lang.Throwable { java.lang.String toString(); }
-keepclassmembers class android.transition.AutoTransition { void init(); }
-keepclassmembers class android.animation.ObjectAnimator { void setObjectValues(java.lang.Object[]); }
-keepclassmembers class android.graphics.Canvas { boolean getClipBounds(android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.notification.AddNotificationResult { com.fsck.k9.notification.AddNotificationResult replaceNotification(com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class android.view.RenderNode { void <init>(java.lang.String,android.view.View); }
-keepclassmembers class android.text.format.Time$TimeCalculator { void copyFieldsToTime(android.text.format.Time); }
-keepclassmembers class android.support.v4.app.TaskStackBuilderHoneycomb { android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable initCause(java.lang.Throwable); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollEnabled(boolean); }
-keepclassmembers class android.animation.ObjectAnimator { void setAutoCancel(boolean); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerEnabledUiThread(boolean); }
-keepclassmembers class android.animation.ObjectAnimator { boolean hasSameTargetAndProperties(android.animation.Animator); }
-keepclassmembers class android.view.RenderNode { android.view.RenderNode create(java.lang.String,android.view.View); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void <init>(com.android.okhttp.internal.spdy.SpdyConnection$Builder); }
-keepclassmembers class java.lang.Throwable { java.lang.Throwable getCause(); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(float,float,float,float); }
-keepclassmembers class android.graphics.Canvas { boolean clipRect(int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollStyle(int); }
-keepclassmembers class java.lang.Throwable { void addSuppressed(java.lang.Throwable); }
-keepclassmembers class android.graphics.Canvas { void drawColor(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollAlwaysVisible(boolean); }
-keepclassmembers class android.view.RenderNode { void end(android.view.HardwareCanvas); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void setFlagForSelected(com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class android.animation.ObjectAnimator { void start(); }
-keepclassmembers class android.widget.AbsListView { void setFastScrollerAlwaysVisibleUiThread(boolean); }
-keepclassmembers class android.widget.AbsListView { boolean isOwnerThread(); }
-keepclassmembers class android.view.RenderNode { void destroyDisplayListData(); }
-keepclassmembers class android.text.Html$HtmlParser { org.ccil.cowan.tagsoup.HTMLSchema access$000(); }
-keepclassmembers class android.text.Html$HtmlParser { void <clinit>(); }
-keepclassmembers class android.view.RenderNode { boolean isValid(); }
-keepclassmembers class android.graphics.Canvas { void drawLine(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { long getNativeDisplayList(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$1 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.widget.AbsListView { int getVerticalScrollbarWidth(); }
-keepclassmembers class android.graphics.Canvas { void drawLines(float[],int,int,android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { boolean hasIdentityMatrix(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$2 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.view.RenderNode { void getMatrix(android.graphics.Matrix); }
-keepclassmembers class android.widget.AbsListView { boolean isFastScrollEnabled(); }
-keepclassmembers class android.graphics.Canvas { void drawLines(float[],android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { void getInverseMatrix(android.graphics.Matrix); }
-keepclassmembers class java.lang.Throwable { java.lang.Object nativeFillInStackTrace(); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { boolean setLayerType(int); }
-keepclassmembers class android.widget.AbsListView { void setScrollBarStyle(int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void setFlag(int,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class com.fsck.k9.view.RigidWebView$1 { void <init>(com.fsck.k9.view.RigidWebView); }
-keepclassmembers class android.view.RenderNode { boolean setLayerPaint(android.graphics.Paint); }
-keepclassmembers class android.widget.AbsListView { boolean isVerticalScrollBarHidden(); }
-keepclassmembers class com.fsck.k9.view.RigidWebView$1 { void run(); }
-keepclassmembers class android.widget.AbsListView { void setSmoothScrollbarEnabled(boolean); }
-keepclassmembers class android.graphics.Canvas { void drawRect(android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void setOnScrollListener(android.widget.AbsListView$OnScrollListener); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.Protocol getProtocol(); }
-keepclassmembers class android.view.AbsSavedState$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.lang.String getFirstHeader(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.SpdyStream getStream(int); }
-keepclassmembers class android.animation.ObjectAnimator { void initAnimation(); }
-keepclassmembers class android.view.RenderNode { boolean setClipToBounds(boolean); }
-keepclassmembers class android.widget.AbsListView { void invokeOnItemScrollListener(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void parse(java.io.InputStream,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.SpdyStream removeStream(int); }
-keepclassmembers class android.view.RenderNode { boolean setProjectBackwards(boolean); }
-keepclassmembers class android.graphics.Canvas { void drawOval(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.graphics.Canvas { void drawRect(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(android.util.PathParser$PathDataNode,android.util.PathParser$1); }
-keepclassmembers class android.view.RenderNode { boolean setOutline(android.graphics.Outline); }
-keepclassmembers class android.util.PathParser$PathDataNode { char access$100(android.util.PathParser$PathDataNode); }
-keepclassmembers class android.widget.AbsListView { void sendAccessibilityEvent(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void setIdle(boolean); }
-keepclassmembers class android.util.PathParser$PathDataNode { float[] access$200(android.util.PathParser$PathDataNode); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.Object getTarget(); }
-keepclassmembers class android.graphics.Canvas { void drawOval(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean isIdle(); }
-keepclassmembers class android.util.PathParser$PathDataNode { void <init>(char,float[],android.util.PathParser$1); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.view.RenderNode { boolean setProjectionReceiver(boolean); }
-keepclassmembers class android.animation.ObjectAnimator { void setTarget(java.lang.Object); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator setDuration(long); }
-keepclassmembers class android.graphics.Canvas { void drawCircle(float,float,float,android.graphics.Paint); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { long getIdleStartTimeNs(); }
-keepclassmembers class android.widget.AbsListView { int getSelectionModeForAccessibility(); }
-keepclassmembers class org.apache.james.mime4j.stream.RawField { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.stream.RawField { void <init>(org.apache.james.mime4j.util.ByteSequence,int,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void <init>(int,com.android.okhttp.internal.spdy.SpdyConnection,boolean,boolean,int,java.util.List); }
-keepclassmembers class android.view.RenderNode { boolean setStaticMatrix(android.graphics.Matrix); }
-keepclassmembers class android.animation.ObjectAnimator { void setupEndValues(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.SpdyStream newStream(int,java.util.List,boolean,boolean); }
-keepclassmembers class android.animation.ObjectAnimator { void setupStartValues(); }
-keepclassmembers class org.apache.james.mime4j.stream.RawField { java.lang.String getBody(); }
-keepclassmembers class android.view.RenderNode { boolean setAnimationMatrix(android.graphics.Matrix); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.SpdyStream newStream(java.util.List,boolean,boolean); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void addRawHeader(java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { boolean setAlpha(float); }
-keepclassmembers class android.animation.ObjectAnimator { void animateValue(float); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void setPullToRefreshEnabled(boolean); }
-keepclassmembers class android.view.RenderNode { boolean setHasOverlappingRendering(boolean); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void addSentDate(java.util.Date,boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void setSelectionState(boolean); }
-keepclassmembers class android.graphics.Canvas { void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { float getElevation(); }
-keepclassmembers class android.view.RenderNode { boolean setElevation(float); }
-keepclassmembers class android.widget.AbsListView { void setScrollingCacheEnabled(boolean); }
-keepclassmembers class org.apache.james.mime4j.stream.RawField { int getDelimiterIdx(); }
-keepclassmembers class android.graphics.Canvas { void drawPath(android.graphics.Path,android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationX(float); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ObjectAnimator clone(); }
-keepclassmembers class org.apache.james.mime4j.stream.RawField { java.lang.String getName(); }
-keepclassmembers class android.widget.AbsListView { void setTextFilterEnabled(boolean); }
-keepclassmembers class android.animation.ObjectAnimator { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView { boolean isTextFilterEnabled(); }
-keepclassmembers class android.view.RenderNode { float getTranslationX(); }
-keepclassmembers class org.apache.james.mime4j.stream.RawField { org.apache.james.mime4j.util.ByteSequence getRaw(); }
-keepclassmembers class android.graphics.Canvas { void throwIfCannotDraw(android.graphics.Bitmap); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { boolean isOpen(); }
-keepclassmembers class android.widget.AbsListView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class org.apache.james.mime4j.stream.RawField { java.lang.String toString(); }
-keepclassmembers class android.view.RenderNode { float getTranslationY(); }
-keepclassmembers class android.widget.AbsListView { void useDefaultSelector(); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationZ(float); }
-keepclassmembers class android.view.RenderNode { float getTranslationZ(); }
-keepclassmembers class android.view.RenderNode { android.view.HardwareCanvas start(int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { boolean isLocallyInitiated(); }
-keepclassmembers class android.widget.AbsListView { void setStackFromBottom(boolean); }
-keepclassmembers class android.view.RenderNode { boolean setTranslationY(float); }
-keepclassmembers class android.widget.AbsListView { void requestLayoutIfNecessary(); }
-keepclassmembers class android.widget.AbsListView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.view.RenderNode { float getRotationX(); }
-keepclassmembers class android.view.RenderNode { boolean setRotationY(float); }
-keepclassmembers class android.view.RenderNode { boolean setRotation(float); }
-keepclassmembers class android.view.RenderNode { float getRotation(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { java.util.List getResponseHeaders(); }
-keepclassmembers class android.graphics.Canvas { void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writeData(int,boolean,com.android.okio.OkBuffer,long); }
-keepclassmembers class android.view.RenderNode { boolean setRotationX(float); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { float getRotationY(); }
-keepclassmembers class android.view.RenderNode { boolean setScaleX(float); }
-keepclassmembers class android.view.RenderNode { float getScaleX(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { com.fsck.k9.mail.Body getBody(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.ValueAnimator setDuration(long); }
-keepclassmembers class android.view.RenderNode { float getScaleY(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.lang.String getContentType(); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator clone(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.lang.String getContentId(); }
-keepclassmembers class android.view.RenderNode { boolean setPivotX(float); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void setWindowProgress(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.lang.String getDisposition(); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { boolean setScaleY(float); }
-keepclassmembers class android.animation.ObjectAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { com.fsck.k9.mail.Address[] getFrom(); }
-keepclassmembers class android.view.RenderNode { float getPivotY(); }
-keepclassmembers class android.view.RenderNode { boolean isPivotExplicitlySet(); }
-keepclassmembers class android.view.RenderNode { float getPivotX(); }
-keepclassmembers class android.view.RenderNode { boolean setLeft(int); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.util.Set getHeaderNames(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.lang.String[] getHeader(java.lang.String); }
-keepclassmembers class android.view.RenderNode { boolean setPivotY(float); }
-keepclassmembers class android.view.RenderNode { boolean setTop(int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void setWindowTitle(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writeSynResetLater(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.lang.String getMessageId(); }
-keepclassmembers class android.view.RenderNode { boolean setRight(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void addBytesToWriteWindow(long); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.io.InputStream getInputStream(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.lang.String getMimeType(); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { boolean setBottom(int); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { com.fsck.k9.mail.Address[] getRecipients(com.fsck.k9.mail.Message$RecipientType); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writeSynReset(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writeWindowUpdateLater(int,long); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void setReadTimeout(long); }
-keepclassmembers class android.view.RenderNode { void addAnimator(android.view.RenderNodeAnimator); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { long getReadTimeoutMillis(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { com.android.okio.Source getSource(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { com.android.okio.Sink getSink(); }
-keepclassmembers class android.view.RenderNode { boolean setLeftTopRightBottom(int,int,int,int); }
-keepclassmembers class android.view.RenderNode { long nCreate(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void close(com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.view.RenderNode { void nSetDisplayListData(long,long); }
-keepclassmembers class android.view.RenderNode { void nGetInverseTransformMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { void nGetTransformMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { boolean nHasIdentityMatrix(long); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetTopAndBottom(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nOffsetLeftAndRight(long,int); }
-keepclassmembers class android.view.RenderNode { boolean offsetLeftAndRight(int); }
-keepclassmembers class android.view.RenderNode { boolean nSetLeftTopRightBottom(long,int,int,int,int); }
-keepclassmembers class android.content.Intent { android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence); }
-keepclassmembers class android.view.RenderNode { boolean offsetTopAndBottom(int); }
-keepclassmembers class android.view.RenderNode { boolean nSetBottom(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetRight(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetTop(long,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void showDialog(int); }
-keepclassmembers class android.content.Intent { android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence,android.content.IntentSender); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.lang.String[] getReferences(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writePingLater(boolean,int,int,com.android.okhttp.internal.spdy.Ping); }
-keepclassmembers class android.view.RenderNode { boolean nSetLeft(long,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { boolean closeInternal(com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeFile(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { com.fsck.k9.mail.Address[] getReplyTo(); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerType(long,int); }
-keepclassmembers class android.view.RenderNode { boolean nSetLayerPaint(long,long); }
-keepclassmembers class android.widget.AbsListView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void closeLater(com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.view.RenderNode { boolean nSetPivotY(long,float); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void writePing(boolean,int,int,com.android.okhttp.internal.spdy.Ping); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineRoundRect(long,int,int,int,int,float,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetProjectBackwards(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineConvexPath(long,long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetProjectionReceiver(long,boolean); }
-keepclassmembers class com.bumptech.glide.load.engine.DiskCacheStrategy { void <clinit>(); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineEmpty(long); }
-keepclassmembers class android.view.RenderNode { boolean nSetOutlineNone(long); }
-keepclassmembers class android.view.RenderNode { boolean nSetHasOverlappingRendering(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetAlpha(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationX(long,float); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void receiveHeaders(java.util.List,com.android.okhttp.internal.spdy.HeadersMode); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.Ping removePing(int); }
-keepclassmembers class android.view.RenderNode { boolean nSetElevation(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetClipToBounds(long,boolean); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetTranslationZ(long,float); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.util.Date getSentDate(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$State { void <clinit>(); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationX(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotation(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetRotationY(long,float); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.lang.String getServerExtra(); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleX(long,float); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { long getSize(); }
-keepclassmembers class android.view.RenderNode { boolean nSetScaleY(long,float); }
-keepclassmembers class android.view.RenderNode { boolean nSetStaticMatrix(long,long); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void flush(); }
-keepclassmembers class android.view.RenderNode { float nGetScaleY(long); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { java.lang.String getSubject(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void shutdown(com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.view.RenderNode { float nGetElevation(long); }
-keepclassmembers class android.view.RenderNode { float nGetScaleX(long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationX(long); }
-keepclassmembers class android.content.Intent { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { boolean isMimeType(java.lang.String); }
-keepclassmembers class android.view.RenderNode { boolean nSetAnimationMatrix(long,long); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationY(long); }
-keepclassmembers class com.bumptech.glide.load.engine.DiskCacheStrategy { void <init>(java.lang.String,int,boolean,boolean); }
-keepclassmembers class android.graphics.Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint); }
-keepclassmembers class android.view.RenderNode { float nGetTranslationZ(long); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Intent); }
-keepclassmembers class android.view.RenderNode { float nGetRotation(long); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void parse(java.io.InputStream); }
-keepclassmembers class android.view.RenderNode { boolean nIsPivotExplicitlySet(long); }
-keepclassmembers class android.view.RenderNode { float nGetPivotX(long); }
-keepclassmembers class android.view.RenderNode { float nGetPivotY(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotationX(long); }
-keepclassmembers class android.view.RenderNode { float nGetRotationY(long); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void removeHeader(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setBody(com.fsck.k9.mail.Body); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void startAndPrepareActionMode(); }
-keepclassmembers class android.view.RenderNode { void nAddAnimator(long,long); }
-keepclassmembers class com.bumptech.glide.load.engine.DiskCacheStrategy { boolean cacheSource(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setCharset(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.engine.DiskCacheStrategy { boolean cacheResult(); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void <init>(android.widget.Spinner); }
-keepclassmembers class com.android.okhttp.ConfigAwareConnectionPool { void <init>(); }
-keepclassmembers class com.android.okhttp.ConfigAwareConnectionPool { com.android.okhttp.ConfigAwareConnectionPool getInstance(); }
-keepclassmembers class android.widget.AbsListView { boolean acceptFilter(); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void dismiss(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void close(com.android.okhttp.internal.spdy.ErrorCode,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void toggleMessageFlagWithAdapterPosition(int); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setEncoding(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void receiveData(com.android.okio.BufferedSource,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$State { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.widget.Spinner$DialogPopup { boolean isShowing(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void receiveFin(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setFrom(com.fsck.k9.mail.Address); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void setAdapter(android.widget.ListAdapter); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$State { com.handmark.pulltorefresh.library.PullToRefreshBase$State mapIntToValue(int); }
-keepclassmembers class android.widget.AbsListView { void setFilterText(java.lang.String); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Intent,boolean); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeResource(android.content.res.Resources,int); }
-keepclassmembers class com.android.okhttp.ConfigAwareConnectionPool { com.android.okhttp.ConnectionPool get(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setHeader(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.ConfigAwareConnectionPool { void <clinit>(); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void show(int,int); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setInReplyTo(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void toggleMessageSelectWithAdapterPosition(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void receiveRstStream(com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void toggleMessageSelect(int); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setMessageId(java.lang.String); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void setPromptText(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setInternalSentDate(java.util.Date); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setRecipients(com.fsck.k9.mail.Message$RecipientType,com.fsck.k9.mail.Address[]); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String,android.net.Uri); }
-keepclassmembers class android.content.Intent { void <init>(android.content.Context,java.lang.Class); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void cancelStreamIfNecessary(); }
-keepclassmembers class android.widget.AbsListView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$State { int getIntValue(); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchCondition$1 { void <init>(); }
-keepclassmembers class android.content.Intent { void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class); }
-keepclassmembers class android.graphics.BitmapFactory { void setDensityFromOptions(android.graphics.Bitmap,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$State { com.handmark.pulltorefresh.library.PullToRefreshBase$State[] values(); }
-keepclassmembers class android.content.Intent { android.content.Intent makeMainActivity(android.content.ComponentName); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void addBytesToWriteWindow(long); }
-keepclassmembers class android.widget.AbsListView { void requestLayout(); }
-keepclassmembers class android.graphics.Canvas { void drawText(char[],int,int,float,float,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.htmlcleaner.TagInfo { void <init>(java.lang.String,org.htmlcleaner.ContentType,org.htmlcleaner.BelongsTo,boolean,boolean,boolean,org.htmlcleaner.CloseTag,org.htmlcleaner.Display); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void updateActionModeTitle(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName$1 { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void <init>(); }
-keepclassmembers class android.graphics.Canvas { void drawText(java.lang.String,float,float,android.graphics.Paint); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { com.android.okhttp.internal.spdy.SpdyConnection access$500(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { int access$600(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { long access$700(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void updateContextMenu(android.database.Cursor); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollExtent(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { com.android.okhttp.internal.spdy.ErrorCode access$800(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class java.lang.Throwable { java.lang.StackTraceElement[] nativeGetStackTrace(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void resetList(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void access$900(com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setReplyTo(com.fsck.k9.mail.Address[]); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setReferences(java.lang.String); }
-keepclassmembers class android.widget.Spinner$DialogPopup { void <init>(android.widget.Spinner,android.widget.Spinner$1); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,java.util.concurrent.ExecutorService,java.util.concurrent.ExecutorService); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { void <clinit>(); }
-keepclassmembers class android.graphics.Canvas { void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setServerExtra(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void sendConnectionHeader(); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean allowsAnything(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean pushedStream(int); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollOffset(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc getGeneralDesc(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setGeneralDesc(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStreamInternal(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void updateFooterView(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { com.fsck.k9.mail.internet.MimeBodyPart toBodyPart(); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean allowsBody(); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,java.util.concurrent.ExecutorService,java.util.concurrent.ExecutorService,java.util.Map,com.bumptech.glide.load.engine.EngineKeyFactory,java.util.Map,com.bumptech.glide.load.engine.Engine$EngineJobFactory,com.bumptech.glide.load.engine.ResourceRecycler); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap decodeStream(java.io.InputStream); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { void <init>(int,java.io.InputStream,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void setSubject(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setFixedLine(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void pushRequestLater(int,java.util.List); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void pushHeadersLater(int,java.util.List,boolean); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean allowsItem(org.htmlcleaner.BaseToken); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobile(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void writeHeaderTo(java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage { void writeTo(java.io.OutputStream); }
-keepclassmembers class android.graphics.Canvas { void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void changeSort(com.fsck.k9.Account$SortType); }
-keepclassmembers class android.os.AsyncTask$3 { void <init>(android.os.AsyncTask,java.util.concurrent.Callable); }
-keepclassmembers class android.widget.AbsListView { int computeVerticalScrollRange(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setTollFree(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void pushDataLater(int,com.android.okio.BufferedSource,int,boolean); }
-keepclassmembers class android.os.AsyncTask$3 { void done(); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { void <init>(java.io.InputStream,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { void <init>(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void checkMail(); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { void <init>(java.io.InputStream,boolean); }
-keepclassmembers class android.widget.AbsListView { float getTopFadingEdgeStrength(); }
-keepclassmembers class org.htmlcleaner.TagInfo { void defineAllowedChildrenTags(java.lang.String); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeAsset(long,android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPremiumRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSharedCost(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class android.graphics.BitmapFactory { android.graphics.Bitmap nativeDecodeStream(java.io.InputStream,byte[],android.graphics.Rect,android.graphics.BitmapFactory$Options); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void <init>(); }
-keepclassmembers class org.htmlcleaner.TagInfo { void defineCloseBeforeCopyInsideTags(java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <init>(android.app.Activity); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPersonalNumber(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void dialogCancelled(int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void confirmMarkAllAsRead(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$800(com.android.okhttp.internal.spdy.SpdyConnection,boolean,int,int,com.android.okhttp.internal.spdy.Ping); }
-keepclassmembers class android.graphics.Canvas { void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.widget.AbsListView { float getBottomFadingEdgeStrength(); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { int decodePad(int,int,byte[],int,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void doNegativeClick(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void pushResetLater(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class com.fsck.k9.mail.Message$RecipientType { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { com.bumptech.glide.load.engine.EngineResource getEngineResourceFromCache(com.bumptech.glide.load.Key); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { java.lang.String getActionInProgressOperation(android.content.Context); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void doPositiveClick(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoip(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.fsck.k9.mail.Message$RecipientType { void <init>(java.lang.String,int); }
-keepclassmembers class org.htmlcleaner.TagInfo { void defineCloseBeforeTags(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { java.util.Comparator getComparator(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void <init>(com.android.okhttp.internal.spdy.SpdyConnection$Builder,com.android.okhttp.internal.spdy.SpdyConnection$1); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { java.lang.ref.ReferenceQueue getReferenceQueue(); }
-keepclassmembers class com.fsck.k9.mail.Message$RecipientType { com.fsck.k9.mail.Message$RecipientType valueOf(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { void handleUnexpecedPad(int); }
-keepclassmembers class android.widget.AbsListView { void onMeasure(int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { java.lang.String access$1000(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.fsck.k9.mail.Message$RecipientType { com.fsck.k9.mail.Message$RecipientType[] values(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.SafeKeyGenerator { void <init>(); }
-keepclassmembers class org.htmlcleaner.TagInfo { void defineCloseInsideCopyAfterTags(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.SafeKeyGenerator { java.lang.String getSafeKey(com.bumptech.glide.load.Key); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPager(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key,boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$1100(com.android.okhttp.internal.spdy.SpdyConnection,com.android.okhttp.internal.spdy.ErrorCode,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { void handleUnexpectedEof(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setUan(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { com.bumptech.glide.load.engine.EngineResource loadFromCache(com.bumptech.glide.load.Key,boolean); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <init>(android.app.Dialog); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$1300(com.android.okhttp.internal.spdy.SpdyConnection,int,com.android.okio.BufferedSource,int,boolean); }
-keepclassmembers class org.htmlcleaner.TagInfo { void defineFatalTags(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isAccountExpungeCapable(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean access$1200(com.android.okhttp.internal.spdy.SpdyConnection,int); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { int read0(byte[],int,int); }
-keepclassmembers class org.htmlcleaner.TagInfo { void defineForbiddenTags(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setEmergency(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { void logWithTimeAndKey(java.lang.String,long,com.bumptech.glide.load.Key); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$1400(com.android.okhttp.internal.spdy.SpdyConnection,int,java.util.List,boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isCheckMailSupported(); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorResourceLoader$Factory { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setVoicemail(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorResourceLoader$Factory { com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory); }
-keepclassmembers class android.widget.AbsListView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class org.htmlcleaner.TagInfo { void defineHigherLevelTags(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isFirst(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean access$1500(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { int access$1600(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isErrorFolder(); }
-keepclassmembers class android.widget.AbsListView { boolean setFrame(int,int,int,int); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorResourceLoader$Factory { void teardown(); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.Priority,boolean,com.bumptech.glide.load.engine.DiskCacheStrategy,com.bumptech.glide.request.ResourceCallback); }
-keepclassmembers class android.graphics.RectF { void <init>(float,float,float,float); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { int access$1602(com.android.okhttp.internal.spdy.SpdyConnection,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setShortCode(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { java.util.Map access$1800(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isInitialized(); }
-keepclassmembers class android.graphics.RectF { void <init>(android.graphics.RectF); }
-keepclassmembers class org.htmlcleaner.TagInfo { void defineRequiredEnclosingTags(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void layoutChildren(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isLast(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { java.util.concurrent.ExecutorService access$2000(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.IncomingStreamHandler access$1900(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void init(android.view.View); }
-keepclassmembers class android.graphics.RectF { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$2100(com.android.okhttp.internal.spdy.SpdyConnection,int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class android.widget.AbsListView { android.view.View getAccessibilityFocusedChild(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { int access$1700(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setStandardRate(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean access$2202(com.android.okhttp.internal.spdy.SpdyConnection,boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isLoadFinished(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean access$2200(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void folderStatusChanged(com.fsck.k9.Account,java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { int getFolderCompleted(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.Ping access$2300(com.android.okhttp.internal.spdy.SpdyConnection,int); }
-keepclassmembers class android.widget.AbsListView { void updateScrollIndicators(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$2400(com.android.okhttp.internal.spdy.SpdyConnection,boolean,int,int,com.android.okhttp.internal.spdy.Ping); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { int getFolderTotal(); }
-keepclassmembers class org.htmlcleaner.TagInfo { java.util.Set getFatalTags(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isManualSearch(); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { java.lang.String getOperation(android.content.Context); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isMarkAllAsReadSupported(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { boolean access$1502(com.android.okhttp.internal.spdy.SpdyConnection,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollUp(); }
-keepclassmembers class org.htmlcleaner.TagInfo { java.lang.String getName(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCarrierSpecific(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNoInternationalDialling(com.android.i18n.phonenumbers.Phonemetadata$PhoneNumberDesc); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void access$2500(com.android.okhttp.internal.spdy.SpdyConnection,int,java.util.List); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean hasCopyTags(); }
-keepclassmembers class org.htmlcleaner.TagInfo { java.util.Set getRequiredParentTags(); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean hasPermittedTags(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { java.util.Set access$2700(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { com.android.okhttp.internal.spdy.PushObserver access$2600(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isRemoteFolder(); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean isContinueAfter(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollDown(); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void informUserOfStatus(); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void onPause(android.content.Context); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean isCopy(java.lang.String); }
-keepclassmembers class org.htmlcleaner.TagInfo { java.util.Set getPermittedTags(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isOutbox(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter { void <init>(); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean isDeprecated(); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void onResume(android.content.Context); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int getCountryCode(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setId(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter { android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter { void clearMemory(); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean isEmptyTag(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter { android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setCountryCode(int); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void pendingCommandCompleted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isRemoteSearchAllowed(); }
-keepclassmembers class android.widget.AbsListView { android.view.View getSelectedView(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isRemoteSearch(); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean isFatalTag(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void <init>(org.apache.harmony.security.asn1.ASN1Type,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void pendingCommandStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void pendingCommandsFinished(com.fsck.k9.Account); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean isHeadAndBodyTag(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getInternationalPrefix(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter { boolean put(android.graphics.Bitmap); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isSingleAccountMode(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setInternationalPrefix(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void pendingCommandsProcessing(com.fsck.k9.Account); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingTop(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredInternationalPrefix(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeChoice(org.apache.harmony.security.asn1.ASN1Choice); }
-keepclassmembers class android.widget.AbsListView { int getListPaddingBottom(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter { void trimMemory(int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void markAllAsRead(); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void sendPendingMessagesCompleted(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean isIgnorePermitted(); }
-keepclassmembers class android.transition.SidePropagation { void setSide(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefix(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void sendPendingMessagesFailed(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean isSingleFolderMode(); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean isHeadTag(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeExplicit(org.apache.harmony.security.asn1.ASN1Explicit); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean isMustCloseTag(org.htmlcleaner.TagInfo); }
-keepclassmembers class android.graphics.Canvas { long initRaster(long); }
-keepclassmembers class android.widget.AbsListView { android.view.View obtainView(int,boolean[]); }
-keepclassmembers class android.transition.SidePropagation { void <init>(); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean isHigher(java.lang.String); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { com.android.internal.widget.DecorToolbar getDecorToolbar(android.view.View); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void synchronizeMailboxFailed(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setPreferredExtnPrefix(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void sendPendingMessagesStarted(com.fsck.k9.Account); }
-keepclassmembers class org.htmlcleaner.TagInfo { boolean isUnique(); }
-keepclassmembers class android.graphics.Canvas { int native_save(long,int); }
-keepclassmembers class android.graphics.Canvas { void native_setBitmap(long,long,boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.graphics.Canvas { int native_saveLayer(long,float,float,float,float,long,int); }
-keepclassmembers class android.graphics.Canvas { int native_saveLayerAlpha(long,float,float,float,float,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixForParsing(); }
-keepclassmembers class android.graphics.Canvas { void native_restore(long); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void synchronizeMailboxFinished(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixForParsing(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { int native_getSaveCount(long); }
-keepclassmembers class android.graphics.RectF { boolean isEmpty(); }
-keepclassmembers class android.graphics.Canvas { void native_restoreToCount(long,int); }
-keepclassmembers class android.graphics.Canvas { void native_rotate(long,float); }
-keepclassmembers class android.graphics.Canvas { void native_translate(long,float,float); }
-keepclassmembers class android.graphics.RectF { float width(); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void synchronizeMailboxHeadersFinished(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { java.lang.String getNationalPrefixTransformRule(); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipRect(long,float,float,float,float,int); }
-keepclassmembers class android.graphics.Canvas { void native_concat(long,long); }
-keepclassmembers class android.graphics.Canvas { void native_scale(long,float,float); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setNationalPrefixTransformRule(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { boolean native_clipPath(long,long,int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setElevation(float); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSequenceOf(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class android.graphics.Canvas { boolean native_getClipBounds(long,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void synchronizeMailboxHeadersProgress(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class android.graphics.RectF { float height(); }
-keepclassmembers class android.graphics.Canvas { boolean native_quickReject(long,float,float,float,float); }
-keepclassmembers class android.graphics.RectF { float centerY(); }
-keepclassmembers class android.graphics.Canvas { void native_drawColor(long,int,int); }
-keepclassmembers class android.widget.AbsListView { void setItemViewLayoutParams(android.view.View,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onArchive(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setSameMobileAndFixedLinePattern(boolean); }
-keepclassmembers class android.graphics.RectF { void setEmpty(); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { void onEngineJobCancelled(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void encodeValueCollection(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int numberFormatSize(); }
-keepclassmembers class android.graphics.RectF { void set(float,float,float,float); }
-keepclassmembers class android.graphics.Canvas { void native_drawLines(long,float[],int,int,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawLine(long,float,float,float,float,long); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onAttach(android.app.Activity); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void synchronizeMailboxHeadersStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void native_drawRect(long,float,float,float,float,long); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void synchronizeMailboxProgress(com.fsck.k9.Account,java.lang.String,int,int); }
-keepclassmembers class android.graphics.Canvas { void native_drawOval(long,float,float,float,float,long); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void synchronizeMailboxStarted(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onCompose(); }
-keepclassmembers class android.graphics.RectF { void set(android.graphics.Rect); }
-keepclassmembers class android.graphics.Canvas { void native_drawCircle(long,float,float,float,long); }
-keepclassmembers class android.widget.AbsListView { void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.graphics.Canvas { void native_drawRoundRect(long,float,float,float,float,float,float,long); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHasEmbeddedTabs(boolean); }
-keepclassmembers class android.graphics.RectF { void set(android.graphics.RectF); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { int intlNumberFormatSize(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void push(int[],java.lang.Object[]); }
-keepclassmembers class android.graphics.Canvas { void native_drawBitmap(long,long,float,float,long,int,int,int); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { void onEngineJobComplete(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource); }
-keepclassmembers class android.graphics.Canvas { void native_drawPath(long,long,long); }
-keepclassmembers class com.fsck.k9.activity.ActivityListener { void systemStatusChanged(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.graphics.RectF { void offset(float,float); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { void close(); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { void onResourceRemoved(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class android.graphics.Canvas { void native_drawBitmap(long,long,float,float,float,float,float,float,float,float,long,int,int); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { int read(); }
-keepclassmembers class android.graphics.RectF { void inset(float,float); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { void release(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class android.widget.AbsListView { void positionSelectorLikeTouch(int,android.view.View,float,float); }
-keepclassmembers class android.graphics.Canvas { void nativeDrawBitmapMatrix(long,long,long,long); }
-keepclassmembers class android.text.format.Time { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.Engine { void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource); }
-keepclassmembers class android.graphics.Canvas { void native_drawText(long,char[],int,int,float,float,int,long,long); }
-keepclassmembers class android.widget.AbsListView { void positionSelectorLikeFocus(int,android.view.View); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { int read(byte[]); }
-keepclassmembers class android.text.format.Time { void initialize(java.lang.String); }
-keepclassmembers class android.graphics.Canvas { void native_drawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawText(long,java.lang.String,int,int,float,float,int,long,long); }
-keepclassmembers class android.graphics.Canvas { void native_drawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMainCountryForCode(boolean); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.codec.Base64InputStream { int read(byte[],int,int); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View,boolean,float,float); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingDigits(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void positionSelector(int,android.view.View); }
-keepclassmembers class java.util.FormatterClosedException { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setMobileNumberPortableRegion(boolean); }
-keepclassmembers class android.graphics.PathEffect { void <init>(); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void writeExternal(java.io.ObjectOutput); }
-keepclassmembers class android.view.animation.DecelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getExplicitLength(org.apache.harmony.security.asn1.ASN1Explicit); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException invalidDigest(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata setLeadingZeroPossible(boolean); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setShowHideAnimationEnabled(boolean); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { void <init>(android.content.Context,java.lang.Class,com.bumptech.glide.provider.LoadProvider,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.Lifecycle); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$FlaggedComparator { void <init>(); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException failedVerification(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$FlaggedComparator { int compare(android.database.Cursor,android.database.Cursor); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getChoiceLength(org.apache.harmony.security.asn1.ASN1Choice); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSequenceLength(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.graphics.RectF { boolean intersect(float,float,float,float); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { int type(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$FlaggedComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setCustomView(int); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(byte[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.widget.AbsListView { boolean isPaddingOffsetRequired(); }
-keepclassmembers class java.util.jar.JarVerifier { java.util.jar.JarVerifier$VerifierEntry initEntry(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger,byte[]); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { void applyCenterCrop(); }
-keepclassmembers class android.widget.AbsListView { int getLeftPaddingOffset(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onCopy(); }
-keepclassmembers class java.util.jar.JarVerifier { void <init>(java.lang.String,java.util.jar.Manifest,java.util.HashMap); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { void applyFitCenter(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameSignature { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSequenceOfLength(org.apache.harmony.security.asn1.ASN1SequenceOf); }
-keepclassmembers class android.widget.AbsListView { int getTopPaddingOffset(); }
-keepclassmembers class org.apache.harmony.dalvik.ddmc.ChunkHandler { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getSetOfLength(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class java.util.concurrent.ExecutionException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameSignature { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { int getRightPaddingOffset(); }
-keepclassmembers class android.widget.AbsListView { int getBottomPaddingOffset(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameSignature { void <init>(java.util.UUID); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class android.widget.AbsListView { void onSizeChanged(int,int,int,int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayShowCustomEnabled(boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.DerOutputStream { void getValueOfLength(org.apache.harmony.security.asn1.ASN1ValueCollection); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameSignature { void updateDiskCacheKey(java.security.MessageDigest); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <init>(java.math.BigInteger,java.math.BigInteger,byte[],org.apache.harmony.security.x509.PolicyConstraints$1); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$5 { com.fsck.k9.mail.filter.SignSafeOutputStream$State nextState(int); }
-keepclassmembers class java.util.jar.JarVerifier { boolean readCertificates(); }
-keepclassmembers class android.widget.AbsListView { boolean touchModeDrawsInPressedState(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$1 { void <init>(com.fsck.k9.mailstore.LocalFolder,int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$5 { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView { boolean shouldShowSelector(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameSignature { int hashCode(); }
-keepclassmembers class java.lang.Integer { void <init>(int); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { com.bumptech.glide.DrawableRequestBuilder centerCrop(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$1 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.widget.AbsListView { void drawSelector(android.graphics.Canvas); }
-keepclassmembers class android.graphics.FontListParser$Alias { void <init>(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHomeButtonEnabled(boolean); }
-keepclassmembers class android.graphics.RectF { void union(float,float,float,float); }
-keepclassmembers class java.util.jar.JarVerifier { void verifyCertificate(java.lang.String); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonemetadata$PhoneMetadata { void readExternal(java.io.ObjectInput); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$1 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Integer); }
-keepclassmembers class android.widget.AbsListView { void setSelector(android.graphics.drawable.Drawable); }
-keepclassmembers class java.lang.Integer { int compare(int,int); }
-keepclassmembers class java.lang.ThreadLocal { void <init>(); }
-keepclassmembers class java.lang.Integer { java.lang.NumberFormatException invalidInt(java.lang.String); }
-keepclassmembers class java.lang.Integer { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.PolicyConstraints { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { com.bumptech.glide.DrawableRequestBuilder crossFade(); }
-keepclassmembers class android.graphics.RectF { void union(android.graphics.RectF); }
-keepclassmembers class android.content.Intent { android.net.Uri getData(); }
-keepclassmembers class android.app.ActivityManagerNative { void <clinit>(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object initialValue(); }
-keepclassmembers class android.content.Intent { java.lang.String getScheme(); }
-keepclassmembers class android.widget.AbsListView { void keyPressed(); }
-keepclassmembers class java.lang.ThreadLocal { void set(java.lang.Object); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.Object get(); }
-keepclassmembers class android.content.Intent { java.lang.String getType(); }
-keepclassmembers class java.lang.ThreadLocal { void remove(); }
-keepclassmembers class android.content.Intent { java.lang.String resolveType(android.content.ContentResolver); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setWindowTitle(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDisplayOptions(int,int); }
-keepclassmembers class android.text.method.WordIterator { void <init>(java.util.Locale); }
-keepclassmembers class android.content.Intent { java.lang.String getAction(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$Values initializeValues(java.lang.Thread); }
-keepclassmembers class java.lang.ThreadLocal { int access$200(java.lang.ThreadLocal); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ref.Reference access$300(java.lang.ThreadLocal); }
-keepclassmembers class java.lang.ThreadLocal { void <clinit>(); }
-keepclassmembers class java.lang.ThreadLocal { java.lang.ThreadLocal$Values values(java.lang.Thread); }
-keepclassmembers class android.content.Intent { java.util.Set getCategories(); }
-keepclassmembers class android.content.Intent { java.lang.String resolveTypeIfNeeded(android.content.ContentResolver); }
-keepclassmembers class android.widget.AbsListView { void updateSelectorState(); }
-keepclassmembers class android.text.method.WordIterator { void setCharSequence(java.lang.CharSequence,int,int); }
-keepclassmembers class java.lang.Integer { float floatValue(); }
-keepclassmembers class java.lang.Integer { double doubleValue(); }
-keepclassmembers class android.content.Intent { android.content.ClipData getClipData(); }
-keepclassmembers class java.lang.Integer { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Double { void <init>(double); }
-keepclassmembers class android.widget.AbsListView { void drawableStateChanged(); }
-keepclassmembers class android.text.method.WordIterator { int preceding(int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { android.view.View getCustomView(); }
-keepclassmembers class java.lang.Double { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.service.MailService$4 { void <init>(com.fsck.k9.service.MailService); }
-keepclassmembers class android.content.Intent { boolean hasExtra(java.lang.String); }
-keepclassmembers class android.graphics.RectF { void <clinit>(); }
-keepclassmembers class com.fsck.k9.service.MailService$4 { void run(); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Double); }
-keepclassmembers class android.text.method.WordIterator { int following(int); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { int getNavigationMode(); }
-keepclassmembers class android.text.method.WordIterator { int getBeginning(int); }
-keepclassmembers class java.lang.Double { long doubleToLongBits(double); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { com.bumptech.glide.DrawableRequestBuilder dontAnimate(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { android.content.Loader onCreateLoader(int,android.os.Bundle); }
-keepclassmembers class android.content.Intent { void setAllowFds(boolean); }
-keepclassmembers class java.lang.Double { double doubleValue(); }
-keepclassmembers class java.util.jar.JarVerifier { boolean verify(java.util.jar.Attributes,java.lang.String,byte[],int,int,boolean,boolean); }
-keepclassmembers class java.util.jar.JarVerifier { boolean isSignedJar(); }
-keepclassmembers class java.lang.Double { boolean equals(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.text.method.WordIterator { int getEnd(int); }
-keepclassmembers class java.lang.Integer { int intValue(); }
-keepclassmembers class java.lang.Double { long doubleToRawLongBits(double); }
-keepclassmembers class android.widget.AbsListView { int[] onCreateDrawableState(int); }
-keepclassmembers class java.lang.Integer { long longValue(); }
-keepclassmembers class android.widget.AbsListView { void onAttachedToWindow(); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String); }
-keepclassmembers class java.lang.Integer { int parseInt(java.lang.String,int); }
-keepclassmembers class java.lang.Double { int hashCode(); }
-keepclassmembers class android.text.method.WordIterator { boolean isAfterLetterOrDigit(int); }
-keepclassmembers class android.widget.AbsListView { void onDetachedFromWindow(); }
-keepclassmembers class java.lang.Double { int intValue(); }
-keepclassmembers class android.content.Intent { boolean getBooleanExtra(java.lang.String,boolean); }
-keepclassmembers class android.text.method.WordIterator { boolean isOnLetterOrDigit(int); }
-keepclassmembers class java.lang.Double { boolean isInfinite(double); }
-keepclassmembers class android.text.method.WordIterator { void checkOffsetIsValid(int); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { com.bumptech.glide.DrawableRequestBuilder fitCenter(); }
-keepclassmembers class java.lang.Integer { int hashCode(); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { com.bumptech.glide.request.target.Target into(android.widget.ImageView); }
-keepclassmembers class com.fsck.k9.activity.FolderListFilter { android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence); }
-keepclassmembers class java.util.jar.JarVerifier { void removeMetaEntries(); }
-keepclassmembers class java.util.jar.JarVerifier { java.lang.SecurityException access$000(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.FolderListFilter { void <init>(android.widget.ArrayAdapter); }
-keepclassmembers class android.content.Intent { long getLongExtra(java.lang.String,long); }
-keepclassmembers class java.lang.Double { double longBitsToDouble(long); }
-keepclassmembers class java.lang.Double { boolean isNaN(double); }
-keepclassmembers class android.content.Intent { int getIntExtra(java.lang.String,int); }
-keepclassmembers class java.lang.Double { long longValue(); }
-keepclassmembers class java.util.jar.JarVerifier { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { void onWindowFocusChanged(boolean); }
-keepclassmembers class java.lang.Integer { int parse(java.lang.String,int,int,boolean); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { com.bumptech.glide.DrawableRequestBuilder load(java.lang.Object); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { void <init>(android.util.MapCollections,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$2 { void onClick(android.view.View); }
-keepclassmembers class java.lang.Double { java.lang.String toString(); }
-keepclassmembers class android.text.format.Time { void setToNow(); }
-keepclassmembers class android.content.Intent { java.lang.String getStringExtra(java.lang.String); }
-keepclassmembers class java.lang.Double { double parseDouble(java.lang.String); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { boolean hasNext(); }
-keepclassmembers class java.lang.Double { java.lang.String toString(double); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$2 { void <init>(com.fsck.k9.ui.messageview.MessageViewFragment); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { com.bumptech.glide.DrawableRequestBuilder placeholder(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.format.Time { void set(long); }
-keepclassmembers class java.lang.Integer { java.lang.String toBinaryString(int); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { void remove(); }
-keepclassmembers class android.util.MapCollections$ArrayIterator { java.lang.Object next(); }
-keepclassmembers class android.content.Intent { android.os.Parcelable getParcelableExtra(java.lang.String); }
-keepclassmembers class android.content.Intent { java.lang.CharSequence getCharSequenceExtra(java.lang.String); }
-keepclassmembers class java.lang.Integer { java.lang.String toHexString(int); }
-keepclassmembers class android.widget.AbsListView { android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(int,int); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { com.bumptech.glide.DrawableRequestBuilder signature(com.bumptech.glide.load.Key); }
-keepclassmembers class java.lang.Double { int compare(double,double); }
-keepclassmembers class android.widget.AbsListView { void onRtlPropertiesChanged(int); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void onCancelPendingInputEvents(); }
-keepclassmembers class java.lang.Double { java.lang.Double valueOf(double); }
-keepclassmembers class com.fsck.k9.activity.FolderListFilter { void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults); }
-keepclassmembers class java.lang.Integer { int highestOneBit(int); }
-keepclassmembers class android.content.Intent { java.io.Serializable getSerializableExtra(java.lang.String); }
-keepclassmembers class java.lang.Double { java.lang.String toHexString(double); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.PermanentFlagsResponse { void <init>(java.util.Set,boolean); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String); }
-keepclassmembers class java.lang.Integer { int numberOfLeadingZeros(int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.PermanentFlagsResponse { com.fsck.k9.mail.store.imap.PermanentFlagsResponse parse(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class android.content.Intent { android.os.Parcelable[] getParcelableArrayExtra(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getStringArrayListExtra(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenu(float,float,int); }
-keepclassmembers class java.lang.Integer { java.lang.String toString(int); }
-keepclassmembers class android.content.Intent { java.util.ArrayList getParcelableArrayListExtra(java.lang.String); }
-keepclassmembers class java.lang.Integer { int numberOfTrailingZeros(int); }
-keepclassmembers class com.bumptech.glide.RequestManager$RequestManagerConnectivityListener { void <init>(com.bumptech.glide.manager.RequestTracker); }
-keepclassmembers class java.lang.Integer { int bitCount(int); }
-keepclassmembers class android.content.Intent { byte[] getByteArrayExtra(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onCycleSort(); }
-keepclassmembers class android.widget.AbsListView { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { com.bumptech.glide.GenericRequestBuilder signature(com.bumptech.glide.load.Key); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class com.bumptech.glide.RequestManager$RequestManagerConnectivityListener { void onConnectivityChanged(boolean); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { com.bumptech.glide.DrawableRequestBuilder transform(com.bumptech.glide.load.Transformation[]); }
-keepclassmembers class android.widget.AbsListView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class com.bumptech.glide.DrawableRequestBuilder { com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation[]); }
-keepclassmembers class java.lang.Integer { int reverseBytes(int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onDelete(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplBase { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplBase { void <init>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onDestroyView(); }
-keepclassmembers class java.lang.Integer { int signum(int); }
-keepclassmembers class android.text.format.Time { int getJulianDay(long,long); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setHideOnContentScrollEnabled(boolean); }
-keepclassmembers class java.lang.Integer { java.lang.Integer valueOf(int); }
-keepclassmembers class android.widget.AbsListView { void dispatchSetPressed(boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onExpunge(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onForward(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.widget.AbsListView { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class java.lang.Integer { void <clinit>(); }
-keepclassmembers class java.lang.Double { int compareTo(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { int pointToPosition(int,int); }
-keepclassmembers class java.lang.Double { void <clinit>(); }
-keepclassmembers class android.text.format.Time { void <clinit>(); }
-keepclassmembers class android.content.Intent { android.os.Bundle getBundleExtra(java.lang.String); }
-keepclassmembers class com.bumptech.glide.request.animation.ViewAnimation { void <init>(com.bumptech.glide.request.animation.ViewAnimation$AnimationFactory); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplBase { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.UnitTranscoder { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.request.animation.ViewAnimation { boolean animate(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation$ViewAdapter); }
-keepclassmembers class android.widget.AbsListView { boolean startScrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class java.lang.Integer { int compareTo(java.lang.Object); }
-keepclassmembers class android.content.Intent { java.lang.String[] getStringArrayExtra(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.UnitTranscoder { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.UnitTranscoder { com.bumptech.glide.load.resource.transcode.ResourceTranscoder get(); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.UnitTranscoder { java.lang.String getId(); }
-keepclassmembers class com.tokenautocomplete.ViewSpan { void <init>(android.view.View,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class com.bumptech.glide.load.resource.transcode.UnitTranscoder { com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class android.os.StrictMode$2 { java.util.ArrayList initialValue(); }
-keepclassmembers class java.nio.charset.Charset { void <init>(java.lang.String,java.lang.String[]); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplBase { java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]); }
-keepclassmembers class android.os.StrictMode$2 { java.lang.Object initialValue(); }
-keepclassmembers class android.content.Intent { android.os.Bundle getExtras(); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(java.lang.String); }
-keepclassmembers class android.os.StrictMode$2 { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.PermanentFlagsResponse { boolean canCreateKeywords(); }
-keepclassmembers class android.content.Intent { int getFlags(); }
-keepclassmembers class android.transition.Slide$CalculateSlideVertical { void <init>(android.transition.Slide$1); }
-keepclassmembers class android.content.Intent { android.content.ComponentName getComponent(); }
-keepclassmembers class android.widget.AbsListView { void scrollIfNeeded(int,int,android.view.MotionEvent); }
-keepclassmembers class android.transition.Slide$CalculateSlideVertical { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.PermanentFlagsResponse { java.util.Set getFlags(); }
-keepclassmembers class java.nio.charset.MalformedInputException { void <init>(int); }
-keepclassmembers class java.util.IllformedLocaleException { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.Protocol { com.android.okhttp.Protocol[] values(); }
-keepclassmembers class java.nio.charset.MalformedInputException { java.lang.String getMessage(); }
-keepclassmembers class com.android.okhttp.Protocol { void <init>(java.lang.String,int,java.lang.String,boolean); }
-keepclassmembers class java.nio.charset.Charset { boolean isValidCharsetNamePart(char); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onLoadFinished(android.content.Loader,android.database.Cursor); }
-keepclassmembers class java.nio.charset.Charset { boolean isValidCharsetNameStart(char); }
-keepclassmembers class android.support.v4.util.LruCache { void <init>(int); }
-keepclassmembers class com.android.okhttp.Protocol { com.android.okhttp.Protocol find(com.android.okio.ByteString); }
-keepclassmembers class android.content.Intent { android.content.ComponentName resolveSystemService(android.content.pm.PackageManager,int); }
-keepclassmembers class com.android.okhttp.Protocol { void <clinit>(); }
-keepclassmembers class android.support.v4.util.LruCache { void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.support.v4.util.LruCache { int safeSizeOf(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset cacheCharset(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class android.content.Intent { android.content.Intent setAction(java.lang.String); }
-keepclassmembers class java.nio.charset.Charset { void checkCharsetName(java.lang.String); }
-keepclassmembers class android.content.Intent { android.content.Intent setType(java.lang.String); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onLoadFinished(android.content.Loader,java.lang.Object); }
-keepclassmembers class android.content.Intent { android.content.Intent setData(android.net.Uri); }
-keepclassmembers class android.text.method.CharacterPickerDialog$OptionsAdapter { void <init>(android.text.method.CharacterPickerDialog,android.content.Context); }
-keepclassmembers class android.database.sqlite.SQLiteSession$Transaction { void <init>(); }
-keepclassmembers class android.database.sqlite.SQLiteSession$Transaction { void <init>(android.database.sqlite.SQLiteSession$1); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onLoaderReset(android.content.Loader); }
-keepclassmembers class android.content.Intent { android.content.ComponentName resolveActivity(android.content.pm.PackageManager); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forName(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onMoveDown(); }
-keepclassmembers class android.content.Intent { android.content.Intent addCategory(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onMoveUp(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { android.content.Context getThemedContext(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset forNameUEE(java.lang.String); }
-keepclassmembers class java.nio.charset.Charset { boolean isSupported(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class android.content.Intent { void setClipData(android.content.ClipData); }
-keepclassmembers class com.fsck.k9.helper.FileBrowserHelper$1 { void <init>(com.fsck.k9.helper.FileBrowserHelper,android.widget.EditText,com.fsck.k9.helper.FileBrowserHelper$FileBrowserFailOverCallback); }
-keepclassmembers class android.widget.AbsSpinner { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.AbsSpinner { void <init>(android.content.Context); }
-keepclassmembers class android.widget.AbsSpinner { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,boolean); }
-keepclassmembers class java.nio.charset.Charset { java.util.Set aliases(); }
-keepclassmembers class java.nio.charset.Charset { java.lang.String name(); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class android.widget.AbsSpinner { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.fsck.k9.helper.FileBrowserHelper$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { java.lang.Object next(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onPause(); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { boolean collapseActionView(); }
-keepclassmembers class java.nio.charset.Charset { java.nio.ByteBuffer encode(java.nio.CharBuffer); }
-keepclassmembers class java.util.LinkedHashMap$EntryIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setCustomView(android.view.View); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchCondition { void <clinit>(); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode$Operator { void <clinit>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onRemoteSearch(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,int); }
-keepclassmembers class java.nio.charset.Charset { java.nio.ByteBuffer encode(java.lang.String); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchCondition { void <init>(android.os.Parcel); }
-keepclassmembers class android.widget.AbsSpinner { void setAdapter(android.widget.SpinnerAdapter); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchCondition { void <init>(android.os.Parcel,com.fsck.k9.search.SearchSpecification$1); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode$Operator { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.AbsSpinner { void initAbsSpinner(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onRemoteSearchRequested(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,long); }
-keepclassmembers class java.nio.charset.Charset { java.nio.CharBuffer decode(java.nio.ByteBuffer); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onReply(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchCondition { void <init>(com.fsck.k9.search.SearchSpecification$SearchField,com.fsck.k9.search.SearchSpecification$Attribute,java.lang.String); }
-keepclassmembers class java.nio.charset.Charset { int compareTo(java.nio.charset.Charset); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void <init>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onReplyAll(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchCondition { boolean equals(java.lang.Object); }
-keepclassmembers class java.nio.charset.Charset { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchCondition { com.fsck.k9.search.SearchSpecification$SearchCondition clone(); }
-keepclassmembers class com.fsck.k9.search.ConditionsTreeNode$Operator { com.fsck.k9.search.ConditionsTreeNode$Operator[] values(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onResendMessage(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void assertOpen(); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void assertNotOpen(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency { void <init>(java.lang.String,int,com.android.i18n.phonenumbers.PhoneNumberUtil$1); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.AbsSpinner { void resetList(); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class java.nio.charset.Charset { int hashCode(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onResume(); }
-keepclassmembers class android.support.v4.util.LruCache { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchCondition { int hashCode(); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class android.widget.AbsSpinner { void onMeasure(int,int); }
-keepclassmembers class java.nio.charset.Charset { java.lang.String toString(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.lang.CharSequence); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset defaultCharset(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,android.os.Parcelable); }
-keepclassmembers class org.xml.sax.InputSource { void <init>(java.io.InputStream); }
-keepclassmembers class java.nio.charset.Charset { int compareTo(java.lang.Object); }
-keepclassmembers class java.nio.charset.Charset { java.nio.charset.Charset getDefaultCharset(); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$SearchCondition { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.xml.sax.InputSource { void <init>(java.io.Reader); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void bind(java.net.Socket,org.apache.http.params.HttpParams); }
-keepclassmembers class java.nio.charset.Charset { void <clinit>(); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getSystemId(); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { boolean isOpen(); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getPublicId(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage$1 { void <init>(); }
-keepclassmembers class org.xml.sax.InputSource { java.io.InputStream getByteStream(); }
-keepclassmembers class org.apache.harmony.security.x509.ExtendedKeyUsage$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.xml.sax.InputSource { void setByteStream(java.io.InputStream); }
-keepclassmembers class android.support.v4.util.LruCache { void trimToSize(int); }
-keepclassmembers class org.xml.sax.InputSource { java.lang.String getEncoding(); }
-keepclassmembers class android.widget.AbsListView { void onTouchModeChanged(boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class org.xml.sax.InputSource { void setCharacterStream(java.io.Reader); }
-keepclassmembers class org.xml.sax.InputSource { java.io.Reader getCharacterStream(); }
-keepclassmembers class android.widget.AbsListView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { java.net.InetAddress getRemoteAddress(); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { void <init>(java.util.LinkedHashMap); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { void <init>(java.util.LinkedHashMap,java.util.LinkedHashMap$1); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { int getRemotePort(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onReverseSort(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.io.Serializable); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void setDefaultDisplayHomeAsUpEnabled(boolean); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onStop(); }
-keepclassmembers class android.widget.AbsSpinner { int getChildHeight(android.view.View); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onSendPendingMessages(); }
-keepclassmembers class java.util.LinkedHashMap$KeyIterator { java.lang.Object next(); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void setSocketTimeout(int); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,byte[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean onSearchRequested(); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void shutdown(); }
-keepclassmembers class android.widget.AbsSpinner { int getChildWidth(android.view.View); }
-keepclassmembers class org.apache.http.impl.SocketHttpClientConnection { void close(); }
-keepclassmembers class android.widget.AbsSpinner { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class org.apache.http.auth.AuthState { void <init>(); }
-keepclassmembers class org.apache.http.auth.AuthState { void setAuthScheme(org.apache.http.auth.AuthScheme); }
-keepclassmembers class org.apache.http.auth.AuthState { void invalidate(); }
-keepclassmembers class android.widget.AbsSpinner { void setSelection(int,boolean); }
-keepclassmembers class android.widget.AbsSpinner { void recycleAllViews(); }
-keepclassmembers class org.apache.http.auth.AuthState { org.apache.http.auth.AuthScheme getAuthScheme(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,int[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onSwipeRightToLeft(android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class org.apache.http.auth.AuthState { boolean isValid(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onToggleFlagged(); }
-keepclassmembers class org.apache.http.auth.AuthState { org.apache.http.auth.Credentials getCredentials(); }
-keepclassmembers class org.apache.http.auth.AuthState { org.apache.http.auth.AuthScope getAuthScope(); }
-keepclassmembers class org.apache.http.auth.AuthState { void setCredentials(org.apache.http.auth.Credentials); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onSwipeLeftToRight(android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onToggleRead(); }
-keepclassmembers class android.widget.AbsSpinner { void setSelection(int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean openNext(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class org.apache.http.auth.AuthState { void setAuthScope(org.apache.http.auth.AuthScope); }
-keepclassmembers class org.apache.http.auth.AuthState { java.lang.String toString(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,long[]); }
-keepclassmembers class android.widget.AbsSpinner { void setSelectionInt(int,boolean); }
-keepclassmembers class android.widget.AbsListView { void onTouchDown(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { boolean openPrevious(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.graphics.Interpolator$Result { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.AbsSpinner { void requestLayout(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void selectAll(); }
-keepclassmembers class android.widget.AbsSpinner { android.widget.SpinnerAdapter getAdapter(); }
-keepclassmembers class android.graphics.Interpolator$Result { void <clinit>(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void setActiveMessage(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar { void <clinit>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void toggleMessageSelect(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void updateFooter(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$4 { void <init>(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class android.widget.AbsSpinner { int getCount(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,android.os.Bundle); }
-keepclassmembers class android.widget.AbsSpinner { android.view.View getSelectedView(); }
-keepclassmembers class android.widget.AbsSpinner { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.widget.AbsSpinner { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$4 { java.lang.Integer doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.text.method.TextKeyListener$SettingsObserver { void <init>(android.text.method.TextKeyListener); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void updateTitle(); }
-keepclassmembers class android.widget.AbsListView { void onTouchMove(android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void <clinit>(); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtra(java.lang.String,android.os.IBinder); }
-keepclassmembers class android.content.Intent { android.content.Intent setDataAndType(android.net.Uri,java.lang.String); }
-keepclassmembers class android.widget.AbsSpinner { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.content.Intent { android.content.Intent putExtras(android.os.Bundle); }
-keepclassmembers class android.os.Parcel$2 { void <init>(android.os.Parcel,java.io.InputStream,java.lang.ClassLoader); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment { void onMove(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$4 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.widget.AbsSpinner { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.os.Parcel$2 { java.lang.Class resolveClass(java.io.ObjectStreamClass); }
-keepclassmembers class android.widget.AbsSpinner { void access$000(android.widget.AbsSpinner,android.view.View,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$5 { void <init>(com.fsck.k9.mail.store.imap.ImapFolder,java.util.Set,java.util.Set,java.lang.String); }
-keepclassmembers class android.widget.AbsSpinner { android.widget.Adapter getAdapter(); }
-keepclassmembers class java.lang.Runtime { java.lang.String[] initLibPaths(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$5 { java.util.List search(); }
-keepclassmembers class android.content.Intent { void removeExtra(java.lang.String); }
-keepclassmembers class android.content.Intent { android.content.Intent setFlags(int); }
-keepclassmembers class android.content.Intent { android.content.Intent setPackage(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void <init>(java.io.Reader); }
-keepclassmembers class java.lang.Runtime { void <init>(); }
-keepclassmembers class android.content.Intent { android.content.Intent addFlags(int); }
-keepclassmembers class java.nio.NioUtils { java.nio.channels.FileChannel newFileChannel(java.io.Closeable,java.io.FileDescriptor,int); }
-keepclassmembers class android.content.Intent { android.content.Intent setClass(android.content.Context,java.lang.Class); }
-keepclassmembers class android.widget.AbsListView { void onTouchUp(android.view.MotionEvent); }
-keepclassmembers class android.content.Intent { void setSourceBounds(android.graphics.Rect); }
-keepclassmembers class java.nio.NioUtils { byte[] unsafeArray(java.nio.ByteBuffer); }
-keepclassmembers class android.view.SoundEffectConstants { int getContantForFocusDirection(int); }
-keepclassmembers class java.nio.NioUtils { int unsafeArrayOffset(java.nio.ByteBuffer); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStore$1 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$12 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class libcore.icu.Transliterator { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$12 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.github.amlcurran.showcaseview.OnShowcaseEventListener$1 { void onShowcaseViewHide(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class com.github.amlcurran.showcaseview.OnShowcaseEventListener$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.MessageActions { void actionCompose(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class libcore.icu.Transliterator { long create(java.lang.String); }
-keepclassmembers class com.github.amlcurran.showcaseview.OnShowcaseEventListener$1 { void onShowcaseViewDidHide(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class libcore.icu.Transliterator { java.lang.String transliterate(java.lang.String); }
-keepclassmembers class com.github.amlcurran.showcaseview.OnShowcaseEventListener$1 { void onShowcaseViewTouchBlocked(android.view.MotionEvent); }
-keepclassmembers class com.github.amlcurran.showcaseview.OnShowcaseEventListener$1 { void onShowcaseViewShow(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void checkCacheVersion(); }
-keepclassmembers class libcore.icu.Transliterator { java.lang.String transliterate(long,java.lang.String); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { int read(byte[],int,int); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { boolean jj_2_1(int); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater,int,java.util.zip.ZipEntry); }
-keepclassmembers class com.fsck.k9.activity.compose.MessageActions { void actionEditDraft(android.content.Context,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.fsck.k9.activity.compose.MessageActions { void actionReply(android.content.Context,com.fsck.k9.activity.MessageReference,boolean,android.os.Parcelable); }
-keepclassmembers class com.fsck.k9.activity.compose.MessageActions { void actionForward(android.content.Context,com.fsck.k9.activity.MessageReference,android.os.Parcelable); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { boolean jj_2_2(int); }
-keepclassmembers class java.lang.Runtime { void exit(int); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { java.lang.String map2AlgName(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.transport.WebDavTransport { void <init>(com.fsck.k9.mail.store.StoreConfig); }
-keepclassmembers class com.fsck.k9.activity.compose.MessageActions { android.content.Intent getActionReplyIntent(android.content.Context,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void selectEntries(java.security.Provider); }
-keepclassmembers class android.content.Intent { android.content.Intent setComponent(android.content.ComponentName); }
-keepclassmembers class com.fsck.k9.mail.transport.WebDavTransport { void open(); }
-keepclassmembers class com.fsck.k9.mail.transport.WebDavTransport { java.lang.String createUri(com.fsck.k9.mail.ServerSettings); }
-keepclassmembers class com.fsck.k9.mail.transport.WebDavTransport { com.fsck.k9.mail.ServerSettings decodeUri(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.MessageActions { android.content.Intent getActionReplyIntent(android.content.Context,com.fsck.k9.activity.MessageReference,boolean,android.os.Parcelable); }
-keepclassmembers class java.util.zip.ZipFile$ZipInflaterInputStream { int available(); }
-keepclassmembers class com.fsck.k9.mail.transport.WebDavTransport { void close(); }
-keepclassmembers class com.fsck.k9.helper.SizeFormatter { java.lang.String formatSize(android.content.Context,long); }
-keepclassmembers class com.fsck.k9.mail.transport.WebDavTransport { void sendMessage(com.fsck.k9.mail.Message); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { boolean jj_3R_10(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { boolean jj_3R_12(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { boolean jj_3R_11(); }
-keepclassmembers class java.io.ObjectStreamClass$3 { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { boolean jj_3R_13(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupAccountType { void failure(java.lang.Exception); }
-keepclassmembers class java.lang.Runtime { java.lang.Runtime getRuntime(); }
-keepclassmembers class java.lang.Runtime { void load(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupAccountType { void actionSelectAccountType(android.content.Context,com.fsck.k9.Account,boolean); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mail.internet.JisSupport { java.lang.String getAddressFromReceivedHeader(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupAccountType { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.JisSupport { java.lang.String getJisVariantFromAddress(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { boolean isOID(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { boolean jj_3R_9(); }
-keepclassmembers class java.io.ObjectStreamClass$3 { int compare(java.lang.reflect.Constructor,java.lang.reflect.Constructor); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { boolean jj_3R_8(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { void setConnectTimeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { java.lang.String normalize(java.lang.String); }
-keepclassmembers class java.lang.Runtime { void loadLibrary(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { boolean jj_3_1(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupAccountType { void setupDav(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { boolean jj_3_2(); }
-keepclassmembers class org.apache.harmony.security.utils.AlgNameMapper { void <clinit>(); }
-keepclassmembers class android.content.Intent { java.lang.String toString(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { void setReadTimeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupAccountType { void setupStoreAndSmtpTransport(com.fsck.k9.mail.ServerSettings$Type,java.lang.String); }
-keepclassmembers class com.android.okhttp.OkHttpClient { int getConnectTimeout(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void jj_add_error_token(int,int); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setProxy(java.net.Proxy); }
-keepclassmembers class android.widget.AbsListView { void onOverScrolled(int,int,boolean,boolean); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.net.ProxySelector getProxySelector(); }
-keepclassmembers class android.widget.AbsListView { void onTouchCancel(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.net.Proxy getProxy(); }
-keepclassmembers class android.content.Intent { void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean); }
-keepclassmembers class android.app.IUiModeManager$Stub { android.app.IUiModeManager asInterface(android.os.IBinder); }
-keepclassmembers class android.widget.AbsListView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.net.CookieHandler getCookieHandler(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setResponseCache(java.net.ResponseCache); }
-keepclassmembers class com.fsck.k9.mail.internet.JisSupport { java.lang.String getJisVariantFromFromHeaders(com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupAccountType { void onClick(android.view.View); }
-keepclassmembers class java.math.NativeBN { long BN_new(); }
-keepclassmembers class java.math.NativeBN { int BN_cmp(long,long); }
-keepclassmembers class com.fsck.k9.mail.internet.JisSupport { java.lang.String getJisVariantFromMailerHeaders(com.fsck.k9.mail.Message); }
-keepclassmembers class java.math.NativeBN { void BN_copy(long,long); }
-keepclassmembers class java.math.NativeBN { void putLongInt(long,long); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setOkResponseCache(com.android.okhttp.OkResponseCache); }
-keepclassmembers class java.math.NativeBN { void putULongInt(long,long,boolean); }
-keepclassmembers class java.math.NativeBN { int BN_dec2bn(long,java.lang.String); }
-keepclassmembers class com.android.okhttp.OkHttpClient { int getReadTimeout(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkResponseCache getOkResponseCache(); }
-keepclassmembers class java.lang.Runtime { java.lang.String doLoad(java.lang.String,java.lang.ClassLoader); }
-keepclassmembers class java.math.NativeBN { int BN_hex2bn(long,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { org.apache.james.mime4j.field.address.Token jj_consume_token(int); }
-keepclassmembers class java.lang.Runtime { void nativeExit(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupAccountType { void onCreate(android.os.Bundle); }
-keepclassmembers class java.math.NativeBN { void BN_bin2bn(byte[],int,boolean,long); }
-keepclassmembers class com.android.okhttp.OkHttpClient { javax.net.SocketFactory getSocketFactory(); }
-keepclassmembers class android.widget.AbsListView { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class com.fsck.k9.mail.internet.JisSupport { java.lang.String getJisVariantFromMessage(com.fsck.k9.mail.Message); }
-keepclassmembers class java.math.NativeBN { void twosComp2bn(byte[],int,long); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setSslSocketFactory(javax.net.ssl.SSLSocketFactory); }
-keepclassmembers class java.math.NativeBN { java.lang.String BN_bn2dec(long); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context); }
-keepclassmembers class com.android.okhttp.OkHttpClient { javax.net.ssl.SSLSocketFactory getSslSocketFactory(); }
-keepclassmembers class java.lang.reflect.AbstractMethod$GenericInfo { void <init>(libcore.reflect.ListOfTypes,libcore.reflect.ListOfTypes,java.lang.reflect.Type,java.lang.reflect.TypeVariable[]); }
-keepclassmembers class java.math.NativeBN { long longInt(long); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setHostnameVerifier(javax.net.ssl.HostnameVerifier); }
-keepclassmembers class com.fsck.k9.mail.internet.JisSupport { java.lang.String getJisVariantFromReceivedHeaders(com.fsck.k9.mail.Part); }
-keepclassmembers class java.math.NativeBN { int sign(long); }
-keepclassmembers class java.math.NativeBN { int[] bn2litEndInts(long); }
-keepclassmembers class android.widget.AbsListView { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class java.math.NativeBN { int bitLength(long); }
-keepclassmembers class com.android.okhttp.OkHttpClient { javax.net.ssl.HostnameVerifier getHostnameVerifier(); }
-keepclassmembers class java.math.NativeBN { boolean BN_is_bit_set(long,int); }
-keepclassmembers class java.lang.Runtime { java.lang.String nativeLoad(java.lang.String,java.lang.ClassLoader,java.lang.String); }
-keepclassmembers class java.math.NativeBN { void BN_set_negative(long,int); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkAuthenticator getAuthenticator(); }
-keepclassmembers class java.math.NativeBN { void BN_shift(long,long,int); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void run(long); }
-keepclassmembers class android.widget.AbsListView { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class com.larswerkman.colorpicker.R$styleable { void <clinit>(); }
-keepclassmembers class java.lang.Runtime { void runFinalization(); }
-keepclassmembers class java.math.NativeBN { void BN_mul_word(long,int); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setConnectionPool(com.android.okhttp.ConnectionPool); }
-keepclassmembers class com.fsck.k9.FontSizes { void <init>(); }
-keepclassmembers class java.math.NativeBN { void BN_add(long,long,long); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.ConnectionPool getConnectionPool(); }
-keepclassmembers class android.view.Choreographer$CallbackRecord { void <init>(android.view.Choreographer$1); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setFollowProtocolRedirects(boolean); }
-keepclassmembers class com.fsck.k9.mail.internet.JisSupport { boolean isInDomain(java.lang.String,java.lang.String); }
-keepclassmembers class java.math.NativeBN { void litEndInts2bn(int[],int,boolean,long); }
-keepclassmembers class android.widget.OverScroller { void <init>(android.content.Context,android.view.animation.Interpolator,boolean); }
-keepclassmembers class java.math.NativeBN { void BN_mul(long,long,long); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.RouteDatabase getRoutesDatabase(); }
-keepclassmembers class java.math.NativeBN { void BN_div(long,long,long,long); }
-keepclassmembers class com.fsck.k9.mail.internet.JisSupport { boolean isShiftJis(java.lang.String); }
-keepclassmembers class com.fsck.k9.FontSizes { void loadMessageViewContentPercent(com.fsck.k9.preferences.Storage); }
-keepclassmembers class com.android.okhttp.OkHttpClient { boolean getFollowProtocolRedirects(); }
-keepclassmembers class java.math.NativeBN { void BN_exp(long,long,long); }
-keepclassmembers class java.math.NativeBN { void BN_generate_prime_ex(long,int,boolean,long,long,long); }
-keepclassmembers class com.fsck.k9.FontSizes { int getAccountDescription(); }
-keepclassmembers class com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback { void <init>(com.bumptech.glide.load.engine.ResourceRecycler$1); }
-keepclassmembers class android.widget.OverScroller { void setInterpolator(android.view.animation.Interpolator); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void jj_la1_init_0(); }
-keepclassmembers class com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback { boolean handleMessage(android.os.Message); }
-keepclassmembers class android.widget.OverScroller { boolean isFinished(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getAccountName(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getFolderName(); }
-keepclassmembers class android.widget.AbsListView { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.widget.OverScroller { int getCurrY(); }
-keepclassmembers class android.widget.OverScroller { int getCurrX(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getFolderStatus(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageListPreview(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageListSubject(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageListSender(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void jj_la1_init_1(); }
-keepclassmembers class android.widget.OverScroller { float getCurrVelocity(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageViewCC(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient setProtocols(java.util.List); }
-keepclassmembers class java.io.NotActiveException { void <init>(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageViewContentAsPercent(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageViewAdditionalHeaders(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageViewDate(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageViewSender(); }
-keepclassmembers class java.io.NotActiveException { void <init>(java.lang.String); }
-keepclassmembers class java.util.concurrent.RejectedExecutionException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageViewSubject(); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageViewTo(); }
-keepclassmembers class java.lang.Runtime { void addShutdownHook(java.lang.Thread); }
-keepclassmembers class android.widget.AbsListView { void draw(android.graphics.Canvas); }
-keepclassmembers class com.fsck.k9.FontSizes { void load(com.fsck.k9.preferences.Storage); }
-keepclassmembers class java.io.ByteArrayInputStream { void <init>(byte[]); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { int jj_ntk(); }
-keepclassmembers class java.io.ByteArrayInputStream { void <init>(byte[],int,int); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void <init>(); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void register(); }
-keepclassmembers class de.cketti.safecontentresolver.SafeContentResolverApi14 { void <init>(android.content.Context); }
-keepclassmembers class android.widget.OverScroller { boolean computeScrollOffset(); }
-keepclassmembers class de.cketti.safecontentresolver.SafeContentResolverApi14 { int extractSystemFileDescriptor(java.io.FileDescriptor); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void jj_rescan_token(); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(android.widget.Filter$1); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.util.List getProtocols(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.HostResolver getHostResolver(); }
-keepclassmembers class android.widget.Filter$RequestArguments { void <init>(); }
-keepclassmembers class java.io.ByteArrayInputStream { int available(); }
-keepclassmembers class java.io.ByteArrayInputStream { void mark(int); }
-keepclassmembers class de.cketti.safecontentresolver.SafeContentResolverApi14 { int getFileUidOrThrow(java.io.FileDescriptor); }
-keepclassmembers class java.io.ByteArrayInputStream { void close(); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(); }
-keepclassmembers class java.io.ByteArrayInputStream { boolean markSupported(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void jj_save(int,int); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageComposeInput(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <init>(android.graphics.drawable.VectorDrawable$VectorDrawableState); }
-keepclassmembers class com.fsck.k9.FontSizes { int getMessageListDate(); }
-keepclassmembers class com.fsck.k9.FontSizes { void save(com.fsck.k9.preferences.StorageEditor); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.net.HttpURLConnection open(java.net.URL); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void <init>(com.android.okhttp.internal.http.HttpEngine,com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.content.Context,int); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.content.Context,int,int); }
-keepclassmembers class android.widget.AbsListView { void initOrResetVelocityTracker(); }
-keepclassmembers class android.widget.OverScroller { void startScroll(int,int,int,int); }
-keepclassmembers class com.android.okhttp.OkHttpClient { java.net.HttpURLConnection open(java.net.URL,java.net.Proxy); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { com.android.okio.Sink createRequestBody(com.android.okhttp.Request); }
-keepclassmembers class android.widget.AbsListView { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.widget.AbsListView { void initVelocityTrackerIfNotExists(); }
-keepclassmembers class android.widget.AbsListView { void recycleVelocityTracker(); }
-keepclassmembers class java.io.ByteArrayInputStream { int read(byte[],int,int); }
-keepclassmembers class java.lang.Runtime { int availableProcessors(); }
-keepclassmembers class android.widget.OverScroller { boolean springBack(int,int,int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.Runtime { void <clinit>(); }
-keepclassmembers class android.widget.OverScroller { void startScroll(int,int,int,int,int); }
-keepclassmembers class android.widget.AbsListView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.FontSizes { void setAccountDescription(int); }
-keepclassmembers class android.view.View$10 { void <init>(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void writeRequestHeaders(com.android.okhttp.Request); }
-keepclassmembers class android.text.style.TtsSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.FontSizes { void setAccountName(int); }
-keepclassmembers class java.io.ByteArrayInputStream { long skip(long); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int); }
-keepclassmembers class com.fsck.k9.FontSizes { void setFolderName(int); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageComposeInput(int); }
-keepclassmembers class com.fsck.k9.FontSizes { void setFolderStatus(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageListDate(int); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageListSender(int); }
-keepclassmembers class com.fsck.k9.message.QuotedTextMode { void <clinit>(); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageListPreview(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void <init>(com.android.okhttp.OkHttpClient,com.android.okhttp.Request,boolean,com.android.okhttp.Connection,com.android.okhttp.internal.http.RouteSelector,com.android.okhttp.internal.http.RetryableSink,com.android.okhttp.Response); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void writeRequestBody(com.android.okhttp.internal.http.RetryableSink); }
-keepclassmembers class android.view.KeyEvent$1 { void <init>(); }
-keepclassmembers class android.widget.OverScroller { void fling(int,int,int,int,int,int,int,int,int,int); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageListSubject(int); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageViewAdditionalHeaders(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean hasTranslucentRoot(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void flushRequest(); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageViewContentAsPercent(int); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { boolean jj_scan_token(int); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { com.android.okhttp.Response$Builder readResponseHeaders(); }
-keepclassmembers class com.fsck.k9.message.QuotedTextMode { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageViewDate(int); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageViewSender(int); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageViewSubject(int); }
-keepclassmembers class com.android.okhttp.OkHttpClient { javax.net.ssl.SSLSocketFactory getDefaultSSLSocketFactory(); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient clone(); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.message.QuotedTextMode { com.fsck.k9.message.QuotedTextMode valueOf(java.lang.String); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageViewCC(int); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { java.util.List writeNameValueBlock(com.android.okhttp.Request,com.android.okhttp.Protocol,java.lang.String); }
-keepclassmembers class com.fsck.k9.FontSizes { void setViewTextSize(android.widget.TextView,int); }
-keepclassmembers class com.fsck.k9.FontSizes { void setMessageViewTo(int); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkResponseCache toOkResponseCache(java.net.ResponseCache); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.Paint getPaint(android.graphics.ColorFilter); }
-keepclassmembers class com.android.okhttp.OkHttpClient { com.android.okhttp.OkHttpClient copyWithDefaults(); }
-keepclassmembers class com.fsck.k9.message.QuotedTextMode { com.fsck.k9.message.QuotedTextMode[] values(); }
-keepclassmembers class android.text.style.TextAppearanceSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.AbsListView { void onSecondaryPointerUp(android.view.MotionEvent); }
-keepclassmembers class java.io.ByteArrayInputStream { void reset(); }
-keepclassmembers class android.widget.AbsListView { void reportScrollStateChange(int); }
-keepclassmembers class com.fsck.k9.mailstore.BinaryMemoryBody { java.lang.String getEncoding(); }
-keepclassmembers class com.fsck.k9.mailstore.BinaryMemoryBody { void <init>(byte[],java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void createCachedBitmapIfNeeded(android.graphics.Rect); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void sendRequest(); }
-keepclassmembers class com.fsck.k9.mailstore.BinaryMemoryBody { java.io.InputStream getInputStream(); }
-keepclassmembers class com.fsck.k9.mailstore.BinaryMemoryBody { void writeTo(java.io.OutputStream); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canReuseBitmap(int,int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canReuseCache(); }
-keepclassmembers class android.widget.OverScroller { void abortAnimation(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void addr_spec(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void updateCacheStates(); }
-keepclassmembers class org.apache.james.mime4j.stream.EntityState { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.Account$FolderMode { void <clinit>(); }
-keepclassmembers class android.ddm.DdmHandleProfiling { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.stream.EntityState { org.apache.james.mime4j.stream.EntityState[] values(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { boolean canApplyTheme(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Response stripBody(com.android.okhttp.Response); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread { void <init>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplGingerbread { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class org.apache.james.mime4j.stream.EntityState { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void address(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { void updateCachedBitmap(android.graphics.Rect); }
-keepclassmembers class android.view.ViewPropertyAnimator$NameValuesHolder { void <init>(int,float,float); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void connect(com.android.okhttp.Request); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.database.DataSetObservable { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.BinaryMemoryBody { long getSize(); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.io.File); }
-keepclassmembers class com.fsck.k9.Account$FolderMode { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mailstore.BinaryMemoryBody { void setEncoding(java.lang.String); }
-keepclassmembers class android.view.FocusFinder$1 { void <init>(); }
-keepclassmembers class android.view.FocusFinder$1 { android.view.FocusFinder initialValue(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VectorDrawableState { int getChangingConfigurations(); }
-keepclassmembers class android.widget.AbsListView { void createScrollingCache(); }
-keepclassmembers class android.database.DataSetObservable { void notifyChanged(); }
-keepclassmembers class android.widget.ExpandableListView$SavedState { void <init>(android.os.Parcelable,java.util.ArrayList); }
-keepclassmembers class com.fsck.k9.Account$FolderMode { com.fsck.k9.Account$FolderMode[] values(); }
-keepclassmembers class android.database.DataSetObservable { void notifyInvalidated(); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.io.File,boolean); }
-keepclassmembers class com.fsck.k9.Account$FolderMode { com.fsck.k9.Account$FolderMode valueOf(java.lang.String); }
-keepclassmembers class android.view.DragEvent { void <init>(); }
-keepclassmembers class android.graphics.BitmapFactory$Options { void <init>(); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.io.File,boolean,int); }
-keepclassmembers class android.widget.AbsListView { void scrollListBy(int); }
-keepclassmembers class android.widget.AbsListView { void clearScrollingCache(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { java.lang.String joinOnNull(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.ExpandableListView$SavedState { void <clinit>(); }
-keepclassmembers class android.view.DragEvent { void init(int,float,float,android.content.ClipDescription,android.content.ClipData,java.lang.Object,boolean); }
-keepclassmembers class android.app.Notification$Action$Builder { void <init>(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void address_list(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { com.android.okhttp.Response$Builder readNameValueBlock(java.util.List,com.android.okhttp.Protocol); }
-keepclassmembers class android.widget.AbsListView { boolean trackMotionScroll(int,int); }
-keepclassmembers class android.view.FocusFinder$1 { java.lang.Object initialValue(); }
-keepclassmembers class java.io.OptionalDataException { void <init>(); }
-keepclassmembers class java.io.OptionalDataException { void <init>(java.lang.String); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.lang.String,boolean); }
-keepclassmembers class java.util.TreeMap { void <init>(); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean canScrollList(int); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.Map); }
-keepclassmembers class java.util.jar.JarFile { java.util.Enumeration entries(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13$1 { void <init>(com.fsck.k9.activity.MessageCompose$13,com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.JarEntry getJarEntry(java.lang.String); }
-keepclassmembers class android.app.Notification$Action$Builder { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,android.app.RemoteInput[]); }
-keepclassmembers class java.util.jar.JarFile { java.util.jar.Manifest getManifest(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { void setTint(android.graphics.drawable.Drawable,int); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$13$1 { void onClick(android.view.View); }
-keepclassmembers class java.util.jar.JarFile { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompatLollipop { android.graphics.drawable.Drawable wrapForTinting(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.Comparator); }
-keepclassmembers class android.content.Intent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.app.Notification$Action$Builder { android.app.Notification$Action$Builder addExtras(android.os.Bundle); }
-keepclassmembers class java.util.TreeMap { void <init>(java.util.SortedMap); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void writingRequestHeaders(); }
-keepclassmembers class java.util.jar.JarFile { java.util.HashMap readMetaEntries(java.util.zip.ZipFile,boolean); }
-keepclassmembers class android.view.DragEvent { android.view.DragEvent obtain(android.view.DragEvent); }
-keepclassmembers class android.app.Notification$Action$Builder { android.app.Notification$Action$Builder addRemoteInput(android.app.RemoteInput); }
-keepclassmembers class android.view.DragEvent { float getX(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void angle_addr(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { boolean hasRequestBody(); }
-keepclassmembers class android.view.DragEvent { float getY(); }
-keepclassmembers class android.view.DragEvent { java.lang.Object getLocalState(); }
-keepclassmembers class android.view.DragEvent { android.content.ClipData getClipData(); }
-keepclassmembers class android.view.DragEvent { int getAction(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okio.Sink getRequestBody(); }
-keepclassmembers class android.view.DragEvent { void recycle(); }
-keepclassmembers class java.util.TreeMap { int size(); }
-keepclassmembers class android.app.Notification$Action$Builder { android.app.Notification$Action build(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Request getRequest(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { boolean hasResponse(); }
-keepclassmembers class java.util.TreeMap { boolean isEmpty(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Response getResponse(); }
-keepclassmembers class java.util.jar.JarFile { boolean endsWithIgnoreCase(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okio.Source getResponseBody(); }
-keepclassmembers class java.util.TreeMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class android.content.Intent { void <init>(android.os.Parcel); }
-keepclassmembers class java.util.TreeMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class java.util.TreeMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.DragEvent { java.lang.String toString(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { java.io.InputStream getResponseBodyBytes(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Connection getConnection(); }
-keepclassmembers class java.util.TreeMap { java.lang.Object remove(java.lang.Object); }
-keepclassmembers class java.util.TreeMap { void clear(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void domain(); }
-keepclassmembers class java.util.jar.JarFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class java.util.TreeMap { java.lang.Object putInternal(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { com.android.okio.Source getTransferStream(java.net.CacheRequest); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node find(java.lang.Object,java.util.TreeMap$Relation); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void emptyTransferStream(); }
-keepclassmembers class android.content.Intent { void readFromParcel(android.os.Parcel); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.internal.http.HttpEngine recover(java.io.IOException); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void releaseConnectionOnIdle(); }
-keepclassmembers class java.util.jar.JarFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { void hideSelector(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void disconnect(com.android.okhttp.internal.http.HttpEngine); }
-keepclassmembers class android.widget.AbsListView { int getHeaderViewsCount(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { boolean isProhibitedHeader(com.android.okhttp.Protocol,com.android.okio.ByteString); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { void <clinit>(); }
-keepclassmembers class android.widget.AutoCompleteTextView$DropDownItemClickListener { void <init>(android.widget.AutoCompleteTextView); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Route getRoute(); }
-keepclassmembers class android.content.Intent { android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet); }
-keepclassmembers class android.widget.AbsListView { int reconcileSelectedPosition(); }
-keepclassmembers class android.widget.AbsListView { int getFooterViewsCount(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { boolean isRecoverable(java.io.IOException); }
-keepclassmembers class android.database.DatabaseUtils { int getTypeOfObject(java.lang.Object); }
-keepclassmembers class android.widget.AutoCompleteTextView$DropDownItemClickListener { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.view.DragEvent { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void maybeCache(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { void <clinit>(); }
-keepclassmembers class android.widget.AbsListView { int findClosestMotionRow(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$1$2 { void <init>(com.fsck.k9.activity.setup.AccountSetupCheckSettings$1,java.security.cert.X509Certificate[]); }
-keepclassmembers class java.util.jar.JarFile { void close(); }
-keepclassmembers class com.android.okhttp.internal.http.SpdyTransport { boolean canReuseConnection(); }
-keepclassmembers class java.util.jar.JarFile { java.util.List getMetaEntries(java.util.zip.ZipFile); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void releaseConnection(); }
-keepclassmembers class com.fsck.k9.view.ThemeUtils { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$24 { void <clinit>(); }
-keepclassmembers class android.widget.AutoCompleteTextView$DropDownItemClickListener { void <init>(android.widget.AutoCompleteTextView,android.widget.AutoCompleteTextView$1); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$1$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelectionIfNeeded(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Connection close(); }
-keepclassmembers class com.fsck.k9.view.ThemeUtils { int getStyledColor(android.content.res.Resources$Theme,int); }
-keepclassmembers class android.widget.AbsListView { boolean resurrectSelection(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { org.apache.james.mime4j.field.address.ParseException generateParseException(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void <init>(java.net.URL,com.android.okhttp.OkHttpClient); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void initContentStream(com.android.okio.Source); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { void <init>(com.fsck.k9.mail.Body); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void disconnect(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { void <init>(com.fsck.k9.mail.Body,java.lang.String); }
-keepclassmembers class com.fsck.k9.view.ThemeUtils { int getStyledColor(android.content.Context,int); }
-keepclassmembers class java.util.LinkedList$LinkIterator { void <init>(java.util.LinkedList,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { boolean hasResponseBody(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void <init>(com.android.okhttp.internal.http.HttpURLConnectionImpl); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { void <init>(org.apache.james.mime4j.field.address.SimpleCharStream); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { void <init>(com.fsck.k9.mail.internet.MimeHeader,com.fsck.k9.mail.Body); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Request networkRequest(com.android.okhttp.Request); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { java.lang.String getFirstHeader(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { void addRawHeader(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node findByEntry(java.util.Map$Entry); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoSplitter$CryptoMessageParts { void <init>(com.fsck.k9.mail.Part,com.fsck.k9.mailstore.CryptoResultAnnotation,java.util.List); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node findByObject(java.lang.Object); }
-keepclassmembers class java.util.TreeMap { void removeInternal(java.util.TreeMap$Node); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { void addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { void ReInitRounds(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { java.lang.String getContentType(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { com.fsck.k9.mail.Body getBody(); }
-keepclassmembers class java.util.TreeMap { java.util.TreeMap$Node removeInternalByKey(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView { void confirmCheckedPositionsById(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { java.lang.String getDisposition(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { java.lang.String getContentId(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { java.lang.String getDefaultUserAgent(); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Address { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { java.lang.String getMimeType(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { void jjCheckNAdd(int); }
-keepclassmembers class java.util.TreeMap { void replaceInParent(java.util.TreeMap$Node,java.util.TreeMap$Node); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { java.lang.String[] getHeader(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void setReadTimeout(int); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Address { void addMailboxesTo(java.util.List); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { org.apache.james.mime4j.field.address.Token getToken(int); }
-keepclassmembers class java.util.LinkedList$LinkIterator { boolean hasNext(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void setConnectTimeout(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { java.lang.String hostHeader(java.net.URL); }
-keepclassmembers class android.os.ResultReceiver$1 { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { int jjMoveNfa_0(int,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void setUseCaches(boolean); }
-keepclassmembers class java.util.TreeMap { void rebalance(java.util.TreeMap$Node,boolean); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { boolean isMimeType(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { void setBody(com.fsck.k9.mail.Body); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { void setEncoding(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { void writeHeaderTo(java.io.OutputStream); }
-keepclassmembers class java.util.LinkedList$LinkIterator { java.lang.Object next(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void group_body(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { void setHeader(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.LinkedList$LinkIterator { boolean hasPrevious(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void setDoInput(boolean); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void readResponse(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeBodyPart { void writeTo(java.io.OutputStream); }
-keepclassmembers class android.graphics.Shader { void <init>(); }
-keepclassmembers class android.widget.AbsListView { void handleDataChanged(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void setDoOutput(boolean); }
-keepclassmembers class java.util.LinkedList$LinkIterator { java.lang.Object previous(); }
-keepclassmembers class android.graphics.Shader { boolean getLocalMatrix(android.graphics.Matrix); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class android.graphics.Shader { void setLocalMatrix(android.graphics.Matrix); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.graphics.Shader { void init(long); }
-keepclassmembers class android.graphics.Bitmap { int getDefaultDensity(); }
-keepclassmembers class java.util.LinkedList$LinkIterator { int previousIndex(); }
-keepclassmembers class java.util.LinkedList$LinkIterator { void remove(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void jjtreeCloseNodeScope(org.apache.james.mime4j.field.address.Node); }
-keepclassmembers class android.hardware.input.InputDeviceIdentifier { void <clinit>(); }
-keepclassmembers class android.graphics.Shader { void copyLocalMatrix(android.graphics.Shader); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { java.lang.String getHeaderField(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void jjtreeOpenNodeScope(org.apache.james.mime4j.field.address.Node); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { boolean getUseCaches(); }
-keepclassmembers class android.graphics.Shader { long getNativeInstance(); }
-keepclassmembers class java.util.LinkedList$LinkIterator { int nextIndex(); }
-keepclassmembers class android.content.BroadcastReceiver { void <init>(); }
-keepclassmembers class java.util.TreeMap { void rotateLeft(java.util.TreeMap$Node); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void addRequestProperty(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.Intent { void prepareToLeaveProcess(); }
-keepclassmembers class java.util.LinkedList$LinkIterator { void set(java.lang.Object); }
-keepclassmembers class android.content.BroadcastReceiver { android.content.BroadcastReceiver$PendingResult goAsync(); }
-keepclassmembers class android.content.BroadcastReceiver { android.os.IBinder peekService(android.content.Context,android.content.Intent); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultCode(int); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void local_part(); }
-keepclassmembers class java.util.TreeMap { void rotateRight(java.util.TreeMap$Node); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { int jjMoveNfa_1(int,int); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultData(java.lang.String); }
-keepclassmembers class android.content.BroadcastReceiver { int getResultCode(); }
-keepclassmembers class android.graphics.Shader { void nativeSetLocalMatrix(long,long); }
-keepclassmembers class com.jcraft.jzlib.Tree { void <clinit>(); }
-keepclassmembers class android.content.BroadcastReceiver { java.lang.String getResultData(); }
-keepclassmembers class android.widget.AbsListView { void dismissPopup(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { int getContentLength(); }
-keepclassmembers class android.widget.AbsListView { void showPopup(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.Headers combine(com.android.okhttp.Headers,com.android.okhttp.Headers); }
-keepclassmembers class android.content.BroadcastReceiver { void setResultExtras(android.os.Bundle); }
-keepclassmembers class android.content.BroadcastReceiver { android.os.Bundle getResultExtras(boolean); }
-keepclassmembers class android.widget.AbsListView { void positionPopup(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { java.lang.String getContentType(); }
-keepclassmembers class android.graphics.Bitmap { void checkXYSign(int,int); }
-keepclassmembers class android.widget.AbsListView { int getDistance(android.graphics.Rect,android.graphics.Rect,int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { java.lang.String getContentEncoding(); }
-keepclassmembers class android.content.BroadcastReceiver { void setResult(int,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.content.BroadcastReceiver { boolean getAbortBroadcast(); }
-keepclassmembers class android.graphics.Bitmap { void checkWidthHeight(int,int); }
-keepclassmembers class android.content.BroadcastReceiver { void clearAbortBroadcast(); }
-keepclassmembers class android.content.BroadcastReceiver { boolean isInitialStickyBroadcast(); }
-keepclassmembers class java.util.TreeMap { java.lang.Object lastKey(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { int getResponseCode(); }
-keepclassmembers class java.util.TreeMap { java.lang.Object firstKey(); }
-keepclassmembers class android.content.BroadcastReceiver { void setOrderedHint(boolean); }
-keepclassmembers class android.content.BroadcastReceiver { void abortBroadcast(); }
-keepclassmembers class android.content.Intent { boolean migrateExtraStreamToClipData(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { java.lang.String getResponseMessage(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void mailbox(); }
-keepclassmembers class android.content.BroadcastReceiver { void setPendingResult(android.content.BroadcastReceiver$PendingResult); }
-keepclassmembers class android.content.BroadcastReceiver { boolean isOrderedBroadcast(); }
-keepclassmembers class android.content.BroadcastReceiver { android.content.BroadcastReceiver$PendingResult getPendingResult(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void connect(); }
-keepclassmembers class android.content.BroadcastReceiver { void setDebugUnregister(boolean); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void growToSize(int); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { int offsetOf(int); }
-keepclassmembers class java.util.TreeMap { java.lang.Object ceilingKey(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { boolean isEndToEnd(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void <init>(com.android.okhttp.internal.BitArray$FixedCapacity); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { com.android.okhttp.TunnelRequest getTunnelConfig(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean); }
-keepclassmembers class android.widget.AbsListView { boolean isInFilterMode(); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { int shiftOf(int); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void name_addr(); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void clear(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpEngine { void receiveHeaders(com.android.okhttp.Headers); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void set(int); }
-keepclassmembers class java.util.TreeMap { java.util.Set entrySet(); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { void <init>(long,com.android.okhttp.Request,com.android.okhttp.Response); }
-keepclassmembers class java.util.TreeMap { java.util.Set keySet(); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void toggle(int); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { int jjMoveNfa_2(int,int); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { boolean get(int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.graphics.Bitmap); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { org.apache.james.mime4j.field.address.ASTaddress_list parseAddressList(); }
-keepclassmembers class android.widget.AbsListView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class android.widget.AbsListView { boolean sendToTextFilter(int,int,android.view.KeyEvent); }
-keepclassmembers class android.content.BroadcastReceiver { boolean getDebugUnregister(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpsURLConnectionImpl { void disconnect(); }
-keepclassmembers class android.content.BroadcastReceiver { int getSendingUserId(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void parseAddressList0(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void shiftLeft(int); }
-keepclassmembers class java.io.InvalidClassException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.content.Intent { android.content.ClipData$Item makeClipItem(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,int); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { com.android.okhttp.internal.http.CacheStrategy get(); }
-keepclassmembers class android.widget.AbsListView { void createTextFilter(boolean); }
-keepclassmembers class java.util.TreeMap { java.util.SortedMap headMap(java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void phrase(); }
-keepclassmembers class android.widget.AbsListView { android.widget.EditText getTextFilterInput(); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { void <init>(com.android.okhttp.internal.BitArray$FixedCapacity,com.android.okhttp.internal.BitArray$1); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Super { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.BitArray$VariableCapacity { int checkInput(int); }
-keepclassmembers class android.widget.AbsListView { void onGlobalLayout(); }
-keepclassmembers class java.io.InvalidClassException { java.lang.String getMessage(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Super { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.widget.AbsListView { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$8 { com.fsck.k9.mail.internet.MimeBodyPart processData(java.io.InputStream); }
-keepclassmembers class android.widget.AbsListView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { com.android.okhttp.internal.http.CacheStrategy getCandidate(); }
-keepclassmembers class android.content.Intent { void <clinit>(); }
-keepclassmembers class android.system.Os { android.system.StructStat fstat(java.io.FileDescriptor); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$8 { java.lang.Object processData(java.io.InputStream); }
-keepclassmembers class java.io.FilterOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParser { void route(); }
-keepclassmembers class java.io.FilterOutputStream { void close(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$8 { void <init>(com.fsck.k9.ui.crypto.MessageCryptoHelper); }
-keepclassmembers class android.content.res.AssetFileDescriptor { void <init>(android.os.ParcelFileDescriptor,long,long); }
-keepclassmembers class android.content.res.AssetFileDescriptor { void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle); }
-keepclassmembers class android.widget.AbsListView { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.database.DatabaseUtils { int cursorPickFillWindowStartPosition(int,int); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { void <init>(com.fsck.k9.mail.Address); }
-keepclassmembers class java.io.FilterOutputStream { void flush(); }
-keepclassmembers class java.io.FilterOutputStream { void write(byte[],int,int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.content.res.AssetFileDescriptor { android.os.ParcelFileDescriptor getParcelFileDescriptor(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class android.content.res.AssetFileDescriptor { long getLength(); }
-keepclassmembers class java.io.FilterOutputStream { void write(int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class android.content.res.AssetFileDescriptor { java.io.FileInputStream createInputStream(); }
-keepclassmembers class android.widget.AbsListView { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AbsListView { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.AbsListView { void onFilterComplete(int); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { void <init>(java.lang.String,java.lang.String,java.lang.String,long,java.lang.String); }
-keepclassmembers class android.system.Os { int getpid(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config,boolean); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus access$000(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class android.widget.AbsListView { void setTranscriptMode(int); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { int jjMoveNfa_3(int,int); }
-keepclassmembers class android.content.res.AssetFileDescriptor { long getStartOffset(); }
-keepclassmembers class java.util.TreeMap { void <clinit>(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus access$002(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AbsListView { int getSolidColor(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { java.lang.String getDisplayName(); }
-keepclassmembers class android.widget.AbsListView { int getCacheColorHint(); }
-keepclassmembers class java.util.zip.ZipFile { void <init>(java.io.File,int); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { long computeFreshnessLifetime(); }
-keepclassmembers class android.database.DatabaseUtils { long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.system.Os { int getuid(); }
-keepclassmembers class android.widget.RemoteViews$ReflectionActionWithoutParams { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo36 { void addAttachmentsContentIdColumn(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { boolean equals(java.lang.Object); }
-keepclassmembers class android.database.DatabaseUtils { long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[]); }
-keepclassmembers class java.util.zip.ZipFile { void close(); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { long cacheResponseAge(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { android.net.Uri getContactLookupUri(); }
-keepclassmembers class java.util.zip.ZipFile { void checkNotClosed(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus getCryptoStatus(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { java.lang.String getDisplayNameOrAddress(); }
-keepclassmembers class android.widget.AbsListView { void setCacheColorHint(int); }
-keepclassmembers class android.widget.AbsListView { boolean onRemoteAdapterConnected(); }
-keepclassmembers class java.util.zip.ZipFile { java.util.Enumeration entries(); }
-keepclassmembers class android.content.res.AssetFileDescriptor { void <clinit>(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { java.lang.String getDisplayNameOrUnknown(android.content.Context); }
-keepclassmembers class android.widget.RemoteViews$ReflectionActionWithoutParams { void <init>(android.widget.RemoteViews,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { java.lang.String getNameOrUnknown(android.content.Context); }
-keepclassmembers class android.widget.RemoteViews$ReflectionActionWithoutParams { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.widget.AbsListView { void onRemoteAdapterDisconnected(); }
-keepclassmembers class android.widget.AbsListView { void setVisibleRangeHint(int,int); }
-keepclassmembers class java.util.zip.ZipFile { java.io.InputStream getInputStream(java.util.zip.ZipEntry); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String,java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { boolean isFreshnessLifetimeHeuristic(); }
-keepclassmembers class android.widget.AbsListView { void setSelectionFromTop(int,int); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.io.File); }
-keepclassmembers class java.util.zip.ZipFile { java.util.zip.ZipEntry getEntry(java.lang.String); }
-keepclassmembers class dalvik.system.DexFile { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageReferenceHelper { java.util.List toMessageReferenceList(java.util.List); }
-keepclassmembers class android.system.Os { java.io.FileDescriptor[] pipe(); }
-keepclassmembers class dalvik.system.DexFile { dalvik.system.DexFile loadDex(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView { int access$400(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { int access$500(android.widget.AbsListView); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { boolean isValidEmailAddress(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$Recipient { void setCryptoStatus(com.fsck.k9.view.RecipientSelectView$RecipientCryptoStatus); }
-keepclassmembers class com.fsck.k9.controller.UnavailableAccountException { void <init>(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String toString(); }
-keepclassmembers class java.util.zip.ZipFile { java.lang.String getName(); }
-keepclassmembers class com.android.okhttp.internal.http.CacheStrategy$Factory { boolean hasConditions(com.android.okhttp.Request); }
-keepclassmembers class android.provider.Settings$System { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView { java.lang.Runnable access$1202(android.widget.AbsListView,java.lang.Runnable); }
-keepclassmembers class android.widget.AbsListView { boolean access$1300(android.widget.AbsListView); }
-keepclassmembers class dalvik.system.DexFile { java.lang.String getName(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream { int fillbuf(java.io.InputStream,byte[]); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$1900(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { android.os.StrictMode$Span access$1902(android.widget.AbsListView,android.os.StrictMode$Span); }
-keepclassmembers class com.fsck.k9.activity.MessageReferenceHelper { java.util.ArrayList toMessageReferenceStringList(java.util.List); }
-keepclassmembers class com.fsck.k9.controller.UnavailableAccountException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.util.zip.ZipFile { void readCentralDir(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream { void <init>(java.io.InputStream,byte[]); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$4 { void <init>(com.tokenautocomplete.TokenCompleteTextView,java.lang.Object); }
-keepclassmembers class android.database.DatabaseUtils { int getSqlStatementType(java.lang.String); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$4 { void run(); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClass(java.lang.String,java.lang.ClassLoader,long,java.util.List); }
-keepclassmembers class android.system.Os { int read(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class android.widget.AbsListView { int access$2100(android.widget.AbsListView); }
-keepclassmembers class android.widget.AbsListView { void access$2600(android.widget.AbsListView); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class loadClassBinaryName(java.lang.String,java.lang.ClassLoader,java.util.List); }
-keepclassmembers class android.widget.AbsListView { int access$2000(android.widget.AbsListView); }
-keepclassmembers class dalvik.system.DexFile { long openDexFile(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.provider.Settings$System { int getInt(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class java.util.zip.ZipFile { void throwZipException(java.lang.String,int); }
-keepclassmembers class android.provider.Settings$System { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class org.apache.harmony.security.utils.Array { java.lang.String toString(byte[],java.lang.String); }
-keepclassmembers class android.graphics.Bitmap { int scaleFromDensity(int,int,int); }
-keepclassmembers class dalvik.system.DexFile { java.lang.Class defineClassNative(java.lang.String,java.lang.ClassLoader,long); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream { java.io.IOException streamClosed(); }
-keepclassmembers class java.util.zip.ZipFile { void access$000(java.util.zip.ZipFile); }
-keepclassmembers class android.database.DatabaseUtils { int findRowIdColumnIndex(java.lang.String[]); }
-keepclassmembers class android.database.DatabaseUtils { void <clinit>(); }
-keepclassmembers class dalvik.system.DexFile { long openDexFileNative(java.lang.String,java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView { android.widget.FastScroller access$4100(android.widget.AbsListView); }
-keepclassmembers class android.provider.Settings$System { android.net.Uri getUriFor(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream { int available(); }
-keepclassmembers class org.apache.harmony.security.utils.Array { java.lang.String getBytesAsString(byte[]); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream { void fixMarkLimit(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { int jjMoveNfa_4(int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream { void close(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream { int read(); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$7 { void <clinit>(); }
-keepclassmembers class com.android.okhttp.ConnectionPool { void <init>(int,long); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream { void mark(int); }
-keepclassmembers class com.android.okhttp.ConnectionPool { com.android.okhttp.ConnectionPool getDefault(); }
-keepclassmembers class android.widget.AbsListView { void <clinit>(); }
-keepclassmembers class com.android.okhttp.ConnectionPool { com.android.okhttp.Connection get(com.android.okhttp.Address); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { void <init>(java.security.cert.X509Certificate); }
-keepclassmembers class android.system.Os { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { boolean hasUnsupportedCriticalExtension(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream { int read(byte[],int,int); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$SavedState { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.util.Set getCriticalExtensionOIDs(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { void checkValidity(); }
-keepclassmembers class android.widget.AbsListView { void access$4200(android.widget.AbsListView,android.view.View,boolean); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$SavedState { void <init>(android.os.Parcel,com.fsck.k9.view.FoldableLinearLayout$1); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.Principal getIssuerDN(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.math.BigInteger getSerialNumber(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.Principal getSubjectDN(); }
-keepclassmembers class com.android.okhttp.ConnectionPool { void recycle(com.android.okhttp.Connection); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class android.system.Os { android.system.StructStatVfs statvfs(java.lang.String); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$SavedState { void <init>(android.os.Parcelable,com.fsck.k9.view.FoldableLinearLayout$1); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$SavedState { boolean access$100(com.fsck.k9.view.FoldableLinearLayout$SavedState); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$SavedState { boolean access$102(com.fsck.k9.view.FoldableLinearLayout$SavedState,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo42 { void from41MoveFolderPreferences(com.fsck.k9.mailstore.migrations.MigrationsHelper); }
-keepclassmembers class com.android.internal.app.AlertController { boolean shouldCenterSingleButton(android.content.Context); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { int jjMoveStringLiteralDfa0_0(); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { boolean[] getKeyUsage(); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { void <init>(int,int,java.lang.String); }
-keepclassmembers class android.system.Os { int write(java.io.FileDescriptor,byte[],int,int); }
-keepclassmembers class com.android.okhttp.ConnectionPool { void share(com.android.okhttp.Connection); }
-keepclassmembers class com.android.internal.app.AlertController { void <init>(android.content.Context,android.content.DialogInterface,android.view.Window); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { java.lang.String getMessage(); }
-keepclassmembers class com.android.okhttp.ConnectionPool { void scheduleCleanupAsRequired(); }
-keepclassmembers class dalvik.system.BlockGuard$BlockGuardPolicyException { int getPolicy(); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.internal.app.AlertController { boolean canTextInput(android.view.View); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$3 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,boolean,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.android.okhttp.ConnectionPool { java.lang.Runnable access$000(com.android.okhttp.ConnectionPool); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$39 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.android.okhttp.ConnectionPool { long access$200(com.android.okhttp.ConnectionPool); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$3 { void run(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream { void reset(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.lang.String toString(); }
-keepclassmembers class com.android.okhttp.ConnectionPool { java.util.concurrent.ExecutorService access$300(com.android.okhttp.ConnectionPool); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { int jjMoveStringLiteralDfa0_1(); }
-keepclassmembers class com.android.okhttp.ConnectionPool { com.android.okhttp.ConnectionPool$CleanMode access$402(com.android.okhttp.ConnectionPool,com.android.okhttp.ConnectionPool$CleanMode); }
-keepclassmembers class com.android.okhttp.ConnectionPool { java.util.LinkedList access$100(com.android.okhttp.ConnectionPool); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$39 { void run(); }
-keepclassmembers class com.android.internal.app.AlertController { void installContent(); }
-keepclassmembers class com.android.okhttp.ConnectionPool { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream { long skip(long); }
-keepclassmembers class org.apache.harmony.security.x509.Extensions$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class android.provider.Settings$System { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.utils.WrappedX509Certificate { java.security.PublicKey getPublicKey(); }
-keepclassmembers class com.android.okhttp.ConnectionPool { int access$500(com.android.okhttp.ConnectionPool); }
-keepclassmembers class java.nio.channels.AsynchronousCloseException { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController { void setTitle(java.lang.CharSequence); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { int jjMoveStringLiteralDfa0_3(); }
-keepclassmembers class com.android.internal.app.AlertController { int selectContentView(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { int jjMoveStringLiteralDfa0_2(); }
-keepclassmembers class com.android.internal.app.AlertController { void setCustomTitle(android.view.View); }
-keepclassmembers class android.provider.ContactsContract$CommonDataKinds$Email { void <clinit>(); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(int); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreate(int[],int,int,int,int,int,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void addDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void <init>(); }
-keepclassmembers class com.android.internal.app.AlertController { void setMessage(java.lang.CharSequence); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { void <init>(com.android.okhttp.Address,java.net.URI,java.net.ProxySelector,com.android.okhttp.ConnectionPool,com.android.okhttp.HostResolver,com.android.okhttp.RouteDatabase); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void removeDelayedAnimation(android.view.RenderNodeAnimator); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { int jjMoveStringLiteralDfa0_4(); }
-keepclassmembers class com.android.internal.app.AlertController { void setView(android.view.View,int,int,int,int); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void run(); }
-keepclassmembers class android.graphics.Bitmap { void nativeErase(long,int); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { int jjStopAtPos(int,int); }
-keepclassmembers class android.view.RenderNodeAnimator$DelayedAnimationHelper { void scheduleCallback(); }
-keepclassmembers class android.os.Process { int myPid(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap nativeCreateFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.IWindowManager$Stub { android.view.IWindowManager asInterface(android.os.IBinder); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { com.android.okhttp.Connection next(java.lang.String); }
-keepclassmembers class com.android.internal.app.AlertController { void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { boolean hasNext(); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(int); }
-keepclassmembers class com.android.internal.app.AlertController { int getIconAttributeResId(int); }
-keepclassmembers class android.os.Process { int myUid(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { void MoreLexicalActions(); }
-keepclassmembers class com.android.internal.app.AlertController { void setIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.Bitmap { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { void connectFailed(com.android.okhttp.Connection,java.io.IOException); }
-keepclassmembers class com.android.internal.app.AlertController { void setInverseBackgroundForced(boolean); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListView getListView(); }
-keepclassmembers class android.os.Process { android.os.UserHandle myUserHandle(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void <clinit>(); }
-keepclassmembers class android.graphics.Bitmap { android.graphics.Bitmap access$100(android.os.Parcel); }
-keepclassmembers class java.math.MathContext { void <init>(int); }
-keepclassmembers class java.math.MathContext { void <init>(int,java.math.RoundingMode); }
-keepclassmembers class com.android.internal.app.AlertController { void setupView(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { boolean hasNextProxy(); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.Button getButton(int); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { void resetNextProxy(java.net.URI,java.net.Proxy); }
-keepclassmembers class android.text.PackedIntVector { void <init>(int); }
-keepclassmembers class android.os.Process { void setThreadPriority(int); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void <init>(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation,android.content.res.TypedArray); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { java.net.Proxy nextProxy(); }
-keepclassmembers class android.os.Process { void sendSignal(int,int); }
-keepclassmembers class android.os.Process { void killProcess(int); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { void resetNextInetSocketAddress(java.net.Proxy); }
-keepclassmembers class android.text.PackedIntVector { int getValue(int,int); }
-keepclassmembers class java.math.MathContext { void checkValid(); }
-keepclassmembers class com.android.internal.app.AlertController { void setupDecor(); }
-keepclassmembers class java.lang.InterruptedException { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { void SwitchTo(int); }
-keepclassmembers class java.math.MathContext { java.math.RoundingMode getRoundingMode(); }
-keepclassmembers class org.apache.http.impl.entity.StrictContentLengthStrategy { long determineLength(org.apache.http.HttpMessage); }
-keepclassmembers class org.apache.http.impl.entity.StrictContentLengthStrategy { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapConnection$1 { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { java.lang.String getHostString(java.net.InetSocketAddress); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { void TokenLexicalActions(org.apache.james.mime4j.field.address.Token); }
-keepclassmembers class com.android.internal.app.AlertController { boolean setupTitle(android.view.ViewGroup); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { boolean hasNextInetSocketAddress(); }
-keepclassmembers class java.math.MathContext { int getPrecision(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { java.net.InetSocketAddress nextInetSocketAddress(); }
-keepclassmembers class com.jcraft.jzlib.Tree { void <init>(); }
-keepclassmembers class android.text.PackedIntVector { void setValueInternal(int,int,int); }
-keepclassmembers class com.jcraft.jzlib.Tree { int bi_reverse(int,int); }
-keepclassmembers class com.fsck.k9.preferences.SettingsExporter { void exportPreferences(android.content.Context,java.io.OutputStream,boolean,java.util.Set); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { org.apache.james.mime4j.field.address.Token getNextToken(); }
-keepclassmembers class android.graphics.Bitmap$CompressFormat { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.text.PackedIntVector { void adjustValuesBelow(int,int,int); }
-keepclassmembers class android.util.Size { int getWidth(); }
-keepclassmembers class android.graphics.Bitmap$CompressFormat { void <clinit>(); }
-keepclassmembers class java.math.MathContext { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { void resetNextTlsMode(); }
-keepclassmembers class android.util.Size { void <init>(int,int); }
-keepclassmembers class com.jcraft.jzlib.Tree { int d_code(int); }
-keepclassmembers class android.util.Size { int getHeight(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { boolean hasNextTlsMode(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { int nextTlsMode(); }
-keepclassmembers class com.jcraft.jzlib.Tree { void gen_codes(short[],int,short[]); }
-keepclassmembers class android.text.PackedIntVector { void insertAt(int,int[]); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher { void <init>(com.bumptech.glide.load.model.GlideUrl,com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher { void <clinit>(); }
-keepclassmembers class android.util.Size { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher { void <init>(com.bumptech.glide.load.model.GlideUrl); }
-keepclassmembers class com.fsck.k9.mail.transport.SmtpTransport$1 { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { com.android.okhttp.Route nextPostponed(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicSecureHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.RouteSelector { boolean hasNextPostponed(); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher { java.io.InputStream getStreamForSuccessfulRequest(java.net.HttpURLConnection); }
-keepclassmembers class com.android.internal.app.AlertController { void setupContent(android.view.ViewGroup); }
-keepclassmembers class org.apache.http.impl.cookie.BasicSecureHandler { void <init>(); }
-keepclassmembers class com.jcraft.jzlib.Tree { void build_tree(com.jcraft.jzlib.Deflate); }
-keepclassmembers class android.view.inputmethod.InputConnectionWrapper { void <init>(android.view.inputmethod.InputConnection,boolean); }
-keepclassmembers class android.util.Size { java.lang.String toString(); }
-keepclassmembers class java.net.Proxy$Type { java.net.Proxy$Type[] values(); }
-keepclassmembers class android.text.PackedIntVector { void deleteAt(int,int); }
-keepclassmembers class java.net.Proxy$Type { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicSecureHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.text.PackedIntVector { int width(); }
-keepclassmembers class java.net.Proxy$Type { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.PackedIntVector { void growBuffer(); }
-keepclassmembers class android.util.Size { int hashCode(); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher { java.io.InputStream loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map); }
-keepclassmembers class android.text.PackedIntVector { void moveValueGapTo(int,int); }
-keepclassmembers class android.text.PackedIntVector { int size(); }
-keepclassmembers class com.android.internal.app.AlertController { void centerButton(android.widget.Button); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$1 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.text.PackedIntVector { void moveRowGapTo(int); }
-keepclassmembers class com.android.internal.app.AlertController { void setBackground(android.content.res.TypedArray,android.view.View,android.view.View,android.view.View,android.view.View,boolean,boolean,boolean); }
-keepclassmembers class com.fsck.k9.preferences.SettingsExporter { java.lang.String exportToFile(android.content.Context,boolean,java.util.Set); }
-keepclassmembers class com.fsck.k9.preferences.SettingsExporter { void writeAccount(org.xmlpull.v1.XmlSerializer,com.fsck.k9.Account,java.util.Map); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$1 { void <init>(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class com.android.internal.app.AlertController { boolean setupButtons(); }
-keepclassmembers class com.jcraft.jzlib.Tree { void gen_bitlen(com.jcraft.jzlib.Deflate); }
-keepclassmembers class com.fsck.k9.mail.Folder { java.util.Map copyMessages(java.util.List,com.fsck.k9.mail.Folder); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher { void cancel(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing$1 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class com.android.i18n.phonenumbers.CountryCodeToRegionCodeMap { java.util.Map getCountryCodeToRegionCodeMap(); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher { void cleanup(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTokenManager { org.apache.james.mime4j.field.address.Token jjFillToken(); }
-keepclassmembers class org.apache.commons.io.output.ThresholdingOutputStream { void checkThreshold(int); }
-keepclassmembers class com.fsck.k9.mail.Folder { void expunge(); }
-keepclassmembers class com.fsck.k9.mail.Folder { void <init>(); }
-keepclassmembers class org.apache.commons.io.output.ThresholdingOutputStream { void <init>(int); }
-keepclassmembers class com.fsck.k9.mail.Folder { void delete(java.util.List,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.Folder { void fetchPart(com.fsck.k9.mail.Message,com.fsck.k9.mail.Part,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher { java.lang.Object loadData(com.bumptech.glide.Priority); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher { java.lang.String getId(); }
-keepclassmembers class org.apache.commons.io.output.ThresholdingOutputStream { void close(); }
-keepclassmembers class com.fsck.k9.mail.Folder { com.fsck.k9.mail.Folder$FolderClass getDisplayClass(); }
-keepclassmembers class com.bumptech.glide.load.data.HttpUrlFetcher { java.io.InputStream loadData(com.bumptech.glide.Priority); }
-keepclassmembers class com.fsck.k9.mail.Folder { long getLastUpdate(); }
-keepclassmembers class java.security.cert.X509Certificate { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.Folder { java.lang.String getNewPushState(java.lang.String,com.fsck.k9.mail.Message); }
-keepclassmembers class org.apache.commons.io.output.ThresholdingOutputStream { boolean isThresholdExceeded(); }
-keepclassmembers class org.apache.commons.io.output.ThresholdingOutputStream { void flush(); }
-keepclassmembers class com.fsck.k9.mail.Folder { long getLastChecked(); }
-keepclassmembers class java.security.cert.X509Certificate { javax.security.auth.x500.X500Principal getSubjectX500Principal(); }
-keepclassmembers class org.apache.james.mime4j.parser.MimeStreamParser$1 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.Folder { com.fsck.k9.mail.Folder$FolderClass getPushClass(); }
-keepclassmembers class com.fsck.k9.mail.Folder { boolean isFlagSupported(com.fsck.k9.mail.Flag); }
-keepclassmembers class com.fsck.k9.mail.Folder { java.lang.String getStatus(); }
-keepclassmembers class com.fsck.k9.mail.Folder { long getLastPush(); }
-keepclassmembers class com.fsck.k9.mail.Folder { boolean isInTopGroup(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void setSubTextColor(android.content.res.ColorStateList); }
-keepclassmembers class com.fsck.k9.mail.Folder { com.fsck.k9.mail.Folder$FolderClass getSyncClass(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void setTextAppearance(int); }
-keepclassmembers class org.apache.commons.io.output.ThresholdingOutputStream { void write(byte[],int,int); }
-keepclassmembers class com.fsck.k9.mail.Folder { java.util.Map moveMessages(java.util.List,com.fsck.k9.mail.Folder); }
-keepclassmembers class java.security.cert.X509Certificate { java.util.Collection getSubjectAlternativeNames(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void setSubTextAppearance(int); }
-keepclassmembers class com.fsck.k9.mail.Folder { void setLastPush(long); }
-keepclassmembers class com.fsck.k9.mail.Folder { java.util.List search(java.lang.String,java.util.Set,java.util.Set); }
-keepclassmembers class com.fsck.k9.mail.Folder { void setLastChecked(long); }
-keepclassmembers class com.fsck.k9.mail.Folder { boolean supportsFetchingFlags(); }
-keepclassmembers class android.util.Xml { org.xmlpull.v1.XmlPullParser newPullParser(); }
-keepclassmembers class android.hardware.input.InputManager { void <init>(android.hardware.input.IInputManager); }
-keepclassmembers class com.fsck.k9.mail.Folder { void setStatus(java.lang.String); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void setTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.hardware.input.InputManager { android.hardware.input.InputManager getInstance(); }
-keepclassmembers class android.util.Xml { org.xmlpull.v1.XmlSerializer newSerializer(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$ReleaseItem { void <init>(int,java.lang.String,java.util.List); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { int getContentSize(); }
-keepclassmembers class android.hardware.input.InputManager { android.view.InputDevice getInputDevice(int); }
-keepclassmembers class com.fsck.k9.mail.Folder { java.lang.String toString(); }
-keepclassmembers class android.util.Xml { android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPart { void <init>(com.fsck.k9.ui.crypto.MessageCryptoHelper$CryptoPartType,com.fsck.k9.mail.Part); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void hideAllViews(); }
-keepclassmembers class android.util.Xml { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTroute { void <init>(int); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void onPull(float); }
-keepclassmembers class android.widget.LinearLayout { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void refreshing(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void pullToRefresh(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder { void <init>(com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder { com.bumptech.glide.load.engine.Resource decode(android.os.ParcelFileDescriptor,int,int); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1200(com.android.internal.app.AlertController); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void releaseToRefresh(); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf64Header { void <init>(boolean,com.getkeepsafe.relinker.elf.ElfParser); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1300(com.android.internal.app.AlertController); }
-keepclassmembers class android.widget.LinearLayout { boolean shouldDelayChildPressedState(); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf64Header { com.getkeepsafe.relinker.elf.Elf$DynamicStructure getDynamicStructure(long,int); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1400(com.android.internal.app.AlertController); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder { com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf64Header { com.getkeepsafe.relinker.elf.Elf$ProgramHeader getProgramHeader(long); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListAdapter access$1602(com.android.internal.app.AlertController,android.widget.ListAdapter); }
-keepclassmembers class android.widget.LinearLayout { void setDividerDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.Choreographer$2 { void <init>(); }
-keepclassmembers class com.android.internal.util.FastMath { int round(float); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder { java.lang.String getId(); }
-keepclassmembers class com.android.internal.app.AlertController { android.widget.ListView access$1102(com.android.internal.app.AlertController,android.widget.ListView); }
-keepclassmembers class java.lang.IntegralToString$1 { void <init>(); }
-keepclassmembers class java.security.Security { void registerDefaultProviders(); }
-keepclassmembers class java.lang.IntegralToString$1 { char[] initialValue(); }
-keepclassmembers class java.net.AddressCache$AddressCacheEntry { void <init>(java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTroute { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class java.lang.IntegralToString$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$MyHandler { void <init>(android.view.accessibility.AccessibilityManager,android.os.Looper); }
-keepclassmembers class android.widget.LinearLayout { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void setHeight(int); }
-keepclassmembers class com.fsck.k9.activity.ManageIdentities$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class org.htmlcleaner.SpecialEntities { void <init>(boolean,boolean); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void setLoadingDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.LinearLayout { void drawDividersVertical(android.graphics.Canvas); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void reset(); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1500(com.android.internal.app.AlertController); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SendDateExtractor { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SendDateExtractor { java.lang.Long getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void setPullLabel(java.lang.CharSequence); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Elf64Header { com.getkeepsafe.relinker.elf.Elf$SectionHeader getSectionHeader(int); }
-keepclassmembers class com.android.internal.app.AlertController { int access$1702(com.android.internal.app.AlertController,int); }
-keepclassmembers class android.view.accessibility.AccessibilityManager$MyHandler { void handleMessage(android.os.Message); }
-keepclassmembers class java.security.Security { int insertProviderAt(java.security.Provider,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void setReleaseLabel(java.lang.CharSequence); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void setWidth(int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SendDateExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class java.security.Security { java.security.Provider[] getProviders(); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.LoadingLayout { void showInvisibleViews(); }
-keepclassmembers class android.widget.LinearLayout { void drawDividersHorizontal(android.graphics.Canvas); }
-keepclassmembers class java.security.Security { java.security.Provider[] getProviders(java.lang.String); }
-keepclassmembers class org.htmlcleaner.SpecialEntities { void <clinit>(); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(int,float); }
-keepclassmembers class android.app.INotificationManager$Stub { android.app.INotificationManager asInterface(android.os.IBinder); }
-keepclassmembers class java.security.Security { java.security.Provider[] getProviders(java.util.Map); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,float); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(android.graphics.CanvasProperty,int,float); }
-keepclassmembers class android.widget.LinearLayout { void drawHorizontalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.widget.LinearLayout { void drawVerticalDivider(android.graphics.Canvas,int); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void <init>(android.widget.RemoteViews,int,java.lang.String,int,java.lang.Object); }
-keepclassmembers class android.view.RenderNodeAnimator { void checkMutable(); }
-keepclassmembers class android.widget.LinearLayout { void setBaselineAligned(boolean); }
-keepclassmembers class java.security.Security { java.security.Provider getProvider(java.lang.String); }
-keepclassmembers class java.security.Security { void filterProviders(java.util.ArrayList,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isNativeInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class android.widget.LinearLayout { int getBaseline(); }
-keepclassmembers class android.view.RenderNodeAnimator { void <init>(int,int,float,float); }
-keepclassmembers class com.fsck.k9.preferences.SettingsExporter { void writeFolder(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map); }
-keepclassmembers class com.fsck.k9.preferences.SettingsExporter { void writeElement(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { void init(long); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class android.view.RenderNodeAnimator { void start(); }
-keepclassmembers class android.view.RenderNodeAnimator { void applyInterpolator(); }
-keepclassmembers class java.security.Security { void setProperty(java.lang.String,java.lang.String); }
-keepclassmembers class java.security.Security { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class android.view.RenderNodeAnimator { void moveToRunningState(); }
-keepclassmembers class java.security.Security { void renumProviders(); }
-keepclassmembers class android.view.RenderNodeAnimator { void doStart(); }
-keepclassmembers class android.view.RenderNodeAnimator { void notifyStartListeners(); }
-keepclassmembers class android.widget.LinearLayout { int getVirtualChildCount(); }
-keepclassmembers class android.widget.LinearLayout { android.view.View getVirtualChildAt(int); }
-keepclassmembers class android.widget.LinearLayout { boolean hasDividerBeforeChildAt(int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.bumptech.glide.request.animation.DrawableCrossFadeViewAnimation { boolean animate(android.graphics.drawable.Drawable,com.bumptech.glide.request.animation.GlideAnimation$ViewAdapter); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.RenderNodeAnimator { void end(); }
-keepclassmembers class android.widget.LinearLayout { void measureVertical(int,int); }
-keepclassmembers class java.security.Security { void access$100(); }
-keepclassmembers class java.security.Security { void <clinit>(); }
-keepclassmembers class android.view.RenderNodeAnimator { void cancel(); }
-keepclassmembers class android.widget.LinearLayout { void onMeasure(int,int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.bumptech.glide.request.animation.DrawableCrossFadeViewAnimation { void <init>(com.bumptech.glide.request.animation.GlideAnimation,int); }
-keepclassmembers class android.widget.Editor$InputContentType { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$ReflectionAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.preferences.SettingsExporter { void writeIdentity(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String,java.util.Map); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.graphics.Canvas); }
-keepclassmembers class android.hardware.input.InputManager { void populateInputDevicesLocked(); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil { org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread asyncPipeToDataSink(org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink,android.os.ParcelFileDescriptor); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil { boolean access$000(java.io.IOException); }
-keepclassmembers class android.view.RenderNodeAnimator { void setTarget(android.view.RenderNode); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil { boolean isIOExceptionCausedByEPIPE(java.io.IOException); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartValue(float); }
-keepclassmembers class android.view.RenderNodeAnimator { void setStartDelay(long); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <clinit>(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$ValidationResult { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { void <init>(org.apache.http.conn.scheme.SchemeRegistry); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil { android.os.ParcelFileDescriptor pipeFrom(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.Throttle$MyTimerTask { void <init>(com.fsck.k9.Throttle); }
-keepclassmembers class android.view.RenderNodeAnimator { long getStartDelay(); }
-keepclassmembers class com.fsck.k9.Throttle$MyTimerTask { void <init>(com.fsck.k9.Throttle,com.fsck.k9.Throttle$1); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator setDuration(long); }
-keepclassmembers class com.fsck.k9.Throttle$MyTimerTask { boolean access$400(com.fsck.k9.Throttle$MyTimerTask); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil { org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread pipeTo(java.io.OutputStream,android.os.ParcelFileDescriptor); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { org.apache.http.conn.OperatedClientConnection createConnection(); }
-keepclassmembers class com.fsck.k9.account.AccountCreator { com.fsck.k9.Account$DeletePolicy getDefaultDeletePolicy(com.fsck.k9.mail.ServerSettings$Type); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$SideChannelManager$ListenerRecord { void <init>(android.content.ComponentName); }
-keepclassmembers class com.fsck.k9.Throttle$MyTimerTask { void run(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { void openConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich { void <init>(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setInterpolator(android.animation.TimeInterpolator); }
-keepclassmembers class com.bumptech.glide.request.animation.DrawableCrossFadeViewAnimation { boolean animate(java.lang.Object,com.bumptech.glide.request.animation.GlideAnimation$ViewAdapter); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void lock(); }
-keepclassmembers class android.view.RenderNodeAnimator { void onFinished(); }
-keepclassmembers class com.fsck.k9.account.AccountCreator { int getDefaultPort(com.fsck.k9.mail.ConnectionSecurity,com.fsck.k9.mail.ServerSettings$Type); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void lockInterruptibly(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void <init>(); }
-keepclassmembers class android.view.RenderNodeAnimator { void releaseNativePtr(); }
-keepclassmembers class org.apache.http.util.LangUtils { int hashCode(int,int); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean isStarted(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <init>(byte[]); }
-keepclassmembers class android.view.RenderNodeAnimator { java.util.ArrayList cloneListeners(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { java.util.concurrent.locks.Condition newCondition(); }
-keepclassmembers class org.apache.http.util.LangUtils { int hashCode(int,boolean); }
-keepclassmembers class android.view.GhostView { void <init>(android.view.View); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readBitString(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock { void unlock(); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean processDelayed(long); }
-keepclassmembers class android.view.RenderNodeAnimator { long getNativeAnimator(); }
-keepclassmembers class org.apache.http.util.LangUtils { boolean equals(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class org.apache.http.util.LangUtils { int hashCode(int,java.lang.Object); }
-keepclassmembers class android.view.RenderNodeAnimator { android.view.RenderNodeAnimator$DelayedAnimationHelper getHelper(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { int next(); }
-keepclassmembers class android.view.GhostView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class android.view.GhostView { void setVisibility(int); }
-keepclassmembers class org.apache.http.util.LangUtils { boolean equals(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.GhostView { void setMatrix(android.graphics.Matrix); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyPaintAnimator(long,int,float); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readBoolean(); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateAnimator(int,float); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator clone(); }
-keepclassmembers class android.view.RenderNodeAnimator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateRevealAnimator(int,int,float,float); }
-keepclassmembers class android.view.RenderNodeAnimator { long nCreateCanvasPropertyFloatAnimator(long,float); }
-keepclassmembers class android.view.GhostView { void setGhostedVisibility(int); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readOctetString(); }
-keepclassmembers class android.view.GhostView { void onDetachedFromWindow(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readSequence(org.apache.harmony.security.asn1.ASN1Sequence); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartValue(long,float); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetStartDelay(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetDuration(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetInterpolator(long,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetAllowRunningAsync(long,boolean); }
-keepclassmembers class android.view.RenderNodeAnimator { void nSetListener(long,android.view.RenderNodeAnimator); }
-keepclassmembers class android.view.RenderNodeAnimator { long nGetDuration(long); }
-keepclassmembers class android.view.GhostView { void calculateMatrix(android.view.View,android.view.ViewGroup,android.graphics.Matrix); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readString(org.apache.harmony.security.asn1.ASN1StringType); }
-keepclassmembers class android.view.RenderNodeAnimator { android.animation.Animator setDuration(long); }
-keepclassmembers class android.view.GhostView { android.view.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { void updateSecureConnection(org.apache.http.conn.OperatedClientConnection,org.apache.http.HttpHost,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.preferences.SettingsExporter { void writeKeyValue(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readUTCTime(); }
-keepclassmembers class android.view.RenderNodeAnimator { boolean access$000(android.view.RenderNodeAnimator,long); }
-keepclassmembers class android.view.RenderNodeAnimator { void nStart(long); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readSetOf(org.apache.harmony.security.asn1.ASN1SetOf); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void <init>(java.lang.CharSequence,char[],char[]); }
-keepclassmembers class android.view.RenderNodeAnimator { void <clinit>(); }
-keepclassmembers class android.view.RenderNodeAnimator { void nEnd(long); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { long contentLength(com.android.okhttp.Headers); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { void <init>(android.content.res.Resources,android.graphics.Bitmap); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void readGeneralizedTime(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { int length(); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { long contentLength(com.android.okhttp.Request); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { long stringToLong(java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.SettingsExporter { void writeSettings(org.xmlpull.v1.XmlSerializer,java.util.Map); }
-keepclassmembers class java.util.TreeMap$Node { void <init>(java.util.TreeMap$Node,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { java.util.Map toMultimap(com.android.okhttp.Headers,java.lang.String); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.DerInputStream { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { void <init>(android.content.res.Resources,com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { long contentLength(com.android.okhttp.Response); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.Object getKey(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <init>(boolean); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void put(java.lang.Object); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { char charAt(int); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.Object getValue(); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { java.lang.CharSequence subSequence(int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { android.graphics.Bitmap getBitmap(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.view.GhostView { android.view.GhostView addGhost(android.view.View,android.view.ViewGroup); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { void addCookies(com.android.okhttp.Request$Builder,java.util.Map); }
-keepclassmembers class java.util.TreeMap$Node { boolean equals(java.lang.Object); }
-keepclassmembers class android.text.method.ReplacementTransformationMethod$ReplacementCharSequence { void getChars(int,int,char[],int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { int getIntrinsicHeight(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { boolean isAnimated(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnectionOperator { void <clinit>(); }
-keepclassmembers class javax.xml.parsers.SAXParser { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { int getOpacity(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { int getIntrinsicWidth(); }
-keepclassmembers class android.view.GhostView { void copySize(android.view.View,android.view.View); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean offer(java.lang.Object); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { java.lang.Object take(); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { java.lang.String buildCookieHeader(java.util.List); }
-keepclassmembers class java.util.TreeMap$Node { int hashCode(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { void setAlpha(int); }
-keepclassmembers class android.widget.ProgressBar$AccessibilityEventSender { void <init>(android.widget.ProgressBar); }
-keepclassmembers class java.util.TreeMap$Node { java.lang.String toString(); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node next(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { void setLoopCount(int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { java.lang.Object poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class android.widget.ProgressBar$AccessibilityEventSender { void <init>(android.widget.ProgressBar,android.widget.ProgressBar$1); }
-keepclassmembers class android.view.GhostView { int moveGhostViewsToTop(android.view.ViewGroup,java.util.ArrayList); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { void start(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable { void stop(); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node prev(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { int size(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog$2 { void <init>(com.fsck.k9.activity.Accounts$PasswordPromptDialog,com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean remove(java.lang.Object); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformWidth(int,int); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node first(); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$Node { java.util.TreeMap$Node last(); }
-keepclassmembers class android.widget.LinearLayout { void measureHorizontal(int,int); }
-keepclassmembers class android.view.GhostView { void insertIntoOverlay(android.view.ViewGroup,android.view.ViewGroup,android.view.GhostView,java.util.ArrayList,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void <init>(android.content.Context); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(byte[]); }
-keepclassmembers class android.view.GhostView { int getInsertIndex(android.view.ViewGroup,java.util.ArrayList,java.util.ArrayList,int); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { java.lang.Object peek(); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.lang.String); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.lang.String getName(java.lang.String); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void <init>(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.util.List); }
-keepclassmembers class org.apache.harmony.security.x501.Name { javax.security.auth.x500.X500Principal getX500Principal(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void <init>(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle); }
-keepclassmembers class android.graphics.RadialGradient { void <init>(float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class android.view.GhostView { boolean isGhostWrapper(android.view.View); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void addIndicatorViews(); }
-keepclassmembers class android.os.Handler { void dispatchMessage(android.os.Message); }
-keepclassmembers class android.os.Handler { void handleMessage(android.os.Message); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.lang.String getName0(java.lang.String); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Handler$Callback); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper,android.os.Handler$Callback); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { boolean isEmpty(); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Handler$Callback,boolean); }
-keepclassmembers class android.view.GhostView { boolean isOnTop(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class android.os.Handler { void <init>(); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper); }
-keepclassmembers class android.graphics.RadialGradient { void <init>(float,float,float,int,int,android.graphics.Shader$TileMode); }
-keepclassmembers class android.view.GhostView { void getParents(android.view.View,java.util.ArrayList); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifBitmapProvider { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class android.os.Handler { void <init>(boolean); }
-keepclassmembers class android.graphics.RadialGradient { android.graphics.Shader copy(); }
-keepclassmembers class android.view.GhostView { boolean isOnTop(android.view.View,android.view.View); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifBitmapProvider { android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class org.apache.harmony.security.x501.Name { byte[] getEncoded(); }
-keepclassmembers class java.util.concurrent.SynchronousQueue { void <clinit>(); }
-keepclassmembers class android.os.Handler { void <init>(android.os.Looper,android.os.Handler$Callback,boolean); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <init>(java.util.List,org.apache.harmony.security.x501.Name$1); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifBitmapProvider { void release(android.graphics.Bitmap); }
-keepclassmembers class org.apache.harmony.security.x501.Name { java.util.List access$100(org.apache.harmony.security.x501.Name); }
-keepclassmembers class com.fsck.k9.view.MessageHeader$HeaderEntry { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.Name { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void <init>(); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { void <init>(org.apache.http.io.SessionInputBuffer); }
-keepclassmembers class android.graphics.RadialGradient { long nativeCreate1(float,float,float,int[],float[],int); }
-keepclassmembers class android.graphics.RadialGradient { long nativeCreate2(float,float,float,int,int,int); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void init(java.io.OutputStream,int,org.apache.http.params.HttpParams); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { android.widget.FrameLayout$LayoutParams convertEmptyViewLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { int read(); }
-keepclassmembers class android.os.Handler { android.os.Message obtainMessage(int,java.lang.Object); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { int read(byte[],int,int); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressListParserTreeConstants { void <clinit>(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { boolean isFirstItemVisible(); }
-keepclassmembers class android.os.Handler { boolean post(java.lang.Runnable); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { void nextChunk(); }
-keepclassmembers class android.os.Handler { boolean postAtTime(java.lang.Runnable,long); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void flush(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void write(byte[],int,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { boolean isLastItemVisible(); }
-keepclassmembers class android.os.Handler { boolean postDelayed(java.lang.Runnable,long); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { boolean getShowIndicatorInternal(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void write(byte[]); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { void close(); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void writeLine(java.lang.String); }
-keepclassmembers class android.os.Handler { void removeCallbacks(java.lang.Runnable); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { int read(byte[]); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void flushBuffer(); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpSignOnlyDialog { void <init>(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void removeIndicatorViews(); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpSignOnlyDialog { com.fsck.k9.activity.compose.PgpSignOnlyDialog newInstance(boolean,int); }
-keepclassmembers class android.os.Handler { boolean sendMessage(android.os.Message); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { int getChunkSize(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void updateIndicatorViewsVisibility(); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessageAtTime(int,long); }
-keepclassmembers class android.os.Handler { boolean postAtFrontOfQueue(java.lang.Runnable); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void writeLine(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { void exhaustInputStream(java.io.InputStream); }
-keepclassmembers class android.os.Handler { boolean sendMessageDelayed(android.os.Message,long); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessage(int); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpSignOnlyDialog { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { void <clinit>(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void handleStyledAttributes(android.content.res.TypedArray); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { void <init>(android.content.Context,com.fsck.k9.activity.AlternateRecipientAdapter$AlternateRecipientListener); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$TimeSetting { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { com.fsck.k9.view.RecipientSelectView$Recipient access$000(com.fsck.k9.activity.AlternateRecipientAdapter); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$TimeSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { boolean isReadyForPullEnd(); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { com.fsck.k9.activity.AlternateRecipientAdapter$AlternateRecipientListener access$100(com.fsck.k9.activity.AlternateRecipientAdapter); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtFrontOfQueue(android.os.Message); }
-keepclassmembers class org.apache.http.impl.io.ChunkedInputStream { void parseTrailerHeaders(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { boolean isReadyForPullStart(); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { void configureCryptoStatusView(com.fsck.k9.activity.AlternateRecipientAdapter$RecipientTokenHolder,com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void onPullToRefresh(); }
-keepclassmembers class android.os.Handler { boolean sendMessageAtTime(android.os.Message,long); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void onRefreshing(boolean); }
-keepclassmembers class android.os.Handler { boolean sendEmptyMessageDelayed(int,long); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void onReleaseToRefresh(); }
-keepclassmembers class android.os.Handler { boolean enqueueMessage(android.os.MessageQueue,android.os.Message,long); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { com.fsck.k9.view.RecipientSelectView$Recipient getRecipientFromPosition(int); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { void setCryptoStatusView(com.fsck.k9.activity.AlternateRecipientAdapter$RecipientTokenHolder,int,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void onReset(); }
-keepclassmembers class android.os.Handler { void removeMessages(int); }
-keepclassmembers class org.apache.http.impl.io.AbstractSessionOutputBuffer { org.apache.http.io.HttpTransportMetrics getMetrics(); }
-keepclassmembers class android.os.Handler { void removeMessages(int,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.BinaryAttachmentBody { void writeTo(java.io.OutputStream); }
-keepclassmembers class android.os.Handler { boolean hasMessages(int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void onScrollChanged(int,int,int,int); }
-keepclassmembers class android.os.Handler { android.os.Looper getLooper(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void onScroll(android.widget.AbsListView,int,int,int); }
-keepclassmembers class com.fsck.k9.mailstore.BinaryAttachmentBody { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { void bindItemView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void onScrollStateChanged(android.widget.AbsListView,int); }
-keepclassmembers class org.htmlcleaner.SpecialEntities { int getMaxEntityLength(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void setEmptyView(android.view.View); }
-keepclassmembers class org.htmlcleaner.SpecialEntities { org.htmlcleaner.SpecialEntity getSpecialEntity(java.lang.String); }
-keepclassmembers class android.os.Handler { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.mailstore.BinaryAttachmentBody { void setEncoding(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { void bindHeaderView(android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class android.os.Handler { boolean hasMessages(int,java.lang.Object); }
-keepclassmembers class android.os.Handler { android.os.IMessenger getIMessenger(); }
-keepclassmembers class org.htmlcleaner.SpecialEntities { void _put(org.htmlcleaner.SpecialEntity); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { com.fsck.k9.view.RecipientSelectView$Recipient getItem(int); }
-keepclassmembers class android.os.Handler { android.os.Message getPostMessage(java.lang.Runnable); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { long getItemId(int); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.provider.ContactsContract$PhoneLookup { void <clinit>(); }
-keepclassmembers class android.os.Handler { void handleCallback(android.os.Message); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { android.view.View newView(android.view.ViewGroup); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { com.android.okhttp.Response createOkResponse(com.android.okhttp.Request,java.net.CacheResponse); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { void setAlternateRecipientInfo(java.util.List); }
-keepclassmembers class org.htmlcleaner.SpecialEntities { org.htmlcleaner.SpecialEntity getSpecialEntityByUnicode(int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshAdapterViewBase { void updateUIForMode(); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { java.lang.Object getItem(int); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { int getCount(); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class java.net.DefaultFileNameMap { java.lang.String getContentTypeFor(java.lang.String); }
-keepclassmembers class java.lang.VirtualMachineError { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { void setCurrentRecipient(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.net.HttpURLConnection createJavaUrlConnection(com.android.okhttp.Response); }
-keepclassmembers class android.widget.LinearLayout { void forceUniformHeight(int,int); }
-keepclassmembers class android.view.accessibility.IAccessibilityManagerClient$Stub { void <init>(); }
-keepclassmembers class java.lang.VirtualMachineError { void <init>(java.lang.String); }
-keepclassmembers class android.widget.LinearLayout { int getChildrenSkipCount(android.view.View,int); }
-keepclassmembers class android.widget.LinearLayout { int measureNullChild(int); }
-keepclassmembers class java.net.DefaultFileNameMap { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.util.Map extractJavaHeaders(com.android.okhttp.Request); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter { boolean isEnabled(int); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { com.android.okhttp.Headers extractOkHeaders(java.util.Map); }
-keepclassmembers class android.widget.LinearLayout { int getNextLocationOffset(android.view.View); }
-keepclassmembers class android.content.AsyncQueryHandler { void <init>(android.content.ContentResolver); }
-keepclassmembers class java.security.SignatureSpi { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { com.android.okhttp.Headers extractOkHeaders(java.net.CacheResponse); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.String extractStatusLine(java.net.CacheResponse); }
-keepclassmembers class android.widget.LinearLayout { int getLocationOffset(android.view.View); }
-keepclassmembers class android.widget.LinearLayout { void measureChildBeforeLayout(android.view.View,int,int,int,int,int); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$3 { void <init>(com.android.okhttp.Headers,java.io.InputStream); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.String extractStatusLine(java.util.Map); }
-keepclassmembers class android.widget.LinearLayout { void layoutVertical(int,int,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader { void <init>(android.content.Context,com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,int,int); }
-keepclassmembers class android.media.AudioAttributes$Builder { void <init>(android.media.AudioAttributes); }
-keepclassmembers class android.widget.LinearLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.content.AsyncQueryHandler { android.os.Handler createHandler(android.os.Looper); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.RuntimeException throwRequestModificationException(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter$3 { java.io.InputStream byteStream(); }
-keepclassmembers class android.media.AudioAttributes$Builder { android.media.AudioAttributes build(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { com.android.okhttp.Response$Body createOkBody(com.android.okhttp.Headers,java.io.InputStream); }
-keepclassmembers class android.content.AsyncQueryHandler { void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader { void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback,com.bumptech.glide.gifdecoder.GifDecoder,android.os.Handler,com.bumptech.glide.GenericRequestBuilder); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.RuntimeException throwResponseBodyAccessException(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.RuntimeException access$200(); }
-keepclassmembers class com.android.okhttp.internal.http.JavaApiConverter { java.lang.RuntimeException access$000(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader { com.bumptech.glide.GenericRequestBuilder getRequestBuilder(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class android.media.AudioAttributes$Builder { android.media.AudioAttributes$Builder setContentType(int); }
-keepclassmembers class android.media.AudioAttributes$Builder { android.media.AudioAttributes$Builder setUsage(int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader { void loadNextFrame(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void <init>(int,android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void update(); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.widget.LinearLayout { void layoutHorizontal(int,int,int,int); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { void setColor(int); }
-keepclassmembers class android.provider.ContactsContract$QuickContact { android.content.Intent composeQuickContactsIntent(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.activity.setup.AuthTypeHolder$1 { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader { android.graphics.Bitmap getCurrentFrame(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader { void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget); }
-keepclassmembers class android.graphics.PorterDuffColorFilter { long native_CreatePorterDuffFilter(int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader { void setFrameTransformation(com.bumptech.glide.load.Transformation); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <init>(java.lang.String,java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader { void start(); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <init>(java.lang.String,java.lang.Object,java.lang.Class,java.lang.reflect.Method); }
-keepclassmembers class android.content.AsyncQueryHandler { void onInsertComplete(int,java.lang.Object,android.net.Uri); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader { void stop(); }
-keepclassmembers class android.provider.ContactsContract$QuickContact { android.content.Intent composeQuickContactsIntent(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[]); }
-keepclassmembers class android.content.AsyncQueryHandler { void onDeleteComplete(int,java.lang.Object,int); }
-keepclassmembers class android.content.AsyncQueryHandler { void onUpdateComplete(int,java.lang.Object,int); }
-keepclassmembers class libcore.reflect.AnnotationMember { libcore.reflect.AnnotationMember setDefinition(libcore.reflect.AnnotationMember); }
-keepclassmembers class libcore.reflect.AnnotationMember { java.lang.String toString(); }
-keepclassmembers class java.lang.Long { void <init>(java.lang.String); }
-keepclassmembers class android.content.AsyncQueryHandler { void handleMessage(android.os.Message); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Long); }
-keepclassmembers class android.media.AudioAttributes$Builder { void <init>(); }
-keepclassmembers class java.lang.Long { void <init>(long); }
-keepclassmembers class android.content.pm.ActivityInfo { int activityInfoConfigToNative(int); }
-keepclassmembers class libcore.reflect.AnnotationMember { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.Long { int compare(long,long); }
-keepclassmembers class libcore.reflect.AnnotationMember { boolean equalArrayValue(java.lang.Object); }
-keepclassmembers class android.content.AsyncQueryHandler { void <clinit>(); }
-keepclassmembers class android.widget.LinearLayout { void setOrientation(int); }
-keepclassmembers class android.provider.ContactsContract$QuickContact { void showQuickContact(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[]); }
-keepclassmembers class java.lang.Long { java.lang.NumberFormatException invalidLong(java.lang.String); }
-keepclassmembers class android.widget.LinearLayout { void setChildFrame(android.view.View,int,int,int,int); }
-keepclassmembers class java.lang.Long { double doubleValue(); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageLoader { void <init>(android.content.Context,com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class java.lang.Long { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.reflect.AnnotationMember { int hashCode(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler$1 { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { void <init>(android.graphics.drawable.ColorDrawable$ColorState); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageLoader { com.fsck.k9.mailstore.LocalMessage loadMessageFromDatabase(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler$1 { java.lang.String getId(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler$1 { int getSampleSize(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { boolean canApplyTheme(); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageLoader { void deliverResult(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameLoader { void clear(); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageLoader { boolean isCreatedFor(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class android.graphics.drawable.ColorDrawable$ColorState { int getChangingConfigurations(); }
-keepclassmembers class org.htmlcleaner.HtmlCleanerException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageLoader { com.fsck.k9.mailstore.LocalMessage loadInBackground(); }
-keepclassmembers class android.widget.LinearLayout { android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.provider.ContactsContract$QuickContact { void startActivityWithErrorToast(android.content.Context,android.content.Intent); }
-keepclassmembers class android.widget.LinearLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.LinearLayout { void setGravity(int); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageLoader { void deliverResult(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralNames$1 { java.util.Collection getValues(java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageLoader { void onStartLoading(); }
-keepclassmembers class android.widget.LinearLayout { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.htmlcleaner.HtmlCleanerException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.Globals { android.content.Context getContext(); }
-keepclassmembers class java.lang.Long { int intValue(); }
-keepclassmembers class java.lang.Long { long longValue(); }
-keepclassmembers class com.fsck.k9.Globals { void setContext(android.content.Context); }
-keepclassmembers class java.lang.Long { int hashCode(); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Group { void <init>(java.lang.String,java.util.Collection); }
-keepclassmembers class android.widget.LinearLayout { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.message.LocalMessageLoader { java.lang.Object loadInBackground(); }
-keepclassmembers class android.graphics.Paint$Style { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Group { void <init>(java.lang.String,org.apache.james.mime4j.dom.address.Mailbox[]); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Group { void <init>(java.lang.String,org.apache.james.mime4j.dom.address.MailboxList); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.MissingResourceException { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.content.pm.ActivityInfo { void <clinit>(); }
-keepclassmembers class java.lang.Long { long parse(java.lang.String,int,int,boolean); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Group { void doAddMailboxesTo(java.util.List); }
-keepclassmembers class com.fsck.k9.notification.NotificationIds { int getAuthenticationErrorNotificationId(com.fsck.k9.Account,boolean); }
-keepclassmembers class com.fsck.k9.notification.NotificationIds { int getBaseNotificationId(com.fsck.k9.Account); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void <init>(android.hardware.display.IDisplayManager); }
-keepclassmembers class libcore.reflect.AnnotationMember { void <clinit>(); }
-keepclassmembers class com.fsck.k9.notification.NotificationIds { int getCertificateErrorNotificationId(com.fsck.k9.Account,boolean); }
-keepclassmembers class org.apache.james.mime4j.dom.address.Group { java.lang.String toString(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.hardware.display.DisplayManagerGlobal getInstance(); }
-keepclassmembers class com.fsck.k9.notification.NotificationIds { int getFetchingMailNotificationId(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.notification.NotificationIds { int getNewMailStackedNotificationId(com.fsck.k9.Account,int); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.DisplayInfo getDisplayInfo(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupNames$1 { void <init>(com.fsck.k9.activity.setup.AccountSetupNames); }
-keepclassmembers class java.lang.Long { long parsePositiveLong(java.lang.String,int); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLContext getDefault(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupNames$1 { void afterTextChanged(android.text.Editable); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupNames$1 { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLContext getInstance(java.lang.String); }
-keepclassmembers class com.fsck.k9.notification.NotificationIds { int getNewMailSummaryNotificationId(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$30$1 { void <init>(com.fsck.k9.controller.MessagingController$30,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,java.util.List); }
-keepclassmembers class com.fsck.k9.notification.NotificationIds { int getSendFailedNotificationId(com.fsck.k9.Account); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(); }
-keepclassmembers class android.os.Looper { void prepare(); }
-keepclassmembers class android.os.Looper { void prepare(boolean); }
-keepclassmembers class java.lang.Long { long parseLong(java.lang.String,int); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.LinearLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupNames$1 { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class java.lang.Long { java.lang.String toHexString(long); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments); }
-keepclassmembers class java.lang.Long { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$30$1 { void run(); }
-keepclassmembers class java.lang.Long { java.lang.String toString(long); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.graphics.Paint$Style { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { android.view.Display getRealDisplay(int); }
-keepclassmembers class java.lang.Long { java.lang.String toString(long,int); }
-keepclassmembers class android.os.Looper { void loop(); }
-keepclassmembers class android.animation.PathKeyframes$2 { void <init>(android.animation.PathKeyframes); }
-keepclassmembers class javax.net.ssl.SSLContext { void <init>(javax.net.ssl.SSLContextSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.animation.PathKeyframes$2 { float getFloatValue(float); }
-keepclassmembers class javax.net.ssl.SSLContext { void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom); }
-keepclassmembers class java.lang.Long { java.lang.String toOctalString(long); }
-keepclassmembers class java.lang.Long { int numberOfLeadingZeros(long); }
-keepclassmembers class java.lang.IllegalStateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { com.android.internal.view.ActionBarPolicy get(android.content.Context); }
-keepclassmembers class javax.net.ssl.SSLContext { javax.net.ssl.SSLSocketFactory getSocketFactory(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { void <init>(android.content.Context); }
-keepclassmembers class android.os.Looper { android.os.Looper myLooper(); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoModelLoader { void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class android.os.Looper { android.os.MessageQueue myQueue(); }
-keepclassmembers class android.os.Looper { void <init>(boolean); }
-keepclassmembers class android.os.Looper { android.os.Looper getMainLooper(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean hasEmbeddedTabs(); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoModelLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int); }
-keepclassmembers class org.apache.james.mime4j.field.MailboxFieldImpl { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.MailboxFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.os.Looper { void quit(); }
-keepclassmembers class android.hardware.display.DisplayManagerGlobal { void registerCallbackIfNeededLocked(); }
-keepclassmembers class javax.net.ssl.SSLContext { void <clinit>(); }
-keepclassmembers class android.os.Looper { java.lang.String toString(); }
-keepclassmembers class java.lang.Long { int numberOfTrailingZeros(long); }
-keepclassmembers class android.os.Looper { void dump(android.util.Printer,java.lang.String); }
-keepclassmembers class android.graphics.drawable.Ripple$1 { void <init>(android.graphics.drawable.Ripple); }
-keepclassmembers class java.lang.Long { int bitCount(long); }
-keepclassmembers class android.os.Looper { android.os.MessageQueue getQueue(); }
-keepclassmembers class com.android.internal.view.ActionBarPolicy { boolean enableHomeButtonByDefault(); }
-keepclassmembers class android.graphics.drawable.Ripple$1 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { void <init>(android.graphics.drawable.RotateDrawable$RotateState,android.graphics.drawable.RotateDrawable,android.content.res.Resources); }
-keepclassmembers class android.text.TextUtils { void getChars(java.lang.CharSequence,int,int,char[],int); }
-keepclassmembers class android.widget.Editor { void <init>(android.widget.TextView); }
-keepclassmembers class android.os.Looper { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char); }
-keepclassmembers class android.widget.TextView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class com.bumptech.glide.request.animation.DrawableCrossFadeFactory { void <init>(int); }
-keepclassmembers class android.widget.Editor { void onAttachedToWindow(); }
-keepclassmembers class java.lang.Long { int signum(long); }
-keepclassmembers class com.bumptech.glide.request.animation.DrawableCrossFadeFactory { void <init>(); }
-keepclassmembers class java.lang.Long { java.lang.Long valueOf(long); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class com.bumptech.glide.request.animation.DrawableCrossFadeFactory { com.bumptech.glide.request.animation.GlideAnimation getFirstResourceAnimation(); }
-keepclassmembers class android.widget.Editor { void onDetachedFromWindow(); }
-keepclassmembers class java.lang.Long { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.request.animation.DrawableCrossFadeFactory { com.bumptech.glide.request.animation.GlideAnimation getSecondResourceAnimation(); }
-keepclassmembers class java.lang.Long { int compareTo(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.request.animation.DrawableCrossFadeFactory { void <init>(com.bumptech.glide.request.animation.ViewAnimationFactory,int); }
-keepclassmembers class java.io.BufferedInputStream { int available(); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream,int); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int); }
-keepclassmembers class java.io.BufferedInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.io.BufferedInputStream { java.io.IOException streamClosed(); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int[],float[],android.graphics.Shader$TileMode); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { boolean canApplyTheme(); }
-keepclassmembers class java.util.zip.ZipFile$1 { void <init>(java.util.zip.ZipFile,java.util.Iterator); }
-keepclassmembers class android.text.TextUtils { int lastIndexOf(java.lang.CharSequence,char,int,int); }
-keepclassmembers class java.util.zip.ZipFile$1 { boolean hasMoreElements(); }
-keepclassmembers class com.bumptech.glide.request.animation.DrawableCrossFadeFactory { com.bumptech.glide.request.animation.GlideAnimation build(boolean,boolean); }
-keepclassmembers class java.io.BufferedInputStream { int fillbuf(java.io.InputStream,byte[]); }
-keepclassmembers class java.io.BufferedInputStream { void close(); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.Editor { void destroyDisplayListsData(); }
-keepclassmembers class java.util.zip.ZipFile$1 { java.util.zip.ZipEntry nextElement(); }
-keepclassmembers class java.util.zip.ZipFile$1 { java.lang.Object nextElement(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean isRtl(char[],int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { boolean canConstantState(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { void <init>(android.text.TextDirectionHeuristics$TextDirectionAlgorithm); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class android.widget.Editor { void showError(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicImpl { boolean doCheck(java.lang.CharSequence,int,int); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.RotateDrawable$RotateState { int getChangingConfigurations(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <init>(java.lang.String,org.apache.harmony.security.x509.GeneralName,byte[]); }
-keepclassmembers class android.graphics.LinearGradient { void <init>(float,float,float,float,int,int,android.graphics.Shader$TileMode); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$ReverseIdComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.text.TextUtils { boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int); }
-keepclassmembers class android.text.TextUtils { int indexOf(java.lang.CharSequence,java.lang.CharSequence,int,int); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor); }
-keepclassmembers class android.graphics.LinearGradient { android.graphics.Shader copy(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { java.lang.String toString(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { void <init>(java.util.Set); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$ReverseIdComparator { void <init>(); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor,boolean); }
-keepclassmembers class android.widget.Editor { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$ReverseIdComparator { int compare(android.database.Cursor,android.database.Cursor); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { java.util.Iterator iterator(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo35 { void updateRemoveXNoSeenInfoFlag(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.io.BufferedInputStream { void mark(int); }
-keepclassmembers class java.io.BufferedInputStream { boolean markSupported(); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { org.apache.harmony.security.x509.GeneralName access$200(org.apache.harmony.security.x509.AccessDescription); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <clinit>(); }
-keepclassmembers class android.widget.CursorAdapter { void <init>(android.content.Context,android.database.Cursor,int); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpServiceConnection { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { void <init>(java.lang.String,org.apache.harmony.security.x509.GeneralName,byte[],org.apache.harmony.security.x509.AccessDescription$1); }
-keepclassmembers class android.text.TextUtils { java.lang.String substring(java.lang.CharSequence,int,int); }
-keepclassmembers class java.io.BufferedInputStream { int read(); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class android.widget.CursorAdapter { void init(android.content.Context,android.database.Cursor,int); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { void <init>(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet { java.lang.Object[] toArray(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpServiceConnection { void <init>(android.content.Context,java.lang.String,org.openintents.openpgp.util.OpenPgpServiceConnection$OnBound); }
-keepclassmembers class android.widget.Editor { void setErrorIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.harmony.security.x509.AccessDescription { java.lang.String access$100(org.apache.harmony.security.x509.AccessDescription); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate1(float,float,float,float,int[],float[],int); }
-keepclassmembers class android.text.TextUtils { java.lang.String join(java.lang.CharSequence,java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.graphics.LinearGradient { long nativeCreate2(float,float,float,float,int,int,int); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.webkit.IWebViewUpdateService$Stub { android.webkit.IWebViewUpdateService asInterface(android.os.IBinder); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void <init>(); }
-keepclassmembers class android.widget.Editor { void hideError(); }
-keepclassmembers class java.io.BufferedInputStream { int read(byte[],int,int); }
-keepclassmembers class android.widget.Editor { int getErrorX(); }
-keepclassmembers class android.widget.CursorAdapter { int getCount(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpServiceConnection { void bindToService(); }
-keepclassmembers class android.widget.CursorAdapter { android.database.Cursor getCursor(); }
-keepclassmembers class android.text.TextUtils { java.lang.String join(java.lang.CharSequence,java.lang.Iterable); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { boolean isSupported(java.lang.Object); }
-keepclassmembers class android.widget.CursorAdapter { java.lang.Object getItem(int); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void begin(); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { boolean isOpen(); }
-keepclassmembers class android.widget.CursorAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void close(); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpServiceConnection { org.openintents.openpgp.IOpenPgpService2 getService(); }
-keepclassmembers class android.text.TextUtils { boolean isEmpty(java.lang.CharSequence); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpServiceConnection { boolean isBound(); }
-keepclassmembers class android.widget.Editor { int getErrorY(); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.reflect.Method getMethod(java.lang.Class); }
-keepclassmembers class java.nio.channels.spi.AbstractInterruptibleChannel { void end(boolean); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.Object invoke(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { void <init>(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpServiceConnection { void unbindFromService(); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.HeaderElement[] parseElements(java.lang.String,org.apache.http.message.HeaderValueParser); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.impl.conn.Wire); }
-keepclassmembers class android.text.TextUtils { boolean equals(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class com.android.okhttp.internal.OptionalMethod { java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { int read(byte[],int,int); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { boolean isDataAvailable(int); }
-keepclassmembers class java.io.BufferedInputStream { void reset(); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { int read(); }
-keepclassmembers class java.io.BufferedInputStream { long skip(long); }
-keepclassmembers class android.app.ListActivity$1 { void <init>(android.app.ListActivity); }
-keepclassmembers class android.widget.CursorAdapter { android.database.Cursor swapCursor(android.database.Cursor); }
-keepclassmembers class android.widget.CursorAdapter { void changeCursor(android.database.Cursor); }
-keepclassmembers class android.widget.Editor { void createInputContentTypeIfNeeded(); }
-keepclassmembers class android.widget.CursorAdapter { long getItemId(int); }
-keepclassmembers class android.text.TextUtils { void writeToParcel(java.lang.CharSequence,android.os.Parcel,int); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { void <init>(int); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { void <init>(int,com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy,java.util.Set); }
-keepclassmembers class android.widget.Editor { void createInputMethodStateIfNeeded(); }
-keepclassmembers class android.widget.Editor { boolean isCursorVisible(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { void dump(); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { int readLine(org.apache.http.util.CharArrayBuffer); }
-keepclassmembers class android.widget.CursorAdapter { boolean hasStableIds(); }
-keepclassmembers class android.widget.CursorAdapter { android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence); }
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget { com.bumptech.glide.request.Request getRequest(); }
-keepclassmembers class android.widget.Editor { void prepareCursorControllers(); }
-keepclassmembers class android.R$styleable { void <clinit>(); }
-keepclassmembers class org.apache.http.impl.conn.LoggingSessionInputBuffer { org.apache.http.io.HttpTransportMetrics getMetrics(); }
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget { void onLoadCleared(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.HeaderElement parseHeaderElement(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget { void <init>(); }
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget { void onLoadFailed(java.lang.Exception,android.graphics.drawable.Drawable); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { void dumpUnchecked(); }
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget { void onDestroy(); }
-keepclassmembers class android.widget.CursorAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class android.text.TextUtils { void writeWhere(android.os.Parcel,android.text.Spanned,java.lang.Object); }
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget { void onStart(); }
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget { void onLoadStarted(android.graphics.drawable.Drawable); }
-keepclassmembers class java.net.ServerSocket { void <init>(int); }
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget { void setRequest(com.bumptech.glide.request.Request); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { java.util.Set getDefaultAllowedConfigs(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { void evict(); }
-keepclassmembers class com.fsck.k9.fragment.ConfirmationDialogFragment { void <init>(); }
-keepclassmembers class java.net.ServerSocket { void <init>(int,int,java.net.InetAddress); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.HeaderElement createHeaderElement(java.lang.String,java.lang.String,org.apache.http.NameValuePair[]); }
-keepclassmembers class com.bumptech.glide.request.target.BaseTarget { void onStop(); }
-keepclassmembers class com.android.okhttp.Response$Builder { void <init>(com.android.okhttp.Response); }
-keepclassmembers class com.fsck.k9.fragment.ConfirmationDialogFragment { int getDialogId(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy getDefaultStrategy(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter$1 { void <init>(com.fsck.k9.activity.compose.RecipientAdapter); }
-keepclassmembers class com.android.okhttp.Response$Builder { void <init>(); }
-keepclassmembers class android.widget.Editor { void hideControllers(); }
-keepclassmembers class android.widget.Editor { void hideInsertionPointCursorController(); }
-keepclassmembers class android.widget.Editor { void hideSpanControllers(); }
-keepclassmembers class com.fsck.k9.fragment.ConfirmationDialogFragment { com.fsck.k9.fragment.ConfirmationDialogFragment$ConfirmationDialogFragmentListener getListener(); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder statusLine(com.android.okhttp.internal.http.StatusLine); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder request(com.android.okhttp.Request); }
-keepclassmembers class android.widget.Editor { void hideCursorControllers(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter$1 { android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { void trimToSize(int); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder statusLine(java.lang.String); }
-keepclassmembers class android.widget.Editor { void updateSpellCheckSpans(int,int,boolean); }
-keepclassmembers class java.net.ServerSocket { void readBackBindState(); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientAdapter$1 { void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.NameValuePair[] parseParameters(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder header(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.ConfirmationDialogFragment { com.fsck.k9.fragment.ConfirmationDialogFragment newInstance(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder handshake(com.android.okhttp.Handshake); }
-keepclassmembers class java.net.ServerSocket { java.net.Socket accept(); }
-keepclassmembers class java.net.ServerSocket { void close(); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder body(com.android.okhttp.Response$Body); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder headers(com.android.okhttp.Headers); }
-keepclassmembers class java.net.ServerSocket { void checkListen(int); }
-keepclassmembers class com.fsck.k9.fragment.ConfirmationDialogFragment { void onAttach(android.app.Activity); }
-keepclassmembers class java.net.ServerSocket { int getLocalPort(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { void clearMemory(); }
-keepclassmembers class android.widget.Editor { void onScreenStateChanged(int); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder setResponseSource(com.android.okhttp.ResponseSource); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$3 { void <init>(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class java.net.ServerSocket { void implAccept(java.net.Socket); }
-keepclassmembers class android.widget.Editor { void resumeBlink(); }
-keepclassmembers class android.app.ActionBar { void <init>(); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder removeHeader(java.lang.String); }
-keepclassmembers class android.widget.Editor { void suspendBlink(); }
-keepclassmembers class android.widget.Editor { void adjustInputType(boolean,boolean,boolean,boolean); }
-keepclassmembers class android.widget.Toast$TN { void <init>(); }
-keepclassmembers class java.net.ServerSocket { void setSoTimeout(int); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder networkResponse(com.android.okhttp.Response); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$3 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class com.fsck.k9.fragment.ConfirmationDialogFragment { void onCancel(android.content.DialogInterface); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder cacheResponse(com.android.okhttp.Response); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toLowerCase(java.util.Locale,java.lang.String,char[],int,int); }
-keepclassmembers class com.fsck.k9.fragment.ConfirmationDialogFragment { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor,char[]); }
-keepclassmembers class android.widget.Editor { void chooseSize(android.widget.PopupWindow,java.lang.CharSequence,android.widget.TextView); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.NameValuePair parseNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Builder priorResponse(com.android.okhttp.Response); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { void <init>(java.lang.String[]); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$3 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response build(); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { void <init>(); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { boolean isOneOf(char,char[]); }
-keepclassmembers class com.fsck.k9.fragment.ConfirmationDialogFragment { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { java.util.List parse(org.apache.http.Header,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class com.android.okhttp.Response$Builder { void checkSupportResponse(java.lang.String,com.android.okhttp.Response); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response access$500(com.android.okhttp.Response$Builder); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.internal.http.StatusLine access$100(com.android.okhttp.Response$Builder); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Request access$000(com.android.okhttp.Response$Builder); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Headers$Builder access$300(com.android.okhttp.Response$Builder); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response access$600(com.android.okhttp.Response$Builder); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Handshake access$200(com.android.okhttp.Response$Builder); }
-keepclassmembers class java.net.ServerSocket { boolean isBound(); }
-keepclassmembers class android.widget.Editor { void setFrame(); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response access$700(com.android.okhttp.Response$Builder); }
-keepclassmembers class java.net.ServerSocket { boolean isClosed(); }
-keepclassmembers class android.text.TextUtils { int getOffsetBefore(java.lang.CharSequence,int); }
-keepclassmembers class com.android.okhttp.Response$Builder { com.android.okhttp.Response$Body access$400(com.android.okhttp.Response$Builder); }
-keepclassmembers class android.transition.ChangeClipBounds { void <init>(); }
-keepclassmembers class android.transition.ChangeClipBounds { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.Editor { boolean hasPasswordTransformationMethod(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { boolean put(android.graphics.Bitmap); }
-keepclassmembers class android.widget.Editor { boolean selectCurrentWord(); }
-keepclassmembers class com.android.okhttp.Response$Builder { void <init>(com.android.okhttp.Response,com.android.okhttp.Response$1); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class java.net.ServerSocket { void checkOpen(); }
-keepclassmembers class android.widget.Editor { boolean canSelectText(); }
-keepclassmembers class android.widget.TimePicker { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.widget.TimePicker { void <init>(android.content.Context); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toAsciiBytes(char[],int,int); }
-keepclassmembers class android.text.TextUtils { int getOffsetAfter(java.lang.CharSequence,int); }
-keepclassmembers class android.widget.TimePicker { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.widget.TimePicker { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.CaseMapper { int upperIndex(int); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toBigEndianUtf16Bytes(char[],int,int); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class java.lang.CaseMapper { java.lang.String toUpperCase(java.util.Locale,java.lang.String,char[],int,int); }
-keepclassmembers class android.transition.ChangeClipBounds { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class java.lang.CaseMapper { boolean isFinalSigma(char[],int,int,int); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toIsoLatin1Bytes(char[],int,int); }
-keepclassmembers class android.app.ActionBar { boolean onMenuKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.animation.IntEvaluator { void <init>(); }
-keepclassmembers class android.app.ActionBar { boolean invalidateOptionsMenu(); }
-keepclassmembers class java.nio.charset.Charsets { byte[] toUtf8Bytes(char[],int,int); }
-keepclassmembers class android.text.TextUtils { void readSpan(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer); }
-keepclassmembers class android.widget.TimePicker { void setCurrentMinute(java.lang.Integer); }
-keepclassmembers class java.util.Properties { void <init>(java.util.Properties); }
-keepclassmembers class java.nio.charset.Charsets { void asciiBytesToChars(byte[],int,int,char[]); }
-keepclassmembers class android.widget.TimePicker { void setCurrentHour(java.lang.Integer); }
-keepclassmembers class java.util.Properties { void <init>(); }
-keepclassmembers class java.nio.charset.Charsets { void isoLatin1BytesToChars(byte[],int,int,char[]); }
-keepclassmembers class android.widget.TimePicker { void setEnabled(boolean); }
-keepclassmembers class android.text.TextUtils { void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int); }
-keepclassmembers class android.widget.TimePicker { boolean isEnabled(); }
-keepclassmembers class android.animation.IntEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { org.apache.http.NameValuePair createNameValuePair(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TimePicker { void setOnTimeChangedListener(android.widget.TimePicker$OnTimeChangedListener); }
-keepclassmembers class android.widget.TimePicker { int getBaseline(); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { java.util.List formatCookies(java.util.List); }
-keepclassmembers class android.widget.Editor { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueParser { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$1 { void <init>(com.fsck.k9.ui.messageview.MessageViewFragment); }
-keepclassmembers class android.widget.TimePicker { void setIs24HourView(java.lang.Boolean); }
-keepclassmembers class android.transition.ChangeClipBounds { void <clinit>(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { int calculateNumberOfMessagesForSummaryNotification(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$1 { void onClick(android.view.View); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { void <init>(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter$1 { void <init>(com.fsck.k9.activity.AlternateRecipientAdapter); }
-keepclassmembers class android.widget.TimePicker { boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.Editor { long getCharRange(int); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { void addToAdditionalNotifications(com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress { void <init>(); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback); }
-keepclassmembers class android.widget.TimePicker { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool { void trimMemory(int); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { int getNewNotificationId(); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { int getVersion(); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.ORAddress { void <clinit>(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { com.fsck.k9.notification.NotificationHolder getNotificationHolderForMessage(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { org.apache.http.Header getVersionHeader(); }
-keepclassmembers class java.util.Properties { java.lang.String getProperty(java.lang.String,java.lang.String); }
-keepclassmembers class android.text.TextUtils { java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils$TruncateAt,boolean,android.text.TextUtils$EllipsizeCallback,android.text.TextDirectionHeuristic,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.BrowserCompatSpec { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeParseEventException { void <init>(org.apache.james.mime4j.stream.Event); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { boolean isMaxNumberOfActiveNotificationsReached(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { void markNotificationIdAsInUse(int); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { void markNotificationIdAsFree(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics$Provider { void <init>(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { boolean isNotificationInUse(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { org.apache.harmony.security.asn1.ASN1Boolean getInstance(); }
-keepclassmembers class android.graphics.PathMeasure { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.AccountList$AccountsAdapter { void <init>(com.fsck.k9.activity.AccountList,java.util.List); }
-keepclassmembers class java.lang.CaseMapper { void <clinit>(); }
-keepclassmembers class android.graphics.PathMeasure { void <init>(android.graphics.Path,boolean); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { com.fsck.k9.notification.AddNotificationResult addNotificationContent(com.fsck.k9.notification.NotificationContent); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener getPositionListener(); }
-keepclassmembers class android.graphics.PathMeasure { void setPath(android.graphics.Path,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Boolean { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { boolean containsStarredMessages(); }
-keepclassmembers class java.util.Properties { void load(java.io.InputStream); }
-keepclassmembers class java.util.Properties { void load(java.io.Reader); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$1 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class android.graphics.PathMeasure { float getLength(); }
-keepclassmembers class android.graphics.PathMeasure { boolean getSegment(float,float,android.graphics.Path,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { void setTint(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$LollipopDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.PathMeasure { boolean getPosTan(float,float[],float[]); }
-keepclassmembers class com.android.okio.Deadline$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { com.fsck.k9.Account getAccount(); }
-keepclassmembers class android.graphics.PathMeasure { long native_create(long,boolean); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { int[] getActiveNotificationIds(); }
-keepclassmembers class android.graphics.PathMeasure { void native_setPath(long,long,boolean); }
-keepclassmembers class android.graphics.PathMeasure { float native_getLength(long); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$1 { void <init>(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { com.fsck.k9.notification.NotificationHolder createNotificationHolder(int,com.fsck.k9.notification.NotificationContent); }
-keepclassmembers class com.android.okio.Deadline$1 { boolean reached(); }
-keepclassmembers class android.graphics.PathMeasure { boolean native_getPosTan(long,float,float[],float[]); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { com.fsck.k9.notification.NotificationHolder getHolderForLatestNotification(); }
-keepclassmembers class javax.net.ssl.SSLSocketFactory { javax.net.SocketFactory getDefault(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { java.util.ArrayList getAllMessageReferences(); }
-keepclassmembers class javax.net.ssl.SSLSocketFactory { void <init>(); }
-keepclassmembers class android.graphics.PathMeasure { boolean native_getSegment(long,float,float,long,boolean); }
-keepclassmembers class javax.net.ssl.SSLSocketFactory { void <clinit>(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { java.util.List getContentForSummaryNotification(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { int getNewMessagesCount(); }
-keepclassmembers class android.graphics.Matrix$1 { void <init>(); }
-keepclassmembers class android.widget.Editor { long getLastTouchOffsets(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { int getSummaryOverflowMessagesCount(); }
-keepclassmembers class android.app.SearchDialog$2 { void <init>(android.app.SearchDialog); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { int getUnreadMessageCount(); }
-keepclassmembers class com.fsck.k9.activity.ConfirmationDialog$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.widget.Editor { void onFocusChanged(boolean,int); }
-keepclassmembers class com.fsck.k9.activity.ConfirmationDialog$2 { void <init>(android.app.Activity,int,java.lang.Runnable); }
-keepclassmembers class java.net.HttpURLConnection { boolean getInstanceFollowRedirects(); }
-keepclassmembers class java.net.HttpURLConnection { void <init>(java.net.URL); }
-keepclassmembers class java.util.Properties { java.util.Enumeration propertyNames(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { boolean hasSummaryOverflowMessages(); }
-keepclassmembers class java.net.HttpURLConnection { java.lang.String getContentEncoding(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { boolean isSingleMessageNotification(); }
-keepclassmembers class android.widget.Editor { boolean isPositionOnText(float,float); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { com.fsck.k9.notification.RemoveNotificationResult removeNotificationForMessage(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class android.content.ContentResolver { boolean getMasterSyncAutomatically(); }
-keepclassmembers class com.fsck.k9.notification.NotificationData { void setUnreadMessageCount(int); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { void <init>(java.util.Hashtable); }
-keepclassmembers class android.widget.Editor { void sendOnTextChanged(int,int); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { boolean hasMoreElements(); }
-keepclassmembers class java.util.Properties { void selectProperties(java.util.Hashtable,boolean); }
-keepclassmembers class android.widget.Editor { int getLastTapPosition(); }
-keepclassmembers class java.util.Hashtable$KeyEnumeration { java.lang.Object nextElement(); }
-keepclassmembers class android.widget.Editor { void onWindowFocusChanged(boolean); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void reverse(); }
-keepclassmembers class android.widget.Editor { void downgradeEasyCorrectionSpans(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { boolean canReverse(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder$2 { void <init>(com.fsck.k9.message.MessageBuilder,int,android.content.Intent); }
-keepclassmembers class org.htmlcleaner.CommentNode { java.lang.String getCommentedContent(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder$2 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.net.HttpURLConnection { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.CommentNode { void serialize(org.htmlcleaner.Serializer,java.io.Writer); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$Transition { void <init>(android.graphics.drawable.AnimatedStateListDrawable$1); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder$2 { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class org.htmlcleaner.CommentNode { void <init>(java.lang.String); }
-keepclassmembers class org.htmlcleaner.CommentNode { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder$2 { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.widget.Editor { void beginBatchEdit(); }
-keepclassmembers class com.fsck.k9.message.MessageBuilder$2 { void onPostExecute(java.lang.Void); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String); }
-keepclassmembers class android.widget.Editor { void onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,com.bumptech.glide.disklrucache.DiskLruCache$1); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void <init>(com.android.org.conscrypt.SSLParametersImpl); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable$Stage { void <clinit>(); }
-keepclassmembers class android.widget.Editor { void ensureEndedBatchEdit(); }
-keepclassmembers class android.widget.Editor { boolean extractTextInternal(android.view.inputmethod.ExtractedTextRequest,int,int,int,android.view.inputmethod.ExtractedText); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { long[] access$1000(com.bumptech.glide.disklrucache.DiskLruCache$Entry); }
-keepclassmembers class android.widget.Editor { void finishBatchEdit(android.widget.Editor$InputMethodState); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { java.lang.String access$1100(com.bumptech.glide.disklrucache.DiskLruCache$Entry); }
-keepclassmembers class android.widget.Editor { void endBatchEdit(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineRunnable$Stage { void <init>(java.lang.String,int); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { long access$1200(com.bumptech.glide.disklrucache.DiskLruCache$Entry); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { boolean access$602(com.bumptech.glide.disklrucache.DiskLruCache$Entry,boolean); }
-keepclassmembers class android.view.KeyEvent { int getDeadChar(int,int); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$4$2 { void <init>(com.fsck.k9.activity.ChooseFolder$4,java.util.List); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { long access$1202(com.bumptech.glide.disklrucache.DiskLruCache$Entry,long); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { java.io.IOException invalidLengths(java.lang.String[]); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { com.bumptech.glide.disklrucache.DiskLruCache$Editor access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry); }
-keepclassmembers class android.text.TextUtils { float setPara(android.text.MeasuredText,android.text.TextPaint,java.lang.CharSequence,int,int,android.text.TextDirectionHeuristic); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { boolean access$600(com.bumptech.glide.disklrucache.DiskLruCache$Entry); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$4$2 { void run(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { com.bumptech.glide.disklrucache.DiskLruCache$Editor access$702(com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$Editor); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { java.io.File getCleanFile(int); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { void access$800(com.bumptech.glide.disklrucache.DiskLruCache$Entry,java.lang.String[]); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void checkOpen(); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { void setLengths(java.lang.String[]); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { java.io.File getDirtyFile(int); }
-keepclassmembers class com.bumptech.glide.disklrucache.DiskLruCache$Entry { java.lang.String getLengths(); }
-keepclassmembers class android.view.KeyEvent { void <init>(long,long,int,int,int,int,int,int,int); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean); }
-keepclassmembers class android.text.TextUtils { char[] obtain(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void <init>(java.net.Socket,java.lang.String,int,boolean,com.android.org.conscrypt.SSLParametersImpl); }
-keepclassmembers class android.text.TextUtils { boolean doesNotNeedBidi(char[],int,int); }
-keepclassmembers class org.apache.james.mime4j.io.PositionInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class android.content.ContentResolver { android.content.IContentService getContentService(); }
-keepclassmembers class android.os.ServiceManagerNative { android.os.IServiceManager asInterface(android.os.IBinder); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void startHandshake(); }
-keepclassmembers class android.text.TextUtils { void recycle(char[]); }
-keepclassmembers class android.content.ContentResolver { void <clinit>(); }
-keepclassmembers class android.widget.Editor { boolean reportExtractedText(); }
-keepclassmembers class org.apache.james.mime4j.io.PositionInputStream { int available(); }
-keepclassmembers class org.apache.james.mime4j.io.PositionInputStream { int read(byte[],int,int); }
-keepclassmembers class org.apache.james.mime4j.io.PositionInputStream { int read(); }
-keepclassmembers class com.bumptech.glide.request.animation.DrawableCrossFadeFactory$DefaultAnimationFactory { android.view.animation.Animation build(); }
-keepclassmembers class com.bumptech.glide.request.animation.DrawableCrossFadeFactory$DefaultAnimationFactory { void <init>(int); }
-keepclassmembers class android.text.method.CharacterPickerDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.james.mime4j.io.PositionInputStream { void mark(int); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.io.PositionInputStream { void reset(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader { void <init>(byte[]); }
-keepclassmembers class android.text.TextUtils { java.lang.String htmlEncode(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader { short getInt16(int); }
-keepclassmembers class org.apache.james.mime4j.io.PositionInputStream { long skip(long); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader { int getInt32(int); }
-keepclassmembers class android.widget.Editor { void sendUpdateSelection(); }
-keepclassmembers class org.apache.james.mime4j.io.PositionInputStream { void close(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader { int length(); }
-keepclassmembers class com.fsck.k9.setup.ServerNameSuggester { void <init>(); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,long,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$RandomAccessReader { void order(java.nio.ByteOrder); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { boolean VMSupportsCS8(); }
-keepclassmembers class android.graphics.drawable.Drawable$ConstantState { boolean canApplyTheme(); }
-keepclassmembers class android.widget.Toast$TN$2 { void <init>(android.widget.Toast$TN); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$3 { void <init>(com.fsck.k9.activity.compose.AttachmentPresenter); }
-keepclassmembers class android.widget.Editor { void onDraw(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { long get(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { boolean compareAndSet(long,long); }
-keepclassmembers class com.fsck.k9.activity.compose.AttachmentPresenter$3 { void run(); }
-keepclassmembers class org.apache.http.entity.HttpEntityWrapper { void <init>(org.apache.http.HttpEntity); }
-keepclassmembers class android.text.TextUtils { int getCapsMode(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { long getAndIncrement(); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(android.content.Context,int); }
-keepclassmembers class com.fsck.k9.setup.ServerNameSuggester { java.lang.String suggestServerName(com.fsck.k9.mail.ServerSettings$Type,java.lang.String); }
-keepclassmembers class android.view.ContextThemeWrapper { void applyOverrideConfiguration(android.content.res.Configuration); }
-keepclassmembers class android.view.ContextThemeWrapper { void <init>(); }
-keepclassmembers class android.widget.Editor { void drawHardwareAccelerated(android.graphics.Canvas,android.text.Layout,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources getResources(); }
-keepclassmembers class android.view.ContextThemeWrapper { void setTheme(int); }
-keepclassmembers class org.apache.http.entity.HttpEntityWrapper { void consumeContent(); }
-keepclassmembers class org.apache.http.entity.HttpEntityWrapper { boolean isChunked(); }
-keepclassmembers class android.view.ContextThemeWrapper { android.content.res.Resources$Theme getTheme(); }
-keepclassmembers class org.apache.http.entity.HttpEntityWrapper { long getContentLength(); }
-keepclassmembers class android.app.RemoteInput$Builder { void <init>(java.lang.String); }
-keepclassmembers class android.text.TextUtils { boolean delimitedStringContains(java.lang.String,char,java.lang.String); }
-keepclassmembers class android.view.ContextThemeWrapper { java.lang.Object getSystemService(java.lang.String); }
-keepclassmembers class android.view.ContextThemeWrapper { int getThemeResId(); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]); }
-keepclassmembers class org.apache.http.entity.HttpEntityWrapper { org.apache.http.Header getContentEncoding(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$4 { void <init>(com.fsck.k9.activity.FolderList$FolderListHandler,long,long); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings { void <init>(); }
-keepclassmembers class org.apache.http.entity.HttpEntityWrapper { boolean isStreaming(); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings { android.preference.ListPreference access$000(com.fsck.k9.activity.setup.FolderSettings); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$4 { void run(); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings { android.preference.ListPreference access$100(com.fsck.k9.activity.setup.FolderSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings { android.preference.ListPreference access$200(com.fsck.k9.activity.setup.FolderSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings { android.preference.ListPreference access$300(com.fsck.k9.activity.setup.FolderSettings); }
-keepclassmembers class android.view.ContextThemeWrapper { void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean); }
-keepclassmembers class android.view.ContextThemeWrapper { void initializeTheme(); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder setAllowFreeFormInput(boolean); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder addExtras(android.os.Bundle); }
-keepclassmembers class android.text.TextUtils { java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class); }
-keepclassmembers class android.app.RemoteInput$Builder { void setFlag(int,boolean); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings { void saveSettings(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void signalNotEmpty(); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput build(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void signalNotFull(); }
-keepclassmembers class android.view.KeyEvent { void <init>(android.view.KeyEvent,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageVideoDataLoadProvider { void <init>(com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.provider.DataLoadProvider); }
-keepclassmembers class java.util.logging.Logger$1 { void <init>(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void enqueue(java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class java.util.logging.Logger$1 { void publish(java.util.logging.Logger,java.lang.String,java.util.logging.Level,java.lang.String); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object dequeue(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.lang.String getHostname(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyLock(); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeAction(android.view.KeyEvent,int); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings { void onCreate(android.os.Bundle); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void fullyUnlock(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { int getPort(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageVideoDataLoadProvider { com.bumptech.glide.load.ResourceDecoder getCacheDecoder(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void <init>(); }
-keepclassmembers class android.text.TextUtils { long packRangeInLong(int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageVideoDataLoadProvider { com.bumptech.glide.load.ResourceEncoder getEncoder(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicLong { void <clinit>(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void <init>(int); }
-keepclassmembers class android.text.TextUtils { int unpackRangeStartFromLong(long); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageVideoDataLoadProvider { com.bumptech.glide.load.ResourceDecoder getSourceDecoder(); }
-keepclassmembers class android.text.TextUtils { int unpackRangeEndFromLong(long); }
-keepclassmembers class android.app.RemoteInput$Builder { android.app.RemoteInput$Builder setLabel(java.lang.CharSequence); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifFrame { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageVideoDataLoadProvider { com.bumptech.glide.load.Encoder getSourceEncoder(); }
-keepclassmembers class org.apache.harmony.security.x509.X509PublicKey { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class android.os.Parcel$1 { void <init>(); }
-keepclassmembers class android.text.TextUtils { int getLayoutDirectionFromFirstChar(java.util.Locale); }
-keepclassmembers class org.apache.harmony.security.x509.X509PublicKey { java.lang.String toString(); }
-keepclassmembers class android.text.TextUtils { int getLayoutDirectionFromLocale(java.util.Locale); }
-keepclassmembers class android.text.TextUtils { void access$000(android.os.Parcel,android.text.Spannable,java.lang.Object); }
-keepclassmembers class android.text.TextUtils { void <clinit>(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { int size(); }
-keepclassmembers class java.lang.ThreadGroup { void <init>(java.lang.String); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi20 { java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompat$Action[]); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void notifyHandshakeCompletedListeners(); }
-keepclassmembers class com.fsck.k9.helper.RetainFragment { void <init>(); }
-keepclassmembers class com.fsck.k9.helper.RetainFragment { com.fsck.k9.helper.RetainFragment findOrCreate(android.app.FragmentManager,java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.RetainFragment { void clearAndRemove(android.app.FragmentManager); }
-keepclassmembers class android.text.style.ReplacementSpan { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void <init>(android.content.Context,com.fsck.k9.notification.NotificationController,com.fsck.k9.helper.Contacts); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void <clinit>(); }
-keepclassmembers class android.view.KeyEvent { boolean isConfirmKey(int); }
-keepclassmembers class com.fsck.k9.helper.RetainFragment { com.fsck.k9.helper.RetainFragment findOrNull(android.app.FragmentManager,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings { void onPause(); }
-keepclassmembers class com.fsck.k9.helper.RetainFragment { boolean hasData(); }
-keepclassmembers class com.fsck.k9.helper.RetainFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class android.view.KeyEvent { int getMetaState(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$9 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder); }
-keepclassmembers class android.view.KeyEvent { int getFlags(); }
-keepclassmembers class com.fsck.k9.helper.RetainFragment { void setData(java.lang.Object); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean offer(java.lang.Object); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView); }
-keepclassmembers class android.view.KeyEvent { int normalizeMetaState(int); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings { void actionSettings(android.content.Context,com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class android.view.KeyEvent { boolean isModifierKey(int); }
-keepclassmembers class com.fsck.k9.helper.RetainFragment { java.lang.Object getData(); }
-keepclassmembers class android.widget.ListView$FocusSelector { android.widget.ListView$FocusSelector setup(int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$9 { void run(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$1000(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasNoModifiers(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$000(com.fsck.k9.controller.MessagingController); }
-keepclassmembers class android.widget.ListView$FocusSelector { void <init>(android.widget.ListView,android.widget.ListView$1); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$1100(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.util.concurrent.BlockingQueue access$100(com.fsck.k9.controller.MessagingController); }
-keepclassmembers class java.lang.ThreadGroup { void add(java.lang.ThreadGroup); }
-keepclassmembers class android.widget.Editor { int getAvailableDisplayListIndex(int[],int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean access$1200(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,java.lang.String,com.fsck.k9.controller.MessagingListener,boolean); }
-keepclassmembers class android.view.KeyEvent { boolean metaStateHasModifiers(int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$1300(com.fsck.k9.mail.Folder); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.io.OutputStream getOutputStream(); }
-keepclassmembers class android.view.KeyEvent { int metaStateFilterDirectionalModifiers(int,int,int,int,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.io.InputStream getInputStream(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { android.content.Context access$1400(com.fsck.k9.controller.MessagingController); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$1600(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean access$1500(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object poll(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object take(); }
-keepclassmembers class android.widget.Editor { void drawCursor(android.graphics.Canvas,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void waitForHandshake(); }
-keepclassmembers class com.fsck.k9.activity.MessageList$DisplayMode { void <clinit>(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { java.lang.Object peek(); }
-keepclassmembers class android.view.KeyEvent { boolean hasNoModifiers(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$2000(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$1900(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.util.List); }
-keepclassmembers class android.view.KeyEvent { boolean hasModifiers(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$1700(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { javax.net.ssl.SSLSession getSession(); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { void unlink(java.util.concurrent.LinkedBlockingQueue$Node,java.util.concurrent.LinkedBlockingQueue$Node); }
-keepclassmembers class com.fsck.k9.activity.MessageList$DisplayMode { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.util.List access$2200(com.fsck.k9.Account,java.util.List); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$1800(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$2100(com.fsck.k9.controller.MessagingController,java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable); }
-keepclassmembers class java.util.concurrent.LinkedBlockingQueue { boolean remove(java.lang.Object); }
-keepclassmembers class android.view.KeyEvent { boolean isShiftPressed(); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.String); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.activity.MessageList$DisplayMode { com.fsck.k9.activity.MessageList$DisplayMode[] values(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$2300(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setEnabledCipherSuites(java.lang.String[]); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { boolean getEnableSessionCreation(); }
-keepclassmembers class java.security.cert.CertificateException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$2400(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,java.util.List); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$2500(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean access$2600(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(android.graphics.drawable.LayerDrawable$ChildDrawable,android.graphics.drawable.LayerDrawable,android.content.res.Resources); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.lang.String[] getSupportedCipherSuites(); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { java.lang.String getLastPathSegment(); }
-keepclassmembers class android.widget.Editor { void invalidateTextDisplayList(); }
-keepclassmembers class android.graphics.drawable.LayerDrawable$ChildDrawable { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.lang.String[] access$2700(); }
-keepclassmembers class android.widget.Editor { void updateCursorsPositions(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$2800(com.fsck.k9.controller.MessagingController,android.content.Context,com.fsck.k9.Account,boolean,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$2900(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.mail.Folder); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.lang.String[] getEnabledCipherSuites(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setEnabledProtocols(java.lang.String[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean access$300(com.fsck.k9.controller.MessagingController,com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class java.net.Socks4Message { void <init>(); }
-keepclassmembers class java.net.Socks4Message { int getCommandOrResult(); }
-keepclassmembers class android.view.KeyEvent { int getAction(); }
-keepclassmembers class java.net.Socks4Message { int getPort(); }
-keepclassmembers class java.net.Socks4Message { void setCommandOrResult(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$3000(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account); }
-keepclassmembers class android.widget.Editor { float getPrimaryHorizontal(android.text.Layout,android.text.Layout,int,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.util.concurrent.atomic.AtomicInteger access$3100(); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { java.lang.String getHost(); }
-keepclassmembers class java.net.Socks4Message { void setIP(byte[]); }
-keepclassmembers class java.net.Socks4Message { void setPort(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { int access$3200(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean); }
-keepclassmembers class java.net.Socks4Message { int getIP(); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { java.lang.String parseHost(); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { int getPort(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.lang.String access$3300(com.fsck.k9.controller.MessagingController,java.lang.Throwable); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { int parsePort(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean access$500(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.mail.Message,java.util.Date); }
-keepclassmembers class android.graphics.drawable.shapes.PathShape { void <init>(android.graphics.Path,float,float); }
-keepclassmembers class android.view.KeyEvent { int getRepeatCount(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$400(com.fsck.k9.controller.MessagingController,java.util.List,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Folder,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { int compareTo(java.lang.Object); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setChannelIdPrivateKey(java.security.PrivateKey); }
-keepclassmembers class java.net.Socks4Message { int getLength(); }
-keepclassmembers class android.graphics.drawable.shapes.PathShape { void draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { boolean getUseClientMode(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean access$600(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Message); }
-keepclassmembers class java.net.Socks4Message { void setUserId(java.lang.String); }
-keepclassmembers class android.net.Uri$AbstractHierarchicalUri { void <init>(android.net.Uri$1); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { com.fsck.k9.notification.NotificationController access$700(com.fsck.k9.controller.MessagingController); }
-keepclassmembers class android.widget.Editor { boolean startSelectionActionMode(); }
-keepclassmembers class android.view.KeyEvent { android.view.KeyCharacterMap getKeyCharacterMap(); }
-keepclassmembers class java.net.Socks4Message { java.lang.String getErrorString(int); }
-keepclassmembers class java.lang.ThreadGroup { int getMaxPriority(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$800(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String getName(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void access$900(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalStore$PendingCommand); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void actOnMessageGroup(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingController$MessageActor); }
-keepclassmembers class java.net.Socks4Message { byte[] getBytes(); }
-keepclassmembers class android.graphics.drawable.shapes.PathShape { void onResize(float,float); }
-keepclassmembers class android.graphics.drawable.shapes.PathShape { android.graphics.drawable.shapes.PathShape clone(); }
-keepclassmembers class android.graphics.drawable.shapes.PathShape { android.graphics.drawable.shapes.Shape clone(); }
-keepclassmembers class android.view.KeyEvent { int getUnicodeChar(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void actOnMessagesGroupedByAccountAndFolder(java.util.List,com.fsck.k9.controller.MessagingController$MessageActor); }
-keepclassmembers class android.view.KeyEvent { boolean getKeyData(android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class android.view.KeyEvent { char getMatch(char[],int); }
-keepclassmembers class java.net.Socks4Message { void setString(int,int,java.lang.String); }
-keepclassmembers class java.net.Socks4Message { void setVersionNumber(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setSoTimeout(int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { int getSoTimeout(); }
-keepclassmembers class android.widget.Editor { boolean extractedTextModeWillBeStarted(); }
-keepclassmembers class android.widget.Editor { boolean isCursorInsideEasyCorrectionSpan(); }
-keepclassmembers class android.view.KeyEvent { char getNumber(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setSoWriteTimeout(int); }
-keepclassmembers class java.lang.ThreadGroup { boolean isDestroyed(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void close(); }
-keepclassmembers class java.lang.ThreadGroup { boolean isDaemon(); }
-keepclassmembers class java.text.Normalizer { java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setHandshakeTimeout(int); }
-keepclassmembers class com.fsck.k9.Account$MessageFormat { void <clinit>(); }
-keepclassmembers class com.fsck.k9.Account$MessageFormat { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.Editor { void onTouchUpEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.Account$MessageFormat { com.fsck.k9.Account$MessageFormat valueOf(java.lang.String); }
-keepclassmembers class org.xml.sax.SAXException { java.lang.String getMessage(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { int getSoWriteTimeout(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void shutdownAndFreeSslNative(); }
-keepclassmembers class org.htmlcleaner.SimpleHtmlSerializer { void <init>(org.htmlcleaner.CleanerProperties); }
-keepclassmembers class com.fsck.k9.mailstore.StorageManager$SynchronizationAid { void <init>(); }
-keepclassmembers class org.xml.sax.SAXException { void <init>(java.lang.String); }
-keepclassmembers class org.htmlcleaner.SimpleHtmlSerializer { void serialize(org.htmlcleaner.TagNode,java.io.Writer); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void addErrorMessage(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Editor { boolean hasInsertionController(); }
-keepclassmembers class org.xml.sax.SAXException { java.lang.String toString(); }
-keepclassmembers class android.widget.Editor { void stopSelectionActionMode(); }
-keepclassmembers class android.widget.Editor { boolean hasSelectionController(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void closeUnderlyingSocket(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$24 { java.lang.Integer doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void free(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.io.FileDescriptor getFileDescriptor$(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$24 { void <init>(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$InsertionPointCursorController getInsertionController(); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$SelectionModifierCursorController getSelectionController(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setNpnProtocols(byte[]); }
-keepclassmembers class android.widget.RemoteViews$1 { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void setAlpnProtocols(byte[]); }
-keepclassmembers class com.bumptech.glide.Priority { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$ChildBreaks { void <init>(org.htmlcleaner.HtmlCleaner,org.htmlcleaner.HtmlCleaner$1); }
-keepclassmembers class com.bumptech.glide.Priority { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.lang.String chooseServerAlias(javax.net.ssl.X509KeyManager,java.lang.String); }
-keepclassmembers class android.widget.Editor { void updateCursorPosition(int,int,int,float); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$15 { void <init>(com.fsck.k9.mailstore.LocalStore,java.lang.String); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$ChildBreaks { void <init>(org.htmlcleaner.HtmlCleaner); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$15 { void writeTo(java.io.OutputStream); }
-keepclassmembers class com.android.okhttp.internal.spdy.PushObserver { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$ChildBreaks { java.lang.String getLastBreakingTag(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$24 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$ChildBreaks { void addBreak(org.htmlcleaner.HtmlCleaner$TagPos,org.htmlcleaner.HtmlCleaner$TagPos); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.lang.String chooseServerPSKIdentityHint(com.android.org.conscrypt.PSKKeyManager); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$ChildBreaks { int getLastBreakingTagPosition(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.ParsedMessageEnvelope { void <clinit>(); }
-keepclassmembers class android.widget.Editor { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.ParsedMessageEnvelope { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void checkMailForAccount(android.content.Context,com.fsck.k9.Account,boolean,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$ChildBreaks { java.util.Stack access$1000(org.htmlcleaner.HtmlCleaner$ChildBreaks); }
-keepclassmembers class java.lang.ThreadGroup { void setMaxPriority(int); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$ChildBreaks { org.htmlcleaner.HtmlCleaner$TagPos pop(); }
-keepclassmembers class java.lang.ThreadGroup { void setDaemon(boolean); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { void access$000(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class org.htmlcleaner.HtmlCleaner$ChildBreaks { boolean isEmpty(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$15 { void <init>(com.fsck.k9.controller.MessagingController,java.lang.String,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.ParsedMessageEnvelope { void addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.Editor { boolean shouldBlink(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool); }
-keepclassmembers class android.widget.Editor { void onScrollChanged(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool,int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.lang.Object access$100(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key { int access$000(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { int access$200(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$15 { void run(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.ParsedMessageEnvelope { java.lang.String[] getHeaderList(); }
-keepclassmembers class android.widget.Editor { void makeBlink(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { long access$300(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { int access$500(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.ParsedMessageEnvelope { java.util.Map getMessageHeaders(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketImpl { java.net.Socket access$400(com.android.org.conscrypt.OpenSSLSocketImpl); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$2 { void <init>(com.fsck.k9.activity.compose.RecipientMvpView,com.fsck.k9.activity.compose.RecipientPresenter); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.provider.FixedLoadProvider { void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.provider.DataLoadProvider); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.ParsedMessageEnvelope { boolean getReadStatus(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.ParsedMessageEnvelope { void setReadStatus(boolean); }
-keepclassmembers class android.view.KeyEvent { java.lang.String metaStateToString(int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$4$1 { void <init>(com.fsck.k9.activity.ChooseFolder$4); }
-keepclassmembers class com.bumptech.glide.provider.FixedLoadProvider { com.bumptech.glide.load.ResourceDecoder getCacheDecoder(); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$4$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$2 { void onTokenChanged(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.provider.FixedLoadProvider { com.bumptech.glide.load.ResourceEncoder getEncoder(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key { void init(int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key { int hashCode(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key { void offer(); }
-keepclassmembers class android.widget.Editor { void onDrop(android.view.DragEvent); }
-keepclassmembers class com.bumptech.glide.provider.FixedLoadProvider { com.bumptech.glide.load.model.ModelLoader getModelLoader(); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$4$1 { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key { java.lang.String toString(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State { void <init>(java.lang.String,int); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void rememberWindowAttachCount(); }
-keepclassmembers class com.bumptech.glide.provider.FixedLoadProvider { com.bumptech.glide.load.ResourceDecoder getSourceDecoder(); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { void <init>(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { boolean sameWindow(); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State { void <init>(java.lang.String,int,com.fsck.k9.mail.filter.SignSafeOutputStream$1); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientMvpView$2 { void onTokenChanged(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class android.animation.Animator { void <init>(); }
-keepclassmembers class com.bumptech.glide.provider.FixedLoadProvider { com.bumptech.glide.load.Encoder getSourceEncoder(); }
-keepclassmembers class com.bumptech.glide.provider.FixedLoadProvider { com.bumptech.glide.load.resource.transcode.ResourceTranscoder getTranscoder(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(); }
-keepclassmembers class android.widget.AbsListView$WindowRunnnable { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void <init>(android.graphics.drawable.VectorDrawable$VPath); }
-keepclassmembers class java.lang.ThreadGroup { java.lang.String toString(); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verify(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void toPath(android.graphics.Path); }
-keepclassmembers class android.view.KeyEvent { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { java.lang.String getPathName(); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { boolean canApplyTheme(); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verify(java.lang.String,javax.net.ssl.SSLSession); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void clearSendingNotificationIfNecessary(com.fsck.k9.Account); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VPath { boolean isClipPath(); }
-keepclassmembers class java.lang.ThreadGroup { void <clinit>(); }
-keepclassmembers class android.widget.Editor { void addSpanWatchers(android.text.Spannable); }
-keepclassmembers class java.lang.ThreadGroup { void addThread(java.lang.Thread); }
-keepclassmembers class android.widget.Editor { boolean access$600(android.widget.Editor); }
-keepclassmembers class android.widget.Editor { android.widget.Editor$PositionListener access$1400(android.widget.Editor); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void closeFolder(com.fsck.k9.mail.Folder); }
-keepclassmembers class android.animation.Animator { void addListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.util.List collectMessagesInThreads(com.fsck.k9.Account,java.util.List); }
-keepclassmembers class android.widget.Editor { android.widget.TextView access$700(android.widget.Editor); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void clearFetchingMailNotificationIfNecessary(com.fsck.k9.Account); }
-keepclassmembers class android.widget.Toast { void <init>(android.content.Context); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verifyHostName(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class android.widget.Toast { void show(); }
-keepclassmembers class dalvik.system.BlockGuard$2 { void <init>(); }
-keepclassmembers class android.widget.Editor { android.graphics.Rect access$2300(android.widget.Editor); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void deleteMessagesSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class dalvik.system.BlockGuard$2 { java.lang.Object initialValue(); }
-keepclassmembers class android.content.AsyncQueryHandler$WorkerArgs { void <init>(); }
-keepclassmembers class dalvik.system.BlockGuard$2 { dalvik.system.BlockGuard$Policy initialValue(); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int); }
-keepclassmembers class android.animation.Animator { java.util.ArrayList getListeners(); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$2802(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.Editor { boolean access$3200(android.widget.Editor,float,float); }
-keepclassmembers class android.widget.Toast { void setGravity(int,int,int); }
-keepclassmembers class android.animation.Animator { void removeListener(android.animation.Animator$AnimatorListener); }
-keepclassmembers class android.animation.Animator { int getChangingConfigurations(); }
-keepclassmembers class android.widget.Toast { android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int); }
-keepclassmembers class javax.net.ssl.DefaultHostnameVerifier { boolean verifyHostName(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class android.animation.Animator { void appendChangingConfigurations(int); }
-keepclassmembers class android.animation.Animator { android.content.res.ConstantState createConstantState(); }
-keepclassmembers class android.widget.Editor { android.graphics.drawable.Drawable access$2800(android.widget.Editor); }
-keepclassmembers class android.widget.Toast { android.widget.Toast makeText(android.content.Context,int,int); }
-keepclassmembers class android.animation.Animator { void setTarget(java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setViewTypeCount(int); }
-keepclassmembers class org.apache.harmony.security.x509.InhibitAnyPolicy { void <init>(byte[]); }
-keepclassmembers class android.animation.Animator { void reverse(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void markChildrenDirty(); }
-keepclassmembers class android.animation.Animator { android.animation.Animator clone(); }
-keepclassmembers class android.animation.Animator { boolean canReverse(); }
-keepclassmembers class android.widget.Editor { void <clinit>(); }
-keepclassmembers class android.animation.Animator { android.animation.Animator$AnimatorConstantState access$002(android.animation.Animator,android.animation.Animator$AnimatorConstantState); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.animation.Animator { void setAllowRunningAsynchronously(boolean); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <init>(java.lang.String,java.lang.String,byte[]); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress[] android_getaddrinfo(java.lang.String,android.system.StructAddrinfo,int); }
-keepclassmembers class android.widget.Toast { android.app.INotificationManager getService(); }
-keepclassmembers class android.content.IntentFilter$MalformedMimeTypeException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { boolean shouldRecycleViewType(int); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { java.lang.String access$200(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { java.lang.String access$100(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <init>(java.lang.String,java.lang.String,byte[],org.apache.harmony.security.x509.EDIPartyName$1); }
-keepclassmembers class libcore.io.ForwardingOs { void bind(java.io.FileDescriptor,java.net.InetAddress,int); }
-keepclassmembers class org.apache.harmony.security.x509.EDIPartyName { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.x509.InhibitAnyPolicy { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonFlags$1 { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clear(); }
-keepclassmembers class libcore.io.ForwardingOs { void <init>(libcore.io.Os); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void fillActiveViews(int,int); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Dynamic64Structure { void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getActiveView(int); }
-keepclassmembers class com.bumptech.glide.signature.EmptySignature { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { boolean hasNext(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getTransientStateView(int); }
-keepclassmembers class com.fsck.k9.activity.Accounts$PasswordPromptDialog$1 { void <init>(com.fsck.k9.activity.Accounts$PasswordPromptDialog,com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.bumptech.glide.signature.EmptySignature { void <clinit>(); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { java.lang.Object next(); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void <init>(java.util.ArrayList); }
-keepclassmembers class com.bumptech.glide.signature.EmptySignature { com.bumptech.glide.signature.EmptySignature obtain(); }
-keepclassmembers class com.bumptech.glide.signature.EmptySignature { void updateDiskCacheKey(java.security.MessageDigest); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearTransientStateViews(); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$1 { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void remove(); }
-keepclassmembers class android.database.sqlite.SQLiteException { void <init>(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class libcore.io.ForwardingOs { int fcntlLong(java.io.FileDescriptor,int,long); }
-keepclassmembers class libcore.io.ForwardingOs { int fcntlVoid(java.io.FileDescriptor,int); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int,float); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(java.util.Map); }
-keepclassmembers class java.util.LinkedHashMap { void <init>(int,float,boolean); }
-keepclassmembers class java.util.Formatter$FormatToken { void <init>(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Map$Entry eldest(); }
-keepclassmembers class java.util.ArrayList$ArrayListIterator { void <init>(java.util.ArrayList,java.util.ArrayList$1); }
-keepclassmembers class java.util.LinkedHashMap { void addNewEntry(java.lang.Object,java.lang.Object,int,int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$1 { com.fsck.k9.mail.filter.SignSafeOutputStream$State nextState(int); }
-keepclassmembers class java.util.LinkedHashMap { void init(); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean isPrecisionSet(); }
-keepclassmembers class java.util.LinkedHashMap { void addNewEntryForNullKey(java.lang.Object); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean isDefault(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void addScrapView(android.view.View,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View getScrapView(int); }
-keepclassmembers class java.util.Formatter$FormatToken { int getArgIndex(); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getenv(java.lang.String); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String gai_strerror(int); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String getnameinfo(java.net.InetAddress,int); }
-keepclassmembers class java.util.Formatter$FormatToken { int getWidth(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.HashMap$HashMapEntry constructorNewEntry(java.lang.Object,java.lang.Object,int,java.util.HashMap$HashMapEntry); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeSkippedScrap(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setArgIndex(int); }
-keepclassmembers class libcore.io.ForwardingOs { int getpid(); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructPasswd getpwuid(int); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.SocketAddress getsockname(java.io.FileDescriptor); }
-keepclassmembers class java.util.Formatter$FormatToken { int getPrecision(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setPrecision(int); }
-keepclassmembers class java.util.LinkedHashMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean setFlag(int); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress getsockoptInAddr(java.io.FileDescriptor,int,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void scrapActiveViews(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setWidth(int); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructLinger getsockoptLinger(java.io.FileDescriptor,int,int); }
-keepclassmembers class java.util.LinkedHashMap { void preModify(java.util.HashMap$HashMapEntry); }
-keepclassmembers class libcore.io.ForwardingOs { int getsockoptInt(java.io.FileDescriptor,int,int); }
-keepclassmembers class android.support.v4.content.res.ResourcesCompat { android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme); }
-keepclassmembers class java.util.Formatter$FormatToken { void setConversionType(char); }
-keepclassmembers class java.util.LinkedHashMap { void makeTail(java.util.LinkedHashMap$LinkedEntry); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructTimeval getsockoptTimeval(java.io.FileDescriptor,int,int); }
-keepclassmembers class java.util.Formatter$FormatToken { char getDateSuffix(); }
-keepclassmembers class java.util.Formatter$FormatToken { void setDateSuffix(char); }
-keepclassmembers class java.util.LinkedHashMap { void postRemove(java.util.HashMap$HashMapEntry); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void <init>(); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void pruneScrapViews(); }
-keepclassmembers class java.util.Formatter$FormatToken { boolean requireArgument(); }
-keepclassmembers class java.util.Formatter$FormatToken { void checkFlags(java.lang.Object); }
-keepclassmembers class libcore.io.ForwardingOs { int getuid(); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress ioctlInetAddress(java.io.FileDescriptor,int,java.lang.String); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { org.xml.sax.InputSource resolveEntity(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Formatter$FormatToken { char getConversionType(); }
-keepclassmembers class java.util.LinkedHashMap { void clear(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newKeyIterator(); }
-keepclassmembers class com.android.internal.util.Preconditions { float checkArgumentFinite(float,java.lang.String); }
-keepclassmembers class libcore.io.ForwardingOs { int ioctlInt(java.io.FileDescriptor,int,android.util.MutableInt); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newEntryIterator(); }
-keepclassmembers class java.util.LinkedHashMap { java.util.Iterator newValueIterator(); }
-keepclassmembers class libcore.io.ForwardingOs { boolean isatty(java.io.FileDescriptor); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startDocument(); }
-keepclassmembers class libcore.io.ForwardingOs { java.net.InetAddress inet_pton(int,java.lang.String); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void setDocumentLocator(org.xml.sax.Locator); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endDocument(); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endPrefixMapping(java.lang.String); }
-keepclassmembers class java.util.LinkedHashMap { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startPrefixMapping(java.lang.String,java.lang.String); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void endElement(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void characters(char[],int,int); }
-keepclassmembers class libcore.io.ForwardingOs { void listen(java.io.FileDescriptor,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { android.view.View retrieveFromScrap(java.util.ArrayList,int); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void processingInstruction(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$5 { void <init>(com.fsck.k9.ui.crypto.MessageCryptoHelper); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void ignorableWhitespace(char[],int,int); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearScrap(java.util.ArrayList); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void clearAccessibilityFromScrap(android.view.View); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$5 { void onReturn(android.content.Intent,java.lang.Object); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class android.widget.AbsListView$RecycleBin { void setCacheColorHint(int); }
-keepclassmembers class org.xml.sax.helpers.DefaultHandler { void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes); }
-keepclassmembers class libcore.io.ForwardingOs { long mmap(long,long,int,int,java.io.FileDescriptor,long); }
-keepclassmembers class java.util.Locale { java.util.Locale forLanguageTag(java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoHelper$5 { void onReturn(android.content.Intent,java.lang.Void); }
-keepclassmembers class java.util.Locale { void <init>(boolean,java.lang.String,java.lang.String); }
-keepclassmembers class libcore.io.ForwardingOs { java.io.FileDescriptor[] pipe(); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader { com.bumptech.glide.load.data.DataFetcher getLocalUriFetcher(android.content.Context,android.net.Uri); }
-keepclassmembers class org.apache.http.impl.conn.DefaultResponseParser { void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams); }
-keepclassmembers class java.util.Formatter$FormatToken { java.util.UnknownFormatConversionException unknownFormatConversionException(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultResponseParser { org.apache.http.HttpMessage parseHead(org.apache.http.io.SessionInputBuffer); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader { com.bumptech.glide.load.data.DataFetcher getAssetPathFetcher(android.content.Context,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder { void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void doRefreshRemote(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void deleteThreadsSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader { void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder { com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.model.ImageVideoWrapper,int,int); }
-keepclassmembers class org.apache.james.mime4j.dom.address.MailboxList { void <init>(java.util.List,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void downloadLargeMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int,java.util.concurrent.atomic.AtomicInteger,int,com.fsck.k9.mail.FetchProfile); }
-keepclassmembers class java.util.Formatter$FormatToken { void <init>(java.util.Formatter$1); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Map,java.util.Map,boolean); }
-keepclassmembers class org.apache.james.mime4j.dom.address.MailboxList { org.apache.james.mime4j.dom.address.Mailbox get(int); }
-keepclassmembers class org.apache.james.mime4j.dom.address.MailboxList { java.lang.Object get(int); }
-keepclassmembers class java.util.Locale { java.lang.Object clone(); }
-keepclassmembers class java.util.Locale { void <init>(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder { com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference { java.util.ArrayList access$000(org.openintents.openpgp.util.OpenPgpAppPreference); }
-keepclassmembers class com.fsck.k9.mail.MessagingException { void <init>(java.lang.String,boolean); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.MessagingException { void <init>(java.lang.String); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference { java.lang.String access$302(org.openintents.openpgp.util.OpenPgpAppPreference,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.MessagingException { boolean isPermanentFailure(); }
-keepclassmembers class org.apache.james.mime4j.dom.address.MailboxList { int size(); }
-keepclassmembers class com.fsck.k9.mail.MessagingException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.reflect.Proxy$1 { void <init>(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference { boolean isApgInstalled(android.content.Context); }
-keepclassmembers class java.util.Locale { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class java.util.Locale { java.lang.String getCountry(); }
-keepclassmembers class java.util.Locale { java.util.Locale getDefault(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo34 { void addFlaggedCountColumn(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder { java.lang.String getId(); }
-keepclassmembers class java.lang.reflect.Proxy$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayCountry(java.util.Locale); }
-keepclassmembers class com.fsck.k9.mail.MessagingException { void setPermanentFailure(boolean); }
-keepclassmembers class java.security.KeyManagementException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void setTypefaceFromAttrs(java.lang.String,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptByte(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayLanguage(java.util.Locale); }
-keepclassmembers class java.security.KeyManagementException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.widget.TextView { void setRelativeDrawablesIfNeeded(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDomainHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayName(java.util.Locale); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(int,int); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptInt(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptIpMreqn(java.io.FileDescriptor,int,int,int); }
-keepclassmembers class java.security.cert.Certificate { void <init>(java.lang.String); }
-keepclassmembers class java.security.cert.Certificate { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptGroupReq(java.io.FileDescriptor,int,int,android.system.StructGroupReq); }
-keepclassmembers class android.transition.Slide$5 { void <init>(); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptGroupSourceReq(java.io.FileDescriptor,int,int,android.system.StructGroupSourceReq); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { boolean isFinished(); }
-keepclassmembers class java.security.cert.Certificate { int hashCode(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void setRangeSpan(android.text.Editable,int,int); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDomainHandler { boolean isSpecialDomain(java.lang.String); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptLinger(java.io.FileDescriptor,int,int,android.system.StructLinger); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void stop(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeRangeSpan(android.text.Editable); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDomainHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void parse(); }
-keepclassmembers class android.util.SizeF { float getWidth(); }
-keepclassmembers class android.util.SizeF { float getHeight(); }
-keepclassmembers class android.util.SizeF { void <init>(float,float); }
-keepclassmembers class android.util.SizeF { boolean equals(java.lang.Object); }
-keepclassmembers class libcore.io.ForwardingOs { void setsockoptTimeval(java.io.FileDescriptor,int,int,android.system.StructTimeval); }
-keepclassmembers class libcore.io.ForwardingOs { void shutdown(java.io.FileDescriptor,int); }
-keepclassmembers class com.fsck.k9.activity.setup.SpinnerOption { void <init>(java.lang.Object,java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.NetscapeDomainHandler { void <init>(); }
-keepclassmembers class android.util.SizeF { int hashCode(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference { void onDialogClosed(boolean); }
-keepclassmembers class com.fsck.k9.activity.setup.SpinnerOption { void setSpinnerOptionValue(android.widget.Spinner,java.lang.Object); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayVariant(java.util.Locale); }
-keepclassmembers class android.widget.TextView { void setEnabled(boolean); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable { void <init>(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,long,com.handmark.pulltorefresh.library.PullToRefreshBase$OnSmoothScrollFinishedListener); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference { java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface,int); }
-keepclassmembers class libcore.io.ForwardingOs { java.lang.String strerror(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$7 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,java.lang.String,java.lang.Object[],int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference { void onPrepareDialogBuilder(android.app.AlertDialog$Builder); }
-keepclassmembers class com.fsck.k9.activity.setup.SpinnerOption { java.lang.String toString(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable { void run(); }
-keepclassmembers class android.widget.TextView { boolean getDefaultEditable(); }
-keepclassmembers class libcore.io.ForwardingOs { long sysconf(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$7 { void execute(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getText(); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getDefaultMovementMethod(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpAppPreference { void onSetInitialValue(boolean,java.lang.Object); }
-keepclassmembers class libcore.io.ForwardingOs { void tcdrain(java.io.FileDescriptor); }
-keepclassmembers class android.util.SizeF { java.lang.String toString(); }
-keepclassmembers class android.widget.TextView { int length(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { int downloadMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,boolean,boolean); }
-keepclassmembers class android.widget.TextView { int getLineHeight(); }
-keepclassmembers class java.util.Locale { java.lang.String getVariant(); }
-keepclassmembers class java.util.Locale { java.lang.String getScript(); }
-keepclassmembers class android.widget.TextView { android.text.Layout getLayout(); }
-keepclassmembers class android.widget.TextView { android.text.Layout getHintLayout(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.graphics.drawable.AnimationDrawable,android.content.res.Resources); }
-keepclassmembers class android.widget.TextView { android.text.Editable getEditableText(); }
-keepclassmembers class java.util.Locale { java.lang.String getDisplayScript(java.util.Locale); }
-keepclassmembers class libcore.io.ForwardingOs { android.system.StructUtsname uname(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshBase$SmoothScrollRunnable { void stop(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void mutate(); }
-keepclassmembers class java.util.Locale { java.lang.String getLanguage(); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { void <init>(java.net.ResponseCache); }
-keepclassmembers class java.util.Locale { java.lang.String toLanguageTag(); }
-keepclassmembers class java.lang.RuntimeException { void <init>(); }
-keepclassmembers class java.util.Locale { java.lang.String makeLanguageTag(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void addFrame(android.graphics.drawable.Drawable,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.R$styleable { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { com.android.okhttp.Response get(com.android.okhttp.Request); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.Throwable); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { boolean maybeRemove(com.android.okhttp.Request); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$102(android.graphics.drawable.AnimationDrawable$AnimationState,boolean); }
-keepclassmembers class android.widget.TextView { android.text.method.KeyListener getKeyListener(); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { void update(com.android.okhttp.Response,com.android.okhttp.Response); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void access$200(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { void trackConditionalCacheHit(); }
-keepclassmembers class android.widget.AdapterView$AdapterContextMenuInfo { void <init>(android.view.View,int,long); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { void trackResponse(com.android.okhttp.ResponseSource); }
-keepclassmembers class android.widget.TextView { void setKeyListener(android.text.method.KeyListener); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { void growArray(int,int); }
-keepclassmembers class java.lang.RuntimeException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Formatter$CachedDecimalFormat { void <init>(); }
-keepclassmembers class java.util.Formatter$CachedDecimalFormat { libcore.icu.NativeDecimalFormat update(libcore.icu.LocaleData,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { java.net.CacheResponse getJavaCachedResponse(com.android.okhttp.Request); }
-keepclassmembers class android.os.Build$VERSION { void <clinit>(); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void removeSpansAt(android.text.Editable,int,java.lang.Object[]); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorStringLoader$Factory { void <init>(); }
-keepclassmembers class android.widget.TextView { void setKeyListenerOnly(android.text.method.KeyListener); }
-keepclassmembers class com.fsck.k9.activity.ChooseIdentity { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.ResponseCacheAdapter { java.net.CacheRequest put(com.android.okhttp.Response); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorStringLoader$Factory { void teardown(); }
-keepclassmembers class com.fsck.k9.activity.ChooseIdentity { void onCreate(android.os.Bundle); }
-keepclassmembers class android.animation.ArgbEvaluator { void <init>(); }
-keepclassmembers class android.widget.TextView { android.text.method.MovementMethod getMovementMethod(); }
-keepclassmembers class android.animation.ArgbEvaluator { java.lang.Object evaluate(float,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.TextView { void setMovementMethod(android.text.method.MovementMethod); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorStringLoader$Factory { com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory); }
-keepclassmembers class android.widget.SpellChecker$SpellParser { void <init>(android.widget.SpellChecker,android.widget.SpellChecker$1); }
-keepclassmembers class com.fsck.k9.activity.ChooseIdentity { void onResume(); }
-keepclassmembers class com.fsck.k9.activity.ChooseIdentity { void refreshView(); }
-keepclassmembers class android.widget.TextView { void fixFocusableAndClickableSettings(); }
-keepclassmembers class android.app.LoaderManagerImpl { void <init>(java.lang.String,android.app.Activity,boolean); }
-keepclassmembers class android.animation.ArgbEvaluator { android.animation.ArgbEvaluator getInstance(); }
-keepclassmembers class java.util.Locale { java.lang.String[] splitIllformedVariant(java.lang.String); }
-keepclassmembers class android.widget.TextView { android.text.method.TransformationMethod getTransformationMethod(); }
-keepclassmembers class android.app.LoaderManagerImpl { void updateActivity(android.app.Activity); }
-keepclassmembers class android.app.LoaderManagerImpl { android.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks); }
-keepclassmembers class android.view.ViewDebug { java.lang.String formatIntToHexString(int); }
-keepclassmembers class android.animation.ArgbEvaluator { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AuthTypeAdapter { void <init>(android.content.Context,int,com.fsck.k9.activity.setup.AuthTypeHolder[]); }
-keepclassmembers class android.app.LoaderManagerImpl { android.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks); }
-keepclassmembers class com.fsck.k9.activity.setup.AuthTypeAdapter { com.fsck.k9.activity.setup.AuthTypeAdapter get(android.content.Context); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { void <clinit>(); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { com.fsck.k9.cache.EmailProviderCache getCache(java.lang.String,android.content.Context); }
-keepclassmembers class android.app.LoaderManagerImpl { void installLoader(android.app.LoaderManagerImpl$LoaderInfo); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingTop(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { int[] access$000(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable$AnimationState { boolean access$100(android.graphics.drawable.AnimationDrawable$AnimationState); }
-keepclassmembers class java.util.Locale { java.lang.String concatenateRange(java.lang.String[],int,int); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingBottom(); }
-keepclassmembers class com.fsck.k9.activity.setup.AuthTypeAdapter { void useInsecureText(boolean); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingLeft(); }
-keepclassmembers class com.fsck.k9.activity.ChooseIdentity { void setupClickListeners(); }
-keepclassmembers class android.widget.TextView { void setTransformationMethod(android.text.method.TransformationMethod); }
-keepclassmembers class android.app.LoaderManagerImpl { android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks); }
-keepclassmembers class com.fsck.k9.activity.setup.AuthTypeAdapter { int getAuthPosition(com.fsck.k9.mail.AuthType); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { java.lang.String getValueForMessage(java.lang.Long,java.lang.String); }
-keepclassmembers class java.util.WeakHashMap$1$1 { java.util.Map$Entry get(java.util.Map$Entry); }
-keepclassmembers class android.widget.TextView { int getCompoundPaddingRight(); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { void notifyChange(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponse { void <init>(com.fsck.k9.mail.store.imap.ImapResponseCallback,boolean,java.lang.String); }
-keepclassmembers class java.util.WeakHashMap$1$1 { java.lang.Object get(java.util.Map$Entry); }
-keepclassmembers class java.util.WeakHashMap$1$1 { void <init>(java.util.WeakHashMap$1); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponse { com.fsck.k9.mail.store.imap.ImapResponse newContinuationRequest(com.fsck.k9.mail.store.imap.ImapResponseCallback); }
-keepclassmembers class java.util.Locale { int hashCode(); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { java.lang.String getValueForThread(java.lang.Long,java.lang.String); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingTop(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponse { com.fsck.k9.mail.store.imap.ImapResponse newTaggedResponse(com.fsck.k9.mail.store.imap.ImapResponseCallback,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponse { com.fsck.k9.mail.store.imap.ImapResponse newUntaggedResponse(com.fsck.k9.mail.store.imap.ImapResponseCallback); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void <init>(); }
-keepclassmembers class java.util.Locale { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponse { com.fsck.k9.mail.store.imap.ImapResponseCallback getCallback(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponse { java.lang.String getTag(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void <init>(org.xml.sax.Attributes); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { void hideMessages(java.util.List); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponse { boolean isContinuationRequested(); }
-keepclassmembers class android.app.LoaderManagerImpl { android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager$LoaderCallbacks); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { int getLength(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponse { java.lang.String toString(); }
-keepclassmembers class android.widget.TextView { int getExtendedPaddingBottom(); }
-keepclassmembers class java.util.Locale { java.lang.String toNewString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getURI(int); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { boolean isMessageHidden(java.lang.Long,long); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getLocalName(int); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { void removeValueForMessages(java.util.List,java.lang.String); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingLeft(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getQName(int); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class java.lang.IllegalMonitorStateException { void <init>(); }
-keepclassmembers class java.lang.IllegalMonitorStateException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void downloadSmallMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int,java.util.concurrent.atomic.AtomicInteger,int,com.fsck.k9.mail.FetchProfile); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingTop(); }
-keepclassmembers class android.view.ViewGroup { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponse { boolean isTagged(); }
-keepclassmembers class com.fsck.k9.mail.internet.MimeMessage$1 { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingRight(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getType(int); }
-keepclassmembers class android.view.ViewGroup { boolean debugDraw(); }
-keepclassmembers class android.widget.TextView { int getTotalPaddingBottom(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { int getIndex(java.lang.String); }
-keepclassmembers class android.view.ViewOutlineProvider { void <clinit>(); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { void setValueForMessages(java.util.List,java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { void removeValueForThreads(java.util.List,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.MimeIOException { void <init>(org.apache.james.mime4j.MimeException); }
-keepclassmembers class org.apache.james.mime4j.MimeIOException { java.lang.Throwable getCause(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.ViewGroup { void initFromAttributes(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class org.apache.james.mime4j.MimeIOException { org.apache.james.mime4j.MimeException getCause(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void evaluateMessageForDownload(com.fsck.k9.mail.Message,java.lang.String,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Folder,com.fsck.k9.Account,java.util.List,java.util.List,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getValue(int); }
-keepclassmembers class android.view.inputmethod.InputMethodManager { android.view.inputmethod.InputMethodManager peekInstance(); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { void setValueForThreads(java.util.List,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.app.LoaderManagerImpl { void destroyLoader(int); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCache { void unhideMessages(java.util.List); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { java.lang.String getValue(java.lang.String,java.lang.String); }
-keepclassmembers class de.cketti.safecontentresolver.SafeContentResolverCompat { de.cketti.safecontentresolver.SafeContentResolver newInstance(android.content.Context); }
-keepclassmembers class android.app.LoaderManagerImpl { android.content.Loader getLoader(int); }
-keepclassmembers class android.view.ViewGroup { int getDescendantFocusability(); }
-keepclassmembers class java.util.Locale { java.lang.String serializeExtensions(java.util.Map); }
-keepclassmembers class android.view.ViewGroup { void handleFocusGainInternal(int,android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { void initViewGroup(); }
-keepclassmembers class android.view.ViewGroup { void setDescendantFocusability(int); }
-keepclassmembers class android.view.ViewGroup { void focusableViewAvailable(android.view.View); }
-keepclassmembers class android.app.LoaderManagerImpl { void doStart(); }
-keepclassmembers class android.view.ViewGroup { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.view.ViewOutlineProvider { void <init>(); }
-keepclassmembers class android.view.ViewGroup { boolean showContextMenuForChild(android.view.View); }
-keepclassmembers class android.app.LoaderManagerImpl { void doRetain(); }
-keepclassmembers class android.view.ViewGroup { android.view.View focusSearch(android.view.View,int); }
-keepclassmembers class java.util.EnumMap { void <init>(java.lang.Class); }
-keepclassmembers class android.view.ViewGroup { boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.LoaderManagerImpl { void doStop(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void clear(); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$2 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class java.util.Locale { boolean isAsciiAlphaNum(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup { android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback); }
-keepclassmembers class android.view.ViewGroup { boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void addAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <init>(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int get(); }
-keepclassmembers class android.app.LoaderManagerImpl { void doReportNextStart(); }
-keepclassmembers class java.util.Locale { boolean isValidBcp47Alpha(java.lang.String,int,int); }
-keepclassmembers class java.util.Locale { boolean isUnM49AreaCode(java.lang.String); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void set(int); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.view.ViewGroup { void childHasTransientStateChanged(android.view.View,boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void setAttributes(org.xml.sax.Attributes); }
-keepclassmembers class java.util.Locale { boolean isValidBcp47Alphanum(java.lang.String,int,int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { boolean compareAndSet(int,int); }
-keepclassmembers class java.util.Locale { java.lang.String titleCaseAsciiWord(java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void fetchUnsyncedMessages(com.fsck.k9.Account,com.fsck.k9.mail.Folder,java.util.List,java.util.List,java.util.List,java.util.concurrent.atomic.AtomicInteger,int,com.fsck.k9.mail.FetchProfile); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndIncrement(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void setAttribute(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndDecrement(); }
-keepclassmembers class android.view.ViewGroup { boolean hasTransientState(); }
-keepclassmembers class android.app.LoaderManagerImpl { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int incrementAndGet(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { com.fsck.k9.controller.MessagingController getInstance(android.content.Context); }
-keepclassmembers class java.util.EnumMap { java.util.Set entrySet(); }
-keepclassmembers class android.view.ViewGroup { void clearChildFocus(android.view.View); }
-keepclassmembers class java.util.EnumMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class android.app.LoaderManagerImpl { void doDestroy(); }
-keepclassmembers class java.util.EnumMap { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Locale { void addUnicodeExtensionToExtensionsMap(java.util.Set,java.util.Map,java.util.Map); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int addAndGet(int); }
-keepclassmembers class android.app.LoaderManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.lang.String getRootCauseMessage(java.lang.Throwable); }
-keepclassmembers class android.view.ViewGroup { void clearFocus(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int getAndAdd(int); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { void unFocus(android.view.View); }
-keepclassmembers class android.app.LoaderManagerImpl { void doReportStart(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { long longValue(); }
-keepclassmembers class android.view.ViewGroup { android.view.View getFocusedChild(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int decrementAndGet(); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void removeAttribute(int); }
-keepclassmembers class android.view.ViewGroup { android.view.View getDeepestFocusedChild(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { double doubleValue(); }
-keepclassmembers class java.util.EnumMap { java.util.Set keySet(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.util.Map groupMessagesByAccountAndFolder(java.util.List); }
-keepclassmembers class java.util.EnumMap { java.lang.Object put(java.lang.Enum,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocus(); }
-keepclassmembers class java.util.EnumMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.lang.String[] getUidsFromMessages(java.util.List); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFocus(); }
-keepclassmembers class java.util.concurrent.atomic.AtomicInteger { int intValue(); }
-keepclassmembers class org.apache.http.cookie.MalformedCookieException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void handleSendFailure(com.fsck.k9.Account,com.fsck.k9.mail.Store,com.fsck.k9.mail.Folder,com.fsck.k9.mail.Message,java.lang.Exception,boolean); }
-keepclassmembers class android.view.ViewGroup { void addFocusables(java.util.ArrayList,int,int); }
-keepclassmembers class java.util.EnumMap { int size(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean isTrashLocalOnly(com.fsck.k9.Account); }
-keepclassmembers class java.util.Locale { java.lang.String joinBcp47Subtags(java.util.List); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean loadMessageRemoteSynchronous(com.fsck.k9.Account,java.lang.String,java.lang.String,com.fsck.k9.controller.MessagingListener,boolean); }
-keepclassmembers class android.app.LoaderManagerImpl { boolean hasRunningLoaders(); }
-keepclassmembers class java.util.EnumMap { boolean isValidKeyType(java.lang.Object); }
-keepclassmembers class android.app.UiModeManager { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void setTouchscreenBlocksFocus(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean getTouchscreenBlocksFocus(); }
-keepclassmembers class android.view.ViewGroup { boolean hasFocusable(); }
-keepclassmembers class android.app.UiModeManager { int getCurrentModeType(); }
-keepclassmembers class android.app.LoaderManagerImpl { void <clinit>(); }
-keepclassmembers class java.util.EnumMap { void initialization(java.lang.Class); }
-keepclassmembers class com.android.okio.RealBufferedSource { void <init>(com.android.okio.Source,com.android.okio.OkBuffer); }
-keepclassmembers class android.view.ViewGroup { boolean shouldBlockFocusForTouchscreen(); }
-keepclassmembers class java.util.Locale { java.lang.String adjustLanguageCode(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void ensureCapacity(int); }
-keepclassmembers class java.util.Locale { java.lang.String convertGrandfatheredTag(java.lang.String); }
-keepclassmembers class com.android.okio.RealBufferedSource { void <init>(com.android.okio.Source); }
-keepclassmembers class org.ccil.cowan.tagsoup.AttributesImpl { void badIndex(int); }
-keepclassmembers class java.util.Locale { void extractVariantSubtags(java.lang.String[],int,int,java.util.List); }
-keepclassmembers class android.app.UiModeManager { void <clinit>(); }
-keepclassmembers class com.android.okio.RealBufferedSource { com.android.okio.OkBuffer buffer(); }
-keepclassmembers class com.android.okio.RealBufferedSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$4 { void <init>(com.fsck.k9.ui.messageview.MessageContainerView,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05 { java.util.Map nameToFirstIndex(); }
-keepclassmembers class java.util.EnumMap { java.lang.Object putImpl(java.lang.Enum,java.lang.Object); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$4 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class java.util.Locale { int extractExtensions(java.lang.String[],int,int,java.util.Map); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05 { com.android.okhttp.internal.spdy.Header[] access$000(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05 { java.util.Map access$100(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05 { void <clinit>(); }
-keepclassmembers class java.util.EnumMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.okio.RealBufferedSource { boolean exhausted(); }
-keepclassmembers class com.android.okio.RealBufferedSource { void require(long); }
-keepclassmembers class org.apache.http.impl.client.ClientParamsStack { void <init>(org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams,org.apache.http.params.HttpParams); }
-keepclassmembers class com.android.okio.RealBufferedSource { byte readByte(); }
-keepclassmembers class com.android.okio.RealBufferedSource { com.android.okio.ByteString readByteString(long); }
-keepclassmembers class android.view.ViewGroup { void onChildVisibilityChanged(android.view.View,int,int); }
-keepclassmembers class java.util.Locale { void parseUnicodeExtension(java.lang.String[],java.util.Map,java.util.Set); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void loadSearchResultsSynchronous(java.util.List,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Folder,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.android.okio.RealBufferedSource { java.lang.String readUtf8LineStrict(); }
-keepclassmembers class com.android.okio.RealBufferedSource { short readShort(); }
-keepclassmembers class android.view.ViewGroup { void recomputeViewAttributes(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void dispatchVisibilityChanged(android.view.View,int); }
-keepclassmembers class com.android.okio.RealBufferedSource { short readShortLe(); }
-keepclassmembers class com.android.okio.RealBufferedSource { int readInt(); }
-keepclassmembers class android.view.ViewDebug { java.lang.Object resolveId(android.content.Context,int); }
-keepclassmembers class com.android.okio.RealBufferedSource { int readIntLe(); }
-keepclassmembers class android.view.ViewGroup { android.graphics.PointF getLocalPoint(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean isMessageSuppressed(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.android.okio.RealBufferedSource { void skip(long); }
-keepclassmembers class org.apache.http.impl.client.ClientParamsStack { java.lang.Object getParameter(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchDragEvent(android.view.DragEvent); }
-keepclassmembers class java.util.Locale { java.util.Locale forLanguageTag(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void markMessageAsReadOnView(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.android.okio.RealBufferedSource { long indexOf(byte); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean messagesPendingSend(com.fsck.k9.Account); }
-keepclassmembers class com.android.okio.RealBufferedSource { java.io.InputStream inputStream(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheFactory { void <init>(com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean modeMismatch(com.fsck.k9.Account$FolderMode,com.fsck.k9.mail.Folder$FolderClass); }
-keepclassmembers class com.android.okio.RealBufferedSource { void close(); }
-keepclassmembers class com.android.okio.RealBufferedSource { java.lang.String toString(); }
-keepclassmembers class com.android.okio.RealBufferedSource { boolean access$000(com.android.okio.RealBufferedSource); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.DiskLruCacheFactory { com.bumptech.glide.load.engine.cache.DiskCache build(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void moveMessageToDraftsFolder(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mail.Store,com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void moveOrCopyMessageSynchronous(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String,boolean); }
-keepclassmembers class java.util.Locale { boolean access$200(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { android.view.View findFrontmostDroppableChildAt(float,float,android.graphics.PointF); }
-keepclassmembers class com.fsck.k9.service.MailService$1 { void <init>(com.fsck.k9.service.MailService,boolean,boolean); }
-keepclassmembers class java.util.Locale { boolean access$300(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean notifyChildOfDrag(android.view.View); }
-keepclassmembers class java.util.Locale { boolean access$000(java.lang.String,int,int); }
-keepclassmembers class com.fsck.k9.service.MailService$1 { void run(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$6 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.AccountStats,com.fsck.k9.controller.MessagingListener,com.fsck.k9.Account); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler { boolean domainMatch(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.Locale { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$1 { void <init>(com.fsck.k9.activity.setup.AccountSetupCheckSettings,com.fsck.k9.mail.CertificateValidationException,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$6 { void messageFinished(com.fsck.k9.mail.Message,int,int); }
-keepclassmembers class java.util.Locale { java.lang.String access$400(java.lang.String); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { java.lang.Thread getExclusiveOwnerThread(); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractOwnableSynchronizer { void setExclusiveOwnerThread(java.lang.Thread); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$6 { void messageFinished(com.fsck.k9.mailstore.LocalMessage,int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$1 { void run(); }
-keepclassmembers class android.widget.TextView { void setCompoundDrawablePadding(int); }
-keepclassmembers class android.util.TimeUtils { int printField(char[],int,char,int,boolean,int); }
-keepclassmembers class com.fsck.k9.activity.loader.AttachmentContentLoader { void <init>(android.content.Context,com.fsck.k9.activity.misc.Attachment); }
-keepclassmembers class com.fsck.k9.activity.loader.AttachmentContentLoader { com.fsck.k9.activity.misc.Attachment loadInBackground(); }
-keepclassmembers class android.widget.TextView { void setTextAppearance(android.content.Context,int); }
-keepclassmembers class android.view.ViewDebug { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$6 { void messagesFinished(int); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$4 { void <init>(com.fsck.k9.provider.EmailProvider,java.lang.StringBuilder,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter$RecipientTokenHolder { void <init>(android.view.View); }
-keepclassmembers class android.util.TimeUtils { int accumField(int,int,boolean,int); }
-keepclassmembers class android.app.RemoteInput$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11$2 { void <init>(com.fsck.k9.activity.MessageCompose$11); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$4 { android.database.Cursor doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11$2 { void run(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$4 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.activity.loader.AttachmentContentLoader { java.lang.Object loadInBackground(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.LruResourceCache { int getSize(com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class android.util.TimeUtils { int formatDurationLocked(long,int); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.LruResourceCache { int getSize(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchHoverEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.mail.FetchProfile$Item { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.LruResourceCache { void onItemEvicted(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class org.apache.james.mime4j.io.LineNumberInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.activity.loader.AttachmentContentLoader { void onStartLoading(); }
-keepclassmembers class com.fsck.k9.mail.FetchProfile$Item { void <init>(java.lang.String,int); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.LruResourceCache { void <init>(int); }
-keepclassmembers class org.apache.james.mime4j.io.LineNumberInputStream { int getLineNumber(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.LruResourceCache { void onItemEvicted(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.LruResourceCache { com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource); }
-keepclassmembers class org.apache.james.mime4j.io.LineNumberInputStream { int read(byte[],int,int); }
-keepclassmembers class org.apache.james.mime4j.io.LineNumberInputStream { int read(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.LruResourceCache { com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key); }
-keepclassmembers class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.LruResourceCache { void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.LruResourceCache { void trimMemory(int); }
-keepclassmembers class android.widget.TextView { void setTextSize(int,float); }
-keepclassmembers class android.widget.TextView { float getTextSize(); }
-keepclassmembers class com.fsck.k9.view.K9WebViewClient$LollipopWebViewClient { void <init>(com.fsck.k9.mailstore.AttachmentResolver); }
-keepclassmembers class android.util.TimeUtils { void formatDuration(long,java.lang.StringBuilder); }
-keepclassmembers class android.util.TimeUtils { void formatDuration(long,java.io.PrintWriter,int); }
-keepclassmembers class android.widget.TextView { void setRawTextSize(float); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync { void <init>(); }
-keepclassmembers class android.widget.TextView { void setTextScaleX(float); }
-keepclassmembers class com.android.okhttp.Request { void <init>(com.android.okhttp.Request$Builder); }
-keepclassmembers class android.util.TimeUtils { void formatDuration(long,java.io.PrintWriter); }
-keepclassmembers class android.widget.TextView { void setTypeface(android.graphics.Typeface); }
-keepclassmembers class android.util.TimeUtils { void formatDuration(long,long,java.io.PrintWriter); }
-keepclassmembers class android.widget.TextView { android.graphics.Typeface getTypeface(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync { boolean writerShouldBlock(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync { boolean readerShouldBlock(); }
-keepclassmembers class android.widget.TextView { void setElegantTextHeight(boolean); }
-keepclassmembers class com.android.okhttp.Request { java.net.URL url(); }
-keepclassmembers class android.widget.TextView { void setFontFeatureSettings(java.lang.String); }
-keepclassmembers class com.android.okhttp.Request { java.net.URI uri(); }
-keepclassmembers class android.widget.TextView { void setLetterSpacing(float); }
-keepclassmembers class com.android.okhttp.Request { java.lang.String method(); }
-keepclassmembers class android.util.TimeUtils { void <clinit>(); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Headers headers(); }
-keepclassmembers class android.widget.TextView { void setTextColor(int); }
-keepclassmembers class android.widget.TextView { void setTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.TextView { void setHighlightColor(int); }
-keepclassmembers class com.android.okhttp.Request { java.lang.String header(java.lang.String); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Request$Builder newBuilder(); }
-keepclassmembers class android.widget.TextView { boolean getShowSoftInputOnFocus(); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Headers getHeaders(); }
-keepclassmembers class com.android.okhttp.Request { java.lang.String getUserAgent(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void <init>(int); }
-keepclassmembers class android.widget.TextView { void setShadowLayer(float,float,float,int); }
-keepclassmembers class android.widget.TextView { int getCurrentTextColor(); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20$Builder { void <init>(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean,boolean,boolean,int,java.lang.CharSequence,boolean,java.util.ArrayList,android.os.Bundle,java.lang.String,boolean,java.lang.String); }
-keepclassmembers class com.android.okhttp.Request { java.lang.String getProxyAuthorization(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onReadFromDisk(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$27 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$27 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onNetwork(); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Request$ParsedHeaders parsedHeaders(); }
-keepclassmembers class com.fsck.k9.activity.Search { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.Search { void <clinit>(); }
-keepclassmembers class android.widget.TextView { float getShadowRadius(); }
-keepclassmembers class com.fsck.k9.activity.Search { boolean isActive(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { int getPolicyMask(); }
-keepclassmembers class android.widget.TextView { float getShadowDy(); }
-keepclassmembers class android.widget.TextView { float getShadowDx(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void onWriteToDisk(); }
-keepclassmembers class com.fsck.k9.activity.Search { void setActive(boolean); }
-keepclassmembers class android.widget.TextView { int getShadowColor(); }
-keepclassmembers class com.fsck.k9.activity.Search { void onStart(); }
-keepclassmembers class android.view.ViewGroup { void exitHoverTargets(); }
-keepclassmembers class com.fsck.k9.activity.Search { void onStop(); }
-keepclassmembers class com.android.okhttp.Request { boolean isHttps(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void setPolicyMask(int); }
-keepclassmembers class com.android.okhttp.Request { java.net.URL access$800(com.android.okhttp.Request); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void startHandlingViolationException(dalvik.system.BlockGuard$BlockGuardPolicyException); }
-keepclassmembers class com.android.okhttp.Request { java.lang.String access$900(com.android.okhttp.Request); }
-keepclassmembers class android.view.ViewGroup { void cancelHoverTarget(android.view.View); }
-keepclassmembers class com.android.okhttp.Request { java.lang.Object access$1100(com.android.okhttp.Request); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Headers access$1200(com.android.okhttp.Request); }
-keepclassmembers class com.android.okhttp.Request { void <init>(com.android.okhttp.Request$Builder,com.android.okhttp.Request$1); }
-keepclassmembers class android.widget.TextView { void setHintTextColor(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.TextView { android.content.res.ColorStateList getHintTextColors(); }
-keepclassmembers class android.view.ViewGroup { boolean hasHoveredChild(); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.CacheControl cacheControl(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.view.ViewGroup { void addChildrenForAccessibility(java.util.ArrayList); }
-keepclassmembers class android.widget.TextView { android.text.TextPaint getPaint(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolationWithTimingAttempt(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class com.android.okhttp.Request { com.android.okhttp.Request$Body access$1000(com.android.okhttp.Request); }
-keepclassmembers class android.widget.TextView { void setLinkTextColor(android.content.res.ColorStateList); }
-keepclassmembers class java.lang.Object { void <init>(); }
-keepclassmembers class android.os.StrictMode$AndroidBlockGuardPolicy { void handleViolation(android.os.StrictMode$ViolationInfo); }
-keepclassmembers class android.widget.TextView { void setGravity(int); }
-keepclassmembers class java.lang.Object { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptHoverEvent(android.view.MotionEvent); }
-keepclassmembers class com.bumptech.glide.manager.ApplicationLifecycle { void addListener(com.bumptech.glide.manager.LifecycleListener); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamUriLoader { void <init>(android.content.Context); }
-keepclassmembers class android.view.ViewGroup { android.view.MotionEvent obtainMotionEventNoHistoryOrSelf(android.view.MotionEvent); }
-keepclassmembers class java.lang.Object { int hashCode(); }
-keepclassmembers class android.widget.RemoteViews$TextViewSizeAction { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamUriLoader { void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericPointerEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.Object { void notify(); }
-keepclassmembers class org.apache.harmony.security.x509.SubjectPublicKeyInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class java.lang.Object { java.lang.Object internalClone(); }
-keepclassmembers class android.widget.TextView { int getGravity(); }
-keepclassmembers class android.widget.RemoteViews$TextViewSizeAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void notifySynchronizeMailboxFailed(com.fsck.k9.Account,com.fsck.k9.mail.Folder,java.lang.Exception); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamUriLoader { com.bumptech.glide.load.data.DataFetcher getAssetPathFetcher(android.content.Context,java.lang.String); }
-keepclassmembers class android.widget.TextView { void setHorizontallyScrolling(boolean); }
-keepclassmembers class java.lang.Object { void wait(); }
-keepclassmembers class android.widget.RemoteViews$TextViewSizeAction { void <init>(android.widget.RemoteViews,int,int,float); }
-keepclassmembers class com.bumptech.glide.manager.ApplicationLifecycle { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean getHorizontallyScrolling(); }
-keepclassmembers class java.lang.Object { void wait(long,int); }
-keepclassmembers class java.lang.Object { void notifyAll(); }
-keepclassmembers class java.util.AbstractList$SubAbstractList$SubAbstractListIterator { void <init>(java.util.ListIterator,java.util.AbstractList$SubAbstractList,int,int); }
-keepclassmembers class com.bumptech.glide.load.model.stream.StreamUriLoader { com.bumptech.glide.load.data.DataFetcher getLocalUriFetcher(android.content.Context,android.net.Uri); }
-keepclassmembers class com.getkeepsafe.relinker.ApkLibraryInstaller { void <init>(); }
-keepclassmembers class com.getkeepsafe.relinker.ApkLibraryInstaller { void closeSilently(java.io.Closeable); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void processPendingAppend(com.fsck.k9.mailstore.LocalStore$PendingCommand,com.fsck.k9.Account); }
-keepclassmembers class android.widget.TextView { void setMinHeight(int); }
-keepclassmembers class com.getkeepsafe.relinker.ApkLibraryInstaller { long copy(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class android.widget.TextView { void setMaxLines(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.AbstractList$SubAbstractList$SubAbstractListIterator { boolean hasNext(); }
-keepclassmembers class com.getkeepsafe.relinker.ApkLibraryInstaller { void installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance); }
-keepclassmembers class android.widget.TextView { void setMaxHeight(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Sequence { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.AbstractList$SubAbstractList$SubAbstractListIterator { java.lang.Object next(); }
-keepclassmembers class android.widget.TextView { void setLines(int); }
-keepclassmembers class android.text.NoCopySpan$Concrete { void <init>(); }
-keepclassmembers class android.widget.TextView { void setHeight(int); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchGenericFocusedEvent(android.view.MotionEvent); }
-keepclassmembers class android.widget.TextView { void setMinEms(int); }
-keepclassmembers class java.util.AbstractList$SubAbstractList$SubAbstractListIterator { int nextIndex(); }
-keepclassmembers class android.widget.TextView { void setMinWidth(int); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View); }
-keepclassmembers class android.widget.TextView { void setMaxEms(int); }
-keepclassmembers class java.util.AbstractList$SubAbstractList$SubAbstractListIterator { int previousIndex(); }
-keepclassmembers class android.widget.TextView { void setMaxWidth(int); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String getWebViewPackageName(); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.WebViewFactoryProvider getProvider(); }
-keepclassmembers class android.widget.TextView { void setEms(int); }
-keepclassmembers class java.util.AbstractList$SubAbstractList$SubAbstractListIterator { void set(java.lang.Object); }
-keepclassmembers class android.widget.TextView { void setWidth(int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$ComparatorChain { void <init>(java.util.List); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void <init>(android.view.Window,java.util.ArrayList,android.app.SharedElementCallback,boolean); }
-keepclassmembers class java.lang.InternalError { void <init>(); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class java.lang.InternalError { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$ComparatorChain { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void <init>(android.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,android.app.Fragment); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void <init>(org.apache.commons.logging.Log); }
-keepclassmembers class android.app.FragmentManagerImpl$5 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class com.github.amlcurran.showcaseview.NewShowcaseDrawer { void <init>(android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void wire(java.lang.String,java.io.InputStream); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void viewsReady(android.util.ArrayMap); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDataLoadProvider { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat); }
-keepclassmembers class com.github.amlcurran.showcaseview.NewShowcaseDrawer { void drawShowcase(android.graphics.Bitmap,float,float,float); }
-keepclassmembers class android.widget.TextView { void updateTextColors(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { android.graphics.PorterDuff$Mode[] values(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { android.graphics.PorterDuff$Mode valueOf(java.lang.String); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setSharedElements(android.util.ArrayMap); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.github.amlcurran.showcaseview.NewShowcaseDrawer { float getBlockedRadius(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDataLoadProvider { com.bumptech.glide.load.ResourceDecoder getCacheDecoder(); }
-keepclassmembers class com.github.amlcurran.showcaseview.NewShowcaseDrawer { int getShowcaseHeight(); }
-keepclassmembers class android.graphics.PorterDuff$Mode { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDataLoadProvider { com.bumptech.glide.load.ResourceEncoder getEncoder(); }
-keepclassmembers class com.github.amlcurran.showcaseview.NewShowcaseDrawer { int getShowcaseWidth(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDataLoadProvider { com.bumptech.glide.load.ResourceDecoder getSourceDecoder(); }
-keepclassmembers class com.github.amlcurran.showcaseview.NewShowcaseDrawer { void setShowcaseColour(int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDataLoadProvider { com.bumptech.glide.load.Encoder getSourceEncoder(); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$SettingsUpgraderV12 { void <init>(); }
-keepclassmembers class android.widget.TextView { void drawableStateChanged(); }
-keepclassmembers class com.fsck.k9.preferences.GlobalSettings$SettingsUpgraderV12 { java.util.Set upgrade(java.util.Map); }
-keepclassmembers class org.apache.http.impl.conn.Wire { boolean enabled(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { boolean isNested(android.view.View,android.util.ArrayMap); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void stripOffscreenViews(); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void output(byte[],int,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.view.Window getWindow(); }
-keepclassmembers class android.widget.TextView { void drawableHotspotChanged(float,float); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.Class getFactoryClass(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.view.ViewGroup getDecor(); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void input(byte[],int,int); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setEpicenter(); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void output(byte[]); }
-keepclassmembers class android.widget.TextView { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setEpicenter(android.view.View); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void input(byte[]); }
-keepclassmembers class android.database.sqlite.SQLiteStatement { void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$34$1 { void <init>(com.fsck.k9.controller.MessagingController$34); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void input(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$34$1 { void run(); }
-keepclassmembers class android.database.sqlite.SQLiteStatement { int executeUpdateDelete(); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void output(java.lang.String); }
-keepclassmembers class android.widget.TextView { void removeMisspelledSpans(android.text.Spannable); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20$Builder { void addAction(android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.transition.Transition setTargets(android.transition.Transition,boolean); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20$Builder { android.app.Notification build(); }
-keepclassmembers class org.apache.http.impl.conn.Wire { void input(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteStatement { long executeInsert(); }
-keepclassmembers class android.support.v4.app.NotificationCompatApi20$Builder { android.app.Notification$Builder getBuilder(); }
-keepclassmembers class android.widget.TextView { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { boolean equals(java.lang.Object); }
-keepclassmembers class android.database.sqlite.SQLiteStatement { long simpleQueryForLong(); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { int hashCode(); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { void <init>(java.lang.reflect.GenericDeclaration,java.lang.String,libcore.reflect.ListOfTypes); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.transition.Transition configureTransition(android.transition.Transition,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void processPendingCommands(com.fsck.k9.Account); }
-keepclassmembers class java.util.TreeSet { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.MimeVersionFieldImpl$1 { void <init>(); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.Collection); }
-keepclassmembers class org.apache.james.mime4j.field.MimeVersionFieldImpl$1 { org.apache.james.mime4j.dom.field.MimeVersionField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void processPendingCommandsSynchronous(com.fsck.k9.Account); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { void <init>(java.lang.reflect.GenericDeclaration,java.lang.String); }
-keepclassmembers class java.util.TreeSet { void <init>(java.util.Comparator); }
-keepclassmembers class android.database.sqlite.SQLiteStatement { java.lang.String toString(); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { java.lang.reflect.TypeVariable findFormalVar(java.lang.reflect.GenericDeclaration,java.lang.String); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { android.util.ArrayMap mapSharedElements(java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class org.apache.james.mime4j.field.MimeVersionFieldImpl$1 { org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.http.impl.cookie.DateParseException { void <init>(java.lang.String); }
-keepclassmembers class java.util.TreeSet { boolean add(java.lang.Object); }
-keepclassmembers class android.graphics.Bitmap$1 { void <init>(); }
-keepclassmembers class android.graphics.Bitmap$1 { android.graphics.Bitmap createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence); }
-keepclassmembers class java.util.TreeSet { boolean addAll(java.util.Collection); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { java.lang.reflect.GenericDeclaration nextLayer(java.lang.reflect.GenericDeclaration); }
-keepclassmembers class java.util.TreeSet { void clear(); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType); }
-keepclassmembers class android.graphics.Bitmap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.widget.TextView { void setText(java.lang.CharSequence,android.widget.TextView$BufferType,boolean,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void <init>(); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void <init>(); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void tag(java.io.FileDescriptor); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void draw(android.graphics.Canvas); }
-keepclassmembers class dalvik.system.SocketTagger$1 { void untag(java.io.FileDescriptor); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { void resolve(); }
-keepclassmembers class org.apache.http.client.utils.URIUtils { java.net.URI createURI(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getChangingConfigurations(); }
-keepclassmembers class android.webkit.WebViewFactory { java.lang.String[] getWebViewNativeLibraryPaths(); }
-keepclassmembers class java.util.TreeSet { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.TreeSet { boolean isEmpty(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean needsMirroring(); }
-keepclassmembers class java.lang.Object { void wait(long); }
-keepclassmembers class java.util.TreeSet { java.util.Iterator iterator(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { java.lang.reflect.GenericDeclaration getGenericDeclaration(); }
-keepclassmembers class java.util.TreeSet { int size(); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { java.lang.String getName(); }
-keepclassmembers class libcore.reflect.TypeVariableImpl { java.lang.String toString(); }
-keepclassmembers class org.apache.http.client.utils.URIUtils { java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setDither(boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class org.apache.http.client.utils.URIUtils { java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void setSharedElementMatrices(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.http.client.utils.URIUtils { java.net.URI resolve(java.net.URI,java.net.URI); }
-keepclassmembers class android.webkit.WebViewFactory { void loadNativeLibrary(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { android.view.View findChildWithAccessibilityFocus(); }
-keepclassmembers class android.webkit.WebViewFactory { android.webkit.IWebViewUpdateService getUpdateService(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isStateful(); }
-keepclassmembers class android.webkit.WebViewFactory { boolean nativeLoadWithRelroFile(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setAutoMirrored(boolean); }
-keepclassmembers class android.view.VelocityTracker { long nativeInitialize(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void resetTouchState(); }
-keepclassmembers class android.view.VelocityTracker { void nativeClear(long); }
-keepclassmembers class android.webkit.WebViewFactory { void <clinit>(); }
-keepclassmembers class android.util.SuperNotCalledException { void <init>(java.lang.String); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean isAutoMirrored(); }
-keepclassmembers class android.view.VelocityTracker { void nativeAddMovement(long,android.view.MotionEvent); }
-keepclassmembers class android.view.VelocityTracker { void nativeComputeCurrentVelocity(long,int,float); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void jumpToCurrentState(); }
-keepclassmembers class android.view.ViewGroup { boolean resetCancelNextUpFlag(android.view.View); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetXVelocity(long,int); }
-keepclassmembers class android.view.VelocityTracker { float nativeGetYVelocity(long,int); }
-keepclassmembers class android.text.Editable$Factory { void <init>(); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable$Factory getInstance(); }
-keepclassmembers class android.view.VelocityTracker { android.view.VelocityTracker obtain(); }
-keepclassmembers class android.text.Editable$Factory { android.text.Editable newEditable(java.lang.CharSequence); }
-keepclassmembers class android.view.ViewGroup { void clearTouchTargets(); }
-keepclassmembers class android.text.Editable$Factory { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoWrapper { void <init>(java.io.InputStream,android.os.ParcelFileDescriptor); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspot(float,float); }
-keepclassmembers class android.view.ViewGroup { void cancelAndClearTouchTargets(android.view.MotionEvent); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoWrapper { android.os.ParcelFileDescriptor getFileDescriptor(); }
-keepclassmembers class android.view.VelocityTracker { void recycle(); }
-keepclassmembers class com.bumptech.glide.load.model.ImageVideoWrapper { java.io.InputStream getStream(); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner { void <init>(org.apache.http.conn.scheme.SchemeRegistry,java.net.ProxySelector); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setHotspotBounds(int,int,int,int); }
-keepclassmembers class android.view.VelocityTracker { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings$4 { void <init>(com.fsck.k9.activity.setup.FolderSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings$4 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner { org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.view.VelocityTracker { void clear(); }
-keepclassmembers class android.view.VelocityTracker { void addMovement(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onStateChange(int[]); }
-keepclassmembers class android.widget.TextView { void setText(int); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget getTouchTarget(android.view.View); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { void <init>(); }
-keepclassmembers class android.view.VelocityTracker { void computeCurrentVelocity(int,float); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$TouchTarget addTouchTarget(android.view.View,int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean onLevelChange(int); }
-keepclassmembers class android.widget.TextView { void setHint(java.lang.CharSequence); }
-keepclassmembers class android.view.ViewGroup { void removePointersFromTouchTargets(int); }
-keepclassmembers class android.view.VelocityTracker { float getXVelocity(int); }
-keepclassmembers class android.hardware.input.IInputDevicesChangedListener$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.view.VelocityTracker { float getYVelocity(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicWidth(); }
-keepclassmembers class android.transition.Visibility { void <init>(); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner { org.apache.http.HttpHost determineProxy(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.transition.Visibility { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.shapes.RoundRectShape { void <init>(float[],android.graphics.RectF,float[]); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getHint(); }
-keepclassmembers class android.view.ViewGroup { void cancelTouchTarget(android.view.View); }
-keepclassmembers class android.view.VelocityTracker { void <clinit>(); }
-keepclassmembers class android.widget.TextView { boolean isSingleLine(); }
-keepclassmembers class android.widget.TextView { boolean isMultilineInputType(int); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumWidth(); }
-keepclassmembers class android.transition.Visibility { void setMode(int); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence removeSuggestionSpans(java.lang.CharSequence); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getMinimumHeight(); }
-keepclassmembers class android.transition.Visibility { int getMode(); }
-keepclassmembers class android.graphics.drawable.shapes.RoundRectShape { void draw(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.transition.Visibility { void captureValues(android.transition.TransitionValues,int); }
-keepclassmembers class android.view.ViewGroup { boolean canViewReceivePointerEvents(android.view.View); }
-keepclassmembers class android.widget.TextView { void setMinLines(int); }
-keepclassmembers class android.view.ViewGroup { float[] getTempPoint(); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner { java.lang.String getHost(java.net.InetSocketAddress); }
-keepclassmembers class android.transition.Visibility { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class org.apache.http.impl.conn.ProxySelectorRoutePlanner { java.net.Proxy chooseProxy(java.util.List,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class android.graphics.drawable.shapes.RoundRectShape { void onResize(float,float); }
-keepclassmembers class android.widget.TextView { void setInputType(int); }
-keepclassmembers class android.view.ViewGroup { boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void clearState(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { long getFadeDuration(); }
-keepclassmembers class android.view.ViewGroup { void transformPointToViewLocal(float[],android.view.View); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getOpacity(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void processPendingEmptyTrash(com.fsck.k9.mailstore.LocalStore$PendingCommand,com.fsck.k9.Account); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { int getCurrentIndex(); }
-keepclassmembers class android.graphics.drawable.shapes.RoundRectShape { android.graphics.drawable.shapes.RoundRectShape clone(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean selectDrawable(int); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchTransformedTouchEvent(android.view.MotionEvent,boolean,android.view.View,int); }
-keepclassmembers class android.transition.Visibility { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Visibility { void forceVisibility(int,boolean); }
-keepclassmembers class android.widget.TextView { boolean isPasswordInputType(int); }
-keepclassmembers class android.widget.TextView { boolean isVisiblePasswordInputType(int); }
-keepclassmembers class android.graphics.drawable.shapes.RoundRectShape { android.graphics.drawable.shapes.Shape clone(); }
-keepclassmembers class android.widget.TextView { void setRawInputType(int); }
-keepclassmembers class android.widget.TextView { void setInputType(int,boolean); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void initializeDrawableForDisplay(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void processPendingExpunge(com.fsck.k9.mailstore.LocalStore$PendingCommand,com.fsck.k9.Account); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void startTransition(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void animate(boolean); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void transitionStarted(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void moveSharedElementsToOverlay(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void showView(android.view.View,boolean); }
-keepclassmembers class android.view.ViewGroup { void setMotionEventSplittingEnabled(boolean); }
-keepclassmembers class android.widget.TextView { boolean hasPasswordTransformationMethod(); }
-keepclassmembers class android.view.ViewGroup { boolean isTransitionGroup(); }
-keepclassmembers class android.view.ViewGroup { void setTransitionGroup(boolean); }
-keepclassmembers class android.widget.TextView { int getInputType(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { boolean isInTransitionGroup(android.view.ViewParent,android.view.ViewGroup); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable getCurrent(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { boolean canApplyTheme(); }
-keepclassmembers class android.view.ViewGroup { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void processPendingMarkAllAsRead(com.fsck.k9.mailstore.LocalStore$PendingCommand,com.fsck.k9.Account); }
-keepclassmembers class android.view.ViewGroup { void requestDisallowInterceptTouchEvent(boolean); }
-keepclassmembers class android.view.ViewGroup { boolean requestFocus(int,android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.DrawableContainer { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.widget.TextView { void setOnEditorActionListener(android.widget.TextView$OnEditorActionListener); }
-keepclassmembers class android.widget.TextView { void onEditorAction(int); }
-keepclassmembers class android.view.ViewGroup { boolean onRequestFocusInDescendants(int,android.graphics.Rect); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { int sharedCount(int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { int exclusiveCount(int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.HttpMethod { boolean hasRequestBody(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void dispatchStartTemporaryDetach(); }
-keepclassmembers class android.app.ActivityTransitionCoordinator { void <clinit>(); }
-keepclassmembers class com.fsck.k9.Account { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void setPrivateImeOptions(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.http.HttpMethod { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { boolean tryRelease(int); }
-keepclassmembers class com.fsck.k9.Account { void <init>(android.content.Context); }
-keepclassmembers class android.view.ViewGroup { void dispatchAttachedToWindow(android.view.View$AttachInfo,int); }
-keepclassmembers class android.widget.TextView { void setInputExtras(int); }
-keepclassmembers class android.widget.TextView { android.os.Bundle getInputExtras(boolean); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getError(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { boolean tryAcquire(int); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { boolean tryReleaseShared(int); }
-keepclassmembers class android.view.ViewGroup { boolean dispatchPopulateAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.widget.TextView { void setError(java.lang.CharSequence); }
-keepclassmembers class android.widget.TextView { boolean setFrame(int,int,int,int); }
-keepclassmembers class android.widget.TextView { void restartMarqueeIfNeeded(); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.InputFilter[]); }
-keepclassmembers class android.widget.TextView { void setFilters(android.text.Editable,android.text.InputFilter[]); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { java.lang.IllegalMonitorStateException unmatchedUnlockException(); }
-keepclassmembers class android.view.ViewGroup { void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.widget.TextView { void setError(java.lang.CharSequence,android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { int tryAcquireShared(int); }
-keepclassmembers class com.fsck.k9.Account { void <init>(com.fsck.k9.Preferences,java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { void cacheChips(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void processPendingMoveOrCopy(com.fsck.k9.mailstore.LocalStore$PendingCommand,com.fsck.k9.Account); }
-keepclassmembers class android.widget.TextView { int getBoxHeight(android.text.Layout); }
-keepclassmembers class android.view.ViewGroup { void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { int getSoTimeout(org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.Account { void deleteCertificates(); }
-keepclassmembers class android.view.ViewGroup { void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int); }
-keepclassmembers class android.widget.TextView { int getVerticalOffset(boolean); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { int fullTryAcquireShared(java.lang.Thread); }
-keepclassmembers class com.fsck.k9.Account { void deleteIdentities(com.fsck.k9.preferences.Storage,com.fsck.k9.preferences.StorageEditor); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { boolean getTcpNoDelay(org.apache.http.params.HttpParams); }
-keepclassmembers class android.widget.TextView { int getBottomVerticalOffset(boolean); }
-keepclassmembers class android.view.ViewGroup { void resetSubtreeAccessibilityStateChanged(); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { int getSocketBufferSize(org.apache.http.params.HttpParams); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void <init>(boolean,int,com.android.okio.Source); }
-keepclassmembers class android.widget.TextView { void invalidateCursorPath(); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPrePerformAccessibilityAction(android.view.View,int,android.os.Bundle); }
-keepclassmembers class com.bumptech.glide.request.target.DrawableImageViewTarget { void setResource(android.graphics.drawable.Drawable); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { int getLinger(org.apache.http.params.HttpParams); }
-keepclassmembers class com.bumptech.glide.request.target.DrawableImageViewTarget { void setResource(java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void maxHeaderTableByteCount(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$29 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$29 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void clearHeaderTable(); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Program64Header { void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,long); }
-keepclassmembers class android.view.ViewGroup { void internalSetPadding(int,int,int,int); }
-keepclassmembers class com.bumptech.glide.request.target.DrawableImageViewTarget { void <init>(android.widget.ImageView); }
-keepclassmembers class android.view.ViewGroup { void dispatchDetachedFromWindow(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { int evictToRecoverBytes(int); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { int getConnectionTimeout(org.apache.http.params.HttpParams); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(); }
-keepclassmembers class android.widget.TextView { void invalidateCursor(int,int,int); }
-keepclassmembers class org.apache.http.params.HttpConnectionParams { boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams); }
-keepclassmembers class android.widget.TextView { void invalidateRegion(int,int,boolean); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { boolean tryReadLock(); }
-keepclassmembers class android.transition.Visibility { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawingCacheEnabled(boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readHeaders(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void onAnimationStart(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SimpleDialog { void <init>(int,int,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SimpleDialog { java.lang.String generateMessage(com.fsck.k9.activity.Accounts); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SimpleDialog { void okayAction(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.Account { void excludeSpecialFolder(com.fsck.k9.search.LocalSearch,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SimpleDialog { void restore(android.app.Activity); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SimpleDialog { boolean retain(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void encodeContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void <init>(); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(); }
-keepclassmembers class com.fsck.k9.Account { int findNewAccountNumber(java.util.List); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void clearReferenceSet(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { org.apache.harmony.security.asn1.ASN1UTCTime getInstance(); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(int); }
-keepclassmembers class com.fsck.k9.activity.Accounts$SimpleDialog { void show(com.fsck.k9.activity.Accounts); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$Sync { boolean isHeldExclusively(); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void access$000(com.fsck.k9.service.DatabaseUpgradeService); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void emitReferenceSet(); }
-keepclassmembers class android.text.style.QuoteSpan { void <init>(android.os.Parcel); }
-keepclassmembers class java.nio.FileChannelImpl { void <init>(java.io.Closeable,java.io.FileDescriptor,int); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void access$100(com.fsck.k9.service.DatabaseUpgradeService); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void acquireWakelock(); }
-keepclassmembers class android.view.ViewGroup { void onAnimationEnd(); }
-keepclassmembers class com.fsck.k9.Account { int generateAccountNumber(com.fsck.k9.Preferences); }
-keepclassmembers class android.text.style.QuoteSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.Account { java.util.List getExistingAccountNumbers(com.fsck.k9.Preferences); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void <init>(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState,android.graphics.drawable.AnimatedStateListDrawable,android.content.res.Resources); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1UTCTime { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { java.util.List getAndReset(); }
-keepclassmembers class java.nio.FileChannelImpl { void checkOpen(); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void releaseWakelock(); }
-keepclassmembers class android.widget.TextView { void registerForPreDraw(); }
-keepclassmembers class com.fsck.k9.Account { void loadAccount(com.fsck.k9.Preferences); }
-keepclassmembers class java.nio.FileChannelImpl { void checkReadable(); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void sendProgressBroadcast(java.lang.String,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readIndexedHeader(int); }
-keepclassmembers class android.widget.TextView { void unregisterForPreDraw(); }
-keepclassmembers class android.widget.TextView { boolean onPreDraw(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void mutate(); }
-keepclassmembers class java.nio.FileChannelImpl { void implCloseChannel(); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void sendUpgradeCompleteBroadcast(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addTransition(int,int,android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void startService(android.content.Context); }
-keepclassmembers class android.view.ViewGroup { boolean isLayoutModeOptical(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { int headerTableIndex(int); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void startUpgradeInBackground(); }
-keepclassmembers class android.widget.TextView { void onAttachedToWindow(); }
-keepclassmembers class android.view.ViewGroup { android.graphics.Insets computeOpticalInsets(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readLiteralHeaderWithoutIndexingIndexedName(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int addStateSet(int[],android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.view.View$11 { void <init>(java.lang.String); }
-keepclassmembers class android.widget.TextView { void onDetachedFromWindowInternal(); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void upgradeDatabases(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfKeyframe(int[]); }
-keepclassmembers class android.widget.TextView { void onScreenStateChanged(int); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void stopService(); }
-keepclassmembers class android.os.AsyncTask { android.os.Handler getHandler(); }
-keepclassmembers class android.os.AsyncTask { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean isPaddingOffsetRequired(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readLiteralHeaderWithoutIndexingNewName(); }
-keepclassmembers class android.widget.TextView { int getLeftPaddingOffset(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int getKeyframeIdAt(int); }
-keepclassmembers class android.os.AsyncTask { void postResultIfNotInvoked(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { int indexOfTransition(int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readLiteralHeaderWithIncrementalIndexingIndexedName(int); }
-keepclassmembers class android.os.AsyncTask { java.lang.Object postResult(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean isTransitionReversed(int,int); }
-keepclassmembers class android.widget.TextView { int getBottomPaddingOffset(); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(int[],int,int); }
-keepclassmembers class android.widget.TextView { int getTopPaddingOffset(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void readLiteralHeaderWithIncrementalIndexingNewName(); }
-keepclassmembers class android.os.AsyncTask { void onPreExecute(); }
-keepclassmembers class android.view.ViewGroup { void fillRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int); }
-keepclassmembers class android.os.AsyncTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.widget.TextView { int getFudgedPaddingRight(); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean transitionHasReversibleFlag(int,int); }
-keepclassmembers class android.os.AsyncTask { void onCancelled(java.lang.Object); }
-keepclassmembers class android.os.AsyncTask { void onCancelled(); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { void onCreate(); }
-keepclassmembers class android.os.AsyncTask { boolean isCancelled(); }
-keepclassmembers class android.util.ContainerHelpers { int binarySearch(long[],int,long); }
-keepclassmembers class android.os.AsyncTask { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { com.android.okio.ByteString getName(int); }
-keepclassmembers class android.widget.TextView { int getRightPaddingOffset(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.os.AsyncTask { boolean cancel(boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { boolean isStaticHeader(int); }
-keepclassmembers class android.os.AsyncTask { android.os.AsyncTask execute(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.service.DatabaseUpgradeService { int onStartCommand(android.content.Intent,int,int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { boolean canApplyTheme(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.os.AsyncTask { android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { void insertIntoHeaderTable(int,com.android.okhttp.internal.spdy.Header); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { void <init>(); }
-keepclassmembers class android.widget.TextView { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { void access$200(android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState); }
-keepclassmembers class android.view.ViewGroup { int sign(int); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedStateListState { long generateTransitionKey(int,int); }
-keepclassmembers class android.view.ViewGroup { void drawCorner(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$HoneycombDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class android.text.style.DynamicDrawableSpan { void <init>(int); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter$2 { void <init>(com.fsck.k9.activity.AlternateRecipientAdapter,com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class android.os.AsyncTask { void publishProgress(java.lang.Object[]); }
-keepclassmembers class android.view.ViewGroup { int dipsToPixels(int); }
-keepclassmembers class android.text.style.DynamicDrawableSpan { void <init>(); }
-keepclassmembers class android.os.AsyncTask { void execute(java.lang.Runnable); }
-keepclassmembers class android.os.AsyncTask { java.util.concurrent.atomic.AtomicBoolean access$200(android.os.AsyncTask); }
-keepclassmembers class android.view.ViewGroup { void drawRectCorners(android.graphics.Canvas,int,int,int,int,android.graphics.Paint,int,int); }
-keepclassmembers class android.os.AsyncTask { void finish(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.AlternateRecipientAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class com.android.internal.app.AlertController$AlertParams$2 { void <init>(com.android.internal.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,com.android.internal.app.AlertController$RecycleListView,com.android.internal.app.AlertController); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,android.animation.Keyframes$IntKeyframes); }
-keepclassmembers class android.os.AsyncTask { void access$400(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class android.os.AsyncTask { void access$500(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class android.os.AsyncTask { void <clinit>(); }
-keepclassmembers class android.os.AsyncTask { java.lang.Object access$300(android.os.AsyncTask,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void fillDifference(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(android.util.Property,android.animation.Keyframes$IntKeyframes); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(java.lang.String,int[]); }
-keepclassmembers class android.view.ViewGroup { void onDebugDrawMargins(android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <init>(android.util.Property,int[]); }
-keepclassmembers class android.app.SearchManager { void <init>(android.content.Context,android.os.Handler); }
-keepclassmembers class android.view.ViewGroup { void onDebugDraw(android.graphics.Canvas); }
-keepclassmembers class org.apache.http.impl.io.HttpRequestWriter { void <init>(org.apache.http.io.SessionOutputBuffer,org.apache.http.message.LineFormatter,org.apache.http.params.HttpParams); }
-keepclassmembers class android.app.SearchManager { void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$AbsListViewAutoScroller { void <init>(android.widget.AbsListView); }
-keepclassmembers class org.apache.http.impl.io.HttpRequestWriter { void writeHeadLine(org.apache.http.HttpMessage); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setIntValues(int[]); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$AbsListViewAutoScroller { void scrollTargetBy(int,int); }
-keepclassmembers class android.app.SearchManager { void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean,android.graphics.Rect); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void calculateValue(float); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { void <init>(android.content.Context); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$AbsListViewAutoScroller { boolean canTargetScrollHorizontally(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { int readByte(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$AbsListViewAutoScroller { boolean canTargetScrollVertically(int); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder$IntPropertyValuesHolder clone(); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { int readInt(int,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { void <init>(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode); }
-keepclassmembers class android.app.SearchManager { void ensureSearchDialog(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { void <init>(android.content.Context,com.handmark.pulltorefresh.library.PullToRefreshBase$Mode,com.handmark.pulltorefresh.library.PullToRefreshBase$AnimationStyle); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setAnimatedValue(java.lang.Object); }
-keepclassmembers class android.app.SearchManager { void startGlobalSearch(java.lang.String,boolean,android.os.Bundle,android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { void dispatchDraw(android.graphics.Canvas); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { android.widget.FrameLayout access$000(com.handmark.pulltorefresh.library.PullToRefreshListView); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void processPendingMoveOrCopyOld(com.fsck.k9.mailstore.LocalStore$PendingCommand,com.fsck.k9.Account); }
-keepclassmembers class android.widget.TextView { boolean hasOverlappingRendering(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { android.widget.ListView createListView(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Reader { com.android.okio.ByteString readByteString(boolean); }
-keepclassmembers class android.widget.TextView { boolean isTextSelectable(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { com.handmark.pulltorefresh.library.LoadingLayoutProxy createLoadingLayoutProxy(boolean,boolean); }
-keepclassmembers class android.widget.TextView { void setTextIsSelectable(boolean); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { android.view.View createRefreshableView(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void setupSetter(java.lang.Class); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { android.widget.ListView createRefreshableView(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { com.handmark.pulltorefresh.library.PullToRefreshBase$Orientation getPullToRefreshScrollDirection(); }
-keepclassmembers class android.app.SearchManager { android.content.ComponentName getGlobalSearchActivity(); }
-keepclassmembers class java.nio.FileChannelImpl { java.nio.channels.FileChannel position(long); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { void <init>(int,com.fsck.k9.mailstore.util.FileFactory,java.lang.String); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { void handleStyledAttributes(android.content.res.TypedArray); }
-keepclassmembers class android.widget.TextView { int[] onCreateDrawableState(int); }
-keepclassmembers class android.widget.TextView { android.graphics.Path getUpdatedHighlightPath(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { void <init>(com.fsck.k9.mailstore.util.FileFactory,java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$SetPendingIntentTemplate { void <init>(android.widget.RemoteViews,int,android.app.PendingIntent); }
-keepclassmembers class java.nio.FileChannelImpl { int read(java.nio.ByteBuffer,long); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { java.util.ArrayList getArray(); }
-keepclassmembers class android.widget.RemoteViews$SetPendingIntentTemplate { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { java.io.File access$002(com.fsck.k9.mailstore.DeferredFileBody,java.io.File); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { void writeMemoryToFile(); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { byte[] access$102(com.fsck.k9.mailstore.DeferredFileBody,byte[]); }
-keepclassmembers class java.nio.FileChannelImpl { int readImpl(java.nio.ByteBuffer,long); }
-keepclassmembers class android.widget.RemoteViews$SetPendingIntentTemplate { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.widget.TextView { int getHorizontalOffsetForDrawables(); }
-keepclassmembers class android.app.SearchManager { void stopSearch(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { android.animation.PropertyValuesHolder clone(); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { void onRefreshing(boolean); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { java.lang.String getEncoding(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void processPendingMoveOrCopyOld2(com.fsck.k9.mailstore.LocalStore$PendingCommand,com.fsck.k9.Account); }
-keepclassmembers class android.app.SearchManager { void onCancel(android.content.DialogInterface); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { java.io.File getFile(); }
-keepclassmembers class android.animation.PropertyValuesHolder$IntPropertyValuesHolder { void <clinit>(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void remove(java.lang.Object); }
-keepclassmembers class android.app.SearchManager { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { java.io.InputStream getInputStream(); }
-keepclassmembers class android.app.SearchManager { android.app.SearchableInfo getSearchableInfo(android.content.ComponentName); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$12 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.util.Date,java.util.concurrent.atomic.AtomicInteger,com.fsck.k9.mailstore.LocalFolder,java.util.concurrent.atomic.AtomicInteger,java.lang.String,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void processPendingSetFlag(com.fsck.k9.mailstore.LocalStore$PendingCommand,com.fsck.k9.Account); }
-keepclassmembers class com.handmark.pulltorefresh.library.PullToRefreshListView { void onReset(); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { java.io.OutputStream getOutputStream(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$12 { void messageFinished(com.fsck.k9.mail.Message,int,int); }
-keepclassmembers class android.widget.TextView { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { long getSize(); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { void setEncoding(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.DeferredFileBody { void writeTo(java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.activity.ColorPickerDialog$1 { void <init>(com.fsck.k9.activity.ColorPickerDialog); }
-keepclassmembers class com.fsck.k9.activity.ColorPickerDialog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { void <init>(java.lang.String,int,int[],byte[]); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroupOverlay getOverlay(); }
-keepclassmembers class android.view.ViewTreeObserver$CopyOnWriteArray { void add(java.lang.Object); }
-keepclassmembers class android.net.Uri$PathPart { java.lang.String getEncoded(); }
-keepclassmembers class android.view.ViewGroup { int getChildDrawingOrder(int,int); }
-keepclassmembers class android.net.Uri$PathPart { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean hasChildWithZ(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void processPendingSetFlagOld(com.fsck.k9.mailstore.LocalStore$PendingCommand,com.fsck.k9.Account); }
-keepclassmembers class android.animation.LayoutTransition { void <init>(); }
-keepclassmembers class javax.net.ssl.X509ExtendedKeyManager { void <init>(); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart appendEncodedSegment(android.net.Uri$PathPart,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { com.android.okio.ByteString decode(com.android.okio.ByteString); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { byte[] decode(byte[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void put(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart appendDecodedSegment(android.net.Uri$PathPart,java.lang.String); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart readFrom(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void putBackground(java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileToStreamDecoder { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileToStreamDecoder { void <init>(com.bumptech.glide.load.ResourceDecoder); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void putCommand(java.util.concurrent.BlockingQueue,java.lang.String,com.fsck.k9.controller.MessagingListener,java.lang.Runnable,boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchGetDisplayList(); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathSegments getPathSegments(); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList buildOrderedChildList(); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileToStreamDecoder { void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.resource.file.FileToStreamDecoder$FileOpener); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$12 { void messageStarted(java.lang.String,int,int); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart fromEncoded(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileToStreamDecoder { com.bumptech.glide.load.engine.Resource decode(java.io.File,int,int); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart fromDecoded(java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { void buildTree(int[],byte[]); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart from(java.lang.String,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { void addCode(int,int,byte); }
-keepclassmembers class android.net.Uri$PathPart { android.net.Uri$PathPart makeAbsolute(android.net.Uri$PathPart); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileToStreamDecoder { com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void queueExpunge(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void recreateChildDisplayList(android.view.View); }
-keepclassmembers class com.fsck.k9.notification.NotificationContentCreator$1 { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileToStreamDecoder { java.lang.String getId(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void queueMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,boolean,java.lang.String[]); }
-keepclassmembers class android.view.ViewGroup { boolean getClipChildren(); }
-keepclassmembers class com.android.okhttp.internal.spdy.Huffman$Codec { void <clinit>(); }
-keepclassmembers class android.widget.TextView { void getFocusedRect(android.graphics.Rect); }
-keepclassmembers class android.view.ViewGroup { void setClipChildren(boolean); }
-keepclassmembers class android.net.Uri$PathPart { void <clinit>(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void <init>(com.android.okhttp.internal.spdy.SpdyStream,long); }
-keepclassmembers class java.util.concurrent.FutureTask { java.lang.Object report(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void queueMoveOrCopy(com.fsck.k9.Account,java.lang.String,java.lang.String,boolean,java.lang.String[],java.util.Map); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class java.util.concurrent.FutureTask { void <init>(java.util.concurrent.Callable); }
-keepclassmembers class java.nio.FileChannelImpl { void <clinit>(); }
-keepclassmembers class java.util.concurrent.FutureTask { void <init>(java.lang.Runnable,java.lang.Object); }
-keepclassmembers class java.util.Formatter { libcore.icu.NativeDecimalFormat getDecimalFormat(java.lang.String); }
-keepclassmembers class java.util.Formatter { void <init>(java.lang.Appendable,java.util.Locale); }
-keepclassmembers class android.view.ViewGroup { void setClipToPadding(boolean); }
-keepclassmembers class java.util.concurrent.FutureTask { boolean isDone(); }
-keepclassmembers class java.util.logging.Logger { void updateDalvikLogHandler(); }
-keepclassmembers class android.view.ViewGroup { boolean getClipToPadding(); }
-keepclassmembers class java.util.concurrent.FutureTask { boolean isCancelled(); }
-keepclassmembers class java.util.concurrent.FutureTask { boolean cancel(boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetActivated(boolean); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetSelected(boolean); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { float getInterpolation(float); }
-keepclassmembers class android.view.ViewGroup { void dispatchSetPressed(boolean); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { void <init>(); }
-keepclassmembers class android.graphics.drawable.Ripple$LogInterpolator { void <init>(android.graphics.drawable.Ripple$1); }
-keepclassmembers class java.util.concurrent.FutureTask { java.lang.Object get(); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(); }
-keepclassmembers class android.os.StrictMode$ThreadSpanState { void <init>(android.os.StrictMode$1); }
-keepclassmembers class java.util.logging.Logger { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.ViewGroup { void dispatchDrawableHotspotChanged(float,float); }
-keepclassmembers class android.text.style.MetricAffectingSpan { void <init>(); }
-keepclassmembers class java.util.concurrent.FutureTask { void done(); }
-keepclassmembers class java.util.concurrent.FutureTask { void set(java.lang.Object); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void queuePendingCommand(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalStore$PendingCommand); }
-keepclassmembers class java.util.concurrent.FutureTask { void setException(java.lang.Throwable); }
-keepclassmembers class java.util.concurrent.FutureTask { void run(); }
-keepclassmembers class java.util.logging.Logger { java.util.ResourceBundle loadResourceBundle(java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { void runChangeTransition(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class java.util.Formatter { void checkNotClosed(); }
-keepclassmembers class android.view.ViewGroup { boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void queueSetFlag(com.fsck.k9.Account,java.lang.String,java.lang.String,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.view.ViewGroup { void dispatchCancelPendingInputEvents(); }
-keepclassmembers class java.util.Formatter { java.lang.Appendable out(); }
-keepclassmembers class java.util.Formatter { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void refreshLocalMessageFlags(com.fsck.k9.Account,com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.List,java.util.concurrent.atomic.AtomicInteger,int); }
-keepclassmembers class android.view.ViewGroup { android.view.animation.Transformation getChildTransformation(); }
-keepclassmembers class java.util.logging.Logger { void initResourceBundle(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewTraversal(int); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class android.widget.TextView { int getLineCount(); }
-keepclassmembers class java.util.concurrent.FutureTask { boolean runAndReset(); }
-keepclassmembers class android.animation.LayoutTransition { void setupChangeAnimation(android.view.ViewGroup,int,android.animation.Animator,long,android.view.View); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.FutureTask { void handlePossibleCancellationInterrupt(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void waitUntilReadable(); }
-keepclassmembers class java.util.logging.Logger { void setManager(java.util.logging.LogManager); }
-keepclassmembers class android.view.ViewGroup { android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View); }
-keepclassmembers class java.util.Formatter { java.util.Formatter format(java.util.Locale,java.lang.String,java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.FutureTask { void finishCompletion(); }
-keepclassmembers class android.widget.TextView { int getBaseline(); }
-keepclassmembers class java.util.concurrent.FutureTask { int awaitDone(boolean,long); }
-keepclassmembers class java.util.Formatter { void doFormat(java.lang.String,java.lang.Object[]); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void receive(com.android.okio.BufferedSource,long); }
-keepclassmembers class android.animation.LayoutTransition { boolean isChangingLayout(); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int,int); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameModelLoader { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition { boolean isRunning(); }
-keepclassmembers class android.widget.TextView { int getFadeHeight(boolean); }
-keepclassmembers class android.widget.TextView { int getFadeTop(boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameModelLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(com.bumptech.glide.gifdecoder.GifDecoder,int,int); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.ViewGroup { void addView(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView { boolean onKeyPreIme(int,android.view.KeyEvent); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameModelLoader { com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Handler[] getHandlers(); }
-keepclassmembers class com.bumptech.glide.request.animation.ViewAnimationFactory { void <init>(com.bumptech.glide.request.animation.ViewAnimation$AnimationFactory); }
-keepclassmembers class android.animation.LayoutTransition { void cancel(int); }
-keepclassmembers class com.bumptech.glide.request.animation.ViewAnimationFactory { com.bumptech.glide.request.animation.GlideAnimation build(boolean,boolean); }
-keepclassmembers class java.util.Formatter { void outputCharSequence(java.lang.CharSequence,int,int); }
-keepclassmembers class java.util.concurrent.FutureTask { void removeWaiter(java.util.concurrent.FutureTask$WaitNode); }
-keepclassmembers class android.widget.TextView { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class java.util.concurrent.FutureTask { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener); }
-keepclassmembers class android.view.ViewGroup { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.logging.Logger { void setLevel(java.util.logging.Level); }
-keepclassmembers class android.widget.TextView { boolean onKeyMultiple(int,int,android.view.KeyEvent); }
-keepclassmembers class android.view.ViewGroup { void onViewAdded(android.view.View); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void checkNotClosed(); }
-keepclassmembers class java.util.Formatter { java.lang.Object getArgument(java.lang.Object[],int,java.util.Formatter$FormatSpecifierParser,java.lang.Object,boolean); }
-keepclassmembers class android.view.ViewGroup { void onViewRemoved(android.view.View); }
-keepclassmembers class java.util.logging.Logger { boolean getUseParentHandlers(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void <init>(com.android.okhttp.internal.spdy.SpdyStream,long,com.android.okhttp.internal.spdy.SpdyStream$1); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState { void <init>(android.graphics.Bitmap); }
-keepclassmembers class android.view.ViewGroup { void clearCachedLayoutMode(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState { void <clinit>(); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread { void <init>(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class java.util.logging.Logger { java.util.logging.Logger getParent(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$2 { void <init>(com.fsck.k9.activity.FolderList); }
-keepclassmembers class java.util.logging.Logger { void setParent(java.util.logging.Logger); }
-keepclassmembers class android.view.ViewGroup { void onAttachedToWindow(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState { void <init>(com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transform(java.util.Formatter$FormatToken,java.lang.Object); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { boolean access$102(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource,boolean); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil$TransferThread { void run(); }
-keepclassmembers class android.view.ViewGroup { boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.fsck.k9.activity.FolderList$2 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class android.view.ViewGroup { void onDetachedFromWindow(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { boolean access$100(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource); }
-keepclassmembers class android.view.ViewGroup { boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class java.util.logging.Logger { java.lang.String getName(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { boolean access$300(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState { void mutatePaint(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics$2 { void <init>(com.fsck.k9.activity.setup.AccountSetupBasics); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource { void <clinit>(); }
-keepclassmembers class java.util.logging.Logger { boolean internalIsLoggable(java.util.logging.Level); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class android.view.ViewGroup { void cleanupLayoutState(android.view.View); }
-keepclassmembers class android.animation.LayoutTransition { void runAppearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class android.view.ViewGroup { void addViewInner(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCacheCursor { void <init>(java.lang.String,android.database.Cursor,android.content.Context); }
-keepclassmembers class java.util.logging.Logger { void setResourceBundle(java.util.logging.LogRecord); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState { void setAlpha(int); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnEnter(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable$BitmapState { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void removeFlagForThreadsFromCache(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag); }
-keepclassmembers class android.util.SparseIntArray { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void removeFlagFromCache(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag); }
-keepclassmembers class android.util.SparseIntArray { void <init>(int); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo59 { void addMessageCompositeIndex(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.widget.TextView { boolean shouldAdvanceFocusOnTab(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo59 { void addMessageEmptyIndex(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void runInBackground(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo59 { void addMessageFlaggedIndex(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.animation.LayoutTransition { void runDisappearingTransition(android.view.ViewGroup,android.view.View); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo58 { void cleanUpFtsTable(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo59 { void addMessageFolderIdDeletedDateIndex(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.util.SparseIntArray { android.util.SparseIntArray clone(); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo58 { void cleanUpMessagePartsTable(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo59 { void addMessageReadIndex(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.widget.TextView { int doKeyDown(int,android.view.KeyEvent,android.view.KeyEvent); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo59 { void addMessageUidIndex(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo58 { void cleanUpOrphanedData(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo59 { void addMissingIndexes(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo58 { void createDeleteMessageTrigger(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.ViewGroup { void addInArray(android.view.View,int); }
-keepclassmembers class java.util.logging.Logger { boolean isLoggable(java.util.logging.Level); }
-keepclassmembers class android.util.SparseIntArray { int get(int,int); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCacheCursor { int getCount(); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCacheCursor { int getInt(int); }
-keepclassmembers class android.view.InputEvent { boolean isFromSource(int); }
-keepclassmembers class java.util.Formatter { java.util.IllegalFormatConversionException badArgumentType(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence localizeDigits(java.lang.CharSequence); }
-keepclassmembers class android.view.InputEvent { void recycle(); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCacheCursor { int getPosition(); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int); }
-keepclassmembers class android.util.SparseIntArray { int get(int); }
-keepclassmembers class android.view.InputEvent { void <init>(); }
-keepclassmembers class android.view.InputEvent { void prepareForReuse(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence insertGrouping(java.lang.CharSequence); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void <init>(); }
-keepclassmembers class android.view.InputEvent { int getSequenceNumber(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void setRampUpDuration(int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void setRampDownDuration(int); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCacheCursor { boolean moveToFirst(); }
-keepclassmembers class android.view.InputEvent { void <clinit>(); }
-keepclassmembers class android.util.SparseIntArray { int size(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void start(); }
-keepclassmembers class android.util.SparseIntArray { int keyAt(int); }
-keepclassmembers class android.view.ViewGroup { void removeFromArray(int,int); }
-keepclassmembers class android.util.SparseIntArray { void put(int,int); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCacheCursor { boolean isLast(); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCacheCursor { boolean moveToNext(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void requestStop(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void sendPendingMessagesSynchronous(com.fsck.k9.Account); }
-keepclassmembers class android.util.MapCollections { void <init>(); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCacheCursor { boolean moveToPosition(int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromBoolean(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { boolean isFinished(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromHashCode(); }
-keepclassmembers class android.animation.LayoutTransition { boolean hasListeners(); }
-keepclassmembers class android.view.ViewGroup { void bindLayoutAnimation(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup$LayoutParams,int,int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { float getValueAt(long); }
-keepclassmembers class com.fsck.k9.cache.EmailProviderCacheCursor { boolean moveToPrevious(); }
-keepclassmembers class android.util.MapCollections { boolean retainAllHelper(java.util.Map,java.util.Collection); }
-keepclassmembers class android.animation.LayoutTransition { void layoutChange(android.view.ViewGroup); }
-keepclassmembers class android.view.ViewGroup { void removeView(android.view.View); }
-keepclassmembers class android.util.MapCollections { java.lang.Object[] toArrayHelper(int); }
-keepclassmembers class android.animation.LayoutTransition { void addChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.view.ViewGroup { void removeViewInLayout(android.view.View); }
-keepclassmembers class android.util.SparseIntArray { void append(int,int); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromString(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { float interpolateValue(float); }
-keepclassmembers class android.view.ViewGroup { void removeViewAt(int); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void computeScrollDelta(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromCharacter(); }
-keepclassmembers class android.animation.LayoutTransition { void showChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class android.view.ViewGroup { boolean removeViewInternal(android.view.View); }
-keepclassmembers class android.view.ViewGroup { void removeViewInternal(int,android.view.View); }
-keepclassmembers class org.apache.james.mime4j.field.UnstructuredFieldImpl { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.UnstructuredFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { int getHorizontalDirection(); }
-keepclassmembers class com.fsck.k9.Account { java.util.List loadIdentities(com.fsck.k9.preferences.Storage); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View,boolean); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { int getVerticalDirection(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { void setTargetVelocity(float,float); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromPercent(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { int getDeltaY(); }
-keepclassmembers class com.android.internal.widget.AutoScrollHelper$ClampedScroller { int getDeltaX(); }
-keepclassmembers class android.view.ViewGroup { void setLayoutTransition(android.animation.LayoutTransition); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence padding(java.lang.CharSequence,int); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$2 { void <init>(com.fsck.k9.provider.EmailProvider,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.Transport { java.lang.String createTransportUri(com.fsck.k9.mail.ServerSettings); }
-keepclassmembers class android.util.MapCollections { java.util.Set getKeySet(); }
-keepclassmembers class android.util.MapCollections { java.util.Collection getValues(); }
-keepclassmembers class android.view.ViewGroup { android.animation.LayoutTransition getLayoutTransition(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$2 { android.database.Cursor doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mail.Transport { com.fsck.k9.mail.ServerSettings decodeTransportUri(java.lang.String); }
-keepclassmembers class android.widget.TextView { void resetErrorChangedFlag(); }
-keepclassmembers class com.fsck.k9.mail.Transport { void <init>(); }
-keepclassmembers class android.animation.LayoutTransition { void removeChild(android.view.ViewGroup,android.view.View); }
-keepclassmembers class com.fsck.k9.mail.Transport { java.lang.String decodeUtf8(java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { void hideErrorIfUnchanged(); }
-keepclassmembers class java.util.Formatter { java.lang.StringBuilder toStringBuilder(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.mail.Transport { java.lang.String encodeUtf8(java.lang.String); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.Level,java.lang.String,java.lang.Throwable); }
-keepclassmembers class java.util.Formatter { java.lang.StringBuilder wrapParentheses(java.lang.StringBuilder); }
-keepclassmembers class android.animation.LayoutTransition { void hideChild(android.view.ViewGroup,android.view.View,int); }
-keepclassmembers class com.fsck.k9.mail.Transport { com.fsck.k9.mail.Transport getInstance(android.content.Context,com.fsck.k9.mail.store.StoreConfig); }
-keepclassmembers class android.view.ViewGroup { void removeAllViews(); }
-keepclassmembers class java.util.logging.Logger { void log(java.util.logging.LogRecord); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromInteger(); }
-keepclassmembers class android.animation.LayoutTransition { void removeTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$2 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Message { void <init>(java.lang.String,com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Folder); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$000(android.animation.LayoutTransition); }
-keepclassmembers class android.view.ViewGroup { void removeDetachedView(android.view.View,boolean); }
-keepclassmembers class android.view.ViewGroup { void removeAllViewsInLayout(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Message { void delete(java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { java.util.HashMap access$100(android.animation.LayoutTransition); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeEntity$1 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Message { void setFlag(com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class android.animation.LayoutTransition { long access$200(android.animation.LayoutTransition); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus { void <init>(java.lang.String,int); }
-keepclassmembers class android.animation.LayoutTransition { long access$300(android.animation.LayoutTransition); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool$AcquiredConnectionStatus { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3Message { void setSize(int); }
-keepclassmembers class android.animation.LayoutTransition { long access$314(android.animation.LayoutTransition,long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$7 { void <init>(com.fsck.k9.mailstore.LocalStore); }
-keepclassmembers class android.view.ViewGroup { void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.animation.LayoutTransition { void addTransitionListener(android.animation.LayoutTransition$TransitionListener); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$7 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$500(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$600(); }
-keepclassmembers class android.animation.LayoutTransition { long access$700(android.animation.LayoutTransition); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$7 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.animation.LayoutTransition { long access$800(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$900(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1000(); }
-keepclassmembers class android.animation.LayoutTransition { long access$1100(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { long access$1200(android.animation.LayoutTransition); }
-keepclassmembers class android.view.ViewGroup { void detachViewFromParent(android.view.View); }
-keepclassmembers class java.util.logging.Logger { void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.animation.LayoutTransition { long access$400(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1400(); }
-keepclassmembers class android.view.ViewGroup { void detachViewsFromParent(int,int); }
-keepclassmembers class android.animation.LayoutTransition { android.animation.TimeInterpolator access$1300(android.animation.LayoutTransition); }
-keepclassmembers class android.view.ViewGroup { void detachAllViewsFromParent(); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1500(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.ArrayList access$1700(android.animation.LayoutTransition); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1800(android.animation.LayoutTransition); }
-keepclassmembers class com.tokenautocomplete.CountSpan { void <init>(int,android.content.Context,int,int,int); }
-keepclassmembers class android.animation.LayoutTransition { java.util.LinkedHashMap access$1900(android.animation.LayoutTransition); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromBigInteger(); }
-keepclassmembers class android.view.ViewGroup { void invalidateChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class android.animation.LayoutTransition { boolean access$1600(android.animation.LayoutTransition); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromNull(); }
-keepclassmembers class android.widget.TextView { boolean onCheckIsTextEditor(); }
-keepclassmembers class android.animation.LayoutTransition { void <clinit>(); }
-keepclassmembers class java.util.TreeMap$1 { void <init>(); }
-keepclassmembers class java.util.TreeMap$1 { int compare(java.lang.Comparable,java.lang.Comparable); }
-keepclassmembers class com.tokenautocomplete.CountSpan { void setCount(int); }
-keepclassmembers class android.widget.TextView { android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo); }
-keepclassmembers class java.util.TreeMap$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { void <init>(int,java.lang.String,com.android.i18n.phonenumbers.Phonenumber$PhoneNumber); }
-keepclassmembers class com.fsck.k9.Account { int pickColor(android.content.Context); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int start(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { int end(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberMatch { java.lang.String rawString(); }
-keepclassmembers class java.util.logging.Logger { void logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.Account { void resetVisibleLimits(); }
-keepclassmembers class com.fsck.k9.Account { void saveIdentities(com.fsck.k9.preferences.Storage,com.fsck.k9.preferences.StorageEditor); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromDateTime(); }
-keepclassmembers class com.fsck.k9.helper.ReplyToParser$ReplyToAddresses { void <init>(java.util.List,java.util.List); }
-keepclassmembers class com.fsck.k9.helper.ReplyToParser$ReplyToAddresses { void <init>(com.fsck.k9.mail.Address[]); }
-keepclassmembers class com.fsck.k9.activity.LauncherShortcuts { void <init>(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$9 { void <init>(com.fsck.k9.mailstore.LocalStore); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeTag(int); }
-keepclassmembers class java.util.Formatter { boolean appendT(java.lang.StringBuilder,char,java.util.Calendar); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader$Factory { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$9 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader$Factory { com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$9 { java.util.List doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.activity.LauncherShortcuts { void onCreate(android.os.Bundle); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorUriLoader$Factory { void teardown(); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5$1 { void <init>(com.fsck.k9.ui.messageview.MessageViewFragment$5); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5$1 { void run(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeANY(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeBitString(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeBoolean(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState access$002(com.fsck.k9.activity.compose.ComposeCryptoStatus,com.fsck.k9.activity.compose.RecipientPresenter$CryptoProviderState); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeGeneralizedTime(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode access$102(com.fsck.k9.activity.compose.ComposeCryptoStatus,com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode); }
-keepclassmembers class android.widget.TextView { void onCommitCompletion(android.view.inputmethod.CompletionInfo); }
-keepclassmembers class android.widget.TextView { void onCommitCorrection(android.view.inputmethod.CorrectionInfo); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeUTCTime(); }
-keepclassmembers class com.fsck.k9.Account { void switchLocalStorage(java.lang.String); }
-keepclassmembers class android.widget.TextView { void beginBatchEdit(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { java.lang.String[] access$202(com.fsck.k9.activity.compose.ComposeCryptoStatus,java.lang.String[]); }
-keepclassmembers class android.widget.TextView { void endBatchEdit(); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeInteger(); }
-keepclassmembers class android.view.ViewGroup { boolean damageChildDeferred(android.view.View); }
-keepclassmembers class android.widget.TextView { void onBeginBatchEdit(); }
-keepclassmembers class com.fsck.k9.Account { void addCertificate(com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection,java.security.cert.X509Certificate); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean access$302(com.fsck.k9.activity.compose.ComposeCryptoStatus,boolean); }
-keepclassmembers class android.widget.TextView { void onEndBatchEdit(); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener$MemorizingState { void <clinit>(); }
-keepclassmembers class android.widget.TextView { boolean onPrivateIMECommand(java.lang.String,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean access$402(com.fsck.k9.activity.compose.ComposeCryptoStatus,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeOctetString(); }
-keepclassmembers class java.util.logging.Logger { void reset(); }
-keepclassmembers class android.widget.TextView { void nullLayouts(); }
-keepclassmembers class android.view.ViewGroup { void damageChild(android.view.View,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeOID(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { java.lang.Long access$602(com.fsck.k9.activity.compose.ComposeCryptoStatus,java.lang.Long); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener$MemorizingState { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.Account { boolean allowRemoteSearch(); }
-keepclassmembers class java.util.logging.Logger { java.lang.String access$000(java.util.logging.Logger); }
-keepclassmembers class com.fsck.k9.Account { void delete(com.fsck.k9.Preferences); }
-keepclassmembers class java.util.logging.Logger { void access$100(java.util.logging.Logger,java.util.logging.LogRecord); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { java.lang.Long access$702(com.fsck.k9.activity.compose.ComposeCryptoStatus,java.lang.Long); }
-keepclassmembers class android.widget.TextView { void assumeLayout(); }
-keepclassmembers class java.util.logging.Logger { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MemorizingMessagingListener$MemorizingState { com.fsck.k9.controller.MemorizingMessagingListener$MemorizingState[] values(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean access$802(com.fsck.k9.activity.compose.ComposeCryptoStatus,boolean); }
-keepclassmembers class android.widget.TextView { android.text.Layout$Alignment getLayoutAlignment(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { com.fsck.k9.activity.compose.ComposeCryptoStatus$AttachErrorState getAttachErrorStateOrNull(); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean access$502(com.fsck.k9.activity.compose.ComposeCryptoStatus,boolean); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { com.fsck.k9.activity.compose.RecipientMvpView$CryptoSpecialModeDisplayType getCryptoSpecialModeDisplayType(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Monospace { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Monospace { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class android.widget.TextView { void makeNewLayout(int,int,android.text.BoringLayout$Metrics,android.text.BoringLayout$Metrics,int,boolean); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapResponseParserException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { com.fsck.k9.activity.compose.RecipientMvpView$CryptoStatusDisplayType getCryptoStatusDisplayType(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Underline { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Underline { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class org.apache.harmony.security.asn1.BerOutputStream { void encodeString(); }
-keepclassmembers class java.util.Formatter { void appendLocalized(java.lang.StringBuilder,long,int); }
-keepclassmembers class android.view.ViewGroup { void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect); }
-keepclassmembers class java.util.Formatter { int to12Hour(int); }
-keepclassmembers class com.android.i18n.phonenumbers.Phonenumber$PhoneNumber$CountryCodeSource { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { void offsetRectBetweenParentAndChild(android.view.View,android.graphics.Rect,boolean,boolean); }
-keepclassmembers class android.database.SQLException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromSpecialNumber(double); }
-keepclassmembers class android.database.SQLException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.Account$QuoteStyle { com.fsck.k9.Account$QuoteStyle valueOf(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { long[] getEncryptKeyIds(); }
-keepclassmembers class com.fsck.k9.mail.FetchProfile { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { java.lang.String[] getRecipientAddresses(); }
-keepclassmembers class java.util.Formatter { java.lang.CharSequence transformFromFloat(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { com.fsck.k9.activity.compose.ComposeCryptoStatus$SendErrorState getSendErrorStateOrNull(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader$1 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection$Reader,java.lang.String,java.lang.Object[],com.android.okhttp.internal.spdy.SpdyStream); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportAsyncTask { void <init>(com.fsck.k9.activity.Accounts,boolean,java.util.List,boolean,android.net.Uri); }
-keepclassmembers class android.view.ViewGroup { void offsetChildrenTopAndBottom(int); }
-keepclassmembers class com.fsck.k9.Account$QuoteStyle { void <clinit>(); }
-keepclassmembers class com.fsck.k9.Account$QuoteStyle { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { java.lang.Long getSigningKeyId(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean isCryptoDisabled(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader$1 { void execute(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean isEncryptionEnabled(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportAsyncTask { void <init>(com.fsck.k9.activity.Accounts,boolean,java.util.List,boolean,android.net.Uri,com.fsck.k9.activity.Accounts$1); }
-keepclassmembers class java.util.WeakHashMap$Entry { void <init>(java.lang.Object,java.lang.Object,java.lang.ref.ReferenceQueue); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean isEncryptionOpportunistic(); }
-keepclassmembers class android.view.ViewGroup { boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean isPgpInlineModeEnabled(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean isProviderStateOk(); }
-keepclassmembers class java.lang.ref.FinalizerReference { void finalizeAllEnqueued(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean isSignOnly(); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean enqueueSentinelReference(java.lang.ref.FinalizerReference$Sentinel); }
-keepclassmembers class java.util.WeakHashMap$Entry { java.lang.Object getKey(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean isSigningEnabled(); }
-keepclassmembers class java.util.WeakHashMap$Entry { java.lang.Object getValue(); }
-keepclassmembers class com.fsck.k9.activity.compose.ComposeCryptoStatus { boolean shouldUsePgpMessageBuilder(); }
-keepclassmembers class java.util.Formatter { boolean startsWithMinusSign(java.lang.CharSequence,java.lang.String); }
-keepclassmembers class com.fsck.k9.helper.UrlEncodingHelper { java.lang.String decodeUtf8(java.lang.String); }
-keepclassmembers class java.util.WeakHashMap$Entry { boolean equals(java.lang.Object); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part); }
-keepclassmembers class com.fsck.k9.helper.UrlEncodingHelper { java.lang.String encodeUtf8(java.lang.String); }
-keepclassmembers class java.lang.ref.FinalizerReference { boolean makeCircularListIfUnenqueued(); }
-keepclassmembers class java.lang.ref.FinalizerReference { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.net.Uri$OpaqueUri { android.net.Uri readFrom(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportAsyncTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class java.util.Formatter { void transformE(java.lang.StringBuilder); }
-keepclassmembers class java.util.WeakHashMap$Entry { int hashCode(); }
-keepclassmembers class android.net.Uri$OpaqueUri { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.net.Uri$OpaqueUri { boolean isHierarchical(); }
-keepclassmembers class java.util.WeakHashMap$Entry { java.lang.String toString(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getScheme(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getEncodedSchemeSpecificPart(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getSchemeSpecificPart(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportAsyncTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getAuthority(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportAsyncTask { void showProgressDialog(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getPath(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getEncodedQuery(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.util.List getPathSegments(); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String getLastPathSegment(); }
-keepclassmembers class java.util.Formatter { void transformG(java.lang.StringBuilder); }
-keepclassmembers class android.net.Uri$OpaqueUri { java.lang.String toString(); }
-keepclassmembers class android.view.ViewGroup { void layout(int,int,int,int); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportAsyncTask { java.lang.Boolean doInBackground(java.lang.Void[]); }
-keepclassmembers class android.net.Uri$OpaqueUri { int compareTo(java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil$Usage { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { boolean canAnimate(); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil$Usage { void <clinit>(); }
-keepclassmembers class android.net.Uri$OpaqueUri { android.net.Uri$Builder buildUpon(); }
-keepclassmembers class android.net.Uri$OpaqueUri { void <init>(java.lang.String,android.net.Uri$Part,android.net.Uri$Part,android.net.Uri$1); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$34 { void <init>(com.fsck.k9.controller.MessagingController,android.content.Context,com.fsck.k9.Account,boolean,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.power.TracingPowerManager$TracingWakeLock); }
-keepclassmembers class android.animation.FloatKeyframeSet { void <init>(android.animation.Keyframe$FloatKeyframe[]); }
-keepclassmembers class android.view.ViewGroup { void setLayoutAnimation(android.view.animation.LayoutAnimationController); }
-keepclassmembers class android.view.ViewGroup { void setAnimationCacheEnabled(boolean); }
-keepclassmembers class android.animation.FloatKeyframeSet { java.lang.Object getValue(float); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.FloatKeyframeSet clone(); }
-keepclassmembers class android.animation.FloatKeyframeSet { void invalidateCache(); }
-keepclassmembers class android.view.ViewGroup { void setAlwaysDrawnWithCacheEnabled(boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$34 { void run(); }
-keepclassmembers class java.nio.charset.UnmappableCharacterException { void <init>(int); }
-keepclassmembers class java.nio.charset.UnmappableCharacterException { java.lang.String getMessage(); }
-keepclassmembers class android.view.ViewGroup { void setChildrenDrawnWithCacheEnabled(boolean); }
-keepclassmembers class android.animation.FloatKeyframeSet { float getFloatValue(float); }
-keepclassmembers class android.view.ViewGroup { boolean isChildrenDrawingOrderEnabled(); }
-keepclassmembers class android.text.AndroidBidi { int bidi(int,char[],byte[],int,boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.Downsampler$2 { void <init>(); }
-keepclassmembers class android.text.AndroidBidi { android.text.Layout$Directions directions(int,byte[],int,char[],int,int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavUtils { java.lang.String processException(java.lang.Throwable); }
-keepclassmembers class android.view.ViewGroup { void setPersistentDrawingCache(int); }
-keepclassmembers class android.view.ViewGroup { boolean hasBooleanFlag(int); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int,boolean); }
-keepclassmembers class android.view.ViewGroup { void setBooleanFlag(int,boolean); }
-keepclassmembers class java.util.Formatter { void transformF(java.lang.StringBuilder); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(android.graphics.drawable.VectorDrawable$VGroup,android.util.ArrayMap); }
-keepclassmembers class java.util.TreeMap$Bound$2 { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.ViewGroup { void invalidateInheritedLayoutMode(int); }
-keepclassmembers class android.widget.TextView { android.text.Layout makeSingleLayout(int,android.text.BoringLayout$Metrics,int,android.text.Layout$Alignment,boolean,android.text.TextUtils$TruncateAt,boolean); }
-keepclassmembers class android.view.ViewGroup { void setLayoutMode(int); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.view.ViewGroup { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class java.util.Formatter { void transformA(java.lang.StringBuilder); }
-keepclassmembers class android.animation.FloatKeyframeSet { android.animation.Keyframes clone(); }
-keepclassmembers class android.transition.Transition$1 { void <init>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECPrivateKey { com.android.org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.ECPrivateKey,com.android.org.conscrypt.OpenSSLECGroupContext); }
-keepclassmembers class java.util.Formatter { void <clinit>(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECPrivateKey { com.android.org.conscrypt.OpenSSLKey wrapPlatformKey(java.security.interfaces.ECPrivateKey); }
-keepclassmembers class android.view.ViewGroup { int indexOfChild(android.view.View); }
-keepclassmembers class android.view.ViewGroup { int getChildCount(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLECPrivateKey { void <init>(com.android.org.conscrypt.OpenSSLKey); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void <init>(); }
-keepclassmembers class android.view.ViewGroup { void measureChildren(int,int); }
-keepclassmembers class org.apache.http.impl.conn.SingleClientConnManager$ConnAdapter { void <init>(org.apache.http.impl.conn.SingleClientConnManager,org.apache.http.impl.conn.SingleClientConnManager$PoolEntry,org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class android.view.ViewGroup { android.view.View getChildAt(int); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[],byte[]); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { java.lang.String getGroupName(); }
-keepclassmembers class android.view.ViewGroup { void measureChild(android.view.View,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[]); }
-keepclassmembers class android.text.AndroidBidi { int runBidi(int,char[],byte[],int,boolean); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <init>(java.lang.String,byte[],byte[],org.apache.harmony.security.x509.OtherName$1); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void setFlagForThreadsInCache(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class android.database.sqlite.SQLiteQuery { void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,android.os.CancellationSignal); }
-keepclassmembers class android.view.ViewGroup { void measureChildWithMargins(android.view.View,int,int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { java.lang.String access$100(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.database.sqlite.SQLiteQuery { int fillWindow(android.database.CursorWindow,int,int,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { byte[] access$200(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void setFlagInCache(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.OtherName { void <clinit>(); }
-keepclassmembers class android.view.ViewGroup { int getChildMeasureSpec(int,int,int); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void setFlagSynchronous(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean,boolean); }
-keepclassmembers class java.nio.charset.CodingErrorAction { void <clinit>(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$4 { void onClick(android.view.View); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { boolean canApplyTheme(); }
-keepclassmembers class org.apache.james.mime4j.stream.DefaultFieldBuilder { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.text.format.Formatter { java.lang.String formatFileSize(android.content.Context,long); }
-keepclassmembers class android.text.format.Formatter { java.lang.String formatFileSize(android.content.Context,long,boolean); }
-keepclassmembers class org.apache.james.mime4j.stream.DefaultFieldBuilder { void <init>(int); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { void updateLocalMatrix(); }
-keepclassmembers class org.apache.james.mime4j.stream.DefaultFieldBuilder { void append(org.apache.james.mime4j.util.ByteArrayBuffer); }
-keepclassmembers class android.view.ViewGroup { void clearDisappearingChildren(); }
-keepclassmembers class org.apache.james.mime4j.stream.DefaultFieldBuilder { org.apache.james.mime4j.stream.RawField build(); }
-keepclassmembers class android.view.ViewGroup { void finishAnimatingView(android.view.View,android.view.animation.Animation); }
-keepclassmembers class java.lang.Object { java.lang.String toString(); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$4 { void <init>(com.github.amlcurran.showcaseview.ShowcaseView); }
-keepclassmembers class android.database.sqlite.SQLiteQuery { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.Account { void deleteCertificate(java.lang.String,int,com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection); }
-keepclassmembers class android.widget.TextView { boolean compressText(float); }
-keepclassmembers class android.view.ViewGroup { void addDisappearingView(android.view.View); }
-keepclassmembers class android.view.ViewGroup { boolean isViewTransitioning(android.view.View); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean shouldImportMessage(com.fsck.k9.Account,com.fsck.k9.mail.Message,java.util.Date); }
-keepclassmembers class org.apache.james.mime4j.stream.DefaultFieldBuilder { org.apache.james.mime4j.util.ByteArrayBuffer getRaw(); }
-keepclassmembers class org.apache.james.mime4j.stream.DefaultFieldBuilder { void reset(); }
-keepclassmembers class android.text.style.SuggestionSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.ViewGroup { void startViewTransition(android.view.View); }
-keepclassmembers class android.widget.TextView { int desired(android.text.Layout); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean shouldNotifyForMessage(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mail.Message); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Request request(); }
-keepclassmembers class com.android.okhttp.Response { java.lang.String statusLine(); }
-keepclassmembers class android.widget.TextView { void setIncludeFontPadding(boolean); }
-keepclassmembers class com.fsck.k9.Account { void excludeSpecialFolders(com.fsck.k9.search.LocalSearch); }
-keepclassmembers class android.view.ViewGroup { void endViewTransition(android.view.View); }
-keepclassmembers class com.android.okhttp.Response { int code(); }
-keepclassmembers class com.fsck.k9.Account { void excludeUnwantedFolders(com.fsck.k9.search.LocalSearch); }
-keepclassmembers class com.android.okhttp.Response { java.lang.String statusMessage(); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { int access$100(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class com.fsck.k9.Account { boolean equals(java.lang.Object); }
-keepclassmembers class com.android.okhttp.Response { int httpMinorVersion(); }
-keepclassmembers class com.android.okhttp.Response { void <init>(com.android.okhttp.Response$Builder); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.graphics.Matrix access$600(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class android.widget.TextView { void onMeasure(int,int); }
-keepclassmembers class com.android.okhttp.Response { java.lang.String header(java.lang.String); }
-keepclassmembers class android.graphics.drawable.VectorDrawable$VGroup { android.graphics.Matrix access$700(android.graphics.drawable.VectorDrawable$VGroup); }
-keepclassmembers class com.android.okhttp.Response { java.lang.String header(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.service.PushService { void <clinit>(); }
-keepclassmembers class com.fsck.k9.service.PushService { void <init>(); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Headers headers(); }
-keepclassmembers class com.fsck.k9.service.PushService { void startService(android.content.Context); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response$Body body(); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response$Builder newBuilder(); }
-keepclassmembers class com.fsck.k9.service.PushService { void stopService(android.content.Context); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Handshake handshake(); }
-keepclassmembers class com.fsck.k9.Account { int getAccountNumber(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Identity findIdentity(com.fsck.k9.mail.Address); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getAlwaysBcc(); }
-keepclassmembers class com.fsck.k9.service.PushService { void onCreate(); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getAutoExpandFolderName(); }
-keepclassmembers class com.fsck.k9.service.PushService { int startService(android.content.Intent,int); }
-keepclassmembers class android.view.ViewGroup { void requestTransparentRegion(android.view.View); }
-keepclassmembers class com.fsck.k9.service.PushService { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getArchiveFolderName(); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getCryptoApp(); }
-keepclassmembers class com.android.okhttp.Response { boolean validate(com.android.okhttp.Response); }
-keepclassmembers class com.fsck.k9.Account { long getCryptoKey(); }
-keepclassmembers class com.fsck.k9.Account { boolean getCryptoSupportSignOnly(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$DeletePolicy getDeletePolicy(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$Orientation,int[]); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getDescription(); }
-keepclassmembers class com.fsck.k9.Account { int getDisplayCount(); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response$ParsedHeaders parsedHeaders(); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getDraftsFolderName(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$1 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class com.fsck.k9.Account { java.util.Date getEarliestPollDate(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$1 { void handleMessage(android.os.Message); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.CacheControl cacheControl(); }
-keepclassmembers class android.app.SearchDialog$4 { void <init>(android.app.SearchDialog); }
-keepclassmembers class android.view.ViewGroup { void drawableStateChanged(); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Request access$1100(com.android.okhttp.Response); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.internal.http.StatusLine access$1200(com.android.okhttp.Response); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Handshake access$1300(com.android.okhttp.Response); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Headers access$1400(com.android.okhttp.Response); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response$Body access$1500(com.android.okhttp.Response); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void <init>(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response access$1600(com.android.okhttp.Response); }
-keepclassmembers class android.content.ContentProvider$Transport { void <init>(android.content.ContentProvider); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response access$1700(com.android.okhttp.Response); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getEmail(); }
-keepclassmembers class com.android.okhttp.Response { com.android.okhttp.Response access$1800(com.android.okhttp.Response); }
-keepclassmembers class android.view.ViewGroup { void jumpDrawablesToCurrentState(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$Expunge getExpungePolicy(); }
-keepclassmembers class android.view.ViewGroup { int[] onCreateDrawableState(int); }
-keepclassmembers class com.fsck.k9.Account { int getAutomaticCheckIntervalMinutes(); }
-keepclassmembers class com.fsck.k9.Account { int getChipColor(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$FolderMode getFolderDisplayMode(); }
-keepclassmembers class android.text.style.SuggestionSpan { void <clinit>(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoAnnotations { void <init>(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$FolderMode getFolderNotifyNewMailMode(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoAnnotations { com.fsck.k9.mail.Part findKeyForAnnotationWithReplacementPart(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$FolderMode getFolderPushMode(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$FolderMode getFolderSyncMode(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void showFetchingMailNotificationIfNecessary(com.fsck.k9.Account,com.fsck.k9.mail.Folder); }
-keepclassmembers class android.view.ViewGroup { void setAddStatesFromChildren(boolean); }
-keepclassmembers class com.android.okhttp.Response { void <init>(com.android.okhttp.Response$Builder,com.android.okhttp.Response$1); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getErrorFolderName(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$FolderMode getFolderTargetMode(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void showSendingNotificationIfNecessary(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.Account { java.util.List getIdentities(); }
-keepclassmembers class android.view.ViewGroup { void childDrawableStateChanged(android.view.View); }
-keepclassmembers class android.widget.ProgressBar$RefreshProgressRunnable { void <init>(android.widget.ProgressBar); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Identity getIdentity(int); }
-keepclassmembers class android.widget.ProgressBar$RefreshProgressRunnable { void <init>(android.widget.ProgressBar,android.widget.ProgressBar$1); }
-keepclassmembers class android.view.ViewGroup { void requestTransitionStart(android.animation.LayoutTransition); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoAnnotations { boolean has(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean syncFlags(com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.mail.Message); }
-keepclassmembers class android.view.ViewGroup { boolean resolveRtlPropertiesIfNeeded(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoAnnotations { com.fsck.k9.mailstore.CryptoResultAnnotation get(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void suppressMessages(com.fsck.k9.Account,java.util.List); }
-keepclassmembers class org.ccil.cowan.tagsoup.HTMLSchema { void <init>(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoAnnotations { boolean isEmpty(); }
-keepclassmembers class com.fsck.k9.ui.crypto.MessageCryptoAnnotations { void put(com.fsck.k9.mail.Part,com.fsck.k9.mailstore.CryptoResultAnnotation); }
-keepclassmembers class java.lang.Boolean { void <init>(java.lang.String); }
-keepclassmembers class android.view.ViewGroup { boolean resolveLayoutDirection(); }
-keepclassmembers class java.lang.Boolean { boolean booleanValue(); }
-keepclassmembers class com.fsck.k9.Account { int getIdleRefreshMinutes(); }
-keepclassmembers class java.lang.Boolean { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextDirection(); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Boolean); }
-keepclassmembers class android.view.ViewGroup { boolean resolveTextAlignment(); }
-keepclassmembers class java.lang.Boolean { void <init>(boolean); }
-keepclassmembers class java.lang.Boolean { int compare(boolean,boolean); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getLocalStorageProviderId(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.mailstore.LocalStore getLocalStore(); }
-keepclassmembers class java.lang.Boolean { int hashCode(); }
-keepclassmembers class android.view.ViewGroup { void resolvePadding(); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getInboxFolderName(); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getLastSelectedFolderName(); }
-keepclassmembers class com.fsck.k9.Account { int getMaxPushFolders(); }
-keepclassmembers class java.lang.Boolean { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.Account { int getMaximumAutoDownloadMessageSize(); }
-keepclassmembers class android.view.ViewGroup { void resolveDrawables(); }
-keepclassmembers class com.fsck.k9.Account { long getLatestOldMessageSeenTime(); }
-keepclassmembers class com.fsck.k9.Account { int getMaximumPolledMessageAge(); }
-keepclassmembers class java.lang.Boolean { boolean parseBoolean(java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$MessageFormat getMessageFormat(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void synchronizeFolder(com.fsck.k9.Account,com.fsck.k9.mail.Folder,boolean,long,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class java.lang.Boolean { java.lang.String toString(boolean); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getName(); }
-keepclassmembers class android.view.ViewGroup { void resolveLayoutParams(); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getOpenPgpProvider(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class java.lang.Boolean { java.lang.Boolean valueOf(boolean); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class java.lang.Boolean { int compareTo(java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextDirection(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { boolean canApplyTheme(); }
-keepclassmembers class android.widget.TextView { int getDesiredHeight(android.text.Layout,boolean); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getOutboxFolderName(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { int getChangingConfigurations(); }
-keepclassmembers class java.util.ServiceLoader { void <init>(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class java.lang.Boolean { void <clinit>(); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getQuotePrefix(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedTextAlignment(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.NotificationSetting getNotificationSetting(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedLayoutDirection(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$QuoteStyle getQuoteStyle(); }
-keepclassmembers class com.fsck.k9.Account { int getRemoteSearchNumResults(); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createAccelerateDecelerateInterpolator(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.mail.Store getRemoteStore(); }
-keepclassmembers class android.text.util.Linkify$4 { void <init>(); }
-keepclassmembers class java.util.ServiceLoader { void reload(); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(android.text.util.LinkSpec,android.text.util.LinkSpec); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$Searchable getSearchableFolders(); }
-keepclassmembers class java.util.ServiceLoader { java.util.Iterator iterator(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedPadding(); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getSentFolderName(); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLutInterpolator(float[]); }
-keepclassmembers class com.android.internal.app.ToolbarActionBar$1 { void <init>(com.android.internal.app.ToolbarActionBar); }
-keepclassmembers class android.widget.TextView { void checkForResize(); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$ShowPictures getShowPictures(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setColors(int[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setColorStateList(android.content.res.ColorStateList); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getSignature(); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class); }
-keepclassmembers class android.view.ViewGroup { boolean shouldDelayChildPressedState(); }
-keepclassmembers class java.util.ServiceLoader { void internalLoad(); }
-keepclassmembers class android.view.ViewGroup { void resetResolvedDrawables(); }
-keepclassmembers class java.util.ServiceLoader { java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader); }
-keepclassmembers class com.android.internal.view.animation.NativeInterpolatorFactoryHelper { long createLinearInterpolator(); }
-keepclassmembers class android.view.ViewGroup { boolean onStartNestedScroll(android.view.View,android.view.View,int); }
-keepclassmembers class com.fsck.k9.Account { boolean getSignatureUse(); }
-keepclassmembers class android.view.ViewGroup { void onNestedScrollAccepted(android.view.View,android.view.View,int); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.Account$SortType getSortType(); }
-keepclassmembers class android.view.ViewGroup { void onStopNestedScroll(android.view.View); }
-keepclassmembers class android.widget.TextView { void checkForRelayout(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void computeOpacity(); }
-keepclassmembers class android.text.util.Linkify$4 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getSpamFolderName(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setStroke(int,android.content.res.ColorStateList,float,float); }
-keepclassmembers class com.fsck.k9.Account { com.fsck.k9.AccountStats getStats(android.content.Context); }
-keepclassmembers class android.view.ViewGroup { void onNestedPreScroll(android.view.View,int,int,int[]); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadius(float); }
-keepclassmembers class java.util.ServiceLoader { java.util.Set access$200(java.util.ServiceLoader); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void unsuppressMessages(com.fsck.k9.Account,java.util.List); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedFling(android.view.View,float,float,boolean); }
-keepclassmembers class android.view.ViewGroup { void onNestedScroll(android.view.View,int,int,int,int); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void setCornerRadii(float[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void updateMoreMessages(com.fsck.k9.mail.Folder,com.fsck.k9.mailstore.LocalFolder,java.util.Date,int); }
-keepclassmembers class android.view.ViewGroup { boolean onNestedPreFling(android.view.View,float,float); }
-keepclassmembers class java.util.ServiceLoader { java.lang.ClassLoader access$000(java.util.ServiceLoader); }
-keepclassmembers class java.util.ServiceLoader { java.lang.Class access$100(java.util.ServiceLoader); }
-keepclassmembers class android.view.ViewGroup { void onSetLayoutParams(android.view.View,android.view.ViewGroup$LayoutParams); }
-keepclassmembers class android.widget.TextView { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { void <init>(android.view.View); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getStoreUri(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$ArrivalComparator { void <init>(); }
-keepclassmembers class android.widget.TextView { boolean isShowingHint(); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getTransportUri(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$ArrivalComparator { int compare(android.database.Cursor,android.database.Cursor); }
-keepclassmembers class android.view.ViewGroup { android.graphics.Paint getDebugPaint(); }
-keepclassmembers class android.view.ViewGroup { int getNestedScrollAxes(); }
-keepclassmembers class com.github.amlcurran.showcaseview.OnShowcaseEventListener { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean verifyOrCreateRemoteSpecialFolder(com.fsck.k9.Account,java.lang.String,com.fsck.k9.mail.Folder,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { boolean onTouch(android.view.View,android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getTrashFolderName(); }
-keepclassmembers class android.widget.TextView { boolean bringTextIntoView(); }
-keepclassmembers class android.view.ViewGroup { void drawRect(android.graphics.Canvas,android.graphics.Paint,int,int,int,int); }
-keepclassmembers class org.apache.http.conn.util.InetAddressUtils { boolean isIPv4Address(java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { boolean goToUnreadMessageSearch(); }
-keepclassmembers class com.fsck.k9.Account { boolean hasArchiveFolder(); }
-keepclassmembers class org.apache.http.conn.util.InetAddressUtils { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.GradientDrawable$GradientState { void access$000(android.graphics.drawable.GradientDrawable$GradientState); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void addErrorMessage(com.fsck.k9.Account,java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.Account { boolean hasDraftsFolder(); }
-keepclassmembers class android.app.FragmentManagerImpl { void <init>(); }
-keepclassmembers class javax.net.ssl.HandshakeCompletedEvent { void <init>(javax.net.ssl.SSLSocket,javax.net.ssl.SSLSession); }
-keepclassmembers class com.fsck.k9.Account { boolean hasSentFolder(); }
-keepclassmembers class com.fsck.k9.Account { boolean hasSpamFolder(); }
-keepclassmembers class android.app.FragmentManagerImpl { void throwException(java.lang.RuntimeException); }
-keepclassmembers class android.widget.TextView { boolean bringPointIntoView(int); }
-keepclassmembers class com.fsck.k9.Account { boolean hasTrashFolder(); }
-keepclassmembers class android.view.ViewGroup { boolean access$302(android.view.ViewGroup,boolean); }
-keepclassmembers class android.view.ViewGroup { boolean access$300(android.view.ViewGroup); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String getUuid(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$ArrivalComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.view.ViewGroup { java.util.ArrayList access$400(android.view.ViewGroup); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void <init>(java.lang.ClassLoader); }
-keepclassmembers class android.view.ViewGroup { void access$500(android.graphics.Canvas,int,int,int,int,int,int,int,int,android.graphics.Paint); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseForClass(java.lang.reflect.GenericDeclaration,java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { void onViewAttachedToWindow(android.view.View); }
-keepclassmembers class com.fsck.k9.Account { boolean isAnIdentity(com.fsck.k9.mail.Address[]); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { void onViewDetachedFromWindow(android.view.View); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.FragmentTransaction beginTransaction(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean executePendingTransactions(); }
-keepclassmembers class android.view.ViewGroup { void <clinit>(); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void setInput(java.lang.reflect.GenericDeclaration,java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { int hashCode(); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean popBackStackImmediate(); }
-keepclassmembers class android.app.FragmentManagerImpl { void popBackStack(java.lang.String,int); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseForMethod(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { boolean onForwardingStopped(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class com.fsck.k9.Account { boolean isDefaultQuotedTextShown(); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { boolean onTouchObserved(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11 { void onDownloadErrorMessageNotFound(); }
-keepclassmembers class com.fsck.k9.Account { boolean isEnabled(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11 { void onDownloadErrorNetworkError(); }
-keepclassmembers class android.app.FragmentManagerImpl { void popBackStack(); }
-keepclassmembers class android.app.FragmentManagerImpl { void popBackStack(int,int); }
-keepclassmembers class com.fsck.k9.Account { boolean isMarkMessageAsReadOnView(); }
-keepclassmembers class com.fsck.k9.Account { boolean isAvailable(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11 { void onMessageDataLoadFailed(); }
-keepclassmembers class com.fsck.k9.Account { boolean isNotifyContactsMailOnly(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11 { void onMessageDataLoadFinished(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void addListener(com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean popBackStackImmediate(int,int); }
-keepclassmembers class com.fsck.k9.Account { boolean isMessageReadReceiptAlways(); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseForConstructor(java.lang.reflect.GenericDeclaration,java.lang.String,java.lang.Class[]); }
-keepclassmembers class com.fsck.k9.Account { boolean isNotifyNewMail(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11 { void onMessageViewInfoLoadFailed(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class com.fsck.k9.Account { boolean isNotifySelfNewMail(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void cancelNotificationForMessage(com.fsck.k9.Account,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.fsck.k9.Account { boolean isOpenPgpProviderConfigured(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11 { void onMessageViewInfoLoadFinished(com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class android.app.FragmentManagerImpl { int getBackStackEntryCount(); }
-keepclassmembers class com.fsck.k9.Account { boolean isPushPollOnConnect(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void cancelNotificationsForAccount(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.Account { boolean isRemoteSearchFullText(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11 { void startIntentSenderForMessageLoaderHelper(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class com.bumptech.glide.RequestManager$OptionsApplier { void <init>(com.bumptech.glide.RequestManager); }
-keepclassmembers class android.app.FragmentManagerImpl { void addOnBackStackChangedListener(android.app.FragmentManager$OnBackStackChangedListener); }
-keepclassmembers class com.bumptech.glide.RequestManager$OptionsApplier { com.bumptech.glide.GenericRequestBuilder apply(com.bumptech.glide.GenericRequestBuilder); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$11 { void setLoadingProgress(int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void checkMail(android.content.Context,com.fsck.k9.Account,boolean,boolean,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.Account { boolean isReplyAfterQuote(); }
-keepclassmembers class com.fsck.k9.Account { boolean isSearchByDateCapable(); }
-keepclassmembers class com.fsck.k9.Account { boolean isRingNotified(); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { void clearCallbacks(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$2 { void <init>(com.fsck.k9.activity.FolderList$FolderListHandler,java.util.List); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseClassSignature(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$2 { void run(); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseOptFormalTypeParameters(); }
-keepclassmembers class com.fsck.k9.Account { boolean isSignatureBeforeQuotedText(); }
-keepclassmembers class android.app.FragmentManagerImpl { void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { void <init>(com.android.i18n.phonenumbers.RegexCache$LRUCache,int,float,boolean); }
-keepclassmembers class com.fsck.k9.Account { boolean isSortAscending(com.fsck.k9.Account$SortType); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { libcore.reflect.TypeVariableImpl parseFormalTypeParameter(); }
-keepclassmembers class com.android.i18n.phonenumbers.RegexCache$LRUCache$1 { boolean removeEldestEntry(java.util.Map$Entry); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void clear(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.Account { boolean isShowOngoing(); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.Fragment getFragment(android.os.Bundle,java.lang.String); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { void <init>(android.widget.RelativeLayout); }
-keepclassmembers class android.widget.ListPopupWindow$ForwardingListener { boolean onTouchForwarded(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.Account { boolean isSpecialFolder(java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void clearAllPending(com.fsck.k9.Account); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { java.lang.reflect.Type parseFieldTypeSignature(); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { int compare(android.view.View,android.view.View); }
-keepclassmembers class android.widget.TextView { boolean moveCursorToVisibleOffset(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void clearCertificateErrorNotifications(com.fsck.k9.Account,com.fsck.k9.activity.setup.AccountSetupCheckSettings$CheckDirection); }
-keepclassmembers class com.fsck.k9.Account { boolean isAlwaysShowCcBcc(); }
-keepclassmembers class com.fsck.k9.Account { boolean isStripSignature(); }
-keepclassmembers class com.fsck.k9.Account { boolean isAnIdentity(com.fsck.k9.mail.Address); }
-keepclassmembers class com.fsck.k9.Account { void limitToDisplayableFolders(com.fsck.k9.search.LocalSearch); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void compact(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$22 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,android.content.Context,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.widget.RelativeLayout$TopToBottomLeftToRightComparator { void <init>(android.widget.RelativeLayout,android.widget.RelativeLayout$1); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean isDestroyed(); }
-keepclassmembers class libcore.net.UriCodec { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { java.lang.String toString(); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String validate(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void copyMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.activity.MessageReference,java.lang.String); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { libcore.reflect.ListOfTypes parseOptTypeArguments(); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { java.lang.reflect.Type parseClassTypeSignature(); }
-keepclassmembers class com.fsck.k9.Account { void move(com.fsck.k9.Preferences,boolean); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { void <init>(); }
-keepclassmembers class android.widget.TextView { void getInterestingRect(android.graphics.Rect,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$22 { void run(); }
-keepclassmembers class android.widget.TextView { void computeScroll(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void copyMessages(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String); }
-keepclassmembers class android.widget.TextView { void convertFromViewportToContentCoordinates(android.graphics.Rect); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { java.lang.reflect.Type parseTypeArgument(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void deleteAccount(com.fsck.k9.Account); }
-keepclassmembers class android.widget.TextView { int viewportToContentHorizontalOffset(); }
-keepclassmembers class android.widget.TextView { int viewportToContentVerticalOffset(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void copyMessagesInThread(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void debugClearMessagesLocally(java.util.List); }
-keepclassmembers class com.fsck.k9.Account { void save(com.fsck.k9.Preferences); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { libcore.reflect.TypeVariableImpl parseTypeVariableSignature(); }
-keepclassmembers class libcore.net.UriCodec { void validateSimple(java.lang.String,java.lang.String); }
-keepclassmembers class libcore.net.UriCodec { void appendEncoded(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset,boolean); }
-keepclassmembers class android.widget.ActivityChooserModel$PersistHistoryAsyncTask { java.lang.Void doInBackground(java.lang.Object[]); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { java.lang.reflect.Type parseTypeSignature(); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void parseMethodTypeSignature(java.lang.Class[]); }
-keepclassmembers class android.widget.TextView { int getSelectionStart(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void deleteDraft(com.fsck.k9.Account,long); }
-keepclassmembers class java.beans.PropertyChangeSupport { void <init>(java.lang.Object); }
-keepclassmembers class android.widget.TextView { boolean hasSelection(); }
-keepclassmembers class android.widget.AbsListView$CheckForTap { void <init>(android.widget.AbsListView,android.widget.AbsListView$1); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void deleteMessage(com.fsck.k9.activity.MessageReference,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.TextView { void setSingleLine(boolean); }
-keepclassmembers class android.widget.TextView { int getSelectionEnd(); }
-keepclassmembers class java.beans.PropertyChangeSupport { void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object); }
-keepclassmembers class android.widget.TextView { void setInputTypeSingleLine(boolean); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String encode(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { java.lang.reflect.Type parseReturnType(); }
-keepclassmembers class android.widget.TextView { void applySingleLine(boolean,boolean,boolean); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void scanSymbol(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void deleteThreads(java.util.List); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String decode(java.lang.String,boolean,java.nio.charset.Charset,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void deleteMessages(java.util.List,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class libcore.net.UriCodec { void appendEncoded(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void emptyTrash(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.TextView { void setEllipsize(android.text.TextUtils$TruncateAt); }
-keepclassmembers class android.widget.TextView { void setMarqueeRepeatLimit(int); }
-keepclassmembers class libcore.net.UriCodec { void appendPartiallyEncoded(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void expunge(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class android.widget.TextView { android.text.TextUtils$TruncateAt getEllipsize(); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { boolean isStopSymbol(char); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void scanIdentifier(); }
-keepclassmembers class android.widget.TextView { void setCursorVisible(boolean); }
-keepclassmembers class libcore.reflect.GenericSignatureParser { void expect(char); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode { void <init>(com.bumptech.glide.manager.RequestManagerFragment); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { com.fsck.k9.controller.MessagingListener getCheckMailListener(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void getFolderUnreadMessageCount(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.TextView { boolean canMarquee(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void getAccountStats(android.content.Context,com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode { void <init>(com.bumptech.glide.manager.RequestManagerFragment,com.bumptech.glide.manager.RequestManagerFragment$1); }
-keepclassmembers class java.util.EmptyStackException { void <init>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { long getId(com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$1 { void <init>(com.fsck.k9.ui.messageview.AttachmentController); }
-keepclassmembers class android.widget.TextView { void startMarquee(); }
-keepclassmembers class libcore.net.UriCodec { int hexToInt(char); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.util.Set getListeners(); }
-keepclassmembers class com.fsck.k9.ui.messageview.AttachmentController$1 { void run(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.util.Set getListeners(com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class libcore.net.UriCodec { java.lang.String decode(java.lang.String); }
-keepclassmembers class libcore.net.UriCodec { void appendHex(java.lang.StringBuilder,java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class libcore.net.UriCodec { void appendHex(java.lang.StringBuilder,byte); }
-keepclassmembers class android.view.ViewConfiguration { void <init>(); }
-keepclassmembers class android.widget.TextView { void startStopMarquee(boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.util.Collection getPushers(); }
-keepclassmembers class android.widget.TextView { void stopMarquee(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void getSearchAccountStats(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.TextView { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { void <init>(android.widget.SpinnerAdapter); }
-keepclassmembers class android.widget.TextView { void onSelectionChanged(int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { com.fsck.k9.AccountStats getSearchAccountStatsSynchronous(com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean); }
-keepclassmembers class android.widget.TextView { void addTextChangedListener(android.text.TextWatcher); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { int getCount(); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.widget.TextView { void sendBeforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.view.ViewConfiguration { void <init>(android.content.Context); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { java.lang.Object getItem(int); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.app.FragmentManagerImpl { android.animation.Animator loadAnimator(android.app.Fragment,int,boolean,int); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { void doFormatValue(org.apache.http.util.CharArrayBuffer,java.lang.String,boolean); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { boolean hasStableIds(); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { void registerDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { void unregisterDataSetObserver(android.database.DataSetObserver); }
-keepclassmembers class android.widget.TextView { void removeIntersectingNonAdjacentSpans(int,int,java.lang.Class); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { long getItemId(int); }
-keepclassmembers class android.widget.TextView { void removeTextChangedListener(android.text.TextWatcher); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { int estimateNameValuePairLen(org.apache.http.NameValuePair); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { boolean isEnabled(int); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { int getItemViewType(int); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { int getViewTypeCount(); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { boolean isSeparator(char); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { boolean isEmpty(); }
-keepclassmembers class android.widget.Spinner$DropDownAdapter { boolean areAllItemsEnabled(); }
-keepclassmembers class java.util.zip.Inflater { void <init>(); }
-keepclassmembers class android.widget.ActivityChooserModel$PersistHistoryAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.app.FragmentManagerImpl { void performPendingDeferredStart(android.app.Fragment); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { boolean isUnsafe(char); }
-keepclassmembers class android.widget.TextView { void removeAdjacentSuggestionSpans(int); }
-keepclassmembers class java.util.zip.Inflater { void <init>(boolean); }
-keepclassmembers class java.util.zip.Inflater { long createStream(boolean); }
-keepclassmembers class java.beans.PropertyChangeSupport { void firePropertyChange(java.beans.PropertyChangeEvent); }
-keepclassmembers class android.graphics.Bitmap$Config { android.graphics.Bitmap$Config[] values(); }
-keepclassmembers class android.graphics.Bitmap$Config { void <init>(java.lang.String,int,int); }
-keepclassmembers class java.util.zip.Inflater { void end(); }
-keepclassmembers class java.util.zip.Inflater { void endImpl(long); }
-keepclassmembers class android.view.ViewConfiguration { android.view.ViewConfiguration get(android.content.Context); }
-keepclassmembers class android.graphics.Bitmap$Config { void <clinit>(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void handleAuthenticationFailure(com.fsck.k9.Account,boolean); }
-keepclassmembers class java.util.zip.Inflater { int getRemaining(); }
-keepclassmembers class java.util.zip.Inflater { boolean finished(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean isCopyCapable(com.fsck.k9.Account); }
-keepclassmembers class java.beans.PropertyChangeSupport { void <clinit>(); }
-keepclassmembers class java.util.zip.Inflater { int getCurrentOffset(); }
-keepclassmembers class android.widget.TextView { void sendOnTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledScrollBarSize(); }
-keepclassmembers class android.widget.TextView { void sendAfterTextChanged(android.text.Editable); }
-keepclassmembers class org.apache.http.message.BasicHeaderValueFormatter { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(android.app.Fragment,int,int,int,boolean); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollBarFadeDuration(); }
-keepclassmembers class android.view.ViewConfiguration { int getScrollDefaultDelay(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean isMoveCapable(com.fsck.k9.Account); }
-keepclassmembers class java.util.zip.Inflater { int getTotalOut(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledFadingEdgeLength(); }
-keepclassmembers class android.view.ViewConfiguration { int getPressedStateDuration(); }
-keepclassmembers class java.util.jar.ManifestReader { void <init>(byte[],java.util.jar.Attributes); }
-keepclassmembers class android.view.ViewConfiguration { int getLongPressTimeout(); }
-keepclassmembers class android.widget.TextView { void updateAfterEdit(); }
-keepclassmembers class java.util.zip.Inflater { long getTotalOutImpl(long); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean isMoveCapable(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class org.apache.http.client.protocol.RequestProxyAuthentication { void <init>(); }
-keepclassmembers class android.view.ViewConfiguration { int getTapTimeout(); }
-keepclassmembers class java.util.zip.Inflater { int inflate(byte[],int,int); }
-keepclassmembers class android.view.ViewConfiguration { int getDoubleTapTimeout(); }
-keepclassmembers class android.widget.TextView { void handleTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean isCopyCapable(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class java.util.jar.ManifestReader { void readEntries(java.util.Map,java.util.Map); }
-keepclassmembers class org.apache.http.client.protocol.RequestProxyAuthentication { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void listFoldersSynchronous(com.fsck.k9.Account,boolean,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.view.ViewConfiguration { int getTouchSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledTouchSlop(); }
-keepclassmembers class java.util.IllegalFormatFlagsException { void <init>(java.lang.String); }
-keepclassmembers class java.util.zip.Inflater { int inflateImpl(byte[],int,int,long); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapTouchSlop(); }
-keepclassmembers class java.util.zip.Inflater { boolean needsDictionary(); }
-keepclassmembers class java.util.zip.Inflater { boolean needsInput(); }
-keepclassmembers class java.util.IllegalFormatFlagsException { java.lang.String getMessage(); }
-keepclassmembers class android.view.ViewConfiguration { int getDoubleTapSlop(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledDoubleTapSlop(); }
-keepclassmembers class android.view.ViewConfiguration { long getSendRecurringAccessibilityEventsInterval(); }
-keepclassmembers class android.view.ViewConfiguration { int getMinimumFlingVelocity(); }
-keepclassmembers class java.util.zip.Inflater { void reset(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMinimumFlingVelocity(); }
-keepclassmembers class java.util.zip.Inflater { void resetImpl(long); }
-keepclassmembers class java.util.zip.Inflater { void setDictionary(byte[]); }
-keepclassmembers class android.view.ViewConfiguration { int getMaximumFlingVelocity(); }
-keepclassmembers class android.view.ViewConfiguration { int getDoubleTapMinTime(); }
-keepclassmembers class java.util.zip.Inflater { void setDictionary(byte[],int,int); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMaximumFlingVelocity(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void listFolders(com.fsck.k9.Account,boolean,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverscrollDistance(); }
-keepclassmembers class java.util.zip.Inflater { void setDictionaryImpl(byte[],int,int,long); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledMaximumDrawingCacheSize(); }
-keepclassmembers class java.util.jar.ManifestReader { boolean readHeader(); }
-keepclassmembers class java.util.jar.ManifestReader { int getEndOfMainSection(); }
-keepclassmembers class android.view.ViewConfiguration { int getScaledOverflingDistance(); }
-keepclassmembers class org.apache.http.message.BasicHttpRequest { void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion); }
-keepclassmembers class android.view.ViewConfiguration { boolean isFadingMarqueeEnabled(); }
-keepclassmembers class android.view.ViewConfiguration { float getScrollFriction(); }
-keepclassmembers class java.util.zip.Inflater { void setInput(byte[],int,int); }
-keepclassmembers class java.util.zip.Inflater { void setInputImpl(byte[],int,int,long); }
-keepclassmembers class java.util.jar.ManifestReader { void readName(); }
-keepclassmembers class org.apache.http.message.BasicHttpRequest { void <init>(org.apache.http.RequestLine); }
-keepclassmembers class android.view.ViewConfiguration { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$32 { void colorChanged(int); }
-keepclassmembers class java.util.zip.Inflater { int setFileInput(java.io.FileDescriptor,long,int); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView); }
-keepclassmembers class java.util.zip.Inflater { int setFileInputImpl(java.io.FileDescriptor,long,int,long); }
-keepclassmembers class android.widget.AdapterView$SelectionNotifier { void <init>(android.widget.AdapterView,android.widget.AdapterView$1); }
-keepclassmembers class java.util.jar.ManifestReader { void readValue(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$32 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class java.util.zip.Inflater { void checkOpen(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$NotificationCompatImplApi21 { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationCompat$BuilderExtender); }
-keepclassmembers class org.apache.http.message.BasicHttpRequest { org.apache.http.RequestLine getRequestLine(); }
-keepclassmembers class android.widget.Spinner$2 { void <init>(android.widget.Spinner); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void loadAttachment(com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.mail.Part,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(int,int,int,boolean); }
-keepclassmembers class android.widget.TextView { void dispatchFinishTemporaryDetach(); }
-keepclassmembers class com.fsck.k9.search.SqlQueryBuilder { java.lang.String addPrefixToSelection(java.lang.String[],java.lang.String,java.lang.String); }
-keepclassmembers class android.widget.TextView { void onStartTemporaryDetach(); }
-keepclassmembers class android.app.FragmentManagerImpl { void moveToState(android.app.Fragment); }
-keepclassmembers class com.fsck.k9.search.SqlQueryBuilder { void appendCondition(com.fsck.k9.search.SearchSpecification$SearchCondition,java.lang.StringBuilder,java.util.List); }
-keepclassmembers class android.widget.TextView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.search.SqlQueryBuilder { void appendExprRight(com.fsck.k9.search.SearchSpecification$SearchCondition,java.lang.StringBuilder,java.util.List); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { com.fsck.k9.mailstore.LocalMessage loadMessage(com.fsck.k9.Account,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.io.IOUtils { void <clinit>(); }
-keepclassmembers class org.apache.commons.io.IOUtils { void closeQuietly(java.io.Closeable); }
-keepclassmembers class android.widget.TextView { void onFinishTemporaryDetach(); }
-keepclassmembers class android.app.FragmentManagerImpl { void startPendingDeferredFragments(); }
-keepclassmembers class android.widget.TextView { void onWindowFocusChanged(boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void loadMessageRemote(com.fsck.k9.Account,java.lang.String,java.lang.String,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class org.apache.commons.io.IOUtils { void closeQuietly(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void loadMessageRemotePartial(com.fsck.k9.Account,java.lang.String,java.lang.String,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class org.apache.commons.io.IOUtils { void closeQuietly(java.io.OutputStream); }
-keepclassmembers class android.widget.TextView { void onVisibilityChanged(android.view.View,int); }
-keepclassmembers class android.app.FragmentManagerImpl { void makeActive(android.app.Fragment); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void loadMoreMessages(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.TextView { void clearComposingText(); }
-keepclassmembers class android.app.FragmentManagerImpl { void makeInactive(android.app.Fragment); }
-keepclassmembers class android.widget.TextView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class org.apache.commons.io.IOUtils { void closeQuietly(java.io.Reader); }
-keepclassmembers class org.apache.commons.io.IOUtils { void closeQuietly(java.net.Socket); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void loadSearchResults(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.app.FragmentManagerImpl { void addFragment(android.app.Fragment,boolean); }
-keepclassmembers class com.fsck.k9.search.SqlQueryBuilder { void buildWhereClauseInternal(com.fsck.k9.Account,com.fsck.k9.search.ConditionsTreeNode,java.lang.StringBuilder,java.util.List); }
-keepclassmembers class android.widget.TextView { void setSelected(boolean); }
-keepclassmembers class com.fsck.k9.search.SqlQueryBuilder { void buildWhereClause(com.fsck.k9.Account,com.fsck.k9.search.ConditionsTreeNode,java.lang.StringBuilder,java.util.List); }
-keepclassmembers class android.app.FragmentManagerImpl { void removeFragment(android.app.Fragment,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void markAllMessagesRead(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void messagesArrived(com.fsck.k9.Account,com.fsck.k9.mail.Folder,java.util.List,boolean); }
-keepclassmembers class org.apache.commons.io.IOUtils { int copy(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class org.apache.commons.io.IOUtils { int copy(java.io.Reader,java.io.Writer); }
-keepclassmembers class android.app.FragmentManagerImpl { void hideFragment(android.app.Fragment,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void moveMessage(com.fsck.k9.Account,java.lang.String,com.fsck.k9.activity.MessageReference,java.lang.String); }
-keepclassmembers class org.apache.commons.io.IOUtils { void copy(java.io.InputStream,java.io.Writer,java.nio.charset.Charset); }
-keepclassmembers class org.apache.commons.io.IOUtils { long copyLarge(java.io.InputStream,java.io.OutputStream); }
-keepclassmembers class com.fsck.k9.search.SqlQueryBuilder { java.lang.String getColumnName(com.fsck.k9.search.SearchSpecification$SearchCondition); }
-keepclassmembers class android.app.FragmentManagerImpl { void showFragment(android.app.Fragment,int,int); }
-keepclassmembers class android.widget.TextView { boolean onGenericMotionEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void moveMessagesInThread(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean isTextEditable(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void notifyUserIfCertificateProblem(com.fsck.k9.Account,java.lang.Exception,boolean); }
-keepclassmembers class android.app.FragmentManagerImpl { void detachFragment(android.app.Fragment,int,int); }
-keepclassmembers class android.widget.TextView { boolean didTouchFocusSelect(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void moveMessages(com.fsck.k9.Account,java.lang.String,java.util.List,java.lang.String); }
-keepclassmembers class com.fsck.k9.search.SqlQueryBuilder { long getFolderId(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void recreate(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.TextView { void cancelLongPress(); }
-keepclassmembers class com.fsck.k9.search.SqlQueryBuilder { boolean isNumberColumn(com.fsck.k9.search.SearchSpecification$SearchField); }
-keepclassmembers class org.apache.commons.io.IOUtils { long copyLarge(java.io.InputStream,java.io.OutputStream,byte[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void refreshListener(com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.TextView { boolean onTrackballEvent(android.view.MotionEvent); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSink { void <init>(com.android.okhttp.internal.http.HttpConnection,long); }
-keepclassmembers class org.apache.commons.io.IOUtils { long copyLarge(java.io.Reader,java.io.Writer); }
-keepclassmembers class android.app.FragmentManagerImpl { void attachFragment(android.app.Fragment,int,int); }
-keepclassmembers class libcore.icu.DateIntervalFormat$FormatterCache { void entryEvicted(java.lang.String,java.lang.Long); }
-keepclassmembers class android.widget.TextView { float getLeftFadingEdgeStrength(); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.Fragment findFragmentById(int); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSink { void close(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void refreshRemoteSynchronous(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSink { void <init>(com.android.okhttp.internal.http.HttpConnection,long,com.android.okhttp.internal.http.HttpConnection$1); }
-keepclassmembers class android.widget.TextView { float getRightFadingEdgeStrength(); }
-keepclassmembers class libcore.icu.DateIntervalFormat$FormatterCache { void <init>(); }
-keepclassmembers class android.widget.TextView { int computeHorizontalScrollRange(); }
-keepclassmembers class libcore.icu.DateIntervalFormat$FormatterCache { void entryEvicted(java.lang.Object,java.lang.Object); }
-keepclassmembers class android.app.FragmentManagerImpl { void checkStateLoss(); }
-keepclassmembers class android.app.FragmentManagerImpl { void enqueueAction(java.lang.Runnable,boolean); }
-keepclassmembers class android.app.FragmentManagerImpl { int allocBackStackIndex(android.app.BackStackRecord); }
-keepclassmembers class android.app.FragmentManagerImpl { android.app.Fragment findFragmentByTag(java.lang.String); }
-keepclassmembers class org.apache.commons.io.IOUtils { long copyLarge(java.io.Reader,java.io.Writer,char[]); }
-keepclassmembers class android.widget.TextView { boolean onKeyShortcut(int,android.view.KeyEvent); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollRange(); }
-keepclassmembers class android.database.ContentObservable { void <init>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void setBackStackIndex(int,android.app.BackStackRecord); }
-keepclassmembers class android.database.ContentObservable { void registerObserver(android.database.ContentObserver); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(boolean); }
-keepclassmembers class android.widget.TextView { int computeVerticalScrollExtent(); }
-keepclassmembers class android.widget.TextView { java.util.Locale getTextServicesLocale(); }
-keepclassmembers class android.widget.TextView { boolean canSelectText(); }
-keepclassmembers class android.widget.TextView { boolean textCanBeSelected(); }
-keepclassmembers class android.widget.TextView { java.util.Locale getSpellCheckerLocale(); }
-keepclassmembers class android.widget.TextView { void updateTextServicesLocaleAsync(); }
-keepclassmembers class android.widget.TextView { android.text.method.WordIterator getWordIterator(); }
-keepclassmembers class android.widget.TextView { void updateTextServicesLocaleLocked(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { com.fsck.k9.mail.Message saveDraft(com.fsck.k9.Account,com.fsck.k9.mail.Message,long,boolean); }
-keepclassmembers class android.widget.TextView { boolean shouldSpeakPasswordsForAccessibility(); }
-keepclassmembers class android.widget.TextView { void onLocaleChanged(); }
-keepclassmembers class android.widget.TextView { void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.app.FragmentManagerImpl { void freeBackStackIndex(int); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class com.fsck.k9.Account { void setAllowRemoteSearch(boolean); }
-keepclassmembers class com.fsck.k9.Account { void setAlwaysBcc(java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { void setAlwaysShowCcBcc(boolean); }
-keepclassmembers class android.widget.TextView { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean execPendingActions(); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$2 { void <init>(com.fsck.k9.view.FoldableLinearLayout); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$2 { void onAnimationEnd(android.view.animation.Animation); }
-keepclassmembers class com.fsck.k9.Account { void setArchiveFolderName(java.lang.String); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$2 { void onAnimationRepeat(android.view.animation.Animation); }
-keepclassmembers class com.fsck.k9.view.FoldableLinearLayout$2 { void onAnimationStart(android.view.animation.Animation); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$18 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.lang.String,java.lang.String,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void searchLocalMessages(com.fsck.k9.search.LocalSearch,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.Account { void setAutoExpandFolderName(java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void removeListener(com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.Account { boolean setAutomaticCheckIntervalMinutes(int); }
-keepclassmembers class java.util.Timer$TimerImpl { void <init>(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void searchLocalMessagesSynchronous(com.fsck.k9.search.LocalSearch,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.app.FragmentManagerImpl { void reportBackStackChanged(); }
-keepclassmembers class com.fsck.k9.Account { void setCompression(com.fsck.k9.mail.NetworkType,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$18 { void run(); }
-keepclassmembers class com.fsck.k9.Account { void setCryptoKey(long); }
-keepclassmembers class com.fsck.k9.Account { void setCryptoApp(java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { void setChipColor(int); }
-keepclassmembers class java.util.EnumMap$Entry { void <init>(java.lang.Enum,java.lang.Object,java.util.EnumMap); }
-keepclassmembers class com.fsck.k9.Account { void setCryptoSupportSignOnly(boolean); }
-keepclassmembers class android.app.FragmentManagerImpl { void addBackStackState(android.app.BackStackRecord); }
-keepclassmembers class android.app.FragmentManagerImpl { boolean popBackStackState(android.os.Handler,java.lang.String,int,int); }
-keepclassmembers class com.fsck.k9.Account { void setDeletePolicy(com.fsck.k9.Account$DeletePolicy); }
-keepclassmembers class com.fsck.k9.Account { void setDescription(java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { void setDefaultQuotedTextShown(boolean); }
-keepclassmembers class java.util.EnumMap$Entry { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { void <init>(org.apache.http.HttpRequest); }
-keepclassmembers class android.widget.TextView$BufferType { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { java.util.concurrent.Future searchRemoteMessages(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.Account { void setDraftsFolderName(java.lang.String); }
-keepclassmembers class java.util.EnumMap$Entry { int hashCode(); }
-keepclassmembers class com.fsck.k9.Account { void setEmail(java.lang.String); }
-keepclassmembers class android.widget.TextView$BufferType { void <clinit>(); }
-keepclassmembers class com.fsck.k9.Account { void setDisplayCount(int); }
-keepclassmembers class com.fsck.k9.Account { void setEnabled(boolean); }
-keepclassmembers class android.speech.tts.TextToSpeech { java.lang.Object access$900(android.speech.tts.TextToSpeech); }
-keepclassmembers class com.fsck.k9.Account { void setExpungePolicy(com.fsck.k9.Account$Expunge); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void searchRemoteMessagesSynchronous(java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class java.util.Timer$TimerImpl { void insertTask(java.util.TimerTask); }
-keepclassmembers class java.util.EnumMap$Entry { java.lang.Enum getKey(); }
-keepclassmembers class android.speech.tts.TextToSpeech { android.os.Bundle access$700(android.speech.tts.TextToSpeech); }
-keepclassmembers class java.util.Timer$TimerImpl { boolean access$400(java.util.Timer$TimerImpl); }
-keepclassmembers class android.widget.TextView { void sendAccessibilityEvent(int); }
-keepclassmembers class com.fsck.k9.Account { boolean setFolderDisplayMode(com.fsck.k9.Account$FolderMode); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTextForAccessibility(); }
-keepclassmembers class java.util.EnumMap$Entry { java.lang.Object getValue(); }
-keepclassmembers class java.util.Timer$TimerImpl { void access$500(java.util.Timer$TimerImpl,java.util.TimerTask); }
-keepclassmembers class com.fsck.k9.Account { void setFolderNotifyNewMailMode(com.fsck.k9.Account$FolderMode); }
-keepclassmembers class android.widget.TextView { void sendAccessibilityEventTypeViewTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { void resetHeaders(); }
-keepclassmembers class com.fsck.k9.Account { boolean setFolderPushMode(com.fsck.k9.Account$FolderMode); }
-keepclassmembers class java.util.Collections$EmptyList { int size(); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$Attribute { void <clinit>(); }
-keepclassmembers class java.util.EnumMap$Entry { java.lang.String toString(); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { org.apache.http.ProtocolVersion getProtocolVersion(); }
-keepclassmembers class java.util.Collections$EmptyList { boolean contains(java.lang.Object); }
-keepclassmembers class java.util.Collections$EmptyList { java.lang.Object get(int); }
-keepclassmembers class android.widget.TextView { boolean onTextContextMenuItem(int); }
-keepclassmembers class com.fsck.k9.Account { boolean setFolderSyncMode(com.fsck.k9.Account$FolderMode); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { java.net.URI getURI(); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { void setURI(java.net.URI); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { java.lang.String getMethod(); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$Attribute { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.EnumMap$Entry { void checkEntryStatus(); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { org.apache.http.RequestLine getRequestLine(); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getTransformedText(int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameModelLoader$GifFrameDataFetcher { void <init>(com.bumptech.glide.gifdecoder.GifDecoder); }
-keepclassmembers class com.github.amlcurran.showcaseview.targets.Target { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameModelLoader$GifFrameDataFetcher { void cancel(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameModelLoader$GifFrameDataFetcher { void cleanup(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameModelLoader$GifFrameDataFetcher { java.lang.String getId(); }
-keepclassmembers class com.fsck.k9.Account { void setFolderTargetMode(com.fsck.k9.Account$FolderMode); }
-keepclassmembers class android.widget.TextView { void onScrollChanged(int,int,int,int); }
-keepclassmembers class java.util.Collections$EmptyList { void <init>(java.util.Collections$1); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool { com.bumptech.glide.load.engine.bitmap_recycle.Poolable get(); }
-keepclassmembers class com.fsck.k9.Account { void setGoToUnreadMessageSearch(boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameModelLoader$GifFrameDataFetcher { java.lang.Object loadData(com.bumptech.glide.Priority); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { org.apache.http.HttpRequest getOriginal(); }
-keepclassmembers class android.widget.TextView { boolean isSuggestionsEnabled(); }
-keepclassmembers class com.fsck.k9.search.SearchSpecification$Attribute { com.fsck.k9.search.SearchSpecification$Attribute[] values(); }
-keepclassmembers class java.util.EnumMap$Entry { java.lang.Object getKey(); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { boolean isRepeatable(); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { int getExecCount(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifFrameModelLoader$GifFrameDataFetcher { com.bumptech.glide.gifdecoder.GifDecoder loadData(com.bumptech.glide.Priority); }
-keepclassmembers class org.apache.http.impl.client.RequestWrapper { void incrementExecCount(); }
-keepclassmembers class com.fsck.k9.Account { void setIdleRefreshMinutes(int); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool { void offer(com.bumptech.glide.load.engine.bitmap_recycle.Poolable); }
-keepclassmembers class android.app.FragmentManagerImpl { android.os.Bundle saveFragmentBasicState(android.app.Fragment); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { void <init>(); }
-keepclassmembers class android.widget.Filter$RequestHandler { void <init>(android.widget.Filter,android.os.Looper); }
-keepclassmembers class android.app.FragmentManagerImpl { void saveFragmentViewState(android.app.Fragment); }
-keepclassmembers class com.bumptech.glide.manager.NullConnectivityMonitor { void <init>(); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { void appendValue(com.fsck.k9.message.IdentityField,int); }
-keepclassmembers class com.bumptech.glide.manager.NullConnectivityMonitor { void onStop(); }
-keepclassmembers class com.fsck.k9.Account { void setInboxFolderName(java.lang.String); }
-keepclassmembers class android.widget.Filter$RequestHandler { void handleMessage(android.os.Message); }
-keepclassmembers class org.apache.commons.codec.binary.Base64 { byte[] encodeBase64(byte[]); }
-keepclassmembers class com.bumptech.glide.manager.NullConnectivityMonitor { void onDestroy(); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { void appendValue(com.fsck.k9.message.IdentityField,java.lang.Enum); }
-keepclassmembers class com.bumptech.glide.manager.NullConnectivityMonitor { void onStart(); }
-keepclassmembers class android.widget.TextView { void stopSelectionActionMode(); }
-keepclassmembers class com.fsck.k9.Account { void setLastSelectedFolderName(java.lang.String); }
-keepclassmembers class android.widget.TextView { boolean canCut(); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { void appendValue(com.fsck.k9.message.IdentityField,java.lang.Integer); }
-keepclassmembers class android.widget.TextView { boolean canCopy(); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { void appendValue(com.fsck.k9.message.IdentityField,java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { void setLatestOldMessageSeenTime(long); }
-keepclassmembers class com.fsck.k9.Account { void setLocalStorageProviderId(java.lang.String); }
-keepclassmembers class org.apache.commons.codec.binary.Base64 { byte[] encodeBase64(byte[],boolean); }
-keepclassmembers class android.widget.TextView { void paste(int,int); }
-keepclassmembers class android.app.FragmentManagerImpl { android.os.Parcelable saveAllState(); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { java.lang.String build(); }
-keepclassmembers class android.widget.TextView { boolean canPaste(); }
-keepclassmembers class android.widget.TextView { boolean selectAllText(); }
-keepclassmembers class android.widget.TextView { void setPrimaryClip(android.content.ClipData); }
-keepclassmembers class com.fsck.k9.Account { void setMarkMessageAsReadOnView(boolean); }
-keepclassmembers class com.fsck.k9.Account { boolean setMaxPushFolders(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void <init>(org.ccil.cowan.tagsoup.ElementType,boolean); }
-keepclassmembers class android.widget.TextView { int getOffsetForPosition(float,float); }
-keepclassmembers class com.fsck.k9.Account { void setMaximumPolledMessageAge(int); }
-keepclassmembers class android.widget.TextView { float convertToLocalHorizontalCoordinate(float); }
-keepclassmembers class com.fsck.k9.Account { void setMaximumAutoDownloadMessageSize(int); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.io.InputStream,java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { void setMessageReadReceipt(boolean); }
-keepclassmembers class com.fsck.k9.Account { void setMessageFormat(com.fsck.k9.Account$MessageFormat); }
-keepclassmembers class org.apache.commons.io.IOUtils { java.lang.String toString(java.io.InputStream,java.nio.charset.Charset); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void setNext(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class com.fsck.k9.Account { void setName(java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { void setNotifyContactsMailOnly(boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.AttributesImpl atts(); }
-keepclassmembers class com.fsck.k9.ui.compose.QuotedMessageMvpView$1 { void <init>(com.fsck.k9.ui.compose.QuotedMessageMvpView); }
-keepclassmembers class android.widget.TextView { int getLineAtCoordinate(float); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String name(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.Element next(); }
-keepclassmembers class android.widget.TextView { int getOffsetAtCoordinate(int,float); }
-keepclassmembers class android.widget.TextView { boolean onDragEvent(android.view.DragEvent); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$17 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class com.fsck.k9.Account { void setNotifySelfNewMail(boolean); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { int model(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$6 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String localName(); }
-keepclassmembers class com.fsck.k9.Account { void setPushPollOnConnect(boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$6 { void <init>(com.fsck.k9.mailstore.LocalStore,java.util.List); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { java.lang.String namespace(); }
-keepclassmembers class com.fsck.k9.Account { void setNotifyNewMail(boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$6 { java.util.List doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { int flags(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { boolean canContain(org.ccil.cowan.tagsoup.Element); }
-keepclassmembers class com.fsck.k9.Account { void setQuoteStyle(com.fsck.k9.Account$QuoteStyle); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void sendAlternate(android.content.Context,com.fsck.k9.Account,com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { org.ccil.cowan.tagsoup.ElementType parent(); }
-keepclassmembers class android.widget.TextView { void onRtlPropertiesChanged(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$17 { void run(); }
-keepclassmembers class com.fsck.k9.Account { void setQuotePrefix(java.lang.String); }
-keepclassmembers class android.widget.TextView { android.text.TextDirectionHeuristic getTextDirectionHeuristic(); }
-keepclassmembers class java.lang.reflect.Proxy { void <init>(java.lang.reflect.InvocationHandler); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void anonymize(); }
-keepclassmembers class com.fsck.k9.Account { void setReplyAfterQuote(boolean); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class getProxyClass(java.lang.ClassLoader,java.lang.Class[]); }
-keepclassmembers class android.app.FragmentManagerImpl { void restoreAllState(android.os.Parcelable,java.util.ArrayList); }
-keepclassmembers class com.fsck.k9.Account { void setRingNotified(boolean); }
-keepclassmembers class com.fsck.k9.Account { void setSearchableFolders(com.fsck.k9.Account$Searchable); }
-keepclassmembers class android.widget.TextView { void onResolveDrawables(int); }
-keepclassmembers class com.fsck.k9.Account { void setRemoteSearchNumResults(int); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void setAttribute(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.reflect.Proxy { void <init>(); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setBody(com.fsck.k9.mail.internet.TextBody); }
-keepclassmembers class android.widget.TextView { void viewClicked(android.view.inputmethod.InputMethodManager); }
-keepclassmembers class android.widget.TextView { void resetResolvedDrawables(); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void clean(); }
-keepclassmembers class com.fsck.k9.Account { void setShowOngoing(boolean); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setCursorPosition(int); }
-keepclassmembers class android.widget.TextView { void replaceText_internal(int,int,java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setBodyPlain(com.fsck.k9.mail.internet.TextBody); }
-keepclassmembers class android.widget.TextView { void deleteText_internal(int,int); }
-keepclassmembers class com.fsck.k9.Account { void setSentFolderName(java.lang.String); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { void preclose(); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setIdentity(com.fsck.k9.Identity); }
-keepclassmembers class org.ccil.cowan.tagsoup.Element { boolean isPreclosed(); }
-keepclassmembers class com.fsck.k9.Account { void setShowPictures(com.fsck.k9.Account$ShowPictures); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void <init>(android.app.Activity,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,boolean); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setIdentityChanged(boolean); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setMessageFormat(com.fsck.k9.message.SimpleMessageFormat); }
-keepclassmembers class com.fsck.k9.Account { void setSignature(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FitCenter { void <init>(android.content.Context); }
-keepclassmembers class android.widget.TextView { void createEditorIfNeeded(); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setMessageReference(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.fsck.k9.Account { void setSignatureBeforeQuotedText(boolean); }
-keepclassmembers class android.widget.TextView { java.lang.CharSequence getIterableTextForAccessibility(); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setQuoteStyle(com.fsck.k9.Account$QuoteStyle); }
-keepclassmembers class com.fsck.k9.Account { void setSignatureUse(boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FitCenter { android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setQuoteTextMode(com.fsck.k9.message.QuotedTextMode); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.app.SharedElementCallback getListener(android.app.Activity,boolean); }
-keepclassmembers class com.fsck.k9.Account { void setSortAscending(com.fsck.k9.Account$SortType,boolean); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setSignature(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setQuotedHtmlContent(com.fsck.k9.message.InsertableHtmlContent); }
-keepclassmembers class com.fsck.k9.Account { void setSortType(com.fsck.k9.Account$SortType); }
-keepclassmembers class com.fsck.k9.message.IdentityHeaderBuilder { com.fsck.k9.message.IdentityHeaderBuilder setSignatureChanged(boolean); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionStart(); }
-keepclassmembers class android.widget.TextView { int getAccessibilitySelectionEnd(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FitCenter { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.FitCenter { java.lang.String getId(); }
-keepclassmembers class android.widget.TextView { void access$200(android.widget.TextView); }
-keepclassmembers class com.fsck.k9.Account { void setStoreUri(java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { void setStripSignature(boolean); }
-keepclassmembers class com.fsck.k9.Account { void setSubscribedFoldersOnly(boolean); }
-keepclassmembers class com.fsck.k9.Account { void setSpamFolderName(java.lang.String); }
-keepclassmembers class android.widget.TextView { android.content.Context access$900(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { boolean access$1000(int); }
-keepclassmembers class android.widget.TextView { android.text.Layout access$800(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { boolean access$1100(android.widget.TextView); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void sendMessage(com.fsck.k9.Account,com.fsck.k9.mail.Message,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void delayCancel(); }
-keepclassmembers class android.widget.TextView { boolean access$1200(android.widget.TextView); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void stopCancel(); }
-keepclassmembers class com.fsck.k9.Account { void setTransportUri(java.lang.String); }
-keepclassmembers class android.widget.TextView { android.content.Context access$1400(android.widget.TextView); }
-keepclassmembers class com.fsck.k9.Account { void setSyncRemoteDeletions(boolean); }
-keepclassmembers class com.fsck.k9.Account { void setTrashFolderName(java.lang.String); }
-keepclassmembers class com.fsck.k9.Account { boolean subscribedFoldersOnly(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void sendPendingMessages(com.fsck.k9.Account,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.fsck.k9.Account { boolean syncRemoteDeletions(); }
-keepclassmembers class java.security.KeyStore { void <init>(java.security.KeyStoreSpi,java.security.Provider,java.lang.String); }
-keepclassmembers class android.widget.TextView$Marquee { void <init>(android.widget.TextView); }
-keepclassmembers class android.widget.TextView { void access$1300(android.widget.TextView,java.lang.CharSequence,int,int,int); }
-keepclassmembers class org.apache.commons.codec.binary.Base64 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.Account { java.lang.String toString(); }
-keepclassmembers class java.security.KeyStore { void throwNotInitialized(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void sendPendingMessages(com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class android.widget.TextView { void <clinit>(); }
-keepclassmembers class com.fsck.k9.Account { boolean useCompression(com.fsck.k9.mail.NetworkType); }
-keepclassmembers class java.security.KeyStore { java.security.KeyStore getInstance(java.lang.String); }
-keepclassmembers class android.widget.TextView$Marquee { void tick(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void setCheckMailListener(com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class java.lang.reflect.Proxy { boolean isVisibleToClassLoader(java.lang.ClassLoader,java.lang.Class); }
-keepclassmembers class android.widget.TextView$Marquee { void stop(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask { void <init>(java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.Runnable,java.lang.Object,long); }
-keepclassmembers class android.view.WindowManagerGlobal { void <init>(); }
-keepclassmembers class android.widget.TextView$Marquee { void resetScroll(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void setFlag(com.fsck.k9.Account,java.lang.String,java.lang.String,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class android.widget.TextView$Marquee { void start(int); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler); }
-keepclassmembers class android.graphics.drawable.shapes.RectShape { void <init>(); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.WindowManagerGlobal getInstance(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.CenterCrop { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.CenterCrop { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowManager getWindowManagerService(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.CenterCrop { android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.CenterCrop { java.lang.String getId(); }
-keepclassmembers class android.app.FragmentManagerImpl { void noteStateNotSaved(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void startExit(int,android.content.Intent); }
-keepclassmembers class java.security.KeyStore { java.lang.String getDefaultType(); }
-keepclassmembers class android.app.FragmentManagerImpl { void attachActivity(android.app.Activity,android.app.FragmentContainer,android.app.Fragment); }
-keepclassmembers class android.graphics.drawable.shapes.RectShape { void onResize(float,float); }
-keepclassmembers class android.widget.TextView$Marquee { float getScroll(); }
-keepclassmembers class android.widget.TextView$Marquee { float getGhostOffset(); }
-keepclassmembers class android.widget.TextView$Marquee { float getMaxFadeScroll(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void setFlag(com.fsck.k9.Account,java.lang.String,java.util.List,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchActivityCreated(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchCreate(); }
-keepclassmembers class android.widget.TextView$Marquee { boolean shouldDrawLeftFade(); }
-keepclassmembers class android.widget.TextView$Marquee { boolean shouldDrawGhost(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchStart(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void stop(); }
-keepclassmembers class android.graphics.drawable.shapes.RectShape { android.graphics.drawable.shapes.RectShape clone(); }
-keepclassmembers class android.graphics.drawable.shapes.RectShape { android.graphics.RectF rect(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchPause(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchResume(); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.reflect.InvocationHandler getInvocationHandler(java.lang.Object); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void startExitTransition(); }
-keepclassmembers class android.view.WindowManagerGlobal { android.view.IWindowSession peekWindowSession(); }
-keepclassmembers class java.lang.reflect.Proxy { boolean isProxyClass(java.lang.Class); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchStop(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask { long getDelay(java.util.concurrent.TimeUnit); }
-keepclassmembers class android.widget.TextView$Marquee { boolean isRunning(); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil$Encoding { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchDestroyView(); }
-keepclassmembers class android.widget.TextView$Marquee { boolean isStopped(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void <init>(long); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List getMethods(java.lang.Class[]); }
-keepclassmembers class android.view.ViewRootImpl { boolean isInTouchMode(); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { long get(); }
-keepclassmembers class android.app.FragmentManagerImpl { void dispatchDestroy(); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask { int compareTo(java.util.concurrent.Delayed); }
-keepclassmembers class android.widget.TextView$Marquee { android.view.Choreographer access$600(android.widget.TextView$Marquee); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void release(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void fadeOutBackground(); }
-keepclassmembers class android.widget.TextView$Marquee { byte access$402(android.widget.TextView$Marquee,byte); }
-keepclassmembers class android.widget.TextView$Marquee { long access$502(android.widget.TextView$Marquee,long); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nIncStrong(long); }
-keepclassmembers class com.android.internal.util.VirtualRefBasePtr { void nDecStrong(long); }
-keepclassmembers class java.security.KeyStore { void setCertificateEntry(java.lang.String,java.security.cert.Certificate); }
-keepclassmembers class android.widget.TextView$Marquee { byte access$400(android.widget.TextView$Marquee); }
-keepclassmembers class android.widget.TextView$Marquee { int access$700(android.widget.TextView$Marquee); }
-keepclassmembers class java.security.KeyStore { void deleteEntry(java.lang.String); }
-keepclassmembers class android.widget.TextView$Marquee { int access$710(android.widget.TextView$Marquee); }
-keepclassmembers class org.apache.james.mime4j.codec.EncoderUtil$Encoding { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$2 { void <init>(com.fsck.k9.activity.setup.AccountSetupCheckSettings,int,java.lang.Object[]); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask { boolean isPeriodic(); }
-keepclassmembers class java.lang.reflect.Proxy { void getMethodsRecursive(java.lang.Class[],java.util.List); }
-keepclassmembers class java.util.logging.LogManager$1 { void run(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.transition.Transition getExitTransition(); }
-keepclassmembers class java.util.logging.LogManager$1 { void <init>(java.util.logging.LogManager); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$34 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$34 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask { void setNextRunTime(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupCheckSettings$2 { void run(); }
-keepclassmembers class java.lang.reflect.Proxy { void validateReturnTypes(java.util.List); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { java.lang.Object[] getSpans(int,int,java.lang.Class); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { void <init>(java.lang.CharSequence); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask { boolean cancel(boolean); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask { void run(); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanEnd(java.lang.Object); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask { int compareTo(java.lang.Object); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanStart(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees,byte[]); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int getSpanFlags(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.MessageWebView { void <init>(android.content.Context); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask { void access$201(java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask); }
-keepclassmembers class android.text.Layout$SpannedEllipsizer { int nextSpanTransition(int,int,java.lang.Class); }
-keepclassmembers class java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask { boolean access$301(java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { org.apache.harmony.security.x509.NameConstraints decode(byte[]); }
-keepclassmembers class com.fsck.k9.view.MessageWebView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.view.MessageWebView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.view.MessageWebView { void disableDisplayZoomControls(); }
-keepclassmembers class java.security.KeyStore { void store(java.io.OutputStream,char[]); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void exitTransitionComplete(); }
-keepclassmembers class java.lang.reflect.Proxy { java.util.List deduplicateAndGetExceptions(java.util.List); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key { void <init>(com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { void <init>(); }
-keepclassmembers class com.fsck.k9.view.MessageWebView { void setHtmlContent(java.lang.String); }
-keepclassmembers class java.security.KeyStore { void load(java.io.InputStream,char[]); }
-keepclassmembers class com.fsck.k9.view.MessageWebView { void setWebViewClient(com.fsck.k9.mailstore.AttachmentResolver,com.fsck.k9.view.MessageWebView$OnPageFinishedListener); }
-keepclassmembers class android.app.INotificationManager$Stub$Proxy { void enqueueToast(java.lang.String,android.app.ITransientNotification,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean isReadyToNotify(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { void assertNotDestroyed(android.app.Activity); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { com.bumptech.glide.manager.RequestManagerRetriever get(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { com.bumptech.glide.RequestManager getApplicationManager(android.content.Context); }
-keepclassmembers class com.fsck.k9.view.MessageWebView { void blockNetworkData(boolean); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.MessageWebView { void configure(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void setFlag(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void setFlagForThreads(com.fsck.k9.Account,java.util.List,com.fsck.k9.mail.Flag,boolean); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class[] intersectExceptions(java.lang.Class[],java.lang.Class[]); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key { int hashCode(); }
-keepclassmembers class com.fsck.k9.view.MessageWebView { void displayHtmlContentWithInlineAttachments(java.lang.String,com.fsck.k9.mailstore.AttachmentResolver,com.fsck.k9.view.MessageWebView$OnPageFinishedListener); }
-keepclassmembers class android.app.FragmentManagerImpl { int reverseTransit(int); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key { void init(int,int,android.graphics.Bitmap$Config); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { boolean setupPushing(com.fsck.k9.Account); }
-keepclassmembers class android.app.FragmentManagerImpl { int transitToStyleIndex(int,boolean); }
-keepclassmembers class android.app.FragmentManagerImpl { void invalidateOptionsMenu(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void notifyComplete(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager); }
-keepclassmembers class android.os.Bundle$1 { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key { void offer(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { com.bumptech.glide.RequestManager get(android.app.Activity); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings$OptionalEmailAddressSetting { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase$StorageListener { void <init>(com.fsck.k9.mailstore.LockableDatabase,com.fsck.k9.mailstore.LockableDatabase$1); }
-keepclassmembers class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase$StorageListener { void <init>(com.fsck.k9.mailstore.LockableDatabase); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void finishIfNecessary(); }
-keepclassmembers class java.lang.reflect.Proxy { java.lang.Class generateProxy(java.lang.String,java.lang.Class[],java.lang.ClassLoader,java.lang.reflect.ArtMethod[],java.lang.Class[][]); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings$OptionalEmailAddressSetting { java.lang.Object fromString(java.lang.String); }
-keepclassmembers class java.lang.reflect.Proxy { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase$StorageListener { void onMount(java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings$OptionalEmailAddressSetting { java.lang.Object fromPrettyString(java.lang.String); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { com.bumptech.glide.RequestManager get(android.content.Context); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void finish(); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings$OptionalEmailAddressSetting { java.lang.String toPrettyString(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.gifencoder.NeuQuant { void <init>(byte[],int,int); }
-keepclassmembers class java.security.KeyStore { void <clinit>(); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { void <init>(android.content.Context); }
-keepclassmembers class com.bumptech.glide.gifencoder.NeuQuant { void alterneigh(int,int,int,int,int); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean moveSharedElementWithParent(); }
-keepclassmembers class com.fsck.k9.preferences.IdentitySettings$OptionalEmailAddressSetting { java.lang.String toString(java.lang.Object); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { com.android.internal.util.NotificationColorUtil getInstance(android.content.Context); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.transition.Transition getViewsTransition(); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { boolean isGrayscaleIcon(android.graphics.Bitmap); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { com.bumptech.glide.RequestManager get(android.support.v4.app.FragmentActivity); }
-keepclassmembers class com.fsck.k9.mailstore.LockableDatabase$StorageListener { void onUnmount(java.lang.String); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$502(android.app.ExitTransitionCoordinator,boolean); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(android.support.v4.app.FragmentManager); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager); }
-keepclassmembers class android.transition.Recolor { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { boolean isGrayscaleIcon(android.graphics.drawable.Drawable); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$500(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.transition.Recolor { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Recolor { void <init>(); }
-keepclassmembers class android.app.ExitTransitionCoordinator { android.animation.ObjectAnimator access$902(android.app.ExitTransitionCoordinator,android.animation.ObjectAnimator); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$700(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$600(android.app.ExitTransitionCoordinator); }
-keepclassmembers class android.app.ExitTransitionCoordinator { void access$800(android.app.ExitTransitionCoordinator); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { boolean isGrayscaleIcon(android.content.Context,int); }
-keepclassmembers class android.widget.PopupWindow$1 { void <init>(android.widget.PopupWindow); }
-keepclassmembers class android.transition.Recolor { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Recolor { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class com.bumptech.glide.gifencoder.NeuQuant { void altersingle(int,int,int,int,int); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { boolean handleMessage(android.os.Message); }
-keepclassmembers class android.app.ExitTransitionCoordinator { boolean access$1002(android.app.ExitTransitionCoordinator,boolean); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { java.lang.CharSequence invertCharSequenceColors(java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.bumptech.glide.gifencoder.NeuQuant { byte[] colorMap(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void stopAllPushing(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$20 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$20 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$20 { void <init>(com.fsck.k9.mailstore.LocalStore,com.fsck.k9.mailstore.LocalStore$BatchSetSelection,java.lang.StringBuilder,java.util.List); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { android.text.style.TextAppearanceSpan processTextAppearanceSpan(android.text.style.TextAppearanceSpan); }
-keepclassmembers class android.app.FragmentManagerImpl { void <clinit>(); }
-keepclassmembers class android.app.FragmentManagerImpl { android.view.LayoutInflater$Factory2 getLayoutInflaterFactory(); }
-keepclassmembers class com.bumptech.glide.manager.RequestManagerRetriever { com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,android.support.v4.app.FragmentManager); }
-keepclassmembers class com.bumptech.glide.gifencoder.NeuQuant { int contest(int,int,int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void synchronizeMailbox(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void synchronizeMailboxSynchronous(com.fsck.k9.Account,java.lang.String,com.fsck.k9.controller.MessagingListener,com.fsck.k9.mail.Folder); }
-keepclassmembers class org.htmlcleaner.BaseTokenImpl { void <init>(); }
-keepclassmembers class android.database.AbstractCursor$SelfContentObserver { void <init>(android.database.AbstractCursor); }
-keepclassmembers class android.view.inputmethod.ExtractedText$1 { void <init>(); }
-keepclassmembers class org.htmlcleaner.BaseTokenImpl { int getCol(); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { void <clinit>(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$EntrySetView { void <init>(java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class org.htmlcleaner.BaseTokenImpl { void <init>(int,int); }
-keepclassmembers class org.htmlcleaner.BaseTokenImpl { void setRow(int); }
-keepclassmembers class org.htmlcleaner.BaseTokenImpl { int getRow(); }
-keepclassmembers class com.android.internal.util.NotificationColorUtil { int processColor(int); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <init>(org.apache.harmony.security.x509.GeneralSubtrees,org.apache.harmony.security.x509.GeneralSubtrees,byte[],org.apache.harmony.security.x509.NameConstraints$1); }
-keepclassmembers class org.apache.harmony.security.x509.NameConstraints { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.BaseTokenImpl { java.lang.String toString(); }
-keepclassmembers class org.htmlcleaner.BaseTokenImpl { void setCol(int); }
-keepclassmembers class com.fsck.k9.helper.IdentityHelper { com.fsck.k9.Identity getRecipientIdentityFromMessage(com.fsck.k9.Account,com.fsck.k9.mail.Message); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders$1 { void <init>(); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders$1 { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class com.bumptech.glide.gifencoder.NeuQuant { void inxbuild(); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode { void <init>(com.bumptech.glide.manager.SupportRequestManagerFragment); }
-keepclassmembers class com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode { void <init>(com.bumptech.glide.manager.SupportRequestManagerFragment,com.bumptech.glide.manager.SupportRequestManagerFragment$1); }
-keepclassmembers class com.android.okhttp.internal.http.OkHeaders$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$EntrySetView { java.util.Iterator iterator(); }
-keepclassmembers class android.util.LongSparseArray { void <init>(); }
-keepclassmembers class com.bumptech.glide.gifencoder.NeuQuant { void learn(); }
-keepclassmembers class com.fsck.k9.preferences.Storage { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.preferences.Storage { void <clinit>(); }
-keepclassmembers class com.fsck.k9.preferences.Storage { com.fsck.k9.preferences.Storage getStorage(android.content.Context); }
-keepclassmembers class android.util.LongSparseArray { void <init>(int); }
-keepclassmembers class libcore.util.ZoneInfo { libcore.util.ZoneInfo makeTimeZone(java.lang.String,libcore.io.BufferIterator); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object get(long,java.lang.Object); }
-keepclassmembers class com.fsck.k9.preferences.Storage { void keyChange(java.lang.String); }
-keepclassmembers class android.util.LongSparseArray { void delete(long); }
-keepclassmembers class android.util.LongSparseArray { void remove(long); }
-keepclassmembers class com.fsck.k9.preferences.Storage { void liveUpdate(java.lang.String,java.lang.String); }
-keepclassmembers class android.util.LongSparseArray { void removeAt(int); }
-keepclassmembers class java.util.concurrent.TimeUnit$5 { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.preferences.Storage { void loadValues(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void <init>(); }
-keepclassmembers class android.util.LongSparseArray { void gc(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { com.fsck.k9.view.ClientCertificateSpinner access$1000(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class libcore.util.ZoneInfo { void <init>(java.lang.String,int[],byte[],int[],byte[]); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { int access$000(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { android.widget.EditText access$1100(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class android.util.LongSparseArray { void put(long,java.lang.Object); }
-keepclassmembers class com.fsck.k9.helper.Utility { void <clinit>(); }
-keepclassmembers class com.fsck.k9.helper.Utility { boolean arrayContains(java.lang.Object[],java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void access$100(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { com.fsck.k9.mail.ConnectionSecurity access$200(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class com.fsck.k9.preferences.Storage { android.database.sqlite.SQLiteDatabase openDB(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { com.fsck.k9.mail.AuthType access$300(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class android.util.LongSparseArray { int size(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { android.widget.CheckBox access$400(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class android.util.LongSparseArray { long keyAt(int); }
-keepclassmembers class com.fsck.k9.helper.Utility { boolean arrayContainsAny(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class com.bumptech.glide.gifencoder.NeuQuant { int map(int,int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { int access$602(com.fsck.k9.activity.setup.AccountSetupOutgoing,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { android.widget.Spinner access$500(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class android.util.LongSparseArray { int indexOfKey(long); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { int access$600(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class android.util.LongSparseArray { java.lang.Object valueAt(int); }
-keepclassmembers class android.util.LongSparseArray { void setValueAt(int,java.lang.Object); }
-keepclassmembers class com.fsck.k9.helper.Utility { void closeQuietly(android.database.Cursor); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void access$800(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class com.fsck.k9.helper.Utility { boolean domainFieldValid(android.widget.EditText); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { com.fsck.k9.activity.setup.AuthTypeAdapter access$700(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class com.fsck.k9.helper.Utility { java.lang.String combine(java.lang.Object[],char); }
-keepclassmembers class com.fsck.k9.helper.Utility { java.lang.String combine(java.lang.Iterable,char); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void access$900(com.fsck.k9.activity.setup.AccountSetupOutgoing); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void actionOutgoingSettings(android.content.Context,com.fsck.k9.Account,boolean); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void actionEditOutgoingSettings(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class android.util.LongSparseArray { void clear(); }
-keepclassmembers class com.fsck.k9.helper.Utility { java.lang.String extractMessageId(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void failure(java.lang.Exception); }
-keepclassmembers class com.fsck.k9.helper.Utility { java.util.List extractMessageIds(java.lang.String); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { void <init>(java.lang.String,int); }
-keepclassmembers class android.util.LongSparseArray { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { long toNanos(long); }
-keepclassmembers class com.bumptech.glide.gifencoder.NeuQuant { byte[] process(); }
-keepclassmembers class android.app.FragmentTransaction { void <init>(); }
-keepclassmembers class com.bumptech.glide.gifencoder.NeuQuant { void unbiasnet(); }
-keepclassmembers class com.fsck.k9.helper.Utility { java.lang.String fastUrlDecode(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void initializeViewListeners(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { com.fsck.k9.mail.ConnectionSecurity getSelectedSecurity(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog { void <init>(com.fsck.k9.preferences.SettingsImporter$ImportContents,android.net.Uri); }
-keepclassmembers class android.util.LongSparseArray { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { com.fsck.k9.mail.AuthType getSelectedAuthType(); }
-keepclassmembers class java.util.concurrent.TimeUnit$3 { long toMillis(long); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog { com.fsck.k9.preferences.SettingsImporter$ImportContents access$2000(com.fsck.k9.activity.Accounts$ImportSelectionDialog); }
-keepclassmembers class com.fsck.k9.helper.Utility { android.os.Handler getMainThreadHandler(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog { boolean retain(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog { void restore(android.app.Activity); }
-keepclassmembers class libcore.util.ZoneInfoDB { libcore.util.ZoneInfoDB$TzData getInstance(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { android.content.Intent intentActionEditOutgoingSettings(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.helper.Utility { boolean hasConnectivity(android.content.Context); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffset(int,int,int,int,int,int); }
-keepclassmembers class libcore.util.ZoneInfoDB { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog { void show(com.fsck.k9.activity.Accounts); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void updatePortFromSecurityType(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog { android.net.Uri access$2100(com.fsck.k9.activity.Accounts$ImportSelectionDialog); }
-keepclassmembers class libcore.util.ZoneInfo { int getOffset(long); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void updateAuthPlainTextFromSecurityType(com.fsck.k9.mail.ConnectionSecurity); }
-keepclassmembers class com.fsck.k9.helper.Utility { boolean isAnyMimeType(java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.helper.Utility { boolean requiredFieldValid(android.widget.TextView); }
-keepclassmembers class libcore.util.ZoneInfo { boolean inDaylightTime(java.util.Date); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void updateViewFromAuthType(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ImportSelectionDialog { void show(com.fsck.k9.activity.Accounts,android.util.SparseBooleanArray); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { void <init>(long); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { void <init>(long,com.android.org.conscrypt.OpenSSLEngine,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void validateFields(); }
-keepclassmembers class com.fsck.k9.mail.internet.Viewable$Html { void <init>(com.fsck.k9.mail.Part); }
-keepclassmembers class com.bumptech.glide.util.Util$1 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.helper.Utility { void setCompoundDrawablesAlpha(android.widget.TextView,int); }
-keepclassmembers class libcore.util.ZoneInfo { int getRawOffset(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { void <init>(long,boolean); }
-keepclassmembers class com.fsck.k9.helper.Utility { void setContactForBadge(android.widget.QuickContactBadge,com.fsck.k9.mail.Address); }
-keepclassmembers class com.fsck.k9.helper.Utility { java.lang.String stripNewLines(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { com.android.org.conscrypt.OpenSSLKey fromPrivateKey(java.security.PrivateKey); }
-keepclassmembers class com.fsck.k9.helper.Utility { java.lang.String stripSubject(java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { long getPkeyContext(); }
-keepclassmembers class android.view.WindowManagerGlobal { void changeCanvasOpacity(android.os.IBinder,boolean); }
-keepclassmembers class libcore.util.ZoneInfo { boolean hasSameRules(java.util.TimeZone); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { com.android.org.conscrypt.OpenSSLKey wrapPrivateKey(java.security.PrivateKey); }
-keepclassmembers class libcore.util.ZoneInfo { int getDSTSavings(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { boolean isWrapped(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(); }
-keepclassmembers class libcore.util.ZoneInfo { boolean equals(java.lang.Object); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources); }
-keepclassmembers class libcore.util.ZoneInfo { int hashCode(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.Drawable[]); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.graphics.drawable.Drawable[]); }
-keepclassmembers class libcore.util.ZoneInfo { java.lang.Object clone(); }
-keepclassmembers class libcore.util.ZoneInfo { int checkedAdd(int,int); }
-keepclassmembers class com.fsck.k9.helper.Utility { java.lang.String wrap(java.lang.String,int); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { android.graphics.drawable.LayerDrawable$LayerState createConstantState(android.graphics.drawable.LayerDrawable$LayerState,android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.helper.Utility { java.lang.String wrap(java.lang.String,int,java.lang.String,boolean); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void startTransition(int); }
-keepclassmembers class com.fsck.k9.preferences.Storage { java.lang.String readValue(android.database.sqlite.SQLiteDatabase,java.lang.String); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLKey { java.security.PrivateKey getPrivateKey(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class libcore.util.ZoneInfo { int[] access$100(libcore.util.ZoneInfo); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void onCheckedChanged(android.widget.CompoundButton,boolean); }
-keepclassmembers class libcore.util.ZoneInfo { byte[] access$200(libcore.util.ZoneInfo); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void onClick(android.view.View); }
-keepclassmembers class libcore.util.ZoneInfo { int[] access$300(libcore.util.ZoneInfo); }
-keepclassmembers class libcore.util.ZoneInfo { byte[] access$400(libcore.util.ZoneInfo); }
-keepclassmembers class libcore.util.ZoneInfo { int access$000(libcore.util.ZoneInfo); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void onCreate(android.os.Bundle); }
-keepclassmembers class libcore.util.ZoneInfo { int access$500(int,int); }
-keepclassmembers class java.text.ParseException { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { void <init>(java.util.WeakHashMap,java.util.WeakHashMap$Entry$Type); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void setCrossFadeEnabled(boolean); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { boolean hasNext(); }
-keepclassmembers class libcore.util.ZoneInfo { void <clinit>(); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { void <init>(); }
-keepclassmembers class java.util.WeakHashMap$HashIterator { java.lang.Object next(); }
-keepclassmembers class org.xml.sax.SAXParseException { void <init>(java.lang.String,org.xml.sax.Locator); }
-keepclassmembers class com.fsck.k9.preferences.Storage { void writeValue(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { org.apache.http.Header getContentType(); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { org.apache.http.Header getContentEncoding(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { void setContentType(org.apache.http.Header); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { boolean isChunked(); }
-keepclassmembers class android.graphics.drawable.TransitionDrawable { void <init>(android.graphics.drawable.TransitionDrawable$TransitionState,android.content.res.Resources,android.graphics.drawable.TransitionDrawable$1); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void run(); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { void setContentEncoding(org.apache.http.Header); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { void setContentType(java.lang.String); }
-keepclassmembers class org.apache.http.entity.AbstractHttpEntity { void setChunked(boolean); }
-keepclassmembers class java.util.TimerTask { boolean isScheduled(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void runOrPost(int); }
-keepclassmembers class android.os.StrictMode$6 { void <init>(); }
-keepclassmembers class org.xml.sax.SAXParseException { void init(java.lang.String,java.lang.String,int,int); }
-keepclassmembers class org.apache.http.protocol.RequestUserAgent { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class java.util.MapEntry { void <init>(java.lang.Object); }
-keepclassmembers class com.fsck.k9.preferences.Storage { void doInTransaction(java.lang.Runnable); }
-keepclassmembers class org.apache.http.protocol.RequestUserAgent { void <init>(); }
-keepclassmembers class com.fsck.k9.preferences.Storage { boolean contains(java.lang.String); }
-keepclassmembers class java.util.MapEntry { void <init>(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.MapEntry { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.TimerTask { void <init>(); }
-keepclassmembers class java.util.TimerTask { boolean cancel(); }
-keepclassmembers class android.view.View$SendViewStateChangedAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class java.util.MapEntry { java.lang.Object getValue(); }
-keepclassmembers class java.util.MapEntry { java.lang.Object getKey(); }
-keepclassmembers class java.util.MapEntry { int hashCode(); }
-keepclassmembers class java.security.KeyStoreException { void <init>(java.lang.String); }
-keepclassmembers class android.widget.AbsListView$InputConnectionWrapper { void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo); }
-keepclassmembers class com.fsck.k9.preferences.Storage { boolean getBoolean(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.preferences.Storage { com.fsck.k9.preferences.StorageEditor edit(); }
-keepclassmembers class com.fsck.k9.preferences.Storage { java.util.Map getAll(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void <init>(android.content.Context); }
-keepclassmembers class java.io.DataOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class java.security.KeyStoreException { void <init>(java.lang.Throwable); }
-keepclassmembers class java.io.DataOutputStream { void flush(); }
-keepclassmembers class java.util.MapEntry { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class java.io.DataOutputStream { void writeBoolean(boolean); }
-keepclassmembers class com.fsck.k9.preferences.Storage { int getInt(java.lang.String,int); }
-keepclassmembers class java.io.DataOutputStream { void write(byte[],int,int); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void bindObjectView(com.fsck.k9.view.RecipientSelectView$Recipient,android.view.View); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner$4 { void <init>(com.fsck.k9.view.ClientCertificateSpinner); }
-keepclassmembers class com.fsck.k9.view.ClientCertificateSpinner$4 { void alias(java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.Storage { long getLong(java.lang.String,long); }
-keepclassmembers class java.io.DataOutputStream { void writeByte(int); }
-keepclassmembers class com.fsck.k9.preferences.Storage { java.lang.String getString(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo54 { void addPreviewTypeColumn(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.io.DataOutputStream { void writeDouble(double); }
-keepclassmembers class com.fsck.k9.preferences.Storage { boolean isEmpty(); }
-keepclassmembers class java.io.DataOutputStream { void writeFloat(float); }
-keepclassmembers class java.io.DataOutputStream { void writeChar(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void onNext(); }
-keepclassmembers class java.io.DataOutputStream { void writeInt(int); }
-keepclassmembers class com.fsck.k9.preferences.Storage { void put(java.util.Map); }
-keepclassmembers class com.getkeepsafe.relinker.ReLinkerInstance$2 { void <init>(com.getkeepsafe.relinker.ReLinkerInstance,java.lang.String); }
-keepclassmembers class com.fsck.k9.preferences.Storage { void remove(java.lang.String); }
-keepclassmembers class org.apache.http.message.BasicHttpResponse { void <init>(org.apache.http.StatusLine,org.apache.http.ReasonPhraseCatalog,java.util.Locale); }
-keepclassmembers class java.io.DataOutputStream { void writeLong(long); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { android.view.View getTokenViewForRecipient(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { int getTokenCount(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void displayKeyboard(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void onPostCreate(android.os.Bundle); }
-keepclassmembers class java.io.DataOutputStream { void writeShort(int); }
-keepclassmembers class java.io.DataOutputStream { void writeUTF(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class android.view.animation.Animation$3 { void <init>(android.view.animation.Animation); }
-keepclassmembers class java.util.Vector { void <init>(); }
-keepclassmembers class org.apache.http.message.BasicHttpResponse { org.apache.http.StatusLine getStatusLine(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupOutgoing { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void initView(android.content.Context); }
-keepclassmembers class java.util.zip.DataFormatException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Vector { void <init>(int,int); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { android.view.View inflateLayout(); }
-keepclassmembers class org.apache.http.message.BasicHttpResponse { org.apache.http.HttpEntity getEntity(); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$3 { void <init>(com.fsck.k9.activity.FolderList$FolderListHandler,int); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { boolean isPlaceholderText(java.lang.String); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void showAlternates(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class java.util.Vector { java.lang.Object[] newElementArray(int); }
-keepclassmembers class com.fsck.k9.activity.FolderList$FolderListHandler$3 { void run(); }
-keepclassmembers class java.util.Vector { boolean add(java.lang.Object); }
-keepclassmembers class org.apache.harmony.security.x509.InfoAccessSyntax$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type); }
-keepclassmembers class org.xml.sax.SAXNotSupportedException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void <init>(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void addRecipients(com.fsck.k9.view.RecipientSelectView$Recipient[]); }
-keepclassmembers class libcore.icu.NativePluralRules { void <init>(long); }
-keepclassmembers class libcore.icu.NativePluralRules { int quantityForInt(int); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo50 { void foldersAddNotifyClassColumn(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void addRequestInterceptor(org.apache.http.HttpRequestInterceptor); }
-keepclassmembers class libcore.icu.NativePluralRules { int quantityForIntImpl(long,int); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class libcore.icu.NativePluralRules { libcore.icu.NativePluralRules forLocale(java.util.Locale); }
-keepclassmembers class com.fsck.k9.message.extractors.AttachmentInfoExtractor { void <init>(android.content.Context); }
-keepclassmembers class libcore.icu.NativePluralRules { long forLocaleImpl(java.lang.String); }
-keepclassmembers class org.apache.http.message.BasicHttpResponse { void setEntity(org.apache.http.HttpEntity); }
-keepclassmembers class com.fsck.k9.message.extractors.AttachmentInfoExtractor { com.fsck.k9.mailstore.AttachmentViewInfo extractAttachmentInfo(com.fsck.k9.mail.Part,android.net.Uri,long,boolean); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { com.tokenautocomplete.TokenCompleteTextView$TokenImageSpan buildSpanForObject(java.lang.Object); }
-keepclassmembers class java.util.Vector { void addElement(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { com.fsck.k9.view.RecipientSelectView$Recipient defaultObject(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.NetworkType { com.fsck.k9.mail.NetworkType fromConnectivityManagerType(int); }
-keepclassmembers class com.fsck.k9.mail.NetworkType { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.NetworkType { void <init>(java.lang.String,int); }
-keepclassmembers class java.lang.NoSuchMethodError { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.NetworkType { com.fsck.k9.mail.NetworkType[] values(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { com.fsck.k9.mail.Address[] getAddresses(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void addInterceptor(org.apache.http.HttpRequestInterceptor); }
-keepclassmembers class com.fsck.k9.message.extractors.AttachmentInfoExtractor { long extractAttachmentSize(java.lang.String,long); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable$GifState { void <init>(com.bumptech.glide.gifdecoder.GifHeader,byte[],android.content.Context,com.bumptech.glide.load.Transformation,int,int,com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { android.view.View getViewForObject(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { java.lang.Object defaultObject(java.lang.String); }
-keepclassmembers class com.fsck.k9.message.extractors.AttachmentInfoExtractor { com.fsck.k9.message.extractors.AttachmentInfoExtractor getInstance(); }
-keepclassmembers class com.fsck.k9.message.extractors.AttachmentInfoExtractor { com.fsck.k9.mailstore.AttachmentViewInfo extractAttachmentInfo(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { boolean hasUncompletedText(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void addResponseInterceptor(org.apache.http.HttpResponseInterceptor); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { android.content.Loader onCreateLoader(int,android.os.Bundle); }
-keepclassmembers class com.handmark.pulltorefresh.library.internal.Utils { void warnDeprecation(java.lang.String,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable$GifState { android.graphics.drawable.Drawable newDrawable(); }
-keepclassmembers class org.htmlcleaner.BelongsTo { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawable$GifState { android.graphics.drawable.Drawable newDrawable(android.content.res.Resources); }
-keepclassmembers class org.htmlcleaner.BelongsTo { void <clinit>(); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void addInterceptor(org.apache.http.HttpResponseInterceptor); }
-keepclassmembers class android.widget.AbsListView$FlingRunnable$1 { void <init>(android.widget.AbsListView$FlingRunnable); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void getOutline(android.view.View,android.graphics.Outline); }
-keepclassmembers class android.view.ViewOutlineProvider$2 { void <init>(); }
-keepclassmembers class com.fsck.k9.message.extractors.AttachmentInfoExtractor { com.fsck.k9.mailstore.AttachmentViewInfo extractAttachmentInfoForDatabase(com.fsck.k9.mail.Part); }
-keepclassmembers class java.util.Vector { void growByOne(); }
-keepclassmembers class com.fsck.k9.message.extractors.AttachmentInfoExtractor { java.util.List extractAttachmentInfoForView(java.util.List); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void onDetachedFromWindow(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void onFocusChanged(boolean,int,android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void onLoadFinished(android.content.Loader,java.util.List); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { void <init>(com.fsck.k9.notification.NotificationController,com.fsck.k9.notification.NotificationActionCreator,com.fsck.k9.notification.LockScreenNotification,com.fsck.k9.notification.WearNotifications); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.github.amlcurran.showcaseview.TextDrawer { void <init>(android.content.res.Resources,android.content.Context); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void onLoadFinished(android.content.Loader,java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void onLoaderReset(android.content.Loader); }
-keepclassmembers class com.fsck.k9.message.extractors.AttachmentInfoExtractor { android.net.Uri getDecryptedFileProviderUri(com.fsck.k9.mailstore.DeferredFileBody,java.lang.String); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$Builder { void <init>(int,java.lang.CharSequence,android.app.PendingIntent); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { java.util.List getAdditionalHeaders(com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void expand(android.widget.TextView,boolean); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { void copyInterceptors(org.apache.http.protocol.BasicHttpProcessor); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void onRecipientChange(com.fsck.k9.view.RecipientSelectView$Recipient,com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$Builder { void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { void addDeleteAction(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.notification.NotificationContent,int); }
-keepclassmembers class org.apache.http.protocol.BasicHttpProcessor { org.apache.http.protocol.BasicHttpProcessor copy(); }
-keepclassmembers class java.text.Normalizer$Form { java.text.Normalizer$Form[] values(); }
-keepclassmembers class com.github.amlcurran.showcaseview.TextDrawer { void calculateTextPosition(int,int,boolean,android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void onRecipientRemove(com.fsck.k9.view.RecipientSelectView$Recipient); }
-keepclassmembers class android.support.v4.app.NotificationCompat$Action$Builder { android.support.v4.app.NotificationCompat$Action build(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void hideAdditionalHeaders(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { void <init>(java.util.Map); }
-keepclassmembers class java.text.Normalizer$Form { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { void addDeleteAllAction(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.notification.NotificationData); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { void addMarkAllAsReadAction(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.notification.NotificationData); }
-keepclassmembers class java.text.Normalizer$Form { void <clinit>(); }
-keepclassmembers class java.util.Vector { boolean isEmpty(); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1StringType$4 { void <init>(int); }
-keepclassmembers class java.util.Collections$SynchronizedMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void layoutChanged(); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void onAddAddressesToClipboard(com.fsck.k9.mail.Address[]); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void performCompletion(); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { void addReplyAction(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.notification.NotificationContent,int); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void performFiltering(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void onAddRecipientsToClipboard(com.fsck.k9.mail.Message$RecipientType); }
-keepclassmembers class android.text.method.Touch$DragState { void <init>(float,float,int,int); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { void addMarkAsReadAction(android.support.v4.app.NotificationCompat$Builder,com.fsck.k9.notification.NotificationContent,int); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawableResource { void <init>(com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawable,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { android.support.v4.app.NotificationCompat$Builder createBigTextStyleSummaryNotification(com.fsck.k9.Account,com.fsck.k9.notification.NotificationHolder); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void onAddSenderToContacts(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void setCryptoProvider(java.lang.String); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void postShowAlternatesPopup(java.util.List); }
-keepclassmembers class android.content.ActivityNotFoundException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawableResource { int getSize(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.GlideBitmapDrawableResource { void recycle(); }
-keepclassmembers class com.github.amlcurran.showcaseview.TextDrawer { void draw(android.graphics.Canvas); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <init>(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void setTokenListener(com.fsck.k9.view.RecipientSelectView$TokenListener); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void setLoaderManager(android.app.LoaderManager); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { android.support.v4.app.NotificationCompat$Builder createInboxStyleSummaryNotification(com.fsck.k9.Account,com.fsck.k9.notification.NotificationData,int); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { android.view.ViewGroup$ViewLocationHolder obtain(android.view.ViewGroup,android.view.View); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void populateAdditionalHeadersView(java.util.List); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$15 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void recycle(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$15 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$15 { void <init>(com.fsck.k9.mailstore.LocalFolder,java.util.List); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(android.view.ViewGroup$ViewLocationHolder); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void setComparisonStrategy(int); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void showAlternatesPopup(java.util.List); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { boolean tryPerformCompletion(); }
-keepclassmembers class java.util.Collections$SynchronizedMap { java.lang.Object put(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.AbstractSet { void <init>(); }
-keepclassmembers class java.util.AbstractSet { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView { void showDropDown(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void <init>(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { org.apache.http.HttpResponseFactory createHttpResponseFactory(); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void showAdditionalHeaders(); }
-keepclassmembers class java.util.AbstractSet { int hashCode(); }
-keepclassmembers class java.util.WeakHashMap$1 { void <init>(java.util.WeakHashMap); }
-keepclassmembers class java.util.WeakHashMap$1 { java.util.Iterator iterator(); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void init(android.view.ViewGroup,android.view.View); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void clear(); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { android.support.v4.app.NotificationCompat$Builder createSimpleSummaryNotification(com.fsck.k9.Account,int); }
-keepclassmembers class com.github.amlcurran.showcaseview.TextDrawer { float[] getBestTextPosition(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { org.apache.http.impl.entity.EntityDeserializer createEntityDeserializer(); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void updateAddressField(android.widget.TextView,java.lang.CharSequence,android.view.View); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { org.apache.http.io.HttpMessageWriter createRequestWriter(org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings$2 { void <init>(com.fsck.k9.activity.setup.FolderSettings); }
-keepclassmembers class com.github.amlcurran.showcaseview.TextDrawer { void setContentTitle(java.lang.CharSequence); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void init(org.apache.http.io.SessionInputBuffer,org.apache.http.io.SessionOutputBuffer,org.apache.http.params.HttpParams); }
-keepclassmembers class android.view.ViewGroup$ViewLocationHolder { int compareTo(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { org.apache.http.impl.entity.EntitySerializer createEntitySerializer(); }
-keepclassmembers class com.github.amlcurran.showcaseview.TextDrawer { void setContentText(java.lang.CharSequence); }
-keepclassmembers class com.github.amlcurran.showcaseview.TextDrawer { void setDetailStyling(int); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void hideCryptoStatus(); }
-keepclassmembers class com.fsck.k9.activity.setup.FolderSettings$2 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { boolean additionalHeadersVisible(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CollectionView { void <init>(java.util.concurrent.ConcurrentHashMap); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { java.lang.String createMessage(int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountsQueryHandler { android.database.Cursor getAllAccounts(java.lang.String[]); }
-keepclassmembers class com.github.amlcurran.showcaseview.TextDrawer { void setTitleStyling(int); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void onFinishInflate(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountsQueryHandler { void <init>(com.fsck.k9.provider.MessageProvider); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CollectionView { int size(); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void onClick(android.view.View); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { boolean isResponseAvailable(int); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { int getDeleteActionIcon(); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { int getMarkAsReadActionIcon(); }
-keepclassmembers class com.github.amlcurran.showcaseview.TextDrawer { boolean shouldDrawText(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void sendRequestHeader(org.apache.http.HttpRequest); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CollectionView { boolean isEmpty(); }
-keepclassmembers class java.util.concurrent.ConcurrentHashMap$CollectionView { java.lang.Object[] toArray(); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { boolean isPrivacyModeActive(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void setEvaluator(android.animation.TypeEvaluator); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { int getReplyActionIcon(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void invalidateCache(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { android.animation.Keyframes clone(); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { com.fsck.k9.notification.DeviceNotifications newInstance(com.fsck.k9.notification.NotificationController,com.fsck.k9.notification.NotificationActionCreator,com.fsck.k9.notification.WearNotifications); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void flush(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void doFlush(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.ArrayList getKeyframes(); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { org.apache.http.HttpResponse receiveResponseHeader(); }
-keepclassmembers class android.animation.PathKeyframes$SimpleKeyframes { java.util.List getKeyframes(); }
-keepclassmembers class android.transition.PathMotion { void <init>(); }
-keepclassmembers class android.app.Fragment { void <init>(); }
-keepclassmembers class android.transition.PathMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { void receiveResponseEntity(org.apache.http.HttpResponse); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { android.app.Notification buildSummaryNotification(com.fsck.k9.Account,com.fsck.k9.notification.NotificationData,boolean); }
-keepclassmembers class android.app.Fragment { android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable$Factory getInstance(); }
-keepclassmembers class android.text.Spannable$Factory { android.text.Spannable newSpannable(java.lang.CharSequence); }
-keepclassmembers class android.widget.TextView$Marquee$1 { void <init>(android.widget.TextView$Marquee); }
-keepclassmembers class android.text.Spannable$Factory { void <init>(); }
-keepclassmembers class android.widget.TextView$Marquee$1 { void doFrame(long); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountsQueryHandler { android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountsQueryHandler { java.lang.String getPath(); }
-keepclassmembers class java.util.Vector { int size(); }
-keepclassmembers class java.nio.channels.FileChannel { void <init>(); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { boolean onLongClick(android.view.View); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.EditTextPreference access$000(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void <init>(); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void onShowAdditionalHeaders(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$100(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$1000(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$1100(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void populate(com.fsck.k9.mail.Message,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$1300(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$1400(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$1200(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.app.Fragment { void restoreViewState(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$1500(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.app.Fragment { void setIndex(int,android.app.Fragment); }
-keepclassmembers class org.apache.http.impl.AbstractHttpClientConnection { boolean isStale(); }
-keepclassmembers class android.text.Spannable$Factory { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$1800(com.fsck.k9.activity.setup.AccountSettings,java.lang.String); }
-keepclassmembers class android.app.Fragment { boolean isInBackStack(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$1900(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.app.Fragment { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$1600(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$1700(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.EditTextPreference access$200(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.app.Fragment { int hashCode(); }
-keepclassmembers class android.app.Fragment { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.notification.DeviceNotifications { android.support.v4.app.NotificationCompat$InboxStyle createInboxStyle(android.support.v4.app.NotificationCompat$Builder); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$2100(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { org.apache.james.mime4j.stream.MimeConfig clone(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { java.lang.String getHeadlessParsing(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$2200(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { long getMaxContentLen(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { int getMaxHeaderCount(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$2300(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { int getMaxHeaderLen(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { int getMaxLineLen(); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy$Builder { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$2000(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$2400(com.fsck.k9.activity.setup.AccountSettings,android.preference.Preference); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { boolean isMalformedHeaderStartsBody(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { boolean isCountLineNumbers(); }
-keepclassmembers class com.android.i18n.phonenumbers.PhoneNumberUtil$Leniency$3 { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$2500(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.app.Fragment { void setArguments(android.os.Bundle); }
-keepclassmembers class android.app.Fragment { android.os.Bundle getArguments(); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { boolean isStrictParsing(); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1 { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy$Builder { android.os.StrictMode$ThreadPolicy$Builder detectAll(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$2700(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$2800(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { boolean access$2902(com.fsck.k9.activity.setup.AccountSettings,boolean); }
-keepclassmembers class com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1 { java.io.File getCacheDirectory(); }
-keepclassmembers class android.app.Fragment { void setTargetFragment(android.app.Fragment,int); }
-keepclassmembers class android.app.Fragment { android.app.Fragment getTargetFragment(); }
-keepclassmembers class android.app.Fragment { int getTargetRequestCode(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$300(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { void setMaxHeaderLen(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$3000(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { void setMaxHeaderCount(int); }
-keepclassmembers class com.tokenautocomplete.TokenCompleteTextView$SavedState$1 { void <init>(); }
-keepclassmembers class android.app.Fragment { android.content.res.Resources getResources(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { org.openintents.openpgp.util.OpenPgpAppPreference access$3200(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { void setMaxLineLen(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { org.openintents.openpgp.util.OpenPgpKeyPreference access$3300(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.james.mime4j.stream.MimeConfig { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$3100(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { com.fsck.k9.Account access$3400(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.app.Fragment { android.app.Activity getActivity(); }
-keepclassmembers class android.app.Fragment { java.lang.CharSequence getText(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$3500(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.app.Fragment { java.lang.String getString(int); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy$Builder { android.os.StrictMode$ThreadPolicy$Builder penaltyLog(); }
-keepclassmembers class android.app.Fragment { android.app.FragmentManager getFragmentManager(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void setCryptoStatus(com.fsck.k9.view.MessageCryptoDisplayStatus); }
-keepclassmembers class android.app.Fragment { android.app.FragmentManager getChildFragmentManager(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$3502(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$3602(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy$Builder { android.os.StrictMode$ThreadPolicy$Builder enable(int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void setCryptoStatusDisabled(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$3700(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$3600(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.os.StrictMode$ThreadPolicy$Builder { android.os.StrictMode$ThreadPolicy build(); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void setCryptoStatusLoading(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$3800(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$3702(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void setOnCryptoClickListener(com.fsck.k9.ui.messageview.OnCryptoClickListener); }
-keepclassmembers class android.app.Fragment { boolean isAdded(); }
-keepclassmembers class android.app.Fragment { boolean isDetached(); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void setOnFlagListener(android.view.View$OnClickListener); }
-keepclassmembers class android.app.Fragment { boolean isRemoving(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$3802(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference); }
-keepclassmembers class com.fsck.k9.view.MessageHeader { void showSubjectLine(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$3900(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$3 { android.database.Cursor doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$3902(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.PreferenceScreen access$400(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeader { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$3 { void <init>(com.fsck.k9.provider.EmailProvider,java.lang.String[],java.lang.String,java.lang.String); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.net.MailTo { boolean isMailTo(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignerInfo$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$4000(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$4002(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeader { int getNumFrames(); }
-keepclassmembers class java.io.InterruptedIOException { void <init>(java.lang.String); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifHeader { int getStatus(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { boolean access$4100(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.http.impl.client.EntityEnclosingRequestWrapper { boolean expectContinue(); }
-keepclassmembers class org.apache.http.impl.client.EntityEnclosingRequestWrapper { org.apache.http.HttpEntity getEntity(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$4200(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[]); }
-keepclassmembers class android.net.MailTo { android.net.MailTo parse(java.lang.String); }
-keepclassmembers class org.apache.http.impl.client.EntityEnclosingRequestWrapper { void <init>(org.apache.http.HttpEntityEnclosingRequest); }
-keepclassmembers class com.fsck.k9.provider.EmailProvider$3 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.controller.MessagingController { void systemStatusChanged(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$4300(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[]); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { void <clinit>(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { void <init>(); }
-keepclassmembers class org.apache.http.impl.client.EntityEnclosingRequestWrapper { boolean isRepeatable(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource getAttachmentDataSource(java.lang.String,java.lang.String); }
-keepclassmembers class android.app.Fragment { void onHiddenChanged(boolean); }
-keepclassmembers class android.app.Fragment { boolean isHidden(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { android.net.Uri getAttachmentUri(java.lang.String,long); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$4400(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[]); }
-keepclassmembers class android.app.Fragment { void setHasOptionsMenu(boolean); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { java.lang.String getType(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { boolean canReverse(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$4500(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[]); }
-keepclassmembers class android.transition.ChangeImageTransform { void <init>(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void <init>(android.graphics.drawable.AnimatedVectorDrawable,boolean,boolean); }
-keepclassmembers class android.transition.ChangeImageTransform { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.net.MailTo { java.lang.String getTo(); }
-keepclassmembers class android.app.Fragment { void setRetainInstance(boolean); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$4600(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[]); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void start(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { android.os.ParcelFileDescriptor openAttachment(java.lang.String,java.lang.String); }
-keepclassmembers class org.htmlcleaner.Utils { void <clinit>(); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.app.Fragment { android.app.LoaderManager getLoaderManager(); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void reverse(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { int delete(android.net.Uri,java.lang.String,java.lang.String[]); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { java.lang.String getType(android.net.Uri); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.CheckBoxPreference access$500(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.htmlcleaner.Utils { int convertToUnicode(java.lang.String,boolean,boolean,boolean,java.lang.StringBuilder,int); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$600(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.transition.ChangeImageTransform { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$700(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.app.Fragment { void startActivityForResult(android.content.Intent,int); }
-keepclassmembers class android.net.MailTo { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$800(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { android.net.Uri insert(android.net.Uri,android.content.ContentValues); }
-keepclassmembers class android.graphics.drawable.AnimatedStateListDrawable$AnimatedVectorDrawableTransition { void stop(); }
-keepclassmembers class android.app.Fragment { void startActivityForResult(android.content.Intent,int,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void access$4700(com.fsck.k9.activity.setup.AccountSettings,android.preference.ListPreference,java.lang.String,java.lang.CharSequence[],java.lang.CharSequence[]); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void actionSettings(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class android.app.Fragment { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.preference.ListPreference access$900(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { boolean onCreate(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void doVibrateTest(android.preference.Preference); }
-keepclassmembers class android.support.v4.app.NotificationCompat$BuilderExtender { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat$BuilderExtender { android.app.Notification build(android.support.v4.app.NotificationCompat$Builder,android.support.v4.app.NotificationBuilderWithBuilderAccessor); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { void <init>(com.fsck.k9.mail.store.imap.ImapStore); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void onCompositionSettings(); }
-keepclassmembers class android.app.Fragment { void onInflate(android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.app.Fragment { void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle); }
-keepclassmembers class android.app.Fragment { android.view.LayoutInflater getLayoutInflater(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void onIncomingSettings(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { void <init>(com.fsck.k9.mail.store.imap.ImapStore,com.fsck.k9.mail.store.imap.ImapStore$1); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void onManageIdentities(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { com.fsck.k9.mail.AuthType getAuthType(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void removeListEntry(android.preference.ListPreference,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { com.fsck.k9.mail.ConnectionSecurity getConnectionSecurity(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { java.lang.String getClientCertificateAlias(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void onOutgoingSettings(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { java.lang.String getPassword(); }
-keepclassmembers class android.transition.ChangeImageTransform { void <clinit>(); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread { void <init>(org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSink,java.io.InputStream); }
-keepclassmembers class org.htmlcleaner.Utils { int convert_To_Entity_Name(java.lang.String,boolean,boolean,boolean,java.lang.StringBuilder,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { java.lang.String getHost(); }
-keepclassmembers class android.app.Fragment { void onAttach(android.app.Activity); }
-keepclassmembers class android.app.Fragment { android.animation.Animator onCreateAnimator(int,boolean,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { int getPort(); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread { java.lang.Object getResult(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { java.lang.String getPathDelimiter(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { java.lang.String reverseTranslateFolder(java.lang.String); }
-keepclassmembers class android.app.Fragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { java.lang.String getUsername(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { void setCombinedPrefix(java.lang.String); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSinkTransferThread { void run(); }
-keepclassmembers class android.app.Fragment { void onViewCreated(android.view.View,android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { java.lang.String getPathPrefix(); }
-keepclassmembers class android.app.Fragment { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void saveSettings(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { void setPathDelimiter(java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.AttachmentProvider { int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]); }
-keepclassmembers class android.app.Fragment { void onViewStateRestored(android.os.Bundle); }
-keepclassmembers class android.app.Fragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class android.app.Fragment { android.view.View getView(); }
-keepclassmembers class android.app.Fragment { void onStart(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$FolderOperation { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { boolean useCompression(com.fsck.k9.mail.NetworkType); }
-keepclassmembers class com.fsck.k9.mailstore.LocalStore$AttachmentInfo { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.io.MaxHeaderLengthLimitException { void <init>(java.lang.String); }
-keepclassmembers class android.app.Fragment { void onResume(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStore$StoreImapSettings { void setPathPrefix(java.lang.String); }
-keepclassmembers class android.app.Fragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$4 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$FolderOperation { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.Fragment { void onPause(); }
-keepclassmembers class android.app.Fragment { void onConfigurationChanged(android.content.res.Configuration); }
-keepclassmembers class android.app.Fragment { void onStop(); }
-keepclassmembers class org.apache.james.mime4j.field.AddressListFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.james.mime4j.field.AddressListFieldImpl { void <clinit>(); }
-keepclassmembers class android.app.Fragment { void onTrimMemory(int); }
-keepclassmembers class android.app.Fragment { void onLowMemory(); }
-keepclassmembers class android.app.Fragment { void onDestroy(); }
-keepclassmembers class android.app.Fragment { void onDestroyView(); }
-keepclassmembers class java.net.Socket { void <init>(); }
-keepclassmembers class java.util.TreeMap$2 { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.DecodeFormat { void <clinit>(); }
-keepclassmembers class android.app.Fragment { void onDetach(); }
-keepclassmembers class com.bumptech.glide.load.DecodeFormat { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.Fragment { void initState(); }
-keepclassmembers class java.net.Socket { void <init>(java.net.Proxy); }
-keepclassmembers class android.app.Fragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class android.app.Fragment { void onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class android.app.Fragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class org.htmlcleaner.Utils { java.lang.String escapeHtml(java.lang.String,org.htmlcleaner.CleanerProperties); }
-keepclassmembers class android.app.Fragment { void onDestroyOptionsMenu(); }
-keepclassmembers class android.widget.RemoteViews$SetDrawableParameters { void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff$Mode,int); }
-keepclassmembers class android.app.Fragment { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class android.graphics.RectF$1 { void <init>(); }
-keepclassmembers class android.app.Fragment { void onOptionsMenuClosed(android.view.Menu); }
-keepclassmembers class java.util.Formatter$1 { java.util.Formatter$CachedDecimalFormat initialValue(); }
-keepclassmembers class android.widget.RemoteViews$SetDrawableParameters { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class java.util.Formatter$1 { java.lang.Object initialValue(); }
-keepclassmembers class android.app.Fragment { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class android.app.Fragment { void registerForContextMenu(android.view.View); }
-keepclassmembers class org.htmlcleaner.Utils { java.lang.String escapeXml(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$Builder { void <init>(android.app.Activity); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean right(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$Builder { void <init>(android.app.Activity,boolean); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean up(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { void <init>(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean down(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean left(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getEnterTransition(); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getReturnTransition(); }
-keepclassmembers class java.util.Formatter$1 { void <init>(); }
-keepclassmembers class android.os.BadParcelableException { void <init>(java.lang.String); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean top(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$Builder { com.github.amlcurran.showcaseview.ShowcaseView build(); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getExitTransition(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageUp(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.widget.RemoteViews$SetDrawableParameters { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$Builder { com.github.amlcurran.showcaseview.ShowcaseView$Builder blockAllTouches(); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getReenterTransition(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean pageDown(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineEnd(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.fsck.k9.service.MailService$3 { void run(); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getSharedElementEnterTransition(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean bottom(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.fsck.k9.service.MailService$3 { void <init>(com.fsck.k9.service.MailService,boolean,boolean); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean home(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class android.app.Fragment { android.transition.Transition getSharedElementReturnTransition(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean lineStart(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$Builder { com.github.amlcurran.showcaseview.ShowcaseView$Builder hideOnTouchOutside(); }
-keepclassmembers class java.net.Socket { void checkDestination(java.net.InetAddress,int); }
-keepclassmembers class java.net.Socket { void close(); }
-keepclassmembers class android.app.Fragment { boolean getAllowReturnTransitionOverlap(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class android.app.Fragment { boolean getAllowEnterTransitionOverlap(); }
-keepclassmembers class android.text.method.ScrollingMovementMethod { boolean end(android.widget.TextView,android.text.Spannable); }
-keepclassmembers class java.net.Socket { java.net.InetAddress getInetAddress(); }
-keepclassmembers class android.app.Fragment { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(); }
-keepclassmembers class android.app.Activity$ManagedDialog { void <init>(android.app.Activity$1); }
-keepclassmembers class java.net.Socket { int getPort(); }
-keepclassmembers class java.net.Socket { java.io.InputStream getInputStream(); }
-keepclassmembers class java.net.Socket { java.io.OutputStream getOutputStream(); }
-keepclassmembers class java.util.zip.InflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStoreSettings { void <init>(java.lang.String,int,com.fsck.k9.mail.ConnectionSecurity,com.fsck.k9.mail.AuthType,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class java.net.Socket { java.net.InetAddress getLocalAddress(); }
-keepclassmembers class java.net.Socket { int getSoTimeout(); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStoreSettings { java.util.Map getExtra(); }
-keepclassmembers class java.util.zip.InflaterInputStream { void <init>(java.io.InputStream,java.util.zip.Inflater,int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$Builder { com.github.amlcurran.showcaseview.ShowcaseView$Builder setStyle(int); }
-keepclassmembers class org.htmlcleaner.Utils { int extractCharCode(java.lang.String,int,boolean,java.lang.StringBuilder); }
-keepclassmembers class java.util.zip.InflaterInputStream { int read(byte[],int,int); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$Builder { com.github.amlcurran.showcaseview.ShowcaseView$Builder setTarget(com.github.amlcurran.showcaseview.targets.Target); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$Builder { com.github.amlcurran.showcaseview.ShowcaseView$Builder setShowcaseDrawer(com.github.amlcurran.showcaseview.ShowcaseDrawer); }
-keepclassmembers class java.net.Inet6Address { void <init>(byte[],java.lang.String,int); }
-keepclassmembers class java.net.Socket { void setSoLinger(boolean,int); }
-keepclassmembers class com.fsck.k9.mail.store.webdav.WebDavStoreSettings { com.fsck.k9.mail.ServerSettings newPassword(java.lang.String); }
-keepclassmembers class java.net.Socket { void setTcpNoDelay(boolean); }
-keepclassmembers class java.net.Inet6Address { java.net.Inet6Address getByAddress(java.lang.String,byte[],int); }
-keepclassmembers class org.htmlcleaner.Utils { java.lang.String getXmlNSPrefix(java.lang.String); }
-keepclassmembers class java.util.zip.InflaterInputStream { void fill(); }
-keepclassmembers class java.net.Socket { void setSoTimeout(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { java.lang.String translateFolder(java.lang.String); }
-keepclassmembers class org.htmlcleaner.Utils { java.lang.String getXmlName(java.lang.String); }
-keepclassmembers class org.htmlcleaner.Utils { java.lang.String getAmpNcr(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void updateRemoteSearchLimit(java.lang.String); }
-keepclassmembers class libcore.io.MemoryMappedFile { void <init>(long,long); }
-keepclassmembers class org.htmlcleaner.Utils { boolean isEmptyString(java.lang.Object); }
-keepclassmembers class com.github.amlcurran.showcaseview.ShowcaseView$Builder { com.github.amlcurran.showcaseview.ShowcaseView$Builder withMaterialShowcase(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class java.util.zip.InflaterInputStream { long skip(long); }
-keepclassmembers class java.util.zip.InflaterInputStream { void close(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplBase { void <init>(); }
-keepclassmembers class java.util.zip.InflaterInputStream { void mark(int); }
-keepclassmembers class org.htmlcleaner.Utils { boolean isIdentifierHelperChar(char); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.MemoryMappedFile mmapRO(java.lang.String); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplBase { void cancelNotification(android.app.NotificationManager,java.lang.String,int); }
-keepclassmembers class java.util.zip.InflaterInputStream { int available(); }
-keepclassmembers class java.util.zip.InflaterInputStream { void reset(); }
-keepclassmembers class java.net.Socket { boolean usingSocks(); }
-keepclassmembers class java.util.zip.InflaterInputStream { void checkClosed(); }
-keepclassmembers class java.net.Socket { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void onChooseAutoExpandFolder(); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplBase { int getSideChannelBindFlags(); }
-keepclassmembers class java.net.Socket { void shutdownInput(); }
-keepclassmembers class java.net.Socket { void shutdownOutput(); }
-keepclassmembers class java.net.Inet6Address { boolean isAnyLocalAddress(); }
-keepclassmembers class android.app.Fragment { void instantiateChildFragmentManager(); }
-keepclassmembers class java.net.Socket { void checkOpenAndCreate(boolean); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$ImplBase { void postNotification(android.app.NotificationManager,java.lang.String,int,android.app.Notification); }
-keepclassmembers class libcore.io.MemoryMappedFile { libcore.io.BufferIterator bigEndianIterator(); }
-keepclassmembers class android.app.Fragment { void performCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void onChooseChipColor(); }
-keepclassmembers class java.net.Inet6Address { boolean isLinkLocalAddress(); }
-keepclassmembers class android.app.ListActivity { void <init>(); }
-keepclassmembers class libcore.io.MemoryMappedFile { long size(); }
-keepclassmembers class android.app.Fragment { android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class com.android.org.conscrypt.AddressUtils { boolean isValidSniHostname(java.lang.String); }
-keepclassmembers class java.net.Socket { boolean isBound(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void onChooseLedColor(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void onCreate(android.os.Bundle); }
-keepclassmembers class java.net.Socket { boolean isConnected(); }
-keepclassmembers class android.app.ListActivity { void onContentChanged(); }
-keepclassmembers class java.net.Socket { boolean isClosed(); }
-keepclassmembers class android.app.Fragment { void performActivityCreated(android.os.Bundle); }
-keepclassmembers class android.app.Fragment { void performStart(); }
-keepclassmembers class android.view.animation.OvershootInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class java.net.Socket { void bind(java.net.SocketAddress); }
-keepclassmembers class android.app.ListActivity { void setListAdapter(android.widget.ListAdapter); }
-keepclassmembers class android.app.ListActivity { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void <init>(com.fsck.k9.mailstore.LocalStore,long); }
-keepclassmembers class android.view.animation.OvershootInterpolator { float getInterpolation(float); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$13 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class android.app.ListActivity { int getSelectedItemPosition(); }
-keepclassmembers class android.app.Fragment { void performResume(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$13 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void <init>(com.fsck.k9.mailstore.LocalStore,java.lang.String); }
-keepclassmembers class android.app.ListActivity { long getSelectedItemId(); }
-keepclassmembers class java.net.Inet6Address { int getScopeId(); }
-keepclassmembers class android.app.ListActivity { android.widget.ListView getListView(); }
-keepclassmembers class android.app.ListActivity { void setSelection(int); }
-keepclassmembers class java.net.Socket { void connect(java.net.SocketAddress,int); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder$2 { void <clinit>(); }
-keepclassmembers class android.app.ListActivity { void ensureList(); }
-keepclassmembers class android.app.ListActivity { android.widget.ListAdapter getListAdapter(); }
-keepclassmembers class android.widget.ProgressBar$SavedState$1 { void <init>(); }
-keepclassmembers class java.net.Proxy { void <init>(java.net.Proxy$Type,java.net.SocketAddress); }
-keepclassmembers class android.widget.ProgressBar$ProgressTintInfo { void <init>(); }
-keepclassmembers class android.widget.ProgressBar$ProgressTintInfo { void <init>(android.widget.ProgressBar$1); }
-keepclassmembers class java.net.Proxy { void <init>(); }
-keepclassmembers class java.net.Proxy { java.net.Proxy$Type type(); }
-keepclassmembers class java.net.Proxy { java.net.SocketAddress address(); }
-keepclassmembers class java.net.Proxy { java.lang.String toString(); }
-keepclassmembers class com.jcraft.jzlib.Deflate$Config { void <init>(int,int,int,int,int); }
-keepclassmembers class java.net.Proxy { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressBuilder { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.lang.String access$000(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressBuilder { void <init>(); }
-keepclassmembers class java.net.Proxy { int hashCode(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { long access$100(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class java.net.Socket { boolean isInputShutdown(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void access$1000(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mailstore.ThreadInfo access$1200(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message); }
-keepclassmembers class java.net.Proxy { void <clinit>(); }
-keepclassmembers class java.util.logging.LogRecord { void <init>(java.util.logging.Level,java.lang.String); }
-keepclassmembers class android.widget.AbsListView$4 { void <init>(android.widget.AbsListView); }
-keepclassmembers class android.app.Fragment { void performSaveInstanceState(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mailstore.LocalStore access$1100(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class java.net.Socket { boolean isOutputShutdown(); }
-keepclassmembers class android.app.Fragment { void performPause(); }
-keepclassmembers class java.net.Inet6Address { java.lang.String toString(); }
-keepclassmembers class android.content.ContentValues$1 { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressBuilder { org.apache.james.mime4j.dom.address.AddressList parseAddressList(java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.AddressBuilder { org.apache.james.mime4j.dom.address.AddressList parseAddressList(java.lang.String,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class android.app.Fragment { void performStop(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void access$1400(com.fsck.k9.mailstore.LocalFolder,long); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationStart(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void access$1500(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,long); }
-keepclassmembers class java.util.logging.LogRecord { java.util.logging.Level getLevel(); }
-keepclassmembers class java.net.Socket { void accepted(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { long access$1300(com.fsck.k9.mailstore.LocalFolder,android.database.sqlite.SQLiteDatabase,android.content.ContentValues,com.fsck.k9.mail.Part,long); }
-keepclassmembers class android.animation.LayoutTransition$4 { void <init>(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int,android.view.View$OnLayoutChangeListener); }
-keepclassmembers class android.text.method.NumberKeyListener { void <init>(); }
-keepclassmembers class android.preference.PreferenceManager { void <init>(android.app.Activity,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Folder$FolderClass access$200(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class java.net.Socket { void cacheLocalAddress(); }
-keepclassmembers class android.text.method.NumberKeyListener { int lookup(android.view.KeyEvent,android.text.Spannable); }
-keepclassmembers class java.net.Inet6Address { void <clinit>(); }
-keepclassmembers class android.app.Fragment { void performDestroyView(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Folder$FolderClass access$400(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class android.preference.PreferenceManager { void init(android.content.Context); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationCancel(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Folder$FolderClass access$500(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class android.os.IMessenger$Stub { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Folder$FolderClass access$300(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class java.util.logging.LogRecord { void setLoggerName(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean access$600(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class android.os.IMessenger$Stub { android.os.IMessenger asInterface(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean access$700(com.fsck.k9.mailstore.LocalFolder); }
-keepclassmembers class android.animation.LayoutTransition$4 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundle(java.util.ResourceBundle); }
-keepclassmembers class android.app.Fragment { void performDestroy(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void access$801(com.fsck.k9.mailstore.LocalFolder,long); }
-keepclassmembers class android.os.IMessenger$Stub { android.os.IBinder asBinder(); }
-keepclassmembers class android.app.Fragment { android.transition.Transition loadTransition(android.content.Context,android.content.res.TypedArray,android.transition.Transition,android.transition.Transition,int); }
-keepclassmembers class java.net.Socket { java.io.FileDescriptor getFileDescriptor$(); }
-keepclassmembers class android.text.method.NumberKeyListener { java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int); }
-keepclassmembers class android.os.storage.IMountService$Stub$Proxy { void <init>(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void access$901(com.fsck.k9.mailstore.LocalFolder,long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void addChildrenToStack(java.util.Stack,com.fsck.k9.mail.Part,long); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean ok(char[],char); }
-keepclassmembers class android.text.method.NumberKeyListener { boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent); }
-keepclassmembers class android.view.inputmethod.CompletionInfo$1 { void <init>(); }
-keepclassmembers class android.view.animation.TranslateAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpInlineDialog$1 { void <init>(com.fsck.k9.activity.compose.PgpInlineDialog); }
-keepclassmembers class android.view.ViewRootImpl { boolean isViewDescendantOf(android.view.View,android.view.View); }
-keepclassmembers class java.util.logging.LogRecord { void setSourceClassName(java.lang.String); }
-keepclassmembers class android.widget.ListPopupWindow$ListSelectorHider { void <init>(android.widget.ListPopupWindow); }
-keepclassmembers class java.util.logging.LogRecord { void setResourceBundleName(java.lang.String); }
-keepclassmembers class android.app.Fragment { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpInlineDialog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.widget.ListPopupWindow$ListSelectorHider { void <init>(android.widget.ListPopupWindow,android.widget.ListPopupWindow$1); }
-keepclassmembers class java.util.logging.LogRecord { void setSourceMethodName(java.lang.String); }
-keepclassmembers class libcore.net.url.FileURLConnection { void <init>(java.net.URL); }
-keepclassmembers class android.widget.ListPopupWindow$ListSelectorHider { void run(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.Map appendMessages(java.util.List,boolean); }
-keepclassmembers class java.util.logging.LogRecord { void setThrown(java.lang.Throwable); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void <init>(org.apache.harmony.security.x509.GeneralName,int,int); }
-keepclassmembers class libcore.net.url.FileURLConnection { void connect(); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.AuthorityKeyIdentifier$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { long decodeAndCountBytes(java.io.File,java.lang.String,long); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { void <init>(android.content.Context); }
-keepclassmembers class android.view.animation.TranslateAnimation { void <init>(float,float,float,float); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder create(android.content.Context); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { long decodeAndCountBytes(java.io.InputStream,java.lang.String,long); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent); }
-keepclassmembers class android.preference.PreferenceManager { android.preference.PreferenceScreen inflateFromResource(android.content.Context,int,android.preference.PreferenceScreen); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { org.apache.harmony.security.x509.GeneralName access$000(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { int access$200(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class android.view.animation.TranslateAnimation { void <init>(int,float,int,float,int,float,int,float); }
-keepclassmembers class android.widget.AbsSeekBar { void <init>(android.content.Context); }
-keepclassmembers class java.util.logging.LogRecord { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { int access$100(org.apache.harmony.security.x509.GeneralSubtree); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralSubtree { void <clinit>(); }
-keepclassmembers class android.widget.AbsSeekBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void deleteMessageDataFromDisk(long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { long decodeAndCountBytes(byte[],java.lang.String,long); }
-keepclassmembers class android.view.animation.TranslateAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.widget.AbsSeekBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.widget.AbsSeekBar { void <init>(android.content.Context,android.util.AttributeSet,int,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void deleteMessageParts(long); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void unscheduleSelf(java.lang.Runnable); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getNumberOfFrames(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void start(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void deleteMessagePartsFromDisk(android.database.sqlite.SQLiteDatabase,long); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.lang.String getHeaderField(int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { boolean isRunning(); }
-keepclassmembers class android.preference.PreferenceManager { void setSharedPreferencesName(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void run(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void stop(); }
-keepclassmembers class android.preference.PreferenceManager { android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void addFrame(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.widget.AbsSeekBar { void setThumb(android.graphics.drawable.Drawable); }
-keepclassmembers class android.preference.PreferenceManager { int getDefaultSharedPreferencesMode(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { int getDuration(int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void nextFrame(boolean); }
-keepclassmembers class android.view.animation.TranslateAnimation { void initialize(int,int,int,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setOneShot(boolean); }
-keepclassmembers class android.preference.PreferenceManager { android.preference.PreferenceScreen getPreferenceScreen(); }
-keepclassmembers class android.preference.PreferenceManager { java.lang.String getDefaultSharedPreferencesName(android.content.Context); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setFrame(int,boolean,boolean); }
-keepclassmembers class android.preference.PreferenceManager { boolean setPreferences(android.preference.PreferenceScreen); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void <init>(byte[]); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle); }
-keepclassmembers class android.preference.PreferenceManager { android.preference.Preference findPreference(java.lang.CharSequence); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mailstore.ThreadInfo doMessageThreading(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message); }
-keepclassmembers class android.support.v4.app.TaskStackBuilder { android.app.PendingIntent getPendingIntent(int,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.AbsSeekBar { void applyThumbTint(); }
-keepclassmembers class com.bumptech.glide.ListPreloader { void onScroll(android.widget.AbsListView,int,int,int); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.lang.String getContentType(); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.lang.String getContentTypeForPlainFiles(); }
-keepclassmembers class android.widget.AbsSeekBar { int getThumbOffset(); }
-keepclassmembers class android.widget.AbsSeekBar { void setThumbOffset(int); }
-keepclassmembers class android.widget.AbsSeekBar { void setKeyProgressIncrement(int); }
-keepclassmembers class com.bumptech.glide.ListPreloader { void onScrollStateChanged(android.widget.AbsListView,int); }
-keepclassmembers class org.apache.harmony.security.x509.KeyUsage { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class android.widget.AbsSeekBar { void drawableStateChanged(); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.io.InputStream getDirectoryListing(java.io.File); }
-keepclassmembers class android.os.storage.IMountService$Stub$Proxy { java.lang.String getVolumeState(java.lang.String); }
-keepclassmembers class android.preference.PreferenceManager { void setNoCommit(boolean); }
-keepclassmembers class android.widget.AbsSeekBar { void jumpDrawablesToCurrentState(); }
-keepclassmembers class android.widget.AbsSeekBar { void setMax(int); }
-keepclassmembers class android.widget.AbsSeekBar { void onProgressRefresh(float,boolean); }
-keepclassmembers class android.widget.AbsSeekBar { void drawableHotspotChanged(float,float); }
-keepclassmembers class libcore.net.url.FileURLConnection { java.io.InputStream getInputStream(); }
-keepclassmembers class android.widget.AbsSeekBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class android.widget.ExpandableListView$SavedState$1 { void <init>(); }
-keepclassmembers class android.widget.AbsSeekBar { void updateThumbAndTrackPos(int,int); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.widget.AbsSeekBar { float getScale(); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil { int bEncodedLength(byte[]); }
-keepclassmembers class libcore.net.url.FileURLConnection { void <clinit>(); }
-keepclassmembers class android.widget.AbsSeekBar { void setThumbPos(int,android.graphics.drawable.Drawable,float,int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil { java.nio.charset.Charset determineCharset(java.lang.String); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void clearMutated(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.AnimationDrawable$AnimationState cloneConstantState(); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void setConstantState(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources); }
-keepclassmembers class android.preference.PreferenceManager { void dispatchActivityResult(int,int,android.content.Intent); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil { com.fsck.k9.mail.internet.EncoderUtil$Encoding determineEncoding(byte[]); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { android.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState(); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore$1 { void <init>(com.android.org.conscrypt.TrustedCertificateStore,java.security.cert.X509Certificate); }
-keepclassmembers class android.widget.AbsSeekBar { void onResolveDrawables(int); }
-keepclassmembers class android.graphics.drawable.AnimationDrawable { void <init>(android.graphics.drawable.AnimationDrawable$AnimationState,android.content.res.Resources,android.graphics.drawable.AnimationDrawable$1); }
-keepclassmembers class com.android.org.conscrypt.TrustedCertificateStore$1 { boolean match(java.security.cert.X509Certificate); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil { java.lang.String encodeB(java.lang.String,java.lang.String,java.nio.charset.Charset,byte[]); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil { byte[] encode(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class android.text.style.ClickableSpan { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders { void <init>(java.util.Map); }
-keepclassmembers class android.widget.AbsSeekBar { void drawTrack(android.graphics.Canvas); }
-keepclassmembers class android.widget.AbsSeekBar { void onMeasure(int,int); }
-keepclassmembers class android.widget.AbsSeekBar { void drawThumb(android.graphics.Canvas); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders { java.util.Map getHeaders(); }
-keepclassmembers class android.widget.AbsSeekBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class java.util.Collections$UnmodifiableList { void <init>(java.util.List); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders { boolean equals(java.lang.Object); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders { int hashCode(); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders { java.util.Map generateHeaders(); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil { java.lang.String encodeEncodedWord(java.lang.String,java.nio.charset.Charset); }
-keepclassmembers class com.fsck.k9.activity.setup.ConnectionSecurityHolder { void <init>(com.fsck.k9.mail.ConnectionSecurity,android.content.res.Resources); }
-keepclassmembers class java.util.Collections$UnmodifiableList { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableList { int indexOf(java.lang.Object); }
-keepclassmembers class android.widget.AbsSeekBar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.util.IntProperty { void <init>(java.lang.String); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Integer); }
-keepclassmembers class com.bumptech.glide.load.model.LazyHeaders { java.lang.String toString(); }
-keepclassmembers class java.util.Collections$UnmodifiableList { int hashCode(); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.lang.Object get(int); }
-keepclassmembers class com.fsck.k9.activity.setup.ConnectionSecurityHolder { int resourceId(); }
-keepclassmembers class android.util.IntProperty { void set(java.lang.Object,java.lang.Object); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.util.ListIterator listIterator(int); }
-keepclassmembers class com.fsck.k9.activity.setup.ConnectionSecurityHolder { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.Account getAccount(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { byte[] getBodyBytes(com.fsck.k9.mail.Body); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void <init>(android.widget.Editor,android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.crypto.OpenPgpApiHelper { java.lang.String buildUserId(com.fsck.k9.Identity); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { byte[] getHeaderBytes(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.lang.String getPrefId(); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.util.ListIterator listIterator(); }
-keepclassmembers class java.util.Collections$UnmodifiableList { java.util.List subList(int,int); }
-keepclassmembers class android.widget.AbsSeekBar { void setHotspot(float,float); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void showWithActionPopup(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void show(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void hideAfterDelay(); }
-keepclassmembers class android.widget.AbsSeekBar { void trackTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.lang.String getPrefId(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil { java.lang.String encodeQ(java.lang.String,java.lang.String,java.nio.charset.Charset,byte[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mailstore.ThreadInfo getThreadInfo(android.database.sqlite.SQLiteDatabase,java.lang.String,boolean); }
-keepclassmembers class java.util.Collections$3 { boolean hasMoreElements(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void removeHiderCallback(); }
-keepclassmembers class java.util.Collections$3 { void <init>(java.util.Collection); }
-keepclassmembers class android.widget.CursorAdapter$ChangeObserver { void <init>(android.widget.CursorAdapter); }
-keepclassmembers class java.util.Collections$3 { java.lang.Object nextElement(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void <init>(android.graphics.drawable.shapes.Shape); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHotspotX(android.graphics.drawable.Drawable,boolean); }
-keepclassmembers class android.graphics.Canvas$CanvasFinalizer { void <init>(long); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getHorizontalGravity(boolean); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCursorOffset(); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$2 { void <init>(android.widget.ListPopupWindow$DropDownListView,android.view.View,int,long); }
-keepclassmembers class android.widget.ListPopupWindow$DropDownListView$2 { void onAnimationEnd(android.animation.Animator); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { android.graphics.Paint getPaint(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SubjectExtractor { void <init>(); }
-keepclassmembers class android.widget.AbsSeekBar { void attemptClaimDrag(); }
-keepclassmembers class android.preference.PreferenceManager { void setOnPreferenceTreeClickListener(android.preference.PreferenceManager$OnPreferenceTreeClickListener); }
-keepclassmembers class android.widget.AbsSeekBar { void onStopTrackingTouch(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SubjectExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class android.widget.AbsSeekBar { void onStartTrackingTouch(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$SubjectExtractor { java.lang.String getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class android.widget.AbsSeekBar { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil { java.util.BitSet initChars(java.lang.String); }
-keepclassmembers class android.widget.AbsSeekBar { void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setIntrinsicHeight(int); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setIntrinsicWidth(int); }
-keepclassmembers class com.github.amlcurran.showcaseview.R$styleable { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.lang.String getTransferEncoding(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { android.app.Dialog onCreateDialog(int); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { int getCurrentCursorOffset(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { int getIntrinsicHeight(); }
-keepclassmembers class com.fsck.k9.mail.internet.EncoderUtil { int qEncodedLength(byte[]); }
-keepclassmembers class android.widget.AbsSeekBar { void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.io.File leafPartToContentValues(android.content.ContentValues,com.fsck.k9.mail.Part,com.fsck.k9.mail.Body); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updatePosition(float,float); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void updateSelection(int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void onPause(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { int getIntrinsicWidth(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings { void onPrepareDialog(int,android.app.Dialog); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { int modulateAlpha(int,int); }
-keepclassmembers class android.widget.AbsSeekBar { void onRtlPropertiesChanged(int); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void <init>(); }
-keepclassmembers class android.widget.Editor$InsertionHandleView { void onDetached(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.os.ParcelFileDescriptor { void <init>(android.os.ParcelFileDescriptor); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void setTitle(java.lang.CharSequence); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void addTagNameConditions(java.util.Set,java.lang.String); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$4 { void restartMessageCryptoProcessing(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$4 { void <init>(com.fsck.k9.ui.messageview.MessageViewFragment); }
-keepclassmembers class org.apache.http.impl.client.DefaultUserTokenHandler { java.lang.Object getUserToken(org.apache.http.protocol.HttpContext); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$4 { void redisplayMessage(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { int getChangingConfigurations(); }
-keepclassmembers class org.apache.http.impl.client.DefaultUserTokenHandler { void <init>(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void resetPruneTagSet(); }
-keepclassmembers class android.os.ParcelFileDescriptor { void <init>(java.io.FileDescriptor,java.io.FileDescriptor); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(); }
-keepclassmembers class android.os.ParcelFileDescriptor { void <init>(java.io.FileDescriptor); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$4 { void showCryptoInfoDialog(com.fsck.k9.view.MessageCryptoDisplayStatus); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setAlpha(int); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(int,int); }
-keepclassmembers class android.os.ParcelFileDescriptor { android.os.ParcelFileDescriptor open(java.io.File,int); }
-keepclassmembers class java.util.Collections$EmptyMap { boolean containsKey(java.lang.Object); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setAllowTagSet(java.lang.String); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(int,int,int); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$4 { void startPendingIntentForCryptoPresenter(android.content.IntentSender,java.lang.Integer,android.content.Intent,int,int,int); }
-keepclassmembers class java.util.Collections$EmptyMap { java.lang.Object get(java.lang.Object); }
-keepclassmembers class java.util.Collections$EmptyMap { java.util.Set entrySet(); }
-keepclassmembers class android.widget.FrameLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class java.util.Collections$EmptyMap { void <init>(java.util.Collections$1); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class org.apache.http.impl.client.DefaultUserTokenHandler { java.security.Principal getAuthPrincipal(org.apache.http.auth.AuthState); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { void <init>(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { boolean equals(java.lang.Object); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void fireConditionModification(org.htmlcleaner.conditional.ITagNodeCondition,org.htmlcleaner.TagNode); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$3 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void loadMessagePart(com.fsck.k9.mailstore.LocalMessage,java.util.Map,android.database.Cursor); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { int getOpacity(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void fireHtmlError(boolean,org.htmlcleaner.TagNode,org.htmlcleaner.audit.ErrorType); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void setDither(boolean); }
-keepclassmembers class org.apache.http.auth.params.AuthParams { java.lang.String getCredentialCharset(org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$3 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { boolean onStateChange(int[]); }
-keepclassmembers class android.os.ParcelFileDescriptor { java.io.FileDescriptor openInternal(java.io.File,int); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { boolean isStateful(); }
-keepclassmembers class java.util.Hashtable$EntryIterator { java.util.Map$Entry next(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { int hashCode(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void fireUglyHtml(boolean,org.htmlcleaner.TagNode,org.htmlcleaner.audit.ErrorType); }
-keepclassmembers class java.util.Hashtable$EntryIterator { java.lang.Object next(); }
-keepclassmembers class android.view.ViewRootImpl$RunQueue$HandlerAction { void <init>(android.view.ViewRootImpl$1); }
-keepclassmembers class java.util.Hashtable$EntryIterator { void <init>(java.util.Hashtable); }
-keepclassmembers class java.util.Hashtable$EntryIterator { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class javax.net.DefaultSocketFactory { void <init>(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void fireUserDefinedModification(boolean,org.htmlcleaner.TagNode,org.htmlcleaner.audit.ErrorType); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { int getHtmlVersion(); }
-keepclassmembers class com.fsck.k9.service.SleepService$SleepDatum { void <init>(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { java.lang.String getBooleanAttributeValues(); }
-keepclassmembers class javax.net.DefaultSocketFactory { java.net.Socket createSocket(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { java.lang.String getHyphenReplacementInComment(); }
-keepclassmembers class com.fsck.k9.service.SleepService$SleepDatum { void <init>(com.fsck.k9.service.SleepService$1); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { java.util.Set getAllowTagSet(); }
-keepclassmembers class android.os.ParcelFileDescriptor { android.os.ParcelFileDescriptor[] createPipe(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { java.util.Set getPruneTagSet(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { org.htmlcleaner.CleanerTransformations getCleanerTransformations(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { org.htmlcleaner.ITagInfoProvider getTagInfoProvider(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isAdvancedXmlEscape(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void loadMessageParts(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isNamespacesAware(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isAllowHtmlInsideAttributes(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isOmitCdataOutsideScriptAndStyle(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isOmitComments(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isAllowMultiWordAttributes(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isDeserializeEntities(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isOmitDoctypeDeclaration(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isOmitDeprecatedTags(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { int copyFrom(android.view.WindowManager$LayoutParams); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isIgnoreQuestAndExclam(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isOmitUnknownTags(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isKeepWhitespaceAndCommentsInHead(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.AccessibilityManager getInstance(android.content.Context); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isOmitHtmlEnvelope(); }
-keepclassmembers class android.view.DisplayInfo$1 { void <init>(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isRecognizeUnicodeChars(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isOmitXmlDeclaration(); }
-keepclassmembers class android.view.DisplayInfo$1 { android.view.DisplayInfo createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void messageMarkerToContentValues(android.content.ContentValues); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void missingPartToContentValues(android.content.ContentValues,com.fsck.k9.mail.Part); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isTranslateSpecialEntities(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isTransResCharsToNCR(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isTransSpecialEntitiesToNCR(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <init>(android.content.Context,android.view.accessibility.IAccessibilityManager,int); }
-keepclassmembers class android.view.DisplayInfo$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class android.os.ParcelFileDescriptor { java.io.FileDescriptor getFileDescriptor(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void moveTemporaryFile(java.io.File,java.lang.String); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isTreatDeprecatedTagsAsContent(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isTrimAttributeValues(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isUseCdataFor(java.lang.String); }
-keepclassmembers class android.os.ParcelFileDescriptor { long getStatSize(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { boolean isTreatUnknownTagsAsContent(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void reset(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void multipartToContentValues(android.content.ContentValues,com.fsck.k9.mail.Multipart); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void parseHeaderBytes(com.fsck.k9.mail.Part,byte[]); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isEnabled(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { long saveMessagePart(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.LocalFolder$PartContainer,long,int); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void updateShape(); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$3 { boolean onQueryTextSubmit(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$3 { void <init>(com.fsck.k9.activity.ChooseFolder,android.view.MenuItem); }
-keepclassmembers class android.os.ParcelFileDescriptor { void close(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { boolean isTouchExplorationEnabled(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { long saveMessageParts(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message); }
-keepclassmembers class com.fsck.k9.activity.ChooseFolder$3 { boolean onQueryTextChange(java.lang.String); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$2 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.controller.MessagingController$Command); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickFillInIntent { void <init>(android.widget.RemoteViews,int,android.content.Intent); }
-keepclassmembers class com.fsck.k9.mail.store.imap.CapabilityResponse { void <init>(java.util.Set); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickFillInIntent { void <init>(android.widget.RemoteViews,android.os.Parcel); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$2 { void run(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setAdvancedXmlEscape(boolean); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class android.os.ParcelFileDescriptor { void closeWithStatus(int,java.lang.String); }
-keepclassmembers class android.os.ParcelFileDescriptor { void releaseResources(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.CapabilityResponse { com.fsck.k9.mail.store.imap.CapabilityResponse parse(com.fsck.k9.mail.store.imap.ImapList); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setAllowHtmlInsideAttributes(boolean); }
-keepclassmembers class android.widget.RemoteViews$SetOnClickFillInIntent { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setAllowTags(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void updateFolderColumn(java.lang.String,java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void updateMoreMessagesOnVisibleLimitChange(int,int); }
-keepclassmembers class android.os.ParcelFileDescriptor { void writeCommStatusAndClose(int,java.lang.String); }
-keepclassmembers class android.os.ParcelFileDescriptor { byte[] getOrCreateStatusBuffer(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.CapabilityResponse { com.fsck.k9.mail.store.imap.CapabilityResponse parse(java.util.List); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void <init>(android.graphics.drawable.ShapeDrawable$ShapeState,android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.mail.store.imap.CapabilityResponse { java.util.Set getCapabilities(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void <init>(android.graphics.drawable.ShapeDrawable$ShapeState,android.content.res.Resources,android.graphics.drawable.ShapeDrawable$1); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void initializeWithState(android.graphics.drawable.ShapeDrawable$ShapeState,android.content.res.Resources); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { long updateOrInsertMessagePart(android.database.sqlite.SQLiteDatabase,android.content.ContentValues,com.fsck.k9.mail.Part,long); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setIgnoreQuestAndExclam(boolean); }
-keepclassmembers class android.os.storage.IMountService$Stub$Proxy { android.os.storage.StorageVolume[] getVolumeList(); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineKeyFactory { void <init>(); }
-keepclassmembers class android.graphics.drawable.ShapeDrawable { void clearMutated(); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setNamespacesAware(boolean); }
-keepclassmembers class android.os.ParcelFileDescriptor { android.os.ParcelFileDescriptor$Status readCommStatus(java.io.FileDescriptor,byte[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.io.File writeBodyToDiskIfNecessary(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void addPartToMessage(com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.mail.Part); }
-keepclassmembers class com.bumptech.glide.load.engine.EngineKeyFactory { com.bumptech.glide.load.engine.EngineKey buildKey(java.lang.String,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.Transformation,com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.Encoder); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setOmitXmlDeclaration(boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.io.File writeBodyToDisk(com.fsck.k9.mail.Body); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setPruneTags(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean areMoreMessagesAvailable(int,java.util.Date); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.Map appendMessages(java.util.List); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setOmitDoctypeDeclaration(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void setStateLocked(int); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setTagInfoProvider(org.htmlcleaner.ITagInfoProvider); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setRecognizeUnicodeChars(boolean); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void changeUid(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Object getValue(float); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { void <init>(android.animation.PathKeyframes$1); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setTranslateSpecialEntities(boolean); }
-keepclassmembers class android.animation.PathKeyframes$FloatKeyframesBase { java.lang.Class getType(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void clearAllMessages(); }
-keepclassmembers class java.lang.InstantiationException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.impl.io.AbstractMessageParser { void <init>(org.apache.http.io.SessionInputBuffer,org.apache.http.message.LineParser,org.apache.http.params.HttpParams); }
-keepclassmembers class java.lang.InstantiationException { void <init>(java.lang.Class); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void clearMessagesOlderThan(long); }
-keepclassmembers class org.htmlcleaner.CleanerProperties { void setUseCdataFor(java.lang.String); }
-keepclassmembers class org.apache.http.impl.cookie.BasicCommentHandler { void <init>(); }
-keepclassmembers class org.apache.http.impl.io.AbstractMessageParser { org.apache.http.Header[] parseHeaders(org.apache.http.io.SessionInputBuffer,int,int,org.apache.http.message.LineParser); }
-keepclassmembers class org.apache.http.impl.cookie.BasicCommentHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class java.lang.InstantiationException { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.Map copyMessages(java.util.List,com.fsck.k9.mail.Folder); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$23 { void run(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void tryConnectToServiceLocked(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { android.view.accessibility.IAccessibilityManager getServiceLocked(); }
-keepclassmembers class com.bumptech.glide.load.engine.OriginalKey { void <init>(java.lang.String,com.bumptech.glide.load.Key); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$23 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.search.SearchAccount,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class com.bumptech.glide.load.engine.OriginalKey { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void close(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean create(com.fsck.k9.mail.Folder$FolderType); }
-keepclassmembers class android.os.ParcelFileDescriptor { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void delete(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean create(com.fsck.k9.mail.Folder$FolderType,int); }
-keepclassmembers class com.bumptech.glide.load.engine.OriginalKey { void updateDiskCacheKey(java.security.MessageDigest); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void handleNotifyAccessibilityStateChanged(); }
-keepclassmembers class com.bumptech.glide.load.engine.OriginalKey { int hashCode(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void handleNotifyHighTextContrastStateChanged(); }
-keepclassmembers class android.app.ActivityThread { android.app.ActivityThread currentActivityThread(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void handleNotifyTouchExplorationStateChanged(); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void delete(boolean); }
-keepclassmembers class android.text.style.UnderlineSpan { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$000(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$200(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$100(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class android.text.style.UnderlineSpan { void <init>(android.os.Parcel); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { java.lang.Object access$300(android.view.accessibility.AccessibilityManager); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void deleteMessagePartsAndDataFromDisk(long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void destroyMessages(java.util.List); }
-keepclassmembers class com.fsck.k9.mail.internet.Iso2022JpToShiftJisInputStream { int read(); }
-keepclassmembers class android.app.ActivityThread { android.app.Application currentApplication(); }
-keepclassmembers class org.apache.http.impl.io.AbstractMessageParser { org.apache.http.HttpMessage parse(); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void access$400(android.view.accessibility.AccessibilityManager,int); }
-keepclassmembers class android.view.accessibility.AccessibilityManager { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean exists(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { void <init>(java.net.PlainSocketImpl); }
-keepclassmembers class com.fsck.k9.mail.internet.Iso2022JpToShiftJisInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int available(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int read(byte[],int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.List extractNewMessages(java.util.List); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void fetch(java.util.List,com.fsck.k9.mail.FetchProfile,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { void close(); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager$1 { void <init>(android.support.v4.content.LocalBroadcastManager,android.os.Looper); }
-keepclassmembers class android.view.ViewRootImpl { android.view.ViewRootImpl$RunQueue getRunQueue(); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { void <init>(); }
-keepclassmembers class java.net.PlainSocketImpl$PlainSocketInputStream { int read(); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager$1 { void handleMessage(android.os.Message); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { void <init>(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.lang.String getAccountUuid(); }
-keepclassmembers class java.lang.BootClassLoader { void <init>(); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.BootClassLoader getInstance(); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL findResource(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.Map getAllMessagesAndEffectiveDates(); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class findClass(java.lang.String); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration findResources(java.lang.String); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Package getPackage(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.List getAllMessageUids(); }
-keepclassmembers class android.view.WindowManager$LayoutParams { void <clinit>(); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Folder$FolderClass getDisplayClass(); }
-keepclassmembers class java.lang.BootClassLoader { java.net.URL getResource(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$5 { void onClientCertificateChanged(java.lang.String); }
-keepclassmembers class java.lang.BootClassLoader { java.lang.Class loadClass(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupIncoming$5 { void <init>(com.fsck.k9.activity.setup.AccountSetupIncoming); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { void close(); }
-keepclassmembers class java.lang.BootClassLoader { java.util.Enumeration getResources(java.lang.String); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { void flush(); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketFactoryImpl { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { long getId(); }
-keepclassmembers class android.app.Notification$1 { void <init>(); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { java.lang.String toString(); }
-keepclassmembers class libcore.icu.NativeNormalizer { java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.lang.Integer getLastUid(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$10 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketFactoryImpl { void <init>(com.android.org.conscrypt.SSLParametersImpl); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Message getMessage(java.lang.String); }
-keepclassmembers class org.apache.commons.io.output.StringBuilderWriter { void write(char[],int,int); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class android.view.ViewRootImpl { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$10 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class libcore.icu.NativeNormalizer { int toUNormalizationMode(java.text.Normalizer$Form); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle setBigContentTitle(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper { void <init>(); }
-keepclassmembers class android.app.Notification$BigPictureStyle { void <init>(android.app.Notification$Builder); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mailstore.LocalMessage getMessage(java.lang.String); }
-keepclassmembers class android.database.sqlite.SQLiteDebug { boolean shouldLogSlowQuery(long); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper { void sendDone(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper { void <init>(com.fsck.k9.mail.store.imap.ImapFolderPusher$1); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketFactoryImpl { java.net.Socket createSocket(); }
-keepclassmembers class com.fsck.k9.cache.TemporaryAttachmentStore { void <clinit>(); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle setSummaryText(java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { int getMessageCount(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper { void startAcceptingDoneContinuation(com.fsck.k9.mail.store.imap.ImapConnection); }
-keepclassmembers class libcore.icu.NativeNormalizer { java.lang.String normalizeImpl(java.lang.String,int); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle bigPicture(android.graphics.Bitmap); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.app.Notification$BigPictureStyle bigLargeIcon(android.graphics.Bitmap); }
-keepclassmembers class com.fsck.k9.cache.TemporaryAttachmentStore { void cleanOldFiles(java.io.File); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper { void stopIdle(); }
-keepclassmembers class android.database.sqlite.SQLiteDebug { void <clinit>(); }
-keepclassmembers class android.app.Notification$BigPictureStyle { android.widget.RemoteViews makeBigContentView(); }
-keepclassmembers class android.app.Notification$BigPictureStyle { void addExtras(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolderPusher$IdleStopper { void stopAcceptingDoneContinuation(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.lang.String getMessageUidById(long); }
-keepclassmembers class com.fsck.k9.cache.TemporaryAttachmentStore { java.io.File createOrCleanAttachmentDirectory(android.content.Context); }
-keepclassmembers class org.htmlcleaner.conditional.TagNodeNameCondition { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.List getMessages(int,int,java.util.Date,com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class org.htmlcleaner.conditional.TagNodeNameCondition { boolean satisfy(org.htmlcleaner.TagNode); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener); }
-keepclassmembers class android.app.Notification$BigPictureStyle { void populateBigContentView(android.app.Notification); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.List getMessages(com.fsck.k9.mail.MessageRetrievalListener,boolean); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLSocketFactoryImpl { java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean); }
-keepclassmembers class com.fsck.k9.cache.TemporaryAttachmentStore { java.io.File getFile(android.content.Context,java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob$FileOpener { void <init>(); }
-keepclassmembers class com.fsck.k9.cache.TemporaryAttachmentStore { java.io.File getFileForWriting(android.content.Context,java.lang.String); }
-keepclassmembers class android.text.BoringLayout { void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,android.text.TextUtils$TruncateAt,int); }
-keepclassmembers class java.util.TreeMap$EntrySet { int size(); }
-keepclassmembers class com.bumptech.glide.load.engine.DecodeJob$FileOpener { java.io.OutputStream open(java.io.File); }
-keepclassmembers class android.app.DialogFragment { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.List getMessagesByReference(java.util.List); }
-keepclassmembers class java.util.TreeMap$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class android.app.DialogFragment { void show(android.app.FragmentManager,java.lang.String); }
-keepclassmembers class com.fsck.k9.cache.TemporaryAttachmentStore { java.io.File getTemporaryAttachmentDirectory(android.content.Context); }
-keepclassmembers class android.app.DialogFragment { void dismiss(); }
-keepclassmembers class java.util.TreeMap$EntrySet { void <init>(java.util.TreeMap); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Big { void <init>(); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Big { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.List getMessagesByUids(java.util.List); }
-keepclassmembers class android.app.DialogFragment { android.app.Dialog getDialog(); }
-keepclassmembers class android.app.DialogFragment { void dismissInternal(boolean); }
-keepclassmembers class java.lang.NoClassDefFoundError { void <init>(java.lang.String); }
-keepclassmembers class java.util.TreeMap$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class android.app.DialogFragment { int getTheme(); }
-keepclassmembers class com.fsck.k9.K9$SplitViewMode { void <clinit>(); }
-keepclassmembers class android.text.BoringLayout { void init(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,android.text.BoringLayout$Metrics,boolean,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Folder$FolderClass getNotifyClass(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mailstore.LocalFolder$MoreMessages getMoreMessages(); }
-keepclassmembers class android.app.DialogFragment { void onAttach(android.app.Activity); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.lang.String getName(); }
-keepclassmembers class android.app.DialogFragment { void onDetach(); }
-keepclassmembers class com.fsck.k9.K9$SplitViewMode { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { int getMode(); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { void <init>(android.animation.Animator); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.lang.Long getOldestMessageDate(); }
-keepclassmembers class android.app.DialogFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Folder$FolderClass getPushClass(); }
-keepclassmembers class sun.misc.Unsafe { sun.misc.Unsafe getUnsafe(); }
-keepclassmembers class sun.misc.Unsafe { void <init>(); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { java.lang.Object newInstance(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.lang.String getPushState(); }
-keepclassmembers class sun.misc.Unsafe { long objectFieldOffset(java.lang.reflect.Field); }
-keepclassmembers class android.app.DialogFragment { android.view.LayoutInflater getLayoutInflater(android.os.Bundle); }
-keepclassmembers class org.apache.http.protocol.RequestExpectContinue { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Folder$FolderClass getRawPushClass(); }
-keepclassmembers class org.apache.http.protocol.RequestExpectContinue { void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext); }
-keepclassmembers class sun.misc.Unsafe { int arrayBaseOffset(java.lang.Class); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Folder$FolderClass getRawSyncClass(); }
-keepclassmembers class com.fsck.k9.K9$SplitViewMode { com.fsck.k9.K9$SplitViewMode valueOf(java.lang.String); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.animation.Animator$AnimatorConstantState { android.animation.Animator newInstance(); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Folder$FolderClass getRawNotifyClass(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean getSignatureUse(); }
-keepclassmembers class sun.misc.Unsafe { int arrayIndexScale(java.lang.Class); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mail.Folder$FolderClass getSyncClass(); }
-keepclassmembers class android.app.DialogFragment { android.app.Dialog onCreateDialog(android.os.Bundle); }
-keepclassmembers class android.app.DialogFragment { void onCancel(android.content.DialogInterface); }
-keepclassmembers class android.app.DialogFragment { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.lang.String getUidFromMessageId(com.fsck.k9.mail.Message); }
-keepclassmembers class android.text.BoringLayout { android.text.BoringLayout$Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout$Metrics); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$3 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { int getUnreadMessageCount(); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView { java.util.List access$000(com.fsck.k9.view.NonLockingScrollView); }
-keepclassmembers class sun.misc.Unsafe { int getArrayBaseOffsetForComponentType(java.lang.Class); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.lang.String toString(); }
-keepclassmembers class dalvik.system.DexPathList$Element { void <init>(java.io.File,boolean,java.io.File,dalvik.system.DexFile); }
-keepclassmembers class android.app.DialogFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView { boolean canViewReceivePointerEvents(android.view.View); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapInt(java.lang.Object,long,int,int); }
-keepclassmembers class android.util.MutableInt { void <init>(int); }
-keepclassmembers class sun.misc.Unsafe { boolean compareAndSwapLong(java.lang.Object,long,long,long); }
-keepclassmembers class sun.misc.Unsafe { int getArrayIndexScaleForComponentType(java.lang.Class); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView { boolean isEventOverChild(android.view.MotionEvent,java.util.List); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView { int getActionMasked(android.view.MotionEvent); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { int getVisibleLimit(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean hasMoreMessages(); }
-keepclassmembers class android.app.DialogFragment { void onStart(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean isInTopGroup(); }
-keepclassmembers class android.app.DialogFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class dalvik.system.DexPathList$Element { void maybeInit(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { int hashCode(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean isOpen(); }
-keepclassmembers class sun.misc.Unsafe { void putOrderedInt(java.lang.Object,long,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { java.util.Map moveMessages(java.util.List,com.fsck.k9.mail.Folder); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader$2 { void <init>(com.android.okhttp.internal.spdy.SpdyConnection$Reader,java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void open(int); }
-keepclassmembers class dalvik.system.DexPathList$Element { java.net.URL findResource(java.lang.String); }
-keepclassmembers class sun.misc.Unsafe { void park(boolean,long); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView { void setupDelegationOfTouchAndHierarchyChangeEvents(); }
-keepclassmembers class sun.misc.Unsafe { void unpark(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView { void onFinishInflate(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean isIntegrate(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader$2 { void execute(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void open(android.database.Cursor); }
-keepclassmembers class java.util.EnumMap$EnumMapIterator { boolean hasNext(); }
-keepclassmembers class java.util.EnumMap$EnumMapIterator { void <init>(java.util.MapEntry$Type,java.util.EnumMap); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class android.app.DialogFragment { void onStop(); }
-keepclassmembers class java.util.EnumMap$EnumMapIterator { java.lang.Object next(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class dalvik.system.DexPathList$Element { dalvik.system.DexFile access$000(dalvik.system.DexPathList$Element); }
-keepclassmembers class com.fsck.k9.view.NonLockingScrollView { void requestChildFocus(android.view.View,android.view.View); }
-keepclassmembers class android.app.BackStackRecord { java.lang.String toString(); }
-keepclassmembers class android.app.DialogFragment { void onDestroyView(); }
-keepclassmembers class android.app.DialogFragment { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class sun.misc.Unsafe { void <clinit>(); }
-keepclassmembers class android.text.BoringLayout { int getLineCount(); }
-keepclassmembers class java.io.StringWriter { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void purgeToVisibleLimit(com.fsck.k9.mailstore.MessageRemovalListener); }
-keepclassmembers class android.text.BoringLayout { int getLineTop(int); }
-keepclassmembers class android.app.BackStackRecord { void dump(java.lang.String,java.io.PrintWriter,boolean); }
-keepclassmembers class android.text.BoringLayout { int getLineDescent(int); }
-keepclassmembers class java.io.StringWriter { void close(); }
-keepclassmembers class android.app.BackStackRecord { void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]); }
-keepclassmembers class android.text.BoringLayout { int getHeight(); }
-keepclassmembers class java.io.StringWriter { void flush(); }
-keepclassmembers class android.text.BoringLayout { int getParagraphDirection(int); }
-keepclassmembers class java.io.StringWriter { java.lang.String toString(); }
-keepclassmembers class java.io.StringWriter { java.lang.StringBuffer getBuffer(); }
-keepclassmembers class android.text.BoringLayout { int getLineStart(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void refresh(java.lang.String,com.fsck.k9.mailstore.LocalFolder$PreferencesHolder); }
-keepclassmembers class java.io.StringWriter { void write(char[],int,int); }
-keepclassmembers class android.text.BoringLayout { float getLineMax(int); }
-keepclassmembers class android.text.BoringLayout { boolean getLineContainsTab(int); }
-keepclassmembers class android.text.BoringLayout { int getEllipsizedWidth(); }
-keepclassmembers class android.text.BoringLayout { void ellipsized(int,int); }
-keepclassmembers class android.text.BoringLayout { void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int); }
-keepclassmembers class android.text.BoringLayout { android.text.Layout$Directions getLineDirections(int); }
-keepclassmembers class android.text.BoringLayout { void <clinit>(); }
-keepclassmembers class android.media.AudioAttributes$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.compose.CryptoSettingsDialog$3 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage$4 { void <init>(com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage$4 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalMessage$4 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void access$000(com.fsck.k9.activity.setup.AccountSetupBasics,boolean); }
-keepclassmembers class java.nio.charset.CoderMalfunctionError { void <init>(java.lang.Exception); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageContainerView$SavedState$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void access$100(com.fsck.k9.activity.setup.AccountSetupBasics); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void actionNewAccount(android.content.Context); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode { void <init>(java.lang.String,int); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { com.fsck.k9.activity.setup.AccountSetupBasics$Provider findProviderForDomain(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode { com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode valueOf(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode { com.fsck.k9.activity.compose.RecipientPresenter$CryptoMode[] values(); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(); }
-keepclassmembers class java.util.Hashtable$EntrySet { boolean contains(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void save(com.fsck.k9.preferences.StorageEditor); }
-keepclassmembers class java.util.Hashtable$EntrySet { java.util.Iterator iterator(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void save(); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class android.view.animation.AccelerateInterpolator { float getInterpolation(float); }
-keepclassmembers class android.support.v4.app.NotificationCompat { void <clinit>(); }
-keepclassmembers class android.app.BackStackRecord { void <init>(android.app.FragmentManagerImpl); }
-keepclassmembers class com.android.okhttp.ResponseSource { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.ResponseSource { void <clinit>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat { void access$000(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.MigrationTo52 { void addMoreMessagesColumnToFoldersTable(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class java.util.Hashtable$EntrySet { int size(); }
-keepclassmembers class android.support.v4.app.NotificationCompat { void access$100(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style); }
-keepclassmembers class android.app.BackStackRecord { void addOp(android.app.BackStackRecord$Op); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$2 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class java.util.Hashtable$EntrySet { boolean containsAll(java.util.Collection); }
-keepclassmembers class java.net.ConnectException { void <init>(); }
-keepclassmembers class android.support.v4.app.NotificationCompat { android.support.v4.app.NotificationCompat$NotificationCompatImpl access$200(); }
-keepclassmembers class java.net.ConnectException { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$2 { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class android.support.v4.app.NotificationCompat { void addActionsToBuilder(android.support.v4.app.NotificationBuilderWithActions,java.util.ArrayList); }
-keepclassmembers class java.net.ConnectException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction add(android.app.Fragment,java.lang.String); }
-keepclassmembers class java.util.Hashtable$EntrySet { java.lang.String toString(); }
-keepclassmembers class android.support.v4.app.NotificationCompat { void addStyleToBuilderJellybean(android.support.v4.app.NotificationBuilderWithBuilderAccessor,android.support.v4.app.NotificationCompat$Style); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction add(int,android.app.Fragment); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void finishAutoSetup(); }
-keepclassmembers class java.util.Hashtable$EntrySet { boolean equals(java.lang.Object); }
-keepclassmembers class android.view.ViewGroupOverlay { void add(android.view.View); }
-keepclassmembers class android.view.ViewGroupOverlay { void <init>(android.content.Context,android.view.View); }
-keepclassmembers class java.util.Hashtable$EntrySet { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.Hashtable$EntrySet { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet { void <init>(java.util.EnumMap); }
-keepclassmembers class android.app.BackStackRecord { void doAddOp(int,android.app.Fragment,java.lang.String,int); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLEngine { com.android.org.conscrypt.OpenSSLEngine getInstance(java.lang.String); }
-keepclassmembers class android.text.style.CharacterStyle { void <init>(); }
-keepclassmembers class org.apache.http.auth.MalformedChallengeException { void <init>(java.lang.String); }
-keepclassmembers class java.util.Hashtable$EntrySet { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet { int size(); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet { boolean contains(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ExportAsyncTask { void <init>(com.fsck.k9.activity.Accounts,boolean,java.util.Set,com.fsck.k9.activity.Accounts$1); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction replace(int,android.app.Fragment); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ExportAsyncTask { void <init>(com.fsck.k9.activity.Accounts,boolean,java.util.Set); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLEngine { void <init>(long); }
-keepclassmembers class java.util.EnumMap$EnumMapKeySet { java.util.Iterator iterator(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask { void <init>(org.openintents.openpgp.util.OpenPgpApi,android.content.Intent,java.io.InputStream,java.io.OutputStream,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback,org.openintents.openpgp.util.OpenPgpApi$1); }
-keepclassmembers class android.provider.ContactsContract$Contacts { android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask { void <init>(org.openintents.openpgp.util.OpenPgpApi,android.content.Intent,java.io.InputStream,java.io.OutputStream,org.openintents.openpgp.util.OpenPgpApi$IOpenPgpCallback); }
-keepclassmembers class android.provider.ContactsContract$Contacts { android.net.Uri getLookupUri(long,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void saveMessage(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mail.Message,boolean,java.util.Map); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ExportAsyncTask { java.lang.Boolean doInBackground(java.lang.Void[]); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLEngine { java.security.PrivateKey getPrivateKeyById(java.lang.String); }
-keepclassmembers class android.support.v4.app.NotificationCompat { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask { android.content.Intent doInBackground(java.lang.Void[]); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ExportAsyncTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { java.lang.String getDefaultAccountName(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask { void onPostExecute(android.content.Intent); }
-keepclassmembers class android.provider.ContactsContract$Contacts { void markAsContacted(android.content.ContentResolver,long); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ExportAsyncTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class com.fsck.k9.mail.store.pop3.Pop3Store$Pop3ErrorResponse { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { java.lang.String getOwnerName(); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction remove(android.app.Fragment); }
-keepclassmembers class org.apache.http.impl.auth.AuthSchemeBase { void processChallenge(org.apache.http.Header); }
-keepclassmembers class org.apache.http.impl.auth.AuthSchemeBase { void <init>(); }
-keepclassmembers class org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { java.lang.String getXmlAttribute(android.content.res.XmlResourceParser,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ExportAsyncTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class com.fsck.k9.service.BootReceiver$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$ExportAsyncTask { void showProgressDialog(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void initializeViewListeners(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void onManualSetup(); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction setTransition(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void setOptional(int); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void <init>(int,org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.http.impl.auth.AuthSchemeBase { boolean isProxy(); }
-keepclassmembers class android.provider.ContactsContract$Contacts { void <clinit>(); }
-keepclassmembers class android.app.FragmentManager { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapResource { void <init>(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class com.fsck.k9.preferences.CheckBoxListPreference$1 { void <init>(com.fsck.k9.preferences.CheckBoxListPreference); }
-keepclassmembers class com.fsck.k9.preferences.CheckBoxListPreference$1 { void onClick(android.content.DialogInterface,int,boolean); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapResource { com.bumptech.glide.load.resource.bitmap.BitmapResource obtain(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class com.android.org.conscrypt.OpenSSLEngine { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void onNext(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapResource { android.graphics.Bitmap get(); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapResource { java.lang.Object get(); }
-keepclassmembers class android.app.BackStackRecord { android.app.FragmentTransaction addToBackStack(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapResource { int getSize(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { com.fsck.k9.Account access$100(com.fsck.k9.activity.MessageList); }
-keepclassmembers class com.bumptech.glide.load.resource.bitmap.BitmapResource { void recycle(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void setupFolderNames(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageList { android.content.Intent actionDisplayMessageIntent(android.content.Context,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.view.animation.PathInterpolator { void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void actionDisplaySearch(android.content.Context,com.fsck.k9.search.SearchSpecification,boolean,boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void actionDisplaySearch(android.content.Context,com.fsck.k9.search.SearchSpecification,boolean,boolean,boolean); }
-keepclassmembers class com.fsck.k9.activity.ColorPickerDialog { void <init>(android.content.Context,com.fsck.k9.activity.ColorPickerDialog$OnColorChangedListener,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void showPassword(boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void addMessageListFragment(com.fsck.k9.fragment.MessageListFragment,boolean); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1TypeCollection { void setDefault(java.lang.Object,int); }
-keepclassmembers class android.view.animation.PathInterpolator { void parseInterpolatorFromTypeArray(android.content.res.TypedArray); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void configureMenu(android.view.Menu); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { java.lang.String[] splitEmail(java.lang.String); }
-keepclassmembers class android.app.BackStackRecord { void bumpBackStackNesting(int); }
-keepclassmembers class com.fsck.k9.mail.Folder$FolderType { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void updateViewVisibility(boolean); }
-keepclassmembers class com.fsck.k9.activity.ColorPickerDialog { void setColor(int); }
-keepclassmembers class com.fsck.k9.mail.Folder$FolderType { void <init>(java.lang.String,int); }
-keepclassmembers class android.app.BackStackRecord { int commit(); }
-keepclassmembers class android.app.BackStackRecord { int commitAllowingStateLoss(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void validateFields(); }
-keepclassmembers class android.widget.Editor$1 { void <init>(android.widget.Editor); }
-keepclassmembers class android.app.BackStackRecord { int commitInternal(boolean); }
-keepclassmembers class android.view.animation.PathInterpolator { void initQuad(float,float); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void afterTextChanged(android.text.Editable); }
-keepclassmembers class android.emoji.EmojiFactory { android.emoji.EmojiFactory newAvailableInstance(); }
-keepclassmembers class android.view.animation.PathInterpolator { void initCubic(float,float,float,float); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class android.app.BackStackRecord { void run(); }
-keepclassmembers class android.view.animation.PathInterpolator { void initPath(android.graphics.Path); }
-keepclassmembers class java.security.spec.EncodedKeySpec { void <init>(byte[]); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void onCheckedChanged(android.widget.CompoundButton,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.migrations.Migrations { void upgradeDatabase(android.database.sqlite.SQLiteDatabase,com.fsck.k9.mailstore.migrations.MigrationsHelper); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void onClick(android.view.View); }
-keepclassmembers class org.apache.harmony.xml.parsers.SAXParserImpl { void <init>(java.util.Map); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.harmony.xml.parsers.SAXParserImpl { void resetInternal(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { android.app.Dialog onCreateDialog(int); }
-keepclassmembers class android.app.BackStackRecord { void setFirstOut(android.util.SparseArray,android.app.Fragment); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void onClientCertificateChanged(java.lang.String); }
-keepclassmembers class android.app.BackStackRecord { void setLastIn(android.util.SparseArray,android.app.Fragment); }
-keepclassmembers class android.view.animation.PathInterpolator { float getInterpolation(float); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(); }
-keepclassmembers class android.app.BackStackRecord { void calculateFragments(android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void close(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void onPostCreate(android.os.Bundle); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void flush(); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void write(char[],int,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(int,java.lang.String); }
-keepclassmembers class com.android.internal.util.FastPrintWriter$DummyWriter { void <init>(com.android.internal.util.FastPrintWriter$1); }
-keepclassmembers class org.apache.harmony.xml.parsers.SAXParserImpl { org.xml.sax.XMLReader getXMLReader(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setDisplayClass(com.fsck.k9.mail.Folder$FolderClass); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setFlags(java.util.List,java.util.Set,boolean); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void <init>(int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { boolean checkTag(int); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Writer { void <init>(com.android.okio.OkBuffer); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setFlags(java.util.Set,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.OtherName); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Writer { void writeHeaders(java.util.List); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { java.lang.Object decode(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.app.BackStackRecord { void calculateBackFragments(android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSetupBasics { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setInTopGroup(boolean); }
-keepclassmembers class java.util.logging.LogManager { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setIntegrate(boolean); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Writer { void writeInt(int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x501.Name); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.ORAddress); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(org.apache.harmony.security.x509.EDIPartyName); }
-keepclassmembers class java.util.logging.LogManager { void checkAccess(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class java.util.logging.LogManager { boolean addLogger(java.util.logging.Logger); }
-keepclassmembers class com.android.okhttp.internal.spdy.HpackDraft05$Writer { void writeByteString(com.android.okio.ByteString); }
-keepclassmembers class android.app.BackStackRecord { android.app.BackStackRecord$TransitionState beginTransition(android.util.SparseArray,android.util.SparseArray,boolean); }
-keepclassmembers class android.view.KeyCharacterMap { void addDeadKey(int,int,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(byte[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setLastPush(long); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setLastChecked(long); }
-keepclassmembers class java.util.logging.LogManager { void addToFamilyTree(java.util.logging.Logger,java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { void addCombining(int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setLastSelectedFolderName(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <init>(int,byte[]); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setMoreMessages(com.fsck.k9.mailstore.LocalFolder$MoreMessages); }
-keepclassmembers class android.view.KeyCharacterMap { long nativeReadFromParcel(android.os.Parcel); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetNumber(long,int); }
-keepclassmembers class android.view.KeyCharacterMap { void nativeWriteToParcel(long,android.os.Parcel); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetDisplayLabel(long,int); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetCharacter(long,int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setNotifyClass(com.fsck.k9.mail.Folder$FolderClass); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition cloneTransition(android.transition.Transition); }
-keepclassmembers class android.view.KeyCharacterMap { char nativeGetMatch(long,int,char[],int); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValue$1 { int getEncodedLength(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.KeyCharacterMap { int nativeGetKeyboardType(long); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void <init>(com.fsck.k9.mail.Part); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyEvent[] nativeGetEvents(long,char[]); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition getEnterTransition(android.app.Fragment,boolean); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.Object getName(); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void body(org.apache.james.mime4j.stream.BodyDescriptor,java.io.InputStream); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setPushClass(com.fsck.k9.mail.Folder$FolderClass); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void endBodyPart(); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void field(org.apache.james.mime4j.stream.Field); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void endHeader(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setPushState(java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void endMultipart(); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void epilogue(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void endMessage(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setStatus(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setSyncClass(com.fsck.k9.mail.Folder$FolderClass); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition getExitTransition(android.app.Fragment,boolean); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition getSharedElementTransition(android.app.Fragment,android.app.Fragment,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void setVisibleLimit(int); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void startHeader(); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void preamble(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void raw(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void startMessage(); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyCharacterMap load(int); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void startMultipart(org.apache.james.mime4j.stream.BodyDescriptor); }
-keepclassmembers class com.fsck.k9.mail.message.MessageHeaderParser$MessageHeaderParserContentHandler { void startBodyPart(); }
-keepclassmembers class android.view.KeyCharacterMap { int get(int,int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { com.fsck.k9.mailstore.LocalMessage storeSmallMessage(com.fsck.k9.mail.Message,java.lang.Runnable); }
-keepclassmembers class android.app.BackStackRecord { java.util.ArrayList captureExitingViews(android.transition.Transition,android.app.Fragment,android.util.ArrayMap,android.view.View); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int hashCode(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger getLogger(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { void updateLastUid(); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.LogManager getLogManager(); }
-keepclassmembers class android.app.BackStackRecord { android.util.ArrayMap remapSharedElements(android.app.BackStackRecord$TransitionState,android.app.Fragment,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder { boolean syncRemoteDeletions(); }
-keepclassmembers class java.util.logging.LogManager { java.util.Enumeration getLoggerNames(); }
-keepclassmembers class java.util.logging.LogManager { java.lang.String getProperty(java.lang.String); }
-keepclassmembers class android.view.KeyCharacterMap { char getNumber(int); }
-keepclassmembers class android.content.Context { void registerComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.content.Context { void <init>(); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(); }
-keepclassmembers class android.widget.Editor$PositionListener { void addSubscriber(android.widget.Editor$TextViewPositionListener,boolean); }
-keepclassmembers class android.app.BackStackRecord { java.util.ArrayList addTransitionTargets(android.app.BackStackRecord$TransitionState,android.transition.Transition,android.transition.Transition,android.transition.Transition,android.view.View,android.app.Fragment,android.app.Fragment,java.util.ArrayList,boolean,java.util.ArrayList); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean decodeExtras(android.content.Intent); }
-keepclassmembers class android.content.Context { java.lang.CharSequence getText(int); }
-keepclassmembers class android.view.KeyCharacterMap { int getDeadChar(int,int); }
-keepclassmembers class android.content.Context { java.lang.String getString(int); }
-keepclassmembers class android.content.Context { java.lang.String getString(int,java.lang.Object[]); }
-keepclassmembers class android.view.KeyCharacterMap { char getMatch(int,char[],int); }
-keepclassmembers class android.content.Context { void unregisterComponentCallbacks(android.content.ComponentCallbacks); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <init>(); }
-keepclassmembers class android.widget.Editor$PositionListener { void removeSubscriber(android.widget.Editor$TextViewPositionListener); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int[]); }
-keepclassmembers class android.content.Context { android.graphics.drawable.Drawable getDrawable(int); }
-keepclassmembers class java.lang.RealToString { void <init>(); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(int,int[]); }
-keepclassmembers class java.lang.RealToString { java.lang.String resultOrSideEffect(java.lang.AbstractStringBuilder,java.lang.String); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[]); }
-keepclassmembers class android.app.ActivityTransitionCoordinator$GhostViewListeners { void <init>(android.view.View,android.view.View,android.view.ViewGroup); }
-keepclassmembers class android.view.KeyCharacterMap { boolean getKeyData(int,android.view.KeyCharacterMap$KeyData); }
-keepclassmembers class java.lang.RealToString { java.lang.String doubleToString(double); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionX(); }
-keepclassmembers class java.lang.RealToString { void appendDouble(java.lang.AbstractStringBuilder,double); }
-keepclassmembers class android.content.Context { android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int); }
-keepclassmembers class java.lang.RealToString { java.lang.RealToString getInstance(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View); }
-keepclassmembers class java.lang.StringToReal { double parseDblImpl(java.lang.String,int); }
-keepclassmembers class java.lang.RealToString { java.lang.String convertDouble(java.lang.AbstractStringBuilder,double); }
-keepclassmembers class java.lang.StringToReal { float parseFltImpl(java.lang.String,int); }
-keepclassmembers class java.lang.StringToReal { java.lang.NumberFormatException invalidReal(java.lang.String,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setSource(android.view.View,int); }
-keepclassmembers class android.widget.Editor$PositionListener { void updatePosition(); }
-keepclassmembers class android.view.KeyCharacterMap { android.view.KeyEvent[] getEvents(char[]); }
-keepclassmembers class java.lang.StringToReal { java.lang.StringToReal$StringExponentPair initialParse(java.lang.String,int,boolean); }
-keepclassmembers class java.util.logging.LogManager { void readConfigurationImpl(java.io.InputStream); }
-keepclassmembers class android.widget.Editor$PositionListener { void onScrollChanged(); }
-keepclassmembers class android.view.KeyCharacterMap { int getKeyboardType(); }
-keepclassmembers class android.widget.Editor$PositionListener { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.view.KeyCharacterMap { int getModifierBehavior(); }
-keepclassmembers class android.os.StrictMode$3 { void <init>(); }
-keepclassmembers class android.os.StrictMode$3 { android.os.Handler initialValue(); }
-keepclassmembers class android.os.StrictMode$3 { java.lang.Object initialValue(); }
-keepclassmembers class android.view.KeyCharacterMap { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setChecked(boolean); }
-keepclassmembers class java.util.logging.LogManager { java.lang.Object getInstanceByClass(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setEnabled(boolean); }
-keepclassmembers class android.view.KeyCharacterMap { void <init>(android.os.Parcel,android.view.KeyCharacterMap$1); }
-keepclassmembers class android.view.KeyCharacterMap { void <clinit>(); }
-keepclassmembers class java.util.logging.LogManager { void readConfiguration(java.io.InputStream); }
-keepclassmembers class java.util.logging.LogManager { void reset(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setPassword(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollable(boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setItemCount(int); }
-keepclassmembers class android.app.BackStackRecord { android.transition.Transition mergeTransitions(android.transition.Transition,android.transition.Transition,android.transition.Transition,android.app.Fragment,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.String toString(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setCurrentItemIndex(int); }
-keepclassmembers class java.lang.RealToString { java.lang.String floatToString(float); }
-keepclassmembers class java.lang.RealToString { void appendFloat(java.lang.AbstractStringBuilder,float); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setFromIndex(int); }
-keepclassmembers class java.security.BasicPermission { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class java.lang.RealToString { java.lang.String convertFloat(java.lang.AbstractStringBuilder,float); }
-keepclassmembers class java.util.logging.LogManager { java.util.logging.Logger getOrCreate(java.lang.String,java.lang.String); }
-keepclassmembers class java.util.logging.LogManager { void setParent(java.util.logging.Logger,java.util.logging.Logger); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setToIndex(int); }
-keepclassmembers class com.getkeepsafe.relinker.elf.Section64Header { void <init>(com.getkeepsafe.relinker.elf.ElfParser,com.getkeepsafe.relinker.elf.Elf$Header,int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollX(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setScrollY(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setMaxScrollX(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setAddedCount(int); }
-keepclassmembers class java.util.logging.LogManager { void setLevelRecursively(java.util.logging.Logger,java.util.logging.Level); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setMaxScrollY(int); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setRemovedCount(int); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.String); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setClassName(java.lang.CharSequence); }
-keepclassmembers class java.util.logging.LogManager { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.util.List getText(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setBeforeText(java.lang.CharSequence); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.Throwable); }
-keepclassmembers class android.widget.Editor$PositionListener { int getPositionY(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setContentDescription(java.lang.CharSequence); }
-keepclassmembers class java.security.InvalidKeyException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean isSealed(); }
-keepclassmembers class java.lang.StringToReal { float parseName(java.lang.String,boolean); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$26 { void <init>(com.fsck.k9.mailstore.LocalFolder,java.util.List); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] getEncoded(); }
-keepclassmembers class org.htmlcleaner.TagInfo$1 { void <clinit>(); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void enforceNotSealed(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$26 { java.util.List doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.app.BackStackRecord { void configureTransitions(int,android.app.BackStackRecord$TransitionState,boolean,android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$26 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.content.Context { java.lang.Object getSystemService(java.lang.Class); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { boolean getBooleanProperty(int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void checkDNS(java.lang.String); }
-keepclassmembers class android.content.Context { android.content.res.ColorStateList getColorStateList(int); }
-keepclassmembers class java.lang.RealToString { void freeFormatExponential(java.lang.AbstractStringBuilder,boolean); }
-keepclassmembers class java.math.Division { int divideArrayByInt(int[],int[],int,int); }
-keepclassmembers class java.lang.RealToString { void freeFormat(java.lang.AbstractStringBuilder,boolean); }
-keepclassmembers class java.lang.StringToReal { float parseFloat(java.lang.String); }
-keepclassmembers class java.io.FileDescriptor { void <init>(); }
-keepclassmembers class java.io.FileDescriptor { void sync(); }
-keepclassmembers class java.lang.RealToString { void bigIntDigitGenerator(long,int,boolean,int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void checkURI(java.lang.String); }
-keepclassmembers class java.lang.RealToString { void longDigitGenerator(long,int,boolean,boolean,int); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.String); }
-keepclassmembers class java.io.FileDescriptor { boolean valid(); }
-keepclassmembers class java.security.ProviderException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void displayViews(); }
-keepclassmembers class java.io.FileDescriptor { int getInt$(); }
-keepclassmembers class java.io.FileDescriptor { void setInt$(int); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket(); }
-keepclassmembers class java.io.FileDescriptor { boolean isSocket(int); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void findFragments(); }
-keepclassmembers class java.io.FileDescriptor { void <clinit>(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { void addBigPictureStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { android.view.View getActionButtonIndeterminateProgress(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int[] oidStrToInts(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void initializeActionBar(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { void addBigTextStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$6 { void <init>(com.fsck.k9.activity.MessageCompose); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$6 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { void addInboxStyle(android.support.v4.app.NotificationBuilderWithBuilderAccessor,java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList); }
-keepclassmembers class android.app.BackStackRecord { void removeTargetedViewsFromTransitions(android.view.ViewGroup,android.view.View,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList,android.transition.Transition,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void <init>(int); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void initializeDisplayMode(android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { android.util.SparseArray buildActionExtrasMap(java.util.List); }
-keepclassmembers class android.graphics.Shader$TileMode { void <init>(java.lang.String,int,int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler$1 { void <init>(com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler,java.lang.ref.WeakReference); }
-keepclassmembers class android.provider.Settings$Secure { java.lang.String getString(android.content.ContentResolver,java.lang.String); }
-keepclassmembers class java.lang.RealToString { void <init>(java.lang.RealToString$1); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void initializeFragments(); }
-keepclassmembers class java.lang.RealToString { void <clinit>(); }
-keepclassmembers class android.graphics.Shader$TileMode { void <clinit>(); }
-keepclassmembers class android.provider.Settings$Secure { java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$ThrottlingQueryHandler$1 { void run(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$3 { void <init>(com.fsck.k9.activity.MessageLoaderHelper); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(int,boolean); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$3 { android.content.Loader onCreateLoader(int,android.os.Bundle); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] ipStrToBytes(java.lang.String); }
-keepclassmembers class android.text.style.AbsoluteSizeSpan { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void initializeLayout(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$3 { void onLoadFinished(android.content.Loader,com.fsck.k9.mailstore.MessageViewInfo); }
-keepclassmembers class com.fsck.k9.activity.MessageList { android.content.Intent intentDisplaySearch(android.content.Context,com.fsck.k9.search.SearchSpecification,boolean,boolean,boolean); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.String ipBytesToStr(byte[]); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$3 { void onLoadFinished(android.content.Loader,java.lang.Object); }
-keepclassmembers class android.app.BackStackRecord { void addTargets(android.transition.Transition,java.util.ArrayList); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageLoaderHelper$3 { void onLoaderReset(android.content.Loader); }
-keepclassmembers class com.android.internal.app.AlertController$5 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void setEncodingContent(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.view.accessibility.AccessibilityRecord { void setBooleanProperty(int,boolean); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View); }
-keepclassmembers class java.lang.StringToReal { double parseDouble(java.lang.String); }
-keepclassmembers class android.content.Context { int getColor(int); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { java.lang.Object access$000(org.apache.harmony.security.x509.GeneralName); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { int access$100(org.apache.harmony.security.x509.GeneralName); }
-keepclassmembers class android.view.View$SendViewScrolledAccessibilityEvent { void <init>(android.view.View,android.view.View$1); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onAccounts(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onEditAccount(); }
-keepclassmembers class java.lang.NoSuchFieldException { void <init>(java.lang.String); }
-keepclassmembers class android.app.BackStackRecord { boolean hasSimpleTarget(android.transition.Transition); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onEditPrefs(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { byte[] access$202(org.apache.harmony.security.x509.GeneralName,byte[]); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onToggleTheme(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onShowFolderList(); }
-keepclassmembers class org.apache.harmony.security.x509.GeneralName { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void removeMessageListFragment(); }
-keepclassmembers class android.app.BackStackRecord { boolean isNullOrEmpty(java.util.List); }
-keepclassmembers class org.apache.james.mime4j.codec.DecodeMonitor { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void removeMessageViewFragment(); }
-keepclassmembers class android.app.BackStackRecord { android.util.ArrayMap remapNames(java.util.ArrayList,java.util.ArrayList,android.util.ArrayMap); }
-keepclassmembers class org.apache.james.mime4j.codec.DecodeMonitor { void <init>(); }
-keepclassmembers class android.provider.Settings$Secure { int getIntForUser(android.content.ContentResolver,java.lang.String,int,int); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { void <init>(android.content.Context,java.lang.Class,com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.Lifecycle); }
-keepclassmembers class org.apache.james.mime4j.codec.DecodeMonitor { boolean warn(java.lang.String,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageList { android.content.Intent shortcutIntent(android.content.Context,java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountExtractor { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountExtractor { java.lang.String getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1BitString$ASN1NamedBitList { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void showDefaultTitleView(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean showLogicalNextMessage(); }
-keepclassmembers class android.app.AppGlobals { android.app.Application getInitialApplication(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$7 { void <init>(com.fsck.k9.controller.MessagingController,java.lang.String,java.lang.String,java.lang.String,java.util.Set,java.util.Set,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.codec.DecodeMonitor { boolean isListening(); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileDecoder { void <init>(); }
-keepclassmembers class android.app.BackStackRecord { void excludeHiddenFragments(java.util.ArrayList,int,android.transition.Transition); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileDecoder { com.bumptech.glide.load.engine.Resource decode(java.io.File,int,int); }
-keepclassmembers class android.os.StrictMode$9 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void showMessageList(); }
-keepclassmembers class android.app.AppGlobals { int getIntCoreSetting(java.lang.String,int); }
-keepclassmembers class com.android.internal.app.AlertController$4 { void <init>(com.android.internal.app.AlertController,android.view.View,android.view.View); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { void lock(); }
-keepclassmembers class android.os.StrictMode$9 { android.view.IWindowManager create(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void showMessageTitleView(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantLock$NonfairSync { boolean tryAcquire(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$7 { void run(); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileDecoder { com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int); }
-keepclassmembers class org.apache.http.impl.HttpConnectionMetricsImpl { void <init>(org.apache.http.io.HttpTransportMetrics,org.apache.http.io.HttpTransportMetrics); }
-keepclassmembers class com.bumptech.glide.load.resource.file.FileDecoder { java.lang.String getId(); }
-keepclassmembers class android.os.StrictMode$9 { java.lang.Object create(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void showMessageView(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void showMessageViewPlaceHolder(); }
-keepclassmembers class android.view.accessibility.AccessibilityEvent$1 { void <init>(); }
-keepclassmembers class android.app.BackStackRecord { void setEpicenter(android.transition.Transition,android.view.View); }
-keepclassmembers class java.lang.Enum$1 { void <init>(int); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean showNextMessage(); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object[] create(java.lang.Class); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target); }
-keepclassmembers class org.apache.http.impl.HttpConnectionMetricsImpl { void incrementRequestCount(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean showPreviousMessage(); }
-keepclassmembers class org.apache.http.impl.HttpConnectionMetricsImpl { void incrementResponseCount(); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.request.Request buildRequestRecursive(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.ThumbnailRequestCoordinator); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean useSplitView(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void <init>(); }
-keepclassmembers class java.lang.Enum$1 { java.lang.Object create(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void disableDeleteAction(); }
-keepclassmembers class android.app.ActivityThread { android.content.Intent getIntentBeingBroadcast(); }
-keepclassmembers class android.app.BackStackRecord { android.app.BackStackRecord$TransitionState popFromBackStack(boolean,android.app.BackStackRecord$TransitionState,android.util.SparseArray,android.util.SparseArray); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { java.net.Socket getSocket(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { boolean isSecure(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void opening(java.net.Socket,org.apache.http.HttpHost); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean dispatchKeyEvent(android.view.KeyEvent); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { android.os.Bundle getBundleForAction(android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void openCompleted(boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void displayMessageSubject(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void enableActionBarProgress(boolean); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void shutdown(); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$11 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$11 { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void close(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void messageHeaderViewAvailable(com.fsck.k9.view.MessageHeader); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { org.apache.http.io.SessionOutputBuffer createSessionOutputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { org.apache.http.io.SessionInputBuffer createSessionInputBuffer(java.net.Socket,int,org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void goBack(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onAccountUnavailable(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onBackStackChanged(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.SelectOrExamineResponse { void <init>(java.lang.Boolean); }
-keepclassmembers class android.provider.Settings$Secure { boolean isLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mail.store.imap.SelectOrExamineResponse { com.fsck.k9.mail.store.imap.SelectOrExamineResponse parse(com.fsck.k9.mail.store.imap.ImapResponse); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onBackPressed(); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.Priority getThumbnailPriority(); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { org.apache.http.io.HttpMessageParser createResponseParser(org.apache.http.io.SessionInputBuffer,org.apache.http.HttpResponseFactory,org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.mail.store.imap.SelectOrExamineResponse { com.fsck.k9.mail.store.imap.SelectOrExamineResponse noOpenModeInResponse(); }
-keepclassmembers class com.fsck.k9.mail.store.imap.SelectOrExamineResponse { int getOpenMode(); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.request.Request obtainRequest(com.bumptech.glide.request.target.Target,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { java.util.ArrayList getParcelableArrayListForActions(android.support.v4.app.NotificationCompatBase$Action[]); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onCompose(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.mail.store.imap.SelectOrExamineResponse { boolean hasOpenMode(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean onCustomKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.mail.ssl.LocalKeyStore$LocalKeyStoreHolder { void <clinit>(); }
-keepclassmembers class com.fsck.k9.notification.AuthenticationErrorNotifications { void <init>(com.fsck.k9.notification.NotificationController); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void sendRequestHeader(org.apache.http.HttpRequest); }
-keepclassmembers class com.fsck.k9.notification.AuthenticationErrorNotifications { android.support.v4.app.NotificationManagerCompat getNotificationManager(); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.animation.GlideAnimationFactory); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class android.provider.Settings$Secure { int getLocationModeForUser(android.content.ContentResolver,int); }
-keepclassmembers class org.apache.http.impl.conn.DefaultClientConnection { org.apache.http.HttpResponse receiveResponseHeader(); }
-keepclassmembers class android.app.BackStackRecord { void setNameOverride(android.util.ArrayMap,java.lang.String,java.lang.String); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void <init>(); }
-keepclassmembers class com.fsck.k9.notification.AuthenticationErrorNotifications { void showAuthenticationErrorNotification(com.fsck.k9.Account,boolean); }
-keepclassmembers class android.provider.Settings$Secure { void <clinit>(); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.String[][] create(java.util.Locale); }
-keepclassmembers class android.support.v4.app.NotificationCompatJellybean { android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,android.support.v4.app.NotificationCompatBase$Action); }
-keepclassmembers class android.app.BackStackRecord { void setNameOverrides(android.app.BackStackRecord$TransitionState,java.util.ArrayList,java.util.ArrayList); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.GenericRequestBuilder diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder); }
-keepclassmembers class android.app.Activity$ManagedCursor { void <init>(android.database.Cursor); }
-keepclassmembers class android.app.BackStackRecord { void setBackNameOverrides(android.app.BackStackRecord$TransitionState,android.util.ArrayMap,boolean); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.GenericRequestBuilder dontAnimate(); }
-keepclassmembers class com.fsck.k9.notification.AuthenticationErrorNotifications { void clearAuthenticationErrorNotification(com.fsck.k9.Account,boolean); }
-keepclassmembers class android.app.Activity$ManagedCursor { android.database.Cursor access$100(android.app.Activity$ManagedCursor); }
-keepclassmembers class com.fsck.k9.notification.AuthenticationErrorNotifications { android.app.PendingIntent createContentIntent(android.content.Context,com.fsck.k9.Account,boolean); }
-keepclassmembers class org.apache.http.HttpVersion { void <init>(int,int); }
-keepclassmembers class org.apache.http.HttpVersion { org.apache.http.ProtocolVersion forVersion(int,int); }
-keepclassmembers class org.apache.http.HttpVersion { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void <init>(); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { void internStrings(java.lang.String[][]); }
-keepclassmembers class libcore.icu.TimeZoneNames$ZoneStringsCache { java.lang.Object create(java.lang.Object); }
-keepclassmembers class libcore.reflect.AnnotationFactory { libcore.reflect.AnnotationMember[] getElementsDescription(java.lang.Class); }
-keepclassmembers class android.app.BackStackRecord { void setNameOverrides(android.app.BackStackRecord$TransitionState,android.util.ArrayMap,boolean); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.request.target.Target into(android.widget.ImageView); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void basicElements(org.htmlcleaner.TagInfo); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$DeleteUriExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class android.app.BackStackRecord { java.lang.String getName(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$DeleteUriExtractor { java.lang.String getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$DeleteUriExtractor { void <init>(); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { void <init>(java.util.Collection); }
-keepclassmembers class libcore.reflect.AnnotationFactory { java.lang.annotation.Annotation createAnnotation(java.lang.Class,libcore.reflect.AnnotationMember[]); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.lang.String); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor$1 { void <init>(com.bumptech.glide.manager.DefaultConnectivityMonitor); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean add(java.lang.Object); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Italic { void <init>(); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.util.zip.ZipEntry); }
-keepclassmembers class android.text.HtmlToSpannedConverter$Italic { void <init>(android.text.HtmlToSpannedConverter$1); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean contains(java.lang.Object); }
-keepclassmembers class java.lang.LinkageError { void <init>(); }
-keepclassmembers class libcore.reflect.AnnotationFactory { void <init>(java.lang.Class,libcore.reflect.AnnotationMember[]); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.util.zip.ZipEntry,java.util.jar.JarFile); }
-keepclassmembers class java.lang.LinkageError { void <init>(java.lang.String); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.ImageVideoGifDrawableLoadProvider { void <init>(com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.provider.DataLoadProvider,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean isEmpty(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean addAll(java.util.Collection); }
-keepclassmembers class com.bumptech.glide.manager.DefaultConnectivityMonitor$1 { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.GenericRequestBuilder load(java.lang.Object); }
-keepclassmembers class java.util.jar.JarEntry { void <init>(java.util.jar.JarEntry); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.util.Iterator iterator(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onForward(com.fsck.k9.activity.MessageReference,android.os.Parcelable); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onForward(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.GenericRequestBuilder override(int,int); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean onKeyUp(int,android.view.KeyEvent); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { boolean remove(java.lang.Object); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(java.lang.Throwable); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { int size(); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.GenericRequestBuilder placeholder(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onNewIntent(android.content.Intent); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.ImageVideoGifDrawableLoadProvider { com.bumptech.glide.load.ResourceDecoder getCacheDecoder(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.Object[] toArray(java.lang.Object[]); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.Object[] toArray(); }
-keepclassmembers class java.util.Collections$UnmodifiableCollection { java.lang.String toString(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$PopulateFolderPrefsTask { void <init>(com.fsck.k9.activity.setup.AccountSettings); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.ImageVideoGifDrawableLoadProvider { com.bumptech.glide.load.ResourceEncoder getEncoder(); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.ImageVideoGifDrawableLoadProvider { com.bumptech.glide.load.ResourceDecoder getSourceDecoder(); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.GenericRequestBuilder signature(com.bumptech.glide.load.Key); }
-keepclassmembers class com.bumptech.glide.load.resource.gifbitmap.ImageVideoGifDrawableLoadProvider { com.bumptech.glide.load.Encoder getSourceEncoder(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$PopulateFolderPrefsTask { void <init>(com.fsck.k9.activity.setup.AccountSettings,com.fsck.k9.activity.setup.AccountSettings$1); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$PopulateFolderPrefsTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$PopulateFolderPrefsTask { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void setState(java.lang.Object); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute); }
-keepclassmembers class android.app.ApplicationErrorReport$CrashInfo { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.fsck.k9.view.MessageHeader$SavedState { void <clinit>(); }
-keepclassmembers class libcore.reflect.AnnotationFactory { boolean equals(java.lang.Object); }
-keepclassmembers class com.fsck.k9.view.MessageHeader$SavedState { void <init>(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.view.MessageHeader$SavedState { void <init>(android.os.Parcel,com.fsck.k9.view.MessageHeader$1); }
-keepclassmembers class android.graphics.PorterDuffXfermode { void <init>(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.PorterDuffXfermode { long nativeCreateXfermode(int); }
-keepclassmembers class com.fsck.k9.view.MessageHeader$SavedState { void <init>(android.os.Parcelable); }
-keepclassmembers class com.fsck.k9.view.MessageHeader$SavedState { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class com.bumptech.glide.GenericRequestBuilder { com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation[]); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$27$1 { void <init>(com.fsck.k9.controller.MessagingController$27,java.util.List); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$CountExtractor { void <init>(int); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$27$1 { void run(); }
-keepclassmembers class android.widget.FastScroller$4 { void <init>(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$PopulateFolderPrefsTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$CountExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$PopulateFolderPrefsTask { void onPostExecute(java.lang.Void); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onPause(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$CountExtractor { java.lang.Integer getField(java.lang.Object); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void formElements(org.htmlcleaner.TagInfo); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(android.view.View,int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream { void <init>(java.io.OutputStream); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Integer get(android.view.View); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean onPrepareOptionsMenu(android.view.Menu); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void tunnelTarget(boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class android.widget.FastScroller$4 { void setValue(java.lang.Object,int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream { void writeToBuffer(byte); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onReply(com.fsck.k9.activity.MessageReference,android.os.Parcelable); }
-keepclassmembers class android.widget.FastScroller$4 { java.lang.Object get(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onReply(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onReplyAll(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class libcore.reflect.AnnotationFactory { int hashCode(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onReplyAll(com.fsck.k9.activity.MessageReference,android.os.Parcelable); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream { void close(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { android.view.accessibility.AccessibilityNodeInfo$CollectionInfo obtain(int,int,boolean,int); }
-keepclassmembers class java.util.zip.CRC32 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onResendMessage(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class java.util.zip.CRC32 { long getValue(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onRestoreInstanceState(android.os.Bundle); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <init>(int,int,boolean,int); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onResume(); }
-keepclassmembers class java.util.zip.CRC32 { void reset(); }
-keepclassmembers class java.util.zip.CRC32 { void update(int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream { void encode(byte); }
-keepclassmembers class libcore.reflect.AnnotationFactory { java.lang.String toString(); }
-keepclassmembers class java.util.zip.CRC32 { void update(byte[],int,int); }
-keepclassmembers class java.util.zip.CRC32 { long updateByteImpl(byte,long); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream { void flushOutput(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream { void flush(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean onSearchRequested(); }
-keepclassmembers class android.security.IKeyChainAliasCallback$Stub { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onSwipeLeftToRight(android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class android.view.accessibility.AccessibilityNodeInfo$CollectionInfo { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <init>(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getOriginal(); }
-keepclassmembers class java.util.zip.CRC32 { long updateImpl(byte[],int,int,long); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream { void write(int); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onSwipeRightToLeft(android.view.MotionEvent,android.view.MotionEvent); }
-keepclassmembers class android.security.IKeyChainAliasCallback$Stub { boolean onTransact(int,android.os.Parcel,android.os.Parcel,int); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream { void write(byte[],int,int); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void onSwitchComplete(int); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { android.text.method.SingleLineTransformationMethod getInstance(); }
-keepclassmembers class android.text.method.SingleLineTransformationMethod { char[] getReplacement(); }
-keepclassmembers class org.apache.http.impl.conn.AbstractPoolEntry { void shutdownEntry(); }
-keepclassmembers class com.fsck.k9.activity.setup.AccountSettings$PopulateFolderPrefsTask { void onPreExecute(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void openMessage(com.fsck.k9.activity.MessageReference); }
-keepclassmembers class android.view.HardwareCanvas { void <init>(); }
-keepclassmembers class libcore.reflect.AnnotationFactory { void <clinit>(); }
-keepclassmembers class android.view.HardwareCanvas { void drawRenderNode(android.view.RenderNode); }
-keepclassmembers class android.view.HardwareCanvas { boolean isHardwareAccelerated(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$18 { void <init>(com.fsck.k9.mailstore.LocalFolder,android.content.ContentValues,com.fsck.k9.mailstore.LocalMessage); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void setActionBarSubTitle(java.lang.String); }
-keepclassmembers class libcore.util.Objects { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void setActionBarUnread(int); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void remoteSearchStarted(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void setActionBarTitle(java.lang.String); }
-keepclassmembers class libcore.util.Objects { java.lang.String toString(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void setMessageListProgress(int); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$18 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void setMessageListSubTitle(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$18 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void setMessageListTitle(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void showMoreFromSameSender(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void showNextMessageOrReturn(); }
-keepclassmembers class android.transition.ChangeImageTransform$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void setProgress(boolean); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void formattingElements(org.htmlcleaner.TagInfo); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void setUnreadCount(int); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void showThread(com.fsck.k9.Account,java.lang.String,long); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable); }
-keepclassmembers class com.fsck.k9.NotificationSetting { void <init>(); }
-keepclassmembers class com.fsck.k9.NotificationSetting { long[] getVibration(int,int); }
-keepclassmembers class com.fsck.k9.mail.internet.Iso2022JpToShiftJisInputStream$1 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { boolean startSearch(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableCompat$BaseDrawableImpl { void setTint(android.graphics.drawable.Drawable,int); }
-keepclassmembers class android.view.KeyCharacterMap$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int); }
-keepclassmembers class com.fsck.k9.NotificationSetting { int getLedColor(); }
-keepclassmembers class android.view.KeyCharacterMap$1 { android.view.KeyCharacterMap createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.NotificationSetting { java.lang.String getRingtone(); }
-keepclassmembers class com.fsck.k9.activity.MessageList { void updateMenu(); }
-keepclassmembers class com.fsck.k9.NotificationSetting { int getVibratePattern(); }
-keepclassmembers class android.view.KeyCharacterMap$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class com.fsck.k9.NotificationSetting { long[] getVibration(); }
-keepclassmembers class com.fsck.k9.NotificationSetting { int getVibrateTimes(); }
-keepclassmembers class com.fsck.k9.NotificationSetting { boolean isLed(); }
-keepclassmembers class com.fsck.k9.NotificationSetting { void setLed(boolean); }
-keepclassmembers class com.fsck.k9.NotificationSetting { void setLedColor(int); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { int checkRtl(java.lang.CharSequence,int,int); }
-keepclassmembers class com.fsck.k9.NotificationSetting { void setRing(boolean); }
-keepclassmembers class com.fsck.k9.NotificationSetting { void setVibratePattern(int); }
-keepclassmembers class com.fsck.k9.NotificationSetting { void setVibrateTimes(int); }
-keepclassmembers class com.fsck.k9.NotificationSetting { void setRingtone(java.lang.String); }
-keepclassmembers class com.fsck.k9.NotificationSetting { boolean shouldRing(); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <init>(boolean); }
-keepclassmembers class com.fsck.k9.NotificationSetting { void setVibrate(boolean); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$102(android.view.View$ListenerInfo,java.util.ArrayList); }
-keepclassmembers class android.text.TextDirectionHeuristics$AnyStrong { void <clinit>(); }
-keepclassmembers class com.fsck.k9.NotificationSetting { boolean shouldVibrate(); }
-keepclassmembers class com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider { void <init>(); }
-keepclassmembers class android.view.View$ListenerInfo { void <init>(); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.concurrent.CopyOnWriteArrayList access$200(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.concurrent.CopyOnWriteArrayList access$202(android.view.View$ListenerInfo,java.util.concurrent.CopyOnWriteArrayList); }
-keepclassmembers class com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider { com.bumptech.glide.load.ResourceEncoder getEncoder(); }
-keepclassmembers class android.view.View$ListenerInfo { java.util.ArrayList access$100(android.view.View$ListenerInfo); }
-keepclassmembers class com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider { com.bumptech.glide.load.ResourceDecoder getCacheDecoder(); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnTouchListener access$402(android.view.View$ListenerInfo,android.view.View$OnTouchListener); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnGenericMotionListener access$500(android.view.View$ListenerInfo); }
-keepclassmembers class com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider { com.bumptech.glide.load.Encoder getSourceEncoder(); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnHoverListener access$600(android.view.View$ListenerInfo); }
-keepclassmembers class com.bumptech.glide.load.resource.file.StreamFileDataLoadProvider { com.bumptech.glide.load.ResourceDecoder getSourceDecoder(); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnSystemUiVisibilityChangeListener access$1200(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnKeyListener access$300(android.view.View$ListenerInfo); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnDragListener access$700(android.view.View$ListenerInfo); }
-keepclassmembers class android.transition.PatternPathMotion { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.View$ListenerInfo { android.view.View$OnTouchListener access$400(android.view.View$ListenerInfo); }
-keepclassmembers class java.util.Hashtable$Values { java.util.Iterator iterator(); }
-keepclassmembers class java.util.Hashtable$Values { void <init>(java.util.Hashtable); }
-keepclassmembers class android.transition.PatternPathMotion { void setPatternPath(android.graphics.Path); }
-keepclassmembers class java.lang.reflect.Method { void <init>(java.lang.reflect.ArtMethod); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onSingleTapUp(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.reflect.ArtMethod getArtMethod(); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { void <init>(); }
-keepclassmembers class java.lang.reflect.Method { int getModifiers(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { float getPercent(android.content.res.TypedArray,int,float); }
-keepclassmembers class android.transition.PatternPathMotion { float distance(float,float); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { void onLongPress(android.view.MotionEvent); }
-keepclassmembers class java.util.Hashtable$Values { void <init>(java.util.Hashtable,java.util.Hashtable$1); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$IncrementExtractor { void <init>(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$IncrementExtractor { java.lang.Integer getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$IncrementExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Method { java.lang.String getName(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class getDeclaringClass(); }
-keepclassmembers class com.android.internal.widget.ILockSettings$Stub { com.android.internal.widget.ILockSettings asInterface(android.os.IBinder); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { void onShowPress(android.view.MotionEvent); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getExceptionTypes(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getExceptionTypesNative(); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { org.htmlcleaner.TagInfo getTagInfo(java.lang.String); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onDown(android.view.MotionEvent); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onDoubleTapEvent(android.view.MotionEvent); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void applyTheme(android.content.res.Resources$Theme); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onDoubleTap(android.view.MotionEvent); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class[] getParameterTypes(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int translateFieldId(java.text.FieldPosition); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <init>(java.lang.String,java.text.DecimalFormatSymbols); }
-keepclassmembers class android.preference.PreferenceActivity$3 { void <init>(android.preference.PreferenceActivity); }
-keepclassmembers class android.view.GestureDetector$SimpleOnGestureListener { boolean onSingleTapConfirmed(android.view.MotionEvent); }
-keepclassmembers class android.preference.PreferenceActivity$3 { void onClick(android.view.View); }
-keepclassmembers class java.lang.reflect.Method { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Method { int hashCode(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.reflect.Method { boolean equalNameAndParameters(java.lang.reflect.Method); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void imgElements(org.htmlcleaner.TagInfo); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void linkElements(org.htmlcleaner.TagInfo); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Class getReturnType(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void updateStateFromTypedArray(android.content.res.TypedArray); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void verifyRequiredAttributes(android.content.res.TypedArray); }
-keepclassmembers class java.lang.reflect.Method { java.lang.reflect.TypeVariable[] getTypeParameters(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void listElements(org.htmlcleaner.TagInfo); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean canApplyTheme(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <init>(java.lang.String,libcore.icu.LocaleData); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { void decodeBitmapData(com.bumptech.glide.gifdecoder.GifFrame); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean equals(java.lang.Object); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object getDefaultValue(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean getPadding(android.graphics.Rect); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void olderElements(org.htmlcleaner.TagInfo); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getChangingConfigurations(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.String toString(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean setVisible(boolean,boolean); }
-keepclassmembers class android.view.animation.Transformation { void <init>(); }
-keepclassmembers class android.view.animation.Transformation { int getTransformationType(); }
-keepclassmembers class android.view.animation.Transformation { void clear(); }
-keepclassmembers class java.lang.reflect.Method { java.lang.Object invoke(java.lang.Object,java.lang.Object[],boolean); }
-keepclassmembers class android.view.animation.Transformation { void compose(android.view.animation.Transformation); }
-keepclassmembers class android.view.animation.Transformation { void set(android.view.animation.Transformation); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setAlpha(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean isStateful(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setTintMode(android.graphics.PorterDuff$Mode); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void setTintList(android.content.res.ColorStateList); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getOpacity(); }
-keepclassmembers class android.view.animation.Transformation { void setAlpha(float); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean onStateChange(int[]); }
-keepclassmembers class java.lang.reflect.Method { void <clinit>(); }
-keepclassmembers class android.view.animation.Transformation { android.graphics.Matrix getMatrix(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { boolean onLevelChange(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void onBoundsChange(android.graphics.Rect); }
-keepclassmembers class android.view.animation.Transformation { void setClipRect(int,int,int,int); }
-keepclassmembers class android.view.animation.Transformation { void setClipRect(android.graphics.Rect); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setDecimalFormatSymbols(libcore.icu.LocaleData); }
-keepclassmembers class android.view.animation.Transformation { android.graphics.Rect getClipRect(); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void scriptElements(org.htmlcleaner.TagInfo); }
-keepclassmembers class android.transition.TransitionPropagation { void <init>(); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void put(java.lang.String,org.htmlcleaner.TagInfo); }
-keepclassmembers class android.view.animation.Transformation { float getAlpha(); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableTransformation { com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatBigInteger(java.math.BigInteger,java.text.FieldPosition); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatBigDecimal(java.math.BigDecimal,java.text.FieldPosition); }
-keepclassmembers class com.bumptech.glide.load.resource.gif.GifDrawableTransformation { void <init>(com.bumptech.glide.load.Transformation,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$SpiAndProvider { void <init>(java.lang.Object,java.security.Provider); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getIntrinsicHeight(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { int getIntrinsicWidth(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compare(org.apache.harmony.security.x501.AttributeTypeAndValue,org.apache.harmony.security.x501.AttributeTypeAndValue); }
-keepclassmembers class java.lang.Class { void <init>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatLong(long,java.text.FieldPosition); }
-keepclassmembers class org.apache.harmony.security.fortress.Engine$SpiAndProvider { void <init>(java.lang.Object,java.security.Provider,org.apache.harmony.security.fortress.Engine$1); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable$ConstantState getConstantState(); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void styleElements(org.htmlcleaner.TagInfo); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDouble(double,java.text.FieldPosition); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void updateFieldPosition(java.text.FieldPosition,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { android.graphics.drawable.Drawable mutate(); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLocationFieldImpl { void <clinit>(); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void clearMutated(); }
-keepclassmembers class java.lang.Class { java.lang.Class classForName(java.lang.String,boolean,java.lang.ClassLoader); }
-keepclassmembers class org.apache.james.mime4j.field.ContentLocationFieldImpl { void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPattern(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compateOids(org.apache.harmony.security.utils.ObjectIdentifier,org.apache.harmony.security.utils.ObjectIdentifier); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources); }
-keepclassmembers class android.view.View$MeasureSpec { int makeMeasureSpec(int,int); }
-keepclassmembers class android.view.View$MeasureSpec { int getSize(int); }
-keepclassmembers class android.graphics.drawable.ScaleDrawable { void <init>(android.graphics.drawable.ScaleDrawable$ScaleState,android.content.res.Resources,android.graphics.drawable.ScaleDrawable$1); }
-keepclassmembers class android.view.View$MeasureSpec { int getMode(int); }
-keepclassmembers class android.view.View$MeasureSpec { int adjust(int,int); }
-keepclassmembers class org.htmlcleaner.Html4TagProvider { void tableElements(org.htmlcleaner.TagInfo); }
-keepclassmembers class java.lang.Class { java.lang.ClassLoader getClassLoaderImpl(); }
-keepclassmembers class android.view.View$MeasureSpec { java.lang.String toString(int); }
-keepclassmembers class java.lang.Class { java.lang.String getCanonicalName(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { android.graphics.Bitmap getNextBitmap(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountColorExtractor { void <init>(); }
-keepclassmembers class java.lang.Class { com.android.dex.Dex getDex(); }
-keepclassmembers class java.lang.Class { java.lang.String getDexCacheString(com.android.dex.Dex,int); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { int read(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountColorExtractor { java.lang.Integer getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$AccountColorExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { int readBlock(); }
-keepclassmembers class android.content.res.ConstantState { void <init>(); }
-keepclassmembers class android.content.res.ConstantState { java.lang.Object newInstance(android.content.res.Resources,android.content.res.Resources$Theme); }
-keepclassmembers class java.lang.Class { java.lang.Class getDexCacheType(com.android.dex.Dex,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String toPattern(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.Number parse(java.lang.String,java.text.ParsePosition); }
-keepclassmembers class org.apache.harmony.security.x501.AttributeTypeAndValueComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow(java.lang.Throwable); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { void setAlpha(android.graphics.Bitmap); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMaximumIntegerDigits(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMinimumFractionDigits(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { android.graphics.Bitmap setPixels(com.bumptech.glide.gifdecoder.GifFrame,com.bumptech.glide.gifdecoder.GifFrame); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMinimumIntegerDigits(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getConstructor(java.lang.Class[],boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMaximumFractionDigits(); }
-keepclassmembers class libcore.util.SneakyThrow { void sneakyThrow2(java.lang.Throwable); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getGroupingSize(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getNegativePrefix(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Constructor getDeclaredConstructorInternal(java.lang.Class[]); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getMultiplier(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getPositiveSuffix(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getNegativeSuffix(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isDecimalSeparatorAlwaysShown(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getPositivePrefix(); }
-keepclassmembers class android.app.ActivityOptions { android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.app.ExitTransitionCoordinator,java.util.ArrayList,int,android.content.Intent); }
-keepclassmembers class android.app.ActivityOptions { void <init>(); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void <init>(android.widget.RemoteViews,int,android.widget.RemoteViews); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void <init>(android.widget.RemoteViews,android.os.Parcel,android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.app.ActivityOptions { void <init>(android.os.Bundle); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isParseBigDecimal(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isParseIntegerOnly(); }
-keepclassmembers class java.lang.Class { void getDeclaredConstructors(boolean,java.util.List); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { boolean isGroupingUsed(); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setGroupingUsed(boolean); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[],boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMinimumIntegerDigits(int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMaximumFractionDigits(int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setMaximumIntegerDigits(int); }
-keepclassmembers class org.apache.http.impl.cookie.BasicDomainHandler { void <init>(); }
-keepclassmembers class org.apache.http.impl.cookie.BasicDomainHandler { void parse(org.apache.http.cookie.SetCookie,java.lang.String); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void setBitmapCache(android.widget.RemoteViews$BitmapCache); }
-keepclassmembers class android.widget.RemoteViews$ViewGroupAction { void updateMemoryUsageEstimate(android.widget.RemoteViews$MemoryUsageCounter); }
-keepclassmembers class org.apache.http.impl.cookie.BasicDomainHandler { void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class android.app.ActivityOptions { int getExitCoordinatorKey(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getPublicMethodRecursive(java.lang.String,java.lang.Class[]); }
-keepclassmembers class android.app.ActivityOptions { int getAnimationType(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { int getCurrentFrameIndex(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { void clear(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setParseIntegerOnly(boolean); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { int getDelay(int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setRoundingMode(java.math.RoundingMode,double); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPattern(long,boolean,java.lang.String); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { void advance(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Method getDeclaredMethodInternal(java.lang.String,java.lang.Class[]); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { int getLoopCount(); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateLanguage(java.lang.String,boolean); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { android.graphics.Bitmap getNextFrame(); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { int getNextDelay(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void applyPatternImpl(long,boolean,java.lang.String); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { int getFrameCount(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatLong(long,long,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDigitList(long,java.lang.String,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { char[] formatDouble(long,double,libcore.icu.NativeDecimalFormat$FieldPositionIterator); }
-keepclassmembers class org.apache.http.impl.cookie.BasicDomainHandler { boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { long open(java.lang.String,java.lang.String,char,char,java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,char,java.lang.String,char,java.lang.String,char,char); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { int getAttribute(long,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.Number parse(long,java.lang.String,java.text.ParsePosition,boolean); }
-keepclassmembers class android.app.ActivityOptions { android.os.Bundle toBundle(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String getTextAttribute(long,int); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setDecimalFormatSymbols(long,java.lang.String,char,char,java.lang.String,char,java.lang.String,java.lang.String,java.lang.String,char,java.lang.String,char,java.lang.String,char,char); }
-keepclassmembers class android.os.UserHandle$1 { void <init>(); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setAttribute(long,int,int); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateRegion(java.lang.String,boolean); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void setRoundingMode(long,int,double); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { java.lang.String toPatternImpl(long,boolean); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperDonut { void <clinit>(); }
-keepclassmembers class java.lang.Character$Subset { void <init>(java.lang.String); }
-keepclassmembers class libcore.icu.NativeDecimalFormat { void <clinit>(); }
-keepclassmembers class java.lang.Class { void getDeclaredMethodsUnchecked(boolean,java.util.List); }
-keepclassmembers class java.lang.Character$Subset { boolean equals(java.lang.Object); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateVariant(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperDonut { int getIntrinsicWidth(); }
-keepclassmembers class java.util.Locale$Builder { boolean isValidVariantSubtag(java.lang.String); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperDonut { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperDonut { int getIntrinsicHeight(); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.lang.String); }
-keepclassmembers class java.util.Currency { java.util.Currency getInstance(java.util.Locale); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String normalizeAndValidateScript(java.lang.String,boolean); }
-keepclassmembers class java.lang.Class { void getDeclaredFieldsUnchecked(boolean,java.util.List); }
-keepclassmembers class java.util.Currency { void <init>(java.lang.String); }
-keepclassmembers class java.util.Currency { java.lang.String getSymbol(java.util.Locale); }
-keepclassmembers class com.bumptech.glide.gifdecoder.GifDecoder { void setData(com.bumptech.glide.gifdecoder.GifHeader,byte[]); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getDeclaredFieldInternal(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.reflect.ArtField findByName(java.lang.String,java.lang.reflect.ArtField[]); }
-keepclassmembers class java.util.Currency { java.lang.String getCurrencyCode(); }
-keepclassmembers class java.util.Currency { java.lang.String toString(); }
-keepclassmembers class java.lang.Class { java.lang.Class getDeclaringClass(); }
-keepclassmembers class java.lang.Class { java.lang.Class getEnclosingClass(); }
-keepclassmembers class android.support.v4.graphics.drawable.DrawableWrapperDonut { void setWrappedDrawable(android.graphics.drawable.Drawable); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1000(java.lang.String,boolean); }
-keepclassmembers class java.util.Currency { void <clinit>(); }
-keepclassmembers class java.lang.Class { boolean classNameImpliesTopLevel(); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Field getPublicFieldRecursive(java.lang.String); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1100(java.lang.String,boolean); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1200(java.lang.String); }
-keepclassmembers class java.util.Locale$Builder { boolean access$1300(java.lang.String); }
-keepclassmembers class android.security.KeyChain$AliasResponse { void alias(java.lang.String); }
-keepclassmembers class java.util.Locale$Builder { java.lang.String access$1400(java.lang.String,boolean); }
-keepclassmembers class android.security.KeyChain$AliasResponse { void <init>(android.security.KeyChainAliasCallback,android.security.KeyChain$1); }
-keepclassmembers class android.security.KeyChain$AliasResponse { void <init>(android.security.KeyChainAliasCallback); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$4 { boolean onPreferenceChange(android.preference.Preference,java.lang.Object); }
-keepclassmembers class android.support.v4.app.NotificationCompatKitKat { android.os.Bundle getExtras(android.app.Notification); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$4 { void <init>(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class java.lang.Class { java.lang.reflect.Type[] getGenericInterfaces(); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$RecipientTokenSpan { void <init>(com.fsck.k9.view.RecipientSelectView,android.view.View,com.fsck.k9.view.RecipientSelectView$Recipient,int); }
-keepclassmembers class com.fsck.k9.helper.MessageHelper { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.view.RecipientSelectView$RecipientTokenSpan { android.view.View access$100(com.fsck.k9.view.RecipientSelectView$RecipientTokenSpan); }
-keepclassmembers class com.fsck.k9.activity.MessageList$StorageListenerImplementation$1 { void <init>(com.fsck.k9.activity.MessageList$StorageListenerImplementation); }
-keepclassmembers class android.view.textservice.TextInfo$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.helper.MessageHelper { com.fsck.k9.helper.MessageHelper getInstance(android.content.Context); }
-keepclassmembers class com.fsck.k9.helper.MessageHelper { java.lang.CharSequence toFriendly(com.fsck.k9.mail.Address,com.fsck.k9.helper.Contacts,boolean,boolean,int); }
-keepclassmembers class com.fsck.k9.helper.MessageHelper { java.lang.CharSequence toFriendly(com.fsck.k9.mail.Address,com.fsck.k9.helper.Contacts); }
-keepclassmembers class com.fsck.k9.activity.MessageList$StorageListenerImplementation$1 { void run(); }
-keepclassmembers class java.lang.Class { java.lang.String getNameNative(); }
-keepclassmembers class java.lang.Class { java.lang.Class[] getProxyInterfaces(); }
-keepclassmembers class java.lang.Class { java.lang.String getSimpleName(); }
-keepclassmembers class libcore.io.IoUtils$FileReader { libcore.io.IoUtils$FileReader readFully(); }
-keepclassmembers class java.lang.Class { int getModifiers(); }
-keepclassmembers class com.fsck.k9.helper.MessageHelper { java.lang.CharSequence toFriendly(com.fsck.k9.mail.Address[],com.fsck.k9.helper.Contacts); }
-keepclassmembers class java.lang.Class { java.io.InputStream getResourceAsStream(java.lang.String); }
-keepclassmembers class java.lang.Class { java.lang.String getInnerClassName(); }
-keepclassmembers class com.fsck.k9.helper.MessageHelper { java.lang.CharSequence getDisplayName(com.fsck.k9.Account,com.fsck.k9.mail.Address[],com.fsck.k9.mail.Address[]); }
-keepclassmembers class libcore.io.IoUtils$FileReader { void <init>(java.lang.String); }
-keepclassmembers class java.lang.Class { boolean isAnnotation(); }
-keepclassmembers class libcore.io.IoUtils$FileReader { java.lang.String toString(java.nio.charset.Charset); }
-keepclassmembers class com.fsck.k9.helper.MessageHelper { void populate(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.activity.FolderInfoHolder,com.fsck.k9.Account); }
-keepclassmembers class org.apache.http.cookie.CookieIdentityComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.http.cookie.CookieIdentityComparator { void <init>(); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void <init>(); }
-keepclassmembers class org.apache.http.cookie.CookieIdentityComparator { int compare(org.apache.http.cookie.Cookie,org.apache.http.cookie.Cookie); }
-keepclassmembers class java.lang.Class { boolean isArray(); }
-keepclassmembers class java.lang.Class { boolean isProxy(); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class java.lang.Class { java.lang.reflect.TypeVariable[] getTypeParameters(); }
-keepclassmembers class java.lang.Class { boolean isAssignableFrom(java.lang.Class); }
-keepclassmembers class java.lang.Class { boolean isAnnotationPresent(java.lang.Class); }
-keepclassmembers class java.lang.Class { boolean isLocalClass(); }
-keepclassmembers class java.lang.Class { boolean isEnum(); }
-keepclassmembers class java.lang.Class { boolean isInstance(java.lang.Object); }
-keepclassmembers class java.lang.Class { boolean isInterface(); }
-keepclassmembers class java.lang.Class { boolean isAnonymousClass(); }
-keepclassmembers class java.lang.Class { boolean isPrimitive(); }
-keepclassmembers class com.fsck.k9.helper.MessageHelper { boolean toMe(com.fsck.k9.Account,com.fsck.k9.mail.Address[]); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onEnabled(android.content.Context); }
-keepclassmembers class java.lang.Class { boolean isMemberClass(); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { void <init>(); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onDisabled(android.content.Context); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { void addSpecials(java.lang.StringBuilder,org.apache.james.mime4j.field.address.Token); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.dom.address.DomainList,org.apache.james.mime4j.field.address.ASTaddr_spec); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { org.apache.james.mime4j.dom.address.Mailbox buildAddrSpec(org.apache.james.mime4j.field.address.ASTaddr_spec); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$SenderComparator { int compare(android.database.Cursor,android.database.Cursor); }
-keepclassmembers class android.appwidget.AppWidgetProvider { void onRestored(android.content.Context,int[],int[]); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { org.apache.james.mime4j.dom.address.Mailbox buildAngleAddr(org.apache.james.mime4j.field.address.ASTangle_addr); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$SenderComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragmentComparators$SenderComparator { void <init>(); }
-keepclassmembers class java.lang.Class { java.lang.String toString(); }
-keepclassmembers class java.lang.Class { java.lang.Package getPackage(); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { org.apache.james.mime4j.dom.address.MailboxList buildGroupBody(org.apache.james.mime4j.field.address.ASTgroup_body,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { org.apache.james.mime4j.dom.address.Mailbox buildNameAddr(org.apache.james.mime4j.field.address.ASTname_addr,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class java.lang.Class { int getDexClassDefIndex(); }
-keepclassmembers class java.lang.Class { java.lang.String getPackageName$(); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { org.apache.james.mime4j.dom.address.DomainList buildRoute(org.apache.james.mime4j.field.address.ASTroute); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$1 { void <init>(com.fsck.k9.activity.Accounts$AccountsHandler); }
-keepclassmembers class java.lang.Class { boolean desiredAssertionStatus(); }
-keepclassmembers class java.lang.Class { int getDexAnnotationDirectoryOffset(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { java.lang.String buildString(org.apache.james.mime4j.field.address.SimpleNode,boolean); }
-keepclassmembers class java.lang.Class { java.lang.Object cast(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsHandler$1 { void run(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { org.apache.james.mime4j.dom.address.Address buildAddress(org.apache.james.mime4j.field.address.ASTaddress,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class com.bumptech.glide.disklrucache.Util { void <clinit>(); }
-keepclassmembers class com.bumptech.glide.disklrucache.Util { void deleteContents(java.io.File); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { org.apache.james.mime4j.field.address.Builder getInstance(); }
-keepclassmembers class org.apache.harmony.security.x509.Extension$2 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class com.bumptech.glide.disklrucache.Util { void closeQuietly(java.io.Closeable); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { org.apache.james.mime4j.dom.address.AddressList buildAddressList(org.apache.james.mime4j.field.address.ASTaddress_list,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { java.lang.String toString(); }
-keepclassmembers class org.apache.james.mime4j.field.address.Builder { org.apache.james.mime4j.dom.address.Mailbox buildMailbox(org.apache.james.mime4j.field.address.ASTmailbox,org.apache.james.mime4j.codec.DecodeMonitor); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { byte[] getEncoded(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[],org.apache.harmony.security.x509.Certificate$1); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { org.apache.harmony.security.x509.TBSCertificate access$100(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { org.apache.harmony.security.x509.AlgorithmIdentifier access$200(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <init>(org.apache.harmony.security.x509.TBSCertificate,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[]); }
-keepclassmembers class android.os.StrictMode$7 { void <init>(); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { byte[] access$300(org.apache.harmony.security.x509.Certificate); }
-keepclassmembers class android.graphics.FontListParser$Family { void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.Certificate { void <clinit>(); }
-keepclassmembers class android.view.GLES20Canvas { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { void setupFinalizer(); }
-keepclassmembers class android.view.GLES20Canvas { boolean nIsAvailable(); }
-keepclassmembers class android.os.StrictMode$7 { void finish(); }
-keepclassmembers class android.view.GLES20Canvas { void setViewport(int,int); }
-keepclassmembers class android.view.GLES20Canvas { long nCreateDisplayListRenderer(); }
-keepclassmembers class android.view.GLES20Canvas { boolean isAvailable(); }
-keepclassmembers class android.view.GLES20Canvas { void nSetViewport(long,int,int); }
-keepclassmembers class android.view.GLES20Canvas { void nSetHighContrastText(long,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void nInsertReorderBarrier(long,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void setHighContrastText(boolean); }
-keepclassmembers class android.view.GLES20Canvas { int onPreDraw(android.graphics.Rect); }
-keepclassmembers class android.view.GLES20Canvas { void insertReorderBarrier(); }
-keepclassmembers class android.view.GLES20Canvas { int nPrepareDirty(long,int,int,int,int,boolean); }
-keepclassmembers class android.view.GLES20Canvas { int nPrepare(long,boolean); }
-keepclassmembers class android.view.GLES20Canvas { void insertInorderBarrier(); }
-keepclassmembers class android.view.GLES20Canvas { long nFinishRecording(long); }
-keepclassmembers class android.view.GLES20Canvas { void onPostDraw(); }
-keepclassmembers class android.view.GLES20Canvas { void drawHardwareLayer(android.view.HardwareLayer,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void nFinish(long); }
-keepclassmembers class android.view.GLES20Canvas { int drawRenderNode(android.view.RenderNode,android.graphics.Rect,int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawLayer(long,long,float,float); }
-keepclassmembers class android.view.GLES20Canvas { int nDrawRenderNode(long,long,android.graphics.Rect,int); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void <init>(org.htmlcleaner.HtmlCleaner,java.io.Reader,org.htmlcleaner.CleanTimeValues); }
-keepclassmembers class android.os.StrictMode$VmPolicy$Builder { void <init>(); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipPath(android.graphics.Path,android.graphics.Region$Op); }
-keepclassmembers class android.view.GLES20Canvas { float[] getLineStorage(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean addSavedAsContent(); }
-keepclassmembers class android.os.StrictMode$VmPolicy$Builder { android.os.StrictMode$VmPolicy$Builder detectAll(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void addToken(org.htmlcleaner.BaseToken); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipPath(long,long,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(float,float,float,float); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipRect(long,float,float,float,float,int); }
-keepclassmembers class android.os.StrictMode$VmPolicy$Builder { android.os.StrictMode$VmPolicy$Builder penaltyLog(); }
-keepclassmembers class android.view.GLES20Canvas { boolean nClipRect(long,int,int,int,int,int); }
-keepclassmembers class android.widget.TextView$CharWrapper { char[] access$002(android.widget.TextView$CharWrapper,char[]); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { java.lang.String attributeValue(); }
-keepclassmembers class android.os.StrictMode$VmPolicy$Builder { android.os.StrictMode$VmPolicy$Builder enable(int); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(int,int,int,int); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(android.graphics.Rect); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsImportedDialog { void <init>(com.fsck.k9.preferences.SettingsImporter$ImportResults,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsImportedDialog { java.lang.String generateMessage(com.fsck.k9.activity.Accounts); }
-keepclassmembers class java.lang.reflect.AccessibleObject { boolean isAccessible(); }
-keepclassmembers class android.os.StrictMode$VmPolicy$Builder { android.os.StrictMode$VmPolicy build(); }
-keepclassmembers class android.view.GLES20Canvas { boolean clipRect(android.graphics.Rect,android.graphics.Region$Op); }
-keepclassmembers class java.lang.reflect.AccessibleObject { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.Accounts$AccountsImportedDialog { void okayAction(com.fsck.k9.activity.Accounts); }
-keepclassmembers class android.view.GLES20Canvas { boolean getClipBounds(android.graphics.Rect); }
-keepclassmembers class java.lang.reflect.AccessibleObject { void setAccessible(boolean); }
-keepclassmembers class android.view.GLES20Canvas { boolean nGetClipBounds(long,android.graphics.Rect); }
-keepclassmembers class android.view.GLES20Canvas { boolean quickReject(float,float,float,float,android.graphics.Canvas$EdgeType); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$NotifyTask { void send(android.support.v4.app.INotificationSideChannel); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$NotifyTask { java.lang.String toString(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void cdata(); }
-keepclassmembers class android.view.GLES20Canvas { void translate(float,float); }
-keepclassmembers class android.support.v4.app.NotificationManagerCompat$NotifyTask { void <init>(java.lang.String,int,java.lang.String,android.app.Notification); }
-keepclassmembers class android.view.GLES20Canvas { boolean nQuickReject(long,float,float,float,float); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void comment(); }
-keepclassmembers class android.view.GLES20Canvas { void nRotate(long,float); }
-keepclassmembers class android.view.GLES20Canvas { void nTranslate(long,float,float); }
-keepclassmembers class android.view.GLES20Canvas { void concat(android.graphics.Matrix); }
-keepclassmembers class android.view.GLES20Canvas { void scale(float,float); }
-keepclassmembers class android.view.GLES20Canvas { void rotate(float); }
-keepclassmembers class android.view.GLES20Canvas { void nConcatMatrix(long,long); }
-keepclassmembers class android.view.GLES20Canvas { void nScale(long,float,float); }
-keepclassmembers class android.view.GLES20Canvas { int save(); }
-keepclassmembers class android.view.GLES20Canvas { int save(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[]); }
-keepclassmembers class android.view.GLES20Canvas { int saveLayer(float,float,float,float,android.graphics.Paint,int); }
-keepclassmembers class android.view.GLES20Canvas { int saveLayerAlpha(float,float,float,float,int,int); }
-keepclassmembers class android.view.GLES20Canvas { int nSave(long,int); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { java.lang.String deserializeEntitiesInSaved(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[]); }
-keepclassmembers class android.view.GLES20Canvas { int nSaveLayer(long,float,float,float,float,long,int); }
-keepclassmembers class android.view.GLES20Canvas { int nSaveLayerAlpha(long,float,float,float,float,int,int); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean content(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void <init>(byte[]); }
-keepclassmembers class android.view.GLES20Canvas { void nRestore(long); }
-keepclassmembers class android.view.GLES20Canvas { void restore(); }
-keepclassmembers class android.view.GLES20Canvas { void nRestoreToCount(long,int); }
-keepclassmembers class android.view.GLES20Canvas { void restoreToCount(int); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { java.lang.String toString(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <init>(org.apache.harmony.security.x509.TBSCertList,org.apache.harmony.security.x509.AlgorithmIdentifier,byte[],byte[],org.apache.harmony.security.x509.CertificateList$1); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { org.apache.harmony.security.x509.AlgorithmIdentifier access$200(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class android.view.GLES20Canvas { int getSaveCount(); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { org.apache.harmony.security.x509.TBSCertList access$100(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { byte[] access$300(org.apache.harmony.security.x509.CertificateList); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void dumpValue(java.lang.StringBuilder,java.lang.String); }
-keepclassmembers class org.apache.harmony.security.x509.CertificateList { void <clinit>(); }
-keepclassmembers class android.view.GLES20Canvas { int nGetSaveCount(long); }
-keepclassmembers class android.view.GLES20Canvas { void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { void <init>(android.graphics.drawable.Drawable); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { android.graphics.drawable.Drawable get(android.graphics.drawable.DrawableContainer$DrawableContainerState); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { void <init>(android.graphics.drawable.Drawable,android.graphics.drawable.DrawableContainer$1); }
-keepclassmembers class android.graphics.drawable.DrawableContainer$DrawableContainerState$ConstantStateFuture { boolean canApplyTheme(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void go(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void go(int); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void doctype(); }
-keepclassmembers class org.apache.harmony.security.x509.ReasonCode { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void handleInterruption(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawBitmap(long,long,float,float,long); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { java.lang.String identifier(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawPatch(long,long,long,float,float,float,float,long); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSource { void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest,long); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean isAllRead(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void ignoreUntil(char); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean isChar(char); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSource { long read(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.android.okhttp.internal.http.HttpConnection$FixedLengthSource { void close(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean isChar(int,char); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean isIdentifierChar(); }
-keepclassmembers class android.widget.Editor$Blink { void run(); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor); }
-keepclassmembers class java.text.DateFormat$Field { void <init>(java.lang.String,int); }
-keepclassmembers class android.view.GLES20Canvas { void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class java.text.DateFormat$Field { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean isIdentifierStartChar(int); }
-keepclassmembers class android.widget.Editor$Blink { void uncancel(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean isReservedTag(java.lang.String); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean isTagStartOrEnd(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean isIdentifierStartChar(); }
-keepclassmembers class android.widget.Editor$Blink { void <init>(android.widget.Editor,android.widget.Editor$1); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawBitmap(long,long,float,float,float,float,float,float,float,float,long); }
-keepclassmembers class android.widget.Editor$Blink { void cancel(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider$1 { void <init>(com.fsck.k9.provider.AttachmentTempFileProvider,android.content.Context); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean isWhitespace(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider$1 { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean isWhitespace(int); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void save(char); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void skipWhitespaces(); }
-keepclassmembers class com.fsck.k9.provider.AttachmentTempFileProvider$1 { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void saveCurrent(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { boolean startsWith(java.lang.String); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void readIfNeeded(int); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void saveCurrent(int); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawCircle(long,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void drawCircle(float,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawCircle(long,long,long,long,long); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void tagAttributes(); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSourceTransferThread { void <init>(org.openintents.openpgp.util.OpenPgpApi$OpenPgpDataSource,java.io.OutputStream); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void tagEnd(); }
-keepclassmembers class android.view.GLES20Canvas { void drawCircle(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty); }
-keepclassmembers class org.apache.james.mime4j.stream.NameValuePair { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.james.mime4j.stream.NameValuePair { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.openintents.openpgp.util.ParcelFileDescriptorUtil$DataSourceTransferThread { void run(); }
-keepclassmembers class android.view.GLES20Canvas { void drawLine(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class org.apache.james.mime4j.stream.NameValuePair { java.lang.String getName(); }
-keepclassmembers class org.apache.james.mime4j.stream.NameValuePair { java.lang.String getValue(); }
-keepclassmembers class org.apache.james.mime4j.stream.NameValuePair { int hashCode(); }
-keepclassmembers class android.view.GLES20Canvas { void drawLines(float[],int,int,android.graphics.Paint); }
-keepclassmembers class android.graphics.FontFamily { void <init>(); }
-keepclassmembers class org.apache.james.mime4j.stream.NameValuePair { java.lang.String toString(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawLines(long,float[],int,int,long); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void tagStart(); }
-keepclassmembers class android.graphics.FontFamily { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void drawOval(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawLines(float[],android.graphics.Paint); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$3 { void <init>(com.fsck.k9.mail.store.imap.ImapFolder,java.util.List,boolean); }
-keepclassmembers class android.view.animation.AlphaAnimation { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.view.animation.AlphaAnimation { void <init>(float,float); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawPath(long,long,long); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapFolder$3 { java.util.List search(); }
-keepclassmembers class android.view.GLES20Canvas { void drawPath(android.graphics.Path,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawOval(long,float,float,float,float,long); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRects(long,long,long); }
-keepclassmembers class android.graphics.FontFamily { boolean addFontWeightStyle(java.lang.String,int,boolean); }
-keepclassmembers class android.graphics.FontFamily { long nCreateFamily(java.lang.String,int); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void updateCoordinates(char); }
-keepclassmembers class android.view.animation.AlphaAnimation { void applyTransformation(float,android.view.animation.Transformation); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeBounds(); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean hasAlpha(); }
-keepclassmembers class libcore.icu.NativeNormalizer$1 { void <clinit>(); }
-keepclassmembers class android.view.animation.AlphaAnimation { boolean willChangeTransformationMatrix(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { java.util.Set getNamespacePrefixes(); }
-keepclassmembers class android.graphics.FontFamily { boolean nAddFontWeightStyle(long,java.lang.String,int,boolean); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { java.util.List getTokenList(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { org.htmlcleaner.DoctypeToken getDocType(); }
-keepclassmembers class android.graphics.Paint$Cap { void <init>(java.lang.String,int,int); }
-keepclassmembers class android.graphics.Paint$Cap { void <clinit>(); }
-keepclassmembers class org.htmlcleaner.HtmlTokenizer { void start(); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(float,float,float,float,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRect(long,float,float,float,float,long); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { void <init>(int); }
-keepclassmembers class android.security.KeyChain { void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],java.lang.String,int,java.lang.String); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(android.graphics.RectF,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawRect(android.graphics.Rect,android.graphics.Paint); }
-keepclassmembers class android.view.GLES20Canvas { void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { void encodeASN(org.apache.harmony.security.asn1.BerOutputStream); }
-keepclassmembers class android.security.KeyChain { java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$17 { java.lang.Object doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawRoundRect(long,float,float,float,float,float,float,long); }
-keepclassmembers class android.app.LoaderManager { void <init>(); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$17 { java.lang.Void doDbWork(android.database.sqlite.SQLiteDatabase); }
-keepclassmembers class org.apache.harmony.security.asn1.ASN1Primitive { boolean checkTag(int); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(char[],int,int,float,float,android.graphics.Paint); }
-keepclassmembers class com.fsck.k9.mailstore.LocalFolder$17 { void <init>(com.fsck.k9.mailstore.LocalFolder,com.fsck.k9.mailstore.LocalMessage,com.fsck.k9.mail.Part); }
-keepclassmembers class com.android.internal.app.WindowDecorActionBar$1 { void <init>(com.android.internal.app.WindowDecorActionBar); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawText(long,char[],int,int,float,float,int,long,long); }
-keepclassmembers class android.security.KeyChain { java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String); }
-keepclassmembers class java.io.OutputStreamWriter { void <init>(java.io.OutputStream); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawText(long,java.lang.String,int,int,float,float,int,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint); }
-keepclassmembers class android.security.KeyChain { java.security.cert.X509Certificate toCertificate(byte[]); }
-keepclassmembers class android.view.GLES20Canvas { void drawText(java.lang.String,float,float,android.graphics.Paint); }
-keepclassmembers class java.io.OutputStreamWriter { void flush(); }
-keepclassmembers class android.security.KeyChain { android.security.KeyChain$KeyChainConnection bind(android.content.Context); }
-keepclassmembers class android.security.KeyChain { android.security.KeyChain$KeyChainConnection bindAsUser(android.content.Context,android.os.UserHandle); }
-keepclassmembers class java.io.OutputStreamWriter { void close(); }
-keepclassmembers class java.io.OutputStreamWriter { void flushBytes(boolean); }
-keepclassmembers class java.io.OutputStreamWriter { void <init>(java.io.OutputStream,java.nio.charset.Charset); }
-keepclassmembers class java.io.OutputStreamWriter { void convert(java.nio.CharBuffer); }
-keepclassmembers class android.security.KeyChain { void ensureNotOnMainThread(android.content.Context); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawTextRun(long,char[],int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class android.view.GLES20Canvas { void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class android.app.ActivityThread { void <clinit>(); }
-keepclassmembers class java.io.OutputStreamWriter { void checkStatus(); }
-keepclassmembers class java.io.OutputStreamWriter { void write(char[],int,int); }
-keepclassmembers class java.io.OutputStreamWriter { void drainEncoder(); }
-keepclassmembers class android.view.GLES20Canvas { void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint); }
-keepclassmembers class java.lang.RuntimePermission { void <init>(java.lang.String); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <init>(int,java.util.List,org.apache.harmony.security.pkcs7.ContentInfo,java.util.List,java.util.List,java.util.List); }
-keepclassmembers class android.support.v4.content.LocalBroadcastManager$BroadcastRecord { void <init>(android.content.Intent,java.util.ArrayList); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List getCertificates(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List getSignerInfos(); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { void <init>(); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class libcore.icu.TimeZoneNames$1 { int compare(java.lang.String[],java.lang.String[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void <init>(com.android.okhttp.internal.spdy.SpdyConnection); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.lang.String toString(); }
-keepclassmembers class android.view.GLES20Canvas { void nDrawTextRun(long,java.lang.String,int,int,int,int,float,float,boolean,long,long); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { void <init>(org.apache.harmony.security.asn1.ASN1Type[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void execute(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { void getValues(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class android.view.GLES20Canvas { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$100(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { int access$000(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$300(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$400(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <init>(int,java.util.List,org.apache.harmony.security.pkcs7.ContentInfo,java.util.List,java.util.List,java.util.List,org.apache.harmony.security.pkcs7.SignedData$1); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { java.util.List access$500(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class org.apache.harmony.security.pkcs7.ContentInfo$1 { java.lang.Object getDecodedObject(org.apache.harmony.security.asn1.BerInputStream); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void data(boolean,int,com.android.okio.BufferedSource,int); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { void <clinit>(); }
-keepclassmembers class org.apache.harmony.security.pkcs7.SignedData { org.apache.harmony.security.pkcs7.ContentInfo access$200(org.apache.harmony.security.pkcs7.SignedData); }
-keepclassmembers class com.fsck.k9.K9$BACKGROUND_OPS { void <clinit>(); }
-keepclassmembers class com.fsck.k9.K9$BACKGROUND_OPS { void <init>(java.lang.String,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void headers(boolean,boolean,int,int,int,java.util.List,com.android.okhttp.internal.spdy.HeadersMode); }
-keepclassmembers class com.fsck.k9.mailstore.AttachmentResolver { void <init>(java.util.Map); }
-keepclassmembers class com.fsck.k9.K9$BACKGROUND_OPS { com.fsck.k9.K9$BACKGROUND_OPS valueOf(java.lang.String); }
-keepclassmembers class com.fsck.k9.mailstore.AttachmentResolver { java.util.Map buildCidToAttachmentUriMap(com.fsck.k9.message.extractors.AttachmentInfoExtractor,com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.mailstore.AttachmentResolver { com.fsck.k9.mailstore.AttachmentResolver createFromPart(com.fsck.k9.mail.Part); }
-keepclassmembers class com.fsck.k9.K9$BACKGROUND_OPS { com.fsck.k9.K9$BACKGROUND_OPS[] values(); }
-keepclassmembers class android.transition.Slide$2 { void <init>(); }
-keepclassmembers class android.transition.ChangeBounds$2 { void <init>(java.lang.Class,java.lang.String); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void rstStream(int,com.android.okhttp.internal.spdy.ErrorCode); }
-keepclassmembers class com.android.okio.Okio$1 { void <init>(java.io.OutputStream); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void settings(boolean,com.android.okhttp.internal.spdy.Settings); }
-keepclassmembers class com.android.okio.Okio$1 { void write(com.android.okio.OkBuffer,long); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void ackSettingsLater(); }
-keepclassmembers class com.android.okio.Okio$1 { void flush(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void ping(boolean,int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void priority(int,int); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void pushPromise(int,int,java.util.List); }
-keepclassmembers class com.android.okio.Okio$1 { void close(); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void <init>(com.android.okhttp.internal.spdy.SpdyConnection,com.android.okhttp.internal.spdy.SpdyConnection$1); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void goAway(int,com.android.okhttp.internal.spdy.ErrorCode,com.android.okio.ByteString); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void ackSettings(); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedAccount { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$SendMessageTask { void updateReferencedMessage(); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$SendMessageTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class com.android.okhttp.internal.spdy.SpdyConnection$Reader { void windowUpdate(int,long); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$SendMessageTask { java.lang.Void doInBackground(java.lang.Void[]); }
-keepclassmembers class com.fsck.k9.preferences.SettingsImporter$ImportedAccount { void <init>(com.fsck.k9.preferences.SettingsImporter$1); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetState(int,int); }
-keepclassmembers class com.fsck.k9.activity.MessageCompose$SendMessageTask { void <init>(android.content.Context,com.fsck.k9.Account,com.fsck.k9.helper.Contacts,com.fsck.k9.mail.Message,java.lang.Long,com.fsck.k9.activity.MessageReference); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$2 { void <init>(com.fsck.k9.activity.compose.RecipientPresenter,android.content.Context,java.lang.String,android.net.Uri,boolean,com.fsck.k9.mail.Message$RecipientType); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$5 { void run(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node addWaiter(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { int getState(); }
-keepclassmembers class com.fsck.k9.controller.MessagingController$5 { void <init>(com.fsck.k9.controller.MessagingController,com.fsck.k9.search.LocalSearch,com.fsck.k9.controller.MessagingListener); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.util.concurrent.locks.AbstractQueuedSynchronizer$Node enq(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setState(int); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$2 { void deliverResult(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.compose.RecipientPresenter$2 { void deliverResult(java.util.List); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void unparkSuccessor(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void cancelAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean shouldParkAfterFailedAcquire(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doReleaseShared(); }
-keepclassmembers class android.util.PrintWriterPrinter { void <init>(java.io.PrintWriter); }
-keepclassmembers class android.util.PrintWriterPrinter { void println(java.lang.String); }
-keepclassmembers class android.transition.Slide { void <init>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean acquireQueued(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void selfInterrupt(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void setHeadAndPropagate(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean parkAndCheckInterrupt(); }
-keepclassmembers class android.transition.Slide { void <init>(int); }
-keepclassmembers class android.transition.Slide { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class android.transition.Slide { void captureValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Slide { void captureEndValues(android.transition.TransitionValues); }
-keepclassmembers class android.transition.Slide { void captureStartValues(android.transition.TransitionValues); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doAcquireInterruptibly(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doAcquireShared(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean doAcquireSharedNanos(int,long); }
-keepclassmembers class android.transition.Slide { void setSlideEdge(int); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(int); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(int,float); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquire(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void doAcquireSharedInterruptibly(int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$4 { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mail.filter.SignSafeOutputStream$State$4 { com.fsck.k9.mail.filter.SignSafeOutputStream$State nextState(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean release(int); }
-keepclassmembers class java.util.LinkedHashSet { void <init>(java.util.Collection); }
-keepclassmembers class android.transition.Slide { void <clinit>(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean tryAcquireSharedNanos(int,long); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquireInterruptibly(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquireShared(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean hasQueuedThreads(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void acquireSharedInterruptibly(int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean releaseShared(int); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask { void <init>(com.fsck.k9.activity.misc.ContactPictureLoader,android.widget.ImageView,com.fsck.k9.mail.Address); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask { android.graphics.Bitmap doInBackground(java.lang.Void[]); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean apparentlyFirstQueuedIsExclusive(); }
-keepclassmembers class com.fsck.k9.activity.misc.ContactPictureLoader$ContactPictureRetrievalTask { void onPostExecute(android.graphics.Bitmap); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean hasQueuedPredecessors(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock { void <init>(java.util.concurrent.locks.ReentrantReadWriteLock); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock { void lock(); }
-keepclassmembers class java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock { void unlock(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { java.lang.String toString(); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean findNodeFromTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { int fullyRelease(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean isOnSyncQueue(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean transferForSignal(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetHead(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetWaitStatus(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,int,int); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean transferAfterCancelledWait(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetTail(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { boolean compareAndSetNext(java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node,java.util.concurrent.locks.AbstractQueuedSynchronizer$Node); }
-keepclassmembers class com.handmark.pulltorefresh.library.OverscrollHelper { void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,int,float,boolean); }
-keepclassmembers class java.util.concurrent.locks.AbstractQueuedSynchronizer { void <clinit>(); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTaddr_spec { void <init>(org.apache.james.mime4j.field.address.AddressListParser,int); }
-keepclassmembers class com.handmark.pulltorefresh.library.OverscrollHelper { void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,int,boolean); }
-keepclassmembers class com.handmark.pulltorefresh.library.OverscrollHelper { void overScrollBy(com.handmark.pulltorefresh.library.PullToRefreshBase,int,int,int,int,boolean); }
-keepclassmembers class com.handmark.pulltorefresh.library.OverscrollHelper { boolean isAndroidOverScrollEnabled(android.view.View); }
-keepclassmembers class android.app.Notification$Action$1 { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$6 { void <init>(com.fsck.k9.activity.setup.Prefs); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.setup.Prefs$6 { void colorChanged(int); }
-keepclassmembers class android.database.sqlite.SQLiteConnectionPool$ConnectionWaiter { void <init>(android.database.sqlite.SQLiteConnectionPool$1); }
-keepclassmembers class android.app.FragmentManagerImpl$1 { void <init>(android.app.FragmentManagerImpl); }
-keepclassmembers class org.apache.http.client.params.HttpClientParams { java.lang.String getCookiePolicy(org.apache.http.params.HttpParams); }
-keepclassmembers class android.app.FragmentManagerImpl$1 { void run(); }
-keepclassmembers class android.content.IntentFilter { void <init>(); }
-keepclassmembers class org.apache.http.client.params.HttpClientParams { boolean isRedirecting(org.apache.http.params.HttpParams); }
-keepclassmembers class android.content.IntentFilter { void <init>(java.lang.String); }
-keepclassmembers class org.apache.http.client.params.HttpClientParams { boolean isAuthenticating(org.apache.http.params.HttpParams); }
-keepclassmembers class android.content.IntentFilter { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.james.mime4j.field.address.ASTaddr_spec { void <init>(int); }
-keepclassmembers class android.content.IntentFilter { int countActions(); }
-keepclassmembers class android.content.IntentFilter { boolean matchAction(java.lang.String); }
-keepclassmembers class android.content.IntentFilter { void <init>(android.content.IntentFilter); }
-keepclassmembers class android.content.IntentFilter { java.lang.String getAction(int); }
-keepclassmembers class android.content.IntentFilter { void addDataType(java.lang.String); }
-keepclassmembers class android.content.IntentFilter { void addAction(java.lang.String); }
-keepclassmembers class android.content.IntentFilter { void addDataScheme(java.lang.String); }
-keepclassmembers class android.content.IntentFilter { boolean hasAction(java.lang.String); }
-keepclassmembers class android.content.IntentFilter { boolean hasDataSchemeSpecificPart(java.lang.String); }
-keepclassmembers class android.content.IntentFilter { boolean hasDataPath(java.lang.String); }
-keepclassmembers class android.content.IntentFilter { int matchData(java.lang.String,java.lang.String,android.net.Uri); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5$2 { void <init>(com.fsck.k9.ui.messageview.MessageViewFragment$5); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageViewFragment$5$2 { void run(); }
-keepclassmembers class android.content.IntentFilter { int matchDataAuthority(android.net.Uri); }
-keepclassmembers class android.content.IntentFilter { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class android.content.IntentFilter { java.lang.String matchCategories(java.util.Set); }
-keepclassmembers class android.system.OsConstants { boolean S_ISDIR(int); }
-keepclassmembers class android.system.OsConstants { boolean S_ISREG(int); }
-keepclassmembers class android.content.IntentFilter { void <init>(android.os.Parcel); }
-keepclassmembers class android.content.IntentFilter { int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String); }
-keepclassmembers class android.system.OsConstants { boolean S_ISLNK(int); }
-keepclassmembers class android.content.IntentFilter { void <init>(android.os.Parcel,android.content.IntentFilter$1); }
-keepclassmembers class android.system.OsConstants { int placeholder(); }
-keepclassmembers class android.system.OsConstants { java.lang.String errnoName(int); }
-keepclassmembers class android.content.IntentFilter { void <clinit>(); }
-keepclassmembers class android.content.IntentFilter { boolean findMimeType(java.lang.String); }
-keepclassmembers class android.system.OsConstants { void <clinit>(); }
-keepclassmembers class android.os.UserHandle { int getUserId(int); }
-keepclassmembers class android.os.UserHandle { int myUserId(); }
-keepclassmembers class android.os.UserHandle { void <init>(int); }
-keepclassmembers class android.os.UserHandle { int getIdentifier(); }
-keepclassmembers class android.system.OsConstants { void initConstants(); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView$4 { void onClick(android.view.View); }
-keepclassmembers class android.os.UserHandle { void <clinit>(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$UriExtractor { java.lang.String getField(com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$UriExtractor { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorResourceLoader { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$UriExtractor { java.lang.Object getField(java.lang.Object); }
-keepclassmembers class android.widget.Editor$HandleView$1 { void <init>(android.widget.Editor$HandleView); }
-keepclassmembers class com.bumptech.glide.load.model.file_descriptor.FileDescriptorResourceLoader { void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader); }
-keepclassmembers class java.io.DataInputStream { byte readByte(); }
-keepclassmembers class java.io.DataInputStream { void <init>(java.io.InputStream); }
-keepclassmembers class com.fsck.k9.ui.messageview.MessageTopView$4 { void <init>(com.fsck.k9.ui.messageview.MessageTopView); }
-keepclassmembers class java.io.DataInputStream { char readChar(); }
-keepclassmembers class java.io.DataInputStream { int read(byte[],int,int); }
-keepclassmembers class java.io.DataInputStream { boolean readBoolean(); }
-keepclassmembers class java.io.DataInputStream { double readDouble(); }
-keepclassmembers class java.io.DataInputStream { int readInt(); }
-keepclassmembers class java.io.DataInputStream { int readUnsignedShort(); }
-keepclassmembers class java.io.DataInputStream { float readFloat(); }
-keepclassmembers class java.io.DataInputStream { java.lang.String readUTF(); }
-keepclassmembers class java.io.DataInputStream { java.lang.String decodeUTF(int); }
-keepclassmembers class java.io.DataInputStream { java.lang.String decodeUTF(int,java.io.DataInput); }
-keepclassmembers class java.io.DataInputStream { long readLong(); }
-keepclassmembers class java.io.DataInputStream { void readFully(byte[]); }
-keepclassmembers class java.io.DataInputStream { short readShort(); }
-keepclassmembers class java.io.DataInputStream { int skipBytes(int); }
-keepclassmembers class java.io.DataInputStream { void readFully(byte[],int,int); }
-keepclassmembers class org.apache.james.mime4j.util.MimeUtil$1 { void <init>(); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy$1 { void handle(java.lang.Throwable); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpInlineDialog$2 { void <init>(com.fsck.k9.activity.compose.PgpInlineDialog); }
-keepclassmembers class java.io.InvalidObjectException { void <init>(java.lang.String); }
-keepclassmembers class android.os.storage.IMountService$Stub { android.os.storage.IMountService asInterface(android.os.IBinder); }
-keepclassmembers class com.fsck.k9.activity.compose.PgpInlineDialog$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListAdapter { void <init>(com.fsck.k9.fragment.MessageListFragment); }
-keepclassmembers class com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory { void <init>(android.content.Context); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListAdapter { java.lang.String getPreview(android.database.Cursor); }
-keepclassmembers class com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor$UncaughtThrowableStrategy$1 { void <init>(java.lang.String,int); }
-keepclassmembers class com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory { void hardenSocket(javax.net.ssl.SSLSocket); }
-keepclassmembers class com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory { java.lang.String[] reorder(java.lang.String[],java.lang.String[],java.lang.String[]); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListAdapter { java.lang.String recipientSigil(boolean,boolean); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider$DecryptedFileProviderCleanupReceiver { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory { void setSniHost(javax.net.ssl.SSLSocketFactory,javax.net.ssl.SSLSocket,java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider$DecryptedFileProviderCleanupReceiver { void <init>(com.fsck.k9.provider.DecryptedFileProvider$1); }
-keepclassmembers class com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory { java.net.Socket createSocket(java.net.Socket,java.lang.String,int,java.lang.String); }
-keepclassmembers class com.fsck.k9.provider.DecryptedFileProvider$DecryptedFileProviderCleanupReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListAdapter { void bindView(android.view.View,android.content.Context,android.database.Cursor); }
-keepclassmembers class com.fsck.k9.mail.store.imap.ImapStoreUriCreator$1 { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.AuthType { void <clinit>(); }
-keepclassmembers class com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory { void setHostnameViaReflection(javax.net.ssl.SSLSocket,java.lang.String); }
-keepclassmembers class com.fsck.k9.mail.AuthType { com.fsck.k9.mail.AuthType[] values(); }
-keepclassmembers class com.fsck.k9.mail.AuthType { void <init>(java.lang.String,int); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <init>(); }
-keepclassmembers class com.fsck.k9.mail.AuthType { com.fsck.k9.mail.AuthType valueOf(java.lang.String); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { void <clinit>(); }
-keepclassmembers class android.text.TextDirectionHeuristics$TextDirectionHeuristicLocale { boolean defaultIsRtl(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { int access$102(com.fsck.k9.activity.FolderList,int); }
-keepclassmembers class com.fsck.k9.fragment.MessageListFragment$MessageListAdapter { android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup); }
-keepclassmembers class com.fsck.k9.activity.FolderList { android.widget.TextView access$000(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { int access$100(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.fsck.k9.activity.FolderList { android.view.MenuItem access$1000(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.fsck.k9.activity.FolderList { android.view.View access$1100(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.fsck.k9.activity.FolderList { android.content.Context access$1300(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void access$1200(com.fsck.k9.activity.FolderList,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void actionHandleAccount(android.content.Context,com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.FolderList { com.fsck.k9.Account access$500(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.fsck.k9.activity.FolderList { android.widget.TextView access$600(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.fsck.k9.activity.FolderList { com.fsck.k9.activity.FolderList$FolderListHandler access$900(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.fsck.k9.activity.FolderList { android.widget.TextView access$200(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.fsck.k9.activity.FolderList { android.content.Intent actionHandleAccountIntent(android.content.Context,com.fsck.k9.Account,boolean); }
-keepclassmembers class com.fsck.k9.activity.FolderList { com.fsck.k9.activity.FolderList$FolderListAdapter access$300(com.fsck.k9.activity.FolderList); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$ReverseDateComparator { int compare(com.fsck.k9.activity.MessageInfoHolder,com.fsck.k9.activity.MessageInfoHolder); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void checkMail(com.fsck.k9.activity.FolderInfoHolder); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$ReverseDateComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void configureFolderSearchView(android.view.Menu); }
-keepclassmembers class com.fsck.k9.activity.FolderList { android.view.View getActionBarProgressView(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void initializeActionBar(); }
-keepclassmembers class com.fsck.k9.provider.MessageProvider$ReverseDateComparator { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onCompact(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onAccounts(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void initializeActivityView(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onEditAccount(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onClearFolder(com.fsck.k9.Account,java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onEmptyTrash(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onEditPrefs(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onOpenFolder(java.lang.String); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void restorePreviousData(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void sendMail(com.fsck.k9.Account); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void setDisplayMode(com.fsck.k9.Account$FolderMode); }
-keepclassmembers class com.fsck.k9.activity.FolderList { boolean onContextItemSelected(android.view.MenuItem); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onRefresh(boolean); }
-keepclassmembers class com.fsck.k9.activity.FolderList { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class com.fsck.k9.activity.FolderList { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onNewIntent(android.content.Intent); }
-keepclassmembers class com.fsck.k9.activity.FolderList { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onCreate(android.os.Bundle); }
-keepclassmembers class com.fsck.k9.activity.FolderList { java.lang.Object onRetainNonConfigurationInstance(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onPause(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { boolean onSearchRequested(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo); }
-keepclassmembers class java.util.concurrent.CancellationException { void <init>(); }
-keepclassmembers class com.fsck.k9.activity.FolderList { void onResume(); }
-keepclassmembers class android.app.Activity$1 { void <init>(android.app.Activity); }
-keepclassmembers class android.view.animation.Animation$1 { void <init>(android.view.animation.Animation); }
-keepclassmembers class com.android.okhttp.HostResolver { void <clinit>(); }
