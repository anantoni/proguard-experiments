-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

-dontoptimize
-dontpreverify
-dontobfuscate
-dontnote
-ignorewarnings
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4$2 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { void access$1600(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { java.lang.Object getItem(int); }
-keepclassmembers class okhttp3.FormBody$Builder { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { void createMulti(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { boolean arrayMemberEquals(java.lang.Class,java.lang.Object,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4$2 { void run(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { int getItemViewType(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { org.json.JSONObject getItem(int); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { boolean equals(java.lang.annotation.Annotation,java.lang.annotation.Annotation); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { boolean annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter { org.json.JSONArray access$102(au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter,org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { long getItemId(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter { android.widget.Filter getFilter(); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { int arrayMemberHash(java.lang.Class,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { int getViewTypeCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { void access$300(au.com.wallaceit.reddinator.service.MailCheckService); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { au.com.wallaceit.reddinator.Reddinator access$100(au.com.wallaceit.reddinator.service.MailCheckService); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { void setNotification(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { void checkMail(android.content.Context,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { java.lang.String access$200(au.com.wallaceit.reddinator.service.MailCheckService); }
-keepclassmembers class okhttp3.Credentials { java.lang.String basic(java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter { void refreshMultis(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { android.os.IBinder onBind(android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { int onStartCommand(android.content.Intent,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService { void onCreate(); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { int hashMember(java.lang.String,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { int hashCode(java.lang.annotation.Annotation); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { boolean isValidAnnotationMemberType(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { boolean memberEquals(java.lang.Class,java.lang.Object,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$7 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2,boolean,com.larswerkman.holocolorpicker.ColorPicker,android.app.Dialog); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2$1 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$7 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.widget.EditText); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils { java.lang.String toString(java.lang.annotation.Annotation); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { void <init>(java.util.List); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket); }
-keepclassmembers class okhttp3.internal.framed.Http2$FrameLogger { void <clinit>(); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { boolean isFallbackPossible(javax.net.ssl.SSLSocket); }
-keepclassmembers class okhttp3.internal.connection.ConnectionSpecSelector { boolean connectionFailed(java.io.IOException); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover { boolean translate(int,java.io.Writer); }
-keepclassmembers class okhttp3.internal.framed.Http2$FrameLogger { java.lang.String formatFlags(byte,byte); }
-keepclassmembers class okhttp3.internal.framed.Http2$FrameLogger { java.lang.String formatHeader(boolean,int,int,byte,byte); }
-keepclassmembers class okhttp3.FormBody$Builder { okhttp3.FormBody$Builder add(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void <init>(int,int,okio.Source); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$7 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { int dynamicTableIndex(int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void <init>(int,okio.Source); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { int evictToRecoverBytes(int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void insertIntoDynamicTable(int,okhttp3.internal.framed.Header); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void adjustDynamicTableByteCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$1 { void <init>(au.com.wallaceit.reddinator.activity.AboutDialog); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$7 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void clearDynamicTable(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { int readByte(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { okio.ByteString getName(int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readIndexedHeader(int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { boolean isStaticHeader(int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readLiteralHeaderWithIncrementalIndexingIndexedName(int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readLiteralHeaderWithoutIndexingNewName(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readLiteralHeaderWithoutIndexingIndexedName(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$1 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readLiteralHeaderWithIncrementalIndexingNewName(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { void readHeaders(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { okio.ByteString readByteString(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { java.util.List getAndResetHeaderList(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity$ImageWebViewClient { void <init>(au.com.wallaceit.reddinator.activity.ViewImageDialogActivity); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Reader { int readInt(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter { java.lang.Object getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity$ImageWebViewClient { void <init>(au.com.wallaceit.reddinator.activity.ViewImageDialogActivity,au.com.wallaceit.reddinator.activity.ViewImageDialogActivity$1); }
-keepclassmembers class okhttp3.FormBody$Builder { okhttp3.FormBody build(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter { java.lang.String getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$DLTask { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$DLTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter { void <init>(android.content.Context,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule { void <init>(boolean,boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$DLTask { void onPostExecute(java.util.ArrayList); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION { void <init>(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$DLTask { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3,android.widget.EditText); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule { int estimateLength(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter,java.lang.String); }
-keepclassmembers class okhttp3.OkHttpClient { void <init>(okhttp3.OkHttpClient$Builder); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void <init>(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION { void <clinit>(); }
-keepclassmembers class okhttp3.OkHttpClient { void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1); }
-keepclassmembers class okhttp3.OkHttpClient { void <clinit>(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List access$000(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { int ave(int,int,float); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { int calculateColor(float); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Authenticator authenticator(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void <clinit>(); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List access$100(); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION { org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] values(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.ConnectionPool connectionPool(); }
-keepclassmembers class okhttp3.OkHttpClient { int connectTimeoutMillis(); }
-keepclassmembers class okhttp3.OkHttpClient { boolean followSslRedirects(); }
-keepclassmembers class okhttp3.OkHttpClient { boolean followRedirects(); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List connectionSpecs(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.CertificatePinner certificatePinner(); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List interceptors(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.internal.cache.InternalCache internalCache(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.CookieJar cookieJar(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$NoFieldNameToStringStyle { void <init>(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Dispatcher dispatcher(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Dns dns(); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.HostnameVerifier hostnameVerifier(); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List networkInterceptors(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { float[] calculatePointerPosition(float); }
-keepclassmembers class okhttp3.OkHttpClient { java.util.List protocols(); }
-keepclassmembers class okhttp3.OkHttpClient { int readTimeoutMillis(); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.X509TrustManager systemDefaultTrustManager(); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Call newCall(okhttp3.Request); }
-keepclassmembers class okhttp3.OkHttpClient { okhttp3.Authenticator proxyAuthenticator(); }
-keepclassmembers class okhttp3.OkHttpClient { boolean retryOnConnectionFailure(); }
-keepclassmembers class okhttp3.OkHttpClient { int writeTimeoutMillis(); }
-keepclassmembers class okhttp3.OkHttpClient { java.net.ProxySelector proxySelector(); }
-keepclassmembers class okhttp3.OkHttpClient { java.net.Proxy proxy(); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.ssl.SSLSocketFactory sslSocketFactory(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void addOpacityBar(com.larswerkman.holocolorpicker.OpacityBar); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2,android.app.Dialog); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { float colorToAngle(int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void init(android.util.AttributeSet,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void addSaturationBar(com.larswerkman.holocolorpicker.SaturationBar); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2$2 { void onClick(android.view.View); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void addValueBar(com.larswerkman.holocolorpicker.ValueBar); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { int getColor(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { boolean hasOpacityBar(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void changeValueBarColor(int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void onMeasure(int,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { int getOldCenterColor(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void changeOpacityBarColor(int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { boolean hasValueBar(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean access$1002(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean access$1202(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { int access$100(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { au.com.wallaceit.reddinator.Reddinator access$000(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { java.util.ArrayList access$1300(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean access$1102(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$1900(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$1400(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.app.ProgressDialog access$1502(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.app.ProgressDialog); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.widget.ArrayAdapter access$1800(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter access$300(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$400(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$1700(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.app.ProgressDialog access$1500(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void setLoginButton(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$500(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class okhttp3.Request { void <init>(okhttp3.Request$Builder); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.widget.Button access$900(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.content.SharedPreferences access$800(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { android.content.res.Resources access$600(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$200(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class okhttp3.Request { void <init>(okhttp3.Request$Builder,okhttp3.Request$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void setThemeColors(); }
-keepclassmembers class okhttp3.Request { okhttp3.HttpUrl access$600(okhttp3.Request); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter access$302(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void finishWidgetSetup(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void access$2000(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class okhttp3.Request { okhttp3.Headers access$1000(okhttp3.Request); }
-keepclassmembers class okhttp3.Request { java.lang.String access$700(okhttp3.Request); }
-keepclassmembers class okhttp3.Request { okhttp3.RequestBody access$800(okhttp3.Request); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter access$700(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class okhttp3.OkHttpClient { javax.net.SocketFactory socketFactory(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void refreshSubredditsList(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showFeedPrefsDialog(); }
-keepclassmembers class okhttp3.Request { okhttp3.CacheControl cacheControl(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void <init>(okio.BufferedSink,boolean); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void applyAndAckSettings(okhttp3.internal.framed.Settings); }
-keepclassmembers class okhttp3.Request { java.lang.Object access$900(okhttp3.Request); }
-keepclassmembers class okhttp3.Request { java.lang.String header(java.lang.String); }
-keepclassmembers class okhttp3.Request { okhttp3.HttpUrl url(); }
-keepclassmembers class okhttp3.Request { okhttp3.Request$Builder newBuilder(); }
-keepclassmembers class okhttp3.Request { okhttp3.Headers headers(); }
-keepclassmembers class okhttp3.Request { okhttp3.RequestBody body(); }
-keepclassmembers class okhttp3.Request { boolean isHttps(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void data(boolean,int,okio.Buffer,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void writeNameValueBlockToBuffer(java.util.List); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void connectionPreface(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void goAway(int,okhttp3.internal.framed.ErrorCode,byte[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showFilterEditDialog(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void close(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { int maxDataLength(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showMultiEditDialog(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void ping(boolean,int,int); }
-keepclassmembers class okhttp3.Request { java.lang.String method(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.LookupTranslator { void <init>(java.lang.CharSequence[][]); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void sendDataFrame(int,int,okio.Buffer,int); }
-keepclassmembers class org.apache.commons.lang3.text.translate.LookupTranslator { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void rstStream(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void flush(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void setColor(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showMultiDeleteDialog(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showMultiRenameDialog(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void pushPromise(int,int,java.util.List); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.Throwable getCause(java.lang.Throwable,java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$DLTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showSortDialog(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$DLTask { java.util.ArrayList doInBackground(java.lang.String[]); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.Throwable getCause(java.lang.Throwable); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void setOldCenterColor(int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void synStream(boolean,boolean,int,int,java.util.List); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.String[] getDefaultCauseMethodNames(); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.Throwable getCauseUsingMethodName(java.lang.Throwable,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showWidgetThemeDialog(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void showViewDomainDialog(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ColorPicker { void setNewCenterColor(int); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.String getMessage(java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.String getRootCauseMessage(java.lang.Throwable); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void windowUpdate(int,long); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.util.List getStackFrameList(java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void updateFeedAndFinish(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onBackPressed(); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.Throwable getRootCause(java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.String getStackTrace(java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.String[] getRootCauseStackTrace(java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.util.List getThrowableList(java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher { org.apache.commons.lang3.text.StrMatcher stringMatcher(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { java.lang.Throwable[] getThrowables(java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { int getThrowableCount(java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.exception.ExceptionUtils { void removeCommonFrames(java.util.List,java.util.List); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher { int isMatch(char[],int); }
-keepclassmembers class org.apache.commons.lang3.text.WordUtils { java.lang.String initials(java.lang.String,char[]); }
-keepclassmembers class org.apache.commons.lang3.text.WordUtils { java.lang.String initials(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.WordUtils { boolean isDelimiter(char,char[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onRandomSubredditLoaded(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class org.apache.commons.lang3.text.WordUtils { java.lang.String wrap(java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.text.WordUtils { java.lang.String wrap(java.lang.String,int,java.lang.String,boolean); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserConfig { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onResume(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onSubscriptionEditComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,int,java.lang.Object[],org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void onStart(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class okio.Okio$1 { void write(okio.Buffer,long); }
-keepclassmembers class okio.Okio$1 { void <init>(okio.Timeout,java.io.OutputStream); }
-keepclassmembers class okio.Okio$1 { void close(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserConfig { net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder builder(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void <init>(okio.Buffer); }
-keepclassmembers class okio.Okio$1 { void flush(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void adjustDynamicTableByteCount(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void <init>(int,okio.Buffer); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Writer { void settings(okhttp3.internal.framed.Settings); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$2 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void insertIntoDynamicTable(okhttp3.internal.framed.Header); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void clearDynamicTable(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { int evictToRecoverBytes(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void setHeaderTableSizeSetting(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3$2 { void run(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$3 { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter,int); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void writeHeaders(java.util.List); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity { void startupTasks(); }
-keepclassmembers class okhttp3.Route { okhttp3.Address address(); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void writeByteString(okio.ByteString); }
-keepclassmembers class okhttp3.internal.framed.Hpack$Writer { void writeInt(int,int,int); }
-keepclassmembers class okhttp3.Route { boolean requiresTunnel(); }
-keepclassmembers class okhttp3.Route { java.net.Proxy proxy(); }
-keepclassmembers class okio.Okio { okio.BufferedSink buffer(okio.Sink); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$4$1 { void run(); }
-keepclassmembers class okio.Okio { boolean isAndroidGetsocknameError(java.lang.AssertionError); }
-keepclassmembers class okio.Okio { okio.Sink sink(java.io.OutputStream); }
-keepclassmembers class okio.Okio { void <clinit>(); }
-keepclassmembers class okhttp3.Route { java.net.InetSocketAddress socketAddress(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$4$1 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity$4,android.os.Bundle); }
-keepclassmembers class okhttp3.Route { boolean equals(java.lang.Object); }
-keepclassmembers class okio.Okio { okio.BufferedSource buffer(okio.Source); }
-keepclassmembers class okhttp3.Route { void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress); }
-keepclassmembers class okio.Okio { okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[]); }
-keepclassmembers class okio.Okio { okio.Source source(java.net.Socket); }
-keepclassmembers class okio.Okio { okio.Sink sink(java.net.Socket); }
-keepclassmembers class okio.Okio { okio.Source source(java.io.InputStream); }
-keepclassmembers class okio.Okio { okio.Sink sink(java.io.OutputStream,okio.Timeout); }
-keepclassmembers class okio.Okio { okio.Source source(java.io.File); }
-keepclassmembers class okhttp3.Route { int hashCode(); }
-keepclassmembers class okio.Okio { okio.AsyncTimeout timeout(java.net.Socket); }
-keepclassmembers class okio.Okio { okio.Source source(java.io.InputStream,okio.Timeout); }
-keepclassmembers class okio.Okio { okio.Sink sink(java.io.File); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder { java.lang.Thread$UncaughtExceptionHandler access$400(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder { java.lang.Boolean access$300(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder { java.util.concurrent.ThreadFactory access$000(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder { java.lang.Integer access$200(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity,android.support.v4.app.FragmentManager); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { java.lang.CharSequence getPageTitle(int); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder { java.lang.String access$100(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { android.support.v4.app.Fragment getItem(int); }
-keepclassmembers class okio.Okio { okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { android.support.v4.app.Fragment getRegisteredFragment(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.VoteTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.VoteTask$Callback,java.lang.String,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.VoteTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.VoteTask$Callback,java.lang.String,int,int,int); }
-keepclassmembers class okio.RealBufferedSource { long indexOf(byte); }
-keepclassmembers class okio.Timeout$1 { void <init>(); }
-keepclassmembers class okio.RealBufferedSource { void close(); }
-keepclassmembers class okio.RealBufferedSource { long indexOf(byte,long); }
-keepclassmembers class okio.RealBufferedSource { void <init>(okio.Source); }
-keepclassmembers class okio.Timeout$1 { okio.Timeout deadlineNanoTime(long); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.VoteTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class okio.RealBufferedSource { boolean exhausted(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.VoteTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$19 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.widget.EditText,android.widget.EditText,android.widget.Spinner,android.widget.EditText,java.lang.String,android.widget.Spinner,android.widget.Spinner); }
-keepclassmembers class okio.RealBufferedSource { okio.Buffer buffer(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$UnknownLengthSource { void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$19 { void onClick(android.view.View); }
-keepclassmembers class okio.Timeout$1 { okio.Timeout timeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.VoteTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.VoteTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class okio.RealBufferedSource { long read(okio.Buffer,long); }
-keepclassmembers class org.apache.commons.lang3.time.StopWatch$State { void <init>(java.lang.String,int,org.apache.commons.lang3.time.StopWatch$1); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$UnknownLengthSource { void <init>(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$UnknownLengthSource { void close(); }
-keepclassmembers class org.apache.commons.lang3.time.StopWatch$State { void <init>(java.lang.String,int); }
-keepclassmembers class okio.RealBufferedSource { byte readByte(); }
-keepclassmembers class okio.RealBufferedSource { okio.ByteString readByteString(long); }
-keepclassmembers class org.apache.commons.lang3.time.StopWatch$State { org.apache.commons.lang3.time.StopWatch$State[] values(); }
-keepclassmembers class okio.RealBufferedSource { byte[] readByteArray(); }
-keepclassmembers class okio.RealBufferedSource { byte[] readByteArray(long); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$UnknownLengthSource { long read(okio.Buffer,long); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$2 { void <init>(int); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { void <init>(java.lang.String,int,float,java.lang.String); }
-keepclassmembers class okio.RealBufferedSource { int readInt(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { org.json.JSONObject[] doInBackground(java.lang.Void[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity,au.com.wallaceit.reddinator.activity.AccountActivity$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class okio.RealBufferedSource { int readIntLe(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { void onPostExecute(org.json.JSONObject[]); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { org.apache.commons.lang3.JavaVersion get(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { void onPreExecute(); }
-keepclassmembers class org.apache.commons.lang3.time.StopWatch$State { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class okio.RealBufferedSource { short readShort(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$LoadUserDetailsTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class okio.RealBufferedSource { short readShortLe(); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { void <clinit>(); }
-keepclassmembers class okio.RealBufferedSource { long readHexadecimalUnsignedLong(); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { float maxVersion(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$5 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity,android.support.v4.app.FragmentManager); }
-keepclassmembers class okio.RealBufferedSource { java.lang.String readUtf8LineStrict(); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { boolean atLeast(org.apache.commons.lang3.JavaVersion); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$5 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { float toFloatVersion(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { android.support.v4.app.Fragment getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { void closeQuietly(java.io.Closeable); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { org.apache.commons.lang3.JavaVersion[] values(); }
-keepclassmembers class okio.RealBufferedSource { void skip(long); }
-keepclassmembers class okio.RealBufferedSource { void require(long); }
-keepclassmembers class okio.RealBufferedSource { okio.Timeout timeout(); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { int convertDpToPx(android.content.Context,float); }
-keepclassmembers class okio.RealBufferedSource { boolean request(long); }
-keepclassmembers class org.apache.commons.lang3.JavaVersion { java.lang.String toString(); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { boolean isEnabled(int[]); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { void copy(java.io.InputStream,java.io.File); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { java.lang.CharSequence getPageTitle(int); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { java.lang.StringBuilder replaceIcons(java.lang.Enum,java.lang.StringBuilder); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.WidgetVoteTask { void <init>(android.content.Context,int,int,int,java.lang.String); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { java.io.File resourceToFile(android.content.Context,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ViewHolder { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class com.joanzapata.android.iconify.Utils { java.lang.StringBuilder replaceIcons(java.lang.StringBuilder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.support.v4.view.ViewPager); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter { android.support.v4.app.Fragment getRegisteredFragment(int); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.WidgetVoteTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.WidgetVoteTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3 { void onClick(android.view.View); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$2 { void <init>(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.WidgetVoteTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class okhttp3.ResponseBody { java.nio.charset.Charset charset(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter,android.view.ViewGroup); }
-keepclassmembers class okhttp3.ResponseBody { void <init>(); }
-keepclassmembers class okhttp3.ResponseBody { byte[] bytes(); }
-keepclassmembers class okhttp3.ResponseBody { java.lang.String string(); }
-keepclassmembers class okhttp3.ResponseBody { void close(); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils$1 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils$1 { void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.WidgetVoteTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.AnnotationUtils$1 { java.lang.String getShortClassName(java.lang.Class); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void <init>(okhttp3.internal.framed.FramedStream,long,okhttp3.internal.framed.FramedStream$1); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void <init>(okhttp3.internal.framed.FramedStream,long); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void close(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { boolean access$100(okhttp3.internal.framed.FramedStream$FramedDataSource); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { boolean access$102(okhttp3.internal.framed.FramedStream$FramedDataSource,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { long read(okio.Buffer,long); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void waitUntilReadable(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void receive(okio.BufferedSource,long); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { boolean access$300(okhttp3.internal.framed.FramedStream$FramedDataSource); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.widget.ListView); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { void checkNotClosed(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSource { okio.Timeout timeout(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6 { void run(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$1 { void <init>(android.content.Context); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProvider { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProvider { void updateAppWidgets(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$1$1 { void <init>(au.com.wallaceit.reddinator.core.ThemeHelper$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$9 { boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProvider { void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$2$1 { void apply(java.lang.Object); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$2$1 { void apply(net.rdrei.android.dirchooser.DirectoryChooserFragment$OnFragmentInteractionListener); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$2$1 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment$2); }
-keepclassmembers class okhttp3.RealCall { okhttp3.Response getResponseWithInterceptorChain(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$1$1 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class okhttp3.RealCall { void <init>(okhttp3.OkHttpClient,okhttp3.Request); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProvider { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { void <clinit>(); }
-keepclassmembers class okhttp3.RealCall { okhttp3.Response execute(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$9 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$CharSetMatcher { void <init>(char[]); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okhttp3.internal.connection.StreamAllocation access$000(okhttp3.internal.http.Http2xStream); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { void <init>(java.util.List,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection,int,okhttp3.Request); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { java.util.List http2HeadersList(okhttp3.Request); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { boolean sameConnection(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.Response proceed(okhttp3.Request,okhttp3.internal.connection.StreamAllocation,okhttp3.internal.http.HttpStream,okhttp3.Connection); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.internal.http.HttpStream httpStream(); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okhttp3.Response$Builder readHttp2HeadersList(java.util.List); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okhttp3.Response$Builder readSpdy3HeadersList(java.util.List); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.Request request(); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { void <init>(java.lang.reflect.Method,java.lang.reflect.Method); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { java.util.List spdy3HeadersList(okhttp3.Request); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.Response proceed(okhttp3.Request); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(char); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { java.lang.String joinOnNull(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(byte); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { okhttp3.internal.platform.Jdk9Platform buildIfSupported(); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(double); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(float); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { void finishRequest(); }
-keepclassmembers class okhttp3.internal.http.RealInterceptorChain { okhttp3.internal.connection.StreamAllocation streamAllocation(); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(long); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(short); }
-keepclassmembers class okhttp3.internal.platform.Jdk9Platform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okhttp3.ResponseBody openResponseBody(okhttp3.Response); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(byte[]); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(boolean); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { void writeRequestHeaders(okhttp3.Request); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(char[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.ComposeMessageTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okhttp3.Response$Builder readResponseHeaders(); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(int); }
-keepclassmembers class okhttp3.internal.http.Http2xStream { okio.Sink createRequestBody(okhttp3.Request,long); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.ComposeMessageTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.ComposeMessageTask$Callback,java.lang.String[]); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(double[]); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(float[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.ComposeMessageTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField { void <init>(int,int); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(short[]); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(int[]); }
-keepclassmembers class org.apache.commons.lang3.CharSet { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.ComposeMessageTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class okhttp3.ConnectionSpec { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(long[]); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { org.apache.commons.lang3.builder.HashCodeBuilder append(boolean[]); }
-keepclassmembers class org.apache.commons.lang3.CharSet { void add(java.lang.String); }
-keepclassmembers class okhttp3.ConnectionSpec { void <init>(okhttp3.ConnectionSpec$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.ComposeMessageTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField { int estimateLength(); }
-keepclassmembers class okhttp3.ConnectionSpec { void <init>(okhttp3.ConnectionSpec$Builder,okhttp3.ConnectionSpec$1); }
-keepclassmembers class org.apache.commons.lang3.CharSet { void <init>(java.lang.String[]); }
-keepclassmembers class org.apache.commons.lang3.CharSet { org.apache.commons.lang3.CharSet getInstance(java.lang.String[]); }
-keepclassmembers class okhttp3.ConnectionSpec { okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.builder.HashCodeBuilder { int toHashCode(); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean nonEmptyIntersection(java.lang.String[],java.lang.String[]); }
-keepclassmembers class org.apache.commons.lang3.CharSet { boolean contains(char); }
-keepclassmembers class okhttp3.ConnectionSpec { void apply(javax.net.ssl.SSLSocket,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory$1 { void <init>(au.com.wallaceit.reddinator.service.ListRemoteViewsFactory,java.lang.String); }
-keepclassmembers class okhttp3.ConnectionSpec { java.util.List cipherSuites(); }
-keepclassmembers class org.apache.commons.lang3.CharSet { int hashCode(); }
-keepclassmembers class org.apache.commons.lang3.CharSet { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$ViewHolder { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void <init>(java.lang.Object); }
-keepclassmembers class okhttp3.ConnectionSpec { java.lang.String[] access$500(okhttp3.ConnectionSpec); }
-keepclassmembers class okhttp3.ConnectionSpec { int hashCode(); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean access$400(okhttp3.ConnectionSpec); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer,java.lang.Class,boolean,boolean); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean equals(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory$1 { void run(); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String[] toNoNullStringArray(java.util.Collection); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean isCompatible(javax.net.ssl.SSLSocket); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String[] toNoNullStringArray(java.lang.Object[]); }
-keepclassmembers class okhttp3.ConnectionSpec { java.util.List tlsVersions(); }
-keepclassmembers class org.apache.commons.lang3.CharSet { boolean equals(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$2 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean isTls(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$11 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(java.lang.Object); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean supportsTlsExtensions(); }
-keepclassmembers class okhttp3.ConnectionSpec { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedException { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$2 { void <init>(au.com.wallaceit.reddinator.activity.AboutDialog); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toStringExclude(java.lang.Object,java.lang.String[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean,java.lang.Class); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity,au.com.wallaceit.reddinator.ui.RedditViewPager); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,boolean,boolean); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedException { java.lang.String getFormattedExceptionMessage(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toStringExclude(java.lang.Object,java.util.Collection); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$TabClickListener { void <init>(au.com.wallaceit.reddinator.ui.SimpleTabsWidget,int); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedException { void <init>(java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$3 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.ConnectionSpec { java.lang.String[] access$600(okhttp3.ConnectionSpec); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { boolean accept(java.lang.reflect.Field); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedException { void <init>(java.lang.String,java.lang.Throwable,org.apache.commons.lang3.exception.ExceptionContext); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.Object getValue(java.lang.reflect.Field); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void appendFieldsIn(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void setAppendStatics(boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { org.apache.commons.lang3.builder.ReflectionToStringBuilder setExcludeFieldNames(java.lang.String[]); }
-keepclassmembers class okhttp3.ConnectionSpec { boolean access$700(okhttp3.ConnectionSpec); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedException { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { boolean isAppendTransients(); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { org.apache.commons.lang3.builder.ReflectionToStringBuilder reflectionAppendArray(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$TabClickListener { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$1 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader$2 { void <init>(okhttp3.internal.framed.NameValueBlockReader); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedException { java.lang.String getMessage(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { void close(); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void setUpToClass(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { void setAppendTransients(boolean); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { void <init>(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { void flush(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { okio.Timeout timeout(); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { boolean isAppendStatics(); }
-keepclassmembers class okhttp3.internal.NamedRunnable { void <init>(java.lang.String,java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$2 { void onPageScrollStateChanged(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$2 { void onPageSelected(int); }
-keepclassmembers class org.apache.commons.lang3.builder.ReflectionToStringBuilder { java.lang.Class getUpToClass(); }
-keepclassmembers class okhttp3.internal.NamedRunnable { void run(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader$2 { int inflate(byte[],int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$2 { void onPageScrolled(int,float,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSink { void write(okio.Buffer,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$4 { void onClick(android.view.View); }
-keepclassmembers class okio.ForwardingTimeout { void <init>(okio.Timeout); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout clearDeadline(); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout delegate(); }
-keepclassmembers class okio.ForwardingTimeout { long deadlineNanoTime(); }
-keepclassmembers class okio.ForwardingTimeout { boolean hasDeadline(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout deadlineNanoTime(long); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout clearTimeout(); }
-keepclassmembers class okhttp3.ConnectionPool$1 { void <init>(okhttp3.ConnectionPool); }
-keepclassmembers class okio.ForwardingTimeout { okio.ForwardingTimeout setDelegate(okio.Timeout); }
-keepclassmembers class okio.ForwardingTimeout { okio.Timeout timeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class okhttp3.ConnectionPool$1 { void run(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void <clinit>(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { java.io.File access$000(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void access$200(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void access$600(net.rdrei.android.dirchooser.DirectoryChooserFragment,java.io.File); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void access$400(java.lang.String,java.lang.Object[]); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { com.gu.option.Option access$300(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void <init>(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { java.lang.String access$802(net.rdrei.android.dirchooser.DirectoryChooserFragment,java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { boolean access$100(net.rdrei.android.dirchooser.DirectoryChooserFragment,java.io.File); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { java.io.File[] access$500(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void changeDirectory(java.io.File); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { int access$900(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void adjustResourceLightness(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void access$700(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { int createFolder(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void debug(java.lang.String,java.lang.Object[]); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { boolean isValidFile(java.io.File); }
-keepclassmembers class okhttp3.Authenticator$1 { void <init>(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { net.rdrei.android.dirchooser.DirectoryChooserFragment newInstance(net.rdrei.android.dirchooser.DirectoryChooserConfig); }
-keepclassmembers class okhttp3.Authenticator$1 { okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response); }
-keepclassmembers class okhttp3.CertificatePinner { void <clinit>(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void openNewFolderDialog(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { android.os.FileObserver createFileObserver(java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void returnSelectedFolder(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void refreshButtonState(); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup$MapStrLookup { void <init>(java.util.Map); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onAttach(android.app.Activity); }
-keepclassmembers class okhttp3.CertificatePinner { void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner); }
-keepclassmembers class okhttp3.CertificatePinner { okio.ByteString sha1(java.security.cert.X509Certificate); }
-keepclassmembers class okhttp3.CertificatePinner { void <init>(java.util.List,okhttp3.internal.tls.CertificateChainCleaner,okhttp3.CertificatePinner$1); }
-keepclassmembers class okhttp3.CertificatePinner { java.lang.String pin(java.security.cert.Certificate); }
-keepclassmembers class okhttp3.CertificatePinner { okio.ByteString sha256(java.security.cert.X509Certificate); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex { void <init>(); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex { okhttp3.internal.tls.TrustRootIndex get(java.security.cert.X509Certificate[]); }
-keepclassmembers class okhttp3.CertificatePinner { okhttp3.CertificatePinner withCertificateChainCleaner(okhttp3.internal.tls.CertificateChainCleaner); }
-keepclassmembers class okhttp3.CertificatePinner { java.util.List findMatchingPins(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup$MapStrLookup { java.lang.String lookup(java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.ConnectInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onDetach(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void <init>(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onPause(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class okhttp3.internal.connection.ConnectInterceptor { void <init>(okhttp3.OkHttpClient); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.lang.String canonicalizeHost(java.lang.String,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$9 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity,java.lang.String); }
-keepclassmembers class okhttp3.CertificatePinner { void check(java.lang.String,java.util.List); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void setDirectoryChooserListener(net.rdrei.android.dirchooser.DirectoryChooserFragment$OnFragmentInteractionListener); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onResume(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void <init>(okio.BufferedSink,boolean); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex { okhttp3.internal.tls.TrustRootIndex get(javax.net.ssl.X509TrustManager); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class okhttp3.HttpUrl$Builder { boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void writeContinuationFrames(int,long); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void close(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void applyAndAckSettings(okhttp3.internal.framed.Settings); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$9 { void run(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void connectionPreface(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void data(boolean,int,okio.Buffer,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void dataFrame(int,byte,okio.Buffer,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void flush(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.net.InetAddress decodeIpv6(java.lang.String,int,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void frameHeader(int,int,byte,byte); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.lang.String inet6AddressToAscii(byte[]); }
-keepclassmembers class org.apache.commons.lang3.text.translate.AggregateTranslator { void <init>(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void headers(boolean,int,java.util.List); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int parsePort(java.lang.String,int,int); }
-keepclassmembers class okhttp3.HttpUrl$Builder { boolean isDot(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void pop(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { boolean isDotDot(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void ping(boolean,int,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void goAway(int,okhttp3.internal.framed.ErrorCode,byte[]); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int portColonOffset(java.lang.String,int,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void pushPromise(int,int,java.util.List); }
-keepclassmembers class okhttp3.internal.Version { java.lang.String userAgent(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { int maxDataLength(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void resolvePath(java.lang.String,int,int); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int schemeDelimiterOffset(java.lang.String,int,int); }
-keepclassmembers class okhttp3.HttpUrl$Builder { void push(java.lang.String,int,int,boolean,boolean); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$2 { void <clinit>(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int slashCount(java.lang.String,int,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void synStream(boolean,boolean,int,int,java.util.List); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void rstStream(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void settings(okhttp3.internal.framed.Settings); }
-keepclassmembers class org.apache.commons.lang3.text.translate.AggregateTranslator { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class okhttp3.HttpUrl$Builder { int effectivePort(); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl build(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Writer { void windowUpdate(int,long); }
-keepclassmembers class okio.GzipSource { void <init>(okio.Source); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder encodedQuery(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder$ParseResult parse(okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchSpinnerAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder host(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchSpinnerAdapter { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity,android.content.Context,int,int,java.lang.String[]); }
-keepclassmembers class okio.GzipSource { void consumeHeader(); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.reflect.Method getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$1 { void findViewsWithText(java.util.ArrayList,android.view.ViewGroup,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.reflect.Method getAccessibleMethod(java.lang.reflect.Method); }
-keepclassmembers class okio.GzipSource { okio.Timeout timeout(); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.reflect.Method getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class okio.GzipSource { void updateCrc(okio.Buffer,long,long); }
-keepclassmembers class okio.GzipSource { void close(); }
-keepclassmembers class okio.GzipSource { void consumeTrailer(); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.reflect.Method getAccessibleMethodFromSuperclass(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$1 { void <init>(android.app.Activity,android.view.ViewGroup,int); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.reflect.Method getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder port(int); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void clearDir(java.io.File,int); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { boolean doShowWelcomeDialog(android.app.Activity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder reencodeForUri(); }
-keepclassmembers class okio.GzipSource { void checkEqual(java.lang.String,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void clearFeedDataAndPreferences(int); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void clearFeedData(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity,au.com.wallaceit.reddinator.activity.ThemesActivity$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { java.lang.Object getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { long getItemId(int); }
-keepclassmembers class okio.GzipSource { long read(okio.Buffer,long); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$1 { void run(); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.Object invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.NotImplementedException { void <init>(java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.Object invokeExactMethod(java.lang.Object,java.lang.String,java.lang.Object[],java.lang.Class[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class org.apache.commons.lang3.NotImplementedException { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.NotImplementedException { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void clearImageCache(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { int getCount(); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.Object invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.NotImplementedException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class okhttp3.HttpUrl$Builder { okhttp3.HttpUrl$Builder scheme(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void deleteFeed(int); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.Object invokeExactStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[]); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.Object invokeExactMethod(java.lang.Object,java.lang.String); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$ReleaseItem { void <init>(int,java.lang.String,java.util.List); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void clearUnreadMessages(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { int getViewTypeCount(); }
-keepclassmembers class org.apache.commons.lang3.NotImplementedException { void <init>(java.lang.String,java.lang.Throwable,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityUnescaper { boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION); }
-keepclassmembers class okhttp3.HttpUrl$Builder { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.NotImplementedException { void <init>(java.lang.Throwable,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityUnescaper { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { android.os.Bundle getItemUpdate(); }
-keepclassmembers class org.apache.commons.lang3.reflect.MethodUtils { java.lang.Object invokeStaticMethod(java.lang.Class,java.lang.String,java.lang.Object[],java.lang.Class[]); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { org.json.JSONArray getFeed(int); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { boolean getBypassCache(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter { boolean isEmpty(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void handleLink(android.content.Context,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { java.util.ArrayList getSrList(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { int getLoadType(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityUnescaper { void <init>(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[]); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { java.lang.String getDefaultCommentsMobileSite(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void handleRedditLink(android.content.Context,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { org.json.JSONObject getFeedObject(int,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { int loadAccountSubreddits(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { au.com.wallaceit.reddinator.core.SubredditManager getSubredditManager(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { org.json.JSONArray getUnreadMessages(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { boolean isSrlistCached(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { java.lang.String getDefaultMobileSite(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { int loadAccountMultis(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { java.lang.String getRedditMobileSite(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void onCreate(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void putSrList(java.util.ArrayList); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$10 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$10 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void openSubredditFeed(android.content.Context,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setBypassCache(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setFeed(int,org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setItemVote(int,int,java.lang.String,java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubscriptionEditTask { void <init>(au.com.wallaceit.reddinator.Reddinator,android.content.Context,au.com.wallaceit.reddinator.tasks.SubscriptionEditTask$Callback,int); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { boolean saveThumbnailToCache(android.graphics.Bitmap,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setItemUpdate(int,java.lang.String,java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$3 { void run(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setRefreshView(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void removePostFromFeed(int,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setLoadMore(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setLoad(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void showAlertDialog(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void setUnreadMessages(org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { java.lang.String access$102(au.com.wallaceit.reddinator.activity.ViewRedditActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean access$302(au.com.wallaceit.reddinator.activity.ViewRedditActivity,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { com.sothree.slidinguppanel.SlidingUpPanelLayout access$200(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { android.widget.IconTextView access$400(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { java.lang.String access$1200(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { java.lang.String access$600(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { boolean syncAllFilters(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { au.com.wallaceit.reddinator.Reddinator access$700(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { android.os.AsyncTask access$502(au.com.wallaceit.reddinator.activity.ViewRedditActivity,android.os.AsyncTask); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void access$800(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean access$300(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { android.content.SharedPreferences access$1100(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean archivedPostCheck(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { au.com.wallaceit.reddinator.activity.ViewRedditActivity$RedditPageAdapter access$000(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void populateInfoPanel(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator { void triggerThunbnailCacheClean(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$8 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void downVote(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { android.content.res.Resources access$900(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubscriptionEditTask { java.lang.Boolean doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.exception.DefaultExceptionContext { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$8 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { java.lang.String access$100(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void setVoteIcons(); }
-keepclassmembers class okio.Okio$2 { void <init>(okio.Timeout,java.io.InputStream); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void setInboxIcon(); }
-keepclassmembers class okio.Okio$2 { void close(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubscriptionEditTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubscriptionEditTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { android.app.ActionBar access$1000(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubscriptionEditTask { void onPreExecute(); }
-keepclassmembers class org.apache.commons.lang3.exception.DefaultExceptionContext { java.lang.String getFormattedExceptionMessage(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$1 { void onPageSelected(int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubscriptionEditTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class org.apache.commons.lang3.CharRange { org.apache.commons.lang3.CharRange isIn(char,char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$1 { void onPageScrollStateChanged(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class org.apache.commons.lang3.CharRange { org.apache.commons.lang3.CharRange is(char); }
-keepclassmembers class org.apache.commons.lang3.CharRange { void <init>(char,char,boolean); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { void <init>(okhttp3.internal.http.Http1xStream,long,okhttp3.internal.http.Http1xStream$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void upVote(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { void <init>(okhttp3.internal.http.Http1xStream,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void setVoteUpdateRecord(java.lang.String,java.lang.String,int); }
-keepclassmembers class okio.Okio$2 { long read(okio.Buffer,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$1 { void onPageScrolled(int,float,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void showOpenDialog(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { void flush(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void updateTheme(); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { void <init>(java.lang.String,int,char); }
-keepclassmembers class org.apache.commons.lang3.CharRange { org.apache.commons.lang3.CharRange isNot(char); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { com.joanzapata.android.iconify.Iconify$IconValue valueOf(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.CharRange { org.apache.commons.lang3.CharRange isNotIn(char,char); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { java.lang.String getPrefix(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { void close(); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { com.joanzapata.android.iconify.Iconify$IconValue[] values(); }
-keepclassmembers class org.apache.commons.lang3.CharRange { boolean contains(char); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { com.joanzapata.android.iconify.BaseIconValue iconFrom(java.lang.String); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { java.lang.String getTtfFilename(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void finish(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { okio.Timeout timeout(); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { char character(); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify$IconValue { com.joanzapata.android.iconify.Iconify$IconValue iconFrom(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.CharRange { boolean equals(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { au.com.wallaceit.reddinator.core.ThemeManager$Theme getCurrentTheme(); }
-keepclassmembers class okio.Segment { void <init>(); }
-keepclassmembers class okio.Segment { void <init>(okio.Segment); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSink { void write(okio.Buffer,long); }
-keepclassmembers class okio.Segment { okio.Segment pop(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { au.com.wallaceit.reddinator.core.ThemeManager$Theme access$200(au.com.wallaceit.reddinator.activity.ThemeEditorActivity); }
-keepclassmembers class okio.Segment { void <init>(byte[],int,int); }
-keepclassmembers class okio.Segment { void compact(); }
-keepclassmembers class org.apache.commons.lang3.CharRange { int hashCode(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class okio.Segment { okio.Segment split(int); }
-keepclassmembers class okio.Segment { void writeTo(okio.Segment,int); }
-keepclassmembers class okio.Segment { okio.Segment push(okio.Segment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onBackPressed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.commons.lang3.CharRange { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { android.content.res.Resources access$300(au.com.wallaceit.reddinator.activity.ThemeEditorActivity); }
-keepclassmembers class org.apache.commons.lang3.CharRange { boolean isNegated(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void <init>(okhttp3.Route); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { boolean access$402(au.com.wallaceit.reddinator.activity.ThemeEditorActivity,boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule { int estimateLength(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void connectSocket(int,int); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void buildConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule { void <init>(java.util.TimeZone,java.util.Locale,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { void access$500(au.com.wallaceit.reddinator.activity.ThemeEditorActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.content.Context,java.util.ArrayList); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void connectTls(int,int,okhttp3.internal.connection.ConnectionSpecSelector); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { void onBackPressed(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void buildTunneledConnection(int,int,int,okhttp3.internal.connection.ConnectionSpecSelector); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onPause(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CodePointTranslator { void <init>(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void access$500(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onPostLoaded(org.json.JSONArray,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void clearSharedPreferences(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void access$400(android.content.Context,boolean); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void init(com.kobakei.ratethisapp.RateThisApp$Config); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$3 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void onStart(android.content.Context); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CodePointTranslator { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$7 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { boolean shouldShowRateDialog(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$3 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$7 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void showRateDialog(android.content.Context); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void setOptOut(android.content.Context,boolean); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void printStatus(android.content.Context); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$3 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { void log(java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onVoteComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String,int,int,int); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp { boolean showRateDialogIfNeeded(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onStart(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$6 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$2 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void onResume(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { au.com.wallaceit.reddinator.Reddinator access$300(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$6 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { android.widget.EditText access$000(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { android.widget.EditText access$500(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { boolean access$400(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { android.widget.TextView access$200(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void cancel(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void establishProtocol(int,int,okhttp3.internal.connection.ConnectionSpecSelector); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { void setTitleText(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { android.widget.EditText access$600(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Request createTunnelRequest(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { android.content.res.Resources access$100(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { void <init>(android.content.Context,java.lang.Runnable,boolean,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity { boolean voteInProgress(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void connect(int,int,int,java.util.List,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { void onMessageSent(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String[]); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Handshake handshake(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { boolean isMultiplexed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity { boolean validateInput(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { boolean isHealthy(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { java.net.Socket socket(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$5 { void onClick(android.content.DialogInterface,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { void <clinit>(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void onSettings(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { void onPreExecute(); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { void onStream(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$6 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { void onProgressUpdate(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$5 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,java.lang.String,android.app.ProgressDialog); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { okhttp3.Route route(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$6 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String center(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$6 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class okhttp3.internal.connection.RealConnection { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4 { void run(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String center(java.lang.String,int,char); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String center(java.lang.String,int,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$1200(okhttp3.internal.framed.FramedConnection,okhttp3.internal.framed.ErrorCode,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$5 { boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean access$1602(okhttp3.internal.framed.FramedConnection,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void <init>(okhttp3.internal.framed.FramedConnection$Builder,okhttp3.internal.framed.FramedConnection$1); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SyncUserDataTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void <init>(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$5 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { int access$1702(okhttp3.internal.framed.FramedConnection,int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean access$1300(okhttp3.internal.framed.FramedConnection,int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { int access$1800(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { java.util.Map access$1900(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$1500(okhttp3.internal.framed.FramedConnection,int,java.util.List,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { int access$1700(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RedditViewPager { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { java.util.concurrent.ExecutorService access$2100(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RedditViewPager { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { java.lang.String access$1100(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RedditViewPager { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$2200(okhttp3.internal.framed.FramedConnection,int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.FramedConnection$Listener access$2000(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean access$2300(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RedditViewPager { void <init>(android.content.Context); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { java.util.Set access$2800(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$1400(okhttp3.internal.framed.FramedConnection,int,okio.BufferedSource,int,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$900(okhttp3.internal.framed.FramedConnection,boolean,int,int,okhttp3.internal.framed.Ping); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$2600(okhttp3.internal.framed.FramedConnection,int,java.util.List); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean access$1600(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.Ping access$2400(okhttp3.internal.framed.FramedConnection,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RedditViewPager { void setPagingEnabled(boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void access$2500(okhttp3.internal.framed.FramedConnection,boolean,int,int,okhttp3.internal.framed.Ping); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.CharSequence defaultIfBlank(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.PushObserver access$2700(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String defaultString(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void pushHeadersLater(int,java.util.List,boolean); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { boolean equals(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean access$2302(okhttp3.internal.framed.FramedConnection,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void pushDataLater(int,okio.BufferedSource,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.time.StopWatch$State$1 { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$1 { void <init>(java.lang.reflect.Type); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.CharSequence defaultIfEmpty(java.lang.CharSequence,java.lang.CharSequence); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void pushResetLater(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String defaultString(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void pushRequestLater(int,java.util.List); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void close(okhttp3.internal.framed.ErrorCode,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writePing(boolean,int,int,okhttp3.internal.framed.Ping); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.Ping removePing(int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writePingLater(boolean,int,int,okhttp3.internal.framed.Ping); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { int maxConcurrentStreams(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.FramedStream newStream(java.util.List,boolean,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.FramedStream newStream(int,java.util.List,boolean,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void addBytesToWriteWindow(long); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void start(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { boolean pushedStream(int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void start(boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void shutdown(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writeData(int,boolean,okio.Buffer,long); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void flush(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.Protocol getProtocol(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.FramedStream removeStream(int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writeSynReset(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writeSynResetLater(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { void writeWindowUpdateLater(int,long); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection { okhttp3.internal.framed.FramedStream getStream(int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { boolean isAsciiPrintable(java.lang.CharSequence); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { boolean isNotEmpty(java.lang.CharSequence); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl build(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { boolean isBlank(java.lang.CharSequence); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$3 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit); }
-keepclassmembers class okhttp3.CacheControl$Builder { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { boolean isNotBlank(java.lang.CharSequence); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl$Builder onlyIfCached(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String join(java.lang.Object[],java.lang.String,int,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { boolean isEmpty(java.lang.CharSequence); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String join(java.lang.Object[],java.lang.String); }
-keepclassmembers class okhttp3.CacheControl$Builder { okhttp3.CacheControl$Builder noCache(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String join(java.lang.Object[],char,int,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { int length(java.lang.CharSequence); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String left(java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String leftPad(java.lang.String,int,char); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { int ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String leftPad(java.lang.String,int,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[]); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String overlay(java.lang.String,java.lang.String,int,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String join(java.lang.Object[],char); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { int ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean equals(java.lang.reflect.WildcardType,java.lang.reflect.Type); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean equals(java.lang.reflect.GenericArrayType,java.lang.reflect.Type); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String repeat(char,int); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean equals(java.lang.reflect.Type,java.lang.reflect.Type); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean equals(java.lang.reflect.Type[],java.lang.reflect.Type[]); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean equals(java.lang.reflect.ParameterizedType,java.lang.reflect.Type); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String mid(java.lang.String,int,int); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String classToString(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.GenericArrayType genericArrayType(java.lang.reflect.Type); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type[] getImplicitBounds(java.lang.reflect.TypeVariable); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.Class getRawType(java.lang.reflect.ParameterizedType); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type[] getImplicitLowerBounds(java.lang.reflect.WildcardType); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String genericArrayTypeToString(java.lang.reflect.GenericArrayType); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type[] getImplicitUpperBounds(java.lang.reflect.WildcardType); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.util.Map getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.util.Map getTypeArguments(java.lang.reflect.Type,java.lang.Class,java.util.Map); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.util.Map getTypeArguments(java.lang.Class,java.lang.Class,java.util.Map); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type getClosestParentType(java.lang.Class,java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replace(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceChars(java.lang.String,char,char); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceEach(java.lang.String,java.lang.String[],java.lang.String[]); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { void onMeasure(int,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[]); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { boolean access$200(okhttp3.internal.framed.FramedStream$FramedDataSink); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { boolean access$202(okhttp3.internal.framed.FramedStream$FramedDataSink,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void <init>(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String right(java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String reverseDelimited(java.lang.String,char); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String reverse(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.GenericArrayType,java.util.Map); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { boolean access$400(okhttp3.internal.framed.FramedStream$FramedDataSink); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String rightPad(java.lang.String,int,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void emitDataFrame(boolean); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] split(java.lang.String,java.lang.String); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class okhttp3.FormBody { void <init>(java.util.List,java.util.List,okhttp3.FormBody$1); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String replacePattern(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String rightPad(java.lang.String,int,char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$5 { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] split(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void close(); }
-keepclassmembers class okhttp3.FormBody { void <clinit>(); }
-keepclassmembers class okhttp3.FormBody { okhttp3.MediaType contentType(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.TypeVariable,java.util.Map); }
-keepclassmembers class com.larswerkman.holocolorpicker.SVBar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class okhttp3.FormBody { long writeOrCountBytes(okio.BufferedSink,boolean); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] split(java.lang.String,char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$5 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class okhttp3.FormBody { long contentLength(); }
-keepclassmembers class okhttp3.FormBody { void <init>(java.util.List,java.util.List); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { okio.Timeout timeout(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map); }
-keepclassmembers class okhttp3.FormBody { void writeTo(okio.BufferedSink); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.WildcardType,java.util.Map); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3,android.widget.EditText); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void flush(); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] split(java.lang.String,java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] splitWorker(java.lang.String,java.lang.String,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String[] splitWorker(java.lang.String,char,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.reflect.Method getMethod(java.lang.Class); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$FramedDataSink { void write(okio.Buffer,long); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { void <init>(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment$CommentsLoader { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$2 { void <init>(au.com.wallaceit.reddinator.Reddinator,org.json.JSONObject,android.content.Context,au.com.wallaceit.reddinator.core.ThemeHelper$ThemeInstallInterface); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField { void <init>(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { boolean isSupported(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class okhttp3.internal.http.StatusLine { okhttp3.internal.http.StatusLine get(okhttp3.Response); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment$CommentsLoader { java.lang.String doInBackground(java.lang.Void[]); }
-keepclassmembers class okhttp3.internal.http.StatusLine { void <init>(okhttp3.Protocol,int,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField { int estimateLength(); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String parameterizedTypeToString(java.lang.reflect.ParameterizedType); }
-keepclassmembers class okhttp3.internal.platform.OptionalMethod { java.lang.Object invoke(java.lang.Object,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.http.StatusLine { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { void afterHandshake(javax.net.ssl.SSLSocket); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String typeVariableToString(java.lang.reflect.TypeVariable); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type substituteTypeVariables(java.lang.reflect.Type,java.util.Map); }
-keepclassmembers class okhttp3.internal.http.StatusLine { okhttp3.internal.http.StatusLine parse(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { okhttp3.internal.platform.Platform buildIfSupported(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type[] normalizeUpperBounds(java.lang.reflect.Type[]); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String toString(java.lang.reflect.Type); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { void <init>(android.content.Context,android.content.SharedPreferences,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.reflect.Type unrollVariableAssignments(java.lang.reflect.TypeVariable,java.util.Map); }
-keepclassmembers class okio.ByteString { void <init>(byte[]); }
-keepclassmembers class okhttp3.Dns$1 { void <init>(); }
-keepclassmembers class okio.ByteString { void <clinit>(); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { java.util.List getChangeLog(boolean); }
-keepclassmembers class okhttp3.Dns$1 { java.util.List lookup(java.lang.String); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { java.util.Comparator getChangeLogComparator(); }
-keepclassmembers class okio.ByteString { int codePointIndexToCharIndex(java.lang.String,int); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { void <init>(android.content.Context); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { java.lang.String wildcardTypeToString(java.lang.reflect.WildcardType); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder wildcardType(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { org.apache.commons.lang3.reflect.Typed wrap(java.lang.Class); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { boolean parseReleaseTag(org.xmlpull.v1.XmlPullParser,boolean,android.util.SparseArray); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray getLocalizedChangeLog(boolean); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray readChangeLog(org.xmlpull.v1.XmlPullParser,boolean); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils { org.apache.commons.lang3.reflect.Typed wrap(java.lang.reflect.Type); }
-keepclassmembers class okio.ByteString { okio.ByteString encodeUtf8(java.lang.String); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray readChangeLogFromResource(int,boolean); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { java.lang.String getLog(); }
-keepclassmembers class okio.ByteString { okio.ByteString of(byte[]); }
-keepclassmembers class okio.ByteString { okio.ByteString read(java.io.InputStream,int); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { android.util.SparseArray getMasterChangeLog(boolean); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog { java.lang.String getLog(boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Listener$1 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$WebInterface { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity,android.content.Context); }
-keepclassmembers class okio.ByteString { void readObject(java.io.ObjectInputStream); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String wrap(java.lang.String,java.lang.String); }
-keepclassmembers class okio.ByteString { java.lang.String base64(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Listener$1 { void onStream(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okio.ByteString { int compareTo(java.lang.Object); }
-keepclassmembers class okio.ByteString { void writeObject(java.io.ObjectOutputStream); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void <init>(android.content.Context,au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$ActivityInterface,au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.core.ThemeManager$Theme,int,org.json.JSONArray,boolean,boolean); }
-keepclassmembers class okio.ByteString { int compareTo(okio.ByteString); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String wrap(java.lang.String,char); }
-keepclassmembers class okio.ByteString { byte getByte(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$4 { void onClick(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.StringUtils { java.lang.String toString(byte[],java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { android.content.Context access$200(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter); }
-keepclassmembers class okio.ByteString { boolean equals(java.lang.Object); }
-keepclassmembers class okio.ByteString { int hashCode(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$ActivityInterface access$000(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter); }
-keepclassmembers class okio.ByteString { int size(); }
-keepclassmembers class okhttp3.internal.framed.Settings { void <init>(); }
-keepclassmembers class okio.ByteString { boolean rangeEquals(int,byte[],int,int); }
-keepclassmembers class okio.ByteString { java.lang.String hex(); }
-keepclassmembers class okhttp3.internal.framed.Settings { int flags(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void loadTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { android.os.Bundle getItemExtras(int); }
-keepclassmembers class okhttp3.internal.framed.Settings { void clear(); }
-keepclassmembers class okhttp3.internal.framed.Settings { int get(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { long getItemId(int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$6 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,okio.Buffer,int,boolean); }
-keepclassmembers class okio.ByteString { okio.ByteString substring(int,int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void <init>(android.content.Context,android.view.ViewGroup,android.view.animation.Interpolator,com.sothree.slidinguppanel.ViewDragHelper$Callback); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$6 { void execute(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { java.lang.Object getItem(int); }
-keepclassmembers class okhttp3.internal.framed.Settings { int getHeaderTableSize(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { boolean checkNewEdgeDrag(float,float,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { au.com.wallaceit.reddinator.Reddinator access$300(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter); }
-keepclassmembers class okhttp3.internal.framed.Settings { int getMaxFrameSize(int); }
-keepclassmembers class okhttp3.internal.framed.Settings { boolean isPersisted(int); }
-keepclassmembers class okio.ByteString { okio.ByteString toAsciiLowercase(); }
-keepclassmembers class okio.ByteString { byte[] toByteArray(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Settings { int getMaxConcurrentStreams(int); }
-keepclassmembers class okhttp3.internal.framed.Settings { boolean persistValue(int); }
-keepclassmembers class okhttp3.internal.framed.Settings { int getInitialWindowSize(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void loadImage(android.widget.ImageView,android.widget.ImageView,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Settings { okhttp3.internal.framed.Settings set(int,int,int); }
-keepclassmembers class okhttp3.internal.framed.Settings { void merge(okhttp3.internal.framed.Settings); }
-keepclassmembers class okhttp3.internal.framed.Settings { int size(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { org.json.JSONObject getItem(int); }
-keepclassmembers class okhttp3.internal.framed.Settings { boolean isSet(int); }
-keepclassmembers class okio.ByteString { java.lang.String toString(); }
-keepclassmembers class okio.ByteString { void write(okio.Buffer); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { boolean checkTouchSlop(android.view.View,float,float); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { float clampMag(float,float,float); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void clearMotionHistory(int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void clearMotionHistory(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { int clampMag(int,int,int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { int computeSettleDuration(android.view.View,int,int,int,int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { com.sothree.slidinguppanel.ViewDragHelper create(android.view.ViewGroup,float,android.view.animation.Interpolator,com.sothree.slidinguppanel.ViewDragHelper$Callback); }
-keepclassmembers class okio.ByteString { java.lang.String utf8(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { com.sothree.slidinguppanel.ViewDragHelper create(android.view.ViewGroup,android.view.animation.Interpolator,com.sothree.slidinguppanel.ViewDragHelper$Callback); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void dispatchViewReleased(float,float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$8 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { int computeAxisDuration(int,int,int); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory { void <init>(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder,org.apache.commons.lang3.concurrent.BasicThreadFactory$1); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory { java.lang.String getNamingPattern(); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory { java.lang.Boolean getDaemonFlag(); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory { void initializeThread(java.lang.Thread); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void dragTo(int,int,int,int); }
-keepclassmembers class okio.Buffer { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory { java.util.concurrent.ThreadFactory getWrappedFactory(); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory { java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler(); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory { void <init>(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$8 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class okio.Buffer { void <clinit>(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { float distanceInfluenceForSnapDuration(float); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { boolean forceSettleCapturedViewAt(int,int,int,int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void releaseViewForPointerUp(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void ensureMotionHistorySizeForId(int); }
-keepclassmembers class okio.Buffer { void close(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$3 { void <init>(okhttp3.internal.framed.FramedConnection$Reader,java.lang.String,java.lang.Object[],okhttp3.internal.framed.Settings); }
-keepclassmembers class org.apache.commons.lang3.concurrent.BasicThreadFactory { java.lang.Integer getPriority(); }
-keepclassmembers class okio.Buffer { void clear(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void abort(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void saveInitialMotion(float,float,int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void saveLastMotion(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { int getViewTypeCount(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { int getEdgesTouched(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { boolean hasStableIds(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void initialiseVote(int,int); }
-keepclassmembers class okio.Buffer { okio.Buffer copyTo(okio.Buffer,long,long); }
-keepclassmembers class okio.Buffer { byte getByte(long); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void cancel(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$3 { void execute(); }
-keepclassmembers class okio.Buffer { void flush(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void onVoteComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String,int,int,int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void reportNewEdgeDrags(float,float,int); }
-keepclassmembers class okio.Buffer { long completeSegmentByteCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void setFeed(org.json.JSONArray,boolean,boolean); }
-keepclassmembers class okio.Buffer { boolean exhausted(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void removePostAtPosition(int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void captureChildView(android.view.View,int); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { boolean access$000(okhttp3.ConnectionSpec$Builder); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { java.lang.String[] access$100(okhttp3.ConnectionSpec$Builder); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { void <init>(okhttp3.ConnectionSpec); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { void <init>(boolean); }
-keepclassmembers class okio.Buffer { long indexOf(byte,long); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { boolean continueSettling(boolean); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { java.lang.String[] access$200(okhttp3.ConnectionSpec$Builder); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void setTheme(au.com.wallaceit.reddinator.core.ThemeManager$Theme); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean); }
-keepclassmembers class okhttp3.internal.framed.Http2 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void loadFeedPrefs(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter { void updateUiVote(int,java.lang.String,java.lang.String,int); }
-keepclassmembers class okhttp3.internal.framed.Http2 { java.io.IOException access$200(java.lang.String,java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.framed.Http2 { int access$300(okio.BufferedSource); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { android.view.View findTopChildUnder(int,int); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { boolean access$300(okhttp3.ConnectionSpec$Builder); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec build(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { void <clinit>(); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]); }
-keepclassmembers class okhttp3.internal.framed.Http2 { java.lang.IllegalArgumentException access$500(java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.framed.Http2 { java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]); }
-keepclassmembers class okhttp3.internal.framed.Http2 { java.util.logging.Logger access$100(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { int readMedium(okio.BufferedSource); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { int getTouchSlop(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { int getViewDragState(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { void access$600(okio.BufferedSink,int); }
-keepclassmembers class okhttp3.internal.framed.Http2 { java.io.IOException ioException(java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.framed.Http2 { int lengthWithoutPadding(int,byte,short); }
-keepclassmembers class okhttp3.internal.framed.Http2 { okio.ByteString access$000(); }
-keepclassmembers class okhttp3.ConnectionSpec$Builder { okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]); }
-keepclassmembers class okhttp3.internal.framed.Http2 { int access$400(int,byte,short); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { boolean isCapturedViewUnder(int,int); }
-keepclassmembers class okhttp3.internal.framed.Http2 { okhttp3.internal.framed.FrameReader newReader(okio.BufferedSource,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { android.app.ProgressDialog access$400(au.com.wallaceit.reddinator.activity.OAuthView); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { android.content.res.Resources access$200(au.com.wallaceit.reddinator.activity.OAuthView); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { boolean isViewUnder(android.view.View,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.Http2 { okhttp3.internal.framed.FrameWriter newWriter(okio.BufferedSink,boolean); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { boolean isDragging(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void processTouchEvent(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { void onDestroy(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { au.com.wallaceit.reddinator.Reddinator access$500(au.com.wallaceit.reddinator.activity.OAuthView); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { boolean settleCapturedViewAt(int,int); }
-keepclassmembers class okhttp3.internal.framed.Http2 { void writeMedium(okio.BufferedSink,int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { boolean shouldInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { void onBackPressed(); }
-keepclassmembers class okio.Buffer { int read(byte[],int,int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void setDragState(int); }
-keepclassmembers class okio.Buffer { byte[] readByteArray(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class okio.Buffer { byte readByte(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { boolean smoothSlideViewTo(android.view.View,int,int); }
-keepclassmembers class okio.Buffer { long read(okio.Buffer,long); }
-keepclassmembers class okio.Buffer { byte[] readByteArray(long); }
-keepclassmembers class okio.Buffer { okio.ByteString readByteString(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void <init>(okhttp3.internal.framed.FramedConnection,okhttp3.internal.framed.FrameReader); }
-keepclassmembers class okio.Buffer { void readFully(byte[]); }
-keepclassmembers class okio.Buffer { okio.ByteString readByteString(long); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void <init>(okhttp3.internal.framed.FramedConnection,okhttp3.internal.framed.FrameReader,okhttp3.internal.framed.FramedConnection$1); }
-keepclassmembers class okio.Buffer { long readHexadecimalUnsignedLong(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void data(boolean,int,okio.BufferedSource,int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { boolean tryCaptureViewForDrag(android.view.View,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$ViewHolder); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper { void setMinVelocity(float); }
-keepclassmembers class okio.Buffer { int readIntLe(); }
-keepclassmembers class okio.Buffer { int readInt(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void ackSettings(); }
-keepclassmembers class okhttp3.CookieJar { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$2 { boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void goAway(int,okhttp3.internal.framed.ErrorCode,okio.ByteString); }
-keepclassmembers class okio.Buffer { java.lang.String readString(long,java.nio.charset.Charset); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void <init>(); }
-keepclassmembers class okio.Buffer { short readShort(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void execute(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void pushPromise(int,int,java.util.List); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void headers(boolean,boolean,int,int,java.util.List,okhttp3.internal.framed.HeadersMode); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void rstStream(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { boolean access$100(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { boolean access$102(au.com.wallaceit.reddinator.activity.SearchActivity,boolean); }
-keepclassmembers class okio.Buffer { short readShortLe(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.HidePostTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.HidePostTask { void <init>(android.content.Context,boolean,java.lang.Runnable); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void applyAndAckSettings(okhttp3.internal.framed.Settings); }
-keepclassmembers class okio.Buffer { java.lang.String readUtf8(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { boolean access$1000(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class okio.Buffer { java.lang.String readUtf8(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$1102(au.com.wallaceit.reddinator.activity.SearchActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { boolean access$1002(au.com.wallaceit.reddinator.activity.SearchActivity,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void ping(boolean,int,int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void settings(boolean,okhttp3.internal.framed.Settings); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.HidePostTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.HidePostTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { org.json.JSONArray access$1302(au.com.wallaceit.reddinator.activity.SearchActivity,org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void access$000(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void priority(int,int,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { au.com.wallaceit.reddinator.Reddinator access$1200(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$600(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$400(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { org.json.JSONArray access$1300(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$300(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { android.widget.CheckBox access$200(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$302(au.com.wallaceit.reddinator.activity.SearchActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$700(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$602(au.com.wallaceit.reddinator.activity.SearchActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { android.widget.AutoCompleteTextView access$500(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { int access$900(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void onSearchQueryEnter(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$702(au.com.wallaceit.reddinator.activity.SearchActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { au.com.wallaceit.reddinator.ui.SubredditFeedAdapter access$800(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { java.lang.String access$1100(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class okio.Buffer { java.lang.String readUtf8Line(long); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.HidePostTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void setThemeColors(); }
-keepclassmembers class okio.Buffer { long size(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void loadMore(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader { void windowUpdate(int,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void hideLoader(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$3 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$ViewHolder); }
-keepclassmembers class okio.Buffer { okio.Segment writableSegment(int); }
-keepclassmembers class okio.Buffer { okio.Buffer write(okio.ByteString); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void hideLoader(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class okio.Buffer { void skip(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$4 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckReceiver { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckReceiver { void setAlarm(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void onResume(); }
-keepclassmembers class okio.Buffer { okio.Buffer write(byte[],int,int); }
-keepclassmembers class okio.Buffer { okio.Timeout timeout(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckReceiver { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void search(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class okio.Buffer { long writeAll(okio.Source); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity { void showLoader(); }
-keepclassmembers class okio.Buffer { okio.Buffer writeByte(int); }
-keepclassmembers class okio.Buffer { void write(okio.Buffer,long); }
-keepclassmembers class okio.Buffer { okio.Buffer write(byte[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$FeedLoader { org.json.JSONArray filterThemes(org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class okhttp3.CacheControl { void <init>(okhttp3.CacheControl$Builder); }
-keepclassmembers class okhttp3.CacheControl { void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$FeedLoader { void <init>(au.com.wallaceit.reddinator.activity.MainActivity,java.lang.Boolean); }
-keepclassmembers class okio.Buffer { okio.Buffer writeHexadecimalUnsignedLong(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$FeedLoader { org.json.JSONArray doInBackground(java.lang.Void[]); }
-keepclassmembers class okhttp3.CacheControl { void <init>(okhttp3.CacheControl$Builder,okhttp3.CacheControl$1); }
-keepclassmembers class okio.Buffer { okio.Buffer writeInt(int); }
-keepclassmembers class okio.AsyncTimeout$2 { void <init>(okio.AsyncTimeout,okio.Source); }
-keepclassmembers class okhttp3.CacheControl { void <clinit>(); }
-keepclassmembers class okhttp3.CacheControl { okhttp3.CacheControl parse(okhttp3.Headers); }
-keepclassmembers class okio.AsyncTimeout$2 { void close(); }
-keepclassmembers class okio.AsyncTimeout$2 { long read(okio.Buffer,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$FeedLoader { void onPostExecute(org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$FeedLoader { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class okio.Buffer { okio.Buffer writeUtf8(java.lang.String,int,int); }
-keepclassmembers class okio.Buffer { okio.Buffer writeShort(int); }
-keepclassmembers class okhttp3.CacheControl { boolean isPublic(); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$7 { void execute(); }
-keepclassmembers class okhttp3.CacheControl { boolean isPrivate(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder allowReadOnlyDirectory(boolean); }
-keepclassmembers class okio.Buffer { okio.Buffer writeUtf8(java.lang.String); }
-keepclassmembers class okhttp3.CacheControl { int maxStaleSeconds(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { void <init>(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder allowNewDirectoryNameModification(boolean); }
-keepclassmembers class okio.AsyncTimeout$2 { okio.Timeout timeout(); }
-keepclassmembers class okhttp3.CacheControl { int minFreshSeconds(); }
-keepclassmembers class okhttp3.CacheControl { boolean onlyIfCached(); }
-keepclassmembers class okhttp3.CacheControl { int maxAgeSeconds(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$7 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$3 { void afterTextChanged(android.text.Editable); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { net.rdrei.android.dirchooser.DirectoryChooserConfig build(); }
-keepclassmembers class okio.Buffer { okio.Buffer writeUtf8CodePoint(int); }
-keepclassmembers class okhttp3.CookieJar$1 { void <init>(); }
-keepclassmembers class okhttp3.CookieJar$1 { java.util.List loadForRequest(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.CacheControl { boolean noCache(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$FeedLoader { void onPostExecute(java.lang.Object); }
-keepclassmembers class okhttp3.CookieJar$1 { void saveFromResponse(okhttp3.HttpUrl,java.util.List); }
-keepclassmembers class okhttp3.CacheControl { boolean noStore(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder newDirectoryName(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$3 { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$Builder { net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder initialDirectory(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$1 { void run(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$2 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity,android.widget.HorizontalScrollView); }
-keepclassmembers class okio.AsyncTimeout$1 { void <init>(okio.AsyncTimeout,okio.Sink); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class okio.AsyncTimeout$1 { void close(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$2 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$3 { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils$Interfaces { void <init>(java.lang.String,int); }
-keepclassmembers class okio.AsyncTimeout$1 { void flush(); }
-keepclassmembers class okio.AsyncTimeout$1 { void write(okio.Buffer,long); }
-keepclassmembers class okio.AsyncTimeout$1 { okio.Timeout timeout(); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils$Interfaces { void <clinit>(); }
-keepclassmembers class okhttp3.internal.Util { void checkOffsetAndCount(long,long,long); }
-keepclassmembers class okhttp3.internal.Util { void <clinit>(); }
-keepclassmembers class okhttp3.internal.Util { void closeAll(java.io.Closeable,java.io.Closeable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchFeedLoader { java.lang.Long doInBackground(java.lang.Void[]); }
-keepclassmembers class okhttp3.internal.Util { void closeQuietly(java.net.Socket); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils$Interfaces { org.apache.commons.lang3.ClassUtils$Interfaces[] values(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy { void <init>(int,java.util.Calendar,java.util.Locale); }
-keepclassmembers class okhttp3.internal.Util { void closeQuietly(java.io.Closeable); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String[] concat(java.lang.String[],java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchFeedLoader { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity,java.lang.Boolean); }
-keepclassmembers class okhttp3.internal.Util { int delimiterOffset(java.lang.String,int,int,char); }
-keepclassmembers class okhttp3.internal.Util { boolean containsInvalidHostnameAsciiCodes(java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String domainToAscii(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy { boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder); }
-keepclassmembers class okhttp3.internal.Util { int delimiterOffset(java.lang.String,int,int,java.lang.String); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$2 { void <init>(okhttp3.internal.cache.CacheInterceptor,okio.BufferedSource,okhttp3.internal.cache.CacheRequest,okio.BufferedSink); }
-keepclassmembers class okhttp3.internal.Util { boolean discard(okio.Source,int,java.util.concurrent.TimeUnit); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$2 { long read(okio.Buffer,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchFeedLoader { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchFeedLoader { void onPostExecute(java.lang.Long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$SearchFeedLoader { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String hostHeader(okhttp3.HttpUrl,boolean); }
-keepclassmembers class okhttp3.internal.Util { boolean equal(java.lang.Object,java.lang.Object); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String format(java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.Util { java.util.List intersect(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.Util { int indexOf(java.lang.Object[],java.lang.Object); }
-keepclassmembers class okhttp3.internal.Util { java.lang.Object[] intersect(java.lang.Class,java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.Util { java.util.List immutableList(java.util.List); }
-keepclassmembers class okhttp3.internal.Util { boolean isAndroidGetsocknameError(java.lang.AssertionError); }
-keepclassmembers class okhttp3.internal.Util { java.util.List immutableList(java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean invalidatesCache(java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { okio.ByteString sha256(okio.ByteString); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$2 { void close(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$2 { okio.Timeout timeout(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$2 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean redirectsToGet(java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserConfig$Builder { void <init>(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$2 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class okhttp3.internal.Util { java.lang.String trimSubstring(java.lang.String,int,int); }
-keepclassmembers class okhttp3.internal.Util { boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit); }
-keepclassmembers class okhttp3.internal.Util { boolean verifyAsIpAddress(java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { okio.ByteString sha1(okio.ByteString); }
-keepclassmembers class okhttp3.internal.Util { int skipTrailingAsciiWhitespace(java.lang.String,int,int); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean permitsRequestBody(java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean); }
-keepclassmembers class okhttp3.internal.http.HttpMethod { boolean requiresRequestBody(java.lang.String); }
-keepclassmembers class okhttp3.internal.Util { int skipLeadingAsciiWhitespace(java.lang.String,int,int); }
-keepclassmembers class okio.AsyncTimeout { long remainingNanos(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$6 { void onClick(android.content.DialogInterface,int,boolean); }
-keepclassmembers class okio.AsyncTimeout { void <init>(); }
-keepclassmembers class okio.AsyncTimeout { boolean cancelScheduledTimeout(okio.AsyncTimeout); }
-keepclassmembers class okio.AsyncTimeout { okio.AsyncTimeout awaitTimeout(); }
-keepclassmembers class okio.AsyncTimeout { void scheduleTimeout(okio.AsyncTimeout,long,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$6 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class okio.AsyncTimeout { void enter(); }
-keepclassmembers class okio.AsyncTimeout { java.io.IOException exit(java.io.IOException); }
-keepclassmembers class okio.AsyncTimeout { boolean exit(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.ViewImageDialogActivity); }
-keepclassmembers class okio.AsyncTimeout { okio.Sink sink(okio.Sink); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity$1 { void onClick(android.view.View); }
-keepclassmembers class okio.AsyncTimeout { void exit(boolean); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeEscaper { void <init>(int,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeEscaper { org.apache.commons.lang3.text.translate.UnicodeEscaper between(int,int); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeEscaper { java.lang.String toUtf16Escape(int); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeEscaper { void <init>(); }
-keepclassmembers class okio.AsyncTimeout { okio.Source source(okio.Source); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeEscaper { boolean translate(int,java.io.Writer); }
-keepclassmembers class org.apache.commons.lang3.CharSequenceUtils { int indexOf(java.lang.CharSequence,java.lang.CharSequence,int); }
-keepclassmembers class org.apache.commons.lang3.CharSequenceUtils { int lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int); }
-keepclassmembers class org.apache.commons.lang3.CharSequenceUtils { boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int); }
-keepclassmembers class org.apache.commons.lang3.CharSequenceUtils { java.lang.CharSequence subSequence(java.lang.CharSequence,int); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { void <init>(java.lang.String,int,int,int,int); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { okhttp3.internal.framed.ErrorCode fromSpdy3Rst(int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { okhttp3.internal.framed.ErrorCode fromHttp2(int); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { okhttp3.internal.framed.ErrorCode fromSpdyGoAway(int); }
-keepclassmembers class okhttp3.internal.framed.ErrorCode { okhttp3.internal.framed.ErrorCode[] values(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.HtmlDialog$NoNavClient { void <init>(au.com.wallaceit.reddinator.ui.HtmlDialog); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void <init>(okio.BufferedSource,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$8 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment,android.preference.Preference); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.HtmlDialog$NoNavClient { void <init>(au.com.wallaceit.reddinator.ui.HtmlDialog,au.com.wallaceit.reddinator.ui.HtmlDialog$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$8 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { java.util.List readHeaderBlock(int,short,byte,int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserActivity { void <init>(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserActivity { void onSelectDirectory(java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserActivity { void onCancelChooser(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readData(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readGoAway(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readHeaders(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserActivity { void setupActionBar(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readRstStream(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readPing(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readPriority(okhttp3.internal.framed.FrameReader$Handler,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readPushPromise(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void close(); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readSettings(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$ShortPrefixToStringStyle { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$7 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readWindowUpdate(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readPriority(okhttp3.internal.framed.FrameReader$Handler,int,byte,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { boolean nextFrame(okhttp3.internal.framed.FrameReader$Handler); }
-keepclassmembers class okhttp3.internal.framed.Http2$Reader { void readConnectionPreface(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { java.lang.String getItemKey(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$7 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.CipherSuite { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { long getItemId(int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3 { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3 { okhttp3.internal.framed.FrameReader newReader(okio.BufferedSource,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$4 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,java.util.List); }
-keepclassmembers class okhttp3.internal.framed.Spdy3 { okhttp3.internal.framed.FrameWriter newWriter(okio.BufferedSink,boolean); }
-keepclassmembers class okhttp3.internal.framed.Spdy3 { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$4 { void execute(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter { java.lang.Object getItem(int); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { int compare(long,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$1 { void <init>(au.com.wallaceit.reddinator.activity.OAuthView); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { int compare(byte,byte); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { int compare(short,short); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { int compare(int,int); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { java.math.BigInteger createBigInteger(java.lang.String); }
-keepclassmembers class okhttp3.CipherSuite { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.CipherSuite { okhttp3.CipherSuite forJavaName(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { void <clinit>(); }
-keepclassmembers class okhttp3.CipherSuite { okhttp3.CipherSuite of(java.lang.String,int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$4 { void onClick(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$6 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment,android.widget.EditText); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$6 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField { int estimateLength(); }
-keepclassmembers class okhttp3.CipherSuite { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { java.lang.Integer createInteger(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { float max(float,float,float); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { double max(double,double,double); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { float max(float[]); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { byte max(byte,byte,byte); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { double max(double[]); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { long max(long,long,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$7 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$FeedLoader { void <init>(au.com.wallaceit.reddinator.ui.AccountFeedFragment,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { short max(short,short,short); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { byte max(byte[]); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { long max(long[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SubmitTextTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { short max(short[]); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { int max(int[]); }
-keepclassmembers class org.apache.commons.lang3.EnumUtils { java.lang.Class asEnum(java.lang.Class); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SubmitTextTask { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$7 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$FeedLoader { void <init>(au.com.wallaceit.reddinator.ui.AccountFeedFragment,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { byte min(byte,byte,byte); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { double min(double,double,double); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { int max(int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SubmitTextTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SubmitTextTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { double min(double[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$FeedLoader { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { float min(float,float,float); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { int min(int,int,int); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { byte min(byte[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SubmitTextTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { float min(float[]); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { int min(int[]); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { long min(long[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$FeedLoader { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void <init>(android.content.Context); }
-keepclassmembers class org.apache.commons.lang3.EnumUtils { java.lang.Class checkBitVectorable(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.EnumUtils { java.util.EnumSet processBitVectors(java.lang.Class,long[]); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { short min(short,short,short); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$FeedLoader { void onPostExecute(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void checkLogin(); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { long min(long,long,long); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String access$000(au.com.wallaceit.reddinator.core.RedditData); }
-keepclassmembers class org.apache.commons.lang3.EnumUtils { java.util.EnumSet processBitVector(java.lang.Class,long); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { void validateArray(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$CommentViewClient { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity,au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$1); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void checkAppToken(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getErrorJson(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$CommentViewClient { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class org.apache.commons.lang3.math.NumberUtils { short min(short[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String getJsonErrorText(org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String getHtmlErrorText(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String getDeviceId(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String getTokenValue(java.lang.String,boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy { void <init>(java.util.Locale); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void createHttpClient(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getUserInfo(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy { boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$FeedLoader { java.lang.String doInBackground(java.lang.Void[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { android.content.Intent getLoginIntent(android.content.Context,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { boolean isTokenExpired(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { boolean isAuthenticationError(org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject redditApiGet(java.lang.String,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$20 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray redditApiGetArray(java.lang.String,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject redditApiOauthRequest(java.lang.String,java.util.HashMap); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void redditApiDelete(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject redditApiPut(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.CharUtils { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$16 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String,android.widget.EditText); }
-keepclassmembers class org.apache.commons.lang3.CharUtils { int compare(char,char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$16 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String redditApiRequest(java.lang.String,java.lang.String,int,java.util.HashMap); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject redditApiPost(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$20 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity); }
-keepclassmembers class org.apache.commons.lang3.CharUtils { java.lang.String toString(java.lang.Character); }
-keepclassmembers class org.apache.commons.lang3.CharUtils { boolean isAsciiPrintable(char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity,au.com.wallaceit.reddinator.activity.ThemeEditorActivity$1); }
-keepclassmembers class org.apache.commons.lang3.text.translate.OctalUnescaper { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.OctalUnescaper { boolean isZeroToThree(char); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void refreshToken(); }
-keepclassmembers class org.apache.commons.lang3.CharUtils { java.lang.String toString(char); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void retrieveAppToken(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void saveAppToken(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.OctalUnescaper { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void throwOAuthError(org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void saveUserData(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject addMultiSubreddit(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.Cookie { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject addFilterSubreddit(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.Cookie { void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class org.apache.commons.lang3.text.translate.OctalUnescaper { boolean isOctalDigit(char); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void composeMessage(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject createMulti(java.lang.String,org.json.JSONObject); }
-keepclassmembers class okhttp3.Cookie { void <init>(okhttp3.Cookie$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject copyMulti(java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void clearStoredInboxCount(); }
-keepclassmembers class okhttp3.Cookie { void <init>(okhttp3.Cookie$Builder,okhttp3.Cookie$1); }
-keepclassmembers class okhttp3.Cookie { boolean domainMatch(okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class okhttp3.Cookie { okhttp3.Cookie parse(long,okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule { org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule getRule(int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$4 { void <init>(int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class okhttp3.Cookie { int dateCharacterOffset(java.lang.String,int,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache$MultipartKey { void <init>(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void deleteMulti(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule { void <init>(int); }
-keepclassmembers class okhttp3.Cookie { java.lang.String parseDomain(java.lang.String); }
-keepclassmembers class okhttp3.Cookie { java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache$MultipartKey { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.internal.http.RequestLine { java.lang.String get(okhttp3.Request,java.net.Proxy$Type); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule { int estimateLength(); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache$MultipartKey { int hashCode(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$3 { void <init>(java.lang.Runnable); }
-keepclassmembers class okhttp3.internal.http.RequestLine { java.lang.String requestPath(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.Cookie { long parseExpires(java.lang.String,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$SubredditsAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.Cookie { okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getAccountFeed(java.lang.String,java.lang.String,int,java.lang.String); }
-keepclassmembers class okhttp3.internal.http.RequestLine { boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getCommentsContextFeed(java.lang.String,java.lang.String,java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getDefaultSubreddits(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject editMulti(java.lang.String,org.json.JSONObject); }
-keepclassmembers class okhttp3.Cookie { long parseMaxAge(java.lang.String); }
-keepclassmembers class okhttp3.Cookie { int hashCode(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getKarmaBreakdown(); }
-keepclassmembers class okhttp3.Cookie { boolean equals(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getCommentsFeed(java.lang.String,java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { long getCommentKarma(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { int getInboxCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { long getLastUserUpdateTime(); }
-keepclassmembers class okhttp3.Cookie { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { long getLinkKarma(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getFilter(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getMyMultis(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getMySubreddits(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getMessageFeed(java.lang.String,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$OverrideClient { void <init>(au.com.wallaceit.reddinator.activity.OAuthView,au.com.wallaceit.reddinator.activity.OAuthView$1); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getChildComments(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getRedditFeed(java.lang.String,java.lang.String,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getSubmitText(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getTrophies(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$OverrideClient { void <init>(au.com.wallaceit.reddinator.activity.OAuthView); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { java.lang.String getUsername(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray getPopularSubreddits(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void initiateLogin(android.content.Context,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getSubredditInfo(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void initiateLoginForResult(android.app.Activity,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject getRandomSubreddit(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { boolean isLoggedIn(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void purgeAccountData(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$ViewHolder); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray searchRedditPosts(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void markMessagesRead(java.util.ArrayList); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void removeFilterSubreddit(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.internal.http.HttpDate { java.lang.String format(java.util.Date); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONArray searchSubreddits(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject submit(java.lang.String,boolean,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject renameMulti(java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void removeMultiSubreddit(java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity,au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$ItemOptionsAdapter); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { org.json.JSONObject subscribe(java.lang.String,boolean); }
-keepclassmembers class okhttp3.internal.http.HttpDate { java.util.Date parse(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class okhttp3.internal.http.HttpDate { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { void updateUserInfo(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$1 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData { boolean vote(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubmitTask { void <init>(au.com.wallaceit.reddinator.Reddinator,java.lang.String,java.lang.String,java.lang.String,boolean,au.com.wallaceit.reddinator.tasks.SubmitTask$Callback); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy { boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubmitTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubmitTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubmitTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SubmitTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy { org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int); }
-keepclassmembers class okhttp3.internal.Util$1 { void <init>(java.lang.String,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$3$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.Util$1 { java.lang.Thread newThread(java.lang.Runnable); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$1 { void <init>(okhttp3.internal.framed.FramedConnection$Reader,java.lang.String,java.lang.Object[],okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$1 { void execute(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$5 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$5 { void onCheckedChanged(android.widget.CompoundButton,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadRandomTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.LoadRandomTask$Callback); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadRandomTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadRandomTask { void onPostExecute(org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$3 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$1 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadRandomTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$1 { void execute(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$11 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadRandomTask { org.json.JSONObject doInBackground(java.lang.String[]); }
-keepclassmembers class org.apache.commons.lang3.text.FormattableUtils { java.lang.String toString(java.util.Formattable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$11 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat$1 { java.text.Format createInstance(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField { int estimateLength(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat$1 { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField { void <init>(org.apache.commons.lang3.time.FastDatePrinter$NumberRule); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat$1 { org.apache.commons.lang3.time.FastDateFormat createInstance(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask$ImageCallback { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$1 { void <init>(au.com.wallaceit.reddinator.Reddinator,org.json.JSONObject,android.content.Context,au.com.wallaceit.reddinator.core.ThemeHelper$ThemeInstallInterface); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$10 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$10 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$3 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class okhttp3.internal.framed.Hpack { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.Hpack { okhttp3.internal.framed.Header[] access$000(); }
-keepclassmembers class okhttp3.internal.framed.Hpack { okio.ByteString access$100(okio.ByteString); }
-keepclassmembers class org.apache.commons.lang3.Validate { void exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable); }
-keepclassmembers class okhttp3.internal.framed.Hpack { java.util.Map nameToFirstIndex(); }
-keepclassmembers class org.apache.commons.lang3.Validate { void exclusiveBetween(long,long,long,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.Validate { void exclusiveBetween(double,double,double,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Hpack { okio.ByteString checkLowercase(okio.ByteString); }
-keepclassmembers class org.apache.commons.lang3.Validate { void exclusiveBetween(long,long,long); }
-keepclassmembers class org.apache.commons.lang3.Validate { void exclusiveBetween(java.lang.Object,java.lang.Object,java.lang.Comparable,java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.framed.Hpack { java.util.Map access$200(); }
-keepclassmembers class okhttp3.RequestBody$2 { long contentLength(); }
-keepclassmembers class org.apache.commons.lang3.Validate { void isTrue(boolean,java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.RequestBody$2 { void writeTo(okio.BufferedSink); }
-keepclassmembers class org.apache.commons.lang3.Validate { void exclusiveBetween(double,double,double); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object[] noNullElements(java.lang.Object[],java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.sothree.slidinguppanel.ScrollableViewHelper { void <init>(); }
-keepclassmembers class okhttp3.RequestBody$2 { okhttp3.MediaType contentType(); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object[] noNullElements(java.lang.Object[]); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.RequestBody$2 { void <init>(okhttp3.MediaType,int,byte[],int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void <init>(android.content.Context,android.widget.LinearLayout); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void <init>(android.content.Context,android.widget.LinearLayout,android.widget.HorizontalScrollView); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.ComposeMessageActivity); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object[] notEmpty(java.lang.Object[]); }
-keepclassmembers class com.sothree.slidinguppanel.ScrollableViewHelper { int getScrollableViewScrollPosition(android.view.View,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$1 { void afterTextChanged(android.text.Editable); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { android.support.v4.view.ViewPager access$000(au.com.wallaceit.reddinator.ui.SimpleTabsWidget); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$1 { void onTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ComposeMessageActivity$1 { void beforeTextChanged(java.lang.CharSequence,int,int,int); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object[] notEmpty(java.lang.Object[],java.lang.String,java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void insertTab(int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void initTabs(); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object notNull(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.Validate { java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void setBackgroundColor(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$4 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$4 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { java.lang.String access$2200(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void setInidicatorColor(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void access$2300(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void setViewPager(android.support.v4.view.ViewPager); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void access$2100(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void setTextColor(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void performAdd(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,android.content.Context,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget { void setTab(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void performRemove(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { java.lang.Object getItem(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { long getItemId(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { void refreshList(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { int getViewTypeCount(); }
-keepclassmembers class okhttp3.internal.framed.Header { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { android.view.View getView(int,android.view.View,android.view.ViewGroup); }
-keepclassmembers class okhttp3.internal.framed.Header { void <init>(okio.ByteString,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { int getItemViewType(int); }
-keepclassmembers class okhttp3.internal.framed.Header { int hashCode(); }
-keepclassmembers class okhttp3.internal.framed.Header { void <init>(okio.ByteString,okio.ByteString); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter { java.lang.String getItem(int); }
-keepclassmembers class okhttp3.internal.framed.Header { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.internal.platform.Platform { byte[] concatLengthPrefixed(java.util.List); }
-keepclassmembers class okhttp3.internal.platform.Platform { java.util.List alpnProtocolNames(java.util.List); }
-keepclassmembers class okhttp3.internal.framed.Header { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.CharSetUtils { int count(java.lang.String,java.lang.String[]); }
-keepclassmembers class okhttp3.internal.framed.Header { void <init>(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.CharSetUtils { java.lang.String delete(java.lang.String,java.lang.String[]); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.platform.Platform { okhttp3.internal.platform.Platform findPlatform(); }
-keepclassmembers class okhttp3.internal.platform.Platform { void <clinit>(); }
-keepclassmembers class okhttp3.internal.platform.Platform { void afterHandshake(javax.net.ssl.SSLSocket); }
-keepclassmembers class okhttp3.internal.platform.Platform { okhttp3.internal.platform.Platform get(); }
-keepclassmembers class org.apache.commons.lang3.CharSetUtils { java.lang.String modify(java.lang.String,java.lang.String[],boolean); }
-keepclassmembers class okhttp3.internal.platform.Platform { void <init>(); }
-keepclassmembers class okhttp3.internal.platform.Platform { okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager); }
-keepclassmembers class okhttp3.internal.platform.Platform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class okhttp3.internal.platform.Platform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class org.apache.commons.lang3.CharSetUtils { boolean deepEmpty(java.lang.String[]); }
-keepclassmembers class okhttp3.internal.platform.Platform { void connectSocket(java.net.Socket,java.net.InetSocketAddress,int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper$2 { void <init>(com.sothree.slidinguppanel.ViewDragHelper); }
-keepclassmembers class okhttp3.internal.platform.Platform { boolean isCleartextTrafficPermitted(java.lang.String); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper$2 { void run(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField { int estimateLength(); }
-keepclassmembers class okhttp3.internal.platform.Platform { void log(int,java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField { void <init>(org.apache.commons.lang3.time.FastDatePrinter$NumberRule); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$2 { void <init>(okhttp3.internal.framed.FramedConnection$Reader,java.lang.String,java.lang.Object[]); }
-keepclassmembers class com.gu.option.Option$Some { void foreach(com.gu.option.UnitFunction); }
-keepclassmembers class com.gu.option.Option$Some { void <init>(java.lang.Object); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Reader$2 { void execute(); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { void <init>(); }
-keepclassmembers class com.gu.option.Option$Some { java.lang.Object get(); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient build(); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class com.gu.option.Option$Some { java.util.List toList(); }
-keepclassmembers class com.gu.option.Option$Some { java.lang.String toString(); }
-keepclassmembers class okhttp3.OkHttpClient$Builder { okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory { void hideWidgetLoader(boolean,boolean,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory { android.content.Context access$000(au.com.wallaceit.reddinator.service.ListRemoteViewsFactory); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { int getWidgetLayoutId(java.lang.Class); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory { void <init>(android.content.Context,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.service.ListRemoteViewsFactory { void loadReddits(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { java.lang.Class getWidgetProviderClass(android.content.Context,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$4 { boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void hideLoaderAndRefreshViews(android.content.Context,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { int[] getAllAppWidgetIds(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void setUpdateSchedule(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void showLoaderAndUpdate(android.content.Context,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void showLoaderAndRefreshViews(android.content.Context,int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void updateAllWidgets(android.content.Context); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$5 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,java.util.List,boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$5 { void execute(); }
-keepclassmembers class okio.SegmentPool { void recycle(okio.Segment); }
-keepclassmembers class okio.SegmentPool { okio.Segment take(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$7 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$7 { void onItemSelected(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$7 { void onNothingSelected(android.widget.AdapterView); }
-keepclassmembers class okio.Timeout { okio.Timeout clearTimeout(); }
-keepclassmembers class okio.Timeout { void <clinit>(); }
-keepclassmembers class okio.Timeout { void <init>(); }
-keepclassmembers class okio.Timeout { long deadlineNanoTime(); }
-keepclassmembers class okio.Timeout { okio.Timeout clearDeadline(); }
-keepclassmembers class okio.Timeout { okio.Timeout deadlineNanoTime(long); }
-keepclassmembers class okio.Timeout { boolean hasDeadline(); }
-keepclassmembers class okio.Timeout { okio.Timeout timeout(long,java.util.concurrent.TimeUnit); }
-keepclassmembers class okio.Timeout { void throwIfReached(); }
-keepclassmembers class okio.Timeout { long timeoutNanos(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SafeLinkMethod { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SafeLinkMethod { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity,au.com.wallaceit.reddinator.activity.SubmitActivity$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$SafeLinkMethod { boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView$1 { void <init>(au.com.wallaceit.reddinator.ui.RWebView,android.webkit.WebView$HitTestResult); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView$1 { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { void <clinit>(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { void <init>(okhttp3.internal.cache.InternalCache); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Response cacheWritingResponse(okhttp3.internal.cache.CacheRequest,okhttp3.Response); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { void <init>(javax.security.auth.x500.X500Principal); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String escapedAV(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { boolean isEndToEnd(java.lang.String); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.internal.cache.CacheRequest maybeCache(okhttp3.Response,okhttp3.Request,okhttp3.internal.cache.InternalCache); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { boolean validate(okhttp3.Response,okhttp3.Response); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Response stripBody(okhttp3.Response); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$WebInterface { void <init>(au.com.wallaceit.reddinator.ui.AccountFeedFragment,android.content.Context); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner { void <init>(java.lang.Object,java.lang.reflect.Method); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { int getByte(int); }
-keepclassmembers class org.apache.commons.lang3.Range$ComparableComparator { void <clinit>(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner { java.util.List clean(java.util.List,java.lang.String); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { char getEscaped(); }
-keepclassmembers class org.apache.commons.lang3.Range$ComparableComparator { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.Range$ComparableComparator { org.apache.commons.lang3.Range$ComparableComparator[] values(); }
-keepclassmembers class org.apache.commons.lang3.Range$ComparableComparator { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { char getUTF8(); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String hexAV(); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String nextAT(); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String quotedAV(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void access$000(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity,int); }
-keepclassmembers class okhttp3.internal.tls.DistinguishedNameParser { java.lang.String findMostSpecific(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { int access$200(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { au.com.wallaceit.reddinator.Reddinator access$100(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { android.app.Dialog access$300(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void access$400(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity,int,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void close(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void close(int,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void onSubscriptionEditComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,int,java.lang.Object[],org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity { void onThemeResult(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.widget.AutoCompleteTextView access$000(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.app.ProgressDialog access$1002(au.com.wallaceit.reddinator.activity.SubmitActivity,android.app.ProgressDialog); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.widget.TextView access$1100(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.widget.EditText access$200(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.content.res.Resources access$300(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.widget.TextView access$400(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetCommon { void refreshAllWidgetViews(au.com.wallaceit.reddinator.Reddinator); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { boolean access$600(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.support.v4.view.ViewPager access$700(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { au.com.wallaceit.reddinator.Reddinator access$500(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.widget.EditText access$900(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { android.widget.EditText access$800(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { boolean validateInput(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { void onSubmitted(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$2 { boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { void <init>(java.lang.String[],int[],android.content.Context,android.view.View); }
-keepclassmembers class okhttp3.Handshake { void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class okhttp3.Handshake { okhttp3.Handshake get(javax.net.ssl.SSLSession); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { boolean isViewFromObject(android.view.View,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { java.lang.CharSequence getPageTitle(int); }
-keepclassmembers class okhttp3.Handshake { okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { long contentLength(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsAdapter { int getCount(); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { void <init>(okhttp3.Headers,okio.BufferedSource); }
-keepclassmembers class okhttp3.Handshake { java.util.List peerCertificates(); }
-keepclassmembers class okhttp3.Handshake { int hashCode(); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { okio.BufferedSource source(); }
-keepclassmembers class okhttp3.Handshake { okhttp3.CipherSuite cipherSuite(); }
-keepclassmembers class okhttp3.internal.http.RealResponseBody { okhttp3.MediaType contentType(); }
-keepclassmembers class okhttp3.Handshake { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.ConnectionPool { void <clinit>(); }
-keepclassmembers class okhttp3.ConnectionPool { void <init>(); }
-keepclassmembers class okhttp3.ConnectionPool { boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class okhttp3.ConnectionPool { long cleanup(long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsActivity { boolean onKeyDown(int,android.view.KeyEvent); }
-keepclassmembers class okhttp3.ConnectionPool { int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class okhttp3.ConnectionPool { void <init>(int,long,java.util.concurrent.TimeUnit); }
-keepclassmembers class okhttp3.ConnectionPool { okhttp3.internal.connection.RealConnection get(okhttp3.Address,okhttp3.internal.connection.StreamAllocation); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsActivity { void onBackPressed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class okhttp3.ConnectionPool { void put(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$9 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { java.lang.String getHostString(java.net.InetSocketAddress); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNextInetSocketAddress(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.WebViewActivity); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void resetNextInetSocketAddress(java.net.Proxy); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNextProxy(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNextPostponed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$9 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { java.net.InetSocketAddress nextInetSocketAddress(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { java.net.Proxy nextProxy(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { boolean hasNext(); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { okhttp3.Route nextPostponed(); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex { void <init>(java.security.cert.X509Certificate[]); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { okhttp3.Route next(); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex { java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate); }
-keepclassmembers class okhttp3.internal.connection.RouteSelector { void connectFailed(okhttp3.Route,java.io.IOException); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$5 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$5 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$2 { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { java.lang.String access$100(au.com.wallaceit.reddinator.ui.AccountFeedFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void executeJavascript(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { android.content.res.Resources access$600(au.com.wallaceit.reddinator.ui.AccountFeedFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { boolean access$900(au.com.wallaceit.reddinator.ui.AccountFeedFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { au.com.wallaceit.reddinator.Reddinator access$000(au.com.wallaceit.reddinator.ui.AccountFeedFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { au.com.wallaceit.reddinator.ui.AccountFeedFragment init(java.lang.String,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void loadComments(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void load(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onCommentComplete(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment$1 { void <init>(au.com.wallaceit.reddinator.ui.AccountFeedFragment,java.lang.String,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void access$1000(au.com.wallaceit.reddinator.ui.AccountFeedFragment,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.reflect.MemberUtils { int compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[]); }
-keepclassmembers class org.apache.commons.lang3.reflect.MemberUtils { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onDestroy(); }
-keepclassmembers class org.apache.commons.lang3.reflect.MemberUtils { float getObjectTransformationCost(java.lang.Class,java.lang.Class); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onMessageSent(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String[]); }
-keepclassmembers class org.apache.commons.lang3.reflect.MemberUtils { float getPrimitivePromotionCost(java.lang.Class,java.lang.Class); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onVoteComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String,int,int,int); }
-keepclassmembers class org.apache.commons.lang3.reflect.MemberUtils { float getTotalTransformationCost(java.lang.Class[],java.lang.Class[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onPause(); }
-keepclassmembers class org.apache.commons.lang3.reflect.MemberUtils { boolean isAccessible(java.lang.reflect.Member); }
-keepclassmembers class org.apache.commons.lang3.reflect.MemberUtils { boolean setAccessibleWorkaround(java.lang.reflect.AccessibleObject); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$StreamTimeout { void timedOut(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void reload(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$NumberStrategy { boolean isNumber(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$NumberStrategy { void <init>(int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$NumberStrategy { boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$StreamTimeout { void <init>(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment$1 { void <init>(au.com.wallaceit.reddinator.ui.TabCommentsFragment,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$StreamTimeout { void exitAndThrowIfTimedOut(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$9 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment,java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.reflect.MemberUtils { boolean isPackageAccess(int); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentRuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentRuntimeException { void <init>(java.lang.Throwable); }
-keepclassmembers class okhttp3.MediaType { void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentRuntimeException { void <init>(); }
-keepclassmembers class okhttp3.MediaType { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.StackWidgetProvider { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.StackWidgetProvider { void updateAppWidgets(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.AccountFeedFragment { void updateTheme(); }
-keepclassmembers class okhttp3.MediaType { java.lang.String toString(); }
-keepclassmembers class okhttp3.MediaType { okhttp3.MediaType parse(java.lang.String); }
-keepclassmembers class okio.InflaterSource { void <init>(okio.BufferedSource,java.util.zip.Inflater); }
-keepclassmembers class okhttp3.MediaType { java.nio.charset.Charset charset(java.nio.charset.Charset); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$2 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],int,long); }
-keepclassmembers class okio.InflaterSource { void releaseInflatedBytes(); }
-keepclassmembers class okio.InflaterSource { void close(); }
-keepclassmembers class okio.InflaterSource { long read(okio.Buffer,long); }
-keepclassmembers class okhttp3.MediaType { java.nio.charset.Charset charset(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$2 { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$2 { void execute(); }
-keepclassmembers class okio.InflaterSource { void <init>(okio.Source,java.util.zip.Inflater); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { void <init>(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class au.com.wallaceit.reddinator.service.StackWidgetProvider { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { void appendDigits(java.lang.StringBuffer,int); }
-keepclassmembers class okio.InflaterSource { boolean refill(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.StackWidgetProvider { void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { void access$000(java.lang.StringBuffer,int); }
-keepclassmembers class okhttp3.internal.framed.FramedStream$StreamTimeout { java.io.IOException newTimeoutException(java.io.IOException); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.String applyRulesToString(java.util.Calendar); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okio.InflaterSource { okio.Timeout timeout(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { void init(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.StringBuffer applyRules(java.util.Calendar,java.lang.StringBuffer); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.util.GregorianCalendar newCalendar(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.HtmlDialog { void <init>(android.app.Activity,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.String format(java.util.Date); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.HtmlDialog { au.com.wallaceit.reddinator.ui.HtmlDialog init(android.app.Activity,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$SubredditsAdapter { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,android.content.Context); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.StringBuffer format(java.util.Calendar,java.lang.StringBuffer); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$Strategy { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.String format(java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.util.List parsePattern(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$Strategy { boolean isNumber(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { void loadValues(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { void <init>(au.com.wallaceit.reddinator.core.ThemeManager,org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { org.json.JSONObject cloneJsonValues(); }
-keepclassmembers class okhttp3.TlsVersion { void <clinit>(); }
-keepclassmembers class okhttp3.TlsVersion { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { org.json.JSONObject getTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { java.util.HashMap getIntColors(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { java.lang.String parseToken(java.lang.String,int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { java.util.HashMap getValues(); }
-keepclassmembers class okhttp3.TlsVersion { okhttp3.TlsVersion[] values(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { java.lang.String getValuesString(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { java.lang.String getValue(java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$1 { java.lang.Object createFromParcel(android.os.Parcel); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$1 { void <init>(); }
-keepclassmembers class okhttp3.TlsVersion { okhttp3.TlsVersion forJavaName(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter { org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager$Theme { void setName(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onDeleted(android.content.Context,int[]); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$1 { net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig createFromParcel(android.os.Parcel); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onDisabled(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onEnabled(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$Strategy { void <init>(org.apache.commons.lang3.time.FastDateParser$1); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetProviderBase { void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$1 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$1 { void onClick(android.view.View); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify { java.lang.CharSequence compute(java.lang.Enum,java.lang.CharSequence); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify { void addIcons(java.lang.Enum,android.widget.TextView[]); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify { java.lang.CharSequence compute(java.lang.CharSequence); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify { void <clinit>(); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify { void addIcons(android.widget.TextView[]); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify { android.graphics.Typeface getTypeface(android.content.Context); }
-keepclassmembers class com.joanzapata.android.iconify.Iconify { android.graphics.Typeface getTypeface(android.content.Context,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { java.lang.String access$1100(au.com.wallaceit.reddinator.ui.TabCommentsFragment); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$NoClassNameToStringStyle { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { au.com.wallaceit.reddinator.ui.TabCommentsFragment init(java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void populateCommentsFromData(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { java.lang.String access$1200(au.com.wallaceit.reddinator.ui.TabCommentsFragment); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$11 { void apply(net.rdrei.android.dirchooser.DirectoryChooserFragment$OnFragmentInteractionListener); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$11 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { org.json.JSONObject access$1302(au.com.wallaceit.reddinator.ui.TabCommentsFragment,org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { au.com.wallaceit.reddinator.Reddinator access$000(au.com.wallaceit.reddinator.ui.TabCommentsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { java.util.HashMap access$300(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$11 { void apply(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void loadFromData(org.json.JSONObject,org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void access$200(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { android.content.res.Resources access$400(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { android.app.ProgressDialog access$502(au.com.wallaceit.reddinator.activity.ThemesActivity,android.app.ProgressDialog); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void refreshList(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onCommentComplete(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void onBackPressed(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { au.com.wallaceit.reddinator.Reddinator access$100(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$9 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onDestroy(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onPause(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void onResume(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$9 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment,android.preference.Preference); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$2 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void onVoteComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity { void onSubmitted(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment { void updateTheme(); }
-keepclassmembers class org.apache.commons.lang3.time.StopWatch$SplitState { void <init>(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$ViewHolder { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter); }
-keepclassmembers class org.apache.commons.lang3.time.StopWatch$SplitState { org.apache.commons.lang3.time.StopWatch$SplitState[] values(); }
-keepclassmembers class org.apache.commons.lang3.time.StopWatch$SplitState { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(org.apache.commons.lang3.text.StrLookup,org.apache.commons.lang3.text.StrMatcher,org.apache.commons.lang3.text.StrMatcher,char); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { void <init>(android.content.Context,android.content.SharedPreferences); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { android.content.SharedPreferences access$000(au.com.wallaceit.reddinator.core.ThemeManager); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(org.apache.commons.lang3.text.StrLookup); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(org.apache.commons.lang3.text.StrLookup,java.lang.String,java.lang.String,char); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { au.com.wallaceit.reddinator.core.ThemeManager$Theme access$100(au.com.wallaceit.reddinator.core.ThemeManager); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(org.apache.commons.lang3.text.StrLookup,org.apache.commons.lang3.text.StrMatcher,org.apache.commons.lang3.text.StrMatcher,char,org.apache.commons.lang3.text.StrMatcher); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void checkCyclicSubstitution(java.lang.String,java.util.List); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String replace(java.lang.Object,java.util.Map,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String replace(java.lang.Object,java.util.Map); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { void loadThemes(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(java.util.Map); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { boolean validateThemeJson(org.json.JSONObject); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <init>(java.util.Map,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String replace(java.lang.Object,java.util.Properties); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { au.com.wallaceit.reddinator.core.ThemeManager$Theme cloneTheme(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { void deleteCustomTheme(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { int substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String replaceSystemProperties(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { org.json.JSONObject getThemeJSON(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { void clearPreviewTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { java.lang.String getPreviewName(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { au.com.wallaceit.reddinator.core.ThemeManager$Theme getActiveTheme(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { au.com.wallaceit.reddinator.core.ThemeManager$Theme getTheme(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrMatcher getVariableSuffixMatcher(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { java.util.LinkedHashMap getThemeList(int); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { boolean isEnableSubstitutionInVariables(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrMatcher getVariablePrefixMatcher(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrLookup getVariableResolver(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String replace(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.reflect.FieldUtils { java.lang.reflect.Field getField(java.lang.Class,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { void saveCustomTheme(java.lang.String,au.com.wallaceit.reddinator.core.ThemeManager$Theme); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { boolean savePreviewTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { boolean importTheme(org.json.JSONObject); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { char getEscapeChar(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { boolean setPreviewTheme(org.json.JSONObject); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void setEscapeChar(char); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrSubstitutor setValueDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeManager { boolean isThemeEditable(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { java.lang.String resolveVariable(java.lang.String,org.apache.commons.lang3.text.StrBuilder,int,int); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrSubstitutor setVariablePrefixMatcher(org.apache.commons.lang3.text.StrMatcher); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrMatcher getValueDelimiterMatcher(); }
-keepclassmembers class org.apache.commons.lang3.reflect.FieldUtils { java.lang.reflect.Field getField(java.lang.Class,java.lang.String,boolean); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { void setVariableResolver(org.apache.commons.lang3.text.StrLookup); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadSubredditInfoTask { org.json.JSONObject doInBackground(java.lang.String[]); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrSubstitutor setVariableSuffix(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.ActionbarFragmentActivity { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrSubstitutor setVariablePrefix(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadSubredditInfoTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.LoadSubredditInfoTask$Callback); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadSubredditInfoTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { boolean substitute(org.apache.commons.lang3.text.StrBuilder,int,int); }
-keepclassmembers class org.apache.commons.lang3.text.StrSubstitutor { org.apache.commons.lang3.text.StrSubstitutor setVariableSuffixMatcher(org.apache.commons.lang3.text.StrMatcher); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadSubredditInfoTask { void onPostExecute(org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$4 { void <init>(android.content.Context,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.ActionbarFragmentActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$4 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadSubredditInfoTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] APOS_ESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] BASIC_UNESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] ISO8859_1_ESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] ISO8859_1_UNESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] BASIC_ESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] invert(java.lang.String[][]); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] HTML40_EXTENDED_ESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] APOS_UNESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.EntityArrays { java.lang.String[][] HTML40_EXTENDED_UNESCAPE(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$4 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class okhttp3.CertificatePinner$Builder { okhttp3.CertificatePinner build(); }
-keepclassmembers class org.apache.commons.lang3.time.StopWatch$State$3 { void <init>(java.lang.String,int); }
-keepclassmembers class okhttp3.CertificatePinner$Builder { void <init>(); }
-keepclassmembers class okio.Util { void <clinit>(); }
-keepclassmembers class okio.Util { boolean arrayRangeEquals(byte[],int,byte[],int,int); }
-keepclassmembers class okio.Util { int reverseBytesInt(int); }
-keepclassmembers class okio.Util { long reverseBytesLong(long); }
-keepclassmembers class okio.Util { short reverseBytesShort(short); }
-keepclassmembers class okio.Util { void checkOffsetAndCount(long,long,long); }
-keepclassmembers class okio.Util { void sneakyRethrow(java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$2 { void onClick(android.view.View); }
-keepclassmembers class okio.Util { void sneakyThrow2(java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.MarkMessageTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.MarkMessageTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.MarkMessageTask { void <init>(au.com.wallaceit.reddinator.Reddinator,java.util.ArrayList); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.MarkMessageTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.MarkMessageTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { java.util.Date addMinutes(java.util.Date,int); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { java.util.Date add(java.util.Date,int,int); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { long getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { long getFragment(java.util.Date,int,java.util.concurrent.TimeUnit); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$4 { void onClick(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { java.util.Date addSeconds(java.util.Date,int); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { long getFragmentInMinutes(java.util.Calendar,int); }
-keepclassmembers class okio.Base64 { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { long getFragmentInMinutes(java.util.Date,int); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { long getFragmentInSeconds(java.util.Date,int); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$10 { void apply(net.rdrei.android.dirchooser.DirectoryChooserFragment$OnFragmentInteractionListener); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$10 { void apply(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { long getFragmentInSeconds(java.util.Calendar,int); }
-keepclassmembers class okio.Base64 { java.lang.String encode(byte[]); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$10 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { void modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class okio.Base64 { java.lang.String encode(byte[],byte[]); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.util.List getAllInterfaces(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { java.util.Calendar round(java.util.Calendar,int); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { java.util.Date round(java.util.Date,int); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { java.util.Date set(java.util.Date,int,int); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { void getAllInterfaces(java.lang.Class,java.util.HashSet); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { java.util.Date setMinutes(java.util.Date,int); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { java.util.Date round(java.lang.Object,int); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.lang.String getShortClassName(java.lang.Object,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { java.util.Calendar toCalendar(java.util.Date); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils { java.util.Date setSeconds(java.util.Date,int); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.lang.String getShortClassName(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.lang.String getShortClassName(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { boolean isAssignable(java.lang.Class,java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { boolean isAssignable(java.lang.Class,java.lang.Class,boolean); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { boolean isAssignable(java.lang.Class[],java.lang.Class[],boolean); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.lang.Class primitiveToWrapper(java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.lang.Class[] toClass(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.ClassUtils { java.lang.Class wrapperToPrimitive(java.lang.Class); }
-keepclassmembers class okhttp3.Dispatcher { void promoteCalls(); }
-keepclassmembers class org.apache.commons.lang3.Range { void <init>(java.lang.Object,java.lang.Object,java.util.Comparator); }
-keepclassmembers class org.apache.commons.lang3.Range { org.apache.commons.lang3.Range between(java.lang.Comparable,java.lang.Comparable); }
-keepclassmembers class okhttp3.Dispatcher { void <init>(); }
-keepclassmembers class okhttp3.Dispatcher { void finished(java.util.Deque,java.lang.Object,boolean); }
-keepclassmembers class okhttp3.Dispatcher { int runningCallsForHost(okhttp3.RealCall$AsyncCall); }
-keepclassmembers class okhttp3.Dispatcher { java.util.concurrent.ExecutorService executorService(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$1 { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class okhttp3.Dispatcher { void executed(okhttp3.RealCall); }
-keepclassmembers class org.apache.commons.lang3.Range { org.apache.commons.lang3.Range is(java.lang.Comparable); }
-keepclassmembers class okhttp3.Dispatcher { void finished(okhttp3.RealCall); }
-keepclassmembers class okhttp3.Response { void <init>(okhttp3.Response$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$1 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$10 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$10 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity,java.lang.String); }
-keepclassmembers class okhttp3.Dispatcher { int runningCallsCount(); }
-keepclassmembers class okhttp3.Response { okhttp3.Request access$1300(okhttp3.Response); }
-keepclassmembers class org.apache.commons.lang3.Range { org.apache.commons.lang3.Range is(java.lang.Object,java.util.Comparator); }
-keepclassmembers class org.apache.commons.lang3.Range { org.apache.commons.lang3.Range between(java.lang.Object,java.lang.Object,java.util.Comparator); }
-keepclassmembers class okhttp3.Response { void <init>(okhttp3.Response$Builder,okhttp3.Response$1); }
-keepclassmembers class okhttp3.Response { okhttp3.ResponseBody access$1900(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { okhttp3.Protocol access$1400(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { int access$1500(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { long access$2400(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { okhttp3.Handshake access$1700(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { java.lang.String header(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.Response { okhttp3.Headers access$1800(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { int code(); }
-keepclassmembers class okhttp3.Response { okhttp3.Response access$2200(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { okhttp3.Headers headers(); }
-keepclassmembers class okhttp3.Response { okhttp3.ResponseBody body(); }
-keepclassmembers class okhttp3.Response { java.lang.String header(java.lang.String); }
-keepclassmembers class okhttp3.Response { long access$2300(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { java.util.List headers(java.lang.String); }
-keepclassmembers class okhttp3.Response { java.lang.String access$1600(okhttp3.Response); }
-keepclassmembers class okhttp3.Response { okhttp3.Response access$2000(okhttp3.Response); }
-keepclassmembers class org.apache.commons.lang3.exception.CloneFailedException { void <init>(java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$5 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class okhttp3.Response { java.lang.String message(); }
-keepclassmembers class okhttp3.Response { okhttp3.CacheControl cacheControl(); }
-keepclassmembers class okhttp3.Response { okhttp3.Request request(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$5 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.Response { okhttp3.Response$Builder newBuilder(); }
-keepclassmembers class org.apache.commons.lang3.exception.CloneFailedException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class okhttp3.Response { okhttp3.Response access$2100(okhttp3.Response); }
-keepclassmembers class org.apache.commons.lang3.exception.CloneFailedException { void <init>(java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void <init>(); }
-keepclassmembers class okhttp3.internal.Internal { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { net.rdrei.android.dirchooser.DirectoryChooserFragment access$402(au.com.wallaceit.reddinator.activity.PrefsFragment,net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { java.lang.String access$200(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { net.rdrei.android.dirchooser.DirectoryChooserFragment access$400(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$1 { void <init>(au.com.wallaceit.reddinator.core.RedditData); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$1 { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class okhttp3.Response { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { au.com.wallaceit.reddinator.Reddinator access$000(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void clearWebviewCookies(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { java.lang.String access$300(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void setupThemePrefs(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onBackPressed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void access$100(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void saveSettingsAndFinish(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onCancelChooser(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onDestroy(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$8 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment,android.app.AlertDialog,android.widget.TextView); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onSelectDirectory(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onResume(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment { void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String); }
-keepclassmembers class okio.Okio$3 { void timedOut(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService$MailCheckTask { void <init>(au.com.wallaceit.reddinator.service.MailCheckService); }
-keepclassmembers class okio.Okio$3 { void <init>(java.net.Socket); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService$MailCheckTask { void <init>(au.com.wallaceit.reddinator.service.MailCheckService,au.com.wallaceit.reddinator.service.MailCheckService$1); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService$MailCheckTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService$MailCheckTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { double max(double,double,double); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { double max(double,double); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { double max(double[]); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { double min(double,double); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService$MailCheckTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { float max(float,float); }
-keepclassmembers class au.com.wallaceit.reddinator.service.MailCheckService$MailCheckTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class okio.Okio$3 { java.io.IOException newTimeoutException(java.io.IOException); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { float max(float,float,float); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { float min(float,float,float); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { double min(double[]); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { float min(float,float); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { double min(double,double,double); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedRuntimeException { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { float max(float[]); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedRuntimeException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedRuntimeException { void <init>(java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedRuntimeException { void <init>(java.lang.String,java.lang.Throwable,org.apache.commons.lang3.exception.ExceptionContext); }
-keepclassmembers class org.apache.commons.lang3.math.IEEE754rUtils { float min(float[]); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedRuntimeException { void <init>(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedRuntimeException { java.lang.String getFormattedExceptionMessage(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.exception.ContextedRuntimeException { java.lang.String getMessage(); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader$1 { void <init>(okhttp3.internal.framed.NameValueBlockReader,okio.Source); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.OkHttpClient$1 { boolean connectionBecameIdle(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl { void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[]); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void addLenient(okhttp3.Headers$Builder,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl { void <clinit>(); }
-keepclassmembers class okhttp3.OkHttpClient$1 { okhttp3.internal.connection.RouteDatabase routeDatabase(okhttp3.ConnectionPool); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl { void <init>(java.lang.reflect.Type[],java.lang.reflect.Type[],org.apache.commons.lang3.reflect.TypeUtils$1); }
-keepclassmembers class okhttp3.OkHttpClient$1 { okhttp3.internal.connection.RealConnection get(okhttp3.ConnectionPool,okhttp3.Address,okhttp3.internal.connection.StreamAllocation); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void apply(okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean compareVersionWithoutBuild(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.OkHttpClient$1 { void put(okhttp3.ConnectionPool,okhttp3.internal.connection.RealConnection); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { int convertDiptoPix(android.content.Context,float); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { long dirSize(java.io.File); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { android.text.Spanned fromHtml(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader$1 { long read(okio.Buffer,long); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { void executeJavascriptInWebview(android.webkit.WebView,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { android.graphics.Bitmap getFontBitmap(android.content.Context,java.lang.String,int,int,int[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { android.graphics.ColorMatrixColorFilter getColorFilterFromColor(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { boolean access$302(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void openSidebar(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { java.lang.String getFeedDataSize(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { java.lang.String getScoreText(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { android.content.SharedPreferences access$100(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean hasImageExtension(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { boolean access$000(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { boolean access$300(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { int getActionbarIconColor(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { void intentActionView(android.content.Context,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void showFeedPrefsDialog(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { java.lang.String getImageCacheSize(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { void intentActionShareText(android.content.Context,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { android.content.pm.PackageInfo getPackageInfo(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { int access$200(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean isImgurUrl(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void showSortDialog(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean isFeedPathDomain(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { void showApiErrorToastOrDialog(android.content.Context,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { java.lang.String voteDirectionToString(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean isFeedPathMulti(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { void updateActionbarOverflowIcon(android.app.Activity,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { int voteDirectionToInt(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void startActivityAndFinish(android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { boolean isImageUrl(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.SerializationException { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities { android.app.AlertDialog showPostShareDialog(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.SerializationException { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { boolean onMenuItemClick(android.view.MenuItem); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround$1 { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround,au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class org.apache.commons.lang3.SerializationException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround$1 { void onGlobalLayout(); }
-keepclassmembers class org.apache.commons.lang3.SerializationException { void <init>(java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void onWindowFocusChanged(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity { void onSubredditInfoLoaded(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$6 { void run(); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentException { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$6 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentException { void <init>(java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentException { void <init>(java.lang.String,java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$4 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$4 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class okhttp3.internal.framed.Huffman$Node { int access$200(okhttp3.internal.framed.Huffman$Node); }
-keepclassmembers class okhttp3.internal.framed.Huffman$Node { void <init>(int,int); }
-keepclassmembers class okhttp3.internal.framed.Huffman$Node { okhttp3.internal.framed.Huffman$Node[] access$000(okhttp3.internal.framed.Huffman$Node); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy { boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder); }
-keepclassmembers class okhttp3.internal.framed.Huffman$Node { int access$100(okhttp3.internal.framed.Huffman$Node); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy { boolean isNumber(); }
-keepclassmembers class okhttp3.internal.framed.Huffman$Node { void <init>(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void <init>(android.content.Context); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState { void <init>(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState { com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState[] values(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void calculateColor(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { android.webkit.WebChromeClient$CustomViewCallback access$200(au.com.wallaceit.reddinator.ui.TabWebFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void load(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void load(java.lang.String); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { au.com.wallaceit.reddinator.ui.TabWebFragment init(java.lang.String,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { android.content.Context access$100(au.com.wallaceit.reddinator.ui.TabWebFragment); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void init(android.util.AttributeSet,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void onMeasure(int,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void onActivityCreated(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void onDestroy(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment { void onPause(); }
-keepclassmembers class okhttp3.RequestBody { void <init>(); }
-keepclassmembers class okhttp3.RequestBody { okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void setValue(float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$4 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$4 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter,boolean,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { java.lang.String access$400(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.Protocol access$000(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class okhttp3.RequestBody { okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int); }
-keepclassmembers class okhttp3.RequestBody { okhttp3.RequestBody create(okhttp3.MediaType,byte[]); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.FramedConnection$Listener access$300(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.PushObserver access$100(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { java.net.Socket access$500(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { void <init>(boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { boolean access$200(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.FramedConnection$Builder listener(okhttp3.internal.framed.FramedConnection$Listener); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okio.BufferedSink access$600(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void <init>(android.content.Context); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.FramedConnection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okio.BufferedSource access$700(okhttp3.internal.framed.FramedConnection$Builder); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.FramedConnection$Builder protocol(okhttp3.Protocol); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void access$000(au.com.wallaceit.reddinator.ui.RWebView,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void <init>(java.io.IOException); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Builder { okhttp3.internal.framed.FramedConnection build(); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void access$100(au.com.wallaceit.reddinator.ui.RWebView,java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void addConnectException(java.io.IOException); }
-keepclassmembers class okhttp3.internal.connection.RouteException { void addSuppressedIfPossible(java.io.IOException,java.io.IOException); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { java.lang.String appendImageExtensionIfNeeded(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void downloadFile(java.lang.String); }
-keepclassmembers class okhttp3.internal.connection.RouteException { java.io.IOException getLastConnectException(); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void setColor(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void shareImage(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void doFileDownload(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { java.lang.String access$200(au.com.wallaceit.reddinator.ui.RWebView,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void onCancelChooser(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { void <init>(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void onCreateContextMenu(android.view.ContextMenu); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { org.apache.commons.lang3.builder.ToStringStyle getDefaultStyle(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { void setDefaultStyle(org.apache.commons.lang3.builder.ToStringStyle); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView { void onSelectDirectory(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$4 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$4 { void onClick(android.view.View); }
-keepclassmembers class com.larswerkman.holocolorpicker.ValueBar { void setColorPicker(com.larswerkman.holocolorpicker.ColorPicker); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { org.apache.commons.lang3.builder.ToStringBuilder append(java.lang.String,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField { void <init>(int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { java.lang.StringBuffer getStringBuffer(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { java.lang.String translate(java.lang.CharSequence); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField { int estimateLength(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { org.apache.commons.lang3.builder.ToStringStyle getStyle(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { java.lang.String hex(int); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { java.lang.String build(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { void translate(java.lang.CharSequence,java.io.Writer); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SavePostTask { void <init>(android.content.Context,boolean,java.lang.Runnable); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringBuilder { java.lang.Object getObject(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$1 { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class okio.AsyncTimeout$Watchdog { void run(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SavePostTask { java.lang.Boolean doInBackground(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SavePostTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.text.translate.CharSequenceTranslator { org.apache.commons.lang3.text.translate.CharSequenceTranslator with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]); }
-keepclassmembers class okio.AsyncTimeout$Watchdog { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SavePostTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView$2 { void run(); }
-keepclassmembers class okhttp3.Headers$Builder { java.util.List access$000(okhttp3.Headers$Builder); }
-keepclassmembers class okhttp3.Headers$Builder { void checkNameAndValue(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.Headers$Builder { void <init>(); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder add(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers build(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.RWebView$2 { void <init>(au.com.wallaceit.reddinator.ui.RWebView,android.app.ProgressDialog,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$6 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder addLenient(java.lang.String); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder set(java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$6 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.Headers$Builder { okhttp3.Headers$Builder removeAll(java.lang.String); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void <init>(android.content.Context); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void calculateColor(int); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void init(android.util.AttributeSet,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper { void handleThemeInstall(android.content.Context,au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.core.ThemeHelper$ThemeInstallInterface,org.json.JSONObject,java.lang.Runnable); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder { void <init>(org.apache.commons.lang3.reflect.TypeUtils$1); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder { org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder withUpperBounds(java.lang.reflect.Type[]); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void onMeasure(int,int); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder { java.lang.reflect.WildcardType build(); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$3 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void setColorPicker(com.larswerkman.holocolorpicker.ColorPicker); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void setColor(int); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder { void <init>(); }
-keepclassmembers class com.larswerkman.holocolorpicker.SaturationBar { void setSaturation(float); }
-keepclassmembers class okhttp3.internal.framed.PushObserver$1 { boolean onHeaders(int,java.util.List,boolean); }
-keepclassmembers class okhttp3.internal.framed.PushObserver$1 { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.PushObserver$1 { boolean onData(int,okio.BufferedSource,int,boolean); }
-keepclassmembers class okhttp3.internal.framed.PushObserver$1 { boolean onRequest(int,java.util.List); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$8 { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class okhttp3.internal.framed.PushObserver$1 { void onReset(int,okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$8 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class com.gu.option.Option$None { void foreach(com.gu.option.UnitFunction); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4$1 { void <init>(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class okhttp3.internal.http.HttpDate$1 { java.lang.Object initialValue(); }
-keepclassmembers class com.gu.option.Option$None { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void <init>(au.com.wallaceit.reddinator.core.RedditData,android.content.SharedPreferences); }
-keepclassmembers class com.gu.option.Option$None { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.SavePostTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$4$1 { void run(); }
-keepclassmembers class com.gu.option.Option$None { java.lang.Object get(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void addSubredditData(org.json.JSONObject); }
-keepclassmembers class com.gu.option.Option$None { java.util.List toList(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void addMultiData(org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { au.com.wallaceit.reddinator.core.RedditData access$100(au.com.wallaceit.reddinator.core.SubredditManager); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void access$300(au.com.wallaceit.reddinator.core.SubredditManager); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { org.json.JSONObject getPostFilters(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$7 { void <init>(au.com.wallaceit.reddinator.activity.ViewRedditActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { org.json.JSONObject access$200(au.com.wallaceit.reddinator.core.SubredditManager); }
-keepclassmembers class okhttp3.internal.http.HttpDate$1 { java.text.DateFormat initialValue(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewRedditActivity$7 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void saveMultis(); }
-keepclassmembers class okhttp3.internal.http.HttpDate$1 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void savePostFilters(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { org.json.JSONObject getCurrentFeed(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void clearPostFilters(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void addMultis(org.json.JSONArray,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void addSubreddit(org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { org.json.JSONArray filterFeed(int,org.json.JSONArray,org.json.JSONArray,boolean,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.util.ArrayList getAllFilter(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void clearAllFilter(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.util.ArrayList getMultiSubreddits(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.util.ArrayList getMultiList(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void addPostFilter(int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.lang.String getCurrentFeedPath(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { org.json.JSONObject getMultiData(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void clearMultis(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void saveSubs(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.lang.String getCurrentFeedName(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { boolean isFeedMulti(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { java.util.ArrayList getSubredditNames(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { int getPostFilterCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void loadDefaultSubreddits(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void removeSubreddit(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { org.json.JSONObject getSubredditData(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadPostTask { void <init>(au.com.wallaceit.reddinator.Reddinator,au.com.wallaceit.reddinator.tasks.LoadPostTask$Callback); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadPostTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadPostTask { org.json.JSONArray doInBackground(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadPostTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setFeed(int,java.lang.String,java.lang.String,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setFeedDomain(int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$3 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void removeMulti(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setMultiData(java.lang.String,org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadPostTask { void onPostExecute(org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setSubreddits(org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setFeedSubreddit(int,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setMultiSubs(java.lang.String,java.util.ArrayList); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager { void setAllFilter(java.util.ArrayList); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void <init>(okhttp3.ConnectionPool,okhttp3.Address); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RealConnection findConnection(int,int,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.text.translate.JavaUnicodeEscaper { org.apache.commons.lang3.text.translate.JavaUnicodeEscaper between(int,int); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void deallocate(boolean,boolean,boolean); }
-keepclassmembers class okio.DeflaterSink { void <init>(okio.BufferedSink,java.util.zip.Deflater); }
-keepclassmembers class okio.DeflaterSink { void deflate(boolean); }
-keepclassmembers class org.apache.commons.lang3.text.translate.JavaUnicodeEscaper { org.apache.commons.lang3.text.translate.JavaUnicodeEscaper outsideOf(int,int); }
-keepclassmembers class okio.DeflaterSink { void <init>(okio.Sink,java.util.zip.Deflater); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { void <init>(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date); }
-keepclassmembers class okio.DeflaterSink { void finishDeflate(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String); }
-keepclassmembers class okio.DeflaterSink { void flush(); }
-keepclassmembers class okio.DeflaterSink { void close(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.JavaUnicodeEscaper { void <init>(int,int,boolean); }
-keepclassmembers class okio.DeflaterSink { void write(okio.Buffer,long); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.Locale); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4,android.widget.EditText); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { void <clinit>(); }
-keepclassmembers class okio.DeflaterSink { okio.Timeout timeout(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$2 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { org.apache.commons.lang3.time.FastDateFormat getInstance(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RouteDatabase routeDatabase(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.JavaUnicodeEscaper { java.lang.String toUtf16Escape(int); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void release(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,boolean,boolean); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.connection.RealConnection connection(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$4$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { java.lang.String format(java.util.Calendar); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$3 { void execute(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.http.HttpStream newStream(okhttp3.OkHttpClient,boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { void <init>(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void acquire(okhttp3.internal.connection.RealConnection); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$2 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$3 { void <init>(okhttp3.internal.framed.FramedConnection,java.lang.String,java.lang.Object[],boolean,int,int,okhttp3.internal.framed.Ping); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateFormat { java.lang.String format(java.util.Date); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { boolean hasMoreRoutes(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { okhttp3.internal.http.HttpStream stream(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void noNewStreams(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void release(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void streamFailed(java.io.IOException); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy { void <init>(okhttp3.Request,okhttp3.Response); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Listener { void <init>(); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy { boolean isCacheable(okhttp3.Response,okhttp3.Request); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Listener { void onSettings(okhttp3.internal.framed.FramedConnection); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$3$1 { void run(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { void streamFinished(boolean,okhttp3.internal.http.HttpStream); }
-keepclassmembers class okhttp3.internal.framed.FramedConnection$Listener { void <clinit>(); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy { void <init>(okhttp3.Request,okhttp3.Response,okhttp3.internal.cache.CacheStrategy$1); }
-keepclassmembers class okhttp3.internal.http.Http2xStream$StreamFinishingSource { void <init>(okhttp3.internal.http.Http2xStream,okio.Source); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator$1 { void <init>(au.com.wallaceit.reddinator.Reddinator); }
-keepclassmembers class okhttp3.internal.http.Http2xStream$StreamFinishingSource { void close(); }
-keepclassmembers class okhttp3.internal.connection.StreamAllocation { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.Reddinator$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$TrimMatcher { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog { void <init>(android.content.Context,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog { void <init>(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.commons.lang3.time.StopWatch$State$2 { void <init>(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog { android.content.Context access$000(au.com.wallaceit.reddinator.activity.AboutDialog); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField { int estimateLength(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog { android.app.Dialog show(android.content.Context,boolean); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment$1 { void <init>(au.com.wallaceit.reddinator.ui.TabWebFragment); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$ViewHolder { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean getOSMatches(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.LocaleUtils$SyncAvoid { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean getOSMatchesName(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField { int estimateLength(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean isOSNameMatch(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean getJavaVersionMatches(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.commons.lang3.LocaleUtils$SyncAvoid { java.util.List access$000(); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { java.lang.String getSystemProperty(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean isJavaVersionMatch(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean isOSVersionMatch(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.LocaleUtils$SyncAvoid { java.util.Set access$100(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$4 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$4 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField { void appendTo(java.lang.StringBuffer,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void finish(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void updateTheme(); }
-keepclassmembers class org.apache.commons.lang3.SystemUtils { boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter access$000(au.com.wallaceit.reddinator.activity.MessagesActivity); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { int compare(boolean,boolean); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.Boolean and(java.lang.Boolean[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { au.com.wallaceit.reddinator.core.ThemeManager$Theme getCurrentTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { android.content.res.Resources access$200(au.com.wallaceit.reddinator.activity.MessagesActivity); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean and(boolean[]); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { void deleteImpl(int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { android.app.ActionBar access$100(au.com.wallaceit.reddinator.activity.MessagesActivity); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { void <init>(int); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.Boolean or(java.lang.Boolean[]); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean or(boolean[]); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(int,int,int); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { void <init>(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(java.lang.Boolean); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { void replaceImpl(int,int,int,java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$5 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { boolean toBoolean(java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder append(java.lang.CharSequence); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$5 { void <init>(android.content.Context); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder append(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.Boolean toBooleanObject(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder append(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void onPause(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void reloadSentMessages(); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuffer); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void setTitleText(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.MessagesActivity); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { int compare(java.lang.Comparable,java.lang.Comparable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$1 { void onPageScrolled(int,float,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$1 { void onPageScrollStateChanged(int); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder append(java.nio.CharBuffer); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { int compare(java.lang.Comparable,java.lang.Comparable,boolean); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.Object defaultIfNull(java.lang.Object,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuilder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.String identityToString(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { int toInteger(boolean,int,int); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { int toInteger(boolean); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { void identityToString(java.lang.Appendable,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { int toInteger(java.lang.Boolean,int,int,int); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { void identityToString(java.lang.StringBuilder,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { void identityToString(org.apache.commons.lang3.text.StrBuilder,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { int hashCode(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder append(org.apache.commons.lang3.text.StrBuilder); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { boolean equals(java.lang.Object,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$1 { void onPageSelected(int); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toString(java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { int hashCodeMulti(java.lang.Object[]); }
-keepclassmembers class okio.ForwardingSource { void <init>(okio.Source); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { void identityToString(java.lang.StringBuffer,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.Comparable max(java.lang.Comparable[]); }
-keepclassmembers class okio.ForwardingSource { long read(okio.Buffer,long); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringOnOff(java.lang.Boolean); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringYesNo(java.lang.Boolean); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringTrueFalse(boolean); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringYesNo(boolean); }
-keepclassmembers class okio.ForwardingSource { okio.Timeout timeout(); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.String toString(java.lang.Object,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringTrueFalse(java.lang.Boolean); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider { boolean access$000(okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toStringOnOff(boolean); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider { java.lang.String access$100(okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.String toString(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity,au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.Object mode(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityEscaper { void <init>(); }
-keepclassmembers class okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider { void <init>(java.util.List); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityEscaper { org.apache.commons.lang3.text.translate.NumericEntityEscaper between(int,int); }
-keepclassmembers class org.apache.commons.lang3.BooleanUtils { java.lang.String toString(boolean,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$3 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder appendNull(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$2 { void onFocusChange(android.view.View,boolean); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityEscaper { void <init>(int,int,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.ActionbarActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.ActionbarActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder appendWithSeparators(java.lang.Iterable,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.translate.NumericEntityEscaper { boolean translate(int,java.io.Writer); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubmitActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.SubmitActivity); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils { java.lang.Comparable min(java.lang.Comparable[]); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TextField { void <init>(int,java.lang.String[]); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$3 { void <init>(android.content.Context); }
-keepclassmembers class okhttp3.internal.tls.CertificateChainCleaner { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$NoMatcher { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder deleteCharAt(int); }
-keepclassmembers class okhttp3.internal.tls.CertificateChainCleaner { okhttp3.internal.tls.CertificateChainCleaner get(java.security.cert.X509Certificate[]); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TextField { int estimateLength(); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$NoMatcher { int isMatch(char[],int,int,int); }
-keepclassmembers class okio.ForwardingSource { void close(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TextField { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder ensureCapacity(int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetService { android.widget.RemoteViewsService$RemoteViewsFactory onGetViewFactory(android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.service.WidgetService { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { int length(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$17 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class okhttp3.internal.tls.CertificateChainCleaner { okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$4 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class au.com.wallaceit.reddinator.core.ThemeHelper$4 { void <init>(au.com.wallaceit.reddinator.core.ThemeHelper$ThemeInstallInterface); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$17 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { org.apache.commons.lang3.text.StrBuilder replace(int,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(long,java.lang.String,java.util.Locale); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle { java.lang.Object readResolve(); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Calendar,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(long,java.lang.String,java.util.TimeZone); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Date,java.lang.String,java.util.Locale); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(long,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Date,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(long,java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$DefaultToStringStyle { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Calendar,java.lang.String,java.util.Locale); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Calendar,java.lang.String,java.util.TimeZone); }
-keepclassmembers class org.apache.commons.lang3.text.StrBuilder { int validateRange(int,int); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { void clearColorFilter(); }
-keepclassmembers class org.apache.commons.lang3.time.DateFormatUtils { java.lang.String format(java.util.Date,java.lang.String,java.util.TimeZone); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { void draw(android.graphics.Canvas); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { int getIntrinsicHeight(); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { void <init>(android.content.Context,com.joanzapata.android.iconify.BaseIconValue); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { com.joanzapata.android.iconify.IconDrawable color(int); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { com.joanzapata.android.iconify.IconDrawable actionBarSize(); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { boolean setState(int[]); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { void setColorFilter(android.graphics.ColorFilter); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { com.joanzapata.android.iconify.IconDrawable sizeDp(int); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { com.joanzapata.android.iconify.IconDrawable sizePx(int); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { void setAlpha(int); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { int getIntrinsicWidth(); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.CommentTask { org.json.JSONObject doInBackground(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.CommentTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$1$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.Headers { void <init>(java.lang.String[]); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { int getOpacity(); }
-keepclassmembers class okhttp3.Headers { java.lang.String get(java.lang.String[],java.lang.String); }
-keepclassmembers class okhttp3.Headers { void <init>(okhttp3.Headers$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$12 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$12 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String[]); }
-keepclassmembers class okhttp3.Headers { java.lang.String get(java.lang.String); }
-keepclassmembers class okhttp3.Headers { void <init>(okhttp3.Headers$Builder,okhttp3.Headers$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class okhttp3.Headers { okhttp3.Headers$Builder newBuilder(); }
-keepclassmembers class com.joanzapata.android.iconify.IconDrawable { boolean isStateful(); }
-keepclassmembers class okhttp3.Headers { java.util.Date getDate(java.lang.String); }
-keepclassmembers class okhttp3.Headers { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.Headers { int hashCode(); }
-keepclassmembers class okhttp3.Headers { java.util.List values(java.lang.String); }
-keepclassmembers class okhttp3.Headers { java.lang.String value(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$2 { void onDismiss(android.content.DialogInterface); }
-keepclassmembers class okhttp3.Headers { int size(); }
-keepclassmembers class okhttp3.Headers { java.lang.String name(int); }
-keepclassmembers class okhttp3.Headers { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { android.content.res.Resources access$200(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { au.com.wallaceit.reddinator.Reddinator access$300(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { java.lang.String access$900(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void showUserDetailsDialog(org.json.JSONObject[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void setInboxIcon(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { android.app.ActionBar access$800(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void access$600(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void access$700(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class org.apache.commons.lang3.concurrent.ConcurrentUtils { java.lang.Throwable checkedException(java.lang.Throwable); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { au.com.wallaceit.reddinator.activity.AccountActivity$RedditPageAdapter access$000(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { boolean failIfHeadersAbsent(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void triggerRefreshUserInfo(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void access$400(au.com.wallaceit.reddinator.activity.AccountActivity,org.json.JSONObject[]); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { boolean failIfStreamPresent(); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { okhttp3.internal.framed.HeadersMode[] values(); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void <clinit>(); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { boolean failIfHeadersPresent(); }
-keepclassmembers class okhttp3.internal.framed.HeadersMode { boolean failIfStreamAbsent(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { byte[] add(byte[],byte); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object add(java.lang.Object,int,java.lang.Object,java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { byte[] add(byte[],int,byte); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void updateTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void finish(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { au.com.wallaceit.reddinator.core.ThemeManager$Theme getCurrentTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void updateSubtitle(); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl { void <init>(java.lang.reflect.Type); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] add(int[],int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] add(int[],int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { float[] add(float[],int,float); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { double[] add(double[],int,double); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl { void <init>(java.lang.reflect.Type,org.apache.commons.lang3.reflect.TypeUtils$1); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { double[] add(double[],double); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { char[] add(char[],int,char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$9 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { float[] add(float[],float); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { long[] add(long[],long); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { long[] add(long[],int,long); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { short[] add(short[],short); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] add(java.lang.Object[],int,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { char[] add(char[],char); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] add(java.lang.Object[],java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$9 { void onClick(android.content.DialogInterface,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { short[] add(short[],int,short); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void onPause(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] addAll(int[],int[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] add(boolean[],int,boolean); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { char[] clone(char[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { byte[] clone(byte[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] add(boolean[],boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void onSaveInstanceState(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void setTitleText(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] clone(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { void onResume(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] clone(int[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { float[] clone(float[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { void <init>(long,okhttp3.Request,okhttp3.Response); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { double[] clone(double[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { short[] clone(short[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { long[] clone(long[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int getLength(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object copyArrayGrow1(java.lang.Object,java.lang.Class); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(char[],char,int); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { long cacheResponseAge(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(byte[],byte,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(byte[],byte); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { long computeFreshnessLifetime(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] clone(boolean[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(double[],double,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(double[],double); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int hashCode(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(int[],int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(long[],long); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { okhttp3.internal.cache.CacheStrategy getCandidate(); }
-keepclassmembers class org.apache.commons.lang3.ObjectUtils$Null { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(java.lang.Object[],java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(float[],float); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(char[],char); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { java.util.Map getRegistry(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(java.lang.Object[],java.lang.Object,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(int[],int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(long[],long,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { boolean isRegistered(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(short[],short,int); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { boolean hasConditions(okhttp3.Request); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(float[],float,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void register(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(boolean[],boolean); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { boolean isFreshnessLifetimeHeuristic(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(boolean[],boolean,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void unregister(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean isEmpty(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean isEmpty(float[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean isEmpty(double[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean isEmpty(boolean[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void append(java.lang.StringBuffer,java.lang.String,java.lang.Object,java.lang.Boolean); }
-keepclassmembers class okhttp3.internal.cache.CacheStrategy$Factory { okhttp3.internal.cache.CacheStrategy get(); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils$ModifyType { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils$ModifyType { void <init>(java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean isNotEmpty(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { void onBackPressed(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$3 { void <init>(de.cketti.library.changelog.ChangeLog); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$3 { int compare(de.cketti.library.changelog.ChangeLog$ReleaseItem,de.cketti.library.changelog.ChangeLog$ReleaseItem); }
-keepclassmembers class org.apache.commons.lang3.time.DateUtils$ModifyType { org.apache.commons.lang3.time.DateUtils$ModifyType[] values(); }
-keepclassmembers class de.cketti.library.changelog.ChangeLog$3 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean isSameLength(java.lang.Object[],java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendClassName(java.lang.StringBuffer,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendContentEnd(java.lang.StringBuffer); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendContentStart(java.lang.StringBuffer); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int indexOf(short[],short); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendCyclicObject(java.lang.StringBuffer,java.lang.String,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,byte); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,double); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,float); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,long); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Collection); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WebViewActivity { void onDestroy(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,short); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,java.util.Map); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,byte[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,char[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,double[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,float[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,int[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,short[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,long[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendDetail(java.lang.StringBuffer,java.lang.String,boolean[]); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeUnescaper { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.text.translate.UnicodeUnescaper { int translate(java.lang.CharSequence,int,java.io.Writer); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendEnd(java.lang.StringBuffer,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendFieldSeparator(java.lang.StringBuffer); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendFieldEnd(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendFieldStart(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendIdentityHashCode(java.lang.StringBuffer,java.lang.Object); }
-keepclassmembers class okhttp3.HttpUrl { void <clinit>(); }
-keepclassmembers class okhttp3.HttpUrl { void <init>(okhttp3.HttpUrl$Builder); }
-keepclassmembers class okhttp3.HttpUrl { void <init>(okhttp3.HttpUrl$Builder,okhttp3.HttpUrl$1); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Class[] nullToEmpty(java.lang.Class[]); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String access$100(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.HttpUrl { void canonicalize(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { char[] remove(char[],int); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String access$200(okhttp3.HttpUrl); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { float[] remove(float[],int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { double[] remove(double[],int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { byte[] remove(byte[],int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] nullToEmpty(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object remove(java.lang.Object,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendStart(java.lang.StringBuffer,java.lang.Object); }
-keepclassmembers class okhttp3.HttpUrl { int access$300(okhttp3.HttpUrl); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { long[] remove(long[],int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { short[] remove(short[],int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] remove(java.lang.Object[],int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendNullText(java.lang.StringBuffer,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,byte[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] remove(boolean[],int); }
-keepclassmembers class okhttp3.HttpUrl { int decodeHexDigit(char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class okhttp3.HttpUrl { int defaultPort(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl get(java.net.URI); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,char[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl get(java.net.URL); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,double[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,float[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,int[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] remove(int[],int); }
-keepclassmembers class okhttp3.HttpUrl { void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabCommentsFragment$WebInterface { void <init>(au.com.wallaceit.reddinator.ui.TabCommentsFragment,android.content.Context); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,long[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object[]); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl parse(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,short[]); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummarySize(java.lang.StringBuffer,java.lang.String,int); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void appendSummary(java.lang.StringBuffer,java.lang.String,boolean[]); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String percentDecode(java.lang.String,int,int,boolean); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String percentDecode(java.lang.String,boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle$SimpleToStringStyle { void <init>(); }
-keepclassmembers class okhttp3.HttpUrl { java.util.List percentDecode(java.util.List,boolean); }
-keepclassmembers class okhttp3.HttpUrl { void percentDecode(okio.Buffer,java.lang.String,int,int,boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { java.lang.String getNullText(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$1 { boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$3,android.widget.EditText); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { java.lang.String getShortClassName(java.lang.Class); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams { void <init>(); }
-keepclassmembers class okhttp3.HttpUrl { boolean percentEncoded(java.lang.String,int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { char[] removeElement(char[],char); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { byte[] removeElement(byte[],byte); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams { void <init>(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { boolean isFullDetail(java.lang.Boolean); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { double[] removeElement(double[],double); }
-keepclassmembers class okhttp3.HttpUrl { java.util.List queryStringToNamesAndValues(java.lang.String); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$LayoutParams { void <init>(android.view.ViewGroup$MarginLayoutParams); }
-keepclassmembers class okhttp3.HttpUrl { void pathSegmentsToString(java.lang.StringBuilder,java.util.List); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { boolean isUseIdentityHashCode(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { int[] removeElement(int[],int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.Object[] removeElement(java.lang.Object[],java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { float[] removeElement(float[],float); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedFragment(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { short[] removeElement(short[],short); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedPassword(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] removeElement(boolean[],boolean); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedPath(); }
-keepclassmembers class okhttp3.HttpUrl { java.util.List encodedPathSegments(); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedQuery(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setArrayContentDetail(boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void removeLastFieldSeparator(java.lang.StringBuffer); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setArrayEnd(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String encodedUsername(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setArrayStart(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setContentEnd(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setContentStart(java.lang.String); }
-keepclassmembers class okhttp3.HttpUrl { int hashCode(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setDefaultFullDetail(boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { long[] removeElement(long[],long); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void access$1000(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String host(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okhttp3.internal.framed.FramedStream$StreamTimeout access$1100(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.HttpUrl { boolean isHttps(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setFieldNameValueSeparator(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void access$1200(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setFieldSeparator(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void <init>(int,okhttp3.internal.framed.FramedConnection,boolean,boolean,java.util.List); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { int access$600(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl$Builder newBuilder(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setFieldSeparatorAtStart(boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okhttp3.internal.framed.FramedStream$StreamTimeout access$700(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl$Builder newBuilder(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void access$900(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setNullText(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setSizeStartText(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setSizeEndText(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral { int estimateLength(); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setSummaryObjectEndText(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setSummaryObjectStartText(java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okhttp3.internal.framed.FramedConnection access$500(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okhttp3.internal.framed.ErrorCode access$800(okhttp3.internal.framed.FramedStream); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setUseFieldNames(boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setUseIdentityHashCode(boolean); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setUseClassName(boolean); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral { void <init>(char); }
-keepclassmembers class org.apache.commons.lang3.builder.ToStringStyle { void setUseShortClassName(boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { boolean closeInternal(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void cancelStreamIfNecessary(); }
-keepclassmembers class okhttp3.Response$Builder { void <init>(okhttp3.Response); }
-keepclassmembers class okhttp3.Response$Builder { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void waitForIo(); }
-keepclassmembers class okhttp3.HttpUrl { int port(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void closeLater(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter$1 { void <init>(au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void close(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void addBytesToWriteWindow(long); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Protocol access$100(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { void <init>(okhttp3.Response,okhttp3.Response$1); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Request access$000(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { int getId(); }
-keepclassmembers class okhttp3.HttpUrl { java.net.URI uri(); }
-keepclassmembers class okhttp3.Response$Builder { long access$1100(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.HttpUrl { okhttp3.HttpUrl resolve(java.lang.String); }
-keepclassmembers class okhttp3.Response$Builder { int access$200(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { long access$1000(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { java.lang.String access$300(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String toString(); }
-keepclassmembers class okhttp3.HttpUrl { java.lang.String scheme(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Handshake access$400(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { java.util.List getResponseHeaders(); }
-keepclassmembers class okhttp3.Response$Builder { void checkPriorResponse(okhttp3.Response); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Headers$Builder access$500(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { boolean isLocallyInitiated(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.ResponseBody access$600(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response access$700(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okio.Source getSource(); }
-keepclassmembers class okhttp3.Response$Builder { void checkSupportResponse(java.lang.String,okhttp3.Response); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder body(okhttp3.ResponseBody); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okio.Sink getSink(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response access$800(okhttp3.Response$Builder); }
-keepclassmembers class okhttp3.HttpUrl { java.net.URL url(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response build(); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { boolean isOpen(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response access$900(okhttp3.Response$Builder); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubAutoCompleteAdapter$1 { void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void receiveData(okio.BufferedSource,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$4 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex { void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okio.Timeout readTimeout(); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder code(int); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder handshake(okhttp3.Handshake); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$4 { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter,int); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder networkResponse(okhttp3.Response); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder cacheResponse(okhttp3.Response); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder message(java.lang.String); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder headers(okhttp3.Headers); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RefreshUserInfoTask { java.lang.Boolean doInBackground(java.lang.Void[]); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { int access$100(com.kobakei.ratethisapp.RateThisApp$Config); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void receiveHeaders(java.util.List,okhttp3.internal.framed.HeadersMode); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder priorResponse(okhttp3.Response); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void checkOutNotClosed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RefreshUserInfoTask { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity,au.com.wallaceit.reddinator.activity.AccountActivity$1); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { int access$000(com.kobakei.ratethisapp.RateThisApp$Config); }
-keepclassmembers class okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex { java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { int access$200(com.kobakei.ratethisapp.RateThisApp$Config); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { void setTitle(int); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void receiveFin(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { void <init>(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RefreshUserInfoTask { void <init>(au.com.wallaceit.reddinator.activity.AccountActivity); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { long contentLength(okhttp3.Response); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder protocol(okhttp3.Protocol); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder receivedResponseAtMillis(long); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { long contentLength(okhttp3.Headers); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { boolean hasBody(okhttp3.Response); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RefreshUserInfoTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { okio.Timeout writeTimeout(); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$Config { int access$300(com.kobakei.ratethisapp.RateThisApp$Config); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder request(okhttp3.Request); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity,java.util.HashMap); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { int parseSeconds(java.lang.String,int); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { int skipWhitespace(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.framed.FramedStream { void receiveRstStream(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(byte[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(char[],int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(char[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RefreshUserInfoTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { int skipUntil(java.lang.String,int,java.lang.String); }
-keepclassmembers class okhttp3.internal.http.HttpHeaders { long stringToLong(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AccountActivity$RefreshUserInfoTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(double[],int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(long[]); }
-keepclassmembers class okhttp3.Response$Builder { okhttp3.Response$Builder sentRequestAtMillis(long); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(byte[],int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(short[],int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(float[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(long[],int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(java.lang.Object[],int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(double[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(int[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(short[]); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void <init>(okio.BufferedSource,boolean); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(boolean[],int,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readGoAway(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(boolean[]); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { java.io.IOException ioException(java.lang.String,java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(int[],int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readSettings(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readRstStream(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readHeaders(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { void reverse(float[],int,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readPing(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readWindowUpdate(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readSynStream(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readConnectionPreface(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void readSynReply(okhttp3.internal.framed.FrameReader$Handler,int,int); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { void close(); }
-keepclassmembers class okhttp3.internal.framed.Spdy3$Reader { boolean nextFrame(okhttp3.internal.framed.FrameReader$Handler); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$18 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$18 { void onClick(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { boolean[] toPrimitive(java.lang.Boolean[]); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.String toString(java.lang.Object,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.ArrayUtils { java.lang.String toString(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$SubredditsAdapter$1 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$1 { void onDismiss(android.widget.PopupMenu); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$1 { void <init>(int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSource { void close(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSource { void readChunkSize(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void <init>(java.lang.Class,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod,okhttp3.internal.platform.OptionalMethod); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.WidgetMenuDialogActivity); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSource { long read(okio.Buffer,long); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { okhttp3.internal.platform.Platform buildIfSupported(); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$ChunkedSource { void <init>(okhttp3.internal.http.Http1xStream,okhttp3.HttpUrl); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback { void <init>(com.sothree.slidinguppanel.SlidingUpPanelLayout,com.sothree.slidinguppanel.SlidingUpPanelLayout$1); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback { void <init>(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback { void onViewDragStateChanged(int); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback { void onViewCaptured(android.view.View,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { boolean access$1000(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { java.lang.String access$1100(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { java.util.ArrayList access$000(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback { int getViewVerticalDragRange(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { java.util.ArrayList access$1200(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback { int clampViewPositionVertical(android.view.View,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void access$100(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,org.json.JSONObject,boolean); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { org.json.JSONArray access$502(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { org.json.JSONArray access$500(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void connectSocket(java.net.Socket,java.net.InetSocketAddress,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { android.widget.EditText access$300(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity$SubredditsAdapter access$700(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback { void onViewPositionChanged(android.view.View,int,int,int,int); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { boolean isCleartextTrafficPermitted(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void loadDefaults(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { au.com.wallaceit.reddinator.Reddinator access$600(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$1 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void access$200(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$1 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment,android.preference.PreferenceCategory); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { android.content.res.Resources access$800(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void search(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void loadPopularSubreddits(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback { void onViewReleased(android.view.View,float,float); }
-keepclassmembers class okhttp3.internal.platform.AndroidPlatform { void log(int,java.lang.String,java.lang.Throwable); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void onBackPressed(); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void setThemeColors(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { android.widget.TextView access$900(au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup { org.apache.commons.lang3.text.StrLookup mapLookup(java.util.Map); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void returnResult(org.json.JSONObject,boolean); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup { java.util.Properties copyProperties(java.util.Properties); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$DragHelperCallback { boolean tryCaptureView(android.view.View,int); }
-keepclassmembers class org.apache.commons.lang3.text.StrLookup { org.apache.commons.lang3.text.StrLookup systemPropertiesLookup(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment$2 { void onHideCustomView(); }
-keepclassmembers class okhttp3.Protocol { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class okhttp3.Protocol { void <init>(java.lang.String,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewImageDialogActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ViewAllSubredditsActivity { void onResume(); }
-keepclassmembers class okhttp3.Protocol { okhttp3.Protocol get(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.TabWebFragment$2 { void <init>(au.com.wallaceit.reddinator.ui.TabWebFragment); }
-keepclassmembers class okhttp3.Protocol { okhttp3.Protocol[] values(); }
-keepclassmembers class okhttp3.Protocol { java.lang.String toString(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$1 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.Dns { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey { void <init>(java.util.TimeZone,boolean,int,java.util.Locale); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void <init>(android.content.Context); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey { boolean equals(java.lang.Object); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void calculateColor(int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey { int hashCode(); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { int getOpacity(); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void init(android.util.AttributeSet,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void onDraw(android.graphics.Canvas); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$AbstractSource { void <init>(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void onMeasure(int,int); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { boolean shouldPostpone(okhttp3.Route); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { void failed(okhttp3.Route); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$AbstractSource { void <init>(okhttp3.internal.http.Http1xStream,okhttp3.internal.http.Http1xStream$1); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$AbstractSource { void endOfInput(boolean); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$AbstractSource { okio.Timeout timeout(); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { void <init>(); }
-keepclassmembers class okhttp3.internal.connection.RouteDatabase { void connected(okhttp3.Route); }
-keepclassmembers class org.apache.commons.lang3.LocaleUtils { java.util.Set availableLocaleSet(); }
-keepclassmembers class org.apache.commons.lang3.LocaleUtils { java.util.List availableLocaleList(); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void setColorPicker(com.larswerkman.holocolorpicker.ColorPicker); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void setOpacity(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$RedditApiException { void <init>(au.com.wallaceit.reddinator.core.RedditData,java.lang.String); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void setColor(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$RedditApiException { void <init>(au.com.wallaceit.reddinator.core.RedditData,java.lang.String,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$RedditApiException { void <init>(au.com.wallaceit.reddinator.core.RedditData,java.lang.String,boolean,int); }
-keepclassmembers class okhttp3.internal.http.CallServerInterceptor { void <init>(boolean); }
-keepclassmembers class okhttp3.internal.framed.Http2$ContinuationSource { void readContinuationHeader(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$RedditApiException { boolean isAuthError(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.RedditData$RedditApiException { int getHttpErrorCode(); }
-keepclassmembers class com.larswerkman.holocolorpicker.OpacityBar { void onSizeChanged(int,int,int,int); }
-keepclassmembers class okhttp3.internal.framed.Http2$ContinuationSource { void <init>(okio.BufferedSource); }
-keepclassmembers class okhttp3.internal.framed.Http2$ContinuationSource { void close(); }
-keepclassmembers class okhttp3.internal.framed.Http2$ContinuationSource { okio.Timeout timeout(); }
-keepclassmembers class com.gu.option.Option { void <init>(); }
-keepclassmembers class com.gu.option.Option { com.gu.option.Option some(java.lang.Object); }
-keepclassmembers class com.gu.option.Option { java.util.Iterator iterator(); }
-keepclassmembers class okhttp3.internal.http.CallServerInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class com.gu.option.Option { com.gu.option.Option option(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6); }
-keepclassmembers class okhttp3.internal.framed.Http2$ContinuationSource { long read(okio.Buffer,long); }
-keepclassmembers class com.gu.option.Option { com.gu.option.Option none(); }
-keepclassmembers class com.sothree.slidinguppanel.library.R$styleable { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6$2 { void run(); }
-keepclassmembers class okhttp3.internal.http.BridgeInterceptor { java.lang.String cookieHeader(java.util.List); }
-keepclassmembers class okhttp3.internal.http.BridgeInterceptor { void <init>(okhttp3.CookieJar); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$StringMatcher { void <init>(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$StringMatcher { int isMatch(char[],int,int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$5 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter,java.lang.String); }
-keepclassmembers class okhttp3.internal.http.BridgeInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$SubsListAdapter$5 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { java.lang.String access$100(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { org.json.JSONObject access$1502(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity,org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { java.lang.String access$1200(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$4 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { au.com.wallaceit.reddinator.Reddinator access$200(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { java.lang.String access$1300(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { com.sothree.slidinguppanel.SlidingUpPanelLayout access$300(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { java.lang.String access$800(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$4 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { int access$900(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void setTheme(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { java.lang.String access$1400(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class okhttp3.internal.framed.Huffman { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void access$400(okhttp3.internal.http.Http1xStream,okio.ForwardingTimeout); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$13 { int compare(java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void showErrorAndFinish(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { int access$500(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.StreamAllocation,okio.BufferedSource,okio.BufferedSink); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void onCommentComplete(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,int,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$13 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.BufferedSink access$300(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { int access$502(okhttp3.internal.http.Http1xStream,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.internal.connection.StreamAllocation access$700(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.BufferedSource access$600(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$13 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Source getTransferStream(okhttp3.Response); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Sink createRequestBody(okhttp3.Request,long); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Sink newChunkedSink(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.OkHttpClient access$900(okhttp3.internal.http.Http1xStream); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void finishRequest(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Source newChunkedSource(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Sink newFixedLengthSink(long); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Source newFixedLengthSource(long); }
-keepclassmembers class okhttp3.Authenticator { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okio.Source newUnknownLengthSource(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.ResponseBody openResponseBody(okhttp3.Response); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.Response$Builder readResponse(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void detachTimeout(okio.ForwardingTimeout); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$CommentsContextLoader { java.lang.String doInBackground(java.lang.Void[]); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.Response$Builder readResponseHeaders(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity { void onVoteComplete(boolean,au.com.wallaceit.reddinator.core.RedditData$RedditApiException,java.lang.String,int,int,int); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { okhttp3.Headers readHeaders(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$CommentsContextLoader { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void writeRequest(okhttp3.Headers,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.Huffman { void buildTree(); }
-keepclassmembers class okhttp3.internal.framed.Huffman { void <init>(); }
-keepclassmembers class okhttp3.internal.framed.Huffman { okhttp3.internal.framed.Huffman get(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream { void writeRequestHeaders(okhttp3.Request); }
-keepclassmembers class okhttp3.internal.framed.Huffman { byte[] decode(byte[]); }
-keepclassmembers class okhttp3.internal.framed.Huffman { void addCode(int,int,byte); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils$CsvEscaper { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils$CsvEscaper { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$LoginTask { java.lang.Boolean doInBackground(android.net.Uri[]); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils { java.lang.String unescapeHtml4(java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils { java.lang.String escapeEcmaScript(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$1 { void onPageSelected(int); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$1 { void onPageScrolled(int,float,int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$1 { void <init>(au.com.wallaceit.reddinator.ui.SimpleTabsWidget); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$LoginTask { void onPostExecute(java.lang.Boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager$LoadDefaultSubredditsTask { void <init>(au.com.wallaceit.reddinator.core.SubredditManager,au.com.wallaceit.reddinator.core.SubredditManager$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$LoginTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.StringEscapeUtils { java.lang.String unescapeJava(java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SimpleTabsWidget$1 { void onPageScrollStateChanged(int); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager$LoadDefaultSubredditsTask { org.json.JSONArray doInBackground(java.lang.Void[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager$LoadDefaultSubredditsTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager$LoadDefaultSubredditsTask { void <init>(au.com.wallaceit.reddinator.core.SubredditManager); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager$LoadDefaultSubredditsTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.core.SubredditManager$LoadDefaultSubredditsTask { void onPostExecute(org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$LoginTask { void onProgressUpdate(java.lang.Object[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean access$1102(au.com.wallaceit.reddinator.activity.MainActivity,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$1200(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$LoginTask { void onProgressUpdate(java.lang.String[]); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void access$1400(au.com.wallaceit.reddinator.activity.MainActivity,boolean,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$1202(au.com.wallaceit.reddinator.activity.MainActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1$2 { void <init>(au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1,android.widget.EditText); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$1000(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.OAuthView$LoginTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemesActivity$ThemesListAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { au.com.wallaceit.reddinator.Reddinator access$100(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { au.com.wallaceit.reddinator.ui.SubredditFeedAdapter access$000(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean access$600(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.ThemeEditorActivity$ThemeSettingsAdapter$1$2 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { org.json.JSONArray access$1300(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { int access$400(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean access$1100(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean access$200(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { android.view.MenuItem access$900(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { android.widget.AbsListView access$700(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$800(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void hideAppLoader(boolean,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean access$602(au.com.wallaceit.reddinator.activity.MainActivity,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean access$1500(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void access$300(au.com.wallaceit.reddinator.activity.MainActivity,android.os.Bundle,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$500(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { java.lang.String access$802(au.com.wallaceit.reddinator.activity.MainActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { org.json.JSONArray access$1302(au.com.wallaceit.reddinator.activity.MainActivity,org.json.JSONArray); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void showSortDialog(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void openSidebar(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void updateFeed(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void loadReddits(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void hideLoader(); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void showFeedPrefsDialog(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void refreshTheme(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$1 { void onClick(android.view.View); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void <init>(android.content.Context); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void openPostView(android.os.Bundle,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void onActivityResult(int,int,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.core.Utilities$3 { void <init>(android.content.Context,java.lang.String,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void onCreate(android.os.Bundle); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void <init>(android.content.Context,android.util.AttributeSet); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void loadMore(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout$1 { void <init>(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void <init>(android.content.Context,android.util.AttributeSet,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void setThemeColors(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void <clinit>(); }
-keepclassmembers class okhttp3.HttpUrl$Builder$ParseResult { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$1 { void onClick(android.view.View); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { int access$1200(com.sothree.slidinguppanel.SlidingUpPanelLayout,float); }
-keepclassmembers class okhttp3.HttpUrl$Builder$ParseResult { void <init>(java.lang.String,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState access$100(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { int access$1300(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { float access$600(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean access$300(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean access$1100(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void access$1000(com.sothree.slidinguppanel.SlidingUpPanelLayout,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void access$900(com.sothree.slidinguppanel.SlidingUpPanelLayout,com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean onCreateOptionsMenu(android.view.Menu); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { android.view.View access$400(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void applyParallaxForCurrentSlideOffset(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { com.sothree.slidinguppanel.ViewDragHelper access$500(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class okhttp3.HttpUrl$Builder$ParseResult { okhttp3.HttpUrl$Builder$ParseResult[] values(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { float access$602(com.sothree.slidinguppanel.SlidingUpPanelLayout,float); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { float access$200(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { int computePanelTopPosition(float); }
-keepclassmembers class org.apache.commons.lang3.text.StrMatcher$CharMatcher { void <init>(char); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean isViewUnder(android.view.View,int,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean hasOpaqueBackground(android.view.View); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { float computeSlideOffset(int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { float access$700(com.sothree.slidinguppanel.SlidingUpPanelLayout,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { void <init>(au.com.wallaceit.reddinator.activity.MessagesActivity,android.support.v4.app.FragmentManager); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { void destroyItem(android.view.ViewGroup,int,java.lang.Object); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onPanelDragged(int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setPanelStateInternal(com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean onOptionsItemSelected(android.view.MenuItem); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void access$800(com.sothree.slidinguppanel.SlidingUpPanelLayout); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { android.support.v4.app.Fragment getRegisteredFragment(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { int getCount(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { java.lang.Object instantiateItem(android.view.ViewGroup,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void computeScroll(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { java.lang.CharSequence getPageTitle(int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void dispatchOnPanelStateChanged(android.view.View,com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState,com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean checkLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void dispatchOnPanelSlide(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void onResume(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$RedditPageAdapter { android.support.v4.app.Fragment getItem(int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void addPanelSlideListener(com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelSlideListener); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean dispatchTouchEvent(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void reloadFeedData(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void onThemeResult(boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void onSubredditInfoLoaded(org.json.JSONObject,au.com.wallaceit.reddinator.core.RedditData$RedditApiException); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { boolean onMenuOpened(int,android.view.Menu); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void reloadReddits(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void draw(android.graphics.Canvas); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$3 { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean drawChild(android.graphics.Canvas,android.view.View,long); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onAttachedToWindow(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { int getCurrentParallaxOffset(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState getPanelState(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { android.view.ViewGroup$LayoutParams generateDefaultLayoutParams(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onDetachedFromWindow(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean onInterceptTouchEvent(android.view.MotionEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$3 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity { void showLoader(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onMeasure(int,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean isTouchEnabled(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onFinishInflate(); }
-keepclassmembers class okhttp3.internal.tls.BasicCertificateChainCleaner { boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate); }
-keepclassmembers class okhttp3.internal.tls.BasicCertificateChainCleaner { java.util.List clean(java.util.List,java.lang.String); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onLayout(boolean,int,int,int,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onSizeChanged(int,int,int,int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void onRestoreInstanceState(android.os.Parcelable); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setFadeOnClickListener(android.view.View$OnClickListener); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setAllChildrenVisible(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean onTouchEvent(android.view.MotionEvent); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setPanelState(com.sothree.slidinguppanel.SlidingUpPanelLayout$PanelState); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { android.os.Parcelable onSaveInstanceState(); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setGravity(int); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setDragView(android.view.View); }
-keepclassmembers class org.apache.commons.lang3.reflect.ConstructorUtils { java.lang.reflect.Constructor getAccessibleConstructor(java.lang.reflect.Constructor); }
-keepclassmembers class okhttp3.internal.tls.BasicCertificateChainCleaner { void <init>(okhttp3.internal.tls.TrustRootIndex); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void setScrollableView(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask { java.lang.Object doInBackground(java.lang.Object[]); }
-keepclassmembers class org.apache.commons.lang3.reflect.ConstructorUtils { java.lang.Object invokeExactConstructor(java.lang.Class,java.lang.Object[]); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { boolean smoothSlideTo(float,int); }
-keepclassmembers class org.apache.commons.lang3.reflect.ConstructorUtils { java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class,java.lang.Class[]); }
-keepclassmembers class org.apache.commons.lang3.reflect.ConstructorUtils { boolean isAccessible(java.lang.Class); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask { android.graphics.Bitmap doInBackground(java.lang.Void[]); }
-keepclassmembers class org.apache.commons.lang3.reflect.ConstructorUtils { java.lang.Object invokeExactConstructor(java.lang.Class,java.lang.Object[],java.lang.Class[]); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask { void onPostExecute(java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask { void <init>(java.lang.String,au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask$ImageCallback); }
-keepclassmembers class au.com.wallaceit.reddinator.tasks.LoadImageBitmapTask { void onPostExecute(android.graphics.Bitmap); }
-keepclassmembers class com.sothree.slidinguppanel.SlidingUpPanelLayout { void updateObscuredViewVisibility(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$2 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$2 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSource { void <init>(okhttp3.internal.http.Http1xStream,long); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSource { void close(); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$5 { void run(); }
-keepclassmembers class okhttp3.internal.http.Http1xStream$FixedLengthSource { long read(okio.Buffer,long); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$5 { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter,java.lang.String,java.lang.String,android.widget.ImageView,android.widget.ImageView); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$15 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser$3 { void <init>(int); }
-keepclassmembers class com.larswerkman.holocolorpicker.R$styleable { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$15 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$4 { void <init>(android.content.Context); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$4 { void onClick(android.view.View); }
-keepclassmembers class okio.RealBufferedSink { void <init>(okio.Sink); }
-keepclassmembers class au.com.wallaceit.reddinator.service.BootReceiver { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$3 { void <init>(au.com.wallaceit.reddinator.activity.PrefsFragment); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink emitCompleteSegments(); }
-keepclassmembers class okio.RealBufferedSink { okio.Buffer buffer(); }
-keepclassmembers class net.rdrei.android.dirchooser.DirectoryChooserFragment$4 { void <init>(net.rdrei.android.dirchooser.DirectoryChooserFragment); }
-keepclassmembers class com.kobakei.ratethisapp.RateThisApp$4 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class okio.RealBufferedSink { void flush(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.PrefsFragment$3 { boolean onPreferenceClick(android.preference.Preference); }
-keepclassmembers class okio.RealBufferedSink { okio.Timeout timeout(); }
-keepclassmembers class okio.RealBufferedSink { void write(okio.Buffer,long); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink write(okio.ByteString); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink write(byte[]); }
-keepclassmembers class au.com.wallaceit.reddinator.service.BootReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeShort(int); }
-keepclassmembers class okhttp3.Address { void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector); }
-keepclassmembers class okio.RealBufferedSink { void close(); }
-keepclassmembers class okio.RealBufferedSink { long writeAll(okio.Source); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeInt(int); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeHexadecimalUnsignedLong(long); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink write(byte[],int,int); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { void <init>(); }
-keepclassmembers class okhttp3.Address { javax.net.ssl.HostnameVerifier hostnameVerifier(); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeByte(int); }
-keepclassmembers class okio.RealBufferedSink { okio.BufferedSink writeUtf8(java.lang.String); }
-keepclassmembers class okhttp3.Address { java.net.Proxy proxy(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { long contentLength(); }
-keepclassmembers class okhttp3.Address { int hashCode(); }
-keepclassmembers class okhttp3.Address { boolean equals(java.lang.Object); }
-keepclassmembers class okhttp3.Address { java.net.ProxySelector proxySelector(); }
-keepclassmembers class okhttp3.Address { okhttp3.HttpUrl url(); }
-keepclassmembers class okhttp3.Address { okhttp3.Authenticator proxyAuthenticator(); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { okhttp3.MediaType contentType(); }
-keepclassmembers class okhttp3.Address { java.util.List protocols(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { java.util.Map access$200(int,java.util.Calendar,java.util.Locale); }
-keepclassmembers class okhttp3.Address { okhttp3.CertificatePinner certificatePinner(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { java.lang.StringBuilder access$100(java.lang.StringBuilder,java.lang.String,boolean); }
-keepclassmembers class okhttp3.Address { javax.net.SocketFactory socketFactory(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { void <init>(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { java.util.Map getDisplayNames(int,java.util.Calendar,java.util.Locale); }
-keepclassmembers class okhttp3.Address { java.util.List connectionSpecs(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { java.util.concurrent.ConcurrentMap getCache(int); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { java.lang.StringBuilder escapeRegex(java.lang.StringBuilder,java.lang.String,boolean); }
-keepclassmembers class okhttp3.internal.cache.CacheInterceptor$1 { okio.BufferedSource source(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { void init(java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(java.lang.String,java.util.Calendar); }
-keepclassmembers class okhttp3.Address { okhttp3.Dns dns(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$StringLiteral { void appendTo(java.lang.StringBuffer,java.util.Calendar); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$StringLiteral { void <init>(java.lang.String); }
-keepclassmembers class okhttp3.Address { javax.net.ssl.SSLSocketFactory sslSocketFactory(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { boolean isNextNumber(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDateParser { int getFieldWidth(); }
-keepclassmembers class org.apache.commons.lang3.time.FastDatePrinter$StringLiteral { int estimateLength(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper$1 { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity,android.app.Activity); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper$1 { float getInterpolation(float); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround { void possiblyResizeChildOfContent(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround { void access$500(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper$Callback { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround { int computeUsableHeight(); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper$Callback { int clampViewPositionHorizontal(android.view.View,int,int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper$Callback { boolean onEdgeLock(int); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$ViewHolder { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter,au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$1); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper$Callback { int getOrderedChildIndex(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$1 { boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent); }
-keepclassmembers class au.com.wallaceit.reddinator.ui.SubredditFeedAdapter$ViewHolder { void <init>(au.com.wallaceit.reddinator.ui.SubredditFeedAdapter); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$AndroidBug5497Workaround { void <init>(au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity,android.app.Activity,au.com.wallaceit.reddinator.activity.CommentsContextDialogActivity$1); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$1 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper$Callback { void onEdgeTouched(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.service.UpgradeReceiver { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.service.UpgradeReceiver { void onReceive(android.content.Context,android.content.Intent); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$5 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.service.UpgradeReceiver { void deleteRecursive(java.io.File); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6); }
-keepclassmembers class okhttp3.internal.framed.StreamResetException { void <init>(okhttp3.internal.framed.ErrorCode); }
-keepclassmembers class au.com.wallaceit.reddinator.service.UpgradeReceiver { void migrateFeedData(int); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper$Callback { int getViewHorizontalDragRange(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$5 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.internal.framed.PushObserver { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.time.StopWatch$State$4 { void <init>(java.lang.String,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$6$1 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$1 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter); }
-keepclassmembers class com.sothree.slidinguppanel.ViewDragHelper$Callback { void onEdgeDragStarted(int,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$1 { int compare(org.json.JSONObject,org.json.JSONObject); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$1 { int compare(java.lang.Object,java.lang.Object); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { okhttp3.Address createAddress(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { okhttp3.Request followUpRequest(okhttp3.Response); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { boolean recover(java.io.IOException,boolean,okhttp3.Request); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$8 { void onCancel(android.content.DialogInterface); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MySubredditsAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { boolean isRecoverable(java.io.IOException,boolean); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MainActivity$8 { void <init>(au.com.wallaceit.reddinator.activity.MainActivity); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { void <clinit>(); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { void <init>(okhttp3.OkHttpClient); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { boolean allowReadOnlyDirectory(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { void <init>(android.os.Parcel,net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$1); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { void <init>(java.lang.String,java.lang.String,boolean,boolean,net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig$1); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { void <init>(android.os.Parcel); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { boolean allowNewDirectoryNameModification(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$14 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$14 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity,java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { void <init>(java.lang.String,java.lang.String,boolean,boolean); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { okhttp3.Response intercept(okhttp3.Interceptor$Chain); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { double doubleValue(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { void <init>(java.lang.Number); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { void <init>(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { int compareTo(java.lang.Object); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { boolean sameConnection(okhttp3.Response,okhttp3.HttpUrl); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { boolean equals(java.lang.Object); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { java.lang.String newDirectoryName(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { void <init>(int); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { int hashCode(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { void <init>(java.lang.String); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { java.lang.String toString(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { boolean equals(java.lang.Object); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { int compareTo(org.apache.commons.lang3.mutable.MutableInt); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { java.util.List allSubjectAltNames(java.security.cert.X509Certificate); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { void <clinit>(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { void increment(); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { java.lang.String toString(); }
-keepclassmembers class okhttp3.internal.http.RetryAndFollowUpInterceptor { boolean isForWebSocket(); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { void <init>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$2 { void <init>(au.com.wallaceit.reddinator.activity.MessagesActivity,java.lang.String); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.MessagesActivity$2 { void run(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { java.lang.String initialDirectory(); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verifyHostname(java.lang.String,java.lang.String); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { int intValue(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$3 { void onClick(android.view.View); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verify(java.lang.String,java.security.cert.X509Certificate); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache { void <clinit>(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$2 { void <init>(au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter); }
-keepclassmembers class okhttp3.internal.tls.OkHostnameVerifier { boolean verify(java.lang.String,javax.net.ssl.SSLSession); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.AboutDialog$3 { void <init>(au.com.wallaceit.reddinator.activity.AboutDialog); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache { java.text.Format getInstance(java.lang.String,java.util.TimeZone,java.util.Locale); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { int hashCode(); }
-keepclassmembers class net.rdrei.android.dirchooser.AutoParcel_DirectoryChooserConfig { void writeToParcel(android.os.Parcel,int); }
-keepclassmembers class org.apache.commons.lang3.mutable.MutableInt { long longValue(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SubredditSelectActivity$MyMultisAdapter$2 { void onClick(android.view.View); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$3 { void <init>(au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2,android.widget.EditText,java.lang.String); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { void doneReading(); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { void <init>(okio.BufferedSource); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { okio.ByteString readByteString(); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.FeedItemDialogActivity$2$3 { void onClick(android.content.DialogInterface,int); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { int access$000(okhttp3.internal.framed.NameValueBlockReader); }
-keepclassmembers class okhttp3.Request$Builder { void <init>(); }
-keepclassmembers class okhttp3.Request$Builder { void <init>(okhttp3.Request); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { int access$002(okhttp3.internal.framed.NameValueBlockReader,int); }
-keepclassmembers class org.apache.commons.lang3.time.FormatCache { void <init>(); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Headers$Builder access$200(okhttp3.Request$Builder); }
-keepclassmembers class okhttp3.Request$Builder { void <init>(okhttp3.Request,okhttp3.Request$1); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request build(); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { void close(); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.HttpUrl access$000(okhttp3.Request$Builder); }
-keepclassmembers class okhttp3.internal.framed.NameValueBlockReader { java.util.List readNameValueBlock(int); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$8 { void <init>(au.com.wallaceit.reddinator.activity.SearchActivity); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder removeHeader(java.lang.String); }
-keepclassmembers class okhttp3.Request$Builder { java.lang.String access$100(okhttp3.Request$Builder); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.RequestBody access$300(okhttp3.Request$Builder); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder headers(okhttp3.Headers); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder url(java.lang.String); }
-keepclassmembers class okhttp3.Request$Builder { java.lang.Object access$400(okhttp3.Request$Builder); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder delete(okhttp3.RequestBody); }
-keepclassmembers class au.com.wallaceit.reddinator.activity.SearchActivity$8 { void onItemClick(android.widget.AdapterView,android.view.View,int,long); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder url(okhttp3.HttpUrl); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder post(okhttp3.RequestBody); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder get(); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder put(okhttp3.RequestBody); }
-keepclassmembers class okhttp3.Request$Builder { okhttp3.Request$Builder header(java.lang.String,java.lang.String); }
